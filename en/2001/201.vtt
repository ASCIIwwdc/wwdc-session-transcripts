WEBVTT
Kind: captions
Language: en

00:00:03.410 --> 00:00:08.210 align:start position:0%
 
good<00:00:04.410><c> morning</c><00:00:05.629><c> welcome</c><00:00:06.629><c> to</c><00:00:06.750><c> session</c><00:00:07.020><c> 201</c><00:00:07.620><c> how</c>

00:00:08.210 --> 00:00:08.220 align:start position:0%
good morning welcome to session 201 how
 

00:00:08.220 --> 00:00:10.190 align:start position:0%
good morning welcome to session 201 how
threading<00:00:08.639><c> can</c><00:00:09.179><c> benefit</c><00:00:09.510><c> your</c><00:00:09.630><c> application</c>

00:00:10.190 --> 00:00:10.200 align:start position:0%
threading can benefit your application
 

00:00:10.200 --> 00:00:11.660 align:start position:0%
threading can benefit your application
on<00:00:10.290><c> Mac</c><00:00:10.469><c> OS</c><00:00:10.710><c> 10</c><00:00:10.740><c> my</c><00:00:11.010><c> name</c><00:00:11.160><c> is</c><00:00:11.280><c> Mark</c><00:00:11.460><c> Tozer</c>

00:00:11.660 --> 00:00:11.670 align:start position:0%
on Mac OS 10 my name is Mark Tozer
 

00:00:11.670 --> 00:00:13.280 align:start position:0%
on Mac OS 10 my name is Mark Tozer
belches<00:00:12.090><c> I'm</c><00:00:12.240><c> the</c><00:00:12.360><c> desktop</c><00:00:12.780><c> technology</c>

00:00:13.280 --> 00:00:13.290 align:start position:0%
belches I'm the desktop technology
 

00:00:13.290 --> 00:00:18.830 align:start position:0%
belches I'm the desktop technology
manager<00:00:13.620><c> in</c><00:00:13.830><c> developer</c><00:00:14.519><c> relations</c><00:00:17.359><c> so</c><00:00:18.359><c> today</c>

00:00:18.830 --> 00:00:18.840 align:start position:0%
manager in developer relations so today
 

00:00:18.840 --> 00:00:20.779 align:start position:0%
manager in developer relations so today
what<00:00:19.170><c> I'd</c><00:00:19.260><c> like</c><00:00:19.410><c> to</c><00:00:19.560><c> do</c><00:00:19.680><c> is</c><00:00:19.920><c> start</c><00:00:20.640><c> the</c>

00:00:20.779 --> 00:00:20.789 align:start position:0%
what I'd like to do is start the
 

00:00:20.789 --> 00:00:23.330 align:start position:0%
what I'd like to do is start the
conversation<00:00:21.539><c> actually</c><00:00:22.199><c> first</c><00:00:22.380><c> of</c><00:00:22.500><c> all</c><00:00:22.650><c> I've</c>

00:00:23.330 --> 00:00:23.340 align:start position:0%
conversation actually first of all I've
 

00:00:23.340 --> 00:00:24.950 align:start position:0%
conversation actually first of all I've
gotten<00:00:23.670><c> kind</c><00:00:24.000><c> of</c><00:00:24.119><c> feedback</c><00:00:24.330><c> from</c><00:00:24.600><c> the</c><00:00:24.689><c> fact</c>

00:00:24.950 --> 00:00:24.960 align:start position:0%
gotten kind of feedback from the fact
 

00:00:24.960 --> 00:00:27.710 align:start position:0%
gotten kind of feedback from the fact
that<00:00:25.050><c> our</c><00:00:25.170><c> session</c><00:00:25.650><c> title</c><00:00:26.279><c> is</c><00:00:26.400><c> the</c><00:00:26.720><c> longest</c>

00:00:27.710 --> 00:00:27.720 align:start position:0%
that our session title is the longest
 

00:00:27.720 --> 00:00:29.000 align:start position:0%
that our session title is the longest
one<00:00:27.840><c> at</c><00:00:27.960><c> the</c><00:00:28.050><c> set</c><00:00:28.230><c> at</c><00:00:28.380><c> the</c><00:00:28.500><c> conference</c><00:00:28.890><c> this</c>

00:00:29.000 --> 00:00:29.010 align:start position:0%
one at the set at the conference this
 

00:00:29.010 --> 00:00:30.980 align:start position:0%
one at the set at the conference this
year<00:00:29.070><c> so</c><00:00:29.429><c> I've</c><00:00:29.580><c> been</c><00:00:29.730><c> asked</c><00:00:30.000><c> to</c><00:00:30.119><c> take</c><00:00:30.779><c> some</c>

00:00:30.980 --> 00:00:30.990 align:start position:0%
year so I've been asked to take some
 

00:00:30.990 --> 00:00:32.720 align:start position:0%
year so I've been asked to take some
input<00:00:31.170><c> at</c><00:00:31.619><c> the</c><00:00:31.740><c> end</c><00:00:31.980><c> of</c><00:00:32.070><c> the</c><00:00:32.130><c> session</c><00:00:32.309><c> for</c>

00:00:32.720 --> 00:00:32.730 align:start position:0%
input at the end of the session for
 

00:00:32.730 --> 00:00:35.810 align:start position:0%
input at the end of the session for
title<00:00:33.200><c> suggestion</c><00:00:34.200><c> so</c><00:00:34.500><c> make</c><00:00:35.370><c> sure</c><00:00:35.399><c> you</c><00:00:35.640><c> give</c>

00:00:35.810 --> 00:00:35.820 align:start position:0%
title suggestion so make sure you give
 

00:00:35.820 --> 00:00:37.520 align:start position:0%
title suggestion so make sure you give
me<00:00:35.910><c> some</c><00:00:36.120><c> input</c><00:00:36.270><c> I</c><00:00:36.540><c> need</c><00:00:36.780><c> to</c><00:00:37.050><c> shorten</c><00:00:37.500><c> that</c>

00:00:37.520 --> 00:00:37.530 align:start position:0%
me some input I need to shorten that
 

00:00:37.530 --> 00:00:42.139 align:start position:0%
me some input I need to shorten that
here<00:00:37.860><c> is</c><00:00:38.160><c> what</c><00:00:38.340><c> I'm</c><00:00:38.430><c> being</c><00:00:38.550><c> told</c><00:00:41.059><c> what</c><00:00:42.059><c> I'd</c>

00:00:42.139 --> 00:00:42.149 align:start position:0%
here is what I'm being told what I'd
 

00:00:42.149 --> 00:00:43.520 align:start position:0%
here is what I'm being told what I'd
like<00:00:42.270><c> to</c><00:00:42.390><c> do</c><00:00:42.480><c> is</c><00:00:42.660><c> kind</c><00:00:42.780><c> of</c><00:00:42.899><c> go</c><00:00:43.050><c> over</c><00:00:43.200><c> some</c><00:00:43.500><c> of</c>

00:00:43.520 --> 00:00:43.530 align:start position:0%
like to do is kind of go over some of
 

00:00:43.530 --> 00:00:45.290 align:start position:0%
like to do is kind of go over some of
the<00:00:43.680><c> ways</c><00:00:44.070><c> that</c><00:00:44.100><c> Apple</c><00:00:44.700><c> computer</c><00:00:45.059><c> has</c><00:00:45.090><c> been</c>

00:00:45.290 --> 00:00:45.300 align:start position:0%
the ways that Apple computer has been
 

00:00:45.300 --> 00:00:48.290 align:start position:0%
the ways that Apple computer has been
working<00:00:46.230><c> to</c><00:00:46.620><c> optimize</c><00:00:46.890><c> system</c><00:00:47.789><c> performance</c>

00:00:48.290 --> 00:00:48.300 align:start position:0%
working to optimize system performance
 

00:00:48.300 --> 00:00:50.270 align:start position:0%
working to optimize system performance
and<00:00:48.539><c> some</c><00:00:49.110><c> of</c><00:00:49.200><c> the</c><00:00:49.260><c> ways</c><00:00:49.379><c> today</c><00:00:49.770><c> we'll</c><00:00:50.070><c> talk</c>

00:00:50.270 --> 00:00:50.280 align:start position:0%
and some of the ways today we'll talk
 

00:00:50.280 --> 00:00:52.130 align:start position:0%
and some of the ways today we'll talk
about<00:00:50.340><c> how</c><00:00:50.700><c> you</c><00:00:50.760><c> can</c><00:00:51.210><c> optimize</c><00:00:51.449><c> system</c>

00:00:52.130 --> 00:00:52.140 align:start position:0%
about how you can optimize system
 

00:00:52.140 --> 00:00:53.959 align:start position:0%
about how you can optimize system
performance<00:00:52.739><c> through</c><00:00:53.010><c> hardware</c><00:00:53.760><c> and</c>

00:00:53.959 --> 00:00:53.969 align:start position:0%
performance through hardware and
 

00:00:53.969 --> 00:00:58.310 align:start position:0%
performance through hardware and
software<00:00:55.430><c> so</c><00:00:56.430><c> what</c><00:00:57.420><c> I'd</c><00:00:57.510><c> like</c><00:00:57.600><c> to</c><00:00:57.719><c> do</c><00:00:57.870><c> is</c><00:00:58.050><c> kind</c>

00:00:58.310 --> 00:00:58.320 align:start position:0%
software so what I'd like to do is kind
 

00:00:58.320 --> 00:01:00.020 align:start position:0%
software so what I'd like to do is kind
of<00:00:58.379><c> take</c><00:00:58.559><c> a</c><00:00:58.590><c> look</c><00:00:58.770><c> at</c><00:00:58.949><c> how</c><00:00:59.160><c> you</c><00:00:59.789><c> know</c><00:00:59.910><c> we</c>

00:01:00.020 --> 00:01:00.030 align:start position:0%
of take a look at how you know we
 

00:01:00.030 --> 00:01:03.080 align:start position:0%
of take a look at how you know we
introduced<00:01:00.390><c> systems</c><00:01:01.129><c> at</c><00:01:02.129><c> these</c><00:01:02.460><c> keynote</c><00:01:02.910><c> at</c>

00:01:03.080 --> 00:01:03.090 align:start position:0%
introduced systems at these keynote at
 

00:01:03.090 --> 00:01:04.880 align:start position:0%
introduced systems at these keynote at
shows<00:01:03.600><c> like</c><00:01:03.780><c> Mac</c><00:01:03.989><c> world</c><00:01:04.199><c> and</c><00:01:04.350><c> so</c><00:01:04.439><c> forth</c><00:01:04.710><c> and</c>

00:01:04.880 --> 00:01:04.890 align:start position:0%
shows like Mac world and so forth and
 

00:01:04.890 --> 00:01:07.910 align:start position:0%
shows like Mac world and so forth and
you<00:01:05.760><c> know</c><00:01:05.850><c> aside</c><00:01:06.180><c> from</c><00:01:06.420><c> the</c><00:01:06.630><c> features</c><00:01:06.990><c> of</c><00:01:07.020><c> new</c>

00:01:07.910 --> 00:01:07.920 align:start position:0%
you know aside from the features of new
 

00:01:07.920 --> 00:01:10.880 align:start position:0%
you know aside from the features of new
functionality<00:01:08.369><c> design</c><00:01:09.650><c> performance</c><00:01:10.650><c> is</c><00:01:10.770><c> one</c>

00:01:10.880 --> 00:01:10.890 align:start position:0%
functionality design performance is one
 

00:01:10.890 --> 00:01:12.560 align:start position:0%
functionality design performance is one
of<00:01:10.979><c> the</c><00:01:11.040><c> key</c><00:01:11.250><c> customer</c><00:01:11.880><c> messages</c><00:01:12.299><c> that</c><00:01:12.479><c> we</c>

00:01:12.560 --> 00:01:12.570 align:start position:0%
of the key customer messages that we
 

00:01:12.570 --> 00:01:15.800 align:start position:0%
of the key customer messages that we
deliver<00:01:12.900><c> to</c><00:01:12.960><c> our</c><00:01:13.860><c> customers</c><00:01:14.640><c> customers</c><00:01:15.540><c> wants</c>

00:01:15.800 --> 00:01:15.810 align:start position:0%
deliver to our customers customers wants
 

00:01:15.810 --> 00:01:17.450 align:start position:0%
deliver to our customers customers wants
to<00:01:15.900><c> be</c><00:01:16.049><c> able</c><00:01:16.170><c> to</c><00:01:16.320><c> say</c><00:01:16.560><c> that</c><00:01:16.799><c> they're</c><00:01:17.220><c> gonna</c><00:01:17.310><c> buy</c>

00:01:17.450 --> 00:01:17.460 align:start position:0%
to be able to say that they're gonna buy
 

00:01:17.460 --> 00:01:18.980 align:start position:0%
to be able to say that they're gonna buy
this<00:01:17.520><c> new</c><00:01:17.790><c> piece</c><00:01:17.970><c> of</c><00:01:18.000><c> hardware</c><00:01:18.150><c> their</c>

00:01:18.980 --> 00:01:18.990 align:start position:0%
this new piece of hardware their
 

00:01:18.990 --> 00:01:20.240 align:start position:0%
this new piece of hardware their
applications<00:01:19.530><c> are</c><00:01:19.590><c> going</c><00:01:19.619><c> to</c><00:01:19.770><c> be</c><00:01:19.830><c> able</c><00:01:19.920><c> to</c><00:01:20.040><c> run</c>

00:01:20.240 --> 00:01:20.250 align:start position:0%
applications are going to be able to run
 

00:01:20.250 --> 00:01:23.539 align:start position:0%
applications are going to be able to run
faster<00:01:20.850><c> right</c><00:01:21.360><c> so</c><00:01:22.080><c> performance</c><00:01:23.070><c> is</c><00:01:23.220><c> a</c><00:01:23.280><c> key</c>

00:01:23.539 --> 00:01:23.549 align:start position:0%
faster right so performance is a key
 

00:01:23.549 --> 00:01:26.120 align:start position:0%
faster right so performance is a key
message<00:01:23.790><c> here</c><00:01:24.240><c> how</c><00:01:24.960><c> does</c><00:01:25.170><c> Apple</c><00:01:25.500><c> to</c><00:01:25.740><c> address</c>

00:01:26.120 --> 00:01:26.130 align:start position:0%
message here how does Apple to address
 

00:01:26.130 --> 00:01:28.190 align:start position:0%
message here how does Apple to address
performance<00:01:26.640><c> aside</c><00:01:27.240><c> from</c><00:01:27.450><c> increase</c><00:01:27.900><c> in</c><00:01:28.080><c> the</c>

00:01:28.190 --> 00:01:28.200 align:start position:0%
performance aside from increase in the
 

00:01:28.200 --> 00:01:31.190 align:start position:0%
performance aside from increase in the
megahertz<00:01:28.670><c> well</c><00:01:29.670><c> they're</c><00:01:30.270><c> do</c><00:01:30.450><c> different</c><00:01:31.079><c> ways</c>

00:01:31.190 --> 00:01:31.200 align:start position:0%
megahertz well they're do different ways
 

00:01:31.200 --> 00:01:33.920 align:start position:0%
megahertz well they're do different ways
we<00:01:31.350><c> can</c><00:01:31.470><c> do</c><00:01:31.590><c> that</c><00:01:31.770><c> we</c><00:01:32.579><c> can</c><00:01:32.850><c> use</c><00:01:33.240><c> the</c><00:01:33.420><c> processor</c>

00:01:33.920 --> 00:01:33.930 align:start position:0%
we can do that we can use the processor
 

00:01:33.930 --> 00:01:36.350 align:start position:0%
we can do that we can use the processor
technology<00:01:34.140><c> the</c><00:01:34.650><c> g4</c><00:01:35.100><c> that</c><00:01:35.670><c> we've</c><00:01:35.820><c> migrated</c>

00:01:36.350 --> 00:01:36.360 align:start position:0%
technology the g4 that we've migrated
 

00:01:36.360 --> 00:01:38.600 align:start position:0%
technology the g4 that we've migrated
throughout<00:01:36.750><c> our</c><00:01:36.960><c> product</c><00:01:37.500><c> line</c><00:01:37.650><c> so</c><00:01:38.220><c> the</c><00:01:38.460><c> most</c>

00:01:38.600 --> 00:01:38.610 align:start position:0%
throughout our product line so the most
 

00:01:38.610 --> 00:01:40.520 align:start position:0%
throughout our product line so the most
recent<00:01:39.060><c> addition</c><00:01:39.390><c> has</c><00:01:39.570><c> been</c><00:01:39.600><c> the</c><00:01:39.900><c> titanium</c>

00:01:40.520 --> 00:01:40.530 align:start position:0%
recent addition has been the titanium
 

00:01:40.530 --> 00:01:43.190 align:start position:0%
recent addition has been the titanium
PowerBook<00:01:40.950><c> g4</c><00:01:41.570><c> other</c><00:01:42.570><c> ways</c><00:01:42.810><c> we've</c><00:01:42.990><c> done</c><00:01:43.020><c> that</c>

00:01:43.190 --> 00:01:43.200 align:start position:0%
PowerBook g4 other ways we've done that
 

00:01:43.200 --> 00:01:45.499 align:start position:0%
PowerBook g4 other ways we've done that
is<00:01:43.350><c> last</c><00:01:43.829><c> year</c><00:01:44.040><c> at</c><00:01:44.220><c> Macworld</c><00:01:44.430><c> New</c><00:01:44.729><c> York</c><00:01:44.909><c> we</c>

00:01:45.499 --> 00:01:45.509 align:start position:0%
is last year at Macworld New York we
 

00:01:45.509 --> 00:01:48.050 align:start position:0%
is last year at Macworld New York we
introduced<00:01:45.869><c> dual</c><00:01:46.259><c> processor</c><00:01:46.799><c> systems</c><00:01:47.369><c> so</c><00:01:47.939><c> the</c>

00:01:48.050 --> 00:01:48.060 align:start position:0%
introduced dual processor systems so the
 

00:01:48.060 --> 00:01:50.420 align:start position:0%
introduced dual processor systems so the
ability<00:01:48.210><c> to</c><00:01:48.450><c> now</c><00:01:48.689><c> have</c><00:01:48.990><c> to</c><00:01:49.560><c> g4</c><00:01:49.890><c> processors</c>

00:01:50.420 --> 00:01:50.430 align:start position:0%
ability to now have to g4 processors
 

00:01:50.430 --> 00:01:53.840 align:start position:0%
ability to now have to g4 processors
with<00:01:51.000><c> to</c><00:01:51.180><c> g4</c><00:01:51.600><c> velocity</c><00:01:52.380><c> engine</c><00:01:52.680><c> available</c><00:01:53.310><c> to</c>

00:01:53.840 --> 00:01:53.850 align:start position:0%
with to g4 velocity engine available to
 

00:01:53.850 --> 00:01:58.039 align:start position:0%
with to g4 velocity engine available to
you<00:01:54.030><c> as</c><00:01:54.240><c> well</c><00:01:55.310><c> other</c><00:01:56.310><c> ways</c><00:01:56.549><c> is</c><00:01:56.759><c> the</c><00:01:57.420><c> unified</c>

00:01:58.039 --> 00:01:58.049 align:start position:0%
you as well other ways is the unified
 

00:01:58.049 --> 00:02:00.709 align:start position:0%
you as well other ways is the unified
chip<00:01:58.380><c> architecture</c><00:01:58.560><c> for</c><00:01:59.040><c> i/o</c><00:01:59.250><c> on</c><00:01:59.670><c> the</c><00:02:00.149><c> bus</c><00:02:00.299><c> has</c>

00:02:00.709 --> 00:02:00.719 align:start position:0%
chip architecture for i/o on the bus has
 

00:02:00.719 --> 00:02:03.170 align:start position:0%
chip architecture for i/o on the bus has
also<00:02:00.960><c> been</c><00:02:01.170><c> improved</c><00:02:01.409><c> so</c><00:02:02.070><c> information</c><00:02:02.610><c> can</c><00:02:03.090><c> be</c>

00:02:03.170 --> 00:02:03.180 align:start position:0%
also been improved so information can be
 

00:02:03.180 --> 00:02:04.459 align:start position:0%
also been improved so information can be
passed<00:02:03.329><c> along</c><00:02:03.570><c> the</c><00:02:03.810><c> bus</c><00:02:03.960><c> much</c><00:02:04.259><c> more</c>

00:02:04.459 --> 00:02:04.469 align:start position:0%
passed along the bus much more
 

00:02:04.469 --> 00:02:08.660 align:start position:0%
passed along the bus much more
efficiently<00:02:04.920><c> so</c><00:02:07.129><c> what</c><00:02:08.129><c> are</c><00:02:08.220><c> the</c><00:02:08.280><c> ways</c><00:02:08.310><c> that</c>

00:02:08.660 --> 00:02:08.670 align:start position:0%
efficiently so what are the ways that
 

00:02:08.670 --> 00:02:10.190 align:start position:0%
efficiently so what are the ways that
you<00:02:08.789><c> as</c><00:02:08.819><c> a</c><00:02:08.940><c> developer</c><00:02:09.119><c> can</c><00:02:09.539><c> take</c><00:02:09.750><c> advantage</c><00:02:10.110><c> of</c>

00:02:10.190 --> 00:02:10.200 align:start position:0%
you as a developer can take advantage of
 

00:02:10.200 --> 00:02:12.559 align:start position:0%
you as a developer can take advantage of
these<00:02:10.349><c> technologies</c><00:02:10.830><c> well</c><00:02:11.550><c> there</c><00:02:12.030><c> are</c><00:02:12.150><c> api's</c>

00:02:12.559 --> 00:02:12.569 align:start position:0%
these technologies well there are api's
 

00:02:12.569 --> 00:02:13.730 align:start position:0%
these technologies well there are api's
that<00:02:12.780><c> we</c><00:02:12.870><c> put</c><00:02:13.080><c> out</c><00:02:13.200><c> there</c>

00:02:13.730 --> 00:02:13.740 align:start position:0%
that we put out there
 

00:02:13.740 --> 00:02:16.250 align:start position:0%
that we put out there
so<00:02:14.010><c> the</c><00:02:14.100><c> NPAPI</c><00:02:14.520><c> has</c><00:02:14.970><c> been</c><00:02:15.120><c> out</c><00:02:15.240><c> for</c><00:02:16.140><c> at</c><00:02:16.200><c> least</c>

00:02:16.250 --> 00:02:16.260 align:start position:0%
so the NPAPI has been out for at least
 

00:02:16.260 --> 00:02:19.820 align:start position:0%
so the NPAPI has been out for at least
three<00:02:16.590><c> or</c><00:02:16.710><c> four</c><00:02:16.740><c> years</c><00:02:18.140><c> velocity</c><00:02:19.140><c> engine</c><00:02:19.440><c> API</c>

00:02:19.820 --> 00:02:19.830 align:start position:0%
three or four years velocity engine API
 

00:02:19.830 --> 00:02:21.680 align:start position:0%
three or four years velocity engine API
has<00:02:20.400><c> also</c><00:02:20.610><c> been</c><00:02:20.880><c> out</c><00:02:20.970><c> there</c><00:02:21.180><c> so</c><00:02:21.330><c> those</c><00:02:21.480><c> are</c>

00:02:21.680 --> 00:02:21.690 align:start position:0%
has also been out there so those are
 

00:02:21.690 --> 00:02:23.150 align:start position:0%
has also been out there so those are
ways<00:02:21.840><c> that</c><00:02:21.870><c> you</c><00:02:22.050><c> can</c><00:02:22.140><c> optimize</c><00:02:22.440><c> your</c><00:02:22.770><c> code</c><00:02:22.980><c> to</c>

00:02:23.150 --> 00:02:23.160 align:start position:0%
ways that you can optimize your code to
 

00:02:23.160 --> 00:02:24.830 align:start position:0%
ways that you can optimize your code to
take<00:02:23.280><c> advantage</c><00:02:23.670><c> of</c><00:02:23.820><c> some</c><00:02:24.240><c> of</c><00:02:24.270><c> these</c><00:02:24.420><c> hardware</c>

00:02:24.830 --> 00:02:24.840 align:start position:0%
take advantage of some of these hardware
 

00:02:24.840 --> 00:02:27.410 align:start position:0%
take advantage of some of these hardware
technologies<00:02:25.640><c> multitask</c><00:02:26.640><c> any</c><00:02:26.880><c> multi</c><00:02:27.150><c> thread</c>

00:02:27.410 --> 00:02:27.420 align:start position:0%
technologies multitask any multi thread
 

00:02:27.420 --> 00:02:30.140 align:start position:0%
technologies multitask any multi thread
multi-threaded<00:02:28.020><c> are</c><00:02:28.110><c> also</c><00:02:28.790><c> ways</c><00:02:29.790><c> that</c><00:02:29.820><c> you</c>

00:02:30.140 --> 00:02:30.150 align:start position:0%
multi-threaded are also ways that you
 

00:02:30.150 --> 00:02:32.000 align:start position:0%
multi-threaded are also ways that you
can<00:02:30.330><c> increase</c><00:02:30.660><c> performance</c><00:02:31.290><c> just</c><00:02:31.770><c> through</c>

00:02:32.000 --> 00:02:32.010 align:start position:0%
can increase performance just through
 

00:02:32.010 --> 00:02:33.350 align:start position:0%
can increase performance just through
the<00:02:32.100><c> application</c><00:02:32.670><c> and</c><00:02:32.790><c> not</c><00:02:32.880><c> have</c><00:02:33.090><c> to</c><00:02:33.180><c> worry</c>

00:02:33.350 --> 00:02:33.360 align:start position:0%
the application and not have to worry
 

00:02:33.360 --> 00:02:35.870 align:start position:0%
the application and not have to worry
about<00:02:33.390><c> the</c><00:02:33.660><c> processor</c><00:02:34.080><c> being</c><00:02:34.260><c> faster</c><00:02:34.740><c> at</c><00:02:35.640><c> the</c>

00:02:35.870 --> 00:02:35.880 align:start position:0%
about the processor being faster at the
 

00:02:35.880 --> 00:02:37.610 align:start position:0%
about the processor being faster at the
root<00:02:36.030><c> of</c><00:02:36.120><c> all</c><00:02:36.240><c> of</c><00:02:36.300><c> this</c><00:02:36.450><c> is</c><00:02:36.630><c> obviously</c><00:02:36.960><c> OS</c><00:02:37.350><c> 10</c>

00:02:37.610 --> 00:02:37.620 align:start position:0%
root of all of this is obviously OS 10
 

00:02:37.620 --> 00:02:38.810 align:start position:0%
root of all of this is obviously OS 10
and<00:02:37.830><c> this</c><00:02:38.220><c> is</c><00:02:38.280><c> what</c><00:02:38.460><c> you're</c><00:02:38.550><c> gonna</c><00:02:38.670><c> learn</c>

00:02:38.810 --> 00:02:38.820 align:start position:0%
and this is what you're gonna learn
 

00:02:38.820 --> 00:02:40.820 align:start position:0%
and this is what you're gonna learn
throughout<00:02:39.120><c> the</c><00:02:39.270><c> whole</c><00:02:39.420><c> week</c><00:02:39.630><c> of</c><00:02:39.900><c> how</c><00:02:40.290><c> OS</c><00:02:40.620><c> 10</c>

00:02:40.820 --> 00:02:40.830 align:start position:0%
throughout the whole week of how OS 10
 

00:02:40.830 --> 00:02:42.380 align:start position:0%
throughout the whole week of how OS 10
provides<00:02:41.010><c> all</c><00:02:41.370><c> the</c><00:02:41.400><c> functionality</c><00:02:41.550><c> and</c>

00:02:42.380 --> 00:02:42.390 align:start position:0%
provides all the functionality and
 

00:02:42.390 --> 00:02:44.720 align:start position:0%
provides all the functionality and
abilities<00:02:43.110><c> for</c><00:02:43.350><c> you</c><00:02:43.500><c> to</c><00:02:43.980><c> optimize</c><00:02:44.220><c> your</c><00:02:44.400><c> code</c>

00:02:44.720 --> 00:02:44.730 align:start position:0%
abilities for you to optimize your code
 

00:02:44.730 --> 00:02:46.520 align:start position:0%
abilities for you to optimize your code
without<00:02:45.210><c> having</c><00:02:45.330><c> to</c><00:02:45.600><c> worry</c><00:02:45.750><c> about</c><00:02:45.810><c> when</c><00:02:46.410><c> is</c>

00:02:46.520 --> 00:02:46.530 align:start position:0%
without having to worry about when is
 

00:02:46.530 --> 00:02:47.600 align:start position:0%
without having to worry about when is
Apple<00:02:46.770><c> going</c><00:02:46.890><c> to</c><00:02:46.950><c> deliver</c><00:02:47.220><c> a</c><00:02:47.310><c> gigahertz</c>

00:02:47.600 --> 00:02:47.610 align:start position:0%
Apple going to deliver a gigahertz
 

00:02:47.610 --> 00:02:50.420 align:start position:0%
Apple going to deliver a gigahertz
processor<00:02:48.000><c> well</c><00:02:48.960><c> today</c><00:02:49.620><c> what</c><00:02:50.070><c> you</c><00:02:50.190><c> should</c><00:02:50.340><c> be</c>

00:02:50.420 --> 00:02:50.430 align:start position:0%
processor well today what you should be
 

00:02:50.430 --> 00:02:52.070 align:start position:0%
processor well today what you should be
really<00:02:50.640><c> asking</c><00:02:50.940><c> yourself</c><00:02:51.270><c> is</c><00:02:51.450><c> when</c><00:02:51.900><c> are</c><00:02:51.990><c> you</c>

00:02:52.070 --> 00:02:52.080 align:start position:0%
really asking yourself is when are you
 

00:02:52.080 --> 00:02:54.080 align:start position:0%
really asking yourself is when are you
going<00:02:52.260><c> to</c><00:02:52.350><c> optimize</c><00:02:52.590><c> for</c><00:02:53.340><c> the</c><00:02:53.490><c> api's</c><00:02:53.790><c> that</c><00:02:54.000><c> we</c>

00:02:54.080 --> 00:02:54.090 align:start position:0%
going to optimize for the api's that we
 

00:02:54.090 --> 00:02:56.690 align:start position:0%
going to optimize for the api's that we
have<00:02:54.210><c> today</c><00:02:54.360><c> and</c><00:02:55.130><c> increase</c><00:02:56.130><c> performance</c><00:02:56.280><c> on</c>

00:02:56.690 --> 00:02:56.700 align:start position:0%
have today and increase performance on
 

00:02:56.700 --> 00:03:02.390 align:start position:0%
have today and increase performance on
today's<00:02:56.970><c> processors</c><00:03:00.710><c> one</c><00:03:01.710><c> of</c><00:03:01.800><c> the</c><00:03:01.890><c> area's</c>

00:03:02.390 --> 00:03:02.400 align:start position:0%
today's processors one of the area's
 

00:03:02.400 --> 00:03:04.160 align:start position:0%
today's processors one of the area's
also<00:03:02.700><c> that</c><00:03:02.820><c> I</c><00:03:02.880><c> want</c><00:03:03.030><c> to</c><00:03:03.120><c> kind</c><00:03:03.210><c> of</c><00:03:03.300><c> clarify</c><00:03:03.720><c> or</c>

00:03:04.160 --> 00:03:04.170 align:start position:0%
also that I want to kind of clarify or
 

00:03:04.170 --> 00:03:05.810 align:start position:0%
also that I want to kind of clarify or
some<00:03:04.410><c> of</c><00:03:04.500><c> the</c><00:03:04.560><c> definitions</c><00:03:05.070><c> that</c><00:03:05.160><c> we</c><00:03:05.370><c> use</c><00:03:05.610><c> in</c>

00:03:05.810 --> 00:03:05.820 align:start position:0%
some of the definitions that we use in
 

00:03:05.820 --> 00:03:07.010 align:start position:0%
some of the definitions that we use in
this<00:03:05.970><c> type</c><00:03:06.180><c> of</c><00:03:06.210><c> presentation</c><00:03:06.870><c> and</c>

00:03:07.010 --> 00:03:07.020 align:start position:0%
this type of presentation and
 

00:03:07.020 --> 00:03:08.840 align:start position:0%
this type of presentation and
conversation<00:03:07.560><c> about</c><00:03:07.770><c> optimizing</c><00:03:08.520><c> for</c>

00:03:08.840 --> 00:03:08.850 align:start position:0%
conversation about optimizing for
 

00:03:08.850 --> 00:03:11.150 align:start position:0%
conversation about optimizing for
hardware<00:03:09.290><c> multitasking</c><00:03:10.290><c> is</c><00:03:10.470><c> the</c><00:03:10.590><c> ability</c><00:03:10.920><c> to</c>

00:03:11.150 --> 00:03:11.160 align:start position:0%
hardware multitasking is the ability to
 

00:03:11.160 --> 00:03:12.710 align:start position:0%
hardware multitasking is the ability to
handle<00:03:11.430><c> several</c><00:03:11.760><c> different</c><00:03:12.060><c> tasks</c><00:03:12.450><c> at</c><00:03:12.600><c> the</c>

00:03:12.710 --> 00:03:12.720 align:start position:0%
handle several different tasks at the
 

00:03:12.720 --> 00:03:15.290 align:start position:0%
handle several different tasks at the
same<00:03:12.870><c> time</c><00:03:13.190><c> multi</c><00:03:14.190><c> processing</c><00:03:14.670><c> is</c><00:03:15.090><c> the</c>

00:03:15.290 --> 00:03:15.300 align:start position:0%
same time multi processing is the
 

00:03:15.300 --> 00:03:16.820 align:start position:0%
same time multi processing is the
ability<00:03:15.510><c> of</c><00:03:15.810><c> the</c><00:03:15.900><c> OS</c><00:03:16.170><c> to</c><00:03:16.410><c> actually</c><00:03:16.680><c> utilize</c>

00:03:16.820 --> 00:03:16.830 align:start position:0%
ability of the OS to actually utilize
 

00:03:16.830 --> 00:03:19.480 align:start position:0%
ability of the OS to actually utilize
more<00:03:17.820><c> than</c><00:03:17.940><c> one</c><00:03:18.060><c> processor</c><00:03:18.570><c> at</c><00:03:18.660><c> the</c><00:03:18.720><c> same</c><00:03:18.900><c> time</c>

00:03:19.480 --> 00:03:19.490 align:start position:0%
more than one processor at the same time
 

00:03:19.490 --> 00:03:22.130 align:start position:0%
more than one processor at the same time
SMP<00:03:20.490><c> or</c><00:03:20.640><c> symmetrical</c><00:03:21.090><c> multi</c><00:03:21.420><c> processing</c><00:03:21.870><c> is</c>

00:03:22.130 --> 00:03:22.140 align:start position:0%
SMP or symmetrical multi processing is
 

00:03:22.140 --> 00:03:24.170 align:start position:0%
SMP or symmetrical multi processing is
the<00:03:22.680><c> ability</c><00:03:23.040><c> of</c><00:03:23.130><c> the</c><00:03:23.220><c> OS</c><00:03:23.550><c> actually</c><00:03:24.000><c> be</c><00:03:24.150><c> a</c>

00:03:24.170 --> 00:03:24.180 align:start position:0%
the ability of the OS actually be a
 

00:03:24.180 --> 00:03:25.700 align:start position:0%
the ability of the OS actually be a
little<00:03:24.360><c> bit</c><00:03:24.480><c> intelligent</c><00:03:25.110><c> of</c><00:03:25.230><c> how</c><00:03:25.650><c> to</c>

00:03:25.700 --> 00:03:25.710 align:start position:0%
little bit intelligent of how to
 

00:03:25.710 --> 00:03:28.010 align:start position:0%
little bit intelligent of how to
schedule<00:03:26.040><c> the</c><00:03:26.790><c> actual</c><00:03:27.330><c> functions</c><00:03:27.780><c> and</c><00:03:27.900><c> that's</c>

00:03:28.010 --> 00:03:28.020 align:start position:0%
schedule the actual functions and that's
 

00:03:28.020 --> 00:03:30.230 align:start position:0%
schedule the actual functions and that's
the<00:03:28.110><c> execution</c><00:03:28.830><c> of</c><00:03:28.890><c> code</c><00:03:29.130><c> across</c><00:03:29.880><c> multiple</c>

00:03:30.230 --> 00:03:30.240 align:start position:0%
the execution of code across multiple
 

00:03:30.240 --> 00:03:32.180 align:start position:0%
the execution of code across multiple
processors<00:03:30.840><c> to</c><00:03:31.260><c> actually</c><00:03:31.590><c> balance</c><00:03:31.950><c> the</c><00:03:31.980><c> load</c>

00:03:32.180 --> 00:03:32.190 align:start position:0%
processors to actually balance the load
 

00:03:32.190 --> 00:03:34.490 align:start position:0%
processors to actually balance the load
so<00:03:32.370><c> to</c><00:03:32.430><c> speak</c><00:03:32.700><c> can</c><00:03:32.910><c> we</c><00:03:33.480><c> go</c><00:03:33.600><c> to</c><00:03:33.660><c> demo</c><00:03:34.260><c> three</c>

00:03:34.490 --> 00:03:34.500 align:start position:0%
so to speak can we go to demo three
 

00:03:34.500 --> 00:03:36.770 align:start position:0%
so to speak can we go to demo three
machine<00:03:34.890><c> to</c><00:03:35.790><c> give</c><00:03:35.940><c> you</c><00:03:36.030><c> an</c><00:03:36.120><c> example</c><00:03:36.420><c> of</c><00:03:36.630><c> what</c>

00:03:36.770 --> 00:03:36.780 align:start position:0%
machine to give you an example of what
 

00:03:36.780 --> 00:03:37.420 align:start position:0%
machine to give you an example of what
that<00:03:36.810><c> looks</c><00:03:36.960><c> like</c>

00:03:37.420 --> 00:03:37.430 align:start position:0%
that looks like
 

00:03:37.430 --> 00:03:40.910 align:start position:0%
that looks like
here's<00:03:38.430><c> QuickTime</c><00:03:39.140><c> running</c><00:03:40.140><c> three</c><00:03:40.650><c> different</c>

00:03:40.910 --> 00:03:40.920 align:start position:0%
here's QuickTime running three different
 

00:03:40.920 --> 00:03:45.590 align:start position:0%
here's QuickTime running three different
movies<00:03:41.220><c> if</c><00:03:42.090><c> you</c><00:03:42.300><c> can</c><00:03:42.420><c> notice</c><00:03:42.690><c> the</c><00:03:43.850><c> system</c><00:03:44.850><c> is</c>

00:03:45.590 --> 00:03:45.600 align:start position:0%
movies if you can notice the system is
 

00:03:45.600 --> 00:03:47.600 align:start position:0%
movies if you can notice the system is
actually<00:03:45.900><c> utilizing</c><00:03:46.590><c> both</c><00:03:46.800><c> processors</c><00:03:47.370><c> and</c>

00:03:47.600 --> 00:03:47.610 align:start position:0%
actually utilizing both processors and
 

00:03:47.610 --> 00:03:49.460 align:start position:0%
actually utilizing both processors and
they're<00:03:48.000><c> pretty</c><00:03:48.090><c> well</c><00:03:48.270><c> balanced</c><00:03:48.660><c> QuickTime</c>

00:03:49.460 --> 00:03:49.470 align:start position:0%
they're pretty well balanced QuickTime
 

00:03:49.470 --> 00:03:53.600 align:start position:0%
they're pretty well balanced QuickTime
itself<00:03:49.860><c> is</c><00:03:50.360><c> is</c><00:03:51.410><c> actually</c><00:03:52.410><c> threaded</c><00:03:53.070><c> so</c>

00:03:53.600 --> 00:03:53.610 align:start position:0%
itself is is actually threaded so
 

00:03:53.610 --> 00:03:56.420 align:start position:0%
itself is is actually threaded so
because<00:03:54.030><c> of</c><00:03:54.180><c> SMP</c><00:03:54.660><c> the</c><00:03:55.380><c> OS</c><00:03:55.650><c> basically</c><00:03:56.220><c> knows</c>

00:03:56.420 --> 00:03:56.430 align:start position:0%
because of SMP the OS basically knows
 

00:03:56.430 --> 00:03:58.550 align:start position:0%
because of SMP the OS basically knows
how<00:03:56.670><c> to</c><00:03:56.730><c> hand</c><00:03:57.120><c> off</c><00:03:57.270><c> to</c><00:03:57.450><c> each</c><00:03:57.570><c> processor</c><00:03:58.110><c> the</c>

00:03:58.550 --> 00:03:58.560 align:start position:0%
how to hand off to each processor the
 

00:03:58.560 --> 00:04:02.000 align:start position:0%
how to hand off to each processor the
task<00:03:58.830><c> of</c><00:03:59.100><c> pushing</c><00:03:59.940><c> pixels</c><00:04:00.270><c> to</c><00:04:00.420><c> the</c><00:04:00.450><c> screen</c><00:04:01.010><c> so</c>

00:04:02.000 --> 00:04:02.010 align:start position:0%
task of pushing pixels to the screen so
 

00:04:02.010 --> 00:04:04.160 align:start position:0%
task of pushing pixels to the screen so
if<00:04:02.310><c> we</c><00:04:02.490><c> had</c><00:04:02.700><c> if</c><00:04:02.940><c> QuickTime</c><00:04:03.540><c> itself</c><00:04:03.870><c> was</c><00:04:04.020><c> not</c>

00:04:04.160 --> 00:04:04.170 align:start position:0%
if we had if QuickTime itself was not
 

00:04:04.170 --> 00:04:05.360 align:start position:0%
if we had if QuickTime itself was not
threaded<00:04:04.470><c> if</c><00:04:04.650><c> it</c><00:04:04.740><c> was</c><00:04:04.830><c> a</c><00:04:04.860><c> single</c><00:04:05.190><c> threaded</c>

00:04:05.360 --> 00:04:05.370 align:start position:0%
threaded if it was a single threaded
 

00:04:05.370 --> 00:04:08.300 align:start position:0%
threaded if it was a single threaded
application<00:04:06.080><c> or</c><00:04:07.080><c> technology</c><00:04:07.620><c> you</c><00:04:07.980><c> would</c><00:04:08.100><c> see</c>

00:04:08.300 --> 00:04:08.310 align:start position:0%
application or technology you would see
 

00:04:08.310 --> 00:04:11.090 align:start position:0%
application or technology you would see
one<00:04:08.930><c> processor</c><00:04:09.930><c> being</c><00:04:10.170><c> overloaded</c><00:04:10.770><c> in</c><00:04:11.010><c> the</c>

00:04:11.090 --> 00:04:11.100 align:start position:0%
one processor being overloaded in the
 

00:04:11.100 --> 00:04:12.770 align:start position:0%
one processor being overloaded in the
second<00:04:11.370><c> processor</c><00:04:11.730><c> kind</c><00:04:11.970><c> of</c><00:04:12.060><c> getting</c><00:04:12.300><c> some</c>

00:04:12.770 --> 00:04:12.780 align:start position:0%
second processor kind of getting some
 

00:04:12.780 --> 00:04:14.570 align:start position:0%
second processor kind of getting some
time<00:04:13.050><c> when</c><00:04:13.290><c> the</c><00:04:13.740><c> operating</c><00:04:14.100><c> system</c><00:04:14.190><c> actually</c>

00:04:14.570 --> 00:04:14.580 align:start position:0%
time when the operating system actually
 

00:04:14.580 --> 00:04:19.539 align:start position:0%
time when the operating system actually
divvied<00:04:15.360><c> up</c><00:04:15.480><c> some</c><00:04:15.990><c> of</c><00:04:16.080><c> the</c><00:04:16.140><c> tasks</c>

00:04:19.539 --> 00:04:19.549 align:start position:0%
 
 

00:04:19.549 --> 00:04:25.370 align:start position:0%
 
can<00:04:20.549><c> we</c><00:04:20.609><c> go</c><00:04:20.729><c> to</c><00:04:20.789><c> slides</c><00:04:21.710><c> please</c><00:04:24.229><c> so</c><00:04:25.229><c> what</c><00:04:25.349><c> I</c>

00:04:25.370 --> 00:04:25.380 align:start position:0%
can we go to slides please so what I
 

00:04:25.380 --> 00:04:27.790 align:start position:0%
can we go to slides please so what I
like<00:04:25.620><c> to</c><00:04:25.710><c> do</c><00:04:25.860><c> is</c><00:04:26.099><c> introduce</c><00:04:26.400><c> Matt</c><00:04:26.940><c> Watson</c>

00:04:27.790 --> 00:04:27.800 align:start position:0%
like to do is introduce Matt Watson
 

00:04:27.800 --> 00:04:29.900 align:start position:0%
like to do is introduce Matt Watson
Coriolis<00:04:28.800><c> engineer</c><00:04:29.250><c> who</c><00:04:29.430><c> will</c><00:04:29.580><c> actually</c>

00:04:29.900 --> 00:04:29.910 align:start position:0%
Coriolis engineer who will actually
 

00:04:29.910 --> 00:04:33.230 align:start position:0%
Coriolis engineer who will actually
deliver<00:04:30.259><c> today's</c><00:04:31.259><c> presentation</c><00:04:31.919><c> on</c><00:04:32.099><c> why</c><00:04:32.759><c> you</c>

00:04:33.230 --> 00:04:33.240 align:start position:0%
deliver today's presentation on why you
 

00:04:33.240 --> 00:04:34.760 align:start position:0%
deliver today's presentation on why you
should<00:04:33.270><c> be</c><00:04:33.720><c> threading</c><00:04:34.020><c> your</c><00:04:34.050><c> application</c><00:04:34.620><c> for</c>

00:04:34.760 --> 00:04:34.770 align:start position:0%
should be threading your application for
 

00:04:34.770 --> 00:04:44.809 align:start position:0%
should be threading your application for
Mac<00:04:34.889><c> OS</c><00:04:35.160><c> 10</c><00:04:35.190><c> thank</c><00:04:36.180><c> you</c><00:04:41.569><c> thanks</c><00:04:42.569><c> mark</c><00:04:43.789><c> so</c><00:04:44.789><c> I</c>

00:04:44.809 --> 00:04:44.819 align:start position:0%
Mac OS 10 thank you thanks mark so I
 

00:04:44.819 --> 00:04:46.700 align:start position:0%
Mac OS 10 thank you thanks mark so I
work<00:04:45.090><c> in</c><00:04:45.210><c> the</c><00:04:45.300><c> core</c><00:04:45.449><c> OS</c><00:04:45.569><c> group</c><00:04:45.900><c> at</c><00:04:46.110><c> Apple</c><00:04:46.530><c> and</c>

00:04:46.700 --> 00:04:46.710 align:start position:0%
work in the core OS group at Apple and
 

00:04:46.710 --> 00:04:49.909 align:start position:0%
work in the core OS group at Apple and
we're<00:04:47.280><c> responsible</c><00:04:47.819><c> for</c><00:04:47.940><c> most</c><00:04:48.930><c> of</c><00:04:49.199><c> the</c><00:04:49.440><c> lower</c>

00:04:49.909 --> 00:04:49.919 align:start position:0%
we're responsible for most of the lower
 

00:04:49.919 --> 00:04:52.309 align:start position:0%
we're responsible for most of the lower
level<00:04:50.280><c> darwin</c><00:04:50.759><c> source</c><00:04:51.419><c> code</c><00:04:51.720><c> and</c><00:04:52.050><c> i</c>

00:04:52.309 --> 00:04:52.319 align:start position:0%
level darwin source code and i
 

00:04:52.319 --> 00:04:54.529 align:start position:0%
level darwin source code and i
specifically<00:04:52.889><c> work</c><00:04:53.220><c> on</c><00:04:53.460><c> the</c><00:04:54.030><c> user</c><00:04:54.270><c> level</c>

00:04:54.529 --> 00:04:54.539 align:start position:0%
specifically work on the user level
 

00:04:54.539 --> 00:05:00.649 align:start position:0%
specifically work on the user level
implementation<00:04:55.370><c> of</c><00:04:56.370><c> darwin</c><00:04:58.220><c> so</c><00:04:59.389><c> why</c><00:05:00.389><c> do</c><00:05:00.449><c> you</c>

00:05:00.649 --> 00:05:00.659 align:start position:0%
implementation of darwin so why do you
 

00:05:00.659 --> 00:05:02.450 align:start position:0%
implementation of darwin so why do you
want<00:05:00.810><c> to</c><00:05:00.900><c> use</c><00:05:01.020><c> threads</c><00:05:01.349><c> in</c><00:05:01.740><c> your</c><00:05:01.919><c> application</c>

00:05:02.450 --> 00:05:02.460 align:start position:0%
want to use threads in your application
 

00:05:02.460 --> 00:05:05.240 align:start position:0%
want to use threads in your application
what<00:05:03.270><c> Mark</c><00:05:03.539><c> alluded</c><00:05:03.810><c> to</c><00:05:04.110><c> earlier</c><00:05:04.139><c> was</c><00:05:04.680><c> the</c>

00:05:05.240 --> 00:05:05.250 align:start position:0%
what Mark alluded to earlier was the
 

00:05:05.250 --> 00:05:08.390 align:start position:0%
what Mark alluded to earlier was the
user<00:05:05.490><c> perception</c><00:05:06.240><c> of</c><00:05:06.389><c> the</c><00:05:07.229><c> marketing</c><00:05:08.130><c> message</c>

00:05:08.390 --> 00:05:08.400 align:start position:0%
user perception of the marketing message
 

00:05:08.400 --> 00:05:10.100 align:start position:0%
user perception of the marketing message
we've<00:05:08.580><c> been</c><00:05:08.759><c> sending</c><00:05:08.970><c> out</c><00:05:09.150><c> for</c><00:05:09.330><c> Mac</c><00:05:09.449><c> OS</c><00:05:09.690><c> 10</c><00:05:09.720><c> is</c>

00:05:10.100 --> 00:05:10.110 align:start position:0%
we've been sending out for Mac OS 10 is
 

00:05:10.110 --> 00:05:12.260 align:start position:0%
we've been sending out for Mac OS 10 is
it's<00:05:10.289><c> fully</c><00:05:10.500><c> preemptive</c><00:05:11.130><c> support</c><00:05:11.849><c> symmetric</c>

00:05:12.260 --> 00:05:12.270 align:start position:0%
it's fully preemptive support symmetric
 

00:05:12.270 --> 00:05:14.870 align:start position:0%
it's fully preemptive support symmetric
multiprocessing<00:05:13.080><c> so</c><00:05:13.740><c> customers</c><00:05:14.639><c> are</c><00:05:14.759><c> going</c>

00:05:14.870 --> 00:05:14.880 align:start position:0%
multiprocessing so customers are going
 

00:05:14.880 --> 00:05:16.339 align:start position:0%
multiprocessing so customers are going
to<00:05:15.030><c> expect</c><00:05:15.419><c> that</c><00:05:15.630><c> their</c><00:05:15.750><c> applications</c><00:05:16.259><c> are</c>

00:05:16.339 --> 00:05:16.349 align:start position:0%
to expect that their applications are
 

00:05:16.349 --> 00:05:19.670 align:start position:0%
to expect that their applications are
going<00:05:16.380><c> to</c><00:05:16.500><c> run</c><00:05:16.710><c> more</c><00:05:17.460><c> efficiently</c><00:05:17.699><c> and</c><00:05:18.680><c> scale</c>

00:05:19.670 --> 00:05:19.680 align:start position:0%
going to run more efficiently and scale
 

00:05:19.680 --> 00:05:22.279 align:start position:0%
going to run more efficiently and scale
better<00:05:19.979><c> on</c><00:05:20.250><c> multiprocessor</c><00:05:21.120><c> machines</c><00:05:21.199><c> so</c><00:05:22.199><c> to</c>

00:05:22.279 --> 00:05:22.289 align:start position:0%
better on multiprocessor machines so to
 

00:05:22.289 --> 00:05:23.990 align:start position:0%
better on multiprocessor machines so to
take<00:05:22.560><c> advantage</c><00:05:22.979><c> of</c><00:05:23.070><c> that</c><00:05:23.219><c> if</c><00:05:23.729><c> your</c>

00:05:23.990 --> 00:05:24.000 align:start position:0%
take advantage of that if your
 

00:05:24.000 --> 00:05:26.120 align:start position:0%
take advantage of that if your
application<00:05:24.570><c> can</c><00:05:24.840><c> perform</c><00:05:25.740><c> tasks</c>

00:05:26.120 --> 00:05:26.130 align:start position:0%
application can perform tasks
 

00:05:26.130 --> 00:05:28.640 align:start position:0%
application can perform tasks
simultaneously<00:05:26.400><c> and</c><00:05:27.360><c> you're</c><00:05:28.320><c> running</c><00:05:28.530><c> on</c><00:05:28.620><c> a</c>

00:05:28.640 --> 00:05:28.650 align:start position:0%
simultaneously and you're running on a
 

00:05:28.650 --> 00:05:30.200 align:start position:0%
simultaneously and you're running on a
multiprocessor<00:05:29.070><c> the</c><00:05:29.580><c> customers</c><00:05:30.030><c> are</c><00:05:30.120><c> going</c>

00:05:30.200 --> 00:05:30.210 align:start position:0%
multiprocessor the customers are going
 

00:05:30.210 --> 00:05:31.999 align:start position:0%
multiprocessor the customers are going
to<00:05:30.300><c> expect</c><00:05:30.690><c> that</c><00:05:30.960><c> added</c><00:05:31.590><c> benefit</c><00:05:31.979><c> of</c>

00:05:31.999 --> 00:05:32.009 align:start position:0%
to expect that added benefit of
 

00:05:32.009 --> 00:05:34.870 align:start position:0%
to expect that added benefit of
performance<00:05:32.810><c> since</c><00:05:33.810><c> Mac</c><00:05:34.080><c> OS</c><00:05:34.289><c> 10</c><00:05:34.320><c> is</c><00:05:34.620><c> fully</c>

00:05:34.870 --> 00:05:34.880 align:start position:0%
performance since Mac OS 10 is fully
 

00:05:34.880 --> 00:05:37.909 align:start position:0%
performance since Mac OS 10 is fully
pre-emptive<00:05:35.880><c> you'll</c><00:05:36.570><c> notice</c><00:05:36.960><c> that</c><00:05:37.169><c> all</c><00:05:37.620><c> the</c>

00:05:37.909 --> 00:05:37.919 align:start position:0%
pre-emptive you'll notice that all the
 

00:05:37.919 --> 00:05:39.820 align:start position:0%
pre-emptive you'll notice that all the
applications<00:05:38.490><c> are</c><00:05:38.729><c> getting</c><00:05:39.120><c> time</c><00:05:39.330><c> sliced</c>

00:05:39.820 --> 00:05:39.830 align:start position:0%
applications are getting time sliced
 

00:05:39.830 --> 00:05:42.680 align:start position:0%
applications are getting time sliced
simultaneously<00:05:40.830><c> and</c><00:05:41.070><c> if</c><00:05:41.820><c> your</c><00:05:42.060><c> application</c>

00:05:42.680 --> 00:05:42.690 align:start position:0%
simultaneously and if your application
 

00:05:42.690 --> 00:05:44.330 align:start position:0%
simultaneously and if your application
has<00:05:42.960><c> multiple</c><00:05:43.409><c> threads</c><00:05:43.680><c> it's</c><00:05:43.949><c> going</c><00:05:44.159><c> to</c><00:05:44.219><c> get</c>

00:05:44.330 --> 00:05:44.340 align:start position:0%
has multiple threads it's going to get
 

00:05:44.340 --> 00:05:47.120 align:start position:0%
has multiple threads it's going to get
more<00:05:45.000><c> than</c><00:05:45.110><c> another</c><00:05:46.110><c> application</c><00:05:46.710><c> share</c><00:05:47.009><c> of</c>

00:05:47.120 --> 00:05:47.130 align:start position:0%
more than another application share of
 

00:05:47.130 --> 00:05:48.589 align:start position:0%
more than another application share of
that<00:05:47.310><c> time</c><00:05:47.550><c> so</c><00:05:47.880><c> you're</c><00:05:48.180><c> actually</c><00:05:48.389><c> going</c><00:05:48.509><c> to</c>

00:05:48.589 --> 00:05:48.599 align:start position:0%
that time so you're actually going to
 

00:05:48.599 --> 00:05:50.209 align:start position:0%
that time so you're actually going to
see<00:05:48.780><c> the</c><00:05:49.199><c> benefit</c><00:05:49.650><c> directly</c><00:05:50.099><c> in</c><00:05:50.190><c> your</c>

00:05:50.209 --> 00:05:50.219 align:start position:0%
see the benefit directly in your
 

00:05:50.219 --> 00:05:54.830 align:start position:0%
see the benefit directly in your
application<00:05:50.880><c> in</c><00:05:52.969><c> some</c><00:05:53.969><c> applications</c><00:05:54.690><c> you</c>

00:05:54.830 --> 00:05:54.840 align:start position:0%
application in some applications you
 

00:05:54.840 --> 00:05:56.959 align:start position:0%
application in some applications you
might<00:05:55.020><c> notice</c><00:05:55.380><c> that</c><00:05:55.430><c> synchronous</c><00:05:56.430><c> requests</c>

00:05:56.959 --> 00:05:56.969 align:start position:0%
might notice that synchronous requests
 

00:05:56.969 --> 00:05:59.149 align:start position:0%
might notice that synchronous requests
would<00:05:57.120><c> block</c><00:05:57.389><c> the</c><00:05:57.599><c> UI</c><00:05:57.780><c> so</c><00:05:58.289><c> we</c><00:05:58.590><c> want</c><00:05:58.770><c> to</c><00:05:58.860><c> avoid</c>

00:05:59.149 --> 00:05:59.159 align:start position:0%
would block the UI so we want to avoid
 

00:05:59.159 --> 00:06:01.040 align:start position:0%
would block the UI so we want to avoid
that<00:05:59.400><c> we</c><00:05:59.580><c> want</c><00:05:59.729><c> to</c><00:05:59.819><c> make</c><00:05:59.940><c> sure</c><00:05:59.969><c> that</c><00:06:00.330><c> if</c><00:06:00.569><c> you're</c>

00:06:01.040 --> 00:06:01.050 align:start position:0%
that we want to make sure that if you're
 

00:06:01.050 --> 00:06:02.959 align:start position:0%
that we want to make sure that if you're
coding<00:06:01.469><c> and</c><00:06:01.710><c> you're</c><00:06:02.219><c> using</c><00:06:02.490><c> an</c><00:06:02.580><c> API</c><00:06:02.880><c> that</c>

00:06:02.959 --> 00:06:02.969 align:start position:0%
coding and you're using an API that
 

00:06:02.969 --> 00:06:04.520 align:start position:0%
coding and you're using an API that
could<00:06:03.300><c> block</c><00:06:03.569><c> for</c><00:06:03.840><c> an</c><00:06:03.900><c> indeterminate</c><00:06:04.469><c> amount</c>

00:06:04.520 --> 00:06:04.530 align:start position:0%
could block for an indeterminate amount
 

00:06:04.530 --> 00:06:07.070 align:start position:0%
could block for an indeterminate amount
of<00:06:04.770><c> time</c><00:06:04.979><c> a</c><00:06:05.280><c> an</c><00:06:06.060><c> extra</c><00:06:06.630><c> thread</c><00:06:06.900><c> in</c><00:06:07.050><c> your</c>

00:06:07.070 --> 00:06:07.080 align:start position:0%
of time a an extra thread in your
 

00:06:07.080 --> 00:06:09.200 align:start position:0%
of time a an extra thread in your
application<00:06:07.710><c> could</c><00:06:08.310><c> help</c><00:06:08.550><c> prevent</c><00:06:08.849><c> the</c><00:06:09.030><c> UI</c>

00:06:09.200 --> 00:06:09.210 align:start position:0%
application could help prevent the UI
 

00:06:09.210 --> 00:06:10.999 align:start position:0%
application could help prevent the UI
from<00:06:09.599><c> blocking</c><00:06:10.020><c> and</c><00:06:10.199><c> let</c><00:06:10.710><c> that</c><00:06:10.830><c> other</c>

00:06:10.999 --> 00:06:11.009 align:start position:0%
from blocking and let that other
 

00:06:11.009 --> 00:06:14.990 align:start position:0%
from blocking and let that other
requests<00:06:11.750><c> complete</c><00:06:13.310><c> also</c><00:06:14.310><c> polling</c><00:06:14.819><c> is</c>

00:06:14.990 --> 00:06:15.000 align:start position:0%
requests complete also polling is
 

00:06:15.000 --> 00:06:17.270 align:start position:0%
requests complete also polling is
considered<00:06:15.810><c> bad</c><00:06:16.020><c> on</c><00:06:16.229><c> Mac</c><00:06:16.380><c> OS</c><00:06:16.620><c> 10</c><00:06:16.650><c> we</c><00:06:17.039><c> don't</c>

00:06:17.270 --> 00:06:17.280 align:start position:0%
considered bad on Mac OS 10 we don't
 

00:06:17.280 --> 00:06:20.209 align:start position:0%
considered bad on Mac OS 10 we don't
want<00:06:17.490><c> applications</c><00:06:18.270><c> to</c><00:06:18.990><c> constantly</c><00:06:19.740><c> check</c>

00:06:20.209 --> 00:06:20.219 align:start position:0%
want applications to constantly check
 

00:06:20.219 --> 00:06:22.249 align:start position:0%
want applications to constantly check
for<00:06:20.550><c> state</c><00:06:20.940><c> and</c><00:06:21.150><c> one</c><00:06:21.300><c> way</c><00:06:21.449><c> you</c><00:06:21.509><c> can</c><00:06:21.750><c> do</c><00:06:21.900><c> that</c><00:06:22.080><c> is</c>

00:06:22.249 --> 00:06:22.259 align:start position:0%
for state and one way you can do that is
 

00:06:22.259 --> 00:06:23.959 align:start position:0%
for state and one way you can do that is
through<00:06:22.770><c> some</c><00:06:23.039><c> of</c><00:06:23.159><c> the</c><00:06:23.250><c> synchronization</c>

00:06:23.959 --> 00:06:23.969 align:start position:0%
through some of the synchronization
 

00:06:23.969 --> 00:06:26.149 align:start position:0%
through some of the synchronization
mechanisms<00:06:24.539><c> that</c><00:06:24.659><c> I'll</c><00:06:24.810><c> discuss</c><00:06:25.199><c> in</c><00:06:25.409><c> a</c><00:06:25.919><c> little</c>

00:06:26.149 --> 00:06:26.159 align:start position:0%
mechanisms that I'll discuss in a little
 

00:06:26.159 --> 00:06:28.279 align:start position:0%
mechanisms that I'll discuss in a little
bit<00:06:26.310><c> where</c><00:06:26.580><c> you</c><00:06:27.449><c> can</c><00:06:27.599><c> have</c><00:06:27.750><c> a</c><00:06:27.779><c> thread</c><00:06:28.080><c> that's</c>

00:06:28.279 --> 00:06:28.289 align:start position:0%
bit where you can have a thread that's
 

00:06:28.289 --> 00:06:30.110 align:start position:0%
bit where you can have a thread that's
waiting<00:06:28.529><c> for</c><00:06:28.650><c> an</c><00:06:28.860><c> event</c><00:06:29.099><c> to</c><00:06:29.159><c> occur</c><00:06:29.370><c> in</c><00:06:29.760><c> the</c>

00:06:30.110 --> 00:06:30.120 align:start position:0%
waiting for an event to occur in the
 

00:06:30.120 --> 00:06:31.040 align:start position:0%
waiting for an event to occur in the
background

00:06:31.040 --> 00:06:31.050 align:start position:0%
background
 

00:06:31.050 --> 00:06:33.320 align:start position:0%
background
and<00:06:31.139><c> it</c><00:06:31.710><c> will</c><00:06:31.889><c> only</c><00:06:32.009><c> continue</c><00:06:32.460><c> after</c><00:06:33.060><c> that</c>

00:06:33.320 --> 00:06:33.330 align:start position:0%
and it will only continue after that
 

00:06:33.330 --> 00:06:36.399 align:start position:0%
and it will only continue after that
event<00:06:33.720><c> has</c><00:06:34.020><c> actually</c><00:06:34.409><c> fired</c>

00:06:36.399 --> 00:06:36.409 align:start position:0%
event has actually fired
 

00:06:36.409 --> 00:06:39.950 align:start position:0%
event has actually fired
so<00:06:37.409><c> most</c><00:06:38.159><c> cases</c><00:06:38.430><c> your</c><00:06:39.270><c> application</c><00:06:39.810><c> may</c><00:06:39.930><c> not</c>

00:06:39.950 --> 00:06:39.960 align:start position:0%
so most cases your application may not
 

00:06:39.960 --> 00:06:42.559 align:start position:0%
so most cases your application may not
need<00:06:40.319><c> to</c><00:06:40.500><c> be</c><00:06:40.620><c> multi-threaded</c><00:06:41.400><c> in</c><00:06:41.580><c> a</c><00:06:41.909><c> lot</c><00:06:42.419><c> of</c>

00:06:42.559 --> 00:06:42.569 align:start position:0%
need to be multi-threaded in a lot of
 

00:06:42.569 --> 00:06:45.290 align:start position:0%
need to be multi-threaded in a lot of
instances<00:06:42.870><c> there</c><00:06:43.560><c> are</c><00:06:43.590><c> some</c><00:06:43.979><c> times</c><00:06:44.639><c> when</c><00:06:44.970><c> the</c>

00:06:45.290 --> 00:06:45.300 align:start position:0%
instances there are some times when the
 

00:06:45.300 --> 00:06:47.930 align:start position:0%
instances there are some times when the
added<00:06:45.569><c> complexity</c><00:06:46.110><c> of</c><00:06:46.259><c> a</c><00:06:46.500><c> thread</c><00:06:46.830><c> may</c><00:06:47.400><c> change</c>

00:06:47.930 --> 00:06:47.940 align:start position:0%
added complexity of a thread may change
 

00:06:47.940 --> 00:06:49.730 align:start position:0%
added complexity of a thread may change
the<00:06:48.210><c> logic</c><00:06:48.360><c> of</c><00:06:48.659><c> your</c><00:06:48.780><c> application</c><00:06:49.319><c> if</c><00:06:49.500><c> it</c><00:06:49.590><c> was</c>

00:06:49.730 --> 00:06:49.740 align:start position:0%
the logic of your application if it was
 

00:06:49.740 --> 00:06:51.830 align:start position:0%
the logic of your application if it was
written<00:06:50.220><c> originally</c><00:06:50.550><c> to</c><00:06:51.030><c> be</c><00:06:51.060><c> single</c><00:06:51.479><c> threaded</c>

00:06:51.830 --> 00:06:51.840 align:start position:0%
written originally to be single threaded
 

00:06:51.840 --> 00:06:54.550 align:start position:0%
written originally to be single threaded
and<00:06:51.930><c> you</c><00:06:51.990><c> have</c><00:06:52.110><c> lots</c><00:06:52.259><c> of</c><00:06:52.440><c> global</c><00:06:52.800><c> data</c><00:06:52.979><c> your</c>

00:06:54.550 --> 00:06:54.560 align:start position:0%
and you have lots of global data your
 

00:06:54.560 --> 00:06:57.680 align:start position:0%
and you have lots of global data your
locking<00:06:55.560><c> mechanism</c><00:06:56.159><c> may</c><00:06:56.610><c> not</c><00:06:56.819><c> be</c><00:06:56.970><c> as</c><00:06:57.210><c> robust</c>

00:06:57.680 --> 00:06:57.690 align:start position:0%
locking mechanism may not be as robust
 

00:06:57.690 --> 00:07:00.619 align:start position:0%
locking mechanism may not be as robust
as<00:06:57.870><c> you</c><00:06:58.080><c> have</c><00:06:58.650><c> originally</c><00:06:59.129><c> designed</c><00:06:59.629><c> there's</c>

00:07:00.619 --> 00:07:00.629 align:start position:0%
as you have originally designed there's
 

00:07:00.629 --> 00:07:02.629 align:start position:0%
as you have originally designed there's
a<00:07:00.690><c> little</c><00:07:00.960><c> bit</c><00:07:01.080><c> of</c><00:07:01.169><c> added</c><00:07:01.319><c> overhead</c><00:07:01.919><c> for</c><00:07:02.550><c> an</c>

00:07:02.629 --> 00:07:02.639 align:start position:0%
a little bit of added overhead for an
 

00:07:02.639 --> 00:07:04.100 align:start position:0%
a little bit of added overhead for an
extra<00:07:02.970><c> thread</c><00:07:03.240><c> to</c><00:07:03.569><c> come</c><00:07:03.750><c> into</c><00:07:03.930><c> your</c>

00:07:04.100 --> 00:07:04.110 align:start position:0%
extra thread to come into your
 

00:07:04.110 --> 00:07:05.930 align:start position:0%
extra thread to come into your
application<00:07:04.590><c> there's</c><00:07:05.190><c> some</c><00:07:05.610><c> kernel</c>

00:07:05.930 --> 00:07:05.940 align:start position:0%
application there's some kernel
 

00:07:05.940 --> 00:07:07.520 align:start position:0%
application there's some kernel
resources<00:07:06.509><c> that</c><00:07:06.629><c> are</c><00:07:06.719><c> associated</c><00:07:07.259><c> with</c><00:07:07.289><c> that</c>

00:07:07.520 --> 00:07:07.530 align:start position:0%
resources that are associated with that
 

00:07:07.530 --> 00:07:10.490 align:start position:0%
resources that are associated with that
and<00:07:08.270><c> you</c><00:07:09.270><c> basically</c><00:07:09.449><c> need</c><00:07:09.750><c> to</c><00:07:09.780><c> decide</c><00:07:10.229><c> when</c>

00:07:10.490 --> 00:07:10.500 align:start position:0%
and you basically need to decide when
 

00:07:10.500 --> 00:07:12.830 align:start position:0%
and you basically need to decide when
you're<00:07:10.620><c> designing</c><00:07:11.580><c> your</c><00:07:11.789><c> app</c><00:07:11.940><c> which</c><00:07:12.330><c> portions</c>

00:07:12.830 --> 00:07:12.840 align:start position:0%
you're designing your app which portions
 

00:07:12.840 --> 00:07:14.990 align:start position:0%
you're designing your app which portions
of<00:07:12.930><c> your</c><00:07:13.379><c> application</c><00:07:13.949><c> make</c><00:07:14.190><c> more</c><00:07:14.430><c> sense</c><00:07:14.729><c> to</c>

00:07:14.990 --> 00:07:15.000 align:start position:0%
of your application make more sense to
 

00:07:15.000 --> 00:07:17.330 align:start position:0%
of your application make more sense to
be<00:07:15.210><c> multi-threaded</c><00:07:15.900><c> there</c><00:07:16.889><c> may</c><00:07:17.039><c> also</c><00:07:17.190><c> be</c>

00:07:17.330 --> 00:07:17.340 align:start position:0%
be multi-threaded there may also be
 

00:07:17.340 --> 00:07:19.879 align:start position:0%
be multi-threaded there may also be
other<00:07:17.460><c> options</c><00:07:17.879><c> that</c><00:07:18.240><c> make</c><00:07:18.389><c> sense</c><00:07:18.659><c> in</c><00:07:18.840><c> a</c><00:07:19.650><c> GUI</c>

00:07:19.879 --> 00:07:19.889 align:start position:0%
other options that make sense in a GUI
 

00:07:19.889 --> 00:07:21.950 align:start position:0%
other options that make sense in a GUI
application<00:07:20.610><c> you</c><00:07:21.060><c> always</c><00:07:21.270><c> have</c><00:07:21.419><c> a</c><00:07:21.449><c> run</c><00:07:21.750><c> loop</c>

00:07:21.950 --> 00:07:21.960 align:start position:0%
application you always have a run loop
 

00:07:21.960 --> 00:07:25.279 align:start position:0%
application you always have a run loop
going<00:07:22.349><c> that's</c><00:07:22.560><c> polling</c><00:07:23.190><c> for</c><00:07:23.340><c> events</c><00:07:23.639><c> and</c><00:07:24.289><c> if</c>

00:07:25.279 --> 00:07:25.289 align:start position:0%
going that's polling for events and if
 

00:07:25.289 --> 00:07:28.180 align:start position:0%
going that's polling for events and if
you<00:07:25.919><c> can</c><00:07:26.129><c> use</c><00:07:26.340><c> a</c><00:07:26.370><c> timer</c><00:07:26.759><c> for</c><00:07:26.909><c> a</c><00:07:27.300><c> short-lived</c>

00:07:28.180 --> 00:07:28.190 align:start position:0%
you can use a timer for a short-lived
 

00:07:28.190 --> 00:07:30.619 align:start position:0%
you can use a timer for a short-lived
task<00:07:29.190><c> that</c><00:07:29.550><c> might</c><00:07:29.699><c> be</c><00:07:29.819><c> a</c><00:07:29.849><c> better</c><00:07:30.060><c> option</c><00:07:30.330><c> in</c>

00:07:30.619 --> 00:07:30.629 align:start position:0%
task that might be a better option in
 

00:07:30.629 --> 00:07:34.550 align:start position:0%
task that might be a better option in
certain<00:07:30.900><c> cases</c><00:07:32.750><c> some</c><00:07:33.750><c> of</c><00:07:33.780><c> the</c><00:07:33.930><c> overhead</c><00:07:34.349><c> I</c><00:07:34.379><c> was</c>

00:07:34.550 --> 00:07:34.560 align:start position:0%
certain cases some of the overhead I was
 

00:07:34.560 --> 00:07:36.800 align:start position:0%
certain cases some of the overhead I was
talking<00:07:34.830><c> about</c><00:07:34.889><c> in</c><00:07:35.330><c> a</c><00:07:36.330><c> pre-emptive</c>

00:07:36.800 --> 00:07:36.810 align:start position:0%
talking about in a pre-emptive
 

00:07:36.810 --> 00:07:39.680 align:start position:0%
talking about in a pre-emptive
multitasking<00:07:37.380><c> operating</c><00:07:38.069><c> system</c><00:07:38.729><c> a</c><00:07:38.940><c> context</c>

00:07:39.680 --> 00:07:39.690 align:start position:0%
multitasking operating system a context
 

00:07:39.690 --> 00:07:41.450 align:start position:0%
multitasking operating system a context
switch<00:07:39.750><c> is</c><00:07:40.020><c> what</c><00:07:40.169><c> occurs</c><00:07:40.469><c> when</c><00:07:40.740><c> the</c><00:07:41.130><c> kernel</c>

00:07:41.450 --> 00:07:41.460 align:start position:0%
switch is what occurs when the kernel
 

00:07:41.460 --> 00:07:43.459 align:start position:0%
switch is what occurs when the kernel
decides<00:07:42.090><c> to</c><00:07:42.270><c> go</c><00:07:42.419><c> between</c><00:07:42.599><c> different</c><00:07:42.840><c> threads</c>

00:07:43.459 --> 00:07:43.469 align:start position:0%
decides to go between different threads
 

00:07:43.469 --> 00:07:45.189 align:start position:0%
decides to go between different threads
that<00:07:43.590><c> are</c><00:07:43.650><c> running</c><00:07:43.860><c> on</c><00:07:44.069><c> the</c><00:07:44.190><c> system</c><00:07:44.370><c> and</c>

00:07:45.189 --> 00:07:45.199 align:start position:0%
that are running on the system and
 

00:07:45.199 --> 00:07:47.749 align:start position:0%
that are running on the system and
there's<00:07:46.199><c> data</c><00:07:46.560><c> associated</c><00:07:47.159><c> with</c><00:07:47.279><c> every</c>

00:07:47.749 --> 00:07:47.759 align:start position:0%
there's data associated with every
 

00:07:47.759 --> 00:07:50.540 align:start position:0%
there's data associated with every
thread<00:07:48.060><c> basically</c><00:07:48.990><c> the</c><00:07:49.080><c> register</c><00:07:49.529><c> state</c><00:07:49.860><c> that</c>

00:07:50.540 --> 00:07:50.550 align:start position:0%
thread basically the register state that
 

00:07:50.550 --> 00:07:52.430 align:start position:0%
thread basically the register state that
each<00:07:50.849><c> thread</c><00:07:51.180><c> takes</c><00:07:51.419><c> up</c><00:07:51.659><c> needs</c><00:07:51.900><c> to</c><00:07:52.020><c> be</c><00:07:52.169><c> saved</c>

00:07:52.430 --> 00:07:52.440 align:start position:0%
each thread takes up needs to be saved
 

00:07:52.440 --> 00:07:54.439 align:start position:0%
each thread takes up needs to be saved
and<00:07:52.650><c> restored</c><00:07:52.770><c> between</c><00:07:53.250><c> threads</c><00:07:53.819><c> there</c><00:07:54.330><c> may</c>

00:07:54.439 --> 00:07:54.449 align:start position:0%
and restored between threads there may
 

00:07:54.449 --> 00:07:57.170 align:start position:0%
and restored between threads there may
also<00:07:54.599><c> be</c><00:07:54.800><c> extra</c><00:07:55.800><c> register</c><00:07:56.250><c> state</c><00:07:56.520><c> depending</c>

00:07:57.170 --> 00:07:57.180 align:start position:0%
also be extra register state depending
 

00:07:57.180 --> 00:07:58.490 align:start position:0%
also be extra register state depending
on<00:07:57.300><c> if</c><00:07:57.449><c> that</c><00:07:57.659><c> thread</c><00:07:57.990><c> has</c><00:07:58.199><c> used</c>

00:07:58.490 --> 00:07:58.500 align:start position:0%
on if that thread has used
 

00:07:58.500 --> 00:08:00.800 align:start position:0%
on if that thread has used
floating-point<00:07:59.039><c> or</c><00:07:59.490><c> even</c><00:07:59.849><c> the</c><00:08:00.240><c> velocity</c>

00:08:00.800 --> 00:08:00.810 align:start position:0%
floating-point or even the velocity
 

00:08:00.810 --> 00:08:03.290 align:start position:0%
floating-point or even the velocity
engine<00:08:01.169><c> and</c><00:08:01.349><c> that</c><00:08:02.190><c> amount</c><00:08:02.610><c> of</c><00:08:02.699><c> data</c><00:08:02.879><c> is</c>

00:08:03.290 --> 00:08:03.300 align:start position:0%
engine and that amount of data is
 

00:08:03.300 --> 00:08:05.390 align:start position:0%
engine and that amount of data is
obviously<00:08:03.990><c> a</c><00:08:04.319><c> little</c><00:08:04.500><c> bit</c><00:08:04.650><c> more</c><00:08:04.919><c> expensive</c>

00:08:05.390 --> 00:08:05.400 align:start position:0%
obviously a little bit more expensive
 

00:08:05.400 --> 00:08:07.070 align:start position:0%
obviously a little bit more expensive
when<00:08:05.610><c> you're</c><00:08:05.759><c> switching</c><00:08:05.940><c> extra</c><00:08:06.779><c> threads</c>

00:08:07.070 --> 00:08:07.080 align:start position:0%
when you're switching extra threads
 

00:08:07.080 --> 00:08:09.830 align:start position:0%
when you're switching extra threads
throughout<00:08:07.349><c> your</c><00:08:07.529><c> application</c><00:08:08.479><c> the</c><00:08:09.479><c> thread</c>

00:08:09.830 --> 00:08:09.840 align:start position:0%
throughout your application the thread
 

00:08:09.840 --> 00:08:11.719 align:start position:0%
throughout your application the thread
memory<00:08:10.440><c> footprint</c><00:08:10.889><c> is</c><00:08:11.069><c> also</c><00:08:11.340><c> something</c><00:08:11.580><c> that</c>

00:08:11.719 --> 00:08:11.729 align:start position:0%
memory footprint is also something that
 

00:08:11.729 --> 00:08:15.769 align:start position:0%
memory footprint is also something that
might<00:08:12.300><c> be</c><00:08:12.449><c> significant</c><00:08:13.110><c> in</c><00:08:13.759><c> Mac</c><00:08:14.759><c> OS</c><00:08:15.000><c> 10</c><00:08:15.029><c> every</c>

00:08:15.769 --> 00:08:15.779 align:start position:0%
might be significant in Mac OS 10 every
 

00:08:15.779 --> 00:08:18.649 align:start position:0%
might be significant in Mac OS 10 every
thread<00:08:16.020><c> gets</c><00:08:16.229><c> a</c><00:08:16.379><c> virtual</c><00:08:17.000><c> half</c><00:08:18.000><c> a</c><00:08:18.180><c> megabyte</c><00:08:18.599><c> of</c>

00:08:18.649 --> 00:08:18.659 align:start position:0%
thread gets a virtual half a megabyte of
 

00:08:18.659 --> 00:08:20.830 align:start position:0%
thread gets a virtual half a megabyte of
stack<00:08:19.229><c> space</c><00:08:19.440><c> for</c><00:08:19.860><c> instance</c><00:08:20.190><c> which</c><00:08:20.789><c> is</c>

00:08:20.830 --> 00:08:20.840 align:start position:0%
stack space for instance which is
 

00:08:20.840 --> 00:08:22.850 align:start position:0%
stack space for instance which is
controllable<00:08:21.840><c> when</c><00:08:22.080><c> you</c><00:08:22.169><c> create</c><00:08:22.500><c> the</c><00:08:22.620><c> thread</c>

00:08:22.850 --> 00:08:22.860 align:start position:0%
controllable when you create the thread
 

00:08:22.860 --> 00:08:24.769 align:start position:0%
controllable when you create the thread
but<00:08:23.250><c> you</c><00:08:23.610><c> have</c><00:08:23.759><c> to</c><00:08:23.879><c> be</c><00:08:24.000><c> aware</c><00:08:24.240><c> of</c><00:08:24.300><c> that</c><00:08:24.569><c> so</c><00:08:24.719><c> if</c>

00:08:24.769 --> 00:08:24.779 align:start position:0%
but you have to be aware of that so if
 

00:08:24.779 --> 00:08:26.659 align:start position:0%
but you have to be aware of that so if
you're<00:08:24.930><c> creating</c><00:08:25.080><c> a</c><00:08:25.319><c> thread</c><00:08:25.560><c> that</c><00:08:25.680><c> only</c><00:08:25.860><c> calls</c>

00:08:26.659 --> 00:08:26.669 align:start position:0%
you're creating a thread that only calls
 

00:08:26.669 --> 00:08:28.760 align:start position:0%
you're creating a thread that only calls
one<00:08:26.940><c> function</c><00:08:27.449><c> you</c><00:08:27.870><c> may</c><00:08:28.020><c> want</c><00:08:28.199><c> to</c><00:08:28.259><c> reduce</c><00:08:28.409><c> the</c>

00:08:28.760 --> 00:08:28.770 align:start position:0%
one function you may want to reduce the
 

00:08:28.770 --> 00:08:31.339 align:start position:0%
one function you may want to reduce the
stack<00:08:29.009><c> space</c><00:08:29.279><c> and</c><00:08:29.520><c> I'll</c><00:08:29.759><c> discuss</c><00:08:30.300><c> API</c><00:08:30.960><c> is</c><00:08:31.080><c> to</c>

00:08:31.339 --> 00:08:31.349 align:start position:0%
stack space and I'll discuss API is to
 

00:08:31.349 --> 00:08:34.310 align:start position:0%
stack space and I'll discuss API is to
do<00:08:31.469><c> that</c><00:08:31.650><c> or</c><00:08:31.800><c> a</c><00:08:32.279><c> little</c><00:08:32.669><c> bit</c><00:08:32.760><c> later</c><00:08:33.320><c> thread</c>

00:08:34.310 --> 00:08:34.320 align:start position:0%
do that or a little bit later thread
 

00:08:34.320 --> 00:08:36.829 align:start position:0%
do that or a little bit later thread
creation<00:08:34.860><c> in</c><00:08:35.159><c> its</c><00:08:35.579><c> in</c><00:08:35.880><c> and</c><00:08:36.149><c> of</c><00:08:36.209><c> itself</c><00:08:36.570><c> is</c><00:08:36.810><c> a</c>

00:08:36.829 --> 00:08:36.839 align:start position:0%
creation in its in and of itself is a
 

00:08:36.839 --> 00:08:39.740 align:start position:0%
creation in its in and of itself is a
little<00:08:37.140><c> bit</c><00:08:37.260><c> of</c><00:08:38.070><c> overhead</c><00:08:38.940><c> that</c><00:08:39.000><c> you</c><00:08:39.390><c> need</c><00:08:39.630><c> to</c>

00:08:39.740 --> 00:08:39.750 align:start position:0%
little bit of overhead that you need to
 

00:08:39.750 --> 00:08:42.649 align:start position:0%
little bit of overhead that you need to
worry<00:08:39.930><c> about</c><00:08:40.169><c> because</c><00:08:40.560><c> the</c><00:08:41.459><c> act</c><00:08:42.000><c> of</c><00:08:42.329><c> creating</c>

00:08:42.649 --> 00:08:42.659 align:start position:0%
worry about because the act of creating
 

00:08:42.659 --> 00:08:44.300 align:start position:0%
worry about because the act of creating
a<00:08:42.870><c> thread</c><00:08:43.079><c> introduces</c><00:08:43.770><c> those</c><00:08:43.979><c> kernel</c>

00:08:44.300 --> 00:08:44.310 align:start position:0%
a thread introduces those kernel
 

00:08:44.310 --> 00:08:45.140 align:start position:0%
a thread introduces those kernel
resources<00:08:44.850><c> there</c>

00:08:45.140 --> 00:08:45.150 align:start position:0%
resources there
 

00:08:45.150 --> 00:08:48.920 align:start position:0%
resources there
a<00:08:46.040><c> set</c><00:08:47.040><c> of</c><00:08:47.130><c> mock</c><00:08:47.370><c> api's</c><00:08:47.850><c> that</c><00:08:48.150><c> is</c><00:08:48.300><c> used</c><00:08:48.630><c> under</c>

00:08:48.920 --> 00:08:48.930 align:start position:0%
a set of mock api's that is used under
 

00:08:48.930 --> 00:08:52.760 align:start position:0%
a set of mock api's that is used under
the<00:08:48.960><c> covers</c><00:08:49.380><c> to</c><00:08:49.980><c> create</c><00:08:50.340><c> threads</c><00:08:50.670><c> and</c><00:08:51.770><c> the</c>

00:08:52.760 --> 00:08:52.770 align:start position:0%
the covers to create threads and the
 

00:08:52.770 --> 00:08:55.670 align:start position:0%
the covers to create threads and the
calls<00:08:53.550><c> that</c><00:08:53.730><c> you</c><00:08:53.940><c> use</c><00:08:54.720><c> to</c><00:08:54.960><c> create</c><00:08:54.990><c> the</c><00:08:55.380><c> stack</c>

00:08:55.670 --> 00:08:55.680 align:start position:0%
calls that you use to create the stack
 

00:08:55.680 --> 00:08:58.460 align:start position:0%
calls that you use to create the stack
and<00:08:55.950><c> the</c><00:08:56.100><c> actual</c><00:08:56.370><c> thread</c><00:08:56.700><c> itself</c><00:08:57.170><c> take</c><00:08:58.170><c> up</c><00:08:58.320><c> a</c>

00:08:58.460 --> 00:08:58.470 align:start position:0%
and the actual thread itself take up a
 

00:08:58.470 --> 00:09:02.000 align:start position:0%
and the actual thread itself take up a
little<00:08:58.620><c> bit</c><00:08:58.800><c> of</c><00:08:58.950><c> overhead</c><00:09:00.500><c> throughout</c><00:09:01.500><c> the</c><00:09:01.680><c> AP</c>

00:09:02.000 --> 00:09:02.010 align:start position:0%
little bit of overhead throughout the AP
 

00:09:02.010 --> 00:09:04.580 align:start position:0%
little bit of overhead throughout the AP
is<00:09:02.160><c> that</c><00:09:02.550><c> Mac</c><00:09:02.910><c> OS</c><00:09:03.150><c> 10</c><00:09:03.180><c> provides</c><00:09:03.720><c> for</c>

00:09:04.580 --> 00:09:04.590 align:start position:0%
is that Mac OS 10 provides for
 

00:09:04.590 --> 00:09:05.930 align:start position:0%
is that Mac OS 10 provides for
multi-threading<00:09:05.250><c> there</c><00:09:05.370><c> are</c><00:09:05.430><c> some</c><00:09:05.550><c> common</c>

00:09:05.930 --> 00:09:05.940 align:start position:0%
multi-threading there are some common
 

00:09:05.940 --> 00:09:09.380 align:start position:0%
multi-threading there are some common
concepts<00:09:06.980><c> all</c><00:09:07.980><c> these</c><00:09:08.370><c> api's</c><00:09:08.790><c> let</c><00:09:09.000><c> you</c><00:09:09.120><c> create</c>

00:09:09.380 --> 00:09:09.390 align:start position:0%
concepts all these api's let you create
 

00:09:09.390 --> 00:09:11.840 align:start position:0%
concepts all these api's let you create
a<00:09:09.480><c> thread</c><00:09:09.810><c> and</c><00:09:09.870><c> let</c><00:09:10.800><c> the</c><00:09:10.920><c> thread</c><00:09:11.130><c> exit</c><00:09:11.490><c> itself</c>

00:09:11.840 --> 00:09:11.850 align:start position:0%
a thread and let the thread exit itself
 

00:09:11.850 --> 00:09:13.820 align:start position:0%
a thread and let the thread exit itself
there<00:09:12.450><c> are</c><00:09:12.480><c> synchronization</c><00:09:13.320><c> primitives</c>

00:09:13.820 --> 00:09:13.830 align:start position:0%
there are synchronization primitives
 

00:09:13.830 --> 00:09:17.240 align:start position:0%
there are synchronization primitives
that<00:09:14.400><c> let</c><00:09:14.880><c> you</c><00:09:15.110><c> coordinate</c><00:09:16.110><c> the</c><00:09:16.350><c> events</c><00:09:17.130><c> that</c>

00:09:17.240 --> 00:09:17.250 align:start position:0%
that let you coordinate the events that
 

00:09:17.250 --> 00:09:18.980 align:start position:0%
that let you coordinate the events that
are<00:09:17.340><c> occurring</c><00:09:17.430><c> between</c><00:09:18.030><c> multiple</c><00:09:18.720><c> threads</c>

00:09:18.980 --> 00:09:18.990 align:start position:0%
are occurring between multiple threads
 

00:09:18.990 --> 00:09:22.700 align:start position:0%
are occurring between multiple threads
and<00:09:19.950><c> every</c><00:09:20.790><c> API</c><00:09:21.120><c> will</c><00:09:21.420><c> have</c><00:09:21.600><c> a</c><00:09:21.870><c> set</c><00:09:22.350><c> of</c><00:09:22.470><c> threads</c>

00:09:22.700 --> 00:09:22.710 align:start position:0%
and every API will have a set of threads
 

00:09:22.710 --> 00:09:25.550 align:start position:0%
and every API will have a set of threads
safe<00:09:23.010><c> services</c><00:09:23.610><c> they</c><00:09:23.910><c> the</c><00:09:24.840><c> documentation</c>

00:09:25.550 --> 00:09:25.560 align:start position:0%
safe services they the documentation
 

00:09:25.560 --> 00:09:27.290 align:start position:0%
safe services they the documentation
describes<00:09:25.740><c> things</c><00:09:26.400><c> that</c><00:09:26.640><c> you</c><00:09:26.700><c> can</c><00:09:26.940><c> and</c><00:09:27.090><c> can't</c>

00:09:27.290 --> 00:09:27.300 align:start position:0%
describes things that you can and can't
 

00:09:27.300 --> 00:09:29.150 align:start position:0%
describes things that you can and can't
do<00:09:27.450><c> for</c><00:09:27.600><c> multiple</c><00:09:27.960><c> threads</c><00:09:28.230><c> we're</c><00:09:28.740><c> working</c>

00:09:29.150 --> 00:09:29.160 align:start position:0%
do for multiple threads we're working
 

00:09:29.160 --> 00:09:31.130 align:start position:0%
do for multiple threads we're working
toward<00:09:29.430><c> making</c><00:09:29.640><c> it</c><00:09:29.910><c> a</c><00:09:30.090><c> lot</c><00:09:30.390><c> easier</c><00:09:30.450><c> so</c><00:09:30.990><c> that</c>

00:09:31.130 --> 00:09:31.140 align:start position:0%
toward making it a lot easier so that
 

00:09:31.140 --> 00:09:32.540 align:start position:0%
toward making it a lot easier so that
you<00:09:31.200><c> don't</c><00:09:31.380><c> have</c><00:09:31.530><c> to</c><00:09:31.620><c> worry</c><00:09:31.770><c> about</c><00:09:31.830><c> which</c><00:09:32.190><c> AP</c>

00:09:32.540 --> 00:09:32.550 align:start position:0%
you don't have to worry about which AP
 

00:09:32.550 --> 00:09:34.070 align:start position:0%
you don't have to worry about which AP
is<00:09:32.700><c> our</c><00:09:32.880><c> thread</c><00:09:33.120><c> safe</c><00:09:33.360><c> by</c><00:09:33.600><c> making</c><00:09:33.630><c> sure</c><00:09:33.930><c> that</c>

00:09:34.070 --> 00:09:34.080 align:start position:0%
is our thread safe by making sure that
 

00:09:34.080 --> 00:09:36.080 align:start position:0%
is our thread safe by making sure that
everything<00:09:35.070><c> that</c><00:09:35.220><c> you</c><00:09:35.340><c> call</c><00:09:35.580><c> will</c><00:09:35.760><c> be</c><00:09:35.790><c> thread</c>

00:09:36.080 --> 00:09:36.090 align:start position:0%
everything that you call will be thread
 

00:09:36.090 --> 00:09:40.610 align:start position:0%
everything that you call will be thread
safe<00:09:36.330><c> but</c><00:09:36.600><c> that's</c><00:09:37.260><c> not</c><00:09:37.530><c> quite</c><00:09:37.740><c> there</c><00:09:37.950><c> yet</c><00:09:39.620><c> in</c>

00:09:40.610 --> 00:09:40.620 align:start position:0%
safe but that's not quite there yet in
 

00:09:40.620 --> 00:09:43.160 align:start position:0%
safe but that's not quite there yet in
Mac<00:09:40.920><c> OS</c><00:09:41.160><c> 10</c><00:09:41.240><c> threads</c><00:09:42.240><c> are</c><00:09:42.510><c> the</c><00:09:42.720><c> scheduling</c>

00:09:43.160 --> 00:09:43.170 align:start position:0%
Mac OS 10 threads are the scheduling
 

00:09:43.170 --> 00:09:45.620 align:start position:0%
Mac OS 10 threads are the scheduling
primitive<00:09:43.620><c> it's</c><00:09:43.770><c> the</c><00:09:44.370><c> unit</c><00:09:45.030><c> that</c><00:09:45.150><c> the</c><00:09:45.300><c> kernel</c>

00:09:45.620 --> 00:09:45.630 align:start position:0%
primitive it's the unit that the kernel
 

00:09:45.630 --> 00:09:48.530 align:start position:0%
primitive it's the unit that the kernel
uses<00:09:46.050><c> when</c><00:09:46.740><c> giving</c><00:09:47.430><c> up</c><00:09:47.670><c> the</c><00:09:47.970><c> work</c><00:09:48.180><c> that</c><00:09:48.360><c> needs</c>

00:09:48.530 --> 00:09:48.540 align:start position:0%
uses when giving up the work that needs
 

00:09:48.540 --> 00:09:51.620 align:start position:0%
uses when giving up the work that needs
to<00:09:48.630><c> be</c><00:09:48.660><c> done</c><00:09:48.930><c> at</c><00:09:49.140><c> every</c><00:09:49.350><c> time</c><00:09:49.770><c> slice</c><00:09:50.630><c> our</c>

00:09:51.620 --> 00:09:51.630 align:start position:0%
to be done at every time slice our
 

00:09:51.630 --> 00:09:53.780 align:start position:0%
to be done at every time slice our
threads<00:09:52.020><c> are</c><00:09:52.200><c> fully</c><00:09:52.440><c> pre-emptive</c><00:09:53.010><c> so</c><00:09:53.250><c> the</c>

00:09:53.780 --> 00:09:53.790 align:start position:0%
threads are fully pre-emptive so the
 

00:09:53.790 --> 00:09:55.310 align:start position:0%
threads are fully pre-emptive so the
kernel<00:09:54.150><c> will</c><00:09:54.270><c> interrupt</c><00:09:54.600><c> a</c><00:09:54.900><c> thread</c><00:09:55.140><c> that's</c>

00:09:55.310 --> 00:09:55.320 align:start position:0%
kernel will interrupt a thread that's
 

00:09:55.320 --> 00:09:58.190 align:start position:0%
kernel will interrupt a thread that's
running<00:09:55.560><c> to</c><00:09:56.070><c> start</c><00:09:56.430><c> the</c><00:09:56.580><c> next</c><00:09:56.820><c> thread</c><00:09:57.200><c> there</c>

00:09:58.190 --> 00:09:58.200 align:start position:0%
running to start the next thread there
 

00:09:58.200 --> 00:09:59.840 align:start position:0%
running to start the next thread there
are<00:09:58.290><c> some</c><00:09:58.530><c> exceptions</c><00:09:58.980><c> to</c><00:09:59.250><c> that</c><00:09:59.370><c> where</c><00:09:59.700><c> we</c>

00:09:59.840 --> 00:09:59.850 align:start position:0%
are some exceptions to that where we
 

00:09:59.850 --> 00:10:02.810 align:start position:0%
are some exceptions to that where we
have<00:10:00.030><c> some</c><00:10:00.390><c> scheduling</c><00:10:00.990><c> models</c><00:10:01.770><c> where</c><00:10:01.980><c> a</c><00:10:02.340><c> real</c>

00:10:02.810 --> 00:10:02.820 align:start position:0%
have some scheduling models where a real
 

00:10:02.820 --> 00:10:05.480 align:start position:0%
have some scheduling models where a real
time<00:10:03.090><c> like</c><00:10:03.360><c> API</c><00:10:04.110><c> can</c><00:10:04.410><c> be</c><00:10:04.500><c> used</c><00:10:04.740><c> to</c><00:10:04.950><c> specify</c>

00:10:05.480 --> 00:10:05.490 align:start position:0%
time like API can be used to specify
 

00:10:05.490 --> 00:10:07.250 align:start position:0%
time like API can be used to specify
somewhat<00:10:06.090><c> of</c><00:10:06.180><c> a</c><00:10:06.270><c> deadline</c><00:10:06.600><c> schedule</c><00:10:07.140><c> where</c>

00:10:07.250 --> 00:10:07.260 align:start position:0%
somewhat of a deadline schedule where
 

00:10:07.260 --> 00:10:08.690 align:start position:0%
somewhat of a deadline schedule where
you<00:10:07.290><c> can</c><00:10:07.470><c> say</c><00:10:07.620><c> I</c><00:10:07.650><c> want</c><00:10:07.800><c> my</c><00:10:07.950><c> thread</c><00:10:08.190><c> to</c><00:10:08.340><c> run</c><00:10:08.370><c> this</c>

00:10:08.690 --> 00:10:08.700 align:start position:0%
you can say I want my thread to run this
 

00:10:08.700 --> 00:10:10.610 align:start position:0%
you can say I want my thread to run this
long<00:10:08.970><c> but</c><00:10:09.540><c> in</c><00:10:09.660><c> most</c><00:10:09.840><c> cases</c><00:10:09.990><c> the</c><00:10:10.500><c> default</c>

00:10:10.610 --> 00:10:10.620 align:start position:0%
long but in most cases the default
 

00:10:10.620 --> 00:10:12.980 align:start position:0%
long but in most cases the default
threads<00:10:11.130><c> that</c><00:10:11.250><c> get</c><00:10:11.610><c> created</c><00:10:11.760><c> are</c><00:10:12.150><c> normally</c>

00:10:12.980 --> 00:10:12.990 align:start position:0%
threads that get created are normally
 

00:10:12.990 --> 00:10:15.590 align:start position:0%
threads that get created are normally
preempted<00:10:13.580><c> we</c><00:10:14.580><c> use</c><00:10:14.730><c> a</c><00:10:14.760><c> priority</c><00:10:15.360><c> based</c>

00:10:15.590 --> 00:10:15.600 align:start position:0%
preempted we use a priority based
 

00:10:15.600 --> 00:10:18.170 align:start position:0%
preempted we use a priority based
scheduling<00:10:16.110><c> model</c><00:10:16.650><c> so</c><00:10:16.920><c> by</c><00:10:17.640><c> default</c><00:10:18.030><c> all</c>

00:10:18.170 --> 00:10:18.180 align:start position:0%
scheduling model so by default all
 

00:10:18.180 --> 00:10:20.180 align:start position:0%
scheduling model so by default all
threads<00:10:18.540><c> get</c><00:10:18.750><c> the</c><00:10:18.930><c> same</c><00:10:19.140><c> priority</c><00:10:19.740><c> when</c><00:10:20.100><c> you</c>

00:10:20.180 --> 00:10:20.190 align:start position:0%
threads get the same priority when you
 

00:10:20.190 --> 00:10:21.830 align:start position:0%
threads get the same priority when you
create<00:10:20.520><c> threads</c><00:10:20.880><c> or</c><00:10:21.060><c> after</c><00:10:21.390><c> the</c><00:10:21.510><c> thread</c><00:10:21.720><c> has</c>

00:10:21.830 --> 00:10:21.840 align:start position:0%
create threads or after the thread has
 

00:10:21.840 --> 00:10:24.320 align:start position:0%
create threads or after the thread has
been<00:10:22.020><c> created</c><00:10:22.560><c> you</c><00:10:22.740><c> can</c><00:10:23.040><c> change</c><00:10:23.880><c> or</c><00:10:24.180><c> modify</c>

00:10:24.320 --> 00:10:24.330 align:start position:0%
been created you can change or modify
 

00:10:24.330 --> 00:10:26.450 align:start position:0%
been created you can change or modify
that<00:10:24.870><c> priority</c><00:10:25.410><c> so</c><00:10:25.800><c> if</c><00:10:25.920><c> you</c><00:10:26.010><c> have</c><00:10:26.100><c> a</c><00:10:26.130><c> thread</c>

00:10:26.450 --> 00:10:26.460 align:start position:0%
that priority so if you have a thread
 

00:10:26.460 --> 00:10:28.280 align:start position:0%
that priority so if you have a thread
that<00:10:26.610><c> needs</c><00:10:26.790><c> to</c><00:10:27.000><c> be</c><00:10:27.030><c> more</c><00:10:27.660><c> important</c><00:10:28.170><c> than</c>

00:10:28.280 --> 00:10:28.290 align:start position:0%
that needs to be more important than
 

00:10:28.290 --> 00:10:29.990 align:start position:0%
that needs to be more important than
other<00:10:28.440><c> threads</c><00:10:28.800><c> either</c><00:10:29.130><c> in</c><00:10:29.310><c> your</c><00:10:29.430><c> application</c>

00:10:29.990 --> 00:10:30.000 align:start position:0%
other threads either in your application
 

00:10:30.000 --> 00:10:32.090 align:start position:0%
other threads either in your application
or<00:10:30.210><c> system-wide</c><00:10:30.990><c> you</c><00:10:31.260><c> can</c><00:10:31.410><c> change</c><00:10:31.680><c> that</c><00:10:31.860><c> you</c>

00:10:32.090 --> 00:10:32.100 align:start position:0%
or system-wide you can change that you
 

00:10:32.100 --> 00:10:33.980 align:start position:0%
or system-wide you can change that you
can<00:10:32.370><c> also</c><00:10:32.490><c> depress</c><00:10:33.090><c> the</c><00:10:33.300><c> priority</c><00:10:33.750><c> of</c><00:10:33.900><c> a</c>

00:10:33.980 --> 00:10:33.990 align:start position:0%
can also depress the priority of a
 

00:10:33.990 --> 00:10:36.830 align:start position:0%
can also depress the priority of a
thread<00:10:34.260><c> if</c><00:10:34.470><c> you</c><00:10:34.920><c> want</c><00:10:35.160><c> that</c><00:10:35.490><c> thread</c><00:10:35.820><c> to</c><00:10:36.090><c> be</c><00:10:36.630><c> in</c>

00:10:36.830 --> 00:10:36.840 align:start position:0%
thread if you want that thread to be in
 

00:10:36.840 --> 00:10:38.240 align:start position:0%
thread if you want that thread to be in
the<00:10:36.930><c> background</c><00:10:37.140><c> more</c><00:10:37.620><c> if</c><00:10:37.770><c> it's</c><00:10:37.920><c> just</c><00:10:38.100><c> doing</c>

00:10:38.240 --> 00:10:38.250 align:start position:0%
the background more if it's just doing
 

00:10:38.250 --> 00:10:40.130 align:start position:0%
the background more if it's just doing
some<00:10:38.640><c> low-level</c><00:10:39.210><c> work</c><00:10:39.540><c> that</c><00:10:39.720><c> doesn't</c><00:10:39.990><c> need</c><00:10:40.080><c> to</c>

00:10:40.130 --> 00:10:40.140 align:start position:0%
some low-level work that doesn't need to
 

00:10:40.140 --> 00:10:44.060 align:start position:0%
some low-level work that doesn't need to
be<00:10:40.350><c> in</c><00:10:40.560><c> the</c><00:10:41.010><c> user's</c><00:10:41.340><c> face</c><00:10:42.410><c> we</c><00:10:43.410><c> use</c><00:10:43.560><c> a</c><00:10:43.590><c> one</c><00:10:43.890><c> to</c>

00:10:44.060 --> 00:10:44.070 align:start position:0%
be in the user's face we use a one to
 

00:10:44.070 --> 00:10:46.190 align:start position:0%
be in the user's face we use a one to
one<00:10:44.100><c> threading</c><00:10:44.670><c> model</c><00:10:44.970><c> which</c><00:10:45.480><c> means</c><00:10:45.690><c> that</c><00:10:46.020><c> as</c>

00:10:46.190 --> 00:10:46.200 align:start position:0%
one threading model which means that as
 

00:10:46.200 --> 00:10:49.460 align:start position:0%
one threading model which means that as
the<00:10:46.680><c> api's</c><00:10:47.550><c> I</c><00:10:47.790><c> described</c><00:10:48.270><c> are</c><00:10:48.600><c> calling</c><00:10:49.230><c> into</c>

00:10:49.460 --> 00:10:49.470 align:start position:0%
the api's I described are calling into
 

00:10:49.470 --> 00:10:52.180 align:start position:0%
the api's I described are calling into
the<00:10:49.500><c> low-level</c><00:10:49.980><c> kernel</c><00:10:50.430><c> threads</c><00:10:50.730><c> we</c><00:10:51.420><c> use</c><00:10:51.690><c> a</c>

00:10:52.180 --> 00:10:52.190 align:start position:0%
the low-level kernel threads we use a
 

00:10:52.190 --> 00:10:54.800 align:start position:0%
the low-level kernel threads we use a
single<00:10:53.190><c> kernel</c><00:10:53.430><c> thread</c><00:10:53.790><c> per</c><00:10:54.090><c> high-level</c>

00:10:54.800 --> 00:10:54.810 align:start position:0%
single kernel thread per high-level
 

00:10:54.810 --> 00:10:57.800 align:start position:0%
single kernel thread per high-level
thread<00:10:55.080><c> concept</c><00:10:55.620><c> so</c><00:10:55.860><c> as</c><00:10:56.300><c> I</c><00:10:57.300><c> discuss</c><00:10:57.660><c> these</c>

00:10:57.800 --> 00:10:57.810 align:start position:0%
thread concept so as I discuss these
 

00:10:57.810 --> 00:10:59.060 align:start position:0%
thread concept so as I discuss these
api's<00:10:58.230><c> keep</c><00:10:58.500><c> that</c><00:10:58.680><c> in</c><00:10:58.830><c> mind</c>

00:10:59.060 --> 00:10:59.070 align:start position:0%
api's keep that in mind
 

00:10:59.070 --> 00:11:00.620 align:start position:0%
api's keep that in mind
there<00:10:59.460><c> are</c><00:10:59.550><c> other</c><00:10:59.730><c> implementations</c><00:11:00.480><c> out</c>

00:11:00.620 --> 00:11:00.630 align:start position:0%
there are other implementations out
 

00:11:00.630 --> 00:11:02.660 align:start position:0%
there are other implementations out
there<00:11:00.840><c> where</c><00:11:01.020><c> you</c><00:11:01.410><c> have</c><00:11:01.440><c> multiplexing</c><00:11:02.430><c> of</c>

00:11:02.660 --> 00:11:02.670 align:start position:0%
there where you have multiplexing of
 

00:11:02.670 --> 00:11:05.180 align:start position:0%
there where you have multiplexing of
threads<00:11:03.390><c> in</c><00:11:03.690><c> userspace</c><00:11:04.020><c> per</c><00:11:04.560><c> kernel</c><00:11:04.950><c> thread</c>

00:11:05.180 --> 00:11:05.190 align:start position:0%
threads in userspace per kernel thread
 

00:11:05.190 --> 00:11:07.480 align:start position:0%
threads in userspace per kernel thread
but<00:11:05.790><c> the</c><00:11:06.060><c> added</c><00:11:06.330><c> complexity</c><00:11:06.780><c> of</c><00:11:06.900><c> that</c><00:11:06.990><c> and</c>

00:11:07.480 --> 00:11:07.490 align:start position:0%
but the added complexity of that and
 

00:11:07.490 --> 00:11:10.160 align:start position:0%
but the added complexity of that and
scalability<00:11:08.490><c> on</c><00:11:08.790><c> empty</c><00:11:09.060><c> machines</c><00:11:09.480><c> makes</c><00:11:09.960><c> it</c><00:11:10.110><c> a</c>

00:11:10.160 --> 00:11:10.170 align:start position:0%
scalability on empty machines makes it a
 

00:11:10.170 --> 00:11:12.320 align:start position:0%
scalability on empty machines makes it a
little<00:11:10.260><c> bit</c><00:11:10.500><c> more</c><00:11:10.680><c> difficult</c><00:11:11.370><c> to</c><00:11:11.430><c> justify</c><00:11:11.820><c> on</c>

00:11:12.320 --> 00:11:12.330 align:start position:0%
little bit more difficult to justify on
 

00:11:12.330 --> 00:11:16.760 align:start position:0%
little bit more difficult to justify on
OS<00:11:13.020><c> 10</c><00:11:14.180><c> mock</c><00:11:15.180><c> threads</c><00:11:15.600><c> as</c><00:11:15.840><c> I</c><00:11:15.990><c> said</c><00:11:16.200><c> are</c><00:11:16.350><c> the</c><00:11:16.500><c> the</c>

00:11:16.760 --> 00:11:16.770 align:start position:0%
OS 10 mock threads as I said are the the
 

00:11:16.770 --> 00:11:19.250 align:start position:0%
OS 10 mock threads as I said are the the
basis<00:11:17.130><c> of</c><00:11:17.250><c> our</c><00:11:17.490><c> threading</c><00:11:17.910><c> model</c><00:11:18.030><c> in</c><00:11:18.360><c> general</c>

00:11:19.250 --> 00:11:19.260 align:start position:0%
basis of our threading model in general
 

00:11:19.260 --> 00:11:21.350 align:start position:0%
basis of our threading model in general
you<00:11:19.560><c> can</c><00:11:19.770><c> inspect</c><00:11:20.220><c> the</c><00:11:20.370><c> mock</c><00:11:20.550><c> thread</c><00:11:20.940><c> by</c><00:11:21.120><c> using</c>

00:11:21.350 --> 00:11:21.360 align:start position:0%
you can inspect the mock thread by using
 

00:11:21.360 --> 00:11:23.600 align:start position:0%
you can inspect the mock thread by using
the<00:11:21.540><c> mock</c><00:11:21.690><c> API</c><00:11:22.080><c> but</c><00:11:22.500><c> you</c><00:11:22.830><c> really</c><00:11:23.100><c> want</c><00:11:23.280><c> to</c><00:11:23.430><c> use</c>

00:11:23.600 --> 00:11:23.610 align:start position:0%
the mock API but you really want to use
 

00:11:23.610 --> 00:11:25.520 align:start position:0%
the mock API but you really want to use
the<00:11:23.940><c> API</c><00:11:24.540><c> that's</c><00:11:24.810><c> appropriate</c><00:11:25.320><c> for</c><00:11:25.470><c> your</c>

00:11:25.520 --> 00:11:25.530 align:start position:0%
the API that's appropriate for your
 

00:11:25.530 --> 00:11:26.900 align:start position:0%
the API that's appropriate for your
application<00:11:25.590><c> if</c><00:11:26.220><c> you're</c><00:11:26.610><c> writing</c><00:11:26.760><c> a</c>

00:11:26.900 --> 00:11:26.910 align:start position:0%
application if you're writing a
 

00:11:26.910 --> 00:11:28.910 align:start position:0%
application if you're writing a
high-level<00:11:27.300><c> carbon</c><00:11:27.870><c> or</c><00:11:28.050><c> cocoa</c><00:11:28.350><c> application</c>

00:11:28.910 --> 00:11:28.920 align:start position:0%
high-level carbon or cocoa application
 

00:11:28.920 --> 00:11:32.240 align:start position:0%
high-level carbon or cocoa application
you<00:11:29.130><c> stay</c><00:11:29.400><c> in</c><00:11:29.700><c> those</c><00:11:30.390><c> api's</c><00:11:31.050><c> if</c><00:11:31.440><c> you</c><00:11:31.920><c> want</c><00:11:32.130><c> to</c>

00:11:32.240 --> 00:11:32.250 align:start position:0%
you stay in those api's if you want to
 

00:11:32.250 --> 00:11:34.880 align:start position:0%
you stay in those api's if you want to
inspect<00:11:32.520><c> the</c><00:11:33.180><c> thread</c><00:11:33.960><c> state</c><00:11:34.290><c> if</c><00:11:34.530><c> you're</c>

00:11:34.880 --> 00:11:34.890 align:start position:0%
inspect the thread state if you're
 

00:11:34.890 --> 00:11:36.890 align:start position:0%
inspect the thread state if you're
writing<00:11:35.070><c> a</c><00:11:35.190><c> performance</c><00:11:35.700><c> tool</c><00:11:35.910><c> or</c><00:11:36.180><c> something</c>

00:11:36.890 --> 00:11:36.900 align:start position:0%
writing a performance tool or something
 

00:11:36.900 --> 00:11:38.780 align:start position:0%
writing a performance tool or something
along<00:11:37.230><c> those</c><00:11:37.380><c> lines</c><00:11:37.710><c> you</c><00:11:37.980><c> can</c><00:11:38.220><c> actually</c><00:11:38.400><c> use</c>

00:11:38.780 --> 00:11:38.790 align:start position:0%
along those lines you can actually use
 

00:11:38.790 --> 00:11:40.430 align:start position:0%
along those lines you can actually use
the<00:11:39.030><c> the</c><00:11:39.300><c> mock</c><00:11:39.480><c> API</c><00:11:39.840><c> directly</c><00:11:39.900><c> but</c><00:11:40.380><c> we</c>

00:11:40.430 --> 00:11:40.440 align:start position:0%
the the mock API directly but we
 

00:11:40.440 --> 00:11:42.350 align:start position:0%
the the mock API directly but we
discourage<00:11:41.040><c> it</c><00:11:41.190><c> because</c><00:11:41.550><c> if</c><00:11:41.850><c> for</c><00:11:42.270><c> instance</c>

00:11:42.350 --> 00:11:42.360 align:start position:0%
discourage it because if for instance
 

00:11:42.360 --> 00:11:44.660 align:start position:0%
discourage it because if for instance
you<00:11:42.690><c> change</c><00:11:43.080><c> a</c><00:11:43.440><c> threads</c><00:11:44.040><c> priority</c><00:11:44.490><c> through</c>

00:11:44.660 --> 00:11:44.670 align:start position:0%
you change a threads priority through
 

00:11:44.670 --> 00:11:46.400 align:start position:0%
you change a threads priority through
the<00:11:44.790><c> mock</c><00:11:44.970><c> API</c><00:11:45.330><c> and</c><00:11:45.630><c> not</c><00:11:45.780><c> through</c><00:11:46.020><c> the</c><00:11:46.140><c> API</c>

00:11:46.400 --> 00:11:46.410 align:start position:0%
the mock API and not through the API
 

00:11:46.410 --> 00:11:49.150 align:start position:0%
the mock API and not through the API
you're<00:11:46.650><c> using</c><00:11:46.860><c> that</c><00:11:47.550><c> API</c><00:11:47.700><c> may</c><00:11:48.150><c> not</c><00:11:48.330><c> notice</c><00:11:48.660><c> it</c>

00:11:49.150 --> 00:11:49.160 align:start position:0%
you're using that API may not notice it
 

00:11:49.160 --> 00:11:52.430 align:start position:0%
you're using that API may not notice it
so<00:11:50.160><c> later</c><00:11:50.400><c> on</c><00:11:50.490><c> your</c><00:11:51.180><c> thread</c><00:11:51.750><c> scheduling</c><00:11:52.230><c> might</c>

00:11:52.430 --> 00:11:52.440 align:start position:0%
so later on your thread scheduling might
 

00:11:52.440 --> 00:11:57.980 align:start position:0%
so later on your thread scheduling might
behave<00:11:53.720><c> unexpectedly</c><00:11:55.940><c> so</c><00:11:56.940><c> this</c><00:11:57.540><c> is</c><00:11:57.660><c> a</c><00:11:57.690><c> slide</c>

00:11:57.980 --> 00:11:57.990 align:start position:0%
behave unexpectedly so this is a slide
 

00:11:57.990 --> 00:12:00.980 align:start position:0%
behave unexpectedly so this is a slide
we've<00:11:58.200><c> shown</c><00:11:58.410><c> before</c><00:11:58.860><c> and</c><00:11:59.630><c> what</c><00:12:00.630><c> it's</c><00:12:00.750><c> trying</c>

00:12:00.980 --> 00:12:00.990 align:start position:0%
we've shown before and what it's trying
 

00:12:00.990 --> 00:12:04.280 align:start position:0%
we've shown before and what it's trying
to<00:12:01.140><c> show</c><00:12:01.410><c> is</c><00:12:01.710><c> the</c><00:12:02.100><c> an</c><00:12:03.030><c> example</c><00:12:03.540><c> of</c><00:12:03.750><c> what</c>

00:12:04.280 --> 00:12:04.290 align:start position:0%
to show is the an example of what
 

00:12:04.290 --> 00:12:06.290 align:start position:0%
to show is the an example of what
happens<00:12:04.650><c> if</c><00:12:04.800><c> you</c><00:12:04.920><c> take</c><00:12:05.310><c> an</c><00:12:05.460><c> application</c><00:12:06.060><c> and</c>

00:12:06.290 --> 00:12:06.300 align:start position:0%
happens if you take an application and
 

00:12:06.300 --> 00:12:08.540 align:start position:0%
happens if you take an application and
run<00:12:06.630><c> it</c><00:12:06.780><c> on</c><00:12:06.840><c> a</c><00:12:06.900><c> multiprocessor</c><00:12:07.320><c> system</c><00:12:07.950><c> with</c>

00:12:08.540 --> 00:12:08.550 align:start position:0%
run it on a multiprocessor system with
 

00:12:08.550 --> 00:12:10.490 align:start position:0%
run it on a multiprocessor system with
more<00:12:08.790><c> than</c><00:12:08.940><c> one</c><00:12:09.120><c> thread</c><00:12:09.360><c> and</c><00:12:09.690><c> the</c><00:12:10.140><c> numbers</c>

00:12:10.490 --> 00:12:10.500 align:start position:0%
more than one thread and the numbers
 

00:12:10.500 --> 00:12:13.720 align:start position:0%
more than one thread and the numbers
along<00:12:10.980><c> the</c><00:12:11.250><c> edge</c><00:12:11.550><c> of</c><00:12:12.030><c> the</c><00:12:12.240><c> bars</c><00:12:12.480><c> there</c><00:12:12.810><c> are</c><00:12:13.080><c> the</c>

00:12:13.720 --> 00:12:13.730 align:start position:0%
along the edge of the bars there are the
 

00:12:13.730 --> 00:12:16.130 align:start position:0%
along the edge of the bars there are the
multiplier<00:12:14.730><c> factors</c><00:12:15.300><c> for</c><00:12:15.570><c> the</c><00:12:15.660><c> improvement</c>

00:12:16.130 --> 00:12:16.140 align:start position:0%
multiplier factors for the improvement
 

00:12:16.140 --> 00:12:17.960 align:start position:0%
multiplier factors for the improvement
in<00:12:16.230><c> performance</c><00:12:16.350><c> so</c><00:12:17.190><c> you</c><00:12:17.310><c> can</c><00:12:17.430><c> see</c><00:12:17.580><c> the</c><00:12:17.700><c> first</c>

00:12:17.960 --> 00:12:17.970 align:start position:0%
in performance so you can see the first
 

00:12:17.970 --> 00:12:21.560 align:start position:0%
in performance so you can see the first
third<00:12:18.810><c> and</c><00:12:19.110><c> fourth</c><00:12:19.640><c> numbers</c><00:12:20.640><c> are</c><00:12:20.910><c> all</c><00:12:21.090><c> under</c>

00:12:21.560 --> 00:12:21.570 align:start position:0%
third and fourth numbers are all under
 

00:12:21.570 --> 00:12:23.630 align:start position:0%
third and fourth numbers are all under
two<00:12:21.810><c> but</c><00:12:22.080><c> that</c><00:12:22.230><c> second</c><00:12:22.620><c> number</c><00:12:22.890><c> is</c><00:12:23.010><c> above</c><00:12:23.280><c> two</c>

00:12:23.630 --> 00:12:23.640 align:start position:0%
two but that second number is above two
 

00:12:23.640 --> 00:12:25.700 align:start position:0%
two but that second number is above two
which<00:12:23.910><c> is</c><00:12:24.120><c> kind</c><00:12:24.690><c> of</c><00:12:24.750><c> interesting</c><00:12:24.900><c> and</c><00:12:25.290><c> it's</c><00:12:25.470><c> an</c>

00:12:25.700 --> 00:12:25.710 align:start position:0%
which is kind of interesting and it's an
 

00:12:25.710 --> 00:12:28.190 align:start position:0%
which is kind of interesting and it's an
exceptional<00:12:26.310><c> case</c><00:12:26.490><c> where</c><00:12:26.870><c> you</c><00:12:27.870><c> might</c><00:12:27.900><c> wonder</c>

00:12:28.190 --> 00:12:28.200 align:start position:0%
exceptional case where you might wonder
 

00:12:28.200 --> 00:12:29.870 align:start position:0%
exceptional case where you might wonder
how<00:12:28.290><c> I</c><00:12:28.410><c> could</c><00:12:28.680><c> get</c><00:12:28.800><c> more</c><00:12:28.950><c> than</c><00:12:29.010><c> 2x</c><00:12:29.580><c> performance</c>

00:12:29.870 --> 00:12:29.880 align:start position:0%
how I could get more than 2x performance
 

00:12:29.880 --> 00:12:32.170 align:start position:0%
how I could get more than 2x performance
improvement<00:12:30.750><c> on</c><00:12:30.930><c> a</c><00:12:30.990><c> multi-threaded</c>

00:12:32.170 --> 00:12:32.180 align:start position:0%
improvement on a multi-threaded
 

00:12:32.180 --> 00:12:34.610 align:start position:0%
improvement on a multi-threaded
application<00:12:33.180><c> well</c><00:12:33.390><c> if</c><00:12:33.630><c> you</c><00:12:33.990><c> have</c><00:12:34.170><c> two</c>

00:12:34.610 --> 00:12:34.620 align:start position:0%
application well if you have two
 

00:12:34.620 --> 00:12:36.470 align:start position:0%
application well if you have two
processors<00:12:34.800><c> in</c><00:12:35.340><c> the</c><00:12:35.370><c> system</c><00:12:35.820><c> you</c><00:12:35.910><c> also</c><00:12:36.060><c> happen</c>

00:12:36.470 --> 00:12:36.480 align:start position:0%
processors in the system you also happen
 

00:12:36.480 --> 00:12:39.320 align:start position:0%
processors in the system you also happen
to<00:12:36.570><c> have</c><00:12:36.690><c> two</c><00:12:36.930><c> caches</c><00:12:37.470><c> so</c><00:12:37.680><c> if</c><00:12:38.400><c> your</c><00:12:38.670><c> data</c><00:12:38.910><c> set</c>

00:12:39.320 --> 00:12:39.330 align:start position:0%
to have two caches so if your data set
 

00:12:39.330 --> 00:12:42.980 align:start position:0%
to have two caches so if your data set
fit<00:12:39.960><c> in</c><00:12:40.200><c> the</c><00:12:41.030><c> primary</c><00:12:42.030><c> cache</c><00:12:42.330><c> you</c><00:12:42.810><c> would</c>

00:12:42.980 --> 00:12:42.990 align:start position:0%
fit in the primary cache you would
 

00:12:42.990 --> 00:12:44.960 align:start position:0%
fit in the primary cache you would
wouldn't<00:12:43.410><c> see</c><00:12:43.560><c> more</c><00:12:43.800><c> than</c><00:12:43.980><c> 2x</c><00:12:44.790><c> performance</c>

00:12:44.960 --> 00:12:44.970 align:start position:0%
wouldn't see more than 2x performance
 

00:12:44.970 --> 00:12:46.550 align:start position:0%
wouldn't see more than 2x performance
improvement<00:12:45.720><c> but</c><00:12:45.900><c> what</c><00:12:46.050><c> happened</c><00:12:46.410><c> in</c><00:12:46.470><c> this</c>

00:12:46.550 --> 00:12:46.560 align:start position:0%
improvement but what happened in this
 

00:12:46.560 --> 00:12:48.620 align:start position:0%
improvement but what happened in this
case<00:12:46.800><c> was</c><00:12:47.040><c> the</c><00:12:47.190><c> data</c><00:12:47.400><c> set</c><00:12:47.700><c> was</c><00:12:48.150><c> able</c><00:12:48.390><c> to</c><00:12:48.510><c> be</c>

00:12:48.620 --> 00:12:48.630 align:start position:0%
case was the data set was able to be
 

00:12:48.630 --> 00:12:51.110 align:start position:0%
case was the data set was able to be
split<00:12:48.930><c> up</c><00:12:49.050><c> across</c><00:12:49.290><c> two</c><00:12:49.650><c> caches</c><00:12:50.160><c> and</c><00:12:50.400><c> you</c>

00:12:51.110 --> 00:12:51.120 align:start position:0%
split up across two caches and you
 

00:12:51.120 --> 00:12:53.000 align:start position:0%
split up across two caches and you
actually<00:12:51.300><c> got</c><00:12:51.570><c> a</c><00:12:51.600><c> little</c><00:12:51.990><c> bit</c><00:12:52.110><c> better</c><00:12:52.290><c> than</c><00:12:52.950><c> a</c>

00:12:53.000 --> 00:12:53.010 align:start position:0%
actually got a little bit better than a
 

00:12:53.010 --> 00:12:54.860 align:start position:0%
actually got a little bit better than a
2x<00:12:53.460><c> performance</c><00:12:53.640><c> improvement</c><00:12:54.390><c> so</c><00:12:54.510><c> you</c><00:12:54.600><c> may</c><00:12:54.810><c> be</c>

00:12:54.860 --> 00:12:54.870 align:start position:0%
2x performance improvement so you may be
 

00:12:54.870 --> 00:12:57.080 align:start position:0%
2x performance improvement so you may be
surprised<00:12:55.410><c> in</c><00:12:55.770><c> your</c><00:12:56.130><c> application</c><00:12:56.670><c> depending</c>

00:12:57.080 --> 00:12:57.090 align:start position:0%
surprised in your application depending
 

00:12:57.090 --> 00:12:58.460 align:start position:0%
surprised in your application depending
on<00:12:57.210><c> the</c><00:12:57.330><c> size</c><00:12:57.540><c> of</c><00:12:57.840><c> the</c><00:12:57.930><c> data</c><00:12:58.140><c> that</c><00:12:58.230><c> you're</c>

00:12:58.460 --> 00:12:58.470 align:start position:0%
on the size of the data that you're
 

00:12:58.470 --> 00:13:01.280 align:start position:0%
on the size of the data that you're
manipulating<00:12:59.150><c> how</c><00:13:00.150><c> about</c><00:13:00.420><c> how</c><00:13:00.660><c> good</c><00:13:01.110><c> your</c>

00:13:01.280 --> 00:13:01.290 align:start position:0%
manipulating how about how good your
 

00:13:01.290 --> 00:13:05.180 align:start position:0%
manipulating how about how good your
performance<00:13:01.740><c> can</c><00:13:01.890><c> actually</c><00:13:02.250><c> be</c><00:13:03.800><c> in</c><00:13:04.800><c> the</c><00:13:04.950><c> mock</c>

00:13:05.180 --> 00:13:05.190 align:start position:0%
performance can actually be in the mock
 

00:13:05.190 --> 00:13:07.310 align:start position:0%
performance can actually be in the mock
implementation<00:13:05.910><c> it</c><00:13:06.150><c> was</c><00:13:06.300><c> designed</c><00:13:06.720><c> from</c><00:13:07.140><c> the</c>

00:13:07.310 --> 00:13:07.320 align:start position:0%
implementation it was designed from the
 

00:13:07.320 --> 00:13:08.690 align:start position:0%
implementation it was designed from the
ground<00:13:07.350><c> up</c><00:13:07.710><c> to</c><00:13:07.770><c> be</c><00:13:07.980><c> full</c><00:13:08.220><c> symmetric</c>

00:13:08.690 --> 00:13:08.700 align:start position:0%
ground up to be full symmetric
 

00:13:08.700 --> 00:13:11.690 align:start position:0%
ground up to be full symmetric
multiprocessing<00:13:09.510><c> so</c><00:13:09.990><c> we</c><00:13:10.860><c> don't</c><00:13:11.070><c> have</c><00:13:11.400><c> any</c>

00:13:11.690 --> 00:13:11.700 align:start position:0%
multiprocessing so we don't have any
 

00:13:11.700 --> 00:13:12.889 align:start position:0%
multiprocessing so we don't have any
special<00:13:12.150><c> case</c><00:13:12.390><c> code</c>

00:13:12.889 --> 00:13:12.899 align:start position:0%
special case code
 

00:13:12.899 --> 00:13:15.109 align:start position:0%
special case code
for<00:13:13.139><c> a</c><00:13:13.439><c> single</c><00:13:14.040><c> processor</c><00:13:14.399><c> dual</c><00:13:14.579><c> processor</c>

00:13:15.109 --> 00:13:15.119 align:start position:0%
for a single processor dual processor
 

00:13:15.119 --> 00:13:17.210 align:start position:0%
for a single processor dual processor
everything<00:13:15.569><c> on</c><00:13:15.749><c> the</c><00:13:15.899><c> system</c><00:13:16.230><c> is</c><00:13:16.410><c> designed</c><00:13:16.709><c> to</c>

00:13:17.210 --> 00:13:17.220 align:start position:0%
everything on the system is designed to
 

00:13:17.220 --> 00:13:20.569 align:start position:0%
everything on the system is designed to
be<00:13:17.519><c> run</c><00:13:17.999><c> on</c><00:13:18.059><c> a</c><00:13:18.240><c> multiprocessor</c><00:13:18.569><c> machine</c><00:13:19.579><c> the</c>

00:13:20.569 --> 00:13:20.579 align:start position:0%
be run on a multiprocessor machine the
 

00:13:20.579 --> 00:13:22.429 align:start position:0%
be run on a multiprocessor machine the
velocity<00:13:21.119><c> context</c><00:13:21.569><c> I</c><00:13:21.660><c> mentioned</c><00:13:21.990><c> earlier</c><00:13:22.259><c> is</c>

00:13:22.429 --> 00:13:22.439 align:start position:0%
velocity context I mentioned earlier is
 

00:13:22.439 --> 00:13:23.660 align:start position:0%
velocity context I mentioned earlier is
something<00:13:22.740><c> that</c><00:13:22.860><c> has</c><00:13:22.980><c> to</c><00:13:23.160><c> be</c><00:13:23.279><c> saved</c><00:13:23.490><c> and</c>

00:13:23.660 --> 00:13:23.670 align:start position:0%
something that has to be saved and
 

00:13:23.670 --> 00:13:25.759 align:start position:0%
something that has to be saved and
restored<00:13:24.029><c> across</c><00:13:24.329><c> processors</c><00:13:24.899><c> and</c><00:13:25.259><c> that</c>

00:13:25.759 --> 00:13:25.769 align:start position:0%
restored across processors and that
 

00:13:25.769 --> 00:13:28.369 align:start position:0%
restored across processors and that
context<00:13:26.490><c> that</c><00:13:26.999><c> gets</c><00:13:27.540><c> saved</c><00:13:27.809><c> is</c><00:13:27.959><c> a</c><00:13:27.990><c> little</c><00:13:28.259><c> bit</c>

00:13:28.369 --> 00:13:28.379 align:start position:0%
context that gets saved is a little bit
 

00:13:28.379 --> 00:13:29.509 align:start position:0%
context that gets saved is a little bit
expensive<00:13:28.740><c> that's</c><00:13:29.040><c> what</c><00:13:29.189><c> I</c><00:13:29.220><c> was</c><00:13:29.339><c> mentioning</c>

00:13:29.509 --> 00:13:29.519 align:start position:0%
expensive that's what I was mentioning
 

00:13:29.519 --> 00:13:31.939 align:start position:0%
expensive that's what I was mentioning
about<00:13:29.790><c> the</c><00:13:30.449><c> overhead</c><00:13:30.929><c> you</c><00:13:31.230><c> might</c><00:13:31.410><c> need</c><00:13:31.529><c> to</c>

00:13:31.939 --> 00:13:31.949 align:start position:0%
about the overhead you might need to
 

00:13:31.949 --> 00:13:35.449 align:start position:0%
about the overhead you might need to
worry<00:13:32.129><c> about</c><00:13:32.990><c> on</c><00:13:33.990><c> OS</c><00:13:34.559><c> 10</c><00:13:34.829><c> we</c><00:13:34.980><c> use</c><00:13:35.100><c> the</c><00:13:35.220><c> same</c>

00:13:35.449 --> 00:13:35.459 align:start position:0%
worry about on OS 10 we use the same
 

00:13:35.459 --> 00:13:38.090 align:start position:0%
worry about on OS 10 we use the same
kernel<00:13:35.730><c> binary</c><00:13:36.269><c> for</c><00:13:36.660><c> either</c><00:13:37.290><c> a</c><00:13:37.709><c> single</c>

00:13:38.090 --> 00:13:38.100 align:start position:0%
kernel binary for either a single
 

00:13:38.100 --> 00:13:40.009 align:start position:0%
kernel binary for either a single
processor<00:13:38.579><c> or</c><00:13:38.759><c> a</c><00:13:38.790><c> multiprocessor</c><00:13:39.240><c> system</c><00:13:39.929><c> we</c>

00:13:40.009 --> 00:13:40.019 align:start position:0%
processor or a multiprocessor system we
 

00:13:40.019 --> 00:13:42.829 align:start position:0%
processor or a multiprocessor system we
don't<00:13:40.199><c> have</c><00:13:40.350><c> a</c><00:13:40.379><c> special</c><00:13:40.829><c> install</c><00:13:41.279><c> for</c><00:13:41.610><c> a</c><00:13:41.639><c> u</c><00:13:42.600><c> P</c>

00:13:42.829 --> 00:13:42.839 align:start position:0%
don't have a special install for a u P
 

00:13:42.839 --> 00:13:46.669 align:start position:0%
don't have a special install for a u P
or<00:13:43.110><c> an</c><00:13:43.199><c> MP</c><00:13:43.559><c> system</c><00:13:44.040><c> this</c><00:13:44.999><c> basically</c><00:13:45.389><c> makes</c><00:13:46.259><c> our</c>

00:13:46.669 --> 00:13:46.679 align:start position:0%
or an MP system this basically makes our
 

00:13:46.679 --> 00:13:49.759 align:start position:0%
or an MP system this basically makes our
own<00:13:47.720><c> development</c><00:13:48.720><c> a</c><00:13:49.019><c> little</c><00:13:49.259><c> bit</c><00:13:49.350><c> easier</c><00:13:49.649><c> we</c>

00:13:49.759 --> 00:13:49.769 align:start position:0%
own development a little bit easier we
 

00:13:49.769 --> 00:13:51.859 align:start position:0%
own development a little bit easier we
don't<00:13:49.949><c> have</c><00:13:50.129><c> to</c><00:13:50.309><c> QA</c><00:13:50.790><c> two</c><00:13:50.939><c> different</c><00:13:51.509><c> kernels</c>

00:13:51.859 --> 00:13:51.869 align:start position:0%
don't have to QA two different kernels
 

00:13:51.869 --> 00:13:54.470 align:start position:0%
don't have to QA two different kernels
on<00:13:52.019><c> the</c><00:13:52.110><c> system</c><00:13:52.439><c> and</c><00:13:52.709><c> it's</c><00:13:53.610><c> a</c><00:13:53.970><c> little</c><00:13:54.360><c> bit</c>

00:13:54.470 --> 00:13:54.480 align:start position:0%
on the system and it's a little bit
 

00:13:54.480 --> 00:13:57.410 align:start position:0%
on the system and it's a little bit
easier<00:13:54.779><c> for</c><00:13:54.809><c> us</c><00:13:54.990><c> to</c><00:13:55.259><c> do</c><00:13:55.860><c> the</c><00:13:56.009><c> install</c><00:13:56.490><c> as</c><00:13:56.819><c> far</c>

00:13:57.410 --> 00:13:57.420 align:start position:0%
easier for us to do the install as far
 

00:13:57.420 --> 00:13:59.299 align:start position:0%
easier for us to do the install as far
as<00:13:57.569><c> making</c><00:13:57.990><c> sure</c><00:13:58.110><c> that</c><00:13:58.379><c> customers</c><00:13:58.709><c> all</c><00:13:59.160><c> have</c>

00:13:59.299 --> 00:13:59.309 align:start position:0%
as making sure that customers all have
 

00:13:59.309 --> 00:14:03.590 align:start position:0%
as making sure that customers all have
the<00:13:59.429><c> same</c><00:13:59.579><c> bits</c><00:13:59.910><c> on</c><00:14:00.119><c> their</c><00:14:00.269><c> machines</c><00:14:02.420><c> the</c><00:14:03.420><c> mock</c>

00:14:03.590 --> 00:14:03.600 align:start position:0%
the same bits on their machines the mock
 

00:14:03.600 --> 00:14:05.989 align:start position:0%
the same bits on their machines the mock
scheduler<00:14:04.170><c> was</c><00:14:04.350><c> inherited</c><00:14:04.769><c> from</c><00:14:05.069><c> the</c><00:14:05.490><c> OS</c><00:14:05.790><c> f</c>

00:14:05.989 --> 00:14:05.999 align:start position:0%
scheduler was inherited from the OS f
 

00:14:05.999 --> 00:14:10.269 align:start position:0%
scheduler was inherited from the OS f
the<00:14:06.449><c> open</c><00:14:06.929><c> software</c><00:14:07.139><c> foundation</c><00:14:07.769><c> we</c><00:14:07.889><c> use</c><00:14:08.100><c> a</c>

00:14:10.269 --> 00:14:10.279 align:start position:0%
the open software foundation we use a
 

00:14:10.279 --> 00:14:12.769 align:start position:0%
the open software foundation we use a
scheduling<00:14:11.279><c> framework</c><00:14:11.699><c> that</c><00:14:11.819><c> they</c><00:14:11.999><c> designed</c>

00:14:12.769 --> 00:14:12.779 align:start position:0%
scheduling framework that they designed
 

00:14:12.779 --> 00:14:14.960 align:start position:0%
scheduling framework that they designed
but<00:14:12.959><c> we've</c><00:14:13.110><c> modified</c><00:14:13.439><c> it</c><00:14:13.619><c> heavily</c><00:14:14.069><c> for</c><00:14:14.550><c> our</c>

00:14:14.960 --> 00:14:14.970 align:start position:0%
but we've modified it heavily for our
 

00:14:14.970 --> 00:14:17.299 align:start position:0%
but we've modified it heavily for our
own<00:14:15.300><c> use</c><00:14:15.329><c> it</c><00:14:15.929><c> has</c><00:14:16.410><c> a</c><00:14:16.439><c> global</c><00:14:16.709><c> run</c><00:14:17.069><c> queue</c>

00:14:17.299 --> 00:14:17.309 align:start position:0%
own use it has a global run queue
 

00:14:17.309 --> 00:14:19.699 align:start position:0%
own use it has a global run queue
meaning<00:14:17.639><c> that</c><00:14:17.730><c> all</c><00:14:17.910><c> the</c><00:14:18.240><c> tasks</c><00:14:18.929><c> on</c><00:14:19.139><c> the</c><00:14:19.350><c> system</c>

00:14:19.699 --> 00:14:19.709 align:start position:0%
meaning that all the tasks on the system
 

00:14:19.709 --> 00:14:22.220 align:start position:0%
meaning that all the tasks on the system
get<00:14:20.009><c> switched</c><00:14:20.610><c> through</c><00:14:20.970><c> on</c><00:14:21.300><c> every</c><00:14:21.779><c> context</c>

00:14:22.220 --> 00:14:22.230 align:start position:0%
get switched through on every context
 

00:14:22.230 --> 00:14:25.189 align:start position:0%
get switched through on every context
switch<00:14:23.179><c> the</c><00:14:24.179><c> tests</c><00:14:24.540><c> that</c><00:14:24.569><c> are</c><00:14:24.689><c> runnable</c><00:14:25.170><c> I</c>

00:14:25.189 --> 00:14:25.199 align:start position:0%
switch the tests that are runnable I
 

00:14:25.199 --> 00:14:28.999 align:start position:0%
switch the tests that are runnable I
should<00:14:25.529><c> say</c><00:14:26.449><c> the</c><00:14:27.449><c> system</c><00:14:28.110><c> notices</c><00:14:28.620><c> that</c><00:14:28.800><c> if</c>

00:14:28.999 --> 00:14:29.009 align:start position:0%
should say the system notices that if
 

00:14:29.009 --> 00:14:30.410 align:start position:0%
should say the system notices that if
you're<00:14:29.279><c> on</c><00:14:29.370><c> a</c><00:14:29.399><c> multiprocessor</c><00:14:29.819><c> system</c><00:14:30.329><c> you</c>

00:14:30.410 --> 00:14:30.420 align:start position:0%
you're on a multiprocessor system you
 

00:14:30.420 --> 00:14:32.119 align:start position:0%
you're on a multiprocessor system you
have<00:14:30.540><c> an</c><00:14:30.629><c> idle</c><00:14:30.899><c> processor</c><00:14:31.379><c> so</c><00:14:31.589><c> it</c><00:14:31.679><c> will</c><00:14:31.829><c> go</c><00:14:31.949><c> and</c>

00:14:32.119 --> 00:14:32.129 align:start position:0%
have an idle processor so it will go and
 

00:14:32.129 --> 00:14:34.910 align:start position:0%
have an idle processor so it will go and
schedule<00:14:32.579><c> a</c><00:14:32.759><c> thread</c><00:14:33.360><c> to</c><00:14:33.929><c> be</c><00:14:34.079><c> on</c><00:14:34.230><c> the</c><00:14:34.470><c> most</c><00:14:34.679><c> idle</c>

00:14:34.910 --> 00:14:34.920 align:start position:0%
schedule a thread to be on the most idle
 

00:14:34.920 --> 00:14:37.280 align:start position:0%
schedule a thread to be on the most idle
processor<00:14:35.519><c> at</c><00:14:35.670><c> the</c><00:14:35.790><c> time</c><00:14:35.999><c> so</c><00:14:36.600><c> we</c><00:14:36.959><c> don't</c><00:14:37.139><c> really</c>

00:14:37.280 --> 00:14:37.290 align:start position:0%
processor at the time so we don't really
 

00:14:37.290 --> 00:14:39.319 align:start position:0%
processor at the time so we don't really
have<00:14:37.529><c> a</c><00:14:37.559><c> notion</c><00:14:37.829><c> of</c><00:14:38.129><c> thread</c><00:14:38.429><c> affinity</c><00:14:38.610><c> it</c>

00:14:39.319 --> 00:14:39.329 align:start position:0%
have a notion of thread affinity it
 

00:14:39.329 --> 00:14:40.819 align:start position:0%
have a notion of thread affinity it
might<00:14:39.779><c> be</c><00:14:39.929><c> a</c><00:14:39.959><c> term</c><00:14:40.230><c> you've</c><00:14:40.410><c> heard</c><00:14:40.620><c> of</c><00:14:40.740><c> before</c>

00:14:40.819 --> 00:14:40.829 align:start position:0%
might be a term you've heard of before
 

00:14:40.829 --> 00:14:42.949 align:start position:0%
might be a term you've heard of before
where<00:14:41.309><c> you</c><00:14:41.730><c> can</c><00:14:41.939><c> have</c><00:14:42.089><c> a</c><00:14:42.120><c> thread</c><00:14:42.449><c> running</c><00:14:42.689><c> on</c><00:14:42.929><c> a</c>

00:14:42.949 --> 00:14:42.959 align:start position:0%
where you can have a thread running on a
 

00:14:42.959 --> 00:14:44.780 align:start position:0%
where you can have a thread running on a
single<00:14:43.170><c> processor</c><00:14:43.470><c> for</c><00:14:44.040><c> a</c><00:14:44.069><c> long</c><00:14:44.370><c> time</c><00:14:44.610><c> the</c>

00:14:44.780 --> 00:14:44.790 align:start position:0%
single processor for a long time the
 

00:14:44.790 --> 00:14:46.519 align:start position:0%
single processor for a long time the
kernel<00:14:45.089><c> will</c><00:14:45.179><c> basically</c><00:14:45.379><c> balance</c><00:14:46.379><c> the</c>

00:14:46.519 --> 00:14:46.529 align:start position:0%
kernel will basically balance the
 

00:14:46.529 --> 00:14:48.919 align:start position:0%
kernel will basically balance the
resources<00:14:47.100><c> of</c><00:14:47.129><c> the</c><00:14:47.339><c> system</c><00:14:47.670><c> as</c><00:14:47.910><c> best</c><00:14:48.600><c> it</c><00:14:48.779><c> can</c>

00:14:48.919 --> 00:14:48.929 align:start position:0%
resources of the system as best it can
 

00:14:48.929 --> 00:14:51.619 align:start position:0%
resources of the system as best it can
and<00:14:49.290><c> as</c><00:14:50.189><c> I've</c><00:14:50.339><c> said</c><00:14:50.370><c> before</c><00:14:50.550><c> preemption</c><00:14:51.420><c> is</c>

00:14:51.619 --> 00:14:51.629 align:start position:0%
and as I've said before preemption is
 

00:14:51.629 --> 00:14:54.710 align:start position:0%
and as I've said before preemption is
key<00:14:52.170><c> here</c><00:14:52.470><c> every</c><00:14:52.709><c> thread</c><00:14:52.949><c> gets</c><00:14:53.540><c> preempted</c><00:14:54.540><c> as</c>

00:14:54.710 --> 00:14:54.720 align:start position:0%
key here every thread gets preempted as
 

00:14:54.720 --> 00:14:58.579 align:start position:0%
key here every thread gets preempted as
it<00:14:54.929><c> goes</c><00:14:55.319><c> through</c><00:14:55.559><c> the</c><00:14:55.649><c> run</c><00:14:55.799><c> queue</c><00:14:57.319><c> the</c><00:14:58.319><c> user</c>

00:14:58.579 --> 00:14:58.589 align:start position:0%
it goes through the run queue the user
 

00:14:58.589 --> 00:15:01.610 align:start position:0%
it goes through the run queue the user
frameworks<00:14:59.249><c> that</c><00:14:59.790><c> you'll</c><00:14:59.970><c> see</c><00:15:00.269><c> when</c><00:15:00.899><c> writing</c>

00:15:01.610 --> 00:15:01.620 align:start position:0%
frameworks that you'll see when writing
 

00:15:01.620 --> 00:15:03.079 align:start position:0%
frameworks that you'll see when writing
a<00:15:01.769><c> multi-threaded</c><00:15:02.129><c> application</c><00:15:02.819><c> are</c>

00:15:03.079 --> 00:15:03.089 align:start position:0%
a multi-threaded application are
 

00:15:03.089 --> 00:15:05.119 align:start position:0%
a multi-threaded application are
probably<00:15:03.660><c> just</c><00:15:03.899><c> the</c><00:15:04.319><c> same</c><00:15:04.589><c> frameworks</c><00:15:05.009><c> you're</c>

00:15:05.119 --> 00:15:05.129 align:start position:0%
probably just the same frameworks you're
 

00:15:05.129 --> 00:15:06.289 align:start position:0%
probably just the same frameworks you're
using<00:15:05.279><c> for</c><00:15:05.579><c> your</c><00:15:05.639><c> application</c><00:15:06.149><c> there's</c>

00:15:06.289 --> 00:15:06.299 align:start position:0%
using for your application there's
 

00:15:06.299 --> 00:15:07.789 align:start position:0%
using for your application there's
nothing<00:15:06.600><c> really</c><00:15:06.720><c> special</c><00:15:06.839><c> most</c><00:15:07.529><c> of</c><00:15:07.709><c> the</c>

00:15:07.789 --> 00:15:07.799 align:start position:0%
nothing really special most of the
 

00:15:07.799 --> 00:15:09.379 align:start position:0%
nothing really special most of the
frameworks<00:15:08.189><c> that</c><00:15:08.249><c> we</c><00:15:08.429><c> have</c><00:15:08.610><c> have</c><00:15:08.850><c> an</c><00:15:08.970><c> API</c><00:15:09.299><c> for</c>

00:15:09.379 --> 00:15:09.389 align:start position:0%
frameworks that we have have an API for
 

00:15:09.389 --> 00:15:12.499 align:start position:0%
frameworks that we have have an API for
threading<00:15:09.959><c> in</c><00:15:10.259><c> Carbon</c><00:15:11.189><c> it's</c><00:15:11.369><c> the</c><00:15:11.490><c> MP</c><00:15:11.879><c> or</c><00:15:12.179><c> MP</c>

00:15:12.499 --> 00:15:12.509 align:start position:0%
threading in Carbon it's the MP or MP
 

00:15:12.509 --> 00:15:15.679 align:start position:0%
threading in Carbon it's the MP or MP
task<00:15:12.779><c> API</c><00:15:13.319><c> that</c><00:15:13.980><c> has</c><00:15:14.670><c> been</c><00:15:15.209><c> out</c><00:15:15.360><c> for</c><00:15:15.600><c> a</c><00:15:15.629><c> few</c>

00:15:15.679 --> 00:15:15.689 align:start position:0%
task API that has been out for a few
 

00:15:15.689 --> 00:15:19.879 align:start position:0%
task API that has been out for a few
years<00:15:16.139><c> in</c><00:15:16.459><c> cocoa</c><00:15:17.459><c> there's</c><00:15:17.759><c> n</c><00:15:17.970><c> s</c><00:15:18.119><c> threads</c><00:15:18.889><c> which</c>

00:15:19.879 --> 00:15:19.889 align:start position:0%
years in cocoa there's n s threads which
 

00:15:19.889 --> 00:15:23.509 align:start position:0%
years in cocoa there's n s threads which
are<00:15:20.189><c> used</c><00:15:20.519><c> both</c><00:15:20.819><c> in</c><00:15:21.259><c> the</c><00:15:22.259><c> non</c><00:15:22.470><c> GUI</c><00:15:22.829><c> and</c><00:15:23.160><c> GUI</c>

00:15:23.509 --> 00:15:23.519 align:start position:0%
are used both in the non GUI and GUI
 

00:15:23.519 --> 00:15:26.150 align:start position:0%
are used both in the non GUI and GUI
frameworks<00:15:24.089><c> and</c><00:15:24.389><c> in</c><00:15:25.199><c> Java</c><00:15:25.499><c> we</c><00:15:25.740><c> have</c><00:15:25.860><c> Java</c>

00:15:26.150 --> 00:15:26.160 align:start position:0%
frameworks and in Java we have Java
 

00:15:26.160 --> 00:15:26.660 align:start position:0%
frameworks and in Java we have Java
thread

00:15:26.660 --> 00:15:26.670 align:start position:0%
thread
 

00:15:26.670 --> 00:15:28.940 align:start position:0%
thread
which<00:15:27.210><c> is</c><00:15:27.540><c> just</c><00:15:27.840><c> a</c><00:15:27.990><c> special</c><00:15:28.230><c> implementation</c>

00:15:28.940 --> 00:15:28.950 align:start position:0%
which is just a special implementation
 

00:15:28.950 --> 00:15:30.920 align:start position:0%
which is just a special implementation
that<00:15:29.220><c> is</c><00:15:29.400><c> using</c><00:15:30.000><c> the</c><00:15:30.180><c> the</c><00:15:30.480><c> underlying</c>

00:15:30.920 --> 00:15:30.930 align:start position:0%
that is using the the underlying
 

00:15:30.930 --> 00:15:33.890 align:start position:0%
that is using the the underlying
primitives<00:15:31.410><c> in</c><00:15:31.620><c> Darwin</c><00:15:32.040><c> all</c><00:15:32.970><c> of</c><00:15:33.240><c> those</c><00:15:33.600><c> three</c>

00:15:33.890 --> 00:15:33.900 align:start position:0%
primitives in Darwin all of those three
 

00:15:33.900 --> 00:15:36.680 align:start position:0%
primitives in Darwin all of those three
api<00:15:34.230><c> is</c><00:15:34.320><c> depend</c><00:15:34.770><c> on</c><00:15:34.860><c> the</c><00:15:35.010><c> Darwin</c><00:15:35.250><c> P</c><00:15:36.180><c> threads</c><00:15:36.450><c> or</c>

00:15:36.680 --> 00:15:36.690 align:start position:0%
api is depend on the Darwin P threads or
 

00:15:36.690 --> 00:15:40.310 align:start position:0%
api is depend on the Darwin P threads or
POSIX<00:15:37.110><c> threads</c><00:15:37.440><c> api's</c><00:15:38.010><c> and</c><00:15:38.870><c> since</c><00:15:39.870><c> I</c><00:15:39.990><c> work</c><00:15:40.200><c> in</c>

00:15:40.310 --> 00:15:40.320 align:start position:0%
POSIX threads api's and since I work in
 

00:15:40.320 --> 00:15:41.960 align:start position:0%
POSIX threads api's and since I work in
the<00:15:40.410><c> core</c><00:15:40.590><c> s</c><00:15:40.770><c> group</c><00:15:40.950><c> that's</c><00:15:41.220><c> actually</c><00:15:41.580><c> the</c><00:15:41.670><c> API</c>

00:15:41.960 --> 00:15:41.970 align:start position:0%
the core s group that's actually the API
 

00:15:41.970 --> 00:15:43.700 align:start position:0%
the core s group that's actually the API
set<00:15:42.300><c> that</c><00:15:42.540><c> I'm</c><00:15:42.720><c> most</c><00:15:42.990><c> familiar</c><00:15:43.110><c> with</c><00:15:43.380><c> and</c><00:15:43.650><c> I'll</c>

00:15:43.700 --> 00:15:43.710 align:start position:0%
set that I'm most familiar with and I'll
 

00:15:43.710 --> 00:15:48.620 align:start position:0%
set that I'm most familiar with and I'll
talk<00:15:43.920><c> about</c><00:15:43.950><c> that</c><00:15:44.160><c> in</c><00:15:45.140><c> a</c><00:15:46.140><c> second</c><00:15:46.970><c> P</c><00:15:47.970><c> threads</c><00:15:48.240><c> as</c>

00:15:48.620 --> 00:15:48.630 align:start position:0%
talk about that in a second P threads as
 

00:15:48.630 --> 00:15:50.750 align:start position:0%
talk about that in a second P threads as
I<00:15:49.080><c> said</c><00:15:49.290><c> is</c><00:15:49.620><c> the</c><00:15:49.650><c> basis</c><00:15:50.130><c> for</c><00:15:50.250><c> all</c><00:15:50.370><c> threading</c>

00:15:50.750 --> 00:15:50.760 align:start position:0%
I said is the basis for all threading
 

00:15:50.760 --> 00:15:53.240 align:start position:0%
I said is the basis for all threading
models<00:15:51.090><c> every</c><00:15:51.480><c> API</c><00:15:52.170><c> that</c><00:15:52.470><c> I</c><00:15:52.530><c> described</c><00:15:53.010><c> goes</c>

00:15:53.240 --> 00:15:53.250 align:start position:0%
models every API that I described goes
 

00:15:53.250 --> 00:15:56.180 align:start position:0%
models every API that I described goes
through<00:15:53.550><c> the</c><00:15:53.760><c> P</c><00:15:53.910><c> threads</c><00:15:54.150><c> layer</c><00:15:54.510><c> so</c><00:15:55.110><c> when</c><00:15:56.070><c> we</c>

00:15:56.180 --> 00:15:56.190 align:start position:0%
through the P threads layer so when we
 

00:15:56.190 --> 00:15:57.860 align:start position:0%
through the P threads layer so when we
make<00:15:56.370><c> changes</c><00:15:56.640><c> in</c><00:15:56.970><c> enhancements</c><00:15:57.540><c> to</c><00:15:57.630><c> the</c><00:15:57.750><c> P</c>

00:15:57.860 --> 00:15:57.870 align:start position:0%
make changes in enhancements to the P
 

00:15:57.870 --> 00:16:00.170 align:start position:0%
make changes in enhancements to the P
threads<00:15:58.110><c> layer</c><00:15:58.350><c> all</c><00:15:58.590><c> of</c><00:15:58.620><c> those</c><00:15:58.860><c> API</c><00:15:59.280><c> sets</c><00:15:59.730><c> take</c>

00:16:00.170 --> 00:16:00.180 align:start position:0%
threads layer all of those API sets take
 

00:16:00.180 --> 00:16:03.380 align:start position:0%
threads layer all of those API sets take
advantage<00:16:00.690><c> of</c><00:16:00.810><c> that</c><00:16:00.960><c> I</c><00:16:01.820><c> put</c><00:16:02.820><c> in</c><00:16:02.940><c> quotes</c><00:16:03.210><c> there</c>

00:16:03.380 --> 00:16:03.390 align:start position:0%
advantage of that I put in quotes there
 

00:16:03.390 --> 00:16:05.750 align:start position:0%
advantage of that I put in quotes there
it's<00:16:03.540><c> a</c><00:16:03.630><c> light</c><00:16:03.870><c> implementation</c><00:16:04.680><c> the</c><00:16:05.160><c> the</c>

00:16:05.750 --> 00:16:05.760 align:start position:0%
it's a light implementation the the
 

00:16:05.760 --> 00:16:08.060 align:start position:0%
it's a light implementation the the
history<00:16:05.940><c> behind</c><00:16:06.330><c> that</c><00:16:06.570><c> is</c><00:16:06.900><c> when</c><00:16:07.650><c> we</c><00:16:07.980><c> were</c>

00:16:08.060 --> 00:16:08.070 align:start position:0%
history behind that is when we were
 

00:16:08.070 --> 00:16:10.130 align:start position:0%
history behind that is when we were
trying<00:16:08.370><c> to</c><00:16:08.490><c> decide</c><00:16:08.760><c> on</c><00:16:08.820><c> an</c><00:16:09.060><c> API</c><00:16:09.420><c> that</c><00:16:09.480><c> we</c><00:16:09.930><c> could</c>

00:16:10.130 --> 00:16:10.140 align:start position:0%
trying to decide on an API that we could
 

00:16:10.140 --> 00:16:12.310 align:start position:0%
trying to decide on an API that we could
use<00:16:10.380><c> to</c><00:16:10.650><c> implement</c><00:16:11.100><c> those</c><00:16:11.490><c> higher-level</c>

00:16:12.310 --> 00:16:12.320 align:start position:0%
use to implement those higher-level
 

00:16:12.320 --> 00:16:15.580 align:start position:0%
use to implement those higher-level
threading<00:16:13.320><c> models</c><00:16:13.680><c> we</c><00:16:14.160><c> chose</c><00:16:14.460><c> P</c><00:16:14.760><c> threads</c><00:16:15.030><c> and</c>

00:16:15.580 --> 00:16:15.590 align:start position:0%
threading models we chose P threads and
 

00:16:15.590 --> 00:16:18.890 align:start position:0%
threading models we chose P threads and
the<00:16:16.590><c> implementation</c><00:16:17.460><c> decisions</c><00:16:18.330><c> were</c><00:16:18.480><c> driven</c>

00:16:18.890 --> 00:16:18.900 align:start position:0%
the implementation decisions were driven
 

00:16:18.900 --> 00:16:21.410 align:start position:0%
the implementation decisions were driven
by<00:16:19.080><c> those</c><00:16:19.440><c> higher-level</c><00:16:19.890><c> api's</c><00:16:20.370><c> so</c><00:16:20.910><c> if</c><00:16:21.240><c> you</c>

00:16:21.410 --> 00:16:21.420 align:start position:0%
by those higher-level api's so if you
 

00:16:21.420 --> 00:16:22.820 align:start position:0%
by those higher-level api's so if you
look<00:16:21.570><c> in</c><00:16:21.690><c> the</c><00:16:21.810><c> header</c><00:16:21.990><c> file</c><00:16:22.290><c> and</c><00:16:22.650><c> our</c>

00:16:22.820 --> 00:16:22.830 align:start position:0%
look in the header file and our
 

00:16:22.830 --> 00:16:24.530 align:start position:0%
look in the header file and our
documentation<00:16:23.460><c> you</c><00:16:23.790><c> might</c><00:16:23.970><c> see</c><00:16:24.210><c> that</c><00:16:24.390><c> there</c>

00:16:24.530 --> 00:16:24.540 align:start position:0%
documentation you might see that there
 

00:16:24.540 --> 00:16:27.320 align:start position:0%
documentation you might see that there
are<00:16:24.570><c> some</c><00:16:24.840><c> API</c><00:16:25.500><c> calls</c><00:16:25.860><c> missing</c><00:16:26.310><c> and</c><00:16:26.550><c> in</c>

00:16:27.320 --> 00:16:27.330 align:start position:0%
are some API calls missing and in
 

00:16:27.330 --> 00:16:29.330 align:start position:0%
are some API calls missing and in
general<00:16:27.720><c> we're</c><00:16:27.900><c> working</c><00:16:28.260><c> toward</c><00:16:28.500><c> flushing</c>

00:16:29.330 --> 00:16:29.340 align:start position:0%
general we're working toward flushing
 

00:16:29.340 --> 00:16:32.240 align:start position:0%
general we're working toward flushing
out<00:16:29.460><c> that</c><00:16:29.640><c> API</c><00:16:29.970><c> but</c><00:16:30.750><c> the</c><00:16:31.290><c> design</c><00:16:31.680><c> goal</c><00:16:31.890><c> was</c><00:16:32.100><c> to</c>

00:16:32.240 --> 00:16:32.250 align:start position:0%
out that API but the design goal was to
 

00:16:32.250 --> 00:16:35.060 align:start position:0%
out that API but the design goal was to
help<00:16:32.400><c> ensure</c><00:16:32.970><c> that</c><00:16:33.210><c> the</c><00:16:33.390><c> higher-level</c><00:16:34.070><c> carbon</c>

00:16:35.060 --> 00:16:35.070 align:start position:0%
help ensure that the higher-level carbon
 

00:16:35.070 --> 00:16:37.990 align:start position:0%
help ensure that the higher-level carbon
cocoa<00:16:35.700><c> and</c><00:16:35.910><c> Java</c><00:16:36.180><c> API</c><00:16:36.600><c> is</c><00:16:36.720><c> could</c><00:16:36.990><c> do</c><00:16:37.110><c> their</c><00:16:37.290><c> job</c>

00:16:37.990 --> 00:16:38.000 align:start position:0%
cocoa and Java API is could do their job
 

00:16:38.000 --> 00:16:40.640 align:start position:0%
cocoa and Java API is could do their job
we<00:16:39.000><c> use</c><00:16:39.120><c> a</c><00:16:39.150><c> one-to-one</c><00:16:39.570><c> mock</c><00:16:39.960><c> to</c><00:16:40.200><c> P</c><00:16:40.350><c> thread</c>

00:16:40.640 --> 00:16:40.650 align:start position:0%
we use a one-to-one mock to P thread
 

00:16:40.650 --> 00:16:42.800 align:start position:0%
we use a one-to-one mock to P thread
implementation<00:16:41.310><c> as</c><00:16:41.460><c> I</c><00:16:41.580><c> said</c><00:16:41.820><c> that</c><00:16:42.360><c> reduces</c>

00:16:42.800 --> 00:16:42.810 align:start position:0%
implementation as I said that reduces
 

00:16:42.810 --> 00:16:45.230 align:start position:0%
implementation as I said that reduces
the<00:16:42.930><c> complexity</c><00:16:43.530><c> of</c><00:16:43.680><c> our</c><00:16:44.190><c> user</c><00:16:44.460><c> level</c><00:16:44.940><c> code</c>

00:16:45.230 --> 00:16:45.240 align:start position:0%
the complexity of our user level code
 

00:16:45.240 --> 00:16:47.930 align:start position:0%
the complexity of our user level code
and<00:16:45.570><c> helps</c><00:16:46.230><c> the</c><00:16:46.410><c> scaling</c><00:16:46.920><c> on</c><00:16:47.070><c> an</c><00:16:47.220><c> MP</c><00:16:47.520><c> system</c>

00:16:47.930 --> 00:16:47.940 align:start position:0%
and helps the scaling on an MP system
 

00:16:47.940 --> 00:16:51.380 align:start position:0%
and helps the scaling on an MP system
better<00:16:48.590><c> in</c><00:16:49.590><c> P</c><00:16:50.250><c> threads</c><00:16:50.490><c> there's</c><00:16:50.820><c> some</c><00:16:50.970><c> common</c>

00:16:51.380 --> 00:16:51.390 align:start position:0%
better in P threads there's some common
 

00:16:51.390 --> 00:16:54.050 align:start position:0%
better in P threads there's some common
API<00:16:51.690><c> uses</c><00:16:52.230><c> and</c><00:16:52.470><c> misuses</c><00:16:52.950><c> if</c><00:16:53.490><c> you</c><00:16:53.580><c> haven't</c><00:16:53.940><c> done</c>

00:16:54.050 --> 00:16:54.060 align:start position:0%
API uses and misuses if you haven't done
 

00:16:54.060 --> 00:16:57.080 align:start position:0%
API uses and misuses if you haven't done
threading<00:16:54.450><c> before</c><00:16:54.810><c> P</c><00:16:55.350><c> threads</c><00:16:55.620><c> is</c><00:16:55.800><c> a</c><00:16:56.090><c> fairly</c>

00:16:57.080 --> 00:16:57.090 align:start position:0%
threading before P threads is a fairly
 

00:16:57.090 --> 00:16:59.030 align:start position:0%
threading before P threads is a fairly
well-defined<00:16:57.540><c> standard</c><00:16:58.230><c> you</c><00:16:58.350><c> can</c><00:16:58.380><c> go</c><00:16:58.620><c> to</c><00:16:58.950><c> your</c>

00:16:59.030 --> 00:16:59.040 align:start position:0%
well-defined standard you can go to your
 

00:16:59.040 --> 00:17:00.410 align:start position:0%
well-defined standard you can go to your
local<00:16:59.190><c> book</c><00:16:59.490><c> store</c><00:16:59.700><c> and</c><00:16:59.820><c> get</c><00:16:59.910><c> a</c><00:16:59.940><c> book</c><00:17:00.120><c> on</c><00:17:00.270><c> it</c>

00:17:00.410 --> 00:17:00.420 align:start position:0%
local book store and get a book on it
 

00:17:00.420 --> 00:17:02.930 align:start position:0%
local book store and get a book on it
I'll<00:17:01.380><c> talk</c><00:17:01.650><c> about</c><00:17:01.710><c> some</c><00:17:02.580><c> of</c><00:17:02.610><c> the</c><00:17:02.760><c> ways</c><00:17:02.910><c> that</c>

00:17:02.930 --> 00:17:02.940 align:start position:0%
I'll talk about some of the ways that
 

00:17:02.940 --> 00:17:05.300 align:start position:0%
I'll talk about some of the ways that
you'll<00:17:03.270><c> need</c><00:17:03.420><c> to</c><00:17:03.600><c> be</c><00:17:04.290><c> careful</c><00:17:04.740><c> when</c><00:17:04.860><c> using</c><00:17:05.010><c> P</c>

00:17:05.300 --> 00:17:05.310 align:start position:0%
you'll need to be careful when using P
 

00:17:05.310 --> 00:17:08.360 align:start position:0%
you'll need to be careful when using P
threads<00:17:05.580><c> on</c><00:17:05.970><c> our</c><00:17:06.150><c> implementation</c><00:17:07.370><c> for</c>

00:17:08.360 --> 00:17:08.370 align:start position:0%
threads on our implementation for
 

00:17:08.370 --> 00:17:09.680 align:start position:0%
threads on our implementation for
instance<00:17:08.670><c> one</c><00:17:08.880><c> case</c><00:17:09.180><c> we</c><00:17:09.360><c> don't</c><00:17:09.450><c> have</c><00:17:09.570><c> any</c>

00:17:09.680 --> 00:17:09.690 align:start position:0%
instance one case we don't have any
 

00:17:09.690 --> 00:17:12.380 align:start position:0%
instance one case we don't have any
system-wide<00:17:10.410><c> type</c><00:17:10.770><c> so</c><00:17:11.010><c> in</c><00:17:11.160><c> P</c><00:17:11.370><c> threads</c><00:17:11.670><c> there's</c>

00:17:12.380 --> 00:17:12.390 align:start position:0%
system-wide type so in P threads there's
 

00:17:12.390 --> 00:17:14.110 align:start position:0%
system-wide type so in P threads there's
a<00:17:12.510><c> specification</c><00:17:12.960><c> that</c><00:17:13.380><c> provides</c><00:17:13.770><c> global</c>

00:17:14.110 --> 00:17:14.120 align:start position:0%
a specification that provides global
 

00:17:14.120 --> 00:17:16.970 align:start position:0%
a specification that provides global
shared<00:17:15.120><c> memory</c><00:17:15.930><c> based</c><00:17:16.200><c> mutexes</c><00:17:16.950><c> and</c>

00:17:16.970 --> 00:17:16.980 align:start position:0%
shared memory based mutexes and
 

00:17:16.980 --> 00:17:19.940 align:start position:0%
shared memory based mutexes and
condition<00:17:17.610><c> variables</c><00:17:18.120><c> for</c><00:17:18.360><c> signaling</c><00:17:18.950><c> those</c>

00:17:19.940 --> 00:17:19.950 align:start position:0%
condition variables for signaling those
 

00:17:19.950 --> 00:17:21.860 align:start position:0%
condition variables for signaling those
can<00:17:20.250><c> be</c><00:17:20.430><c> implemented</c><00:17:20.850><c> in</c><00:17:21.300><c> your</c><00:17:21.750><c> own</c>

00:17:21.860 --> 00:17:21.870 align:start position:0%
can be implemented in your own
 

00:17:21.870 --> 00:17:23.630 align:start position:0%
can be implemented in your own
application<00:17:22.560><c> but</c><00:17:22.740><c> we</c><00:17:22.770><c> don't</c><00:17:23.010><c> provide</c><00:17:23.160><c> those</c>

00:17:23.630 --> 00:17:23.640 align:start position:0%
application but we don't provide those
 

00:17:23.640 --> 00:17:28.940 align:start position:0%
application but we don't provide those
api's<00:17:24.180><c> right</c><00:17:24.900><c> now</c><00:17:26.990><c> one</c><00:17:27.990><c> thing</c><00:17:28.200><c> that</c><00:17:28.260><c> you</c><00:17:28.650><c> might</c>

00:17:28.940 --> 00:17:28.950 align:start position:0%
api's right now one thing that you might
 

00:17:28.950 --> 00:17:30.770 align:start position:0%
api's right now one thing that you might
need<00:17:29.040><c> to</c><00:17:29.190><c> remember</c><00:17:29.430><c> is</c><00:17:29.700><c> synchronization</c><00:17:30.510><c> is</c>

00:17:30.770 --> 00:17:30.780 align:start position:0%
need to remember is synchronization is
 

00:17:30.780 --> 00:17:33.620 align:start position:0%
need to remember is synchronization is
not<00:17:30.990><c> cheap</c><00:17:31.290><c> in</c><00:17:31.530><c> P</c><00:17:31.710><c> threads</c><00:17:31.980><c> the</c><00:17:32.520><c> model</c><00:17:33.330><c> that</c><00:17:33.480><c> P</c>

00:17:33.620 --> 00:17:33.630 align:start position:0%
not cheap in P threads the model that P
 

00:17:33.630 --> 00:17:37.280 align:start position:0%
not cheap in P threads the model that P
threads<00:17:33.870><c> uses</c><00:17:34.350><c> has</c><00:17:34.830><c> a</c><00:17:35.340><c> mutex</c><00:17:36.330><c> lock</c><00:17:36.570><c> associated</c>

00:17:37.280 --> 00:17:37.290 align:start position:0%
threads uses has a mutex lock associated
 

00:17:37.290 --> 00:17:39.310 align:start position:0%
threads uses has a mutex lock associated
with<00:17:37.410><c> a</c><00:17:37.440><c> condition</c><00:17:38.070><c> variable</c><00:17:38.520><c> and</c><00:17:38.730><c> for</c><00:17:39.150><c> the</c>

00:17:39.310 --> 00:17:39.320 align:start position:0%
with a condition variable and for the
 

00:17:39.320 --> 00:17:42.730 align:start position:0%
with a condition variable and for the
to<00:17:39.559><c> be</c><00:17:39.730><c> properly</c><00:17:40.730><c> used</c><00:17:41.029><c> in</c><00:17:41.389><c> anatomic</c><00:17:42.230><c> fashion</c>

00:17:42.730 --> 00:17:42.740 align:start position:0%
to be properly used in anatomic fashion
 

00:17:42.740 --> 00:17:45.070 align:start position:0%
to be properly used in anatomic fashion
we<00:17:43.250><c> have</c><00:17:43.279><c> to</c><00:17:43.580><c> use</c><00:17:43.700><c> some</c><00:17:43.909><c> kernel</c><00:17:44.210><c> resources</c><00:17:44.809><c> to</c>

00:17:45.070 --> 00:17:45.080 align:start position:0%
we have to use some kernel resources to
 

00:17:45.080 --> 00:17:47.019 align:start position:0%
we have to use some kernel resources to
do<00:17:45.529><c> the</c><00:17:45.710><c> signaling</c><00:17:46.220><c> when</c><00:17:46.789><c> you're</c>

00:17:47.019 --> 00:17:47.029 align:start position:0%
do the signaling when you're
 

00:17:47.029 --> 00:17:50.440 align:start position:0%
do the signaling when you're
synchronizing<00:17:47.269><c> between</c><00:17:47.870><c> threads</c><00:17:49.450><c> the</c>

00:17:50.440 --> 00:17:50.450 align:start position:0%
synchronizing between threads the
 

00:17:50.450 --> 00:17:52.659 align:start position:0%
synchronizing between threads the
default<00:17:51.350><c> behavior</c><00:17:51.529><c> for</c><00:17:51.980><c> a</c><00:17:52.009><c> pea</c><00:17:52.220><c> thread</c><00:17:52.519><c> as</c>

00:17:52.659 --> 00:17:52.669 align:start position:0%
default behavior for a pea thread as
 

00:17:52.669 --> 00:17:55.180 align:start position:0%
default behavior for a pea thread as
specified<00:17:53.360><c> by</c><00:17:53.690><c> POSIX</c><00:17:54.230><c> is</c><00:17:54.409><c> that</c><00:17:54.620><c> threads</c><00:17:54.980><c> are</c>

00:17:55.180 --> 00:17:55.190 align:start position:0%
specified by POSIX is that threads are
 

00:17:55.190 --> 00:17:57.340 align:start position:0%
specified by POSIX is that threads are
what's<00:17:55.580><c> called</c><00:17:55.700><c> joinable</c><00:17:56.269><c> which</c><00:17:56.870><c> means</c><00:17:57.139><c> that</c>

00:17:57.340 --> 00:17:57.350 align:start position:0%
what's called joinable which means that
 

00:17:57.350 --> 00:17:59.259 align:start position:0%
what's called joinable which means that
when<00:17:57.470><c> you</c><00:17:57.500><c> create</c><00:17:57.830><c> a</c><00:17:57.860><c> thread</c><00:17:58.190><c> the</c><00:17:58.669><c> operating</c>

00:17:59.259 --> 00:17:59.269 align:start position:0%
when you create a thread the operating
 

00:17:59.269 --> 00:18:00.850 align:start position:0%
when you create a thread the operating
system<00:17:59.570><c> will</c><00:17:59.720><c> hang</c><00:18:00.019><c> around</c><00:18:00.169><c> and</c><00:18:00.500><c> wait</c><00:18:00.649><c> for</c>

00:18:00.850 --> 00:18:00.860 align:start position:0%
system will hang around and wait for
 

00:18:00.860 --> 00:18:03.159 align:start position:0%
system will hang around and wait for
that<00:18:00.980><c> thread</c><00:18:01.279><c> to</c><00:18:01.490><c> finish</c><00:18:01.669><c> if</c><00:18:02.000><c> you</c><00:18:02.419><c> want</c><00:18:02.659><c> your</c>

00:18:03.159 --> 00:18:03.169 align:start position:0%
that thread to finish if you want your
 

00:18:03.169 --> 00:18:05.769 align:start position:0%
that thread to finish if you want your
thread<00:18:03.649><c> to</c><00:18:03.950><c> go</c><00:18:04.279><c> away</c><00:18:04.399><c> and</c><00:18:04.789><c> do</c><00:18:04.940><c> its</c><00:18:05.090><c> job</c><00:18:05.330><c> and</c><00:18:05.630><c> you</c>

00:18:05.769 --> 00:18:05.779 align:start position:0%
thread to go away and do its job and you
 

00:18:05.779 --> 00:18:06.820 align:start position:0%
thread to go away and do its job and you
don't<00:18:05.960><c> want</c><00:18:06.080><c> to</c><00:18:06.139><c> worry</c><00:18:06.320><c> about</c><00:18:06.380><c> it</c><00:18:06.620><c> anymore</c>

00:18:06.820 --> 00:18:06.830 align:start position:0%
don't want to worry about it anymore
 

00:18:06.830 --> 00:18:09.249 align:start position:0%
don't want to worry about it anymore
there's<00:18:07.610><c> an</c><00:18:07.759><c> API</c><00:18:08.029><c> to</c><00:18:08.120><c> detach</c><00:18:08.659><c> that</c><00:18:08.690><c> thread</c>

00:18:09.249 --> 00:18:09.259 align:start position:0%
there's an API to detach that thread
 

00:18:09.259 --> 00:18:11.169 align:start position:0%
there's an API to detach that thread
which<00:18:09.440><c> just</c><00:18:09.620><c> means</c><00:18:09.799><c> let</c><00:18:10.340><c> it</c><00:18:10.429><c> do</c><00:18:10.549><c> its</c><00:18:10.580><c> job</c><00:18:10.909><c> I</c>

00:18:11.169 --> 00:18:11.179 align:start position:0%
which just means let it do its job I
 

00:18:11.179 --> 00:18:12.190 align:start position:0%
which just means let it do its job I
don't<00:18:11.330><c> want</c><00:18:11.450><c> to</c><00:18:11.509><c> hear</c><00:18:11.629><c> about</c><00:18:11.750><c> it</c>

00:18:12.190 --> 00:18:12.200 align:start position:0%
don't want to hear about it
 

00:18:12.200 --> 00:18:16.269 align:start position:0%
don't want to hear about it
let<00:18:12.500><c> it</c><00:18:12.620><c> finish</c><00:18:12.799><c> on</c><00:18:13.100><c> its</c><00:18:13.250><c> own</c><00:18:13.429><c> as</c><00:18:14.919><c> I</c><00:18:15.919><c> mentioned</c>

00:18:16.269 --> 00:18:16.279 align:start position:0%
let it finish on its own as I mentioned
 

00:18:16.279 --> 00:18:18.759 align:start position:0%
let it finish on its own as I mentioned
earlier<00:18:16.610><c> the</c><00:18:17.149><c> stack</c><00:18:17.480><c> space</c><00:18:17.690><c> for</c><00:18:18.110><c> a</c><00:18:18.139><c> thread</c><00:18:18.500><c> is</c>

00:18:18.759 --> 00:18:18.769 align:start position:0%
earlier the stack space for a thread is
 

00:18:18.769 --> 00:18:21.519 align:start position:0%
earlier the stack space for a thread is
by<00:18:19.039><c> default</c><00:18:19.399><c> half</c><00:18:20.210><c> a</c><00:18:20.389><c> megabyte</c><00:18:20.779><c> now</c><00:18:21.169><c> it</c><00:18:21.230><c> sounds</c>

00:18:21.519 --> 00:18:21.529 align:start position:0%
by default half a megabyte now it sounds
 

00:18:21.529 --> 00:18:23.350 align:start position:0%
by default half a megabyte now it sounds
like<00:18:21.649><c> a</c><00:18:21.679><c> lot</c><00:18:21.950><c> but</c><00:18:22.340><c> it's</c><00:18:22.519><c> all</c><00:18:22.669><c> virtual</c><00:18:22.879><c> memory</c>

00:18:23.350 --> 00:18:23.360 align:start position:0%
like a lot but it's all virtual memory
 

00:18:23.360 --> 00:18:27.269 align:start position:0%
like a lot but it's all virtual memory
that<00:18:24.019><c> is</c><00:18:24.289><c> used</c><00:18:24.830><c> on</c><00:18:25.039><c> demand</c><00:18:25.460><c> so</c><00:18:25.789><c> if</c><00:18:26.090><c> you</c><00:18:26.450><c> look</c><00:18:26.629><c> at</c>

00:18:27.269 --> 00:18:27.279 align:start position:0%
that is used on demand so if you look at
 

00:18:27.279 --> 00:18:29.350 align:start position:0%
that is used on demand so if you look at
process<00:18:28.279><c> listing</c><00:18:28.759><c> you</c><00:18:28.940><c> might</c><00:18:29.090><c> see</c><00:18:29.240><c> your</c>

00:18:29.350 --> 00:18:29.360 align:start position:0%
process listing you might see your
 

00:18:29.360 --> 00:18:30.999 align:start position:0%
process listing you might see your
application<00:18:29.899><c> using</c><00:18:30.259><c> a</c><00:18:30.350><c> lot</c><00:18:30.529><c> of</c><00:18:30.559><c> virtual</c>

00:18:30.999 --> 00:18:31.009 align:start position:0%
application using a lot of virtual
 

00:18:31.009 --> 00:18:32.619 align:start position:0%
application using a lot of virtual
memory<00:18:31.159><c> but</c><00:18:31.759><c> unless</c><00:18:31.970><c> it's</c><00:18:32.179><c> actually</c><00:18:32.330><c> been</c>

00:18:32.619 --> 00:18:32.629 align:start position:0%
memory but unless it's actually been
 

00:18:32.629 --> 00:18:35.200 align:start position:0%
memory but unless it's actually been
touched<00:18:32.899><c> the</c><00:18:33.529><c> system</c><00:18:34.100><c> hasn't</c><00:18:34.340><c> allocated</c><00:18:35.090><c> that</c>

00:18:35.200 --> 00:18:35.210 align:start position:0%
touched the system hasn't allocated that
 

00:18:35.210 --> 00:18:36.850 align:start position:0%
touched the system hasn't allocated that
for<00:18:35.450><c> your</c><00:18:35.570><c> application</c><00:18:36.080><c> yet</c><00:18:36.259><c> so</c><00:18:36.440><c> it</c><00:18:36.679><c> won't</c>

00:18:36.850 --> 00:18:36.860 align:start position:0%
for your application yet so it won't
 

00:18:36.860 --> 00:18:39.299 align:start position:0%
for your application yet so it won't
cost<00:18:37.490><c> you</c><00:18:37.700><c> as</c><00:18:37.820><c> much</c><00:18:37.850><c> as</c><00:18:38.210><c> you</c><00:18:38.299><c> might</c><00:18:38.419><c> think</c><00:18:38.480><c> but</c>

00:18:39.299 --> 00:18:39.309 align:start position:0%
cost you as much as you might think but
 

00:18:39.309 --> 00:18:41.769 align:start position:0%
cost you as much as you might think but
even<00:18:40.309><c> given</c><00:18:40.639><c> that</c><00:18:40.820><c> if</c><00:18:41.000><c> you</c><00:18:41.149><c> have</c><00:18:41.330><c> a</c><00:18:41.360><c> lot</c><00:18:41.629><c> of</c>

00:18:41.769 --> 00:18:41.779 align:start position:0%
even given that if you have a lot of
 

00:18:41.779 --> 00:18:43.539 align:start position:0%
even given that if you have a lot of
threads<00:18:42.080><c> running</c><00:18:42.289><c> in</c><00:18:42.470><c> your</c><00:18:42.529><c> application</c><00:18:43.100><c> you</c>

00:18:43.539 --> 00:18:43.549 align:start position:0%
threads running in your application you
 

00:18:43.549 --> 00:18:45.279 align:start position:0%
threads running in your application you
may<00:18:43.730><c> want</c><00:18:43.940><c> to</c><00:18:44.029><c> create</c><00:18:44.269><c> them</c><00:18:44.659><c> with</c><00:18:45.049><c> an</c>

00:18:45.279 --> 00:18:45.289 align:start position:0%
may want to create them with an
 

00:18:45.289 --> 00:18:47.049 align:start position:0%
may want to create them with an
attribute<00:18:45.440><c> saying</c><00:18:46.100><c> I</c><00:18:46.220><c> want</c><00:18:46.429><c> my</c><00:18:46.519><c> thread</c><00:18:46.820><c> size</c>

00:18:47.049 --> 00:18:47.059 align:start position:0%
attribute saying I want my thread size
 

00:18:47.059 --> 00:18:49.389 align:start position:0%
attribute saying I want my thread size
to<00:18:47.360><c> thread</c><00:18:47.840><c> stack</c><00:18:48.110><c> size</c><00:18:48.350><c> to</c><00:18:48.620><c> be</c><00:18:48.740><c> smaller</c><00:18:49.070><c> and</c>

00:18:49.389 --> 00:18:49.399 align:start position:0%
to thread stack size to be smaller and
 

00:18:49.399 --> 00:18:51.999 align:start position:0%
to thread stack size to be smaller and
if<00:18:49.759><c> you</c><00:18:49.879><c> do</c><00:18:50.059><c> that</c><00:18:50.210><c> then</c><00:18:50.539><c> you</c><00:18:51.110><c> can</c><00:18:51.320><c> limit</c><00:18:51.860><c> the</c>

00:18:51.999 --> 00:18:52.009 align:start position:0%
if you do that then you can limit the
 

00:18:52.009 --> 00:18:54.549 align:start position:0%
if you do that then you can limit the
visible<00:18:52.970><c> virtual</c><00:18:53.600><c> memory</c><00:18:53.809><c> used</c><00:18:54.169><c> by</c><00:18:54.320><c> your</c>

00:18:54.549 --> 00:18:54.559 align:start position:0%
visible virtual memory used by your
 

00:18:54.559 --> 00:18:58.629 align:start position:0%
visible virtual memory used by your
application<00:18:55.509><c> in</c><00:18:56.509><c> the</c><00:18:57.470><c> POSIX</c><00:18:57.950><c> specification</c>

00:18:58.629 --> 00:18:58.639 align:start position:0%
application in the POSIX specification
 

00:18:58.639 --> 00:19:00.549 align:start position:0%
application in the POSIX specification
for<00:18:58.879><c> conditioned</c><00:18:59.450><c> variables</c><00:18:59.899><c> and</c><00:19:00.049><c> signalling</c>

00:19:00.549 --> 00:19:00.559 align:start position:0%
for conditioned variables and signalling
 

00:19:00.559 --> 00:19:02.649 align:start position:0%
for conditioned variables and signalling
there's<00:19:01.039><c> the</c><00:19:01.250><c> notion</c><00:19:01.519><c> of</c><00:19:01.610><c> a</c><00:19:01.700><c> predicate</c><00:19:02.090><c> which</c>

00:19:02.649 --> 00:19:02.659 align:start position:0%
there's the notion of a predicate which
 

00:19:02.659 --> 00:19:05.200 align:start position:0%
there's the notion of a predicate which
is<00:19:02.919><c> when</c><00:19:03.919><c> you</c><00:19:04.549><c> want</c><00:19:04.730><c> to</c><00:19:04.789><c> signal</c><00:19:05.059><c> that</c>

00:19:05.200 --> 00:19:05.210 align:start position:0%
is when you want to signal that
 

00:19:05.210 --> 00:19:07.330 align:start position:0%
is when you want to signal that
something<00:19:05.659><c> has</c><00:19:05.779><c> happened</c><00:19:05.830><c> there's</c><00:19:06.830><c> a</c><00:19:06.919><c> mutex</c>

00:19:07.330 --> 00:19:07.340 align:start position:0%
something has happened there's a mutex
 

00:19:07.340 --> 00:19:09.220 align:start position:0%
something has happened there's a mutex
and<00:19:07.610><c> a</c><00:19:07.669><c> condition</c><00:19:08.090><c> variable</c><00:19:08.120><c> associated</c><00:19:08.870><c> with</c>

00:19:09.220 --> 00:19:09.230 align:start position:0%
and a condition variable associated with
 

00:19:09.230 --> 00:19:11.590 align:start position:0%
and a condition variable associated with
that<00:19:09.529><c> but</c><00:19:10.100><c> there's</c><00:19:10.460><c> also</c><00:19:10.639><c> some</c><00:19:11.000><c> external</c>

00:19:11.590 --> 00:19:11.600 align:start position:0%
that but there's also some external
 

00:19:11.600 --> 00:19:13.509 align:start position:0%
that but there's also some external
condition<00:19:12.049><c> that</c><00:19:12.169><c> needs</c><00:19:12.620><c> to</c><00:19:12.860><c> be</c><00:19:12.889><c> checked</c><00:19:13.279><c> for</c>

00:19:13.509 --> 00:19:13.519 align:start position:0%
condition that needs to be checked for
 

00:19:13.519 --> 00:19:16.149 align:start position:0%
condition that needs to be checked for
so<00:19:13.820><c> you</c><00:19:14.389><c> can</c><00:19:14.419><c> have</c><00:19:14.690><c> a</c><00:19:14.720><c> global</c><00:19:15.350><c> volatile</c>

00:19:16.149 --> 00:19:16.159 align:start position:0%
so you can have a global volatile
 

00:19:16.159 --> 00:19:18.100 align:start position:0%
so you can have a global volatile
variable<00:19:16.639><c> that</c><00:19:16.820><c> says</c><00:19:17.090><c> this</c><00:19:17.389><c> thing</c><00:19:17.659><c> happened</c>

00:19:18.100 --> 00:19:18.110 align:start position:0%
variable that says this thing happened
 

00:19:18.110 --> 00:19:20.619 align:start position:0%
variable that says this thing happened
well<00:19:18.620><c> if</c><00:19:18.860><c> you</c><00:19:19.129><c> just</c><00:19:19.370><c> use</c><00:19:19.639><c> the</c><00:19:19.850><c> condition</c><00:19:20.360><c> and</c>

00:19:20.619 --> 00:19:20.629 align:start position:0%
well if you just use the condition and
 

00:19:20.629 --> 00:19:22.600 align:start position:0%
well if you just use the condition and
mutexes<00:19:21.320><c> without</c><00:19:21.679><c> having</c><00:19:22.070><c> a</c><00:19:22.129><c> global</c><00:19:22.490><c> variable</c>

00:19:22.600 --> 00:19:22.610 align:start position:0%
mutexes without having a global variable
 

00:19:22.610 --> 00:19:26.049 align:start position:0%
mutexes without having a global variable
the<00:19:23.419><c> API</c><00:19:24.080><c> won't</c><00:19:24.440><c> work</c><00:19:24.649><c> properly</c><00:19:24.919><c> and</c><00:19:25.370><c> this</c><00:19:25.879><c> is</c>

00:19:26.049 --> 00:19:26.059 align:start position:0%
the API won't work properly and this is
 

00:19:26.059 --> 00:19:28.629 align:start position:0%
the API won't work properly and this is
discussed<00:19:26.450><c> in</c><00:19:26.570><c> a</c><00:19:26.690><c> lot</c><00:19:26.840><c> of</c><00:19:26.870><c> POSIX</c><00:19:27.679><c> thread</c>

00:19:28.629 --> 00:19:28.639 align:start position:0%
discussed in a lot of POSIX thread
 

00:19:28.639 --> 00:19:30.970 align:start position:0%
discussed in a lot of POSIX thread
specification<00:19:29.389><c> texts</c><00:19:30.289><c> you</c><00:19:30.470><c> can</c><00:19:30.620><c> just</c><00:19:30.799><c> look</c>

00:19:30.970 --> 00:19:30.980 align:start position:0%
specification texts you can just look
 

00:19:30.980 --> 00:19:33.220 align:start position:0%
specification texts you can just look
this<00:19:31.159><c> up</c><00:19:31.220><c> the</c><00:19:31.610><c> the</c><00:19:32.179><c> most</c><00:19:32.389><c> common</c><00:19:32.539><c> error</c><00:19:33.019><c> that</c>

00:19:33.220 --> 00:19:33.230 align:start position:0%
this up the the most common error that
 

00:19:33.230 --> 00:19:34.930 align:start position:0%
this up the the most common error that
people<00:19:33.259><c> use</c><00:19:33.710><c> is</c><00:19:33.889><c> they</c><00:19:34.009><c> try</c><00:19:34.220><c> and</c><00:19:34.279><c> do</c><00:19:34.429><c> signalling</c>

00:19:34.930 --> 00:19:34.940 align:start position:0%
people use is they try and do signalling
 

00:19:34.940 --> 00:19:38.200 align:start position:0%
people use is they try and do signalling
without<00:19:35.269><c> a</c><00:19:35.299><c> predicate</c><00:19:36.399><c> our</c><00:19:37.399><c> implementation</c>

00:19:38.200 --> 00:19:38.210 align:start position:0%
without a predicate our implementation
 

00:19:38.210 --> 00:19:41.590 align:start position:0%
without a predicate our implementation
of<00:19:38.360><c> P</c><00:19:38.899><c> thread</c><00:19:39.200><c> cancel</c><00:19:39.710><c> which</c><00:19:40.279><c> when</c><00:19:41.210><c> you</c><00:19:41.299><c> start</c>

00:19:41.590 --> 00:19:41.600 align:start position:0%
of P thread cancel which when you start
 

00:19:41.600 --> 00:19:43.840 align:start position:0%
of P thread cancel which when you start
using<00:19:41.750><c> threads</c><00:19:42.200><c> or</c><00:19:42.470><c> you</c><00:19:42.919><c> if</c><00:19:43.279><c> you've</c><00:19:43.580><c> used</c>

00:19:43.840 --> 00:19:43.850 align:start position:0%
using threads or you if you've used
 

00:19:43.850 --> 00:19:46.720 align:start position:0%
using threads or you if you've used
threads<00:19:44.149><c> in</c><00:19:44.330><c> other</c><00:19:44.649><c> systems</c><00:19:45.649><c> you</c><00:19:46.399><c> might</c><00:19:46.519><c> want</c>

00:19:46.720 --> 00:19:46.730 align:start position:0%
threads in other systems you might want
 

00:19:46.730 --> 00:19:49.930 align:start position:0%
threads in other systems you might want
to<00:19:46.789><c> try</c><00:19:47.350><c> to</c><00:19:48.350><c> cancel</c><00:19:48.830><c> or</c><00:19:49.039><c> kill</c><00:19:49.279><c> a</c><00:19:49.309><c> thread</c><00:19:49.760><c> that's</c>

00:19:49.930 --> 00:19:49.940 align:start position:0%
to try to cancel or kill a thread that's
 

00:19:49.940 --> 00:19:52.269 align:start position:0%
to try to cancel or kill a thread that's
currently<00:19:50.690><c> running</c><00:19:50.990><c> and</c><00:19:51.230><c> this</c><00:19:51.679><c> is</c><00:19:51.830><c> dangerous</c>

00:19:52.269 --> 00:19:52.279 align:start position:0%
currently running and this is dangerous
 

00:19:52.279 --> 00:19:52.750 align:start position:0%
currently running and this is dangerous
for<00:19:52.429><c> a</c><00:19:52.490><c> few</c>

00:19:52.750 --> 00:19:52.760 align:start position:0%
for a few
 

00:19:52.760 --> 00:19:54.490 align:start position:0%
for a few
reasons<00:19:53.210><c> one</c><00:19:53.480><c> is</c><00:19:53.660><c> if</c><00:19:53.960><c> you're</c><00:19:54.470><c> using</c>

00:19:54.490 --> 00:19:54.500 align:start position:0%
reasons one is if you're using
 

00:19:54.500 --> 00:19:56.410 align:start position:0%
reasons one is if you're using
asynchronous<00:19:55.250><c> cancellation</c><00:19:56.060><c> where</c><00:19:56.240><c> you're</c>

00:19:56.410 --> 00:19:56.420 align:start position:0%
asynchronous cancellation where you're
 

00:19:56.420 --> 00:19:58.090 align:start position:0%
asynchronous cancellation where you're
basically<00:19:56.870><c> telling</c><00:19:57.230><c> the</c><00:19:57.500><c> system</c><00:19:57.830><c> I</c><00:19:57.950><c> don't</c>

00:19:58.090 --> 00:19:58.100 align:start position:0%
basically telling the system I don't
 

00:19:58.100 --> 00:19:59.470 align:start position:0%
basically telling the system I don't
care<00:19:58.250><c> what</c><00:19:58.430><c> the</c><00:19:58.550><c> threads</c><00:19:58.760><c> doing</c><00:19:59.060><c> I</c><00:19:59.150><c> just</c><00:19:59.330><c> want</c>

00:19:59.470 --> 00:19:59.480 align:start position:0%
care what the threads doing I just want
 

00:19:59.480 --> 00:20:02.260 align:start position:0%
care what the threads doing I just want
to<00:19:59.600><c> go</c><00:19:59.750><c> away</c><00:19:59.840><c> that's</c><00:20:00.790><c> dangerous</c><00:20:01.790><c> in</c><00:20:01.940><c> the</c><00:20:02.060><c> sense</c>

00:20:02.260 --> 00:20:02.270 align:start position:0%
to go away that's dangerous in the sense
 

00:20:02.270 --> 00:20:03.820 align:start position:0%
to go away that's dangerous in the sense
that<00:20:02.390><c> there</c><00:20:02.660><c> could</c><00:20:02.840><c> be</c><00:20:02.870><c> kernel</c><00:20:03.290><c> resources</c>

00:20:03.820 --> 00:20:03.830 align:start position:0%
that there could be kernel resources
 

00:20:03.830 --> 00:20:05.470 align:start position:0%
that there could be kernel resources
associated<00:20:04.190><c> with</c><00:20:04.460><c> that</c><00:20:04.700><c> thread</c><00:20:05.000><c> that</c><00:20:05.180><c> may</c><00:20:05.300><c> not</c>

00:20:05.470 --> 00:20:05.480 align:start position:0%
associated with that thread that may not
 

00:20:05.480 --> 00:20:08.860 align:start position:0%
associated with that thread that may not
be<00:20:05.630><c> properly</c><00:20:05.990><c> cleaned</c><00:20:06.200><c> up</c><00:20:06.470><c> there</c><00:20:07.130><c> may</c><00:20:07.370><c> be</c><00:20:07.870><c> some</c>

00:20:08.860 --> 00:20:08.870 align:start position:0%
be properly cleaned up there may be some
 

00:20:08.870 --> 00:20:10.750 align:start position:0%
be properly cleaned up there may be some
other<00:20:09.170><c> data</c><00:20:09.530><c> associated</c><00:20:10.070><c> with</c><00:20:10.190><c> that</c><00:20:10.280><c> thread</c>

00:20:10.750 --> 00:20:10.760 align:start position:0%
other data associated with that thread
 

00:20:10.760 --> 00:20:13.000 align:start position:0%
other data associated with that thread
in<00:20:11.000><c> some</c><00:20:11.210><c> other</c><00:20:11.390><c> task</c><00:20:11.720><c> that</c><00:20:12.050><c> is</c><00:20:12.260><c> not</c><00:20:12.770><c> getting</c>

00:20:13.000 --> 00:20:13.010 align:start position:0%
in some other task that is not getting
 

00:20:13.010 --> 00:20:14.560 align:start position:0%
in some other task that is not getting
cleaned<00:20:13.310><c> up</c><00:20:13.400><c> like</c><00:20:13.550><c> a</c><00:20:13.610><c> file</c><00:20:13.880><c> descriptor</c><00:20:14.090><c> that's</c>

00:20:14.560 --> 00:20:14.570 align:start position:0%
cleaned up like a file descriptor that's
 

00:20:14.570 --> 00:20:16.660 align:start position:0%
cleaned up like a file descriptor that's
open<00:20:14.900><c> or</c><00:20:15.140><c> a</c><00:20:15.170><c> file</c><00:20:15.650><c> that's</c><00:20:15.830><c> taking</c><00:20:16.160><c> up</c><00:20:16.250><c> space</c><00:20:16.370><c> on</c>

00:20:16.660 --> 00:20:16.670 align:start position:0%
open or a file that's taking up space on
 

00:20:16.670 --> 00:20:19.600 align:start position:0%
open or a file that's taking up space on
the<00:20:16.760><c> disk</c><00:20:16.940><c> so</c><00:20:17.510><c> we</c><00:20:18.500><c> recommend</c><00:20:19.010><c> using</c><00:20:19.220><c> the</c><00:20:19.400><c> P</c>

00:20:19.600 --> 00:20:19.610 align:start position:0%
the disk so we recommend using the P
 

00:20:19.610 --> 00:20:22.050 align:start position:0%
the disk so we recommend using the P
thread<00:20:19.850><c> canceled</c><00:20:20.240><c> in</c><00:20:20.420><c> its</c><00:20:20.630><c> deferred</c><00:20:21.380><c> or</c>

00:20:22.050 --> 00:20:22.060 align:start position:0%
thread canceled in its deferred or
 

00:20:22.060 --> 00:20:24.280 align:start position:0%
thread canceled in its deferred or
synchronous<00:20:23.060><c> model</c><00:20:23.450><c> where</c><00:20:23.660><c> you</c><00:20:24.080><c> basically</c>

00:20:24.280 --> 00:20:24.290 align:start position:0%
synchronous model where you basically
 

00:20:24.290 --> 00:20:26.560 align:start position:0%
synchronous model where you basically
make<00:20:25.220><c> a</c><00:20:25.250><c> request</c><00:20:25.760><c> to</c><00:20:25.940><c> the</c><00:20:25.970><c> system</c><00:20:26.330><c> that</c><00:20:26.450><c> I'd</c>

00:20:26.560 --> 00:20:26.570 align:start position:0%
make a request to the system that I'd
 

00:20:26.570 --> 00:20:30.100 align:start position:0%
make a request to the system that I'd
like<00:20:26.750><c> this</c><00:20:26.930><c> thread</c><00:20:27.170><c> to</c><00:20:27.680><c> quit</c><00:20:27.950><c> and</c><00:20:28.220><c> in</c><00:20:29.060><c> our</c><00:20:29.720><c> API</c>

00:20:30.100 --> 00:20:30.110 align:start position:0%
like this thread to quit and in our API
 

00:20:30.110 --> 00:20:32.290 align:start position:0%
like this thread to quit and in our API
we<00:20:30.590><c> have</c><00:20:30.620><c> a</c><00:20:30.770><c> P</c><00:20:31.040><c> thread</c><00:20:31.310><c> test</c><00:20:31.610><c> cancel</c><00:20:32.090><c> call</c>

00:20:32.290 --> 00:20:32.300 align:start position:0%
we have a P thread test cancel call
 

00:20:32.300 --> 00:20:33.850 align:start position:0%
we have a P thread test cancel call
where<00:20:32.570><c> if</c><00:20:32.780><c> you're</c><00:20:33.170><c> in</c><00:20:33.230><c> a</c><00:20:33.350><c> long-running</c>

00:20:33.850 --> 00:20:33.860 align:start position:0%
where if you're in a long-running
 

00:20:33.860 --> 00:20:36.370 align:start position:0%
where if you're in a long-running
compute<00:20:34.370><c> bound</c><00:20:34.550><c> loop</c><00:20:35.150><c> you</c><00:20:35.360><c> can</c><00:20:35.510><c> check</c><00:20:35.780><c> to</c><00:20:35.990><c> see</c>

00:20:36.370 --> 00:20:36.380 align:start position:0%
compute bound loop you can check to see
 

00:20:36.380 --> 00:20:39.670 align:start position:0%
compute bound loop you can check to see
if<00:20:36.620><c> a</c><00:20:36.890><c> thread</c><00:20:37.430><c> has</c><00:20:38.060><c> a</c><00:20:38.420><c> request</c><00:20:38.930><c> to</c><00:20:39.170><c> cancel</c><00:20:39.530><c> and</c>

00:20:39.670 --> 00:20:39.680 align:start position:0%
if a thread has a request to cancel and
 

00:20:39.680 --> 00:20:41.800 align:start position:0%
if a thread has a request to cancel and
if<00:20:39.770><c> so</c><00:20:39.980><c> that</c><00:20:40.160><c> thread</c><00:20:40.460><c> will</c><00:20:40.640><c> exit</c><00:20:41.030><c> at</c><00:20:41.120><c> the</c><00:20:41.660><c> P</c>

00:20:41.800 --> 00:20:41.810 align:start position:0%
if so that thread will exit at the P
 

00:20:41.810 --> 00:20:44.350 align:start position:0%
if so that thread will exit at the P
thread<00:20:42.050><c> test</c><00:20:42.320><c> cancel</c><00:20:42.740><c> point</c><00:20:42.980><c> the</c><00:20:43.940><c> POSIX</c>

00:20:44.350 --> 00:20:44.360 align:start position:0%
thread test cancel point the POSIX
 

00:20:44.360 --> 00:20:48.190 align:start position:0%
thread test cancel point the POSIX
specification<00:20:45.080><c> also</c><00:20:45.590><c> provides</c><00:20:46.580><c> for</c><00:20:47.200><c> system</c>

00:20:48.190 --> 00:20:48.200 align:start position:0%
specification also provides for system
 

00:20:48.200 --> 00:20:50.080 align:start position:0%
specification also provides for system
defined<00:20:48.620><c> cancellation</c><00:20:49.280><c> points</c><00:20:49.640><c> like</c><00:20:49.820><c> most</c>

00:20:50.080 --> 00:20:50.090 align:start position:0%
defined cancellation points like most
 

00:20:50.090 --> 00:20:52.930 align:start position:0%
defined cancellation points like most
system<00:20:50.450><c> calls</c><00:20:50.690><c> and</c><00:20:51.220><c> if</c><00:20:52.220><c> you</c><00:20:52.580><c> look</c><00:20:52.730><c> in</c><00:20:52.850><c> the</c>

00:20:52.930 --> 00:20:52.940 align:start position:0%
system calls and if you look in the
 

00:20:52.940 --> 00:20:54.910 align:start position:0%
system calls and if you look in the
Darwin<00:20:53.180><c> store</c><00:20:53.600><c> space</c><00:20:53.900><c> you'll</c><00:20:54.260><c> see</c><00:20:54.500><c> that</c><00:20:54.650><c> we're</c>

00:20:54.910 --> 00:20:54.920 align:start position:0%
Darwin store space you'll see that we're
 

00:20:54.920 --> 00:20:57.190 align:start position:0%
Darwin store space you'll see that we're
busily<00:20:55.790><c> working</c><00:20:56.150><c> on</c><00:20:56.450><c> implementing</c><00:20:56.870><c> those</c>

00:20:57.190 --> 00:20:57.200 align:start position:0%
busily working on implementing those
 

00:20:57.200 --> 00:20:58.870 align:start position:0%
busily working on implementing those
because<00:20:57.620><c> it's</c><00:20:58.010><c> actually</c><00:20:58.370><c> a</c><00:20:58.400><c> better</c><00:20:58.610><c> way</c><00:20:58.730><c> of</c>

00:20:58.870 --> 00:20:58.880 align:start position:0%
because it's actually a better way of
 

00:20:58.880 --> 00:21:01.150 align:start position:0%
because it's actually a better way of
doing<00:20:59.330><c> the</c><00:20:59.540><c> cancellation</c><00:21:00.170><c> if</c><00:21:00.410><c> I'm</c><00:21:00.740><c> in</c><00:21:00.890><c> an</c><00:21:00.980><c> open</c>

00:21:01.150 --> 00:21:01.160 align:start position:0%
doing the cancellation if I'm in an open
 

00:21:01.160 --> 00:21:03.550 align:start position:0%
doing the cancellation if I'm in an open
or<00:21:01.550><c> read</c><00:21:02.270><c> system</c><00:21:02.600><c> call</c><00:21:02.780><c> and</c><00:21:03.140><c> I</c><00:21:03.200><c> tell</c><00:21:03.410><c> that</c>

00:21:03.550 --> 00:21:03.560 align:start position:0%
or read system call and I tell that
 

00:21:03.560 --> 00:21:05.050 align:start position:0%
or read system call and I tell that
thread<00:21:03.830><c> to</c><00:21:03.980><c> cancel</c><00:21:04.370><c> it</c><00:21:04.460><c> should</c><00:21:04.640><c> just</c><00:21:04.850><c> break</c>

00:21:05.050 --> 00:21:05.060 align:start position:0%
thread to cancel it should just break
 

00:21:05.060 --> 00:21:06.940 align:start position:0%
thread to cancel it should just break
out<00:21:05.240><c> of</c><00:21:05.300><c> that</c><00:21:05.600><c> open</c><00:21:05.900><c> or</c><00:21:06.020><c> read</c><00:21:06.170><c> system</c><00:21:06.410><c> cause</c><00:21:06.680><c> if</c>

00:21:06.940 --> 00:21:06.950 align:start position:0%
out of that open or read system cause if
 

00:21:06.950 --> 00:21:12.160 align:start position:0%
out of that open or read system cause if
I<00:21:07.040><c> had</c><00:21:07.190><c> interrupted</c><00:21:07.730><c> that</c><00:21:08.300><c> system</c><00:21:09.230><c> call</c><00:21:10.990><c> the</c><00:21:11.990><c> P</c>

00:21:12.160 --> 00:21:12.170 align:start position:0%
I had interrupted that system call the P
 

00:21:12.170 --> 00:21:14.200 align:start position:0%
I had interrupted that system call the P
threads<00:21:12.380><c> documentation</c><00:21:13.280><c> right</c><00:21:13.880><c> now</c><00:21:14.030><c> is</c><00:21:14.180><c> a</c>

00:21:14.200 --> 00:21:14.210 align:start position:0%
threads documentation right now is a
 

00:21:14.210 --> 00:21:15.730 align:start position:0%
threads documentation right now is a
little<00:21:14.330><c> sparse</c><00:21:14.750><c> on</c><00:21:14.990><c> our</c><00:21:15.080><c> system</c><00:21:15.470><c> I</c><00:21:15.590><c> usually</c>

00:21:15.730 --> 00:21:15.740 align:start position:0%
little sparse on our system I usually
 

00:21:15.740 --> 00:21:19.420 align:start position:0%
little sparse on our system I usually
point<00:21:16.220><c> people</c><00:21:16.430><c> to</c><00:21:16.790><c> the</c><00:21:17.060><c> open</c><00:21:17.480><c> group</c><00:21:18.430><c> site</c>

00:21:19.420 --> 00:21:19.430 align:start position:0%
point people to the open group site
 

00:21:19.430 --> 00:21:20.920 align:start position:0%
point people to the open group site
because<00:21:19.910><c> they</c><00:21:20.180><c> happen</c><00:21:20.420><c> to</c><00:21:20.450><c> have</c><00:21:20.540><c> a</c><00:21:20.630><c> pretty</c>

00:21:20.920 --> 00:21:20.930 align:start position:0%
because they happen to have a pretty
 

00:21:20.930 --> 00:21:24.550 align:start position:0%
because they happen to have a pretty
extensive<00:21:22.600><c> documentation</c><00:21:23.600><c> on</c><00:21:23.900><c> both</c><00:21:24.080><c> the</c><00:21:24.230><c> UNIX</c>

00:21:24.550 --> 00:21:24.560 align:start position:0%
extensive documentation on both the UNIX
 

00:21:24.560 --> 00:21:27.310 align:start position:0%
extensive documentation on both the UNIX
98<00:21:25.010><c> standard</c><00:21:25.880><c> and</c><00:21:26.090><c> P</c><00:21:26.360><c> threads</c><00:21:26.600><c> specifically</c>

00:21:27.310 --> 00:21:27.320 align:start position:0%
98 standard and P threads specifically
 

00:21:27.320 --> 00:21:30.400 align:start position:0%
98 standard and P threads specifically
in<00:21:27.500><c> general</c><00:21:28.250><c> we</c><00:21:28.370><c> use</c><00:21:28.400><c> that</c><00:21:28.790><c> as</c><00:21:29.120><c> our</c><00:21:29.390><c> model</c><00:21:29.840><c> for</c>

00:21:30.400 --> 00:21:30.410 align:start position:0%
in general we use that as our model for
 

00:21:30.410 --> 00:21:33.430 align:start position:0%
in general we use that as our model for
doing<00:21:31.160><c> our</c><00:21:31.310><c> implementation</c><00:21:31.940><c> we</c><00:21:32.870><c> will</c><00:21:33.320><c> be</c>

00:21:33.430 --> 00:21:33.440 align:start position:0%
doing our implementation we will be
 

00:21:33.440 --> 00:21:36.040 align:start position:0%
doing our implementation we will be
providing<00:21:33.950><c> more</c><00:21:34.210><c> pthreads</c><00:21:35.210><c> documentation</c><00:21:35.810><c> on</c>

00:21:36.040 --> 00:21:36.050 align:start position:0%
providing more pthreads documentation on
 

00:21:36.050 --> 00:21:41.970 align:start position:0%
providing more pthreads documentation on
the<00:21:36.230><c> system</c><00:21:36.560><c> at</c><00:21:37.550><c> some</c><00:21:37.850><c> point</c><00:21:38.120><c> in</c><00:21:38.210><c> the</c><00:21:38.300><c> future</c>

00:21:41.970 --> 00:21:41.980 align:start position:0%
 
 

00:21:41.980 --> 00:21:46.810 align:start position:0%
 
so<00:21:42.980><c> in</c><00:21:43.370><c> the</c><00:21:43.580><c> Carbon</c><00:21:44.150><c> api's</c><00:21:45.140><c> as</c><00:21:45.560><c> I</c><00:21:46.040><c> said</c><00:21:46.280><c> the</c><00:21:46.430><c> MP</c>

00:21:46.810 --> 00:21:46.820 align:start position:0%
so in the Carbon api's as I said the MP
 

00:21:46.820 --> 00:21:49.690 align:start position:0%
so in the Carbon api's as I said the MP
task<00:21:47.290><c> spec</c><00:21:48.290><c> is</c><00:21:48.560><c> what</c><00:21:48.830><c> you'd</c><00:21:49.040><c> probably</c><00:21:49.250><c> look</c><00:21:49.490><c> at</c>

00:21:49.690 --> 00:21:49.700 align:start position:0%
task spec is what you'd probably look at
 

00:21:49.700 --> 00:21:54.100 align:start position:0%
task spec is what you'd probably look at
for<00:21:50.240><c> your</c><00:21:51.020><c> multi-threading</c><00:21:51.800><c> needs</c><00:21:52.600><c> MP</c><00:21:53.600><c> tasks</c>

00:21:54.100 --> 00:21:54.110 align:start position:0%
for your multi-threading needs MP tasks
 

00:21:54.110 --> 00:21:57.090 align:start position:0%
for your multi-threading needs MP tasks
just<00:21:54.530><c> a</c><00:21:54.740><c> quick</c><00:21:54.950><c> overview</c><00:21:55.330><c> in</c><00:21:56.330><c> Mac</c><00:21:56.570><c> OS</c><00:21:56.810><c> 10</c>

00:21:57.090 --> 00:21:57.100 align:start position:0%
just a quick overview in Mac OS 10
 

00:21:57.100 --> 00:22:01.360 align:start position:0%
just a quick overview in Mac OS 10
there's<00:21:58.100><c> the</c><00:21:58.430><c> notion</c><00:21:58.610><c> of</c><00:21:58.850><c> tasks</c><00:21:59.420><c> and</c><00:21:59.890><c> MP</c><00:22:00.890><c> tasks</c>

00:22:01.360 --> 00:22:01.370 align:start position:0%
there's the notion of tasks and MP tasks
 

00:22:01.370 --> 00:22:03.370 align:start position:0%
there's the notion of tasks and MP tasks
so<00:22:01.550><c> tasks</c><00:22:02.000><c> have</c><00:22:02.150><c> classically</c><00:22:02.930><c> been</c><00:22:03.110><c> the</c>

00:22:03.370 --> 00:22:03.380 align:start position:0%
so tasks have classically been the
 

00:22:03.380 --> 00:22:04.810 align:start position:0%
so tasks have classically been the
process<00:22:03.680><c> notion</c><00:22:04.370><c> where</c><00:22:04.520><c> you</c><00:22:04.640><c> have</c><00:22:04.730><c> an</c>

00:22:04.810 --> 00:22:04.820 align:start position:0%
process notion where you have an
 

00:22:04.820 --> 00:22:06.000 align:start position:0%
process notion where you have an
application<00:22:04.940><c> it</c>

00:22:06.000 --> 00:22:06.010 align:start position:0%
application it
 

00:22:06.010 --> 00:22:09.090 align:start position:0%
application it
address<00:22:06.370><c> space</c><00:22:06.610><c> all</c><00:22:06.970><c> of</c><00:22:07.210><c> its</c><00:22:07.390><c> threads</c><00:22:07.720><c> in</c><00:22:08.100><c> MP</c>

00:22:09.090 --> 00:22:09.100 align:start position:0%
address space all of its threads in MP
 

00:22:09.100 --> 00:22:11.700 align:start position:0%
address space all of its threads in MP
tasks<00:22:09.610><c> those</c><00:22:09.790><c> are</c><00:22:10.030><c> threads</c><00:22:10.780><c> within</c><00:22:11.200><c> a</c><00:22:11.320><c> carbon</c>

00:22:11.700 --> 00:22:11.710 align:start position:0%
tasks those are threads within a carbon
 

00:22:11.710 --> 00:22:15.660 align:start position:0%
tasks those are threads within a carbon
application<00:22:12.460><c> and</c><00:22:12.880><c> as</c><00:22:14.100><c> you</c><00:22:15.100><c> know</c><00:22:15.190><c> in</c><00:22:15.310><c> Mac</c><00:22:15.430><c> OS</c><00:22:15.640><c> 10</c>

00:22:15.660 --> 00:22:15.670 align:start position:0%
application and as you know in Mac OS 10
 

00:22:15.670 --> 00:22:17.490 align:start position:0%
application and as you know in Mac OS 10
all<00:22:16.060><c> applications</c><00:22:16.630><c> are</c><00:22:16.690><c> in</c><00:22:16.810><c> a</c><00:22:16.900><c> separate</c>

00:22:17.490 --> 00:22:17.500 align:start position:0%
all applications are in a separate
 

00:22:17.500 --> 00:22:19.620 align:start position:0%
all applications are in a separate
address<00:22:17.620><c> space</c><00:22:18.070><c> so</c><00:22:18.520><c> some</c><00:22:18.760><c> of</c><00:22:18.790><c> the</c><00:22:18.940><c> api's</c><00:22:19.330><c> that</c>

00:22:19.620 --> 00:22:19.630 align:start position:0%
address space so some of the api's that
 

00:22:19.630 --> 00:22:22.950 align:start position:0%
address space so some of the api's that
you<00:22:19.750><c> may</c><00:22:19.930><c> have</c><00:22:20.410><c> used</c><00:22:20.740><c> in</c><00:22:21.040><c> classic</c><00:22:21.850><c> Mac</c><00:22:22.540><c> OS</c><00:22:22.570><c> 9</c>

00:22:22.950 --> 00:22:22.960 align:start position:0%
you may have used in classic Mac OS 9
 

00:22:22.960 --> 00:22:25.230 align:start position:0%
you may have used in classic Mac OS 9
are<00:22:23.650><c> not</c><00:22:24.220><c> going</c><00:22:24.400><c> to</c><00:22:24.460><c> work</c><00:22:24.640><c> the</c><00:22:24.820><c> same</c><00:22:25.000><c> way</c><00:22:25.060><c> you</c>

00:22:25.230 --> 00:22:25.240 align:start position:0%
are not going to work the same way you
 

00:22:25.240 --> 00:22:27.810 align:start position:0%
are not going to work the same way you
can't<00:22:25.570><c> do</c><00:22:25.750><c> signalling</c><00:22:26.260><c> between</c><00:22:26.820><c> applications</c>

00:22:27.810 --> 00:22:27.820 align:start position:0%
can't do signalling between applications
 

00:22:27.820 --> 00:22:33.780 align:start position:0%
can't do signalling between applications
right<00:22:28.030><c> now</c><00:22:28.240><c> using</c><00:22:28.540><c> the</c><00:22:28.720><c> MP</c><00:22:29.080><c> tasks</c><00:22:29.320><c> API</c><00:22:32.160><c> the</c><00:22:33.160><c> API</c>

00:22:33.780 --> 00:22:33.790 align:start position:0%
right now using the MP tasks API the API
 

00:22:33.790 --> 00:22:35.730 align:start position:0%
right now using the MP tasks API the API
here<00:22:34.120><c> is</c><00:22:34.360><c> pretty</c><00:22:34.840><c> rich</c><00:22:35.110><c> there</c><00:22:35.410><c> are</c><00:22:35.500><c> a</c><00:22:35.530><c> lot</c><00:22:35.710><c> of</c>

00:22:35.730 --> 00:22:35.740 align:start position:0%
here is pretty rich there are a lot of
 

00:22:35.740 --> 00:22:38.760 align:start position:0%
here is pretty rich there are a lot of
mechanisms<00:22:36.460><c> to</c><00:22:36.610><c> do</c><00:22:36.730><c> synchronization</c><00:22:37.770><c> between</c>

00:22:38.760 --> 00:22:38.770 align:start position:0%
mechanisms to do synchronization between
 

00:22:38.770 --> 00:22:42.660 align:start position:0%
mechanisms to do synchronization between
MP<00:22:39.370><c> tasks</c><00:22:39.880><c> there's</c><00:22:40.090><c> a</c><00:22:40.450><c> semaphore</c><00:22:41.310><c> model</c><00:22:42.310><c> there</c>

00:22:42.660 --> 00:22:42.670 align:start position:0%
MP tasks there's a semaphore model there
 

00:22:42.670 --> 00:22:45.990 align:start position:0%
MP tasks there's a semaphore model there
are<00:22:42.700><c> message</c><00:22:43.120><c> queues</c><00:22:43.630><c> and</c><00:22:43.990><c> event</c><00:22:44.860><c> groups</c><00:22:45.190><c> all</c>

00:22:45.990 --> 00:22:46.000 align:start position:0%
are message queues and event groups all
 

00:22:46.000 --> 00:22:47.670 align:start position:0%
are message queues and event groups all
three<00:22:46.300><c> of</c><00:22:46.390><c> these</c><00:22:46.510><c> can</c><00:22:47.080><c> be</c><00:22:47.200><c> used</c><00:22:47.410><c> in</c><00:22:47.560><c> different</c>

00:22:47.670 --> 00:22:47.680 align:start position:0%
three of these can be used in different
 

00:22:47.680 --> 00:22:49.590 align:start position:0%
three of these can be used in different
ways<00:22:47.920><c> depending</c><00:22:48.250><c> on</c><00:22:48.700><c> your</c><00:22:48.820><c> application</c><00:22:48.970><c> if</c>

00:22:49.590 --> 00:22:49.600 align:start position:0%
ways depending on your application if
 

00:22:49.600 --> 00:22:53.370 align:start position:0%
ways depending on your application if
you<00:22:49.960><c> have</c><00:22:50.170><c> some</c><00:22:51.570><c> client-server</c><00:22:52.570><c> model</c><00:22:52.780><c> if</c><00:22:53.350><c> you</c>

00:22:53.370 --> 00:22:53.380 align:start position:0%
you have some client-server model if you
 

00:22:53.380 --> 00:22:55.860 align:start position:0%
you have some client-server model if you
have<00:22:53.620><c> a</c><00:22:53.890><c> worker</c><00:22:54.400><c> thread</c><00:22:54.850><c> model</c><00:22:55.480><c> you</c><00:22:55.660><c> can</c>

00:22:55.860 --> 00:22:55.870 align:start position:0%
have a worker thread model you can
 

00:22:55.870 --> 00:22:58.520 align:start position:0%
have a worker thread model you can
decide<00:22:56.500><c> which</c><00:22:56.710><c> one</c><00:22:56.890><c> works</c><00:22:57.100><c> best</c><00:22:57.310><c> for</c><00:22:57.430><c> you</c>

00:22:58.520 --> 00:22:58.530 align:start position:0%
decide which one works best for you
 

00:22:58.530 --> 00:23:01.080 align:start position:0%
decide which one works best for you
the<00:22:59.530><c> other</c><00:22:59.680><c> API</c><00:23:00.370><c> that's</c><00:23:00.670><c> a</c><00:23:00.730><c> little</c><00:23:00.880><c> bit</c><00:23:01.060><c> unique</c>

00:23:01.080 --> 00:23:01.090 align:start position:0%
the other API that's a little bit unique
 

00:23:01.090 --> 00:23:03.600 align:start position:0%
the other API that's a little bit unique
here<00:23:01.570><c> is</c><00:23:01.660><c> the</c><00:23:01.810><c> critical</c><00:23:02.080><c> region</c><00:23:02.380><c> API</c><00:23:02.860><c> this</c>

00:23:03.600 --> 00:23:03.610 align:start position:0%
here is the critical region API this
 

00:23:03.610 --> 00:23:06.450 align:start position:0%
here is the critical region API this
basically<00:23:04.540><c> lets</c><00:23:04.720><c> you</c><00:23:04.810><c> do</c><00:23:05.470><c> mutual</c><00:23:06.040><c> exclusion</c>

00:23:06.450 --> 00:23:06.460 align:start position:0%
basically lets you do mutual exclusion
 

00:23:06.460 --> 00:23:09.570 align:start position:0%
basically lets you do mutual exclusion
and<00:23:07.020><c> it</c><00:23:08.020><c> also</c><00:23:08.200><c> allows</c><00:23:08.530><c> for</c><00:23:08.560><c> a</c><00:23:08.800><c> recursive</c><00:23:09.250><c> entry</c>

00:23:09.570 --> 00:23:09.580 align:start position:0%
and it also allows for a recursive entry
 

00:23:09.580 --> 00:23:13.740 align:start position:0%
and it also allows for a recursive entry
to<00:23:09.850><c> those</c><00:23:10.630><c> regions</c><00:23:12.300><c> there</c><00:23:13.300><c> are</c><00:23:13.330><c> atomic</c>

00:23:13.740 --> 00:23:13.750 align:start position:0%
to those regions there are atomic
 

00:23:13.750 --> 00:23:16.320 align:start position:0%
to those regions there are atomic
operations<00:23:14.500><c> that</c><00:23:14.740><c> are</c><00:23:15.010><c> present</c><00:23:15.790><c> in</c><00:23:15.850><c> this</c><00:23:15.970><c> API</c>

00:23:16.320 --> 00:23:16.330 align:start position:0%
operations that are present in this API
 

00:23:16.330 --> 00:23:18.540 align:start position:0%
operations that are present in this API
that<00:23:16.510><c> are</c><00:23:16.630><c> kind</c><00:23:16.810><c> of</c><00:23:16.900><c> handy</c><00:23:17.260><c> for</c><00:23:17.710><c> atomic</c>

00:23:18.540 --> 00:23:18.550 align:start position:0%
that are kind of handy for atomic
 

00:23:18.550 --> 00:23:20.910 align:start position:0%
that are kind of handy for atomic
increment<00:23:19.240><c> and</c><00:23:19.390><c> decrement</c><00:23:19.810><c> and</c><00:23:19.990><c> test</c><00:23:20.530><c> inset</c>

00:23:20.910 --> 00:23:20.920 align:start position:0%
increment and decrement and test inset
 

00:23:20.920 --> 00:23:23.820 align:start position:0%
increment and decrement and test inset
type<00:23:21.130><c> instructions</c><00:23:22.440><c> these</c><00:23:23.440><c> are</c><00:23:23.560><c> all</c><00:23:23.650><c> done</c>

00:23:23.820 --> 00:23:23.830 align:start position:0%
type instructions these are all done
 

00:23:23.830 --> 00:23:25.860 align:start position:0%
type instructions these are all done
very<00:23:24.040><c> efficiently</c><00:23:24.400><c> and</c><00:23:24.880><c> they're</c><00:23:25.540><c> probably</c>

00:23:25.860 --> 00:23:25.870 align:start position:0%
very efficiently and they're probably
 

00:23:25.870 --> 00:23:28.050 align:start position:0%
very efficiently and they're probably
very<00:23:26.020><c> close</c><00:23:26.560><c> to</c><00:23:26.800><c> the</c><00:23:26.920><c> same</c><00:23:27.100><c> implementation</c><00:23:27.850><c> as</c>

00:23:28.050 --> 00:23:28.060 align:start position:0%
very close to the same implementation as
 

00:23:28.060 --> 00:23:32.220 align:start position:0%
very close to the same implementation as
on<00:23:28.360><c> Mac</c><00:23:28.540><c> OS</c><00:23:28.780><c> 9</c><00:23:29.910><c> some</c><00:23:30.910><c> of</c><00:23:31.030><c> the</c><00:23:31.120><c> api's</c><00:23:31.540><c> that</c><00:23:31.840><c> exist</c>

00:23:32.220 --> 00:23:32.230 align:start position:0%
on Mac OS 9 some of the api's that exist
 

00:23:32.230 --> 00:23:35.970 align:start position:0%
on Mac OS 9 some of the api's that exist
on<00:23:32.440><c> Mac</c><00:23:32.620><c> OS</c><00:23:32.890><c> 10</c><00:23:32.920><c> that</c><00:23:33.640><c> use</c><00:23:34.090><c> MP</c><00:23:34.810><c> tasks</c><00:23:35.320><c> under</c><00:23:35.860><c> the</c>

00:23:35.970 --> 00:23:35.980 align:start position:0%
on Mac OS 10 that use MP tasks under the
 

00:23:35.980 --> 00:23:37.800 align:start position:0%
on Mac OS 10 that use MP tasks under the
covers<00:23:36.340><c> are</c><00:23:36.640><c> the</c><00:23:36.940><c> synchronous</c><00:23:37.360><c> File</c><00:23:37.600><c> Manager</c>

00:23:37.800 --> 00:23:37.810 align:start position:0%
covers are the synchronous File Manager
 

00:23:37.810 --> 00:23:42.090 align:start position:0%
covers are the synchronous File Manager
api's<00:23:38.500><c> and</c><00:23:38.890><c> the</c><00:23:39.790><c> open</c><00:23:40.090><c> transport</c><00:23:40.630><c> api's</c><00:23:41.100><c> if</c>

00:23:42.090 --> 00:23:42.100 align:start position:0%
api's and the open transport api's if
 

00:23:42.100 --> 00:23:46.680 align:start position:0%
api's and the open transport api's if
you'd<00:23:42.700><c> like</c><00:23:42.850><c> to</c><00:23:43.090><c> see</c><00:23:43.770><c> an</c><00:23:44.770><c> example</c><00:23:45.430><c> of</c><00:23:45.820><c> some</c><00:23:46.660><c> of</c>

00:23:46.680 --> 00:23:46.690 align:start position:0%
you'd like to see an example of some of
 

00:23:46.690 --> 00:23:48.840 align:start position:0%
you'd like to see an example of some of
these<00:23:46.840><c> api's</c><00:23:47.290><c> and</c><00:23:47.590><c> the</c><00:23:47.830><c> tech</c><00:23:48.040><c> note</c><00:23:48.310><c> that</c><00:23:48.730><c> we</c>

00:23:48.840 --> 00:23:48.850 align:start position:0%
these api's and the tech note that we
 

00:23:48.850 --> 00:23:53.070 align:start position:0%
these api's and the tech note that we
usually<00:23:49.150><c> refer</c><00:23:49.240><c> to</c><00:23:49.570><c> is</c><00:23:49.750><c> 1104</c><00:23:51.210><c> the</c><00:23:52.210><c> URLs</c><00:23:52.810><c> kind</c>

00:23:53.070 --> 00:23:53.080 align:start position:0%
usually refer to is 1104 the URLs kind
 

00:23:53.080 --> 00:23:55.710 align:start position:0%
usually refer to is 1104 the URLs kind
of<00:23:53.200><c> hard</c><00:23:53.530><c> to</c><00:23:53.590><c> read</c><00:23:53.740><c> there</c><00:23:53.950><c> but</c><00:23:54.490><c> in</c><00:23:55.240><c> general</c>

00:23:55.710 --> 00:23:55.720 align:start position:0%
of hard to read there but in general
 

00:23:55.720 --> 00:23:57.480 align:start position:0%
of hard to read there but in general
that<00:23:55.750><c> will</c><00:23:56.020><c> give</c><00:23:56.170><c> you</c><00:23:56.290><c> a</c><00:23:56.320><c> background</c><00:23:56.590><c> on</c><00:23:56.980><c> what</c>

00:23:57.480 --> 00:23:57.490 align:start position:0%
that will give you a background on what
 

00:23:57.490 --> 00:24:00.140 align:start position:0%
that will give you a background on what
we're<00:23:57.640><c> doing</c><00:23:57.910><c> with</c><00:23:58.060><c> the</c><00:23:58.180><c> MP</c><00:23:58.480><c> task</c><00:23:58.780><c> api's</c><00:23:59.410><c> and</c>

00:24:00.140 --> 00:24:00.150 align:start position:0%
we're doing with the MP task api's and
 

00:24:00.150 --> 00:24:03.330 align:start position:0%
we're doing with the MP task api's and
some<00:24:01.150><c> examples</c><00:24:01.990><c> of</c><00:24:02.200><c> the</c><00:24:02.830><c> thread-safe</c>

00:24:03.330 --> 00:24:03.340 align:start position:0%
some examples of the thread-safe
 

00:24:03.340 --> 00:24:08.880 align:start position:0%
some examples of the thread-safe
services<00:24:04.060><c> that</c><00:24:04.180><c> you</c><00:24:04.300><c> can</c><00:24:04.330><c> use</c><00:24:04.480><c> in</c><00:24:05.020><c> carbene</c><00:24:07.890><c> the</c>

00:24:08.880 --> 00:24:08.890 align:start position:0%
services that you can use in carbene the
 

00:24:08.890 --> 00:24:11.400 align:start position:0%
services that you can use in carbene the
documentation<00:24:09.580><c> specifically</c><00:24:10.240><c> for</c><00:24:10.570><c> the</c><00:24:11.140><c> multi</c>

00:24:11.400 --> 00:24:11.410 align:start position:0%
documentation specifically for the multi
 

00:24:11.410 --> 00:24:13.320 align:start position:0%
documentation specifically for the multi
processing<00:24:11.860><c> services</c><00:24:12.370><c> is</c><00:24:12.640><c> on</c><00:24:12.670><c> developer</c>

00:24:13.320 --> 00:24:13.330 align:start position:0%
processing services is on developer
 

00:24:13.330 --> 00:24:16.560 align:start position:0%
processing services is on developer
apple<00:24:13.780><c> comtex</c><00:24:14.530><c> pub</c><00:24:14.830><c> tech</c><00:24:15.340><c> pubs</c><00:24:15.580><c> MP</c><00:24:16.060><c> services</c>

00:24:16.560 --> 00:24:16.570 align:start position:0%
apple comtex pub tech pubs MP services
 

00:24:16.570 --> 00:24:19.380 align:start position:0%
apple comtex pub tech pubs MP services
and<00:24:17.100><c> these</c><00:24:18.100><c> are</c><00:24:18.280><c> all</c><00:24:18.520><c> these</c><00:24:18.760><c> documents</c><00:24:19.270><c> are</c>

00:24:19.380 --> 00:24:19.390 align:start position:0%
and these are all these documents are
 

00:24:19.390 --> 00:24:19.710 align:start position:0%
and these are all these documents are
being

00:24:19.710 --> 00:24:19.720 align:start position:0%
being
 

00:24:19.720 --> 00:24:22.649 align:start position:0%
being
volved<00:24:20.400><c> to</c><00:24:21.400><c> reflect</c><00:24:22.090><c> what</c><00:24:22.270><c> the</c><00:24:22.390><c> current</c>

00:24:22.649 --> 00:24:22.659 align:start position:0%
volved to reflect what the current
 

00:24:22.659 --> 00:24:26.669 align:start position:0%
volved to reflect what the current
carbon<00:24:22.900><c> api</c><00:24:23.350><c> is</c><00:24:24.900><c> the</c><00:24:25.900><c> second</c><00:24:26.260><c> framework</c><00:24:26.530><c> I'll</c>

00:24:26.669 --> 00:24:26.679 align:start position:0%
carbon api is the second framework I'll
 

00:24:26.679 --> 00:24:29.789 align:start position:0%
carbon api is the second framework I'll
talk<00:24:26.830><c> about</c><00:24:26.860><c> is</c><00:24:27.220><c> cocoa</c><00:24:27.820><c> it's</c><00:24:28.510><c> the</c><00:24:29.140><c> high</c><00:24:29.409><c> level</c>

00:24:29.789 --> 00:24:29.799 align:start position:0%
talk about is cocoa it's the high level
 

00:24:29.799 --> 00:24:33.990 align:start position:0%
talk about is cocoa it's the high level
GUI<00:24:30.370><c> framework</c><00:24:30.700><c> that</c><00:24:32.250><c> Apple</c><00:24:33.250><c> has</c><00:24:33.429><c> presented</c>

00:24:33.990 --> 00:24:34.000 align:start position:0%
GUI framework that Apple has presented
 

00:24:34.000 --> 00:24:36.870 align:start position:0%
GUI framework that Apple has presented
as<00:24:34.179><c> an</c><00:24:34.419><c> object</c><00:24:34.570><c> oriented</c><00:24:35.309><c> environment</c><00:24:36.309><c> for</c>

00:24:36.870 --> 00:24:36.880 align:start position:0%
as an object oriented environment for
 

00:24:36.880 --> 00:24:39.630 align:start position:0%
as an object oriented environment for
doing<00:24:37.090><c> application</c><00:24:37.570><c> development</c><00:24:37.990><c> and</c><00:24:38.679><c> as</c>

00:24:39.630 --> 00:24:39.640 align:start position:0%
doing application development and as
 

00:24:39.640 --> 00:24:41.460 align:start position:0%
doing application development and as
threads<00:24:39.940><c> API</c><00:24:40.270><c> is</c><00:24:40.360><c> very</c><00:24:40.450><c> simple</c><00:24:40.960><c> to</c><00:24:41.080><c> use</c><00:24:41.110><c> there</c>

00:24:41.460 --> 00:24:41.470 align:start position:0%
threads API is very simple to use there
 

00:24:41.470 --> 00:24:43.310 align:start position:0%
threads API is very simple to use there
aren't<00:24:41.799><c> very</c><00:24:41.830><c> many</c><00:24:42.039><c> entry</c><00:24:42.610><c> points</c><00:24:42.640><c> to</c><00:24:43.120><c> it</c>

00:24:43.310 --> 00:24:43.320 align:start position:0%
aren't very many entry points to it
 

00:24:43.320 --> 00:24:45.600 align:start position:0%
aren't very many entry points to it
basically<00:24:44.320><c> you</c><00:24:44.440><c> can</c><00:24:44.620><c> create</c><00:24:44.919><c> a</c><00:24:44.980><c> thread</c><00:24:45.340><c> you</c>

00:24:45.600 --> 00:24:45.610 align:start position:0%
basically you can create a thread you
 

00:24:45.610 --> 00:24:50.549 align:start position:0%
basically you can create a thread you
can<00:24:46.230><c> get</c><00:24:47.640><c> the</c><00:24:48.640><c> threads</c><00:24:48.940><c> state</c><00:24:49.809><c> at</c><00:24:50.049><c> any</c><00:24:50.289><c> time</c>

00:24:50.549 --> 00:24:50.559 align:start position:0%
can get the threads state at any time
 

00:24:50.559 --> 00:24:52.890 align:start position:0%
can get the threads state at any time
the<00:24:51.010><c> preemption</c><00:24:51.640><c> pre-emptive</c><00:24:52.419><c> nature</c><00:24:52.720><c> of</c><00:24:52.840><c> the</c>

00:24:52.890 --> 00:24:52.900 align:start position:0%
the preemption pre-emptive nature of the
 

00:24:52.900 --> 00:24:54.919 align:start position:0%
the preemption pre-emptive nature of the
threat<00:24:53.110><c> isn't</c><00:24:53.409><c> unique</c><00:24:53.650><c> all</c><00:24:54.010><c> the</c><00:24:54.250><c> threads</c><00:24:54.520><c> in</c>

00:24:54.919 --> 00:24:54.929 align:start position:0%
threat isn't unique all the threads in
 

00:24:54.929 --> 00:24:57.180 align:start position:0%
threat isn't unique all the threads in
the<00:24:55.929><c> thread</c><00:24:55.960><c> malls</c><00:24:56.380><c> I've</c><00:24:56.590><c> described</c><00:24:56.980><c> or</c>

00:24:57.180 --> 00:24:57.190 align:start position:0%
the thread malls I've described or
 

00:24:57.190 --> 00:24:59.549 align:start position:0%
the thread malls I've described or
pre-emptive<00:24:57.640><c> there's</c><00:24:58.360><c> an</c><00:24:58.539><c> exit</c><00:24:58.870><c> notification</c>

00:24:59.549 --> 00:24:59.559 align:start position:0%
pre-emptive there's an exit notification
 

00:24:59.559 --> 00:25:01.919 align:start position:0%
pre-emptive there's an exit notification
for<00:24:59.740><c> NS</c><00:24:59.980><c> threads</c><00:25:00.280><c> where</c><00:25:00.630><c> even</c><00:25:01.630><c> though</c><00:25:01.750><c> the</c>

00:25:01.919 --> 00:25:01.929 align:start position:0%
for NS threads where even though the
 

00:25:01.929 --> 00:25:03.990 align:start position:0%
for NS threads where even though the
thread<00:25:02.200><c> is</c><00:25:02.350><c> detached</c><00:25:02.830><c> meaning</c><00:25:03.340><c> that</c><00:25:03.460><c> it</c><00:25:03.789><c> can</c>

00:25:03.990 --> 00:25:04.000 align:start position:0%
thread is detached meaning that it can
 

00:25:04.000 --> 00:25:06.270 align:start position:0%
thread is detached meaning that it can
go<00:25:04.179><c> away</c><00:25:04.330><c> and</c><00:25:04.840><c> you</c><00:25:05.350><c> can</c><00:25:05.500><c> forget</c><00:25:05.740><c> about</c><00:25:05.799><c> it</c><00:25:06.010><c> you</c>

00:25:06.270 --> 00:25:06.280 align:start position:0%
go away and you can forget about it you
 

00:25:06.280 --> 00:25:07.799 align:start position:0%
go away and you can forget about it you
could<00:25:06.520><c> also</c><00:25:06.820><c> register</c><00:25:07.240><c> for</c><00:25:07.270><c> a</c><00:25:07.450><c> notification</c>

00:25:07.799 --> 00:25:07.809 align:start position:0%
could also register for a notification
 

00:25:07.809 --> 00:25:10.020 align:start position:0%
could also register for a notification
saying<00:25:08.530><c> I'd</c><00:25:09.010><c> like</c><00:25:09.190><c> to</c><00:25:09.250><c> know</c><00:25:09.460><c> when</c><00:25:09.669><c> this</c><00:25:09.789><c> thread</c>

00:25:10.020 --> 00:25:10.030 align:start position:0%
saying I'd like to know when this thread
 

00:25:10.030 --> 00:25:13.950 align:start position:0%
saying I'd like to know when this thread
goes<00:25:10.240><c> away</c><00:25:10.450><c> to</c><00:25:10.510><c> clean</c><00:25:10.870><c> up</c><00:25:11.020><c> resources</c><00:25:12.960><c> common</c>

00:25:13.950 --> 00:25:13.960 align:start position:0%
goes away to clean up resources common
 

00:25:13.960 --> 00:25:16.230 align:start position:0%
goes away to clean up resources common
to<00:25:14.260><c> most</c><00:25:14.409><c> thread</c><00:25:14.710><c> api's</c><00:25:15.070><c> is</c><00:25:15.370><c> the</c><00:25:15.610><c> notion</c><00:25:15.909><c> of</c><00:25:16.030><c> a</c>

00:25:16.230 --> 00:25:16.240 align:start position:0%
to most thread api's is the notion of a
 

00:25:16.240 --> 00:25:19.289 align:start position:0%
to most thread api's is the notion of a
per<00:25:16.570><c> thread</c><00:25:16.900><c> data</c><00:25:17.620><c> and</c><00:25:17.919><c> when</c><00:25:18.640><c> you</c><00:25:18.760><c> extend</c><00:25:19.090><c> that</c>

00:25:19.289 --> 00:25:19.299 align:start position:0%
per thread data and when you extend that
 

00:25:19.299 --> 00:25:21.690 align:start position:0%
per thread data and when you extend that
into<00:25:19.539><c> an</c><00:25:19.659><c> object-oriented</c><00:25:20.289><c> environment</c><00:25:21.159><c> the</c>

00:25:21.690 --> 00:25:21.700 align:start position:0%
into an object-oriented environment the
 

00:25:21.700 --> 00:25:24.000 align:start position:0%
into an object-oriented environment the
per<00:25:22.360><c> thread</c><00:25:22.630><c> data</c><00:25:22.840><c> becomes</c><00:25:23.200><c> a</c><00:25:23.320><c> per</c><00:25:23.470><c> thread</c><00:25:23.679><c> NS</c>

00:25:24.000 --> 00:25:24.010 align:start position:0%
per thread data becomes a per thread NS
 

00:25:24.010 --> 00:25:26.010 align:start position:0%
per thread data becomes a per thread NS
dictionary<00:25:24.220><c> so</c><00:25:24.789><c> you</c><00:25:24.880><c> can</c><00:25:25.030><c> have</c><00:25:25.179><c> keys</c><00:25:25.780><c> and</c>

00:25:26.010 --> 00:25:26.020 align:start position:0%
dictionary so you can have keys and
 

00:25:26.020 --> 00:25:27.870 align:start position:0%
dictionary so you can have keys and
values<00:25:26.049><c> that</c><00:25:26.350><c> are</c><00:25:26.500><c> associated</c><00:25:27.220><c> with</c><00:25:27.429><c> your</c>

00:25:27.870 --> 00:25:27.880 align:start position:0%
values that are associated with your
 

00:25:27.880 --> 00:25:30.899 align:start position:0%
values that are associated with your
thread<00:25:28.210><c> using</c><00:25:28.720><c> the</c><00:25:28.990><c> nice</c><00:25:29.549><c> high-level</c><00:25:30.549><c> cocoa</c>

00:25:30.899 --> 00:25:30.909 align:start position:0%
thread using the nice high-level cocoa
 

00:25:30.909 --> 00:25:36.000 align:start position:0%
thread using the nice high-level cocoa
api's<00:25:33.240><c> in</c><00:25:34.240><c> NS</c><00:25:34.630><c> thread</c><00:25:35.230><c> there's</c><00:25:35.500><c> an</c><00:25:35.620><c> app</c><00:25:35.770><c> kit</c>

00:25:36.000 --> 00:25:36.010 align:start position:0%
api's in NS thread there's an app kit
 

00:25:36.010 --> 00:25:38.250 align:start position:0%
api's in NS thread there's an app kit
extension<00:25:36.610><c> so</c><00:25:36.850><c> even</c><00:25:37.539><c> though</c><00:25:37.630><c> NS</c><00:25:37.900><c> thread</c><00:25:38.140><c> is</c>

00:25:38.250 --> 00:25:38.260 align:start position:0%
extension so even though NS thread is
 

00:25:38.260 --> 00:25:40.560 align:start position:0%
extension so even though NS thread is
defined<00:25:38.650><c> in</c><00:25:38.770><c> the</c><00:25:38.860><c> foundation</c><00:25:39.400><c> classes</c><00:25:39.730><c> if</c><00:25:40.150><c> you</c>

00:25:40.560 --> 00:25:40.570 align:start position:0%
defined in the foundation classes if you
 

00:25:40.570 --> 00:25:43.890 align:start position:0%
defined in the foundation classes if you
look<00:25:40.750><c> in</c><00:25:40.870><c> the</c><00:25:40.990><c> app</c><00:25:41.140><c> kit</c><00:25:41.470><c> our</c><00:25:42.400><c> cocoa</c><00:25:43.299><c> framework</c>

00:25:43.890 --> 00:25:43.900 align:start position:0%
look in the app kit our cocoa framework
 

00:25:43.900 --> 00:25:46.080 align:start position:0%
look in the app kit our cocoa framework
you'll<00:25:44.289><c> notice</c><00:25:44.650><c> that</c><00:25:44.740><c> there's</c><00:25:44.980><c> a</c><00:25:45.130><c> method</c><00:25:46.000><c> in</c>

00:25:46.080 --> 00:25:46.090 align:start position:0%
you'll notice that there's a method in
 

00:25:46.090 --> 00:25:47.850 align:start position:0%
you'll notice that there's a method in
there<00:25:46.270><c> that</c><00:25:46.480><c> says</c><00:25:46.690><c> detach</c>

00:25:47.850 --> 00:25:47.860 align:start position:0%
there that says detach
 

00:25:47.860 --> 00:25:50.490 align:start position:0%
there that says detach
drawing<00:25:48.610><c> thread</c><00:25:49.030><c> and</c><00:25:49.299><c> what</c><00:25:49.600><c> that</c><00:25:49.750><c> lets</c><00:25:49.900><c> you</c><00:25:50.049><c> do</c>

00:25:50.490 --> 00:25:50.500 align:start position:0%
drawing thread and what that lets you do
 

00:25:50.500 --> 00:25:52.169 align:start position:0%
drawing thread and what that lets you do
is<00:25:50.650><c> give</c><00:25:50.830><c> a</c><00:25:50.860><c> hint</c><00:25:51.130><c> to</c><00:25:51.280><c> the</c><00:25:51.400><c> system</c><00:25:51.730><c> that</c><00:25:51.940><c> I'm</c>

00:25:52.169 --> 00:25:52.179 align:start position:0%
is give a hint to the system that I'm
 

00:25:52.179 --> 00:25:53.610 align:start position:0%
is give a hint to the system that I'm
going<00:25:52.450><c> to</c><00:25:52.480><c> be</c><00:25:52.630><c> creating</c><00:25:52.990><c> a</c><00:25:53.080><c> thread</c><00:25:53.260><c> here</c><00:25:53.500><c> that</c>

00:25:53.610 --> 00:25:53.620 align:start position:0%
going to be creating a thread here that
 

00:25:53.620 --> 00:25:56.430 align:start position:0%
going to be creating a thread here that
might<00:25:53.799><c> be</c><00:25:53.950><c> doing</c><00:25:54.220><c> interaction</c><00:25:55.030><c> with</c><00:25:55.440><c> the</c>

00:25:56.430 --> 00:25:56.440 align:start position:0%
might be doing interaction with the
 

00:25:56.440 --> 00:25:59.700 align:start position:0%
might be doing interaction with the
window<00:25:56.710><c> manager</c><00:25:57.159><c> and</c><00:25:57.840><c> the</c><00:25:58.840><c> app</c><00:25:58.960><c> kit</c><00:25:59.289><c> will</c><00:25:59.470><c> set</c>

00:25:59.700 --> 00:25:59.710 align:start position:0%
window manager and the app kit will set
 

00:25:59.710 --> 00:26:01.649 align:start position:0%
window manager and the app kit will set
up<00:25:59.830><c> special</c><00:26:00.100><c> state</c><00:26:00.549><c> to</c><00:26:00.970><c> make</c><00:26:01.120><c> sure</c><00:26:01.299><c> that</c><00:26:01.480><c> all</c>

00:26:01.649 --> 00:26:01.659 align:start position:0%
up special state to make sure that all
 

00:26:01.659 --> 00:26:03.120 align:start position:0%
up special state to make sure that all
that's<00:26:01.809><c> interactions</c><00:26:02.530><c> with</c><00:26:02.650><c> the</c><00:26:02.740><c> window</c>

00:26:03.120 --> 00:26:03.130 align:start position:0%
that's interactions with the window
 

00:26:03.130 --> 00:26:04.980 align:start position:0%
that's interactions with the window
manager<00:26:03.309><c> are</c><00:26:03.610><c> thread</c><00:26:03.820><c> safe</c><00:26:04.090><c> now</c><00:26:04.690><c> if</c><00:26:04.840><c> you're</c>

00:26:04.980 --> 00:26:04.990 align:start position:0%
manager are thread safe now if you're
 

00:26:04.990 --> 00:26:07.950 align:start position:0%
manager are thread safe now if you're
writing<00:26:05.500><c> a</c><00:26:05.799><c> quartz</c><00:26:06.220><c> pure</c><00:26:06.940><c> quartz</c><00:26:07.210><c> application</c>

00:26:07.950 --> 00:26:07.960 align:start position:0%
writing a quartz pure quartz application
 

00:26:07.960 --> 00:26:10.710 align:start position:0%
writing a quartz pure quartz application
that<00:26:08.620><c> interaction</c><00:26:09.460><c> is</c><00:26:09.789><c> already</c><00:26:10.179><c> thread</c><00:26:10.510><c> safe</c>

00:26:10.710 --> 00:26:10.720 align:start position:0%
that interaction is already thread safe
 

00:26:10.720 --> 00:26:13.350 align:start position:0%
that interaction is already thread safe
in<00:26:10.960><c> fact</c><00:26:11.200><c> the</c><00:26:11.710><c> way</c><00:26:12.370><c> that</c><00:26:12.400><c> you</c><00:26:12.940><c> can</c><00:26:13.150><c> write</c><00:26:13.299><c> a</c>

00:26:13.350 --> 00:26:13.360 align:start position:0%
in fact the way that you can write a
 

00:26:13.360 --> 00:26:16.230 align:start position:0%
in fact the way that you can write a
quartz<00:26:14.020><c> application</c><00:26:14.730><c> without</c><00:26:15.730><c> using</c><00:26:16.059><c> any</c><00:26:16.179><c> of</c>

00:26:16.230 --> 00:26:16.240 align:start position:0%
quartz application without using any of
 

00:26:16.240 --> 00:26:18.930 align:start position:0%
quartz application without using any of
the<00:26:16.360><c> cocoa</c><00:26:16.690><c> frameworks</c><00:26:17.590><c> is</c><00:26:17.830><c> to</c><00:26:18.460><c> use</c><00:26:18.580><c> one</c>

00:26:18.930 --> 00:26:18.940 align:start position:0%
the cocoa frameworks is to use one
 

00:26:18.940 --> 00:26:21.750 align:start position:0%
the cocoa frameworks is to use one
connection<00:26:19.630><c> to</c><00:26:19.990><c> quartz</c><00:26:20.380><c> per</c><00:26:20.650><c> thread</c><00:26:20.980><c> and</c><00:26:21.250><c> that</c>

00:26:21.750 --> 00:26:21.760 align:start position:0%
connection to quartz per thread and that
 

00:26:21.760 --> 00:26:23.880 align:start position:0%
connection to quartz per thread and that
provides<00:26:22.150><c> all</c><00:26:22.330><c> the</c><00:26:22.360><c> the</c><00:26:23.049><c> synchronization</c><00:26:23.710><c> you</c>

00:26:23.880 --> 00:26:23.890 align:start position:0%
provides all the the synchronization you
 

00:26:23.890 --> 00:26:25.590 align:start position:0%
provides all the the synchronization you
need<00:26:24.100><c> you</c><00:26:24.669><c> still</c><00:26:24.909><c> have</c><00:26:25.059><c> to</c><00:26:25.179><c> protect</c><00:26:25.330><c> your</c>

00:26:25.590 --> 00:26:25.600 align:start position:0%
need you still have to protect your
 

00:26:25.600 --> 00:26:29.190 align:start position:0%
need you still have to protect your
global<00:26:25.990><c> data</c><00:26:26.200><c> if</c><00:26:26.440><c> you</c><00:26:26.590><c> have</c><00:26:27.600><c> multiple</c><00:26:28.600><c> threads</c>

00:26:29.190 --> 00:26:29.200 align:start position:0%
global data if you have multiple threads
 

00:26:29.200 --> 00:26:30.419 align:start position:0%
global data if you have multiple threads
that<00:26:29.350><c> are</c><00:26:29.470><c> running</c><00:26:29.649><c> that</c><00:26:29.830><c> are</c><00:26:29.980><c> all</c><00:26:30.100><c> trying</c><00:26:30.399><c> to</c>

00:26:30.419 --> 00:26:30.429 align:start position:0%
that are running that are all trying to
 

00:26:30.429 --> 00:26:33.030 align:start position:0%
that are running that are all trying to
communicate<00:26:30.909><c> with</c><00:26:31.090><c> the</c><00:26:31.179><c> same</c><00:26:31.360><c> connection</c>

00:26:33.030 --> 00:26:33.040 align:start position:0%
communicate with the same connection
 

00:26:33.040 --> 00:26:34.890 align:start position:0%
communicate with the same connection
you<00:26:33.250><c> need</c><00:26:33.400><c> to</c><00:26:33.520><c> use</c><00:26:33.700><c> the</c><00:26:34.240><c> synchronization</c>

00:26:34.890 --> 00:26:34.900 align:start position:0%
you need to use the synchronization
 

00:26:34.900 --> 00:26:36.720 align:start position:0%
you need to use the synchronization
mechanism<00:26:35.440><c> that</c><00:26:35.500><c> I've</c><00:26:35.620><c> described</c><00:26:36.070><c> to</c><00:26:36.580><c> make</c>

00:26:36.720 --> 00:26:36.730 align:start position:0%
mechanism that I've described to make
 

00:26:36.730 --> 00:26:39.810 align:start position:0%
mechanism that I've described to make
that<00:26:36.910><c> work</c><00:26:37.090><c> but</c><00:26:37.210><c> in</c><00:26:37.360><c> general</c><00:26:38.400><c> the</c><00:26:39.400><c> applicant</c>

00:26:39.810 --> 00:26:39.820 align:start position:0%
that work but in general the applicant
 

00:26:39.820 --> 00:26:41.940 align:start position:0%
that work but in general the applicant
extension<00:26:40.270><c> lets</c><00:26:40.510><c> you</c><00:26:40.690><c> do</c><00:26:41.260><c> all</c><00:26:41.440><c> you</c><00:26:41.560><c> need</c><00:26:41.710><c> to</c><00:26:41.830><c> do</c>

00:26:41.940 --> 00:26:41.950 align:start position:0%
extension lets you do all you need to do
 

00:26:41.950 --> 00:26:44.010 align:start position:0%
extension lets you do all you need to do
for<00:26:42.190><c> our</c><00:26:42.250><c> KOCO</c><00:26:42.670><c> thread</c><00:26:42.970><c> to</c><00:26:43.510><c> let</c><00:26:43.660><c> it</c><00:26:43.780><c> know</c><00:26:43.810><c> that</c>

00:26:44.010 --> 00:26:44.020 align:start position:0%
for our KOCO thread to let it know that
 

00:26:44.020 --> 00:26:46.200 align:start position:0%
for our KOCO thread to let it know that
you're<00:26:44.110><c> going</c><00:26:44.200><c> to</c><00:26:44.290><c> be</c><00:26:44.410><c> doing</c><00:26:44.560><c> drawing</c><00:26:45.210><c> and</c>

00:26:46.200 --> 00:26:46.210 align:start position:0%
you're going to be doing drawing and
 

00:26:46.210 --> 00:26:47.790 align:start position:0%
you're going to be doing drawing and
this<00:26:46.330><c> threads</c><00:26:46.660><c> are</c><00:26:46.810><c> self</c><00:26:47.140><c> aware</c><00:26:47.290><c> meaning</c>

00:26:47.790 --> 00:26:47.800 align:start position:0%
this threads are self aware meaning
 

00:26:47.800 --> 00:26:50.340 align:start position:0%
this threads are self aware meaning
there's<00:26:48.160><c> no</c><00:26:48.250><c> global</c><00:26:48.670><c> notion</c><00:26:49.240><c> of</c><00:26:49.420><c> all</c><00:26:49.840><c> the</c><00:26:50.110><c> NS</c>

00:26:50.340 --> 00:26:50.350 align:start position:0%
there's no global notion of all the NS
 

00:26:50.350 --> 00:26:52.200 align:start position:0%
there's no global notion of all the NS
threads<00:26:50.620><c> on</c><00:26:50.770><c> the</c><00:26:50.860><c> system</c><00:26:51.220><c> or</c><00:26:51.430><c> you're</c><00:26:52.090><c> not</c>

00:26:52.200 --> 00:26:52.210 align:start position:0%
threads on the system or you're not
 

00:26:52.210 --> 00:26:53.790 align:start position:0%
threads on the system or you're not
really<00:26:52.540><c> going</c><00:26:52.630><c> to</c><00:26:52.690><c> be</c><00:26:52.810><c> handing</c><00:26:53.200><c> NS</c><00:26:53.470><c> threads</c>

00:26:53.790 --> 00:26:53.800 align:start position:0%
really going to be handing NS threads
 

00:26:53.800 --> 00:26:57.960 align:start position:0%
really going to be handing NS threads
off<00:26:54.070><c> to</c><00:26:54.960><c> other</c><00:26:55.960><c> objects</c><00:26:56.500><c> in</c><00:26:56.530><c> the</c><00:26:56.650><c> system</c><00:26:56.970><c> all</c>

00:26:57.960 --> 00:26:57.970 align:start position:0%
off to other objects in the system all
 

00:26:57.970 --> 00:27:00.330 align:start position:0%
off to other objects in the system all
these<00:26:58.270><c> api's</c><00:26:58.720><c> I've</c><00:26:58.960><c> described</c><00:26:59.410><c> since</c><00:27:00.130><c> they're</c>

00:27:00.330 --> 00:27:00.340 align:start position:0%
these api's I've described since they're
 

00:27:00.340 --> 00:27:02.940 align:start position:0%
these api's I've described since they're
layered<00:27:00.550><c> on</c><00:27:00.790><c> top</c><00:27:00.820><c> of</c><00:27:01.000><c> POSIX</c><00:27:01.840><c> threads</c><00:27:02.140><c> can</c><00:27:02.740><c> ask</c>

00:27:02.940 --> 00:27:02.950 align:start position:0%
layered on top of POSIX threads can ask
 

00:27:02.950 --> 00:27:04.980 align:start position:0%
layered on top of POSIX threads can ask
for<00:27:03.310><c> their</c><00:27:03.490><c> POSIX</c><00:27:03.970><c> thread</c><00:27:04.270><c> and</c><00:27:04.480><c> then</c><00:27:04.600><c> once</c>

00:27:04.980 --> 00:27:04.990 align:start position:0%
for their POSIX thread and then once
 

00:27:04.990 --> 00:27:06.630 align:start position:0%
for their POSIX thread and then once
they've<00:27:05.230><c> done</c><00:27:05.410><c> that</c><00:27:05.470><c> they</c><00:27:05.650><c> can</c><00:27:06.100><c> perform</c><00:27:06.280><c> any</c>

00:27:06.630 --> 00:27:06.640 align:start position:0%
they've done that they can perform any
 

00:27:06.640 --> 00:27:09.450 align:start position:0%
they've done that they can perform any
of<00:27:06.820><c> the</c><00:27:06.970><c> POSIX</c><00:27:07.360><c> thread</c><00:27:07.570><c> api's</c><00:27:08.010><c> like</c><00:27:09.010><c> changing</c>

00:27:09.450 --> 00:27:09.460 align:start position:0%
of the POSIX thread api's like changing
 

00:27:09.460 --> 00:27:11.580 align:start position:0%
of the POSIX thread api's like changing
their<00:27:09.580><c> priority</c><00:27:10.090><c> or</c><00:27:10.330><c> finding</c><00:27:11.230><c> out</c><00:27:11.320><c> what</c><00:27:11.470><c> the</c>

00:27:11.580 --> 00:27:11.590 align:start position:0%
their priority or finding out what the
 

00:27:11.590 --> 00:27:13.590 align:start position:0%
their priority or finding out what the
stack<00:27:11.800><c> size</c><00:27:12.070><c> is</c><00:27:12.340><c> for</c><00:27:12.640><c> the</c><00:27:12.730><c> thread</c><00:27:12.940><c> but</c><00:27:13.450><c> in</c>

00:27:13.590 --> 00:27:13.600 align:start position:0%
stack size is for the thread but in
 

00:27:13.600 --> 00:27:15.810 align:start position:0%
stack size is for the thread but in
general<00:27:13.990><c> NS</c><00:27:14.560><c> threads</c><00:27:14.860><c> kind</c><00:27:15.280><c> of</c><00:27:15.340><c> stay</c><00:27:15.550><c> in</c><00:27:15.700><c> their</c>

00:27:15.810 --> 00:27:15.820 align:start position:0%
general NS threads kind of stay in their
 

00:27:15.820 --> 00:27:19.380 align:start position:0%
general NS threads kind of stay in their
own<00:27:15.970><c> realm</c><00:27:16.710><c> they</c><00:27:17.710><c> have</c><00:27:17.950><c> a</c><00:27:18.310><c> separate</c><00:27:18.940><c> run</c><00:27:19.150><c> loop</c>

00:27:19.380 --> 00:27:19.390 align:start position:0%
own realm they have a separate run loop
 

00:27:19.390 --> 00:27:21.810 align:start position:0%
own realm they have a separate run loop
so<00:27:19.870><c> usually</c><00:27:20.410><c> when</c><00:27:20.920><c> you're</c><00:27:21.100><c> creating</c><00:27:21.310><c> an</c><00:27:21.550><c> NS</c>

00:27:21.810 --> 00:27:21.820 align:start position:0%
so usually when you're creating an NS
 

00:27:21.820 --> 00:27:24.030 align:start position:0%
so usually when you're creating an NS
thread<00:27:22.180><c> since</c><00:27:22.900><c> you're</c><00:27:23.050><c> already</c><00:27:23.200><c> in</c><00:27:23.410><c> a</c><00:27:23.530><c> GUI</c>

00:27:24.030 --> 00:27:24.040 align:start position:0%
thread since you're already in a GUI
 

00:27:24.040 --> 00:27:25.590 align:start position:0%
thread since you're already in a GUI
application<00:27:24.700><c> if</c><00:27:24.820><c> you're</c><00:27:24.940><c> using</c><00:27:25.090><c> cocoa</c>

00:27:25.590 --> 00:27:25.600 align:start position:0%
application if you're using cocoa
 

00:27:25.600 --> 00:27:27.300 align:start position:0%
application if you're using cocoa
there's<00:27:26.320><c> a</c><00:27:26.440><c> main</c><00:27:26.740><c> run</c><00:27:26.980><c> loop</c><00:27:27.160><c> that's</c>

00:27:27.300 --> 00:27:27.310 align:start position:0%
there's a main run loop that's
 

00:27:27.310 --> 00:27:29.370 align:start position:0%
there's a main run loop that's
associated<00:27:27.610><c> with</c><00:27:28.030><c> the</c><00:27:28.600><c> first</c><00:27:28.630><c> thread</c><00:27:29.200><c> that's</c>

00:27:29.370 --> 00:27:29.380 align:start position:0%
associated with the first thread that's
 

00:27:29.380 --> 00:27:31.650 align:start position:0%
associated with the first thread that's
been<00:27:29.560><c> created</c><00:27:29.740><c> on</c><00:27:30.130><c> behalf</c><00:27:30.430><c> of</c><00:27:30.610><c> the</c><00:27:30.730><c> system</c><00:27:31.090><c> but</c>

00:27:31.650 --> 00:27:31.660 align:start position:0%
been created on behalf of the system but
 

00:27:31.660 --> 00:27:33.510 align:start position:0%
been created on behalf of the system but
new<00:27:31.990><c> threads</c><00:27:32.380><c> that</c><00:27:32.560><c> get</c><00:27:32.710><c> created</c><00:27:32.860><c> are</c><00:27:33.310><c> going</c>

00:27:33.510 --> 00:27:33.520 align:start position:0%
new threads that get created are going
 

00:27:33.520 --> 00:27:36.830 align:start position:0%
new threads that get created are going
to<00:27:33.580><c> have</c><00:27:33.760><c> their</c><00:27:33.910><c> own</c><00:27:33.940><c> run</c><00:27:34.360><c> loop</c><00:27:34.570><c> because</c><00:27:35.290><c> those</c>

00:27:36.830 --> 00:27:36.840 align:start position:0%
to have their own run loop because those
 

00:27:36.840 --> 00:27:38.940 align:start position:0%
to have their own run loop because those
those<00:27:37.840><c> threads</c><00:27:38.200><c> will</c><00:27:38.350><c> probably</c><00:27:38.740><c> have</c><00:27:38.920><c> a</c>

00:27:38.940 --> 00:27:38.950 align:start position:0%
those threads will probably have a
 

00:27:38.950 --> 00:27:40.800 align:start position:0%
those threads will probably have a
different<00:27:39.130><c> signaling</c><00:27:40.090><c> mechanism</c><00:27:40.630><c> and</c>

00:27:40.800 --> 00:27:40.810 align:start position:0%
different signaling mechanism and
 

00:27:40.810 --> 00:27:42.600 align:start position:0%
different signaling mechanism and
different<00:27:41.470><c> events</c><00:27:41.590><c> that</c><00:27:41.890><c> are</c><00:27:42.040><c> occurring</c><00:27:42.160><c> that</c>

00:27:42.600 --> 00:27:42.610 align:start position:0%
different events that are occurring that
 

00:27:42.610 --> 00:27:44.220 align:start position:0%
different events that are occurring that
need<00:27:42.760><c> to</c><00:27:42.910><c> signal</c><00:27:43.300><c> back</c><00:27:43.690><c> and</c><00:27:43.900><c> forth</c><00:27:44.080><c> between</c>

00:27:44.220 --> 00:27:44.230 align:start position:0%
need to signal back and forth between
 

00:27:44.230 --> 00:27:46.920 align:start position:0%
need to signal back and forth between
other<00:27:44.590><c> threads</c><00:27:44.950><c> and</c><00:27:45.220><c> for</c><00:27:46.180><c> instance</c><00:27:46.390><c> the</c><00:27:46.900><c> other</c>

00:27:46.920 --> 00:27:46.930 align:start position:0%
other threads and for instance the other
 

00:27:46.930 --> 00:27:48.990 align:start position:0%
other threads and for instance the other
cocoa<00:27:47.620><c> api's</c><00:27:48.040><c> that</c><00:27:48.250><c> have</c><00:27:48.370><c> to</c><00:27:48.520><c> do</c><00:27:48.640><c> with</c><00:27:48.670><c> run</c>

00:27:48.990 --> 00:27:49.000 align:start position:0%
cocoa api's that have to do with run
 

00:27:49.000 --> 00:27:51.390 align:start position:0%
cocoa api's that have to do with run
loops<00:27:49.210><c> or</c><00:27:49.420><c> timers</c><00:27:49.900><c> and</c><00:27:50.140><c> notifications</c><00:27:51.100><c> and</c>

00:27:51.390 --> 00:27:51.400 align:start position:0%
loops or timers and notifications and
 

00:27:51.400 --> 00:27:53.370 align:start position:0%
loops or timers and notifications and
you<00:27:51.460><c> can</c><00:27:51.970><c> send</c><00:27:52.210><c> those</c><00:27:52.390><c> between</c><00:27:52.690><c> threads</c><00:27:53.140><c> with</c>

00:27:53.370 --> 00:27:53.380 align:start position:0%
you can send those between threads with
 

00:27:53.380 --> 00:27:56.730 align:start position:0%
you can send those between threads with
a<00:27:53.680><c> little</c><00:27:54.640><c> bit</c><00:27:54.730><c> of</c><00:27:54.820><c> synchronization</c><00:27:55.740><c> there's</c>

00:27:56.730 --> 00:27:56.740 align:start position:0%
a little bit of synchronization there's
 

00:27:56.740 --> 00:27:58.890 align:start position:0%
a little bit of synchronization there's
a<00:27:57.130><c> concept</c><00:27:57.580><c> of</c><00:27:57.730><c> an</c><00:27:57.850><c> auto</c><00:27:58.000><c> release</c><00:27:58.360><c> pool</c><00:27:58.630><c> that</c>

00:27:58.890 --> 00:27:58.900 align:start position:0%
a concept of an auto release pool that
 

00:27:58.900 --> 00:28:00.330 align:start position:0%
a concept of an auto release pool that
if<00:27:59.110><c> you</c><00:27:59.440><c> haven't</c><00:27:59.590><c> done</c><00:27:59.770><c> any</c><00:27:59.980><c> cocoa</c>

00:28:00.330 --> 00:28:00.340 align:start position:0%
if you haven't done any cocoa
 

00:28:00.340 --> 00:28:03.840 align:start position:0%
if you haven't done any cocoa
programming<00:28:00.910><c> yet</c><00:28:01.320><c> this</c><00:28:02.320><c> is</c><00:28:02.590><c> a</c><00:28:03.160><c> wrapper</c><00:28:03.820><c> for</c>

00:28:03.840 --> 00:28:03.850 align:start position:0%
programming yet this is a wrapper for
 

00:28:03.850 --> 00:28:06.560 align:start position:0%
programming yet this is a wrapper for
objects<00:28:04.690><c> which</c><00:28:04.840><c> gets</c><00:28:05.110><c> created</c><00:28:05.530><c> and</c><00:28:05.740><c> destroyed</c>

00:28:06.560 --> 00:28:06.570 align:start position:0%
objects which gets created and destroyed
 

00:28:06.570 --> 00:28:10.230 align:start position:0%
objects which gets created and destroyed
kind<00:28:07.570><c> of</c><00:28:07.660><c> on</c><00:28:07.810><c> the</c><00:28:07.960><c> fly</c><00:28:08.170><c> so</c><00:28:08.500><c> you</c><00:28:08.530><c> you</c><00:28:09.070><c> call</c><00:28:09.970><c> a</c>

00:28:10.230 --> 00:28:10.240 align:start position:0%
kind of on the fly so you you call a
 

00:28:10.240 --> 00:28:13.560 align:start position:0%
kind of on the fly so you you call a
method<00:28:10.690><c> it</c><00:28:11.110><c> returns</c><00:28:11.470><c> you</c><00:28:11.650><c> an</c><00:28:11.770><c> object</c><00:28:12.250><c> and</c><00:28:12.570><c> one</c>

00:28:13.560 --> 00:28:13.570 align:start position:0%
method it returns you an object and one
 

00:28:13.570 --> 00:28:16.110 align:start position:0%
method it returns you an object and one
thing<00:28:13.810><c> notion</c><00:28:14.710><c> that</c><00:28:14.800><c> cocoa</c><00:28:15.130><c> tries</c><00:28:15.430><c> to</c><00:28:15.700><c> help</c>

00:28:16.110 --> 00:28:16.120 align:start position:0%
thing notion that cocoa tries to help
 

00:28:16.120 --> 00:28:18.450 align:start position:0%
thing notion that cocoa tries to help
out<00:28:16.270><c> with</c><00:28:16.450><c> is</c><00:28:16.600><c> the</c><00:28:16.720><c> memory</c><00:28:16.840><c> management</c><00:28:17.380><c> so</c><00:28:17.980><c> if</c>

00:28:18.450 --> 00:28:18.460 align:start position:0%
out with is the memory management so if
 

00:28:18.460 --> 00:28:20.550 align:start position:0%
out with is the memory management so if
you<00:28:19.000><c> don't</c><00:28:19.210><c> actually</c><00:28:19.360><c> explicitly</c><00:28:20.140><c> create</c><00:28:20.470><c> an</c>

00:28:20.550 --> 00:28:20.560 align:start position:0%
you don't actually explicitly create an
 

00:28:20.560 --> 00:28:22.500 align:start position:0%
you don't actually explicitly create an
object<00:28:20.740><c> it</c><00:28:21.040><c> just</c><00:28:21.190><c> comes</c><00:28:21.400><c> back</c><00:28:21.670><c> from</c><00:28:21.880><c> a</c><00:28:22.030><c> call</c><00:28:22.240><c> it</c>

00:28:22.500 --> 00:28:22.510 align:start position:0%
object it just comes back from a call it
 

00:28:22.510 --> 00:28:25.410 align:start position:0%
object it just comes back from a call it
gets<00:28:22.960><c> what's</c><00:28:23.170><c> called</c><00:28:23.350><c> auto</c><00:28:23.560><c> released</c><00:28:23.950><c> and</c><00:28:24.420><c> the</c>

00:28:25.410 --> 00:28:25.420 align:start position:0%
gets what's called auto released and the
 

00:28:25.420 --> 00:28:27.060 align:start position:0%
gets what's called auto released and the
way<00:28:25.570><c> the</c><00:28:25.720><c> auto</c><00:28:25.840><c> release</c><00:28:26.140><c> pull</c><00:28:26.380><c> works</c><00:28:26.590><c> is</c><00:28:26.770><c> on</c><00:28:26.830><c> a</c>

00:28:27.060 --> 00:28:27.070 align:start position:0%
way the auto release pull works is on a
 

00:28:27.070 --> 00:28:29.280 align:start position:0%
way the auto release pull works is on a
per<00:28:27.340><c> thread</c><00:28:27.640><c> basis</c><00:28:28.120><c> so</c><00:28:28.330><c> the</c><00:28:28.480><c> the</c><00:28:28.810><c> main</c><00:28:29.020><c> run</c>

00:28:29.280 --> 00:28:29.290 align:start position:0%
per thread basis so the the main run
 

00:28:29.290 --> 00:28:31.170 align:start position:0%
per thread basis so the the main run
loop<00:28:29.500><c> has</c><00:28:29.860><c> an</c><00:28:30.070><c> auto</c><00:28:30.190><c> release</c><00:28:30.520><c> pool</c><00:28:30.730><c> every</c><00:28:31.000><c> time</c>

00:28:31.170 --> 00:28:31.180 align:start position:0%
loop has an auto release pool every time
 

00:28:31.180 --> 00:28:33.270 align:start position:0%
loop has an auto release pool every time
through<00:28:31.420><c> the</c><00:28:31.630><c> event</c><00:28:31.930><c> loop</c><00:28:32.110><c> it</c><00:28:32.560><c> releases</c><00:28:33.010><c> all</c>

00:28:33.270 --> 00:28:33.280 align:start position:0%
through the event loop it releases all
 

00:28:33.280 --> 00:28:35.150 align:start position:0%
through the event loop it releases all
these<00:28:33.460><c> objects</c><00:28:34.090><c> that</c><00:28:34.270><c> may</c><00:28:34.390><c> have</c><00:28:34.600><c> been</c><00:28:34.810><c> created</c>

00:28:35.150 --> 00:28:35.160 align:start position:0%
these objects that may have been created
 

00:28:35.160 --> 00:28:38.880 align:start position:0%
these objects that may have been created
on<00:28:36.160><c> behalf</c><00:28:36.520><c> of</c><00:28:36.760><c> another</c><00:28:37.150><c> method</c><00:28:37.600><c> call</c><00:28:37.960><c> and</c><00:28:38.260><c> in</c>

00:28:38.880 --> 00:28:38.890 align:start position:0%
on behalf of another method call and in
 

00:28:38.890 --> 00:28:41.010 align:start position:0%
on behalf of another method call and in
a<00:28:38.980><c> separate</c><00:28:39.370><c> thread</c><00:28:39.610><c> you</c><00:28:40.300><c> need</c><00:28:40.540><c> to</c><00:28:40.720><c> make</c><00:28:40.870><c> sure</c>

00:28:41.010 --> 00:28:41.020 align:start position:0%
a separate thread you need to make sure
 

00:28:41.020 --> 00:28:42.630 align:start position:0%
a separate thread you need to make sure
that<00:28:41.230><c> you're</c><00:28:41.650><c> maintaining</c><00:28:42.070><c> the</c><00:28:42.520><c> out</c><00:28:42.610><c> a</c>

00:28:42.630 --> 00:28:42.640 align:start position:0%
that you're maintaining the out a
 

00:28:42.640 --> 00:28:45.350 align:start position:0%
that you're maintaining the out a
release<00:28:42.940><c> pool</c><00:28:43.210><c> as</c><00:28:43.390><c> well</c><00:28:43.420><c> because</c><00:28:44.170><c> all</c><00:28:44.530><c> the</c>

00:28:45.350 --> 00:28:45.360 align:start position:0%
release pool as well because all the
 

00:28:45.360 --> 00:28:46.830 align:start position:0%
release pool as well because all the
messages<00:28:46.360><c> that</c><00:28:46.420><c> get</c>

00:28:46.830 --> 00:28:46.840 align:start position:0%
messages that get
 

00:28:46.840 --> 00:28:49.230 align:start position:0%
messages that get
on<00:28:47.110><c> that</c><00:28:47.230><c> separate</c><00:28:47.590><c> thread</c><00:28:47.830><c> we'll</c><00:28:48.460><c> need</c><00:28:48.910><c> to</c><00:28:49.120><c> be</c>

00:28:49.230 --> 00:28:49.240 align:start position:0%
on that separate thread we'll need to be
 

00:28:49.240 --> 00:28:50.760 align:start position:0%
on that separate thread we'll need to be
Auto<00:28:49.480><c> released</c><00:28:49.870><c> if</c><00:28:50.140><c> they're</c><00:28:50.410><c> returning</c>

00:28:50.760 --> 00:28:50.770 align:start position:0%
Auto released if they're returning
 

00:28:50.770 --> 00:28:55.290 align:start position:0%
Auto released if they're returning
objects<00:28:51.280><c> eventually</c><00:28:53.520><c> the</c><00:28:54.520><c> documentation</c><00:28:55.180><c> for</c>

00:28:55.290 --> 00:28:55.300 align:start position:0%
objects eventually the documentation for
 

00:28:55.300 --> 00:28:57.930 align:start position:0%
objects eventually the documentation for
NS<00:28:55.600><c> thread</c><00:28:55.870><c> is</c><00:28:56.200><c> also</c><00:28:57.130><c> on</c><00:28:57.250><c> developer.apple.com</c>

00:28:57.930 --> 00:28:57.940 align:start position:0%
NS thread is also on developer.apple.com
 

00:28:57.940 --> 00:29:02.310 align:start position:0%
NS thread is also on developer.apple.com
in<00:28:58.570><c> a</c><00:28:58.630><c> very</c><00:28:58.810><c> long</c><00:28:59.050><c> URL</c><00:29:00.720><c> actually</c><00:29:01.720><c> the</c><00:29:01.780><c> cocoa</c>

00:29:02.310 --> 00:29:02.320 align:start position:0%
in a very long URL actually the cocoa
 

00:29:02.320 --> 00:29:05.450 align:start position:0%
in a very long URL actually the cocoa
documentation<00:29:02.920><c> is</c><00:29:03.040><c> very</c><00:29:03.760><c> well</c><00:29:03.970><c> done</c><00:29:04.180><c> and</c>

00:29:05.450 --> 00:29:05.460 align:start position:0%
documentation is very well done and
 

00:29:05.460 --> 00:29:07.950 align:start position:0%
documentation is very well done and
there's<00:29:06.460><c> I</c><00:29:06.790><c> believe</c><00:29:06.850><c> in</c><00:29:07.210><c> O'Reilly</c><00:29:07.660><c> book</c><00:29:07.840><c> out</c>

00:29:07.950 --> 00:29:07.960 align:start position:0%
there's I believe in O'Reilly book out
 

00:29:07.960 --> 00:29:11.160 align:start position:0%
there's I believe in O'Reilly book out
that<00:29:07.990><c> you</c><00:29:08.230><c> can</c><00:29:08.380><c> go</c><00:29:08.500><c> get</c><00:29:08.680><c> now</c><00:29:09.420><c> for</c><00:29:10.420><c> future</c>

00:29:11.160 --> 00:29:11.170 align:start position:0%
that you can go get now for future
 

00:29:11.170 --> 00:29:14.820 align:start position:0%
that you can go get now for future
developments<00:29:11.770><c> basically</c><00:29:12.840><c> if</c><00:29:13.840><c> you</c><00:29:14.560><c> follow</c>

00:29:14.820 --> 00:29:14.830 align:start position:0%
developments basically if you follow
 

00:29:14.830 --> 00:29:17.400 align:start position:0%
developments basically if you follow
Darwin<00:29:15.400><c> since</c><00:29:15.940><c> I'm</c><00:29:16.180><c> involved</c><00:29:16.420><c> in</c><00:29:16.690><c> the</c><00:29:16.810><c> crow</c><00:29:17.230><c> us</c>

00:29:17.400 --> 00:29:17.410 align:start position:0%
Darwin since I'm involved in the crow us
 

00:29:17.410 --> 00:29:21.540 align:start position:0%
Darwin since I'm involved in the crow us
group<00:29:17.680><c> we</c><00:29:18.430><c> basically</c><00:29:19.530><c> get</c><00:29:20.530><c> we</c><00:29:21.370><c> have</c><00:29:21.460><c> the</c>

00:29:21.540 --> 00:29:21.550 align:start position:0%
group we basically get we have the
 

00:29:21.550 --> 00:29:23.370 align:start position:0%
group we basically get we have the
ability<00:29:21.970><c> to</c><00:29:22.000><c> put</c><00:29:22.630><c> all</c><00:29:22.780><c> of</c><00:29:22.900><c> our</c><00:29:23.050><c> work</c><00:29:23.230><c> that</c>

00:29:23.370 --> 00:29:23.380 align:start position:0%
ability to put all of our work that
 

00:29:23.380 --> 00:29:25.770 align:start position:0%
ability to put all of our work that
we're<00:29:23.500><c> working</c><00:29:23.590><c> on</c><00:29:23.830><c> daily</c><00:29:24.310><c> in</c><00:29:24.520><c> the</c><00:29:24.880><c> public</c><00:29:25.240><c> CVS</c>

00:29:25.770 --> 00:29:25.780 align:start position:0%
we're working on daily in the public CVS
 

00:29:25.780 --> 00:29:28.050 align:start position:0%
we're working on daily in the public CVS
repository<00:29:25.960><c> so</c><00:29:26.950><c> if</c><00:29:27.280><c> you</c><00:29:27.400><c> want</c><00:29:27.580><c> to</c><00:29:27.670><c> just</c><00:29:27.880><c> go</c><00:29:28.030><c> to</c>

00:29:28.050 --> 00:29:28.060 align:start position:0%
repository so if you want to just go to
 

00:29:28.060 --> 00:29:31.560 align:start position:0%
repository so if you want to just go to
the<00:29:28.830><c> Darwin</c><00:29:29.830><c> web</c><00:29:30.070><c> pages</c><00:29:30.340><c> that</c><00:29:30.730><c> will</c><00:29:31.030><c> let</c><00:29:31.450><c> you</c>

00:29:31.560 --> 00:29:31.570 align:start position:0%
the Darwin web pages that will let you
 

00:29:31.570 --> 00:29:33.030 align:start position:0%
the Darwin web pages that will let you
know<00:29:31.690><c> how</c><00:29:31.870><c> to</c><00:29:31.900><c> go</c><00:29:32.080><c> ahead</c><00:29:32.320><c> and</c><00:29:32.470><c> check</c><00:29:32.620><c> out</c><00:29:32.770><c> any</c>

00:29:33.030 --> 00:29:33.040 align:start position:0%
know how to go ahead and check out any
 

00:29:33.040 --> 00:29:36.420 align:start position:0%
know how to go ahead and check out any
of<00:29:33.130><c> the</c><00:29:33.310><c> CVS</c><00:29:33.810><c> repositories</c><00:29:34.810><c> for</c><00:29:35.050><c> all</c><00:29:35.170><c> the</c><00:29:35.430><c> the</c>

00:29:36.420 --> 00:29:36.430 align:start position:0%
of the CVS repositories for all the the
 

00:29:36.430 --> 00:29:37.950 align:start position:0%
of the CVS repositories for all the the
work<00:29:36.610><c> that</c><00:29:36.790><c> we're</c><00:29:36.910><c> doing</c><00:29:36.940><c> specifically</c><00:29:37.780><c> the</c>

00:29:37.950 --> 00:29:37.960 align:start position:0%
work that we're doing specifically the
 

00:29:37.960 --> 00:29:40.470 align:start position:0%
work that we're doing specifically the
Lib<00:29:38.140><c> C</c><00:29:38.410><c> project</c><00:29:38.890><c> is</c><00:29:39.010><c> where</c><00:29:39.160><c> the</c><00:29:39.280><c> pthreads</c><00:29:39.730><c> code</c>

00:29:40.470 --> 00:29:40.480 align:start position:0%
Lib C project is where the pthreads code
 

00:29:40.480 --> 00:29:42.660 align:start position:0%
Lib C project is where the pthreads code
lives<00:29:40.840><c> and</c><00:29:41.260><c> the</c><00:29:41.440><c> xnu</c><00:29:41.740><c> project</c><00:29:42.250><c> is</c><00:29:42.340><c> where</c><00:29:42.520><c> the</c>

00:29:42.660 --> 00:29:42.670 align:start position:0%
lives and the xnu project is where the
 

00:29:42.670 --> 00:29:44.930 align:start position:0%
lives and the xnu project is where the
mach<00:29:42.880><c> kernel</c><00:29:43.450><c> is</c><00:29:43.780><c> and</c><00:29:44.140><c> where</c><00:29:44.440><c> the</c><00:29:44.650><c> mock</c>

00:29:44.930 --> 00:29:44.940 align:start position:0%
mach kernel is and where the mock
 

00:29:44.940 --> 00:29:48.900 align:start position:0%
mach kernel is and where the mock
threading<00:29:45.940><c> model</c><00:29:46.090><c> lives</c><00:29:47.580><c> some</c><00:29:48.580><c> of</c><00:29:48.670><c> the</c><00:29:48.730><c> things</c>

00:29:48.900 --> 00:29:48.910 align:start position:0%
threading model lives some of the things
 

00:29:48.910 --> 00:29:51.630 align:start position:0%
threading model lives some of the things
we're<00:29:49.090><c> working</c><00:29:49.420><c> on</c><00:29:49.680><c> and</c><00:29:50.680><c> we're</c><00:29:51.280><c> also</c><00:29:51.400><c> getting</c>

00:29:51.630 --> 00:29:51.640 align:start position:0%
we're working on and we're also getting
 

00:29:51.640 --> 00:29:53.700 align:start position:0%
we're working on and we're also getting
help<00:29:52.060><c> actually</c><00:29:52.810><c> the</c><00:29:52.870><c> Darwin</c><00:29:53.200><c> community</c><00:29:53.650><c> is</c>

00:29:53.700 --> 00:29:53.710 align:start position:0%
help actually the Darwin community is
 

00:29:53.710 --> 00:29:55.740 align:start position:0%
help actually the Darwin community is
very<00:29:53.830><c> interested</c><00:29:54.340><c> in</c><00:29:54.520><c> our</c><00:29:54.750><c> threading</c>

00:29:55.740 --> 00:29:55.750 align:start position:0%
very interested in our threading
 

00:29:55.750 --> 00:29:59.190 align:start position:0%
very interested in our threading
implementation<00:29:57.540><c> priority</c><00:29:58.540><c> inheritance</c><00:29:58.660><c> is</c>

00:29:59.190 --> 00:29:59.200 align:start position:0%
implementation priority inheritance is
 

00:29:59.200 --> 00:30:01.620 align:start position:0%
implementation priority inheritance is
an<00:29:59.350><c> issue</c><00:29:59.470><c> where</c><00:29:59.920><c> if</c><00:30:00.430><c> you</c><00:30:00.940><c> have</c><00:30:01.120><c> multiple</c>

00:30:01.620 --> 00:30:01.630 align:start position:0%
an issue where if you have multiple
 

00:30:01.630 --> 00:30:04.560 align:start position:0%
an issue where if you have multiple
threads<00:30:01.810><c> and</c><00:30:02.430><c> you're</c><00:30:03.430><c> finding</c><00:30:04.180><c> your</c><00:30:04.360><c> lock</c>

00:30:04.560 --> 00:30:04.570 align:start position:0%
threads and you're finding your lock
 

00:30:04.570 --> 00:30:06.840 align:start position:0%
threads and you're finding your lock
contention<00:30:05.100><c> becomes</c><00:30:06.100><c> a</c><00:30:06.220><c> problem</c><00:30:06.430><c> we're</c><00:30:06.820><c> a</c>

00:30:06.840 --> 00:30:06.850 align:start position:0%
contention becomes a problem we're a
 

00:30:06.850 --> 00:30:09.150 align:start position:0%
contention becomes a problem we're a
higher<00:30:07.570><c> priority</c><00:30:08.260><c> thread</c><00:30:08.710><c> is</c><00:30:08.860><c> blocked</c>

00:30:09.150 --> 00:30:09.160 align:start position:0%
higher priority thread is blocked
 

00:30:09.160 --> 00:30:11.130 align:start position:0%
higher priority thread is blocked
waiting<00:30:09.340><c> for</c><00:30:09.640><c> a</c><00:30:09.670><c> lower</c><00:30:09.940><c> priority</c><00:30:10.210><c> thread</c><00:30:10.630><c> to</c>

00:30:11.130 --> 00:30:11.140 align:start position:0%
waiting for a lower priority thread to
 

00:30:11.140 --> 00:30:14.430 align:start position:0%
waiting for a lower priority thread to
run<00:30:11.760><c> there</c><00:30:12.760><c> are</c><00:30:12.850><c> some</c><00:30:13.060><c> solutions</c><00:30:13.270><c> that</c><00:30:13.660><c> you</c>

00:30:14.430 --> 00:30:14.440 align:start position:0%
run there are some solutions that you
 

00:30:14.440 --> 00:30:16.320 align:start position:0%
run there are some solutions that you
can<00:30:14.620><c> use</c><00:30:14.860><c> in</c><00:30:15.100><c> in</c><00:30:15.370><c> your</c><00:30:15.610><c> application</c><00:30:16.090><c> to</c><00:30:16.120><c> work</c>

00:30:16.320 --> 00:30:16.330 align:start position:0%
can use in in your application to work
 

00:30:16.330 --> 00:30:18.450 align:start position:0%
can use in in your application to work
around<00:30:16.540><c> this</c><00:30:16.900><c> problem</c><00:30:16.990><c> but</c><00:30:17.560><c> in</c><00:30:17.740><c> general</c><00:30:18.310><c> the</c>

00:30:18.450 --> 00:30:18.460 align:start position:0%
around this problem but in general the
 

00:30:18.460 --> 00:30:20.490 align:start position:0%
around this problem but in general the
system<00:30:18.820><c> should</c><00:30:19.000><c> help</c><00:30:19.240><c> out</c><00:30:19.420><c> by</c><00:30:19.660><c> temporarily</c>

00:30:20.490 --> 00:30:20.500 align:start position:0%
system should help out by temporarily
 

00:30:20.500 --> 00:30:23.700 align:start position:0%
system should help out by temporarily
raising<00:30:21.070><c> the</c><00:30:21.160><c> priority</c><00:30:21.640><c> of</c><00:30:21.930><c> the</c><00:30:22.930><c> thread</c><00:30:23.560><c> that</c>

00:30:23.700 --> 00:30:23.710 align:start position:0%
raising the priority of the thread that
 

00:30:23.710 --> 00:30:25.200 align:start position:0%
raising the priority of the thread that
needs<00:30:23.950><c> to</c><00:30:24.160><c> run</c><00:30:24.340><c> for</c><00:30:24.610><c> the</c><00:30:24.700><c> higher</c><00:30:24.880><c> priority</c>

00:30:25.200 --> 00:30:25.210 align:start position:0%
needs to run for the higher priority
 

00:30:25.210 --> 00:30:29.400 align:start position:0%
needs to run for the higher priority
thread<00:30:25.630><c> to</c><00:30:26.080><c> continue</c><00:30:26.590><c> so</c><00:30:27.600><c> that</c><00:30:28.600><c> concept</c>

00:30:29.400 --> 00:30:29.410 align:start position:0%
thread to continue so that concept
 

00:30:29.410 --> 00:30:32.010 align:start position:0%
thread to continue so that concept
hasn't<00:30:29.830><c> been</c><00:30:29.950><c> implemented</c><00:30:30.250><c> yet</c><00:30:30.870><c> but</c><00:30:31.870><c> we're</c>

00:30:32.010 --> 00:30:32.020 align:start position:0%
hasn't been implemented yet but we're
 

00:30:32.020 --> 00:30:34.100 align:start position:0%
hasn't been implemented yet but we're
working<00:30:32.170><c> on</c><00:30:32.380><c> that</c><00:30:32.440><c> the</c><00:30:33.100><c> general</c><00:30:33.490><c> API</c>

00:30:34.100 --> 00:30:34.110 align:start position:0%
working on that the general API
 

00:30:34.110 --> 00:30:38.250 align:start position:0%
working on that the general API
expansion<00:30:35.110><c> issues</c><00:30:35.530><c> of</c><00:30:36.450><c> the</c><00:30:37.450><c> P</c><00:30:37.660><c> thread</c><00:30:37.930><c> spec</c>

00:30:38.250 --> 00:30:38.260 align:start position:0%
expansion issues of the P thread spec
 

00:30:38.260 --> 00:30:40.470 align:start position:0%
expansion issues of the P thread spec
that<00:30:38.290><c> we've</c><00:30:38.590><c> provided</c><00:30:39.060><c> we've</c><00:30:40.060><c> gotten</c><00:30:40.300><c> a</c><00:30:40.360><c> lot</c>

00:30:40.470 --> 00:30:40.480 align:start position:0%
that we've provided we've gotten a lot
 

00:30:40.480 --> 00:30:43.260 align:start position:0%
that we've provided we've gotten a lot
of<00:30:40.540><c> requests</c><00:30:41.140><c> for</c><00:30:41.820><c> specific</c><00:30:42.820><c> functionality</c>

00:30:43.260 --> 00:30:43.270 align:start position:0%
of requests for specific functionality
 

00:30:43.270 --> 00:30:44.970 align:start position:0%
of requests for specific functionality
that's<00:30:43.630><c> missing</c><00:30:43.990><c> we</c><00:30:44.170><c> know</c><00:30:44.320><c> about</c><00:30:44.590><c> that</c><00:30:44.770><c> and</c>

00:30:44.970 --> 00:30:44.980 align:start position:0%
that's missing we know about that and
 

00:30:44.980 --> 00:30:46.430 align:start position:0%
that's missing we know about that and
and<00:30:45.250><c> we're</c><00:30:45.490><c> working</c><00:30:45.610><c> on</c><00:30:45.850><c> it</c>

00:30:46.430 --> 00:30:46.440 align:start position:0%
and we're working on it
 

00:30:46.440 --> 00:30:48.900 align:start position:0%
and we're working on it
the<00:30:47.440><c> other</c><00:30:47.590><c> thing</c><00:30:47.860><c> that</c><00:30:47.890><c> we've</c><00:30:48.310><c> been</c><00:30:48.340><c> focusing</c>

00:30:48.900 --> 00:30:48.910 align:start position:0%
the other thing that we've been focusing
 

00:30:48.910 --> 00:30:51.990 align:start position:0%
the other thing that we've been focusing
on<00:30:49.000><c> is</c><00:30:49.060><c> performance</c><00:30:49.750><c> like</c><00:30:50.410><c> I</c><00:30:50.530><c> said</c><00:30:50.800><c> in</c><00:30:51.040><c> the</c>

00:30:51.990 --> 00:30:52.000 align:start position:0%
on is performance like I said in the
 

00:30:52.000 --> 00:30:54.000 align:start position:0%
on is performance like I said in the
first<00:30:52.240><c> couple</c><00:30:52.420><c> slides</c><00:30:52.810><c> when</c><00:30:53.590><c> you're</c><00:30:53.710><c> deciding</c>

00:30:54.000 --> 00:30:54.010 align:start position:0%
first couple slides when you're deciding
 

00:30:54.010 --> 00:30:56.040 align:start position:0%
first couple slides when you're deciding
whether<00:30:54.310><c> you</c><00:30:54.550><c> should</c><00:30:54.730><c> use</c><00:30:54.940><c> multiple</c><00:30:55.840><c> threads</c>

00:30:56.040 --> 00:30:56.050 align:start position:0%
whether you should use multiple threads
 

00:30:56.050 --> 00:30:58.260 align:start position:0%
whether you should use multiple threads
in<00:30:56.170><c> your</c><00:30:56.290><c> application</c><00:30:56.830><c> or</c><00:30:57.130><c> how</c><00:30:57.970><c> you</c><00:30:58.030><c> should</c>

00:30:58.260 --> 00:30:58.270 align:start position:0%
in your application or how you should
 

00:30:58.270 --> 00:30:59.970 align:start position:0%
in your application or how you should
use<00:30:58.480><c> them</c><00:30:58.930><c> we</c><00:30:59.410><c> don't</c><00:30:59.530><c> want</c><00:30:59.740><c> to</c><00:30:59.800><c> be</c><00:30:59.890><c> an</c>

00:30:59.970 --> 00:30:59.980 align:start position:0%
use them we don't want to be an
 

00:30:59.980 --> 00:31:00.480 align:start position:0%
use them we don't want to be an
impediment

00:31:00.480 --> 00:31:00.490 align:start position:0%
impediment
 

00:31:00.490 --> 00:31:02.700 align:start position:0%
impediment
there<00:31:00.640><c> we</c><00:31:00.790><c> don't</c><00:31:00.880><c> want</c><00:31:01.090><c> the</c><00:31:01.600><c> choice</c><00:31:02.170><c> to</c><00:31:02.440><c> use</c>

00:31:02.700 --> 00:31:02.710 align:start position:0%
there we don't want the choice to use
 

00:31:02.710 --> 00:31:04.530 align:start position:0%
there we don't want the choice to use
multiple<00:31:03.160><c> more</c><00:31:03.790><c> than</c><00:31:03.940><c> one</c><00:31:04.090><c> thread</c><00:31:04.240><c> in</c><00:31:04.420><c> your</c>

00:31:04.530 --> 00:31:04.540 align:start position:0%
multiple more than one thread in your
 

00:31:04.540 --> 00:31:07.470 align:start position:0%
multiple more than one thread in your
application<00:31:05.080><c> to</c><00:31:05.530><c> be</c><00:31:06.030><c> have</c><00:31:07.030><c> to</c><00:31:07.179><c> be</c><00:31:07.300><c> made</c>

00:31:07.470 --> 00:31:07.480 align:start position:0%
application to be have to be made
 

00:31:07.480 --> 00:31:08.970 align:start position:0%
application to be have to be made
because<00:31:07.840><c> there's</c><00:31:07.990><c> a</c><00:31:08.080><c> performance</c><00:31:08.530><c> issue</c><00:31:08.650><c> in</c>

00:31:08.970 --> 00:31:08.980 align:start position:0%
because there's a performance issue in
 

00:31:08.980 --> 00:31:12.900 align:start position:0%
because there's a performance issue in
general<00:31:09.910><c> you</c><00:31:10.600><c> should</c><00:31:11.130><c> use</c><00:31:12.130><c> multiple</c><00:31:12.640><c> threads</c>

00:31:12.900 --> 00:31:12.910 align:start position:0%
general you should use multiple threads
 

00:31:12.910 --> 00:31:14.880 align:start position:0%
general you should use multiple threads
if<00:31:13.120><c> your</c><00:31:13.360><c> application</c><00:31:13.870><c> has</c><00:31:13.900><c> a</c><00:31:14.110><c> data</c><00:31:14.620><c> model</c>

00:31:14.880 --> 00:31:14.890 align:start position:0%
if your application has a data model
 

00:31:14.890 --> 00:31:16.830 align:start position:0%
if your application has a data model
that<00:31:15.190><c> works</c><00:31:15.910><c> well</c><00:31:16.179><c> with</c><00:31:16.210><c> that</c><00:31:16.570><c> if</c><00:31:16.690><c> you</c><00:31:16.809><c> have</c>

00:31:16.830 --> 00:31:16.840 align:start position:0%
that works well with that if you have
 

00:31:16.840 --> 00:31:19.470 align:start position:0%
that works well with that if you have
lots<00:31:17.470><c> of</c><00:31:17.650><c> data</c><00:31:17.860><c> that</c><00:31:18.070><c> can</c><00:31:18.250><c> be</c><00:31:18.370><c> parallelized</c><00:31:19.030><c> in</c>

00:31:19.470 --> 00:31:19.480 align:start position:0%
lots of data that can be parallelized in
 

00:31:19.480 --> 00:31:21.840 align:start position:0%
lots of data that can be parallelized in
its<00:31:19.840><c> functionality</c><00:31:20.710><c> where</c><00:31:20.980><c> you're</c><00:31:21.400><c> splitting</c>

00:31:21.840 --> 00:31:21.850 align:start position:0%
its functionality where you're splitting
 

00:31:21.850 --> 00:31:24.600 align:start position:0%
its functionality where you're splitting
up<00:31:21.970><c> chunks</c><00:31:22.450><c> of</c><00:31:22.570><c> data</c><00:31:22.690><c> in</c><00:31:23.020><c> a</c><00:31:23.610><c> graphical</c>

00:31:24.600 --> 00:31:24.610 align:start position:0%
up chunks of data in a graphical
 

00:31:24.610 --> 00:31:26.580 align:start position:0%
up chunks of data in a graphical
application<00:31:25.120><c> that's</c><00:31:25.240><c> doing</c><00:31:25.570><c> tiling</c><00:31:26.080><c> or</c><00:31:26.290><c> the</c>

00:31:26.580 --> 00:31:26.590 align:start position:0%
application that's doing tiling or the
 

00:31:26.590 --> 00:31:28.830 align:start position:0%
application that's doing tiling or the
the<00:31:27.130><c> best</c><00:31:27.340><c> example</c><00:31:27.760><c> we've</c><00:31:27.910><c> used</c><00:31:27.940><c> is</c><00:31:28.330><c> photoshop</c>

00:31:28.830 --> 00:31:28.840 align:start position:0%
the best example we've used is photoshop
 

00:31:28.840 --> 00:31:32.070 align:start position:0%
the best example we've used is photoshop
a<00:31:28.870><c> lot</c><00:31:29.170><c> for</c><00:31:30.010><c> some</c><00:31:30.190><c> of</c><00:31:30.309><c> its</c><00:31:30.460><c> filters</c><00:31:31.080><c> those</c>

00:31:32.070 --> 00:31:32.080 align:start position:0%
a lot for some of its filters those
 

00:31:32.080 --> 00:31:33.600 align:start position:0%
a lot for some of its filters those
things<00:31:32.350><c> lend</c><00:31:32.740><c> themselves</c><00:31:33.100><c> very</c><00:31:33.190><c> well</c><00:31:33.429><c> to</c>

00:31:33.600 --> 00:31:33.610 align:start position:0%
things lend themselves very well to
 

00:31:33.610 --> 00:31:37.080 align:start position:0%
things lend themselves very well to
multi-threading<00:31:34.450><c> and</c><00:31:34.800><c> we</c><00:31:35.800><c> don't</c><00:31:35.980><c> want</c><00:31:36.190><c> you</c><00:31:36.940><c> as</c>

00:31:37.080 --> 00:31:37.090 align:start position:0%
multi-threading and we don't want you as
 

00:31:37.090 --> 00:31:38.220 align:start position:0%
multi-threading and we don't want you as
a<00:31:37.120><c> developer</c><00:31:37.630><c> to</c><00:31:37.660><c> have</c><00:31:37.809><c> to</c><00:31:37.960><c> worry</c><00:31:38.110><c> about</c>

00:31:38.220 --> 00:31:38.230 align:start position:0%
a developer to have to worry about
 

00:31:38.230 --> 00:31:39.570 align:start position:0%
a developer to have to worry about
whether<00:31:38.470><c> you're</c><00:31:38.740><c> even</c><00:31:38.980><c> on</c><00:31:39.070><c> a</c><00:31:39.100><c> multiprocessor</c>

00:31:39.570 --> 00:31:39.580 align:start position:0%
whether you're even on a multiprocessor
 

00:31:39.580 --> 00:31:42.750 align:start position:0%
whether you're even on a multiprocessor
system<00:31:40.300><c> in</c><00:31:40.450><c> fact</c><00:31:40.900><c> if</c><00:31:41.320><c> your</c><00:31:41.740><c> application</c><00:31:42.670><c> is</c>

00:31:42.750 --> 00:31:42.760 align:start position:0%
system in fact if your application is
 

00:31:42.760 --> 00:31:44.580 align:start position:0%
system in fact if your application is
written<00:31:43.030><c> properly</c><00:31:43.450><c> you</c><00:31:44.260><c> should</c><00:31:44.440><c> just</c>

00:31:44.580 --> 00:31:44.590 align:start position:0%
written properly you should just
 

00:31:44.590 --> 00:31:46.290 align:start position:0%
written properly you should just
automatically<00:31:45.280><c> take</c><00:31:45.520><c> advantage</c><00:31:45.940><c> of</c><00:31:46.120><c> that</c>

00:31:46.290 --> 00:31:46.300 align:start position:0%
automatically take advantage of that
 

00:31:46.300 --> 00:31:48.299 align:start position:0%
automatically take advantage of that
second<00:31:46.720><c> processor</c><00:31:47.170><c> and</c><00:31:47.440><c> your</c><00:31:47.770><c> customers</c><00:31:48.280><c> will</c>

00:31:48.299 --> 00:31:48.309 align:start position:0%
second processor and your customers will
 

00:31:48.309 --> 00:31:50.549 align:start position:0%
second processor and your customers will
be<00:31:48.520><c> happy</c><00:31:48.820><c> because</c><00:31:49.000><c> they</c><00:31:49.360><c> paid</c><00:31:49.990><c> the</c><00:31:50.140><c> money</c><00:31:50.290><c> for</c>

00:31:50.549 --> 00:31:50.559 align:start position:0%
be happy because they paid the money for
 

00:31:50.559 --> 00:31:52.770 align:start position:0%
be happy because they paid the money for
the<00:31:51.150><c> multiprocessor</c><00:31:52.150><c> box</c><00:31:52.450><c> and</c><00:31:52.690><c> they're</c>

00:31:52.770 --> 00:31:52.780 align:start position:0%
the multiprocessor box and they're
 

00:31:52.780 --> 00:31:53.970 align:start position:0%
the multiprocessor box and they're
actually<00:31:52.929><c> getting</c><00:31:53.350><c> the</c><00:31:53.470><c> performance</c><00:31:53.920><c> that</c>

00:31:53.970 --> 00:31:53.980 align:start position:0%
actually getting the performance that
 

00:31:53.980 --> 00:31:57.299 align:start position:0%
actually getting the performance that
that<00:31:54.429><c> they</c><00:31:54.550><c> would</c><00:31:54.730><c> expect</c><00:31:55.710><c> we're</c><00:31:56.710><c> working</c><00:31:57.220><c> on</c>

00:31:57.299 --> 00:31:57.309 align:start position:0%
that they would expect we're working on
 

00:31:57.309 --> 00:31:59.220 align:start position:0%
that they would expect we're working on
providing<00:31:57.700><c> more</c><00:31:57.730><c> thread-safe</c><00:31:58.240><c> services</c><00:31:58.990><c> as</c>

00:31:59.220 --> 00:31:59.230 align:start position:0%
providing more thread-safe services as
 

00:31:59.230 --> 00:32:02.460 align:start position:0%
providing more thread-safe services as
i've<00:31:59.860><c> mentioned</c><00:31:59.890><c> in</c><00:32:00.490><c> the</c><00:32:00.730><c> carbon</c><00:32:01.390><c> api's</c><00:32:01.929><c> and</c>

00:32:02.460 --> 00:32:02.470 align:start position:0%
i've mentioned in the carbon api's and
 

00:32:02.470 --> 00:32:04.770 align:start position:0%
i've mentioned in the carbon api's and
even<00:32:03.160><c> in</c><00:32:03.309><c> the</c><00:32:03.460><c> lower</c><00:32:03.670><c> level</c><00:32:04.030><c> darwin</c><00:32:04.390><c> api's</c>

00:32:04.770 --> 00:32:04.780 align:start position:0%
even in the lower level darwin api's
 

00:32:04.780 --> 00:32:07.200 align:start position:0%
even in the lower level darwin api's
we've<00:32:05.770><c> been</c><00:32:05.890><c> working</c><00:32:06.220><c> pretty</c><00:32:06.370><c> hard</c><00:32:06.520><c> on</c><00:32:06.850><c> making</c>

00:32:07.200 --> 00:32:07.210 align:start position:0%
we've been working pretty hard on making
 

00:32:07.210 --> 00:32:09.419 align:start position:0%
we've been working pretty hard on making
sure<00:32:07.240><c> that</c><00:32:07.420><c> you</c><00:32:07.990><c> can</c><00:32:08.200><c> call</c><00:32:08.440><c> the</c><00:32:08.860><c> api's</c><00:32:09.220><c> that</c>

00:32:09.419 --> 00:32:09.429 align:start position:0%
sure that you can call the api's that
 

00:32:09.429 --> 00:32:10.650 align:start position:0%
sure that you can call the api's that
you<00:32:09.550><c> want</c><00:32:09.760><c> without</c><00:32:09.940><c> having</c><00:32:10.179><c> to</c><00:32:10.360><c> worry</c><00:32:10.450><c> about</c>

00:32:10.650 --> 00:32:10.660 align:start position:0%
you want without having to worry about
 

00:32:10.660 --> 00:32:13.140 align:start position:0%
you want without having to worry about
creating<00:32:11.440><c> your</c><00:32:11.530><c> own</c><00:32:11.590><c> locking</c><00:32:12.190><c> mechanisms</c>

00:32:13.140 --> 00:32:13.150 align:start position:0%
creating your own locking mechanisms
 

00:32:13.150 --> 00:32:15.990 align:start position:0%
creating your own locking mechanisms
around<00:32:13.990><c> the</c><00:32:14.500><c> parts</c><00:32:15.070><c> of</c><00:32:15.190><c> the</c><00:32:15.280><c> api</c><00:32:15.520><c> that</c><00:32:15.610><c> are</c><00:32:15.880><c> not</c>

00:32:15.990 --> 00:32:16.000 align:start position:0%
around the parts of the api that are not
 

00:32:16.000 --> 00:32:21.090 align:start position:0%
around the parts of the api that are not
thread<00:32:16.360><c> safe</c><00:32:18.480><c> so</c><00:32:19.500><c> right</c><00:32:20.500><c> now</c><00:32:20.650><c> we</c><00:32:20.710><c> have</c><00:32:21.070><c> a</c>

00:32:21.090 --> 00:32:21.100 align:start position:0%
thread safe so right now we have a
 

00:32:21.100 --> 00:32:23.150 align:start position:0%
thread safe so right now we have a
couple<00:32:21.309><c> demos</c><00:32:21.580><c> first</c><00:32:22.420><c> I'd</c><00:32:22.570><c> like</c><00:32:22.690><c> to</c><00:32:22.809><c> bring</c><00:32:22.960><c> up</c>

00:32:23.150 --> 00:32:23.160 align:start position:0%
couple demos first I'd like to bring up
 

00:32:23.160 --> 00:32:25.680 align:start position:0%
couple demos first I'd like to bring up
Robert<00:32:24.160><c> boated</c><00:32:24.490><c> who's</c><00:32:24.700><c> going</c><00:32:24.880><c> to</c><00:32:24.940><c> show</c><00:32:25.300><c> an</c>

00:32:25.680 --> 00:32:25.690 align:start position:0%
Robert boated who's going to show an
 

00:32:25.690 --> 00:32:27.180 align:start position:0%
Robert boated who's going to show an
example<00:32:26.140><c> of</c><00:32:26.260><c> some</c><00:32:26.410><c> of</c><00:32:26.440><c> the</c><00:32:26.559><c> developer</c><00:32:27.010><c> tools</c>

00:32:27.180 --> 00:32:27.190 align:start position:0%
example of some of the developer tools
 

00:32:27.190 --> 00:32:37.080 align:start position:0%
example of some of the developer tools
that<00:32:27.880><c> were</c><00:32:28.000><c> working</c><00:32:28.210><c> on</c><00:32:29.040><c> thanks</c><00:32:30.040><c> Matt</c>

00:32:37.080 --> 00:32:37.090 align:start position:0%
 
 

00:32:37.090 --> 00:32:40.680 align:start position:0%
 
so<00:32:38.090><c> what</c><00:32:38.450><c> Matt</c><00:32:38.630><c> has</c><00:32:38.900><c> done</c><00:32:39.110><c> is</c><00:32:39.440><c> explained</c><00:32:39.980><c> to</c><00:32:40.190><c> us</c>

00:32:40.680 --> 00:32:40.690 align:start position:0%
so what Matt has done is explained to us
 

00:32:40.690 --> 00:32:43.330 align:start position:0%
so what Matt has done is explained to us
what<00:32:41.690><c> the</c><00:32:41.840><c> api's</c><00:32:42.170><c> are</c><00:32:42.380><c> for</c><00:32:42.560><c> using</c><00:32:42.800><c> threads</c><00:32:43.100><c> and</c>

00:32:43.330 --> 00:32:43.340 align:start position:0%
what the api's are for using threads and
 

00:32:43.340 --> 00:32:44.710 align:start position:0%
what the api's are for using threads and
a<00:32:43.430><c> little</c><00:32:43.610><c> about</c><00:32:43.790><c> the</c><00:32:43.910><c> reasons</c><00:32:44.210><c> about</c><00:32:44.390><c> why</c><00:32:44.450><c> we</c>

00:32:44.710 --> 00:32:44.720 align:start position:0%
a little about the reasons about why we
 

00:32:44.720 --> 00:32:46.450 align:start position:0%
a little about the reasons about why we
might<00:32:44.750><c> use</c><00:32:45.050><c> them</c><00:32:45.260><c> what</c><00:32:45.710><c> I'd</c><00:32:45.830><c> like</c><00:32:45.980><c> to</c><00:32:46.040><c> do</c><00:32:46.280><c> is</c>

00:32:46.450 --> 00:32:46.460 align:start position:0%
might use them what I'd like to do is
 

00:32:46.460 --> 00:32:48.310 align:start position:0%
might use them what I'd like to do is
give<00:32:46.640><c> us</c><00:32:46.730><c> some</c><00:32:47.120><c> case</c><00:32:47.300><c> studies</c><00:32:47.690><c> and</c><00:32:47.930><c> explain</c>

00:32:48.310 --> 00:32:48.320 align:start position:0%
give us some case studies and explain
 

00:32:48.320 --> 00:32:49.900 align:start position:0%
give us some case studies and explain
how<00:32:48.500><c> some</c><00:32:48.680><c> of</c><00:32:48.770><c> Apple's</c><00:32:49.100><c> own</c><00:32:49.250><c> tools</c><00:32:49.580><c> use</c>

00:32:49.900 --> 00:32:49.910 align:start position:0%
how some of Apple's own tools use
 

00:32:49.910 --> 00:32:54.490 align:start position:0%
how some of Apple's own tools use
threading<00:32:50.390><c> now</c><00:32:51.170><c> the</c><00:32:52.160><c> interesting</c><00:32:52.580><c> problem</c><00:32:53.500><c> so</c>

00:32:54.490 --> 00:32:54.500 align:start position:0%
threading now the interesting problem so
 

00:32:54.500 --> 00:32:57.160 align:start position:0%
threading now the interesting problem so
let's<00:32:54.620><c> start</c><00:32:54.830><c> this</c><00:32:54.950><c> up</c><00:32:55.160><c> is</c><00:32:55.780><c> that</c><00:32:56.780><c> this</c><00:32:57.050><c> is</c>

00:32:57.160 --> 00:32:57.170 align:start position:0%
let's start this up is that this is
 

00:32:57.170 --> 00:32:58.930 align:start position:0%
let's start this up is that this is
going<00:32:57.320><c> to</c><00:32:57.380><c> be</c><00:32:57.530><c> a</c><00:32:57.560><c> somewhat</c><00:32:58.070><c> unauthorized</c><00:32:58.670><c> talk</c>

00:32:58.930 --> 00:32:58.940 align:start position:0%
going to be a somewhat unauthorized talk
 

00:32:58.940 --> 00:33:00.850 align:start position:0%
going to be a somewhat unauthorized talk
I've<00:32:59.330><c> talked</c><00:32:59.570><c> with</c><00:32:59.630><c> the</c><00:32:59.780><c> groups</c><00:32:59.930><c> a</c><00:33:00.050><c> bit</c><00:33:00.230><c> but</c><00:33:00.620><c> in</c>

00:33:00.850 --> 00:33:00.860 align:start position:0%
I've talked with the groups a bit but in
 

00:33:00.860 --> 00:33:02.020 align:start position:0%
I've talked with the groups a bit but in
general<00:33:01.190><c> what</c><00:33:01.250><c> we're</c><00:33:01.400><c> going</c><00:33:01.550><c> to</c><00:33:01.580><c> do</c><00:33:01.730><c> is</c><00:33:01.880><c> we're</c>

00:33:02.020 --> 00:33:02.030 align:start position:0%
general what we're going to do is we're
 

00:33:02.030 --> 00:33:03.550 align:start position:0%
general what we're going to do is we're
going<00:33:02.180><c> to</c><00:33:02.240><c> reverse</c><00:33:02.600><c> engineer</c><00:33:02.810><c> on</c><00:33:03.200><c> the</c><00:33:03.350><c> fly</c>

00:33:03.550 --> 00:33:03.560 align:start position:0%
going to reverse engineer on the fly
 

00:33:03.560 --> 00:33:04.960 align:start position:0%
going to reverse engineer on the fly
these<00:33:03.620><c> apps</c><00:33:03.950><c> and</c><00:33:04.130><c> try</c><00:33:04.250><c> to</c><00:33:04.310><c> understand</c><00:33:04.760><c> what's</c>

00:33:04.960 --> 00:33:04.970 align:start position:0%
these apps and try to understand what's
 

00:33:04.970 --> 00:33:08.190 align:start position:0%
these apps and try to understand what's
going<00:33:05.300><c> on</c><00:33:05.680><c> the</c><00:33:06.680><c> way</c><00:33:06.890><c> I'm</c><00:33:07.010><c> going</c><00:33:07.190><c> to</c><00:33:07.340><c> do</c><00:33:07.460><c> it</c><00:33:07.610><c> is</c>

00:33:08.190 --> 00:33:08.200 align:start position:0%
going on the way I'm going to do it is
 

00:33:08.200 --> 00:33:10.810 align:start position:0%
going on the way I'm going to do it is
with<00:33:09.200><c> a</c><00:33:09.500><c> handy</c><00:33:10.010><c> dandy</c><00:33:10.100><c> little</c><00:33:10.460><c> performance</c>

00:33:10.810 --> 00:33:10.820 align:start position:0%
with a handy dandy little performance
 

00:33:10.820 --> 00:33:14.110 align:start position:0%
with a handy dandy little performance
tool<00:33:11.410><c> this</c><00:33:12.410><c> is</c><00:33:12.590><c> a</c><00:33:12.620><c> pet</c><00:33:12.800><c> project</c><00:33:12.950><c> it's</c><00:33:13.820><c> not</c><00:33:13.880><c> yet</c>

00:33:14.110 --> 00:33:14.120 align:start position:0%
tool this is a pet project it's not yet
 

00:33:14.120 --> 00:33:15.850 align:start position:0%
tool this is a pet project it's not yet
on<00:33:14.210><c> the</c><00:33:14.240><c> developer</c><00:33:14.690><c> CD</c><00:33:14.960><c> that</c><00:33:15.500><c> tries</c><00:33:15.830><c> to</c>

00:33:15.850 --> 00:33:15.860 align:start position:0%
on the developer CD that tries to
 

00:33:15.860 --> 00:33:18.550 align:start position:0%
on the developer CD that tries to
visualize<00:33:16.430><c> how</c><00:33:16.460><c> threading</c><00:33:17.120><c> goes</c><00:33:17.300><c> on</c><00:33:17.510><c> now</c><00:33:18.500><c> the</c>

00:33:18.550 --> 00:33:18.560 align:start position:0%
visualize how threading goes on now the
 

00:33:18.560 --> 00:33:22.180 align:start position:0%
visualize how threading goes on now the
first<00:33:19.010><c> step</c><00:33:19.160><c> I'm</c><00:33:19.430><c> going</c><00:33:19.880><c> to</c><00:33:19.970><c> look</c><00:33:20.150><c> at</c><00:33:20.360><c> is</c><00:33:21.190><c> the</c>

00:33:22.180 --> 00:33:22.190 align:start position:0%
first step I'm going to look at is the
 

00:33:22.190 --> 00:33:29.100 align:start position:0%
first step I'm going to look at is the
finder<00:33:23.260><c> okay</c><00:33:26.290><c> let's</c><00:33:27.290><c> get</c><00:33:27.440><c> some</c><00:33:27.560><c> action</c><00:33:27.740><c> here</c>

00:33:29.100 --> 00:33:29.110 align:start position:0%
finder okay let's get some action here
 

00:33:29.110 --> 00:33:33.580 align:start position:0%
finder okay let's get some action here
and<00:33:31.150><c> what</c><00:33:32.150><c> the</c><00:33:32.270><c> time</c><00:33:32.480><c> what</c><00:33:32.900><c> we're</c><00:33:33.080><c> seeing</c><00:33:33.290><c> here</c>

00:33:33.580 --> 00:33:33.590 align:start position:0%
and what the time what we're seeing here
 

00:33:33.590 --> 00:33:36.520 align:start position:0%
and what the time what we're seeing here
is<00:33:33.800><c> a</c><00:33:34.370><c> timeline</c><00:33:35.060><c> view</c><00:33:35.120><c> in</c><00:33:35.570><c> thread</c><00:33:35.810><c> viewer</c><00:33:36.080><c> so</c>

00:33:36.520 --> 00:33:36.530 align:start position:0%
is a timeline view in thread viewer so
 

00:33:36.530 --> 00:33:37.600 align:start position:0%
is a timeline view in thread viewer so
each<00:33:36.710><c> of</c><00:33:36.740><c> the</c><00:33:36.920><c> little</c><00:33:37.040><c> blocks</c><00:33:37.310><c> there</c>

00:33:37.600 --> 00:33:37.610 align:start position:0%
each of the little blocks there
 

00:33:37.610 --> 00:33:39.190 align:start position:0%
each of the little blocks there
represents<00:33:38.150><c> about</c><00:33:38.270><c> a</c><00:33:38.390><c> 50</c><00:33:38.660><c> millisecond</c>

00:33:39.190 --> 00:33:39.200 align:start position:0%
represents about a 50 millisecond
 

00:33:39.200 --> 00:33:43.620 align:start position:0%
represents about a 50 millisecond
interval<00:33:39.500><c> and</c><00:33:39.680><c> each</c><00:33:40.010><c> of</c><00:33:40.190><c> the</c><00:33:40.250><c> bars</c><00:33:40.570><c> represents</c>

00:33:43.620 --> 00:33:43.630 align:start position:0%
 
 

00:33:43.630 --> 00:33:46.480 align:start position:0%
 
each<00:33:44.630><c> thread</c><00:33:45.110><c> and</c><00:33:45.320><c> so</c><00:33:45.740><c> the</c><00:33:45.830><c> idea</c><00:33:46.100><c> here</c><00:33:46.160><c> is</c><00:33:46.340><c> that</c>

00:33:46.480 --> 00:33:46.490 align:start position:0%
each thread and so the idea here is that
 

00:33:46.490 --> 00:33:47.710 align:start position:0%
each thread and so the idea here is that
you<00:33:46.580><c> can</c><00:33:46.700><c> see</c><00:33:46.850><c> that</c><00:33:47.030><c> there's</c><00:33:47.180><c> three</c><00:33:47.390><c> threads</c>

00:33:47.710 --> 00:33:47.720 align:start position:0%
you can see that there's three threads
 

00:33:47.720 --> 00:33:55.920 align:start position:0%
you can see that there's three threads
currently<00:33:48.200><c> in</c><00:33:48.410><c> the</c><00:33:48.830><c> finder</c><00:33:50.170><c> click</c><00:33:51.170><c> around</c>

00:33:55.920 --> 00:33:55.930 align:start position:0%
 
 

00:33:55.930 --> 00:33:59.620 align:start position:0%
 
and<00:33:57.640><c> the</c><00:33:58.640><c> colors</c><00:33:58.880><c> change</c><00:33:59.150><c> according</c><00:33:59.510><c> to</c>

00:33:59.620 --> 00:33:59.630 align:start position:0%
and the colors change according to
 

00:33:59.630 --> 00:34:01.060 align:start position:0%
and the colors change according to
what's<00:33:59.780><c> going</c><00:33:59.960><c> on</c><00:34:00.200><c> so</c><00:34:00.410><c> for</c><00:34:00.560><c> example</c><00:34:00.860><c> the</c><00:34:00.950><c> green</c>

00:34:01.060 --> 00:34:01.070 align:start position:0%
what's going on so for example the green
 

00:34:01.070 --> 00:34:02.260 align:start position:0%
what's going on so for example the green
represents<00:34:01.640><c> that</c><00:34:01.760><c> there's</c><00:34:02.000><c> currently</c>

00:34:02.260 --> 00:34:02.270 align:start position:0%
represents that there's currently
 

00:34:02.270 --> 00:34:04.090 align:start position:0%
represents that there's currently
execution<00:34:02.840><c> on</c><00:34:02.930><c> that</c><00:34:02.960><c> thread</c><00:34:03.410><c> the</c><00:34:03.890><c> yellow</c>

00:34:04.090 --> 00:34:04.100 align:start position:0%
execution on that thread the yellow
 

00:34:04.100 --> 00:34:05.680 align:start position:0%
execution on that thread the yellow
represents<00:34:04.580><c> that</c><00:34:04.670><c> execution</c><00:34:05.030><c> occurred</c><00:34:05.450><c> but</c>

00:34:05.680 --> 00:34:05.690 align:start position:0%
represents that execution occurred but
 

00:34:05.690 --> 00:34:07.690 align:start position:0%
represents that execution occurred but
is<00:34:05.870><c> not</c><00:34:06.020><c> currently</c><00:34:06.590><c> occurring</c><00:34:06.860><c> so</c><00:34:07.370><c> there</c><00:34:07.520><c> was</c>

00:34:07.690 --> 00:34:07.700 align:start position:0%
is not currently occurring so there was
 

00:34:07.700 --> 00:34:09.040 align:start position:0%
is not currently occurring so there was
some<00:34:07.880><c> execution</c><00:34:08.330><c> during</c><00:34:08.420><c> the</c><00:34:08.600><c> last</c><00:34:08.780><c> sample</c>

00:34:09.040 --> 00:34:09.050 align:start position:0%
some execution during the last sample
 

00:34:09.050 --> 00:34:13.180 align:start position:0%
some execution during the last sample
the<00:34:09.980><c> green</c><00:34:10.490><c> as</c><00:34:10.930><c> in</c><00:34:11.930><c> here</c><00:34:12.170><c> represents</c><00:34:12.680><c> that</c><00:34:12.860><c> the</c>

00:34:13.180 --> 00:34:13.190 align:start position:0%
the green as in here represents that the
 

00:34:13.190 --> 00:34:14.950 align:start position:0%
the green as in here represents that the
program<00:34:13.490><c> was</c><00:34:13.580><c> waiting</c><00:34:13.850><c> in</c><00:34:13.910><c> the</c><00:34:13.970><c> run</c><00:34:14.180><c> loop</c><00:34:14.390><c> the</c>

00:34:14.950 --> 00:34:14.960 align:start position:0%
program was waiting in the run loop the
 

00:34:14.960 --> 00:34:16.270 align:start position:0%
program was waiting in the run loop the
red<00:34:15.140><c> represents</c><00:34:15.650><c> that</c><00:34:15.770><c> the</c><00:34:15.830><c> thread</c><00:34:16.130><c> was</c>

00:34:16.270 --> 00:34:16.280 align:start position:0%
red represents that the thread was
 

00:34:16.280 --> 00:34:18.370 align:start position:0%
red represents that the thread was
waiting<00:34:16.520><c> on</c><00:34:16.580><c> the</c><00:34:16.700><c> lock</c><00:34:16.880><c> now</c><00:34:17.810><c> the</c><00:34:17.900><c> first</c><00:34:18.170><c> thing</c>

00:34:18.370 --> 00:34:18.380 align:start position:0%
waiting on the lock now the first thing
 

00:34:18.380 --> 00:34:20.320 align:start position:0%
waiting on the lock now the first thing
I'll<00:34:18.500><c> show</c><00:34:18.710><c> you</c><00:34:18.740><c> is</c><00:34:19.100><c> that</c><00:34:19.160><c> you</c><00:34:19.820><c> can</c><00:34:19.940><c> see</c><00:34:20.120><c> that</c>

00:34:20.320 --> 00:34:20.330 align:start position:0%
I'll show you is that you can see that
 

00:34:20.330 --> 00:34:21.700 align:start position:0%
I'll show you is that you can see that
there's<00:34:20.480><c> basically</c><00:34:20.780><c> one</c><00:34:21.080><c> thread</c><00:34:21.470><c> that</c><00:34:21.590><c> does</c>

00:34:21.700 --> 00:34:21.710 align:start position:0%
there's basically one thread that does
 

00:34:21.710 --> 00:34:23.350 align:start position:0%
there's basically one thread that does
most<00:34:21.920><c> of</c><00:34:22.040><c> the</c><00:34:22.100><c> action</c><00:34:22.520><c> that</c><00:34:22.940><c> is</c><00:34:23.090><c> the</c><00:34:23.210><c> main</c>

00:34:23.350 --> 00:34:23.360 align:start position:0%
most of the action that is the main
 

00:34:23.360 --> 00:34:24.790 align:start position:0%
most of the action that is the main
thread<00:34:23.660><c> and</c><00:34:23.690><c> that's</c><00:34:23.900><c> how</c><00:34:23.990><c> most</c><00:34:24.230><c> applications</c>

00:34:24.790 --> 00:34:24.800 align:start position:0%
thread and that's how most applications
 

00:34:24.800 --> 00:34:26.770 align:start position:0%
thread and that's how most applications
run<00:34:25.040><c> so</c><00:34:25.610><c> most</c><00:34:25.820><c> of</c><00:34:25.880><c> the</c><00:34:25.970><c> drawing</c><00:34:26.270><c> most</c><00:34:26.450><c> the</c><00:34:26.630><c> UI</c>

00:34:26.770 --> 00:34:26.780 align:start position:0%
run so most of the drawing most the UI
 

00:34:26.780 --> 00:34:29.620 align:start position:0%
run so most of the drawing most the UI
logic<00:34:27.110><c> is</c><00:34:27.380><c> going</c><00:34:27.410><c> on</c><00:34:27.800><c> there</c><00:34:28.210><c> the</c><00:34:29.210><c> second</c>

00:34:29.620 --> 00:34:29.630 align:start position:0%
logic is going on there the second
 

00:34:29.630 --> 00:34:32.350 align:start position:0%
logic is going on there the second
thread<00:34:30.070><c> from</c><00:34:31.070><c> the</c><00:34:31.160><c> bottom</c><00:34:31.580><c> the</c><00:34:32.000><c> one</c><00:34:32.120><c> that's</c>

00:34:32.350 --> 00:34:32.360 align:start position:0%
thread from the bottom the one that's
 

00:34:32.360 --> 00:34:36.310 align:start position:0%
thread from the bottom the one that's
locked<00:34:33.160><c> represents</c><00:34:34.210><c> what</c><00:34:35.210><c> the</c><00:34:35.240><c> finder</c><00:34:36.050><c> people</c>

00:34:36.310 --> 00:34:36.320 align:start position:0%
locked represents what the finder people
 

00:34:36.320 --> 00:34:39.070 align:start position:0%
locked represents what the finder people
call<00:34:36.590><c> a</c><00:34:36.890><c> sync</c><00:34:37.250><c> thread</c><00:34:37.550><c> so</c><00:34:38.120><c> the</c><00:34:38.240><c> idea</c><00:34:38.540><c> is</c><00:34:38.810><c> that</c>

00:34:39.070 --> 00:34:39.080 align:start position:0%
call a sync thread so the idea is that
 

00:34:39.080 --> 00:34:40.750 align:start position:0%
call a sync thread so the idea is that
every<00:34:39.350><c> time</c><00:34:39.380><c> that</c><00:34:39.770><c> they</c><00:34:40.040><c> cache</c><00:34:40.310><c> a</c><00:34:40.340><c> lot</c><00:34:40.610><c> of</c><00:34:40.700><c> the</c>

00:34:40.750 --> 00:34:40.760 align:start position:0%
every time that they cache a lot of the
 

00:34:40.760 --> 00:34:42.070 align:start position:0%
every time that they cache a lot of the
information<00:34:41.210><c> about</c><00:34:41.390><c> what's</c><00:34:41.600><c> going</c><00:34:41.810><c> on</c><00:34:41.900><c> in</c>

00:34:42.070 --> 00:34:42.080 align:start position:0%
information about what's going on in
 

00:34:42.080 --> 00:34:44.410 align:start position:0%
information about what's going on in
each<00:34:42.170><c> folder</c><00:34:42.740><c> however</c><00:34:43.520><c> when</c><00:34:43.970><c> you</c><00:34:44.060><c> enter</c><00:34:44.390><c> a</c>

00:34:44.410 --> 00:34:44.420 align:start position:0%
each folder however when you enter a
 

00:34:44.420 --> 00:34:46.450 align:start position:0%
each folder however when you enter a
folder<00:34:44.810><c> that</c><00:34:44.840><c> you've</c><00:34:45.020><c> already</c><00:34:45.170><c> seen</c><00:34:45.380><c> you</c><00:34:46.280><c> need</c>

00:34:46.450 --> 00:34:46.460 align:start position:0%
folder that you've already seen you need
 

00:34:46.460 --> 00:34:47.740 align:start position:0%
folder that you've already seen you need
something<00:34:46.940><c> that</c><00:34:46.970><c> will</c><00:34:47.150><c> go</c><00:34:47.390><c> and</c><00:34:47.540><c> make</c><00:34:47.720><c> sure</c>

00:34:47.740 --> 00:34:47.750 align:start position:0%
something that will go and make sure
 

00:34:47.750 --> 00:34:49.390 align:start position:0%
something that will go and make sure
that<00:34:48.020><c> nothing</c><00:34:48.200><c> has</c><00:34:48.410><c> changed</c><00:34:48.740><c> in</c><00:34:48.800><c> that</c><00:34:48.920><c> folder</c>

00:34:49.390 --> 00:34:49.400 align:start position:0%
that nothing has changed in that folder
 

00:34:49.400 --> 00:34:51.430 align:start position:0%
that nothing has changed in that folder
and<00:34:49.520><c> that's</c><00:34:49.910><c> what</c><00:34:50.120><c> the</c><00:34:50.210><c> sync</c><00:34:50.420><c> thread</c><00:34:50.660><c> does</c><00:34:50.870><c> so</c>

00:34:51.430 --> 00:34:51.440 align:start position:0%
and that's what the sync thread does so
 

00:34:51.440 --> 00:34:52.960 align:start position:0%
and that's what the sync thread does so
the<00:34:51.560><c> idea</c><00:34:51.800><c> is</c><00:34:51.920><c> it</c><00:34:52.040><c> quickly</c><00:34:52.370><c> goes</c><00:34:52.550><c> and</c><00:34:52.730><c> it</c><00:34:52.820><c> looks</c>

00:34:52.960 --> 00:34:52.970 align:start position:0%
the idea is it quickly goes and it looks
 

00:34:52.970 --> 00:34:54.960 align:start position:0%
the idea is it quickly goes and it looks
in<00:34:53.090><c> that</c><00:34:53.150><c> directory</c><00:34:53.720><c> in</c><00:34:53.900><c> a</c><00:34:54.050><c> separate</c><00:34:54.380><c> thread</c>

00:34:54.960 --> 00:34:54.970 align:start position:0%
in that directory in a separate thread
 

00:34:54.970 --> 00:34:57.940 align:start position:0%
in that directory in a separate thread
notice<00:34:55.970><c> that</c><00:34:56.180><c> it's</c><00:34:56.450><c> always</c><00:34:57.050><c> existing</c><00:34:57.560><c> it's</c>

00:34:57.940 --> 00:34:57.950 align:start position:0%
notice that it's always existing it's
 

00:34:57.950 --> 00:34:59.290 align:start position:0%
notice that it's always existing it's
always<00:34:58.220><c> locked</c><00:34:58.460><c> so</c><00:34:58.610><c> it</c><00:34:58.730><c> can</c><00:34:58.820><c> be</c><00:34:58.910><c> started</c><00:34:59.240><c> up</c>

00:34:59.290 --> 00:34:59.300 align:start position:0%
always locked so it can be started up
 

00:34:59.300 --> 00:35:01.480 align:start position:0%
always locked so it can be started up
quickly<00:34:59.600><c> and</c><00:35:00.140><c> by</c><00:35:00.680><c> having</c><00:35:01.010><c> on</c><00:35:01.130><c> a</c><00:35:01.160><c> second</c>

00:35:01.480 --> 00:35:01.490 align:start position:0%
quickly and by having on a second
 

00:35:01.490 --> 00:35:03.640 align:start position:0%
quickly and by having on a second
separate<00:35:01.880><c> thread</c><00:35:02.210><c> you</c><00:35:02.990><c> not</c><00:35:03.170><c> only</c><00:35:03.350><c> have</c><00:35:03.560><c> the</c>

00:35:03.640 --> 00:35:03.650 align:start position:0%
separate thread you not only have the
 

00:35:03.650 --> 00:35:05.590 align:start position:0%
separate thread you not only have the
ability<00:35:03.980><c> to</c><00:35:04.010><c> basically</c><00:35:04.580><c> have</c><00:35:05.000><c> scalability</c>

00:35:05.590 --> 00:35:05.600 align:start position:0%
ability to basically have scalability
 

00:35:05.600 --> 00:35:07.810 align:start position:0%
ability to basically have scalability
and<00:35:05.720><c> do</c><00:35:05.810><c> things</c><00:35:05.990><c> in</c><00:35:06.200><c> multiprocessing</c><00:35:06.920><c> way</c><00:35:07.220><c> so</c>

00:35:07.810 --> 00:35:07.820 align:start position:0%
and do things in multiprocessing way so
 

00:35:07.820 --> 00:35:09.250 align:start position:0%
and do things in multiprocessing way so
that<00:35:07.940><c> you</c><00:35:08.000><c> get</c><00:35:08.120><c> quick</c><00:35:08.330><c> response</c><00:35:08.720><c> but</c><00:35:09.230><c> also</c>

00:35:09.250 --> 00:35:09.260 align:start position:0%
that you get quick response but also
 

00:35:09.260 --> 00:35:11.320 align:start position:0%
that you get quick response but also
since<00:35:09.920><c> you're</c><00:35:10.070><c> accessing</c><00:35:10.430><c> the</c><00:35:10.670><c> disk</c><00:35:10.880><c> you</c><00:35:11.120><c> know</c>

00:35:11.320 --> 00:35:11.330 align:start position:0%
since you're accessing the disk you know
 

00:35:11.330 --> 00:35:13.180 align:start position:0%
since you're accessing the disk you know
that<00:35:11.540><c> if</c><00:35:11.660><c> that</c><00:35:11.900><c> blocks</c><00:35:12.290><c> because</c><00:35:12.890><c> let's</c><00:35:13.100><c> say</c>

00:35:13.180 --> 00:35:13.190 align:start position:0%
that if that blocks because let's say
 

00:35:13.190 --> 00:35:15.070 align:start position:0%
that if that blocks because let's say
it's<00:35:13.370><c> an</c><00:35:13.460><c> eye</c><00:35:13.610><c> disk</c><00:35:13.910><c> you're</c><00:35:14.660><c> going</c><00:35:14.840><c> to</c><00:35:14.900><c> be</c><00:35:14.990><c> able</c>

00:35:15.070 --> 00:35:15.080 align:start position:0%
it's an eye disk you're going to be able
 

00:35:15.080 --> 00:35:17.380 align:start position:0%
it's an eye disk you're going to be able
to<00:35:15.200><c> go</c><00:35:15.350><c> and</c><00:35:15.500><c> access</c><00:35:15.650><c> that</c><00:35:16.040><c> and</c><00:35:16.280><c> wait</c><00:35:17.090><c> for</c><00:35:17.300><c> the</c>

00:35:17.380 --> 00:35:17.390 align:start position:0%
to go and access that and wait for the
 

00:35:17.390 --> 00:35:19.150 align:start position:0%
to go and access that and wait for the
response<00:35:17.630><c> without</c><00:35:18.140><c> actually</c><00:35:18.650><c> stopping</c><00:35:19.070><c> the</c>

00:35:19.150 --> 00:35:19.160 align:start position:0%
response without actually stopping the
 

00:35:19.160 --> 00:35:21.100 align:start position:0%
response without actually stopping the
UI<00:35:19.280><c> thread</c><00:35:19.640><c> and</c><00:35:19.880><c> so</c><00:35:20.270><c> that</c><00:35:20.480><c> improves</c><00:35:20.840><c> the</c><00:35:20.960><c> user</c>

00:35:21.100 --> 00:35:21.110 align:start position:0%
UI thread and so that improves the user
 

00:35:21.110 --> 00:35:25.570 align:start position:0%
UI thread and so that improves the user
experience<00:35:21.470><c> is</c><00:35:21.800><c> now</c><00:35:21.920><c> is</c><00:35:22.100><c> telling</c><00:35:22.400><c> us</c><00:35:24.580><c> let's</c>

00:35:25.570 --> 00:35:25.580 align:start position:0%
experience is now is telling us let's
 

00:35:25.580 --> 00:35:26.920 align:start position:0%
experience is now is telling us let's
start<00:35:26.000><c> finder</c><00:35:26.330><c> up</c><00:35:26.480><c> again</c>

00:35:26.920 --> 00:35:26.930 align:start position:0%
start finder up again
 

00:35:26.930 --> 00:35:29.950 align:start position:0%
start finder up again
the<00:35:27.140><c> other</c><00:35:27.350><c> thing</c><00:35:27.620><c> that</c><00:35:27.650><c> you'll</c><00:35:27.860><c> find</c><00:35:27.890><c> as</c><00:35:28.960><c> we</c>

00:35:29.950 --> 00:35:29.960 align:start position:0%
the other thing that you'll find as we
 

00:35:29.960 --> 00:35:33.970 align:start position:0%
the other thing that you'll find as we
click<00:35:30.170><c> around</c><00:35:30.940><c> is</c><00:35:32.350><c> that</c><00:35:33.350><c> each</c><00:35:33.500><c> time</c><00:35:33.800><c> that</c><00:35:33.920><c> we</c>

00:35:33.970 --> 00:35:33.980 align:start position:0%
click around is that each time that we
 

00:35:33.980 --> 00:35:37.990 align:start position:0%
click around is that each time that we
enter<00:35:34.460><c> a</c><00:35:34.640><c> new</c><00:35:35.440><c> folder</c><00:35:36.460><c> we</c><00:35:37.460><c> can</c><00:35:37.610><c> see</c><00:35:37.760><c> that</c><00:35:37.880><c> new</c>

00:35:37.990 --> 00:35:38.000 align:start position:0%
enter a new folder we can see that new
 

00:35:38.000 --> 00:35:40.630 align:start position:0%
enter a new folder we can see that new
threads<00:35:38.300><c> get</c><00:35:38.480><c> started</c><00:35:39.070><c> so</c><00:35:40.070><c> there</c><00:35:40.400><c> was</c><00:35:40.490><c> the</c>

00:35:40.630 --> 00:35:40.640 align:start position:0%
threads get started so there was the
 

00:35:40.640 --> 00:35:42.070 align:start position:0%
threads get started so there was the
remnants<00:35:40.970><c> of</c><00:35:41.030><c> one</c><00:35:41.240><c> here</c><00:35:41.540><c> and</c><00:35:41.720><c> then</c><00:35:41.810><c> we</c><00:35:41.900><c> have</c><00:35:42.050><c> a</c>

00:35:42.070 --> 00:35:42.080 align:start position:0%
remnants of one here and then we have a
 

00:35:42.080 --> 00:35:43.480 align:start position:0%
remnants of one here and then we have a
thread<00:35:42.320><c> here</c><00:35:42.590><c> and</c><00:35:42.620><c> that</c><00:35:42.860><c> thread</c><00:35:43.100><c> only</c><00:35:43.220><c> stays</c>

00:35:43.480 --> 00:35:43.490 align:start position:0%
thread here and that thread only stays
 

00:35:43.490 --> 00:35:45.220 align:start position:0%
thread here and that thread only stays
around<00:35:43.700><c> for</c><00:35:43.910><c> a</c><00:35:43.970><c> small</c><00:35:44.240><c> instance</c><00:35:44.720><c> and</c><00:35:44.930><c> then</c>

00:35:45.220 --> 00:35:45.230 align:start position:0%
around for a small instance and then
 

00:35:45.230 --> 00:35:47.440 align:start position:0%
around for a small instance and then
goes<00:35:45.440><c> away</c><00:35:45.620><c> again</c><00:35:45.830><c> and</c><00:35:46.130><c> what's</c><00:35:47.000><c> happening</c>

00:35:47.440 --> 00:35:47.450 align:start position:0%
goes away again and what's happening
 

00:35:47.450 --> 00:35:49.600 align:start position:0%
goes away again and what's happening
there<00:35:47.510><c> is</c><00:35:48.050><c> that</c><00:35:48.410><c> once</c><00:35:48.800><c> again</c><00:35:49.070><c> the</c><00:35:49.160><c> finder</c><00:35:49.460><c> guys</c>

00:35:49.600 --> 00:35:49.610 align:start position:0%
there is that once again the finder guys
 

00:35:49.610 --> 00:35:51.760 align:start position:0%
there is that once again the finder guys
don't<00:35:49.970><c> want</c><00:35:50.300><c> the</c><00:35:50.420><c> UI</c><00:35:50.570><c> to</c><00:35:50.750><c> block</c><00:35:51.170><c> the</c><00:35:51.740><c> the</c>

00:35:51.760 --> 00:35:51.770 align:start position:0%
don't want the UI to block the the
 

00:35:51.770 --> 00:35:54.250 align:start position:0%
don't want the UI to block the the
finder<00:35:52.430><c> would</c><00:35:52.520><c> look</c><00:35:52.730><c> miserable</c><00:35:52.970><c> if</c><00:35:53.450><c> every</c>

00:35:54.250 --> 00:35:54.260 align:start position:0%
finder would look miserable if every
 

00:35:54.260 --> 00:35:55.510 align:start position:0%
finder would look miserable if every
time<00:35:54.440><c> that</c><00:35:54.620><c> you</c><00:35:54.680><c> went</c><00:35:54.830><c> into</c><00:35:54.980><c> a</c><00:35:55.070><c> new</c><00:35:55.220><c> folder</c><00:35:55.370><c> and</c>

00:35:55.510 --> 00:35:55.520 align:start position:0%
time that you went into a new folder and
 

00:35:55.520 --> 00:35:57.310 align:start position:0%
time that you went into a new folder and
it<00:35:55.640><c> went</c><00:35:55.820><c> out</c><00:35:55.940><c> to</c><00:35:56.090><c> touch</c><00:35:56.270><c> the</c><00:35:56.480><c> disk</c><00:35:56.660><c> if</c><00:35:56.900><c> the</c>

00:35:57.310 --> 00:35:57.320 align:start position:0%
it went out to touch the disk if the
 

00:35:57.320 --> 00:35:58.480 align:start position:0%
it went out to touch the disk if the
entire<00:35:57.560><c> finder</c><00:35:57.950><c> locked</c><00:35:58.160><c> up</c>

00:35:58.480 --> 00:35:58.490 align:start position:0%
entire finder locked up
 

00:35:58.490 --> 00:36:00.430 align:start position:0%
entire finder locked up
it's<00:35:58.670><c> a</c><00:35:58.760><c> horrible</c><00:35:59.030><c> user</c><00:35:59.240><c> experience</c><00:35:59.810><c> and</c><00:35:59.930><c> so</c>

00:36:00.430 --> 00:36:00.440 align:start position:0%
it's a horrible user experience and so
 

00:36:00.440 --> 00:36:02.140 align:start position:0%
it's a horrible user experience and so
to<00:36:00.500><c> avoid</c><00:36:00.830><c> that</c><00:36:00.890><c> as</c><00:36:01.400><c> many</c><00:36:01.820><c> of</c><00:36:01.940><c> you</c><00:36:02.030><c> probably</c>

00:36:02.140 --> 00:36:02.150 align:start position:0%
to avoid that as many of you probably
 

00:36:02.150 --> 00:36:04.120 align:start position:0%
to avoid that as many of you probably
will<00:36:02.450><c> want</c><00:36:02.600><c> to</c><00:36:02.660><c> do</c><00:36:02.840><c> in</c><00:36:02.930><c> your</c><00:36:03.050><c> own</c><00:36:03.170><c> apps</c><00:36:03.440><c> what</c>

00:36:04.120 --> 00:36:04.130 align:start position:0%
will want to do in your own apps what
 

00:36:04.130 --> 00:36:05.770 align:start position:0%
will want to do in your own apps what
they<00:36:04.250><c> do</c><00:36:04.310><c> is</c><00:36:04.520><c> they</c><00:36:04.640><c> have</c><00:36:04.820><c> the</c><00:36:05.030><c> disk</c><00:36:05.240><c> access</c><00:36:05.660><c> is</c>

00:36:05.770 --> 00:36:05.780 align:start position:0%
they do is they have the disk access is
 

00:36:05.780 --> 00:36:07.810 align:start position:0%
they do is they have the disk access is
going<00:36:05.930><c> on</c><00:36:06.170><c> in</c><00:36:06.290><c> a</c><00:36:06.350><c> separate</c><00:36:06.680><c> thread</c><00:36:06.920><c> when</c><00:36:07.700><c> they</c>

00:36:07.810 --> 00:36:07.820 align:start position:0%
going on in a separate thread when they
 

00:36:07.820 --> 00:36:09.339 align:start position:0%
going on in a separate thread when they
enter<00:36:08.120><c> the</c><00:36:08.240><c> new</c><00:36:08.360><c> folder</c><00:36:08.630><c> they</c><00:36:09.050><c> go</c>

00:36:09.339 --> 00:36:09.349 align:start position:0%
enter the new folder they go
 

00:36:09.349 --> 00:36:10.779 align:start position:0%
enter the new folder they go
the<00:36:09.410><c> catalog</c><00:36:09.890><c> it</c><00:36:10.099><c> they</c><00:36:10.339><c> do</c><00:36:10.400><c> that</c><00:36:10.640><c> on</c><00:36:10.759><c> a</c>

00:36:10.779 --> 00:36:10.789 align:start position:0%
the catalog it they do that on a
 

00:36:10.789 --> 00:36:12.670 align:start position:0%
the catalog it they do that on a
separate<00:36:11.089><c> thread</c><00:36:11.150><c> and</c><00:36:11.630><c> that</c><00:36:12.170><c> way</c><00:36:12.349><c> they</c><00:36:12.499><c> know</c>

00:36:12.670 --> 00:36:12.680 align:start position:0%
separate thread and that way they know
 

00:36:12.680 --> 00:36:14.559 align:start position:0%
separate thread and that way they know
that<00:36:12.829><c> the</c><00:36:13.099><c> finder</c><00:36:13.729><c> is</c><00:36:13.849><c> not</c><00:36:14.029><c> going</c><00:36:14.299><c> to</c><00:36:14.359><c> block</c>

00:36:14.559 --> 00:36:14.569 align:start position:0%
that the finder is not going to block
 

00:36:14.569 --> 00:36:21.249 align:start position:0%
that the finder is not going to block
while<00:36:14.749><c> they</c><00:36:14.839><c> collect</c><00:36:15.109><c> data</c><00:36:15.470><c> a</c><00:36:20.079><c> third</c><00:36:21.079><c> example</c>

00:36:21.249 --> 00:36:21.259 align:start position:0%
while they collect data a third example
 

00:36:21.259 --> 00:36:25.150 align:start position:0%
while they collect data a third example
is<00:36:21.619><c> if</c><00:36:21.769><c> we</c><00:36:21.859><c> do</c><00:36:21.979><c> a</c><00:36:22.009><c> copy</c><00:36:23.470><c> so</c><00:36:24.470><c> let's</c><00:36:24.650><c> go</c><00:36:24.950><c> to</c><00:36:25.009><c> the</c>

00:36:25.150 --> 00:36:25.160 align:start position:0%
is if we do a copy so let's go to the
 

00:36:25.160 --> 00:36:27.670 align:start position:0%
is if we do a copy so let's go to the
home<00:36:25.309><c> directory</c><00:36:25.789><c> and</c><00:36:26.079><c> let's</c><00:36:27.079><c> duplicate</c><00:36:27.619><c> a</c>

00:36:27.670 --> 00:36:27.680 align:start position:0%
home directory and let's duplicate a
 

00:36:27.680 --> 00:36:29.880 align:start position:0%
home directory and let's duplicate a
folder<00:36:28.039><c> or</c><00:36:28.220><c> duplicate</c><00:36:28.849><c> an</c><00:36:28.940><c> application</c><00:36:29.479><c> and</c>

00:36:29.880 --> 00:36:29.890 align:start position:0%
folder or duplicate an application and
 

00:36:29.890 --> 00:36:37.359 align:start position:0%
folder or duplicate an application and
what<00:36:30.890><c> we</c><00:36:31.009><c> find</c><00:36:31.220><c> is</c><00:36:32.349><c> again</c><00:36:33.349><c> up</c><00:36:33.920><c> here</c><00:36:36.369><c> we've</c>

00:36:37.359 --> 00:36:37.369 align:start position:0%
what we find is again up here we've
 

00:36:37.369 --> 00:36:39.789 align:start position:0%
what we find is again up here we've
created<00:36:37.609><c> a</c><00:36:37.849><c> new</c><00:36:37.970><c> thread</c><00:36:38.299><c> the</c><00:36:39.079><c> idea</c><00:36:39.349><c> is</c><00:36:39.589><c> that</c>

00:36:39.789 --> 00:36:39.799 align:start position:0%
created a new thread the idea is that
 

00:36:39.799 --> 00:36:41.200 align:start position:0%
created a new thread the idea is that
the<00:36:39.920><c> copy</c><00:36:40.190><c> is</c><00:36:40.460><c> something</c><00:36:40.759><c> that's</c><00:36:40.910><c> going</c><00:36:41.029><c> to</c><00:36:41.119><c> be</c>

00:36:41.200 --> 00:36:41.210 align:start position:0%
the copy is something that's going to be
 

00:36:41.210 --> 00:36:42.849 align:start position:0%
the copy is something that's going to be
a<00:36:41.239><c> long-running</c><00:36:41.690><c> app</c><00:36:41.930><c> or</c><00:36:42.200><c> a</c><00:36:42.410><c> long-running</c>

00:36:42.849 --> 00:36:42.859 align:start position:0%
a long-running app or a long-running
 

00:36:42.859 --> 00:36:45.910 align:start position:0%
a long-running app or a long-running
thread<00:36:44.140><c> it's</c><00:36:45.140><c> something</c><00:36:45.470><c> that's</c><00:36:45.619><c> going</c><00:36:45.739><c> to</c><00:36:45.829><c> be</c>

00:36:45.910 --> 00:36:45.920 align:start position:0%
thread it's something that's going to be
 

00:36:45.920 --> 00:36:47.140 align:start position:0%
thread it's something that's going to be
touching<00:36:46.160><c> the</c><00:36:46.339><c> disk</c><00:36:46.519><c> and</c><00:36:46.700><c> so</c><00:36:46.789><c> it's</c><00:36:46.910><c> going</c><00:36:47.029><c> to</c>

00:36:47.140 --> 00:36:47.150 align:start position:0%
touching the disk and so it's going to
 

00:36:47.150 --> 00:36:48.789 align:start position:0%
touching the disk and so it's going to
be<00:36:47.210><c> blocking</c><00:36:47.720><c> so</c><00:36:48.109><c> you</c><00:36:48.200><c> don't</c><00:36:48.380><c> want</c><00:36:48.529><c> it</c><00:36:48.650><c> on</c><00:36:48.680><c> the</c>

00:36:48.789 --> 00:36:48.799 align:start position:0%
be blocking so you don't want it on the
 

00:36:48.799 --> 00:36:50.620 align:start position:0%
be blocking so you don't want it on the
normal<00:36:48.979><c> thread</c><00:36:49.339><c> and</c><00:36:49.549><c> it's</c><00:36:50.210><c> something</c><00:36:50.479><c> that</c>

00:36:50.620 --> 00:36:50.630 align:start position:0%
normal thread and it's something that
 

00:36:50.630 --> 00:36:51.519 align:start position:0%
normal thread and it's something that
should<00:36:50.839><c> be</c><00:36:50.869><c> running</c><00:36:51.200><c> in</c><00:36:51.289><c> the</c><00:36:51.319><c> background</c>

00:36:51.519 --> 00:36:51.529 align:start position:0%
should be running in the background
 

00:36:51.529 --> 00:36:52.989 align:start position:0%
should be running in the background
because<00:36:51.950><c> it's</c><00:36:52.099><c> probably</c><00:36:52.460><c> something</c><00:36:52.789><c> that</c><00:36:52.910><c> the</c>

00:36:52.989 --> 00:36:52.999 align:start position:0%
because it's probably something that the
 

00:36:52.999 --> 00:36:54.969 align:start position:0%
because it's probably something that the
user<00:36:53.150><c> doesn't</c><00:36:53.450><c> have</c><00:36:53.630><c> a</c><00:36:54.019><c> huge</c><00:36:54.470><c> amount</c><00:36:54.650><c> or</c>

00:36:54.969 --> 00:36:54.979 align:start position:0%
user doesn't have a huge amount or
 

00:36:54.979 --> 00:36:56.410 align:start position:0%
user doesn't have a huge amount or
doesn't<00:36:55.309><c> really</c><00:36:55.430><c> care</c><00:36:55.670><c> that</c><00:36:55.700><c> it</c><00:36:55.910><c> completes</c>

00:36:56.410 --> 00:36:56.420 align:start position:0%
doesn't really care that it completes
 

00:36:56.420 --> 00:36:58.180 align:start position:0%
doesn't really care that it completes
immediately<00:36:57.079><c> and</c><00:36:57.259><c> wants</c><00:36:57.650><c> to</c><00:36:57.739><c> be</c><00:36:57.859><c> able</c><00:36:57.920><c> to</c><00:36:58.039><c> do</c>

00:36:58.180 --> 00:36:58.190 align:start position:0%
immediately and wants to be able to do
 

00:36:58.190 --> 00:37:00.009 align:start position:0%
immediately and wants to be able to do
other<00:36:58.339><c> activities</c><00:36:58.489><c> and</c><00:36:59.119><c> so</c><00:36:59.569><c> the</c><00:36:59.690><c> idea</c><00:36:59.930><c> of</c>

00:37:00.009 --> 00:37:00.019 align:start position:0%
other activities and so the idea of
 

00:37:00.019 --> 00:37:01.420 align:start position:0%
other activities and so the idea of
being<00:37:00.200><c> able</c><00:37:00.289><c> to</c><00:37:00.410><c> split</c><00:37:00.619><c> off</c><00:37:00.739><c> this</c><00:37:00.890><c> background</c>

00:37:01.420 --> 00:37:01.430 align:start position:0%
being able to split off this background
 

00:37:01.430 --> 00:37:03.849 align:start position:0%
being able to split off this background
task<00:37:01.700><c> or</c><00:37:02.359><c> background</c><00:37:02.839><c> process</c><00:37:03.289><c> is</c><00:37:03.470><c> an</c>

00:37:03.849 --> 00:37:03.859 align:start position:0%
task or background process is an
 

00:37:03.859 --> 00:37:06.309 align:start position:0%
task or background process is an
important<00:37:04.190><c> idea</c><00:37:04.630><c> so</c><00:37:05.630><c> what</c><00:37:05.779><c> you've</c><00:37:05.900><c> seen</c><00:37:05.930><c> here</c>

00:37:06.309 --> 00:37:06.319 align:start position:0%
important idea so what you've seen here
 

00:37:06.319 --> 00:37:08.529 align:start position:0%
important idea so what you've seen here
is<00:37:06.410><c> that</c><00:37:06.440><c> the</c><00:37:06.650><c> finder</c><00:37:07.009><c> is</c><00:37:07.190><c> using</c><00:37:07.640><c> threading</c><00:37:08.059><c> to</c>

00:37:08.529 --> 00:37:08.539 align:start position:0%
is that the finder is using threading to
 

00:37:08.539 --> 00:37:11.200 align:start position:0%
is that the finder is using threading to
avoid<00:37:08.989><c> blocking</c><00:37:09.200><c> on</c><00:37:09.619><c> IO</c><00:37:10.009><c> in</c><00:37:10.430><c> case</c><00:37:11.059><c> they're</c>

00:37:11.200 --> 00:37:11.210 align:start position:0%
avoid blocking on IO in case they're
 

00:37:11.210 --> 00:37:12.640 align:start position:0%
avoid blocking on IO in case they're
accessing<00:37:11.660><c> disks</c><00:37:12.019><c> that</c><00:37:12.140><c> are</c><00:37:12.200><c> remote</c><00:37:12.470><c> for</c>

00:37:12.640 --> 00:37:12.650 align:start position:0%
accessing disks that are remote for
 

00:37:12.650 --> 00:37:14.859 align:start position:0%
accessing disks that are remote for
example<00:37:13.039><c> you've</c><00:37:13.759><c> seen</c><00:37:14.089><c> trying</c><00:37:14.479><c> to</c><00:37:14.599><c> improve</c>

00:37:14.859 --> 00:37:14.869 align:start position:0%
example you've seen trying to improve
 

00:37:14.869 --> 00:37:16.359 align:start position:0%
example you've seen trying to improve
the<00:37:14.989><c> user</c><00:37:15.140><c> experience</c><00:37:15.229><c> by</c><00:37:15.859><c> making</c><00:37:15.890><c> sure</c><00:37:16.190><c> that</c>

00:37:16.359 --> 00:37:16.369 align:start position:0%
the user experience by making sure that
 

00:37:16.369 --> 00:37:17.890 align:start position:0%
the user experience by making sure that
blocking<00:37:16.819><c> stuff</c><00:37:16.999><c> happens</c><00:37:17.420><c> on</c><00:37:17.569><c> separate</c>

00:37:17.890 --> 00:37:17.900 align:start position:0%
blocking stuff happens on separate
 

00:37:17.900 --> 00:37:19.479 align:start position:0%
blocking stuff happens on separate
threads<00:37:18.170><c> and</c><00:37:18.380><c> you've</c><00:37:18.710><c> seen</c><00:37:18.920><c> the</c><00:37:19.069><c> idea</c><00:37:19.339><c> of</c>

00:37:19.479 --> 00:37:19.489 align:start position:0%
threads and you've seen the idea of
 

00:37:19.489 --> 00:37:24.599 align:start position:0%
threads and you've seen the idea of
using<00:37:19.640><c> the</c><00:37:19.819><c> threads</c><00:37:20.089><c> for</c><00:37:20.269><c> background</c><00:37:20.749><c> actions</c>

00:37:24.599 --> 00:37:24.609 align:start position:0%
 
 

00:37:24.609 --> 00:37:27.339 align:start position:0%
 
ok<00:37:25.609><c> the</c><00:37:25.789><c> second</c><00:37:26.329><c> example</c><00:37:26.660><c> I'd</c><00:37:26.869><c> like</c><00:37:27.019><c> to</c><00:37:27.140><c> show</c>

00:37:27.339 --> 00:37:27.349 align:start position:0%
ok the second example I'd like to show
 

00:37:27.349 --> 00:37:34.690 align:start position:0%
ok the second example I'd like to show
is<00:37:27.940><c> iTunes</c><00:37:32.920><c> so</c><00:37:33.920><c> let's</c><00:37:34.039><c> go</c><00:37:34.160><c> back</c><00:37:34.190><c> to</c><00:37:34.369><c> thread</c>

00:37:34.690 --> 00:37:34.700 align:start position:0%
is iTunes so let's go back to thread
 

00:37:34.700 --> 00:37:40.229 align:start position:0%
is iTunes so let's go back to thread
viewer

00:37:40.229 --> 00:37:40.239 align:start position:0%
 
 

00:37:40.239 --> 00:37:42.849 align:start position:0%
 
and<00:37:41.239><c> we'll</c><00:37:41.839><c> see</c><00:37:41.989><c> there's</c><00:37:42.169><c> a</c><00:37:42.259><c> few</c><00:37:42.380><c> more</c><00:37:42.589><c> threads</c>

00:37:42.849 --> 00:37:42.859 align:start position:0%
and we'll see there's a few more threads
 

00:37:42.859 --> 00:37:45.759 align:start position:0%
and we'll see there's a few more threads
in<00:37:42.979><c> this</c><00:37:43.189><c> so</c><00:37:43.849><c> let's</c><00:37:44.029><c> start</c><00:37:44.869><c> out</c><00:37:44.989><c> by</c><00:37:45.019><c> getting</c>

00:37:45.759 --> 00:37:45.769 align:start position:0%
in this so let's start out by getting
 

00:37:45.769 --> 00:37:54.069 align:start position:0%
in this so let's start out by getting
some<00:37:45.949><c> music</c><00:37:46.249><c> playing</c><00:37:52.449><c> okay</c><00:37:53.449><c> so</c><00:37:53.509><c> we</c><00:37:53.839><c> know</c><00:37:53.929><c> it's</c>

00:37:54.069 --> 00:37:54.079 align:start position:0%
some music playing okay so we know it's
 

00:37:54.079 --> 00:37:55.089 align:start position:0%
some music playing okay so we know it's
actually<00:37:54.229><c> playing</c><00:37:54.589><c> you</c><00:37:54.709><c> know</c><00:37:54.829><c> that</c><00:37:54.979><c> this</c>

00:37:55.089 --> 00:37:55.099 align:start position:0%
actually playing you know that this
 

00:37:55.099 --> 00:37:57.399 align:start position:0%
actually playing you know that this
isn't<00:37:55.309><c> canned</c><00:37:55.640><c> and</c><00:37:55.909><c> what</c><00:37:56.719><c> you</c><00:37:56.839><c> see</c><00:37:57.079><c> here</c><00:37:57.109><c> is</c>

00:37:57.399 --> 00:37:57.409 align:start position:0%
isn't canned and what you see here is
 

00:37:57.409 --> 00:37:59.349 align:start position:0%
isn't canned and what you see here is
the<00:37:57.529><c> activity</c><00:37:57.949><c> going</c><00:37:58.189><c> on</c><00:37:58.279><c> in</c><00:37:58.429><c> the</c><00:37:58.489><c> threads</c><00:37:58.759><c> the</c>

00:37:59.349 --> 00:37:59.359 align:start position:0%
the activity going on in the threads the
 

00:37:59.359 --> 00:38:00.909 align:start position:0%
the activity going on in the threads the
thread<00:37:59.599><c> at</c><00:37:59.719><c> the</c><00:37:59.809><c> bottom</c><00:38:00.199><c> again</c><00:38:00.469><c> is</c><00:38:00.619><c> the</c><00:38:00.739><c> main</c>

00:38:00.909 --> 00:38:00.919 align:start position:0%
thread at the bottom again is the main
 

00:38:00.919 --> 00:38:02.739 align:start position:0%
thread at the bottom again is the main
thread<00:38:01.279><c> so</c><00:38:01.729><c> it's</c><00:38:01.909><c> sitting</c><00:38:02.239><c> there</c><00:38:02.269><c> and</c><00:38:02.599><c> it's</c>

00:38:02.739 --> 00:38:02.749 align:start position:0%
thread so it's sitting there and it's
 

00:38:02.749 --> 00:38:04.359 align:start position:0%
thread so it's sitting there and it's
doing<00:38:02.959><c> all</c><00:38:03.169><c> the</c><00:38:03.289><c> UI</c><00:38:03.499><c> work</c><00:38:03.890><c> and</c><00:38:04.069><c> if</c><00:38:04.130><c> we</c><00:38:04.219><c> actually</c>

00:38:04.359 --> 00:38:04.369 align:start position:0%
doing all the UI work and if we actually
 

00:38:04.369 --> 00:38:06.880 align:start position:0%
doing all the UI work and if we actually
had<00:38:04.729><c> the</c><00:38:05.199><c> visualization</c><00:38:06.199><c> part</c><00:38:06.380><c> of</c><00:38:06.559><c> iTunes</c>

00:38:06.880 --> 00:38:06.890 align:start position:0%
had the visualization part of iTunes
 

00:38:06.890 --> 00:38:08.229 align:start position:0%
had the visualization part of iTunes
going<00:38:07.159><c> you'd</c><00:38:07.279><c> see</c><00:38:07.429><c> that</c><00:38:07.579><c> thread</c><00:38:07.759><c> basically</c>

00:38:08.229 --> 00:38:08.239 align:start position:0%
going you'd see that thread basically
 

00:38:08.239 --> 00:38:11.439 align:start position:0%
going you'd see that thread basically
pegging<00:38:08.569><c> out</c><00:38:08.689><c> constantly</c><00:38:09.109><c> running</c><00:38:10.269><c> the</c><00:38:11.269><c> next</c>

00:38:11.439 --> 00:38:11.449 align:start position:0%
pegging out constantly running the next
 

00:38:11.449 --> 00:38:14.289 align:start position:0%
pegging out constantly running the next
thread<00:38:11.809><c> up</c><00:38:12.099><c> represents</c><00:38:13.099><c> basically</c><00:38:13.579><c> data</c><00:38:13.819><c> Cola</c>

00:38:14.289 --> 00:38:14.299 align:start position:0%
thread up represents basically data Cola
 

00:38:14.299 --> 00:38:16.959 align:start position:0%
thread up represents basically data Cola
data<00:38:15.140><c> decompression</c><00:38:15.859><c> which</c><00:38:16.549><c> is</c><00:38:16.669><c> actually</c>

00:38:16.959 --> 00:38:16.969 align:start position:0%
data decompression which is actually
 

00:38:16.969 --> 00:38:19.229 align:start position:0%
data decompression which is actually
running<00:38:17.239><c> as</c><00:38:17.359><c> a</c><00:38:17.390><c> deferred</c><00:38:17.869><c> task</c><00:38:18.109><c> and</c><00:38:18.380><c> as</c><00:38:18.890><c> a</c>

00:38:19.229 --> 00:38:19.239 align:start position:0%
running as a deferred task and as a
 

00:38:19.239 --> 00:38:23.109 align:start position:0%
running as a deferred task and as a
carbon<00:38:20.239><c> thread</c><00:38:20.979><c> what</c><00:38:21.979><c> you</c><00:38:22.099><c> also</c><00:38:22.400><c> will</c><00:38:22.729><c> see</c><00:38:22.939><c> is</c>

00:38:23.109 --> 00:38:23.119 align:start position:0%
carbon thread what you also will see is
 

00:38:23.119 --> 00:38:24.669 align:start position:0%
carbon thread what you also will see is
occasionally<00:38:23.689><c> on</c><00:38:23.809><c> this</c><00:38:23.929><c> third</c><00:38:24.229><c> thread</c>

00:38:24.669 --> 00:38:24.679 align:start position:0%
occasionally on this third thread
 

00:38:24.679 --> 00:38:26.769 align:start position:0%
occasionally on this third thread
there'll<00:38:25.309><c> be</c><00:38:25.339><c> some</c><00:38:25.609><c> green</c><00:38:26.059><c> blocks</c><00:38:26.299><c> that</c><00:38:26.479><c> go</c><00:38:26.630><c> by</c>

00:38:26.769 --> 00:38:26.779 align:start position:0%
there'll be some green blocks that go by
 

00:38:26.779 --> 00:38:28.870 align:start position:0%
there'll be some green blocks that go by
and<00:38:27.109><c> what's</c><00:38:27.979><c> happening</c><00:38:28.369><c> there</c><00:38:28.669><c> is</c><00:38:28.849><c> that</c>

00:38:28.870 --> 00:38:28.880 align:start position:0%
and what's happening there is that
 

00:38:28.880 --> 00:38:30.339 align:start position:0%
and what's happening there is that
there's<00:38:29.150><c> an</c><00:38:29.239><c> actually</c><00:38:29.630><c> a</c><00:38:29.659><c> separate</c><00:38:30.049><c> thread</c>

00:38:30.339 --> 00:38:30.349 align:start position:0%
there's an actually a separate thread
 

00:38:30.349 --> 00:38:32.349 align:start position:0%
there's an actually a separate thread
that's<00:38:30.619><c> being</c><00:38:30.829><c> used</c><00:38:31.099><c> for</c><00:38:31.459><c> accessing</c><00:38:31.969><c> the</c><00:38:32.089><c> disk</c>

00:38:32.349 --> 00:38:32.359 align:start position:0%
that's being used for accessing the disk
 

00:38:32.359 --> 00:38:34.599 align:start position:0%
that's being used for accessing the disk
and<00:38:32.599><c> so</c><00:38:33.079><c> the</c><00:38:33.169><c> idea</c><00:38:33.439><c> is</c><00:38:33.679><c> that</c><00:38:33.709><c> this</c><00:38:34.069><c> thread</c><00:38:34.400><c> goes</c>

00:38:34.599 --> 00:38:34.609 align:start position:0%
and so the idea is that this thread goes
 

00:38:34.609 --> 00:38:36.069 align:start position:0%
and so the idea is that this thread goes
off<00:38:34.819><c> and</c><00:38:34.999><c> everything</c><00:38:35.269><c> now</c><00:38:35.569><c> and</c><00:38:35.599><c> then</c><00:38:35.809><c> when</c><00:38:35.989><c> it</c>

00:38:36.069 --> 00:38:36.079 align:start position:0%
off and everything now and then when it
 

00:38:36.079 --> 00:38:38.349 align:start position:0%
off and everything now and then when it
needs<00:38:36.259><c> data</c><00:38:36.499><c> it</c><00:38:36.829><c> grabs</c><00:38:37.130><c> as</c><00:38:37.279><c> much</c><00:38:37.459><c> data</c><00:38:38.029><c> as</c><00:38:38.239><c> it</c>

00:38:38.349 --> 00:38:38.359 align:start position:0%
needs data it grabs as much data as it
 

00:38:38.359 --> 00:38:40.749 align:start position:0%
needs data it grabs as much data as it
can<00:38:38.599><c> stores</c><00:38:39.380><c> it</c><00:38:39.499><c> in</c><00:38:39.559><c> a</c><00:38:39.619><c> buffer</c><00:38:39.949><c> then</c><00:38:40.549><c> there's</c><00:38:40.699><c> a</c>

00:38:40.749 --> 00:38:40.759 align:start position:0%
can stores it in a buffer then there's a
 

00:38:40.759 --> 00:38:41.799 align:start position:0%
can stores it in a buffer then there's a
separate<00:38:41.029><c> thread</c><00:38:41.179><c> that</c><00:38:41.359><c> actually</c><00:38:41.599><c> does</c><00:38:41.719><c> the</c>

00:38:41.799 --> 00:38:41.809 align:start position:0%
separate thread that actually does the
 

00:38:41.809 --> 00:38:44.319 align:start position:0%
separate thread that actually does the
decompression<00:38:42.529><c> and</c><00:38:42.650><c> then</c><00:38:43.429><c> the</c><00:38:43.880><c> thread</c><00:38:44.150><c> at</c><00:38:44.269><c> the</c>

00:38:44.319 --> 00:38:44.329 align:start position:0%
decompression and then the thread at the
 

00:38:44.329 --> 00:38:46.149 align:start position:0%
decompression and then the thread at the
very<00:38:44.539><c> top</c><00:38:44.839><c> where</c><00:38:45.140><c> you</c><00:38:45.229><c> see</c><00:38:45.380><c> all</c><00:38:45.499><c> the</c><00:38:45.619><c> activity</c>

00:38:46.149 --> 00:38:46.159 align:start position:0%
very top where you see all the activity
 

00:38:46.159 --> 00:38:48.459 align:start position:0%
very top where you see all the activity
is<00:38:46.599><c> actually</c><00:38:47.599><c> the</c><00:38:47.689><c> thread</c><00:38:47.900><c> that</c><00:38:48.019><c> sends</c><00:38:48.289><c> data</c>

00:38:48.459 --> 00:38:48.469 align:start position:0%
is actually the thread that sends data
 

00:38:48.469 --> 00:38:51.519 align:start position:0%
is actually the thread that sends data
off<00:38:48.739><c> to</c><00:38:49.099><c> the</c><00:38:49.219><c> audio</c><00:38:49.519><c> device</c><00:38:49.699><c> on</c><00:38:50.140><c> the</c><00:38:51.140><c> disk</c><00:38:51.380><c> we</c>

00:38:51.519 --> 00:38:51.529 align:start position:0%
off to the audio device on the disk we
 

00:38:51.529 --> 00:38:53.380 align:start position:0%
off to the audio device on the disk we
want<00:38:51.709><c> to</c><00:38:51.769><c> do</c><00:38:51.859><c> large</c><00:38:52.039><c> accesses</c><00:38:52.729><c> and</c><00:38:53.029><c> we</c><00:38:53.150><c> want</c><00:38:53.329><c> to</c>

00:38:53.380 --> 00:38:53.390 align:start position:0%
want to do large accesses and we want to
 

00:38:53.390 --> 00:38:56.589 align:start position:0%
want to do large accesses and we want to
grab<00:38:53.479><c> a</c><00:38:53.539><c> huge</c><00:38:53.779><c> amount</c><00:38:54.109><c> of</c><00:38:54.169><c> data</c><00:38:54.349><c> and</c><00:38:54.679><c> then</c><00:38:55.599><c> do</c>

00:38:56.589 --> 00:38:56.599 align:start position:0%
grab a huge amount of data and then do
 

00:38:56.599 --> 00:38:58.390 align:start position:0%
grab a huge amount of data and then do
the<00:38:56.719><c> decompression</c><00:38:56.929><c> with</c><00:38:57.739><c> the</c><00:38:57.859><c> audio</c><00:38:58.130><c> device</c>

00:38:58.390 --> 00:38:58.400 align:start position:0%
the decompression with the audio device
 

00:38:58.400 --> 00:38:59.890 align:start position:0%
the decompression with the audio device
we<00:38:58.609><c> want</c><00:38:58.759><c> to</c><00:38:58.819><c> minimize</c><00:38:58.909><c> latency</c><00:38:59.269><c> and</c><00:38:59.689><c> so</c><00:38:59.779><c> the</c>

00:38:59.890 --> 00:38:59.900 align:start position:0%
we want to minimize latency and so the
 

00:38:59.900 --> 00:39:01.059 align:start position:0%
we want to minimize latency and so the
idea<00:39:00.109><c> is</c><00:39:00.229><c> we</c><00:39:00.349><c> want</c><00:39:00.529><c> to</c><00:39:00.559><c> throw</c><00:39:00.739><c> a</c><00:39:00.769><c> few</c><00:39:00.919><c> little</c>

00:39:01.059 --> 00:39:01.069 align:start position:0%
idea is we want to throw a few little
 

00:39:01.069 --> 00:39:03.099 align:start position:0%
idea is we want to throw a few little
bytes<00:39:01.339><c> at</c><00:39:01.519><c> a</c><00:39:01.579><c> time</c><00:39:01.609><c> out</c><00:39:02.089><c> to</c><00:39:02.150><c> that</c><00:39:02.449><c> audio</c><00:39:02.779><c> device</c>

00:39:03.099 --> 00:39:03.109 align:start position:0%
bytes at a time out to that audio device
 

00:39:03.109 --> 00:39:04.809 align:start position:0%
bytes at a time out to that audio device
and<00:39:03.349><c> so</c><00:39:03.769><c> by</c><00:39:03.919><c> having</c><00:39:04.039><c> that</c><00:39:04.219><c> on</c><00:39:04.429><c> a</c><00:39:04.459><c> separate</c>

00:39:04.809 --> 00:39:04.819 align:start position:0%
and so by having that on a separate
 

00:39:04.819 --> 00:39:05.979 align:start position:0%
and so by having that on a separate
thread<00:39:04.849><c> that</c><00:39:05.239><c> means</c><00:39:05.449><c> that</c><00:39:05.599><c> we</c><00:39:05.659><c> can</c><00:39:05.809><c> easily</c>

00:39:05.979 --> 00:39:05.989 align:start position:0%
thread that means that we can easily
 

00:39:05.989 --> 00:39:08.649 align:start position:0%
thread that means that we can easily
send<00:39:06.529><c> the</c><00:39:06.650><c> data</c><00:39:06.829><c> that's</c><00:39:07.069><c> needed</c><00:39:07.489><c> and</c><00:39:07.609><c> do</c><00:39:08.390><c> it</c><00:39:08.509><c> in</c>

00:39:08.649 --> 00:39:08.659 align:start position:0%
send the data that's needed and do it in
 

00:39:08.659 --> 00:39:10.209 align:start position:0%
send the data that's needed and do it in
as<00:39:08.900><c> timely</c><00:39:09.169><c> a</c><00:39:09.289><c> manner</c><00:39:09.319><c> as</c><00:39:09.619><c> possible</c><00:39:09.650><c> so</c><00:39:10.130><c> we</c>

00:39:10.209 --> 00:39:10.219 align:start position:0%
as timely a manner as possible so we
 

00:39:10.219 --> 00:39:13.390 align:start position:0%
as timely a manner as possible so we
have<00:39:10.339><c> no</c><00:39:10.489><c> dropouts</c><00:39:10.909><c> in</c><00:39:11.289><c> actuality</c><00:39:12.289><c> the</c><00:39:13.130><c> three</c>

00:39:13.390 --> 00:39:13.400 align:start position:0%
have no dropouts in actuality the three
 

00:39:13.400 --> 00:39:14.789 align:start position:0%
have no dropouts in actuality the three
threads<00:39:13.669><c> that</c><00:39:13.849><c> you</c><00:39:13.909><c> see</c><00:39:14.150><c> there</c><00:39:14.419><c> the</c>

00:39:14.789 --> 00:39:14.799 align:start position:0%
threads that you see there the
 

00:39:14.799 --> 00:39:17.769 align:start position:0%
threads that you see there the
decompression<00:39:15.799><c> the</c><00:39:16.009><c> disk</c><00:39:16.459><c> reads</c><00:39:16.759><c> and</c><00:39:17.059><c> the</c>

00:39:17.769 --> 00:39:17.779 align:start position:0%
decompression the disk reads and the
 

00:39:17.779 --> 00:39:19.749 align:start position:0%
decompression the disk reads and the
audio<00:39:18.439><c> playback</c><00:39:18.679><c> are</c><00:39:19.249><c> actually</c><00:39:19.640><c> all</c>

00:39:19.749 --> 00:39:19.759 align:start position:0%
audio playback are actually all
 

00:39:19.759 --> 00:39:21.249 align:start position:0%
audio playback are actually all
controlled<00:39:20.239><c> by</c><00:39:20.329><c> the</c><00:39:20.449><c> sound</c><00:39:20.689><c> manager</c><00:39:21.109><c> so</c>

00:39:21.249 --> 00:39:21.259 align:start position:0%
controlled by the sound manager so
 

00:39:21.259 --> 00:39:22.509 align:start position:0%
controlled by the sound manager so
they're<00:39:21.409><c> actually</c><00:39:21.529><c> not</c><00:39:21.799><c> threads</c><00:39:22.130><c> that</c><00:39:22.219><c> itunes</c>

00:39:22.509 --> 00:39:22.519 align:start position:0%
they're actually not threads that itunes
 

00:39:22.519 --> 00:39:25.419 align:start position:0%
they're actually not threads that itunes
actually<00:39:22.989><c> went</c><00:39:23.989><c> to</c><00:39:24.469><c> any</c><00:39:24.650><c> trouble</c><00:39:24.949><c> to</c><00:39:25.130><c> actually</c>

00:39:25.419 --> 00:39:25.429 align:start position:0%
actually went to any trouble to actually
 

00:39:25.429 --> 00:39:28.239 align:start position:0%
actually went to any trouble to actually
create<00:39:26.469><c> but</c><00:39:27.469><c> once</c><00:39:27.650><c> again</c><00:39:27.799><c> you're</c><00:39:28.069><c> seeing</c>

00:39:28.239 --> 00:39:28.249 align:start position:0%
create but once again you're seeing
 

00:39:28.249 --> 00:39:31.779 align:start position:0%
create but once again you're seeing
cases<00:39:28.729><c> of</c><00:39:28.969><c> iTunes</c><00:39:29.479><c> using</c><00:39:30.199><c> threading</c><00:39:30.589><c> to</c><00:39:31.279><c> avoid</c>

00:39:31.779 --> 00:39:31.789 align:start position:0%
cases of iTunes using threading to avoid
 

00:39:31.789 --> 00:39:34.149 align:start position:0%
cases of iTunes using threading to avoid
disk<00:39:31.999><c> block</c><00:39:32.209><c> or</c><00:39:32.359><c> a</c><00:39:32.390><c> blocking</c><00:39:32.839><c> on</c><00:39:32.959><c> disk</c><00:39:33.199><c> i/o</c><00:39:33.380><c> you</c>

00:39:34.149 --> 00:39:34.159 align:start position:0%
disk block or a blocking on disk i/o you
 

00:39:34.159 --> 00:39:36.489 align:start position:0%
disk block or a blocking on disk i/o you
see<00:39:34.369><c> it</c><00:39:34.489><c> trying</c><00:39:34.699><c> to</c><00:39:34.789><c> take</c><00:39:35.539><c> the</c><00:39:35.779><c> tasks</c><00:39:36.259><c> that</c><00:39:36.380><c> are</c>

00:39:36.489 --> 00:39:36.499 align:start position:0%
see it trying to take the tasks that are
 

00:39:36.499 --> 00:39:37.899 align:start position:0%
see it trying to take the tasks that are
time<00:39:36.739><c> critical</c><00:39:37.039><c> and</c><00:39:37.249><c> put</c><00:39:37.400><c> them</c><00:39:37.519><c> on</c><00:39:37.609><c> separate</c>

00:39:37.899 --> 00:39:37.909 align:start position:0%
time critical and put them on separate
 

00:39:37.909 --> 00:39:40.149 align:start position:0%
time critical and put them on separate
threads<00:39:38.239><c> and</c><00:39:38.479><c> you're</c><00:39:39.289><c> seeing</c><00:39:39.559><c> the</c><00:39:39.829><c> idea</c><00:39:40.069><c> of</c>

00:39:40.149 --> 00:39:40.159 align:start position:0%
threads and you're seeing the idea of
 

00:39:40.159 --> 00:39:41.049 align:start position:0%
threads and you're seeing the idea of
trying<00:39:40.369><c> to</c><00:39:40.459><c> make</c><00:39:40.519><c> sure</c><00:39:40.640><c> that</c><00:39:40.789><c> you</c><00:39:40.939><c> can</c>

00:39:41.049 --> 00:39:41.059 align:start position:0%
trying to make sure that you can
 

00:39:41.059 --> 00:39:42.609 align:start position:0%
trying to make sure that you can
parallel<00:39:41.419><c> eyes</c><00:39:41.569><c> the</c><00:39:41.719><c> code</c><00:39:41.900><c> by</c><00:39:42.079><c> breaking</c><00:39:42.499><c> the</c>

00:39:42.609 --> 00:39:42.619 align:start position:0%
parallel eyes the code by breaking the
 

00:39:42.619 --> 00:39:44.829 align:start position:0%
parallel eyes the code by breaking the
major<00:39:42.829><c> parts</c><00:39:43.429><c> of</c><00:39:43.640><c> sort</c><00:39:44.390><c> of</c><00:39:44.449><c> this</c><00:39:44.509><c> pipe</c><00:39:44.719><c> and</c>

00:39:44.829 --> 00:39:44.839 align:start position:0%
major parts of sort of this pipe and
 

00:39:44.839 --> 00:39:48.999 align:start position:0%
major parts of sort of this pipe and
filter<00:39:45.140><c> model</c><00:39:45.319><c> into</c><00:39:46.219><c> separate</c><00:39:46.549><c> threads</c><00:39:48.009><c> okay</c>

00:39:48.999 --> 00:39:49.009 align:start position:0%
filter model into separate threads okay
 

00:39:49.009 --> 00:39:50.559 align:start position:0%
filter model into separate threads okay
these<00:39:49.279><c> were</c><00:39:49.339><c> just</c><00:39:49.579><c> two</c><00:39:49.759><c> examples</c><00:39:49.880><c> about</c><00:39:50.419><c> how</c>

00:39:50.559 --> 00:39:50.569 align:start position:0%
these were just two examples about how
 

00:39:50.569 --> 00:39:52.570 align:start position:0%
these were just two examples about how
Apple<00:39:50.749><c> is</c><00:39:51.169><c> actually</c><00:39:51.529><c> using</c><00:39:51.769><c> threading</c>

00:39:52.570 --> 00:39:52.580 align:start position:0%
Apple is actually using threading
 

00:39:52.580 --> 00:39:53.860 align:start position:0%
Apple is actually using threading
hopefully<00:39:52.760><c> the</c><00:39:52.850><c> people</c><00:39:52.970><c> who</c><00:39:53.240><c> are</c><00:39:53.510><c> available</c>

00:39:53.860 --> 00:39:53.870 align:start position:0%
hopefully the people who are available
 

00:39:53.870 --> 00:39:54.940 align:start position:0%
hopefully the people who are available
for<00:39:53.960><c> Q&amp;A</c><00:39:54.290><c> can</c><00:39:54.470><c> give</c><00:39:54.590><c> you</c><00:39:54.650><c> some</c><00:39:54.800><c> more</c><00:39:54.890><c> ideas</c>

00:39:54.940 --> 00:39:54.950 align:start position:0%
for Q&amp;A can give you some more ideas
 

00:39:54.950 --> 00:39:57.250 align:start position:0%
for Q&amp;A can give you some more ideas
about<00:39:55.300><c> when</c><00:39:56.300><c> to</c><00:39:56.420><c> use</c><00:39:56.570><c> threading</c><00:39:56.900><c> and</c><00:39:57.020><c> when</c><00:39:57.110><c> not</c>

00:39:57.250 --> 00:39:57.260 align:start position:0%
about when to use threading and when not
 

00:39:57.260 --> 00:40:06.040 align:start position:0%
about when to use threading and when not
to<00:39:57.320><c> you</c><00:39:57.530><c> thank</c><00:39:58.400><c> you</c><00:40:04.630><c> thanks</c><00:40:05.630><c> Robert</c>

00:40:06.040 --> 00:40:06.050 align:start position:0%
to you thank you thanks Robert
 

00:40:06.050 --> 00:40:10.660 align:start position:0%
to you thank you thanks Robert
so<00:40:06.650><c> the</c><00:40:07.810><c> second</c><00:40:08.810><c> demo</c><00:40:09.080><c> we</c><00:40:09.200><c> have</c><00:40:09.230><c> is</c><00:40:09.680><c> Yvonne</c>

00:40:10.660 --> 00:40:10.670 align:start position:0%
so the second demo we have is Yvonne
 

00:40:10.670 --> 00:40:12.790 align:start position:0%
so the second demo we have is Yvonne
posta<00:40:11.120><c> who</c><00:40:11.420><c> works</c><00:40:11.870><c> on</c><00:40:12.020><c> the</c><00:40:12.140><c> job</c><00:40:12.320><c> of</c><00:40:12.500><c> virtual</c>

00:40:12.790 --> 00:40:12.800 align:start position:0%
posta who works on the job of virtual
 

00:40:12.800 --> 00:40:15.550 align:start position:0%
posta who works on the job of virtual
machine<00:40:13.220><c> and</c><00:40:13.460><c> as</c><00:40:14.390><c> I</c><00:40:14.810><c> said</c><00:40:14.870><c> earlier</c><00:40:15.290><c> there</c><00:40:15.530><c> are</c>

00:40:15.550 --> 00:40:15.560 align:start position:0%
machine and as I said earlier there are
 

00:40:15.560 --> 00:40:18.040 align:start position:0%
machine and as I said earlier there are
definitely<00:40:16.310><c> cases</c><00:40:16.370><c> where</c><00:40:17.000><c> your</c><00:40:17.540><c> application</c>

00:40:18.040 --> 00:40:18.050 align:start position:0%
definitely cases where your application
 

00:40:18.050 --> 00:40:21.640 align:start position:0%
definitely cases where your application
is<00:40:18.700><c> more</c><00:40:19.700><c> inclined</c><00:40:20.630><c> to</c><00:40:20.810><c> be</c><00:40:20.990><c> multi-threaded</c>

00:40:21.640 --> 00:40:21.650 align:start position:0%
is more inclined to be multi-threaded
 

00:40:21.650 --> 00:40:23.170 align:start position:0%
is more inclined to be multi-threaded
especially<00:40:22.130><c> if</c><00:40:22.190><c> you</c><00:40:22.280><c> have</c><00:40:22.400><c> lots</c><00:40:22.550><c> of</c><00:40:22.760><c> data</c><00:40:22.940><c> that</c>

00:40:23.170 --> 00:40:23.180 align:start position:0%
especially if you have lots of data that
 

00:40:23.180 --> 00:40:25.240 align:start position:0%
especially if you have lots of data that
can<00:40:23.330><c> be</c><00:40:23.360><c> operated</c><00:40:24.110><c> on</c><00:40:24.170><c> in</c><00:40:24.200><c> parallel</c><00:40:24.740><c> so</c><00:40:24.950><c> he's</c>

00:40:25.240 --> 00:40:25.250 align:start position:0%
can be operated on in parallel so he's
 

00:40:25.250 --> 00:40:26.680 align:start position:0%
can be operated on in parallel so he's
going<00:40:25.400><c> to</c><00:40:25.460><c> give</c><00:40:25.580><c> us</c><00:40:25.670><c> an</c><00:40:25.790><c> example</c><00:40:26.060><c> of</c><00:40:26.450><c> an</c>

00:40:26.680 --> 00:40:26.690 align:start position:0%
going to give us an example of an
 

00:40:26.690 --> 00:40:29.980 align:start position:0%
going to give us an example of an
application<00:40:26.840><c> where</c><00:40:27.730><c> this</c><00:40:28.730><c> is</c><00:40:29.030><c> the</c><00:40:29.510><c> case</c><00:40:29.540><c> and</c>

00:40:29.980 --> 00:40:29.990 align:start position:0%
application where this is the case and
 

00:40:29.990 --> 00:40:33.600 align:start position:0%
application where this is the case and
helps<00:40:30.170><c> out</c><00:40:30.290><c> a</c><00:40:30.320><c> lot</c><00:40:31.510><c> okay</c><00:40:32.510><c> good</c><00:40:32.690><c> morning</c>

00:40:33.600 --> 00:40:33.610 align:start position:0%
helps out a lot okay good morning
 

00:40:33.610 --> 00:40:35.770 align:start position:0%
helps out a lot okay good morning
what<00:40:34.610><c> I</c><00:40:34.640><c> have</c><00:40:34.940><c> is</c><00:40:35.210><c> basically</c><00:40:35.480><c> a</c><00:40:35.660><c> digital</c>

00:40:35.770 --> 00:40:35.780 align:start position:0%
what I have is basically a digital
 

00:40:35.780 --> 00:40:39.400 align:start position:0%
what I have is basically a digital
elevation<00:40:36.110><c> model</c><00:40:36.950><c> from</c><00:40:37.660><c> Switzerland</c><00:40:38.660><c> and</c><00:40:38.930><c> I</c>

00:40:39.400 --> 00:40:39.410 align:start position:0%
elevation model from Switzerland and I
 

00:40:39.410 --> 00:40:42.220 align:start position:0%
elevation model from Switzerland and I
wrote<00:40:39.650><c> a</c><00:40:39.680><c> swing</c><00:40:40.130><c> app</c><00:40:40.370><c> that</c><00:40:41.150><c> basically</c><00:40:41.450><c> render</c>

00:40:42.220 --> 00:40:42.230 align:start position:0%
wrote a swing app that basically render
 

00:40:42.230 --> 00:40:45.910 align:start position:0%
wrote a swing app that basically render
scenes<00:40:42.620><c> within</c><00:40:43.220><c> Switzerland</c><00:40:43.910><c> so</c><00:40:44.090><c> I</c><00:40:44.330><c> have</c><00:40:44.930><c> a</c><00:40:44.960><c> UI</c>

00:40:45.910 --> 00:40:45.920 align:start position:0%
scenes within Switzerland so I have a UI
 

00:40:45.920 --> 00:40:48.670 align:start position:0%
scenes within Switzerland so I have a UI
element<00:40:46.040><c> down</c><00:40:46.580><c> here</c><00:40:46.640><c> swing</c><00:40:47.150><c> it</c><00:40:47.390><c> says</c><00:40:48.020><c> one</c><00:40:48.290><c> so</c>

00:40:48.670 --> 00:40:48.680 align:start position:0%
element down here swing it says one so
 

00:40:48.680 --> 00:40:52.530 align:start position:0%
element down here swing it says one so
I'll<00:40:48.980><c> spawn</c><00:40:49.370><c> this</c><00:40:49.810><c> rendering</c><00:40:50.810><c> in</c><00:40:51.020><c> one</c><00:40:51.500><c> thread</c>

00:40:52.530 --> 00:40:52.540 align:start position:0%
I'll spawn this rendering in one thread
 

00:40:52.540 --> 00:40:56.830 align:start position:0%
I'll spawn this rendering in one thread
so<00:40:53.540><c> it</c><00:40:53.600><c> goes</c><00:40:53.780><c> off</c><00:40:54.020><c> it</c><00:40:54.740><c> tiles</c><00:40:55.520><c> the</c><00:40:55.760><c> the</c><00:40:56.510><c> image</c>

00:40:56.830 --> 00:40:56.840 align:start position:0%
so it goes off it tiles the the image
 

00:40:56.840 --> 00:41:00.310 align:start position:0%
so it goes off it tiles the the image
into<00:40:57.310><c> small</c><00:40:58.310><c> pieces</c><00:40:58.520><c> and</c><00:40:59.060><c> does</c><00:41:00.020><c> that</c><00:41:00.200><c> on</c>

00:41:00.310 --> 00:41:00.320 align:start position:0%
into small pieces and does that on
 

00:41:00.320 --> 00:41:02.740 align:start position:0%
into small pieces and does that on
thread<00:41:00.650><c> you</c><00:41:00.800><c> see</c><00:41:01.010><c> in</c><00:41:01.250><c> the</c><00:41:01.370><c> task</c><00:41:01.610><c> manager</c><00:41:01.880><c> one</c>

00:41:02.740 --> 00:41:02.750 align:start position:0%
thread you see in the task manager one
 

00:41:02.750 --> 00:41:05.650 align:start position:0%
thread you see in the task manager one
CPU<00:41:03.020><c> is</c><00:41:03.380><c> usually</c><00:41:03.740><c> used</c><00:41:03.950><c> and</c><00:41:04.250><c> the</c><00:41:04.910><c> other</c><00:41:05.030><c> CPU</c><00:41:05.450><c> is</c>

00:41:05.650 --> 00:41:05.660 align:start position:0%
CPU is usually used and the other CPU is
 

00:41:05.660 --> 00:41:08.800 align:start position:0%
CPU is usually used and the other CPU is
Java<00:41:06.260><c> UI</c><00:41:06.500><c> making</c><00:41:07.070><c> use</c><00:41:07.250><c> of</c><00:41:07.280><c> the</c><00:41:07.810><c> spare</c>

00:41:08.800 --> 00:41:08.810 align:start position:0%
Java UI making use of the spare
 

00:41:08.810 --> 00:41:11.200 align:start position:0%
Java UI making use of the spare
processing<00:41:09.410><c> power</c><00:41:09.620><c> to</c><00:41:09.800><c> display</c><00:41:10.250><c> so</c><00:41:10.880><c> we</c><00:41:10.910><c> saw</c>

00:41:11.200 --> 00:41:11.210 align:start position:0%
processing power to display so we saw
 

00:41:11.210 --> 00:41:13.530 align:start position:0%
processing power to display so we saw
that<00:41:11.480><c> it</c><00:41:11.630><c> took</c><00:41:11.840><c> fifteen</c><00:41:12.320><c> point</c><00:41:12.650><c> seven</c><00:41:12.830><c> seconds</c>

00:41:13.530 --> 00:41:13.540 align:start position:0%
that it took fifteen point seven seconds
 

00:41:13.540 --> 00:41:16.600 align:start position:0%
that it took fifteen point seven seconds
to<00:41:14.540><c> display</c><00:41:14.960><c> this</c><00:41:15.110><c> image</c><00:41:15.410><c> if</c><00:41:15.890><c> I</c><00:41:16.070><c> go</c><00:41:16.220><c> to</c><00:41:16.280><c> two</c><00:41:16.580><c> or</c>

00:41:16.600 --> 00:41:16.610 align:start position:0%
to display this image if I go to two or
 

00:41:16.610 --> 00:41:19.750 align:start position:0%
to display this image if I go to two or
even<00:41:16.940><c> three</c><00:41:17.150><c> threads</c><00:41:17.660><c> on</c><00:41:17.870><c> this</c><00:41:18.110><c> machine</c><00:41:18.800><c> when</c>

00:41:19.750 --> 00:41:19.760 align:start position:0%
even three threads on this machine when
 

00:41:19.760 --> 00:41:24.100 align:start position:0%
even three threads on this machine when
I<00:41:20.260><c> restart</c><00:41:21.260><c> this</c><00:41:21.500><c> image</c><00:41:21.800><c> we</c><00:41:22.610><c> see</c><00:41:22.820><c> that</c><00:41:22.940><c> the</c><00:41:23.930><c> UI</c>

00:41:24.100 --> 00:41:24.110 align:start position:0%
I restart this image we see that the UI
 

00:41:24.110 --> 00:41:25.360 align:start position:0%
I restart this image we see that the UI
updates<00:41:24.470><c> much</c><00:41:24.950><c> quicker</c>

00:41:25.360 --> 00:41:25.370 align:start position:0%
updates much quicker
 

00:41:25.370 --> 00:41:29.820 align:start position:0%
updates much quicker
it's<00:41:26.120><c> pegging</c><00:41:26.540><c> both</c><00:41:26.690><c> the</c><00:41:26.900><c> CPUs</c><00:41:28.390><c> calculating</c>

00:41:29.820 --> 00:41:29.830 align:start position:0%
it's pegging both the CPUs calculating
 

00:41:29.830 --> 00:41:34.930 align:start position:0%
it's pegging both the CPUs calculating
so<00:41:30.830><c> what</c><00:41:31.340><c> else</c><00:41:31.580><c> do</c><00:41:31.730><c> I</c><00:41:31.760><c> have</c><00:41:31.850><c> I</c><00:41:33.550><c> can</c><00:41:34.550><c> do</c><00:41:34.640><c> the</c><00:41:34.760><c> same</c>

00:41:34.930 --> 00:41:34.940 align:start position:0%
so what else do I have I can do the same
 

00:41:34.940 --> 00:41:36.310 align:start position:0%
so what else do I have I can do the same
thing<00:41:35.150><c> with</c><00:41:35.330><c> the</c><00:41:35.420><c> satellite</c><00:41:35.840><c> image</c><00:41:36.110><c> just</c>

00:41:36.310 --> 00:41:36.320 align:start position:0%
thing with the satellite image just
 

00:41:36.320 --> 00:41:42.340 align:start position:0%
thing with the satellite image just
taking<00:41:36.650><c> the</c><00:41:40.300><c> taking</c><00:41:41.300><c> the</c><00:41:41.540><c> same</c><00:41:41.720><c> data</c><00:41:41.930><c> model</c>

00:41:42.340 --> 00:41:42.350 align:start position:0%
taking the taking the same data model
 

00:41:42.350 --> 00:41:44.440 align:start position:0%
taking the taking the same data model
and<00:41:42.530><c> while</c><00:41:43.010><c> it's</c><00:41:43.220><c> calculating</c><00:41:43.910><c> I</c><00:41:44.000><c> can</c><00:41:44.180><c> scroll</c>

00:41:44.440 --> 00:41:44.450 align:start position:0%
and while it's calculating I can scroll
 

00:41:44.450 --> 00:41:51.880 align:start position:0%
and while it's calculating I can scroll
in<00:41:44.690><c> the</c><00:41:44.810><c> indie</c><00:41:45.140><c> UI</c><00:41:45.170><c> here</c><00:41:45.740><c> and</c><00:41:49.300><c> still</c><00:41:50.300><c> use</c><00:41:51.290><c> use</c>

00:41:51.880 --> 00:41:51.890 align:start position:0%
in the indie UI here and still use use
 

00:41:51.890 --> 00:41:55.140 align:start position:0%
in the indie UI here and still use use
the<00:41:52.040><c> UI</c><00:41:52.190><c> why</c><00:41:52.490><c> it's</c><00:41:52.640><c> calculating</c><00:41:53.240><c> the</c><00:41:53.300><c> stuff</c><00:41:53.770><c> so</c>

00:41:55.140 --> 00:41:55.150 align:start position:0%
the UI why it's calculating the stuff so
 

00:41:55.150 --> 00:41:57.490 align:start position:0%
the UI why it's calculating the stuff so
Java<00:41:56.150><c> itself</c><00:41:56.510><c> has</c><00:41:56.750><c> built-in</c><00:41:57.050><c> support</c><00:41:57.230><c> for</c>

00:41:57.490 --> 00:41:57.500 align:start position:0%
Java itself has built-in support for
 

00:41:57.500 --> 00:42:02.770 align:start position:0%
Java itself has built-in support for
threading<00:41:58.150><c> in</c><00:41:59.150><c> language</c><00:42:00.670><c> it's</c><00:42:01.670><c> rather</c><00:42:02.660><c> easy</c>

00:42:02.770 --> 00:42:02.780 align:start position:0%
threading in language it's rather easy
 

00:42:02.780 --> 00:42:05.530 align:start position:0%
threading in language it's rather easy
to<00:42:03.170><c> use</c><00:42:03.320><c> threading</c><00:42:03.800><c> rather</c><00:42:04.250><c> easy</c>

00:42:05.530 --> 00:42:05.540 align:start position:0%
to use threading rather easy
 

00:42:05.540 --> 00:42:08.110 align:start position:0%
to use threading rather easy
for<00:42:05.630><c> us</c><00:42:05.780><c> to</c><00:42:06.710><c> update</c><00:42:07.100><c> the</c><00:42:07.250><c> UI</c><00:42:07.400><c> at</c><00:42:07.670><c> the</c><00:42:07.760><c> same</c><00:42:07.940><c> time</c>

00:42:08.110 --> 00:42:08.120 align:start position:0%
for us to update the UI at the same time
 

00:42:08.120 --> 00:42:12.040 align:start position:0%
for us to update the UI at the same time
as<00:42:08.240><c> you</c><00:42:08.360><c> do</c><00:42:08.450><c> calculation</c><00:42:10.720><c> that's</c><00:42:11.720><c> that's</c>

00:42:12.040 --> 00:42:12.050 align:start position:0%
as you do calculation that's that's
 

00:42:12.050 --> 00:42:12.610 align:start position:0%
as you do calculation that's that's
about<00:42:12.170><c> it</c>

00:42:12.610 --> 00:42:12.620 align:start position:0%
about it
 

00:42:12.620 --> 00:42:13.960 align:start position:0%
about it
so<00:42:12.800><c> how</c><00:42:12.950><c> much</c><00:42:13.070><c> what</c><00:42:13.460><c> was</c><00:42:13.580><c> the</c><00:42:13.670><c> performance</c>

00:42:13.960 --> 00:42:13.970 align:start position:0%
so how much what was the performance
 

00:42:13.970 --> 00:42:16.660 align:start position:0%
so how much what was the performance
benefit<00:42:14.570><c> you</c><00:42:14.660><c> saw</c><00:42:14.870><c> with</c><00:42:15.110><c> your</c><00:42:15.460><c> multiplier</c><00:42:16.460><c> in</c>

00:42:16.660 --> 00:42:16.670 align:start position:0%
benefit you saw with your multiplier in
 

00:42:16.670 --> 00:42:20.350 align:start position:0%
benefit you saw with your multiplier in
example<00:42:17.060><c> four</c><00:42:18.160><c> for</c><00:42:19.160><c> this</c><00:42:19.250><c> calculation</c><00:42:19.520><c> it</c><00:42:20.150><c> was</c>

00:42:20.350 --> 00:42:20.360 align:start position:0%
example four for this calculation it was
 

00:42:20.360 --> 00:42:22.150 align:start position:0%
example four for this calculation it was
about<00:42:20.630><c> one</c><00:42:21.020><c> point</c><00:42:21.230><c> eight</c><00:42:21.380><c> scale</c><00:42:21.800><c> a</c><00:42:22.100><c> scale</c>

00:42:22.150 --> 00:42:22.160 align:start position:0%
about one point eight scale a scale
 

00:42:22.160 --> 00:42:24.460 align:start position:0%
about one point eight scale a scale
factor<00:42:22.640><c> so</c><00:42:23.000><c> that's</c><00:42:23.180><c> pretty</c><00:42:23.390><c> good</c><00:42:23.570><c> if</c><00:42:23.840><c> you</c>

00:42:24.460 --> 00:42:24.470 align:start position:0%
factor so that's pretty good if you
 

00:42:24.470 --> 00:42:26.920 align:start position:0%
factor so that's pretty good if you
consider<00:42:24.830><c> that</c><00:42:25.270><c> part</c><00:42:26.270><c> of</c><00:42:26.360><c> the</c><00:42:26.480><c> update</c><00:42:26.780><c> is</c>

00:42:26.920 --> 00:42:26.930 align:start position:0%
consider that part of the update is
 

00:42:26.930 --> 00:42:28.900 align:start position:0%
consider that part of the update is
happening<00:42:27.410><c> while</c><00:42:27.830><c> you're</c><00:42:28.040><c> calculating</c><00:42:28.280><c> it's</c>

00:42:28.900 --> 00:42:28.910 align:start position:0%
happening while you're calculating it's
 

00:42:28.910 --> 00:42:31.200 align:start position:0%
happening while you're calculating it's
it's<00:42:29.330><c> pretty</c><00:42:29.600><c> using</c><00:42:30.350><c> the</c><00:42:30.440><c> processors</c><00:42:31.070><c> that</c>

00:42:31.200 --> 00:42:31.210 align:start position:0%
it's pretty using the processors that
 

00:42:31.210 --> 00:42:34.810 align:start position:0%
it's pretty using the processors that
machspeed<00:42:32.440><c> so</c><00:42:33.440><c> it's</c><00:42:33.680><c> it's</c><00:42:33.890><c> also</c><00:42:34.040><c> a</c><00:42:34.160><c> feature</c><00:42:34.460><c> of</c>

00:42:34.810 --> 00:42:34.820 align:start position:0%
machspeed so it's it's also a feature of
 

00:42:34.820 --> 00:42:37.510 align:start position:0%
machspeed so it's it's also a feature of
the<00:42:35.570><c> swing</c><00:42:35.840><c> implementation</c><00:42:36.500><c> that</c><00:42:36.590><c> the</c>

00:42:37.510 --> 00:42:37.520 align:start position:0%
the swing implementation that the
 

00:42:37.520 --> 00:42:39.160 align:start position:0%
the swing implementation that the
developer<00:42:38.330><c> doesn't</c><00:42:38.510><c> have</c><00:42:38.720><c> to</c><00:42:38.840><c> worry</c><00:42:39.020><c> about</c>

00:42:39.160 --> 00:42:39.170 align:start position:0%
developer doesn't have to worry about
 

00:42:39.170 --> 00:42:41.800 align:start position:0%
developer doesn't have to worry about
the<00:42:40.010><c> locking</c><00:42:40.460><c> for</c><00:42:40.730><c> drawing</c><00:42:41.060><c> to</c><00:42:41.240><c> the</c><00:42:41.270><c> UI</c><00:42:41.510><c> that</c>

00:42:41.800 --> 00:42:41.810 align:start position:0%
the locking for drawing to the UI that
 

00:42:41.810 --> 00:42:43.420 align:start position:0%
the locking for drawing to the UI that
just<00:42:42.020><c> happens</c><00:42:42.350><c> for</c><00:42:42.560><c> them</c><00:42:42.710><c> that</c><00:42:42.890><c> happened</c><00:42:43.310><c> that</c>

00:42:43.420 --> 00:42:43.430 align:start position:0%
just happens for them that happened that
 

00:42:43.430 --> 00:42:45.910 align:start position:0%
just happens for them that happened that
happens<00:42:43.790><c> behind</c><00:42:44.660><c> the</c><00:42:44.870><c> scenes</c><00:42:44.930><c> for</c><00:42:45.380><c> the</c><00:42:45.740><c> user</c>

00:42:45.910 --> 00:42:45.920 align:start position:0%
happens behind the scenes for the user
 

00:42:45.920 --> 00:42:48.310 align:start position:0%
happens behind the scenes for the user
you<00:42:46.130><c> just</c><00:42:46.340><c> say</c><00:42:46.520><c> repaint</c><00:42:47.150><c> this</c><00:42:47.300><c> area</c><00:42:47.720><c> here's</c>

00:42:48.310 --> 00:42:48.320 align:start position:0%
you just say repaint this area here's
 

00:42:48.320 --> 00:42:52.090 align:start position:0%
you just say repaint this area here's
your<00:42:48.530><c> new</c><00:42:48.680><c> image</c><00:42:49.060><c> that's</c><00:42:50.060><c> it</c><00:42:50.620><c> great</c><00:42:51.620><c> thanks</c>

00:42:52.090 --> 00:42:52.100 align:start position:0%
your new image that's it great thanks
 

00:42:52.100 --> 00:43:04.120 align:start position:0%
your new image that's it great thanks
Yvonne<00:43:01.720><c> so</c><00:43:02.720><c> I'll</c><00:43:02.810><c> bring</c><00:43:02.960><c> up</c><00:43:03.110><c> mark</c><00:43:03.320><c> to</c><00:43:03.500><c> finish</c>

00:43:04.120 --> 00:43:04.130 align:start position:0%
Yvonne so I'll bring up mark to finish
 

00:43:04.130 --> 00:43:06.520 align:start position:0%
Yvonne so I'll bring up mark to finish
off<00:43:04.340><c> the</c><00:43:04.900><c> information</c><00:43:05.900><c> about</c><00:43:06.140><c> this</c><00:43:06.290><c> session</c>

00:43:06.520 --> 00:43:06.530 align:start position:0%
off the information about this session
 

00:43:06.530 --> 00:43:14.380 align:start position:0%
off the information about this session
and<00:43:06.770><c> other</c><00:43:06.980><c> sessions</c><00:43:12.820><c> so</c><00:43:13.820><c> what</c><00:43:14.000><c> I</c><00:43:14.030><c> wanted</c><00:43:14.300><c> to</c>

00:43:14.380 --> 00:43:14.390 align:start position:0%
and other sessions so what I wanted to
 

00:43:14.390 --> 00:43:16.240 align:start position:0%
and other sessions so what I wanted to
do<00:43:14.540><c> is</c><00:43:14.720><c> bring</c><00:43:15.080><c> up</c><00:43:15.170><c> a</c><00:43:15.320><c> related</c><00:43:15.680><c> sessions</c><00:43:15.890><c> that</c>

00:43:16.240 --> 00:43:16.250 align:start position:0%
do is bring up a related sessions that
 

00:43:16.250 --> 00:43:17.500 align:start position:0%
do is bring up a related sessions that
you<00:43:16.310><c> might</c><00:43:16.550><c> be</c><00:43:16.670><c> interested</c><00:43:16.880><c> in</c><00:43:17.150><c> furthering</c>

00:43:17.500 --> 00:43:17.510 align:start position:0%
you might be interested in furthering
 

00:43:17.510 --> 00:43:21.340 align:start position:0%
you might be interested in furthering
your<00:43:18.080><c> knowledge</c><00:43:18.860><c> about</c><00:43:19.360><c> tuning</c><00:43:20.360><c> and</c><00:43:20.570><c> specific</c>

00:43:21.340 --> 00:43:21.350 align:start position:0%
your knowledge about tuning and specific
 

00:43:21.350 --> 00:43:23.310 align:start position:0%
your knowledge about tuning and specific
areas<00:43:21.650><c> of</c><00:43:21.860><c> how</c><00:43:22.160><c> to</c><00:43:22.220><c> get</c><00:43:22.400><c> Hardware</c>

00:43:23.310 --> 00:43:23.320 align:start position:0%
areas of how to get Hardware
 

00:43:23.320 --> 00:43:26.680 align:start position:0%
areas of how to get Hardware
advancements<00:43:24.320><c> here</c><00:43:24.440><c> so</c><00:43:25.100><c> session</c><00:43:26.030><c> 121</c><00:43:26.510><c> with</c>

00:43:26.680 --> 00:43:26.690 align:start position:0%
advancements here so session 121 with
 

00:43:26.690 --> 00:43:29.800 align:start position:0%
advancements here so session 121 with
carbon<00:43:26.990><c> performance</c><00:43:27.410><c> tuning</c><00:43:28.150><c> which</c><00:43:29.150><c> Robert</c>

00:43:29.800 --> 00:43:29.810 align:start position:0%
carbon performance tuning which Robert
 

00:43:29.810 --> 00:43:32.260 align:start position:0%
carbon performance tuning which Robert
will<00:43:30.020><c> be</c><00:43:30.140><c> at</c><00:43:30.290><c> advanced</c><00:43:31.100><c> cocoa</c><00:43:31.460><c> topics</c><00:43:31.940><c> or</c>

00:43:32.260 --> 00:43:32.270 align:start position:0%
will be at advanced cocoa topics or
 

00:43:32.270 --> 00:43:35.260 align:start position:0%
will be at advanced cocoa topics or
session<00:43:32.630><c> 123</c><00:43:33.320><c> and</c><00:43:33.530><c> the</c><00:43:34.310><c> Darwin</c><00:43:34.670><c> kernel</c><00:43:35.090><c> and</c>

00:43:35.260 --> 00:43:35.270 align:start position:0%
session 123 and the Darwin kernel and
 

00:43:35.270 --> 00:43:37.840 align:start position:0%
session 123 and the Darwin kernel and
session<00:43:35.900><c> 140</c><00:43:36.440><c> I</c><00:43:36.590><c> also</c><00:43:36.950><c> want</c><00:43:37.250><c> to</c><00:43:37.310><c> add</c><00:43:37.460><c> that</c>

00:43:37.840 --> 00:43:37.850 align:start position:0%
session 140 I also want to add that
 

00:43:37.850 --> 00:43:39.370 align:start position:0%
session 140 I also want to add that
there<00:43:38.270><c> will</c><00:43:38.390><c> be</c><00:43:38.420><c> a</c><00:43:38.510><c> birds</c><00:43:38.780><c> of</c><00:43:38.870><c> the</c><00:43:38.930><c> feathers</c><00:43:39.350><c> a</c>

00:43:39.370 --> 00:43:39.380 align:start position:0%
there will be a birds of the feathers a
 

00:43:39.380 --> 00:43:42.130 align:start position:0%
there will be a birds of the feathers a
session<00:43:40.070><c> at</c><00:43:40.190><c> the</c><00:43:40.220><c> end</c><00:43:40.520><c> of</c><00:43:40.700><c> the</c><00:43:40.820><c> evening</c><00:43:41.720><c> today</c>

00:43:42.130 --> 00:43:42.140 align:start position:0%
session at the end of the evening today
 

00:43:42.140 --> 00:43:46.920 align:start position:0%
session at the end of the evening today
at<00:43:42.470><c> 6</c><00:43:42.800><c> p.m.</c><00:43:43.130><c> here</c><00:43:43.910><c> in</c><00:43:44.540><c> Hall</c><00:43:45.050><c> C</c><00:43:45.620><c> I</c><00:43:45.650><c> believe</c><00:43:45.980><c> it</c><00:43:46.070><c> is</c>

00:43:46.920 --> 00:43:46.930 align:start position:0%
at 6 p.m. here in Hall C I believe it is
 

00:43:46.930 --> 00:43:50.110 align:start position:0%
at 6 p.m. here in Hall C I believe it is
with<00:43:47.930><c> velocity</c><00:43:48.770><c> engine</c><00:43:49.010><c> so</c><00:43:49.220><c> we'll</c><00:43:49.490><c> we</c><00:43:49.970><c> will</c>

00:43:50.110 --> 00:43:50.120 align:start position:0%
with velocity engine so we'll we will
 

00:43:50.120 --> 00:43:52.000 align:start position:0%
with velocity engine so we'll we will
actually<00:43:50.240><c> discuss</c><00:43:50.870><c> with</c><00:43:51.380><c> the</c><00:43:51.500><c> updates</c><00:43:51.830><c> on</c>

00:43:52.000 --> 00:43:52.010 align:start position:0%
actually discuss with the updates on
 

00:43:52.010 --> 00:43:53.410 align:start position:0%
actually discuss with the updates on
velocity<00:43:52.280><c> engine</c><00:43:52.790><c> we</c><00:43:52.910><c> wanted</c><00:43:53.150><c> to</c><00:43:53.210><c> kind</c><00:43:53.330><c> of</c>

00:43:53.410 --> 00:43:53.420 align:start position:0%
velocity engine we wanted to kind of
 

00:43:53.420 --> 00:43:54.760 align:start position:0%
velocity engine we wanted to kind of
separate<00:43:53.810><c> both</c><00:43:54.020><c> of</c><00:43:54.170><c> these</c><00:43:54.260><c> topics</c><00:43:54.500><c> and</c>

00:43:54.760 --> 00:43:54.770 align:start position:0%
separate both of these topics and
 

00:43:54.770 --> 00:43:56.740 align:start position:0%
separate both of these topics and
allocate<00:43:55.430><c> as</c><00:43:55.520><c> much</c><00:43:55.670><c> time</c><00:43:55.850><c> as</c><00:43:56.030><c> we</c><00:43:56.060><c> could</c><00:43:56.450><c> to</c>

00:43:56.740 --> 00:43:56.750 align:start position:0%
allocate as much time as we could to
 

00:43:56.750 --> 00:44:00.100 align:start position:0%
allocate as much time as we could to
threading<00:43:58.540><c> you</c><00:43:59.540><c> know</c><00:43:59.630><c> one</c><00:43:59.780><c> of</c><00:43:59.870><c> the</c><00:43:59.930><c> things</c>

00:44:00.100 --> 00:44:00.110 align:start position:0%
threading you know one of the things
 

00:44:00.110 --> 00:44:01.660 align:start position:0%
threading you know one of the things
that<00:44:00.320><c> last</c><00:44:00.500><c> year</c><00:44:00.830><c> I</c><00:44:00.860><c> was</c><00:44:01.070><c> up</c><00:44:01.160><c> here</c><00:44:01.310><c> on</c><00:44:01.340><c> stage</c>

00:44:01.660 --> 00:44:01.670 align:start position:0%
that last year I was up here on stage
 

00:44:01.670 --> 00:44:05.170 align:start position:0%
that last year I was up here on stage
promoting<00:44:02.320><c> to</c><00:44:03.320><c> you</c><00:44:03.440><c> developers</c><00:44:04.100><c> and</c><00:44:04.910><c> at</c><00:44:05.030><c> that</c>

00:44:05.170 --> 00:44:05.180 align:start position:0%
promoting to you developers and at that
 

00:44:05.180 --> 00:44:06.730 align:start position:0%
promoting to you developers and at that
time<00:44:05.330><c> we</c><00:44:05.510><c> didn't</c><00:44:05.720><c> have</c><00:44:05.870><c> dual</c><00:44:06.230><c> processor</c>

00:44:06.730 --> 00:44:06.740 align:start position:0%
time we didn't have dual processor
 

00:44:06.740 --> 00:44:08.680 align:start position:0%
time we didn't have dual processor
systems<00:44:07.130><c> I</c><00:44:07.310><c> was</c><00:44:07.910><c> promoting</c><00:44:08.300><c> the</c><00:44:08.420><c> fact</c><00:44:08.540><c> that</c>

00:44:08.680 --> 00:44:08.690 align:start position:0%
systems I was promoting the fact that
 

00:44:08.690 --> 00:44:10.510 align:start position:0%
systems I was promoting the fact that
you<00:44:08.870><c> should</c><00:44:08.900><c> thread</c><00:44:09.260><c> your</c><00:44:09.410><c> application</c><00:44:09.980><c> kind</c>

00:44:10.510 --> 00:44:10.520 align:start position:0%
you should thread your application kind
 

00:44:10.520 --> 00:44:12.070 align:start position:0%
you should thread your application kind
of<00:44:10.640><c> not</c><00:44:10.970><c> being</c><00:44:11.120><c> able</c><00:44:11.240><c> to</c><00:44:11.360><c> tell</c><00:44:11.570><c> you</c><00:44:11.690><c> that</c><00:44:11.720><c> hey</c>

00:44:12.070 --> 00:44:12.080 align:start position:0%
of not being able to tell you that hey
 

00:44:12.080 --> 00:44:14.200 align:start position:0%
of not being able to tell you that hey
we're<00:44:12.230><c> coming</c><00:44:12.350><c> out</c><00:44:12.530><c> with</c><00:44:13.210><c> multiprocessor</c>

00:44:14.200 --> 00:44:14.210 align:start position:0%
we're coming out with multiprocessor
 

00:44:14.210 --> 00:44:16.720 align:start position:0%
we're coming out with multiprocessor
systems<00:44:14.600><c> but</c><00:44:15.140><c> you</c><00:44:15.620><c> know</c><00:44:15.740><c> if</c><00:44:15.950><c> you</c><00:44:16.160><c> thread</c><00:44:16.430><c> today</c>

00:44:16.720 --> 00:44:16.730 align:start position:0%
systems but you know if you thread today
 

00:44:16.730 --> 00:44:19.059 align:start position:0%
systems but you know if you thread today
as<00:44:17.450><c> OS</c><00:44:18.260><c> 10</c><00:44:18.500><c> matures</c>

00:44:19.059 --> 00:44:19.069 align:start position:0%
as OS 10 matures
 

00:44:19.069 --> 00:44:20.469 align:start position:0%
as OS 10 matures
and<00:44:19.160><c> was</c><00:44:19.519><c> actually</c><00:44:19.789><c> going</c><00:44:19.999><c> to</c><00:44:20.089><c> be</c><00:44:20.150><c> released</c>

00:44:20.469 --> 00:44:20.479 align:start position:0%
and was actually going to be released
 

00:44:20.479 --> 00:44:23.109 align:start position:0%
and was actually going to be released
your<00:44:21.410><c> application</c><00:44:22.009><c> will</c><00:44:22.160><c> run</c><00:44:22.339><c> faster</c><00:44:22.579><c> simply</c>

00:44:23.109 --> 00:44:23.119 align:start position:0%
your application will run faster simply
 

00:44:23.119 --> 00:44:24.939 align:start position:0%
your application will run faster simply
because<00:44:23.420><c> the</c><00:44:23.719><c> threading</c><00:44:24.019><c> model</c><00:44:24.140><c> within</c><00:44:24.410><c> OS</c><00:44:24.739><c> 10</c>

00:44:24.939 --> 00:44:24.949 align:start position:0%
because the threading model within OS 10
 

00:44:24.949 --> 00:44:26.859 align:start position:0%
because the threading model within OS 10
is<00:44:25.099><c> a</c><00:44:25.130><c> lot</c><00:44:25.339><c> more</c><00:44:25.549><c> efficient</c><00:44:25.999><c> than</c><00:44:26.420><c> what</c><00:44:26.449><c> is</c><00:44:26.839><c> in</c>

00:44:26.859 --> 00:44:26.869 align:start position:0%
is a lot more efficient than what is in
 

00:44:26.869 --> 00:44:31.120 align:start position:0%
is a lot more efficient than what is in
oh<00:44:27.440><c> s</c><00:44:27.799><c> nine</c><00:44:28.749><c> so</c><00:44:29.749><c> today</c><00:44:30.019><c> with</c><00:44:30.259><c> multiprocessor</c>

00:44:31.120 --> 00:44:31.130 align:start position:0%
oh s nine so today with multiprocessor
 

00:44:31.130 --> 00:44:32.979 align:start position:0%
oh s nine so today with multiprocessor
systems<00:44:31.549><c> you</c><00:44:31.670><c> can</c><00:44:31.789><c> see</c><00:44:31.940><c> now</c><00:44:32.150><c> why</c><00:44:32.479><c> there's</c><00:44:32.749><c> even</c>

00:44:32.979 --> 00:44:32.989 align:start position:0%
systems you can see now why there's even
 

00:44:32.989 --> 00:44:34.269 align:start position:0%
systems you can see now why there's even
more<00:44:33.170><c> of</c><00:44:33.259><c> a</c><00:44:33.349><c> reason</c><00:44:33.499><c> why</c><00:44:33.680><c> you</c><00:44:33.829><c> want</c><00:44:34.160><c> to</c>

00:44:34.269 --> 00:44:34.279 align:start position:0%
more of a reason why you want to
 

00:44:34.279 --> 00:44:36.370 align:start position:0%
more of a reason why you want to
optimize<00:44:34.670><c> your</c><00:44:34.819><c> applications</c><00:44:35.449><c> so</c><00:44:35.900><c> taking</c><00:44:36.289><c> a</c>

00:44:36.370 --> 00:44:36.380 align:start position:0%
optimize your applications so taking a
 

00:44:36.380 --> 00:44:37.989 align:start position:0%
optimize your applications so taking a
single<00:44:36.559><c> threaded</c><00:44:36.920><c> application</c><00:44:37.609><c> bringing</c><00:44:37.910><c> it</c>

00:44:37.989 --> 00:44:37.999 align:start position:0%
single threaded application bringing it
 

00:44:37.999 --> 00:44:41.519 align:start position:0%
single threaded application bringing it
over<00:44:38.119><c> to</c><00:44:39.019><c> Mac</c><00:44:39.170><c> OS</c><00:44:39.469><c> 10</c><00:44:39.499><c> you</c><00:44:40.279><c> the</c><00:44:40.640><c> customer</c>

00:44:41.519 --> 00:44:41.529 align:start position:0%
over to Mac OS 10 you the customer
 

00:44:41.529 --> 00:44:43.749 align:start position:0%
over to Mac OS 10 you the customer
experience<00:44:42.529><c> is</c><00:44:42.799><c> going</c><00:44:42.890><c> to</c><00:44:42.949><c> be</c><00:44:43.009><c> well</c><00:44:43.519><c> there</c><00:44:43.640><c> may</c>

00:44:43.749 --> 00:44:43.759 align:start position:0%
experience is going to be well there may
 

00:44:43.759 --> 00:44:46.120 align:start position:0%
experience is going to be well there may
be<00:44:43.789><c> some</c><00:44:44.440><c> performance</c><00:44:45.440><c> enhancements</c><00:44:46.009><c> but</c>

00:44:46.120 --> 00:44:46.130 align:start position:0%
be some performance enhancements but
 

00:44:46.130 --> 00:44:47.709 align:start position:0%
be some performance enhancements but
really<00:44:46.339><c> it's</c><00:44:46.459><c> more</c><00:44:46.579><c> perceptual</c><00:44:47.029><c> because</c><00:44:47.359><c> OS</c>

00:44:47.709 --> 00:44:47.719 align:start position:0%
really it's more perceptual because OS
 

00:44:47.719 --> 00:44:49.719 align:start position:0%
really it's more perceptual because OS
10<00:44:47.959><c> is</c><00:44:48.140><c> actually</c><00:44:48.799><c> doing</c><00:44:49.009><c> all</c><00:44:49.069><c> the</c><00:44:49.219><c> work</c><00:44:49.369><c> for</c>

00:44:49.719 --> 00:44:49.729 align:start position:0%
10 is actually doing all the work for
 

00:44:49.729 --> 00:44:53.769 align:start position:0%
10 is actually doing all the work for
you<00:44:49.910><c> if</c><00:44:50.749><c> you</c><00:44:51.789><c> multi</c><00:44:52.789><c> thread</c><00:44:53.059><c> your</c><00:44:53.209><c> application</c>

00:44:53.769 --> 00:44:53.779 align:start position:0%
you if you multi thread your application
 

00:44:53.779 --> 00:44:56.019 align:start position:0%
you if you multi thread your application
you<00:44:54.319><c> get</c><00:44:54.529><c> additional</c><00:44:54.920><c> benefits</c><00:44:55.459><c> because</c><00:44:55.789><c> I</c>

00:44:56.019 --> 00:44:56.029 align:start position:0%
you get additional benefits because I
 

00:44:56.029 --> 00:44:58.269 align:start position:0%
you get additional benefits because I
was<00:44:56.180><c> 10</c><00:44:56.420><c> now</c><00:44:56.630><c> says</c><00:44:57.079><c> okay</c><00:44:57.349><c> great</c><00:44:57.559><c> I</c><00:44:57.589><c> can</c><00:44:57.890><c> you</c>

00:44:58.269 --> 00:44:58.279 align:start position:0%
was 10 now says okay great I can you
 

00:44:58.279 --> 00:44:59.650 align:start position:0%
was 10 now says okay great I can you
know<00:44:58.400><c> move</c><00:44:58.759><c> things</c><00:44:58.999><c> around</c><00:44:59.119><c> a</c><00:44:59.329><c> lot</c><00:44:59.449><c> quicker</c>

00:44:59.650 --> 00:44:59.660 align:start position:0%
know move things around a lot quicker
 

00:44:59.660 --> 00:45:02.349 align:start position:0%
know move things around a lot quicker
and<00:44:59.809><c> use</c><00:44:59.989><c> the</c><00:45:00.140><c> thread</c><00:45:00.829><c> model</c><00:45:01.190><c> within</c><00:45:01.579><c> the</c><00:45:02.209><c> mach</c>

00:45:02.349 --> 00:45:02.359 align:start position:0%
and use the thread model within the mach
 

00:45:02.359 --> 00:45:04.779 align:start position:0%
and use the thread model within the mach
kernel<00:45:02.539><c> now</c><00:45:03.469><c> the</c><00:45:04.130><c> next</c><00:45:04.430><c> step</c><00:45:04.579><c> is</c><00:45:04.729><c> really</c>

00:45:04.779 --> 00:45:04.789 align:start position:0%
kernel now the next step is really
 

00:45:04.789 --> 00:45:06.999 align:start position:0%
kernel now the next step is really
optimizing<00:45:05.660><c> your</c><00:45:05.690><c> application</c><00:45:06.289><c> for</c><00:45:06.589><c> MP</c>

00:45:06.999 --> 00:45:07.009 align:start position:0%
optimizing your application for MP
 

00:45:07.009 --> 00:45:09.849 align:start position:0%
optimizing your application for MP
because<00:45:07.749><c> not</c><00:45:08.749><c> just</c><00:45:09.019><c> providing</c><00:45:09.319><c> threads</c><00:45:09.709><c> is</c>

00:45:09.849 --> 00:45:09.859 align:start position:0%
because not just providing threads is
 

00:45:09.859 --> 00:45:11.229 align:start position:0%
because not just providing threads is
not<00:45:10.009><c> going</c><00:45:10.160><c> to</c><00:45:10.219><c> give</c><00:45:10.339><c> you</c><00:45:10.459><c> the</c><00:45:10.609><c> the</c><00:45:10.849><c> efficiency</c>

00:45:11.229 --> 00:45:11.239 align:start position:0%
not going to give you the the efficiency
 

00:45:11.239 --> 00:45:13.390 align:start position:0%
not going to give you the the efficiency
of<00:45:11.420><c> using</c><00:45:11.779><c> that</c><00:45:11.869><c> second</c><00:45:12.229><c> processor</c><00:45:12.709><c> that's</c>

00:45:13.390 --> 00:45:13.400 align:start position:0%
of using that second processor that's
 

00:45:13.400 --> 00:45:16.269 align:start position:0%
of using that second processor that's
where<00:45:13.579><c> SMP</c><00:45:13.969><c> comes</c><00:45:14.180><c> into</c><00:45:14.420><c> play</c><00:45:14.630><c> so</c><00:45:15.279><c> actually</c>

00:45:16.269 --> 00:45:16.279 align:start position:0%
where SMP comes into play so actually
 

00:45:16.279 --> 00:45:18.400 align:start position:0%
where SMP comes into play so actually
paralyzing<00:45:16.880><c> your</c><00:45:16.999><c> code</c><00:45:17.239><c> and</c><00:45:17.509><c> seeing</c><00:45:17.930><c> where</c><00:45:18.259><c> it</c>

00:45:18.400 --> 00:45:18.410 align:start position:0%
paralyzing your code and seeing where it
 

00:45:18.410 --> 00:45:20.859 align:start position:0%
paralyzing your code and seeing where it
makes<00:45:18.829><c> sense</c><00:45:18.979><c> to</c><00:45:19.400><c> actually</c><00:45:19.519><c> have</c><00:45:19.910><c> your</c><00:45:20.209><c> your</c>

00:45:20.859 --> 00:45:20.869 align:start position:0%
makes sense to actually have your your
 

00:45:20.869 --> 00:45:22.719 align:start position:0%
makes sense to actually have your your
thread<00:45:21.079><c> go</c><00:45:21.229><c> off</c><00:45:21.410><c> to</c><00:45:21.559><c> the</c><00:45:21.650><c> second</c><00:45:21.949><c> processor</c><00:45:22.369><c> is</c>

00:45:22.719 --> 00:45:22.729 align:start position:0%
thread go off to the second processor is
 

00:45:22.729 --> 00:45:24.339 align:start position:0%
thread go off to the second processor is
what<00:45:23.029><c> factoring</c><00:45:23.449><c> or</c><00:45:23.539><c> paralyzing</c><00:45:24.049><c> your</c><00:45:24.140><c> code</c>

00:45:24.339 --> 00:45:24.349 align:start position:0%
what factoring or paralyzing your code
 

00:45:24.349 --> 00:45:26.109 align:start position:0%
what factoring or paralyzing your code
involves<00:45:24.859><c> and</c><00:45:25.009><c> that's</c><00:45:25.130><c> what</c><00:45:25.369><c> we</c><00:45:25.519><c> term</c><00:45:25.910><c> as</c>

00:45:26.109 --> 00:45:26.119 align:start position:0%
involves and that's what we term as
 

00:45:26.119 --> 00:45:28.779 align:start position:0%
involves and that's what we term as
optimization<00:45:27.109><c> for</c><00:45:27.349><c> MP</c><00:45:27.739><c> hardware</c><00:45:28.219><c> and</c><00:45:28.430><c> that's</c>

00:45:28.779 --> 00:45:28.789 align:start position:0%
optimization for MP hardware and that's
 

00:45:28.789 --> 00:45:30.219 align:start position:0%
optimization for MP hardware and that's
what<00:45:28.910><c> you</c><00:45:28.999><c> kind</c><00:45:29.150><c> of</c><00:45:29.299><c> saw</c><00:45:29.449><c> in</c><00:45:29.599><c> the</c><00:45:29.690><c> example</c><00:45:29.779><c> with</c>

00:45:30.219 --> 00:45:30.229 align:start position:0%
what you kind of saw in the example with
 

00:45:30.229 --> 00:45:32.680 align:start position:0%
what you kind of saw in the example with
QuickTime<00:45:30.619><c> itself</c><00:45:30.949><c> actually</c><00:45:31.339><c> balancing</c><00:45:32.089><c> the</c>

00:45:32.680 --> 00:45:32.690 align:start position:0%
QuickTime itself actually balancing the
 

00:45:32.690 --> 00:45:35.680 align:start position:0%
QuickTime itself actually balancing the
pegging<00:45:33.019><c> of</c><00:45:33.229><c> each</c><00:45:33.499><c> processor</c><00:45:34.099><c> so</c><00:45:34.309><c> that</c><00:45:34.690><c> SP</c>

00:45:35.680 --> 00:45:35.690 align:start position:0%
pegging of each processor so that SP
 

00:45:35.690 --> 00:45:38.109 align:start position:0%
pegging of each processor so that SP
itself<00:45:36.170><c> can</c><00:45:36.349><c> take</c><00:45:36.499><c> care</c><00:45:36.680><c> of</c><00:45:36.739><c> the</c><00:45:37.119><c> housekeeping</c>

00:45:38.109 --> 00:45:38.119 align:start position:0%
itself can take care of the housekeeping
 

00:45:38.119 --> 00:45:45.680 align:start position:0%
itself can take care of the housekeeping
there

00:45:45.680 --> 00:45:45.690 align:start position:0%
 
 

00:45:45.690 --> 00:45:47.750 align:start position:0%
 
you

