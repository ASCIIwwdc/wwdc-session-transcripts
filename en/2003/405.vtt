WEBVTT
Kind: captions
Language: en

00:00:23.770 --> 00:00:25.640 align:start position:0%
 
hello<00:00:24.430><c> I</c>

00:00:25.640 --> 00:00:25.650 align:start position:0%
hello I
 

00:00:25.650 --> 00:00:28.010 align:start position:0%
hello I
so<00:00:25.859><c> I</c><00:00:26.369><c> thought</c><00:00:27.119><c> as</c><00:00:27.300><c> an</c><00:00:27.449><c> introduction</c><00:00:27.990><c> to</c>

00:00:28.010 --> 00:00:28.020 align:start position:0%
so I thought as an introduction to
 

00:00:28.020 --> 00:00:29.630 align:start position:0%
so I thought as an introduction to
James's<00:00:28.560><c> session</c><00:00:28.949><c> here</c><00:00:29.130><c> he's</c><00:00:29.279><c> going</c><00:00:29.490><c> to</c><00:00:29.550><c> talk</c>

00:00:29.630 --> 00:00:29.640 align:start position:0%
James's session here he's going to talk
 

00:00:29.640 --> 00:00:32.060 align:start position:0%
James's session here he's going to talk
about<00:00:29.849><c> the</c><00:00:30.119><c> details</c><00:00:30.270><c> of</c><00:00:30.930><c> several</c><00:00:31.470><c> of</c><00:00:31.560><c> our</c><00:00:31.710><c> API</c>

00:00:32.060 --> 00:00:32.070 align:start position:0%
about the details of several of our API
 

00:00:32.070 --> 00:00:35.690 align:start position:0%
about the details of several of our API
including<00:00:32.910><c> the</c><00:00:33.059><c> audio</c><00:00:33.329><c> file</c><00:00:33.800><c> AP</c><00:00:34.800><c> is</c><00:00:34.920><c> the</c><00:00:35.400><c> audio</c>

00:00:35.690 --> 00:00:35.700 align:start position:0%
including the audio file AP is the audio
 

00:00:35.700 --> 00:00:39.319 align:start position:0%
including the audio file AP is the audio
converter<00:00:35.970><c> api's</c><00:00:36.739><c> I</c><00:00:37.739><c> just</c><00:00:38.160><c> show</c><00:00:38.370><c> a</c><00:00:38.670><c> quick</c><00:00:38.910><c> demo</c>

00:00:39.319 --> 00:00:39.329 align:start position:0%
converter api's I just show a quick demo
 

00:00:39.329 --> 00:00:42.080 align:start position:0%
converter api's I just show a quick demo
program<00:00:39.600><c> I</c><00:00:40.079><c> wrote</c><00:00:40.110><c> which</c><00:00:40.710><c> shows</c><00:00:41.489><c> you</c><00:00:41.520><c> how</c><00:00:41.879><c> this</c>

00:00:42.080 --> 00:00:42.090 align:start position:0%
program I wrote which shows you how this
 

00:00:42.090 --> 00:00:45.530 align:start position:0%
program I wrote which shows you how this
looks<00:00:42.269><c> from</c><00:00:42.510><c> the</c><00:00:42.600><c> outside</c><00:00:44.089><c> this</c><00:00:45.089><c> doesn't</c><00:00:45.300><c> use</c>

00:00:45.530 --> 00:00:45.540 align:start position:0%
looks from the outside this doesn't use
 

00:00:45.540 --> 00:00:47.270 align:start position:0%
looks from the outside this doesn't use
QuickTime<00:00:45.989><c> it's</c><00:00:46.230><c> using</c><00:00:46.559><c> all</c><00:00:46.739><c> of</c><00:00:46.769><c> our</c><00:00:47.010><c> native</c>

00:00:47.270 --> 00:00:47.280 align:start position:0%
QuickTime it's using all of our native
 

00:00:47.280 --> 00:00:51.860 align:start position:0%
QuickTime it's using all of our native
Audio<00:00:47.730><c> API</c><00:00:48.059><c> to</c><00:00:49.160><c> read</c><00:00:50.160><c> and</c><00:00:50.570><c> convert</c><00:00:51.570><c> audio</c>

00:00:51.860 --> 00:00:51.870 align:start position:0%
Audio API to read and convert audio
 

00:00:51.870 --> 00:00:55.130 align:start position:0%
Audio API to read and convert audio
files<00:00:52.430><c> so</c><00:00:53.430><c> here</c><00:00:53.760><c> I've</c><00:00:53.910><c> got</c><00:00:54.120><c> a</c><00:00:54.150><c> few</c><00:00:54.390><c> files</c><00:00:54.930><c> I</c>

00:00:55.130 --> 00:00:55.140 align:start position:0%
files so here I've got a few files I
 

00:00:55.140 --> 00:00:59.020 align:start position:0%
files so here I've got a few files I
brought<00:00:55.350><c> with</c><00:00:55.500><c> me</c><00:00:55.820><c> this</c><00:00:56.820><c> is</c><00:00:56.940><c> a</c><00:00:56.970><c> simple</c><00:00:57.470><c> aiff</c>

00:00:59.020 --> 00:00:59.030 align:start position:0%
brought with me this is a simple aiff
 

00:00:59.030 --> 00:01:02.689 align:start position:0%
brought with me this is a simple aiff
stereo<00:01:00.030><c> 16-bit</c><00:01:00.720><c> file</c><00:01:01.070><c> and</c><00:01:02.070><c> I</c><00:01:02.129><c> can</c><00:01:02.280><c> listen</c><00:01:02.549><c> to</c>

00:01:02.689 --> 00:01:02.699 align:start position:0%
stereo 16-bit file and I can listen to
 

00:01:02.699 --> 00:01:12.620 align:start position:0%
stereo 16-bit file and I can listen to
it<00:01:10.130><c> and</c><00:01:11.130><c> so</c><00:01:11.340><c> that's</c><00:01:11.490><c> just</c><00:01:11.580><c> using</c><00:01:12.420><c> the</c><00:01:12.510><c> audio</c>

00:01:12.620 --> 00:01:12.630 align:start position:0%
it and so that's just using the audio
 

00:01:12.630 --> 00:01:17.179 align:start position:0%
it and so that's just using the audio
file<00:01:13.020><c> API</c><00:01:13.439><c> to</c><00:01:13.560><c> recognize</c><00:01:14.250><c> the</c><00:01:14.490><c> file</c><00:01:16.010><c> we</c><00:01:17.010><c> the</c>

00:01:17.179 --> 00:01:17.189 align:start position:0%
file API to recognize the file we the
 

00:01:17.189 --> 00:01:19.730 align:start position:0%
file API to recognize the file we the
samples<00:01:17.580><c> out</c><00:01:17.729><c> of</c><00:01:17.909><c> it</c><00:01:18.060><c> and</c><00:01:18.240><c> pump</c><00:01:18.900><c> it</c><00:01:19.049><c> through</c><00:01:19.110><c> an</c>

00:01:19.730 --> 00:01:19.740 align:start position:0%
samples out of it and pump it through an
 

00:01:19.740 --> 00:01:22.460 align:start position:0%
samples out of it and pump it through an
audio<00:01:20.100><c> output</c><00:01:20.549><c> unit</c><00:01:21.020><c> there's</c><00:01:22.020><c> very</c><00:01:22.229><c> little</c>

00:01:22.460 --> 00:01:22.470 align:start position:0%
audio output unit there's very little
 

00:01:22.470 --> 00:01:25.280 align:start position:0%
audio output unit there's very little
actual<00:01:23.390><c> manipulating</c><00:01:24.390><c> of</c><00:01:24.509><c> audio</c><00:01:24.810><c> data</c><00:01:25.020><c> in</c>

00:01:25.280 --> 00:01:25.290 align:start position:0%
actual manipulating of audio data in
 

00:01:25.290 --> 00:01:29.240 align:start position:0%
actual manipulating of audio data in
this<00:01:25.409><c> program</c><00:01:25.830><c> it's</c><00:01:26.040><c> all</c><00:01:26.189><c> using</c><00:01:26.549><c> our</c><00:01:26.700><c> API</c><00:01:28.250><c> so</c>

00:01:29.240 --> 00:01:29.250 align:start position:0%
this program it's all using our API so
 

00:01:29.250 --> 00:01:30.770 align:start position:0%
this program it's all using our API so
another<00:01:29.520><c> thing</c><00:01:29.610><c> I</c><00:01:29.820><c> can</c><00:01:29.970><c> do</c><00:01:30.120><c> here</c><00:01:30.360><c> I</c><00:01:30.390><c> can</c><00:01:30.660><c> do</c>

00:01:30.770 --> 00:01:30.780 align:start position:0%
another thing I can do here I can do
 

00:01:30.780 --> 00:01:34.160 align:start position:0%
another thing I can do here I can do
simple<00:01:30.990><c> sample</c><00:01:31.500><c> rate</c><00:01:31.770><c> conversion</c><00:01:33.020><c> these</c><00:01:34.020><c> are</c>

00:01:34.160 --> 00:01:34.170 align:start position:0%
simple sample rate conversion these are
 

00:01:34.170 --> 00:01:36.470 align:start position:0%
simple sample rate conversion these are
the<00:01:34.260><c> same</c><00:01:34.470><c> API</c><00:01:34.800><c> that</c><00:01:35.190><c> quick</c><00:01:35.640><c> time</c><00:01:35.850><c> is</c><00:01:36.030><c> based</c><00:01:36.270><c> on</c>

00:01:36.470 --> 00:01:36.480 align:start position:0%
the same API that quick time is based on
 

00:01:36.480 --> 00:01:41.030 align:start position:0%
the same API that quick time is based on
top<00:01:36.720><c> of</c><00:01:36.960><c> in</c><00:01:37.890><c> their</c><00:01:38.100><c> upcoming</c><00:01:38.460><c> version</c><00:01:40.040><c> this</c>

00:01:41.030 --> 00:01:41.040 align:start position:0%
top of in their upcoming version this
 

00:01:41.040 --> 00:01:42.800 align:start position:0%
top of in their upcoming version this
program<00:01:41.400><c> also</c><00:01:41.550><c> by</c><00:01:41.850><c> the</c><00:01:41.909><c> way</c><00:01:42.060><c> is</c><00:01:42.210><c> going</c><00:01:42.570><c> to</c><00:01:42.720><c> be</c>

00:01:42.800 --> 00:01:42.810 align:start position:0%
program also by the way is going to be
 

00:01:42.810 --> 00:01:46.070 align:start position:0%
program also by the way is going to be
available<00:01:43.050><c> sample</c><00:01:43.680><c> code</c><00:01:44.600><c> and</c><00:01:45.600><c> we</c><00:01:45.750><c> can</c><00:01:45.900><c> see</c>

00:01:46.070 --> 00:01:46.080 align:start position:0%
available sample code and we can see
 

00:01:46.080 --> 00:01:47.780 align:start position:0%
available sample code and we can see
some<00:01:46.260><c> of</c><00:01:46.290><c> the</c><00:01:46.409><c> things</c><00:01:46.590><c> the</c><00:01:46.800><c> audio</c><00:01:47.070><c> file</c><00:01:47.400><c> API</c>

00:01:47.780 --> 00:01:47.790 align:start position:0%
some of the things the audio file API
 

00:01:47.790 --> 00:01:50.780 align:start position:0%
some of the things the audio file API
provides<00:01:48.030><c> some</c><00:01:48.480><c> sample</c><00:01:48.930><c> here</c><00:01:49.110><c> are</c><00:01:49.409><c> in</c><00:01:50.280><c> cancer</c>

00:01:50.780 --> 00:01:50.790 align:start position:0%
provides some sample here are in cancer
 

00:01:50.790 --> 00:01:53.840 align:start position:0%
provides some sample here are in cancer
here<00:01:51.170><c> we</c><00:01:52.170><c> can</c><00:01:52.320><c> see</c><00:01:52.500><c> all</c><00:01:52.620><c> the</c><00:01:52.650><c> file</c><00:01:53.100><c> formats</c><00:01:53.610><c> are</c>

00:01:53.840 --> 00:01:53.850 align:start position:0%
here we can see all the file formats are
 

00:01:53.850 --> 00:01:58.219 align:start position:0%
here we can see all the file formats are
supported<00:01:55.400><c> and</c><00:01:56.400><c> so</c><00:01:57.150><c> I'm</c><00:01:57.270><c> just</c><00:01:57.450><c> going</c><00:01:57.600><c> to</c><00:01:57.690><c> keep</c>

00:01:58.219 --> 00:01:58.229 align:start position:0%
supported and so I'm just going to keep
 

00:01:58.229 --> 00:02:01.130 align:start position:0%
supported and so I'm just going to keep
this<00:01:58.409><c> in</c><00:01:58.590><c> a</c><00:01:58.650><c> is</c><00:01:59.479><c> f2</c><00:02:00.479><c> could</c><00:02:00.630><c> say</c><00:02:00.750><c> same</c><00:02:01.020><c> the</c>

00:02:01.130 --> 00:02:01.140 align:start position:0%
this in a is f2 could say same the
 

00:02:01.140 --> 00:02:05.240 align:start position:0%
this in a is f2 could say same the
source<00:02:03.110><c> actually</c><00:02:04.110><c> if</c><00:02:04.170><c> I</c><00:02:04.260><c> were</c><00:02:04.380><c> to</c><00:02:04.500><c> change</c><00:02:04.740><c> if</c><00:02:05.130><c> I</c>

00:02:05.240 --> 00:02:05.250 align:start position:0%
source actually if I were to change if I
 

00:02:05.250 --> 00:02:06.740 align:start position:0%
source actually if I were to change if I
were<00:02:05.340><c> to</c><00:02:05.430><c> choose</c><00:02:05.550><c> aiff</c><00:02:06.150><c> here</c><00:02:06.390><c> I</c><00:02:06.450><c> could</c><00:02:06.600><c> see</c>

00:02:06.740 --> 00:02:06.750 align:start position:0%
were to choose aiff here I could see
 

00:02:06.750 --> 00:02:08.749 align:start position:0%
were to choose aiff here I could see
well<00:02:06.930><c> I</c><00:02:06.960><c> can</c><00:02:07.110><c> make</c><00:02:07.229><c> it</c><00:02:07.320><c> a</c><00:02:07.380><c> 24-bit</c><00:02:07.860><c> AFS</c><00:02:08.549><c> which</c>

00:02:08.749 --> 00:02:08.759 align:start position:0%
well I can make it a 24-bit AFS which
 

00:02:08.759 --> 00:02:10.789 align:start position:0%
well I can make it a 24-bit AFS which
doesn't<00:02:09.119><c> make</c><00:02:09.179><c> sense</c><00:02:09.390><c> because</c><00:02:09.690><c> 16</c><00:02:10.349><c> bits</c><00:02:10.590><c> I'll</c>

00:02:10.789 --> 00:02:10.799 align:start position:0%
doesn't make sense because 16 bits I'll
 

00:02:10.799 --> 00:02:13.130 align:start position:0%
doesn't make sense because 16 bits I'll
just<00:02:10.920><c> say</c><00:02:11.039><c> saying</c><00:02:11.310><c> the</c><00:02:11.430><c> source</c><00:02:11.670><c> and</c><00:02:12.150><c> I'll</c>

00:02:13.130 --> 00:02:13.140 align:start position:0%
just say saying the source and I'll
 

00:02:13.140 --> 00:02:18.460 align:start position:0%
just say saying the source and I'll
downsample<00:02:13.830><c> it</c><00:02:13.890><c> to</c><00:02:14.099><c> 22</c><00:02:14.580><c> k</c><00:02:15.440><c> hit</c><00:02:16.440><c> convert</c>

00:02:18.460 --> 00:02:18.470 align:start position:0%
downsample it to 22 k hit convert
 

00:02:18.470 --> 00:02:20.980 align:start position:0%
downsample it to 22 k hit convert
and<00:02:19.460><c> this</c><00:02:19.640><c> is</c><00:02:19.760><c> going</c><00:02:19.940><c> through</c><00:02:20.330><c> our</c><00:02:20.540><c> sample</c>

00:02:20.980 --> 00:02:20.990 align:start position:0%
and this is going through our sample
 

00:02:20.990 --> 00:02:22.810 align:start position:0%
and this is going through our sample
rate<00:02:21.110><c> converter</c><00:02:21.560><c> which</c><00:02:21.980><c> is</c><00:02:22.160><c> built</c><00:02:22.400><c> into</c><00:02:22.580><c> our</c>

00:02:22.810 --> 00:02:22.820 align:start position:0%
rate converter which is built into our
 

00:02:22.820 --> 00:02:25.810 align:start position:0%
rate converter which is built into our
audio<00:02:23.210><c> converter</c><00:02:23.450><c> API</c><00:02:24.020><c> this</c><00:02:24.860><c> is</c><00:02:25.130><c> very</c><00:02:25.400><c> heavily</c>

00:02:25.810 --> 00:02:25.820 align:start position:0%
audio converter API this is very heavily
 

00:02:25.820 --> 00:02:30.220 align:start position:0%
audio converter API this is very heavily
altivec<00:02:26.810><c> optimized</c><00:02:27.410><c> code</c><00:02:28.240><c> as</c><00:02:29.240><c> are</c><00:02:29.630><c> all</c><00:02:29.900><c> of</c><00:02:29.930><c> our</c>

00:02:30.220 --> 00:02:30.230 align:start position:0%
altivec optimized code as are all of our
 

00:02:30.230 --> 00:02:32.470 align:start position:0%
altivec optimized code as are all of our
integer<00:02:30.710><c> to</c><00:02:30.950><c> float</c><00:02:31.160><c> conversions</c><00:02:31.910><c> now</c><00:02:32.210><c> in</c>

00:02:32.470 --> 00:02:32.480 align:start position:0%
integer to float conversions now in
 

00:02:32.480 --> 00:02:36.130 align:start position:0%
integer to float conversions now in
cancer<00:02:33.130><c> these</c><00:02:34.130><c> are</c><00:02:34.280><c> good</c><00:02:34.430><c> reasons</c><00:02:34.640><c> for</c><00:02:35.180><c> using</c>

00:02:36.130 --> 00:02:36.140 align:start position:0%
cancer these are good reasons for using
 

00:02:36.140 --> 00:02:37.900 align:start position:0%
cancer these are good reasons for using
our<00:02:36.470><c> api's</c><00:02:36.890><c> for</c><00:02:37.250><c> your</c><00:02:37.400><c> into</c><00:02:37.700><c> Floyd</c>

00:02:37.900 --> 00:02:37.910 align:start position:0%
our api's for your into Floyd
 

00:02:37.910 --> 00:02:40.600 align:start position:0%
our api's for your into Floyd
conversions<00:02:38.570><c> they're</c><00:02:39.070><c> heavily</c><00:02:40.070><c> optimized</c>

00:02:40.600 --> 00:02:40.610 align:start position:0%
conversions they're heavily optimized
 

00:02:40.610 --> 00:02:45.820 align:start position:0%
conversions they're heavily optimized
for<00:02:40.790><c> both</c><00:02:41.030><c> g4</c><00:02:41.860><c> and</c><00:02:42.860><c> g3</c><00:02:43.130><c> and</c><00:02:43.780><c> soon</c><00:02:44.780><c> on</c><00:02:45.110><c> g5</c><00:02:45.560><c> as</c>

00:02:45.820 --> 00:02:45.830 align:start position:0%
for both g4 and g3 and soon on g5 as
 

00:02:45.830 --> 00:02:49.390 align:start position:0%
for both g4 and g3 and soon on g5 as
well<00:02:47.140><c> and</c><00:02:48.140><c> here's</c><00:02:48.290><c> my</c><00:02:48.500><c> converted</c><00:02:48.950><c> file</c><00:02:49.160><c> to</c>

00:02:49.390 --> 00:02:49.400 align:start position:0%
well and here's my converted file to
 

00:02:49.400 --> 00:02:57.520 align:start position:0%
well and here's my converted file to
ascend<00:02:49.670><c> above</c><00:02:49.760><c> the</c><00:02:49.910><c> claim</c><00:02:55.150><c> okay</c><00:02:56.150><c> so</c><00:02:56.540><c> another</c>

00:02:57.520 --> 00:02:57.530 align:start position:0%
ascend above the claim okay so another
 

00:02:57.530 --> 00:02:58.690 align:start position:0%
ascend above the claim okay so another
thing<00:02:57.620><c> you</c><00:02:57.830><c> can</c><00:02:58.010><c> do</c><00:02:58.130><c> with</c><00:02:58.280><c> the</c><00:02:58.400><c> audio</c>

00:02:58.690 --> 00:02:58.700 align:start position:0%
thing you can do with the audio
 

00:02:58.700 --> 00:03:02.650 align:start position:0%
thing you can do with the audio
converter<00:02:58.970><c> is</c><00:03:00.100><c> to</c><00:03:01.100><c> use</c><00:03:01.340><c> the</c><00:03:01.520><c> to</c><00:03:01.760><c> encode</c><00:03:02.270><c> and</c>

00:03:02.650 --> 00:03:02.660 align:start position:0%
converter is to use the to encode and
 

00:03:02.660 --> 00:03:07.750 align:start position:0%
converter is to use the to encode and
decode<00:03:04.000><c> formats</c><00:03:05.000><c> such</c><00:03:05.240><c> as</c><00:03:05.300><c> AAC</c><00:03:06.610><c> sure</c><00:03:07.610><c> I've</c><00:03:07.730><c> got</c>

00:03:07.750 --> 00:03:07.760 align:start position:0%
decode formats such as AAC sure I've got
 

00:03:07.760 --> 00:03:13.420 align:start position:0%
decode formats such as AAC sure I've got
an<00:03:08.060><c> example</c><00:03:08.570><c> of</c><00:03:09.340><c> a</c><00:03:10.340><c> six</c><00:03:10.880><c> channel</c><00:03:12.130><c> aiff</c><00:03:13.130><c> file</c>

00:03:13.420 --> 00:03:13.430 align:start position:0%
an example of a six channel aiff file
 

00:03:13.430 --> 00:03:15.850 align:start position:0%
an example of a six channel aiff file
which<00:03:13.760><c> one</c><00:03:14.120><c> of</c><00:03:14.150><c> my</c><00:03:14.300><c> co-workers</c><00:03:14.650><c> authored</c><00:03:15.650><c> in</c>

00:03:15.850 --> 00:03:15.860 align:start position:0%
which one of my co-workers authored in
 

00:03:15.860 --> 00:03:19.180 align:start position:0%
which one of my co-workers authored in
logic<00:03:16.280><c> a</c><00:03:16.370><c> year</c><00:03:16.580><c> ago</c><00:03:17.200><c> here</c><00:03:18.200><c> it</c><00:03:18.290><c> is</c><00:03:18.380><c> in</c><00:03:18.560><c> a</c><00:03:18.620><c> cifs</c>

00:03:19.180 --> 00:03:19.190 align:start position:0%
logic a year ago here it is in a cifs
 

00:03:19.190 --> 00:03:21.820 align:start position:0%
logic a year ago here it is in a cifs
format<00:03:19.700><c> and</c><00:03:19.880><c> i'll</c><00:03:19.940><c> leave</c><00:03:20.120><c> it</c><00:03:20.240><c> playing</c><00:03:20.800><c> while</c><00:03:21.800><c> i</c>

00:03:21.820 --> 00:03:21.830 align:start position:0%
format and i'll leave it playing while i
 

00:03:21.830 --> 00:03:26.620 align:start position:0%
format and i'll leave it playing while i
convert<00:03:22.459><c> it</c><00:03:22.610><c> to</c><00:03:23.170><c> an</c><00:03:24.170><c> AC</c>

00:03:26.620 --> 00:03:26.630 align:start position:0%
convert it to an AC
 

00:03:26.630 --> 00:03:28.390 align:start position:0%
convert it to an AC
I<00:03:26.720><c> want</c><00:03:27.410><c> to</c><00:03:27.440><c> turn</c><00:03:27.560><c> the</c><00:03:27.710><c> volume</c><00:03:28.010><c> down</c><00:03:28.040><c> to</c><00:03:28.280><c> the</c>

00:03:28.390 --> 00:03:28.400 align:start position:0%
I want to turn the volume down to the
 

00:03:28.400 --> 00:03:33.190 align:start position:0%
I want to turn the volume down to the
bullfighting<00:03:28.790><c> keep</c><00:03:28.970><c> talking</c><00:03:29.330><c> please</c><00:03:32.140><c> okay</c><00:03:33.140><c> so</c>

00:03:33.190 --> 00:03:33.200 align:start position:0%
bullfighting keep talking please okay so
 

00:03:33.200 --> 00:03:36.030 align:start position:0%
bullfighting keep talking please okay so
i<00:03:33.410><c> can</c><00:03:33.680><c> say</c><00:03:33.950><c> i</c><00:03:34.310><c> want</c><00:03:34.640><c> to</c><00:03:34.670><c> convert</c><00:03:34.940><c> it</c><00:03:35.060><c> to</c><00:03:35.090><c> AC</c>

00:03:36.030 --> 00:03:36.040 align:start position:0%
i can say i want to convert it to AC
 

00:03:36.040 --> 00:03:38.140 align:start position:0%
i can say i want to convert it to AC
leave<00:03:37.040><c> it</c><00:03:37.130><c> to</c><00:03:37.220><c> the</c><00:03:37.340><c> same</c><00:03:37.580><c> sample</c><00:03:38.060><c> right</c>

00:03:38.140 --> 00:03:38.150 align:start position:0%
leave it to the same sample right
 

00:03:38.150 --> 00:03:41.080 align:start position:0%
leave it to the same sample right
there's<00:03:38.870><c> some</c><00:03:39.050><c> more</c><00:03:39.310><c> parameters</c><00:03:40.310><c> you</c><00:03:40.670><c> can</c><00:03:40.700><c> put</c>

00:03:41.080 --> 00:03:41.090 align:start position:0%
there's some more parameters you can put
 

00:03:41.090 --> 00:03:43.030 align:start position:0%
there's some more parameters you can put
on<00:03:41.210><c> the</c><00:03:41.330><c> converting</c><00:03:41.810><c> here</c><00:03:42.020><c> such</c><00:03:42.320><c> as</c><00:03:42.650><c> the</c><00:03:42.830><c> bit</c>

00:03:43.030 --> 00:03:43.040 align:start position:0%
on the converting here such as the bit
 

00:03:43.040 --> 00:03:46.000 align:start position:0%
on the converting here such as the bit
rate<00:03:43.250><c> the</c><00:03:43.730><c> quality</c><00:03:43.880><c> you</c><00:03:44.450><c> can</c><00:03:45.380><c> do</c><00:03:45.590><c> channel</c>

00:03:46.000 --> 00:03:46.010 align:start position:0%
rate the quality you can do channel
 

00:03:46.010 --> 00:03:49.360 align:start position:0%
rate the quality you can do channel
remapping<00:03:46.400><c> and</c><00:03:47.050><c> multi-channel</c><00:03:48.050><c> AAC</c><00:03:48.770><c> for</c>

00:03:49.360 --> 00:03:49.370 align:start position:0%
remapping and multi-channel AAC for
 

00:03:49.370 --> 00:03:52.450 align:start position:0%
remapping and multi-channel AAC for
example<00:03:49.850><c> you</c><00:03:50.840><c> know</c><00:03:51.800><c> depending</c><00:03:52.250><c> on</c><00:03:52.370><c> the</c>

00:03:52.450 --> 00:03:52.460 align:start position:0%
example you know depending on the
 

00:03:52.460 --> 00:03:56.250 align:start position:0%
example you know depending on the
channel<00:03:52.820><c> layout</c><00:03:53.000><c> it</c><00:03:53.780><c> can</c><00:03:54.020><c> save</c><00:03:54.290><c> bit</c><00:03:54.680><c> by</c>

00:03:56.250 --> 00:03:56.260 align:start position:0%
channel layout it can save bit by
 

00:03:56.260 --> 00:03:59.680 align:start position:0%
channel layout it can save bit by
putting<00:03:57.260><c> a</c><00:03:57.320><c> filter</c><00:03:57.710><c> on</c><00:03:57.740><c> the</c><00:03:58.010><c> subs</c><00:03:58.670><c> or</c><00:03:58.970><c> LSD</c>

00:03:59.680 --> 00:03:59.690 align:start position:0%
putting a filter on the subs or LSD
 

00:03:59.690 --> 00:04:04.900 align:start position:0%
putting a filter on the subs or LSD
channel<00:04:02.470><c> so</c><00:04:03.470><c> this</c><00:04:03.950><c> example</c><00:04:04.280><c> program</c><00:04:04.580><c> doesn't</c>

00:04:04.900 --> 00:04:04.910 align:start position:0%
channel so this example program doesn't
 

00:04:04.910 --> 00:04:06.430 align:start position:0%
channel so this example program doesn't
show<00:04:05.240><c> that</c><00:04:05.450><c> right</c><00:04:05.660><c> now</c><00:04:05.870><c> but</c><00:04:06.080><c> that</c><00:04:06.200><c> is</c><00:04:06.320><c> an</c>

00:04:06.430 --> 00:04:06.440 align:start position:0%
show that right now but that is an
 

00:04:06.440 --> 00:04:09.570 align:start position:0%
show that right now but that is an
option<00:04:06.560><c> that</c><00:04:07.040><c> there</c><00:04:07.370><c> is</c><00:04:07.460><c> on</c><00:04:07.580><c> the</c><00:04:07.700><c> converter</c><00:04:08.230><c> so</c>

00:04:09.570 --> 00:04:09.580 align:start position:0%
option that there is on the converter so
 

00:04:09.580 --> 00:04:12.070 align:start position:0%
option that there is on the converter so
while<00:04:10.580><c> it</c><00:04:10.700><c> keeps</c><00:04:10.850><c> flying</c><00:04:11.120><c> in</c><00:04:11.600><c> turn</c><00:04:11.780><c> the</c><00:04:11.870><c> volume</c>

00:04:12.070 --> 00:04:12.080 align:start position:0%
while it keeps flying in turn the volume
 

00:04:12.080 --> 00:04:24.300 align:start position:0%
while it keeps flying in turn the volume
back<00:04:12.110><c> up</c><00:04:12.380><c> down</c>

00:04:24.300 --> 00:04:24.310 align:start position:0%
 
 

00:04:24.310 --> 00:04:26.640 align:start position:0%
 
this<00:04:25.000><c> is</c><00:04:25.150><c> a</c><00:04:25.240><c> pretty</c><00:04:25.419><c> substantial</c><00:04:26.169><c> file</c><00:04:26.380><c> its</c>

00:04:26.640 --> 00:04:26.650 align:start position:0%
this is a pretty substantial file its
 

00:04:26.650 --> 00:04:33.420 align:start position:0%
this is a pretty substantial file its
forty<00:04:27.010><c> megabytes</c><00:04:27.310><c> as</c><00:04:27.970><c> a</c><00:04:28.030><c> nice</c><00:04:28.419><c> houses</c><00:04:30.180><c> and</c><00:04:32.430><c> so</c>

00:04:33.420 --> 00:04:33.430 align:start position:0%
forty megabytes as a nice houses and so
 

00:04:33.430 --> 00:04:36.360 align:start position:0%
forty megabytes as a nice houses and so
we're<00:04:33.850><c> encoding</c><00:04:34.300><c> that</c><00:04:34.750><c> a</c><00:04:34.780><c> six</c><00:04:35.320><c> channel</c><00:04:35.710><c> AC</c>

00:04:36.360 --> 00:04:36.370 align:start position:0%
we're encoding that a six channel AC
 

00:04:36.370 --> 00:04:37.980 align:start position:0%
we're encoding that a six channel AC
file<00:04:36.639><c> and</c><00:04:36.910><c> a</c><00:04:36.940><c> little</c><00:04:37.180><c> less</c><00:04:37.330><c> than</c><00:04:37.570><c> real</c><00:04:37.750><c> time</c>

00:04:37.980 --> 00:04:37.990 align:start position:0%
file and a little less than real time
 

00:04:37.990 --> 00:04:44.100 align:start position:0%
file and a little less than real time
here<00:04:38.669><c> it's</c><00:04:39.669><c> almost</c><00:04:39.820><c> time</c><00:04:41.190><c> and</c><00:04:42.780><c> so</c><00:04:43.780><c> here</c><00:04:43.990><c> we</c>

00:04:44.100 --> 00:04:44.110 align:start position:0%
here it's almost time and so here we
 

00:04:44.110 --> 00:04:46.710 align:start position:0%
here it's almost time and so here we
have<00:04:44.520><c> to</c><00:04:45.520><c> go</c><00:04:45.639><c> to</c><00:04:45.730><c> the</c><00:04:45.820><c> finder</c><00:04:46.150><c> will</c><00:04:46.300><c> see</c><00:04:46.480><c> now</c><00:04:46.660><c> to</c>

00:04:46.710 --> 00:04:46.720 align:start position:0%
have to go to the finder will see now to
 

00:04:46.720 --> 00:04:50.780 align:start position:0%
have to go to the finder will see now to
the<00:04:46.990><c> three</c><00:04:47.230><c> point</c><00:04:47.470><c> one</c><00:04:47.590><c> megabyte</c><00:04:48.190><c> file</c><00:04:48.760><c> and</c>

00:04:50.780 --> 00:04:50.790 align:start position:0%
the three point one megabyte file and
 

00:04:50.790 --> 00:05:04.530 align:start position:0%
the three point one megabyte file and
it's<00:04:51.790><c> also</c><00:04:52.000><c> in</c><00:04:52.210><c> surround</c>

00:05:04.530 --> 00:05:04.540 align:start position:0%
 
 

00:05:04.540 --> 00:05:06.640 align:start position:0%
 
this<00:05:05.540><c> is</c><00:05:05.660><c> kind</c><00:05:05.870><c> of</c><00:05:05.900><c> cool</c><00:05:05.960><c> and</c><00:05:06.199><c> scrubbing</c>

00:05:06.640 --> 00:05:06.650 align:start position:0%
this is kind of cool and scrubbing
 

00:05:06.650 --> 00:05:09.280 align:start position:0%
this is kind of cool and scrubbing
around<00:05:06.919><c> inside</c><00:05:07.340><c> the</c><00:05:07.580><c> AAC</c><00:05:08.090><c> file</c><00:05:08.360><c> it's</c><00:05:08.630><c> decoding</c>

00:05:09.280 --> 00:05:09.290 align:start position:0%
around inside the AAC file it's decoding
 

00:05:09.290 --> 00:05:17.530 align:start position:0%
around inside the AAC file it's decoding
multiple<00:05:09.680><c> packets</c><00:05:10.100><c> to</c><00:05:10.250><c> be</c><00:05:16.180><c> really</c><00:05:17.180><c> nice</c><00:05:17.330><c> and</c>

00:05:17.530 --> 00:05:17.540 align:start position:0%
multiple packets to be really nice and
 

00:05:17.540 --> 00:05:21.189 align:start position:0%
multiple packets to be really nice and
efficient<00:05:17.900><c> by</c><00:05:18.620><c> the</c><00:05:18.680><c> way</c><00:05:18.830><c> our</c><00:05:19.070><c> AAC</c><00:05:19.870><c> decoder</c><00:05:20.870><c> in</c>

00:05:21.189 --> 00:05:21.199 align:start position:0%
efficient by the way our AAC decoder in
 

00:05:21.199 --> 00:05:23.860 align:start position:0%
efficient by the way our AAC decoder in
our<00:05:21.650><c> tasks</c><00:05:22.070><c> is</c><00:05:22.430><c> about</c><00:05:22.820><c> three</c><00:05:23.270><c> times</c><00:05:23.449><c> as</c>

00:05:23.860 --> 00:05:23.870 align:start position:0%
our tasks is about three times as
 

00:05:23.870 --> 00:05:28.270 align:start position:0%
our tasks is about three times as
efficient<00:05:24.380><c> as</c><00:05:24.650><c> mp3</c><00:05:25.810><c> decoding</c><00:05:26.810><c> so</c><00:05:27.650><c> if</c><00:05:28.040><c> you're</c>

00:05:28.270 --> 00:05:28.280 align:start position:0%
efficient as mp3 decoding so if you're
 

00:05:28.280 --> 00:05:31.390 align:start position:0%
efficient as mp3 decoding so if you're
considering<00:05:28.639><c> putting</c><00:05:28.970><c> sounds</c><00:05:29.419><c> and</c><00:05:29.600><c> games</c><00:05:30.400><c> you</c>

00:05:31.390 --> 00:05:31.400 align:start position:0%
considering putting sounds and games you
 

00:05:31.400 --> 00:05:33.100 align:start position:0%
considering putting sounds and games you
might<00:05:31.550><c> take</c><00:05:31.790><c> a</c><00:05:31.820><c> closer</c><00:05:32.270><c> look</c><00:05:32.419><c> at</c><00:05:32.690><c> using</c><00:05:32.870><c> AAC</c>

00:05:33.100 --> 00:05:33.110 align:start position:0%
might take a closer look at using AAC
 

00:05:33.110 --> 00:05:37.240 align:start position:0%
might take a closer look at using AAC
encoding<00:05:33.770><c> instead</c><00:05:34.160><c> of</c><00:05:34.250><c> mp3</c><00:05:35.889><c> okay</c><00:05:36.889><c> so</c><00:05:36.950><c> that's</c>

00:05:37.240 --> 00:05:37.250 align:start position:0%
encoding instead of mp3 okay so that's
 

00:05:37.250 --> 00:05:38.830 align:start position:0%
encoding instead of mp3 okay so that's
the<00:05:37.490><c> simple</c><00:05:37.910><c> program</c><00:05:38.270><c> and</c><00:05:38.479><c> I'll</c><00:05:38.540><c> turn</c><00:05:38.690><c> it</c><00:05:38.810><c> back</c>

00:05:38.830 --> 00:05:38.840 align:start position:0%
the simple program and I'll turn it back
 

00:05:38.840 --> 00:05:41.469 align:start position:0%
the simple program and I'll turn it back
over<00:05:39.110><c> to</c><00:05:39.260><c> James</c><00:05:39.560><c> to</c><00:05:39.950><c> explain</c><00:05:40.430><c> the</c><00:05:40.669><c> AP</c><00:05:40.970><c> is</c><00:05:41.090><c> that</c>

00:05:41.469 --> 00:05:41.479 align:start position:0%
over to James to explain the AP is that
 

00:05:41.479 --> 00:05:49.690 align:start position:0%
over to James to explain the AP is that
are<00:05:41.570><c> underneath</c><00:05:41.930><c> this</c><00:05:42.169><c> program</c><00:05:42.760><c> thank</c><00:05:43.760><c> you</c><00:05:48.700><c> ok</c>

00:05:49.690 --> 00:05:49.700 align:start position:0%
are underneath this program thank you ok
 

00:05:49.700 --> 00:05:59.959 align:start position:0%
are underneath this program thank you ok
back<00:05:49.940><c> to</c><00:05:49.970><c> slides</c><00:05:50.360><c> please</c><00:05:56.560><c> slides</c>

00:05:59.959 --> 00:05:59.969 align:start position:0%
 
 

00:05:59.969 --> 00:06:04.219 align:start position:0%
 
and<00:06:00.569><c> there</c><00:06:00.719><c> we</c><00:06:00.779><c> go</c><00:06:02.779><c> okay</c><00:06:03.779><c> so</c><00:06:03.839><c> what</c><00:06:04.079><c> I'm</c><00:06:04.139><c> going</c>

00:06:04.219 --> 00:06:04.229 align:start position:0%
and there we go okay so what I'm going
 

00:06:04.229 --> 00:06:07.279 align:start position:0%
and there we go okay so what I'm going
to<00:06:04.319><c> talk</c><00:06:04.439><c> about</c><00:06:04.559><c> is</c><00:06:04.949><c> a</c><00:06:05.569><c> how</c><00:06:06.569><c> to</c><00:06:06.629><c> handle</c><00:06:06.959><c> audio</c>

00:06:07.279 --> 00:06:07.289 align:start position:0%
to talk about is a how to handle audio
 

00:06:07.289 --> 00:06:10.369 align:start position:0%
to talk about is a how to handle audio
formats<00:06:07.649><c> with</c><00:06:07.799><c> core</c><00:06:08.069><c> audio</c><00:06:08.569><c> first</c><00:06:09.569><c> I'll</c><00:06:09.779><c> sort</c>

00:06:10.369 --> 00:06:10.379 align:start position:0%
formats with core audio first I'll sort
 

00:06:10.379 --> 00:06:13.009 align:start position:0%
formats with core audio first I'll sort
of<00:06:10.499><c> review</c><00:06:10.829><c> the</c><00:06:11.669><c> basics</c><00:06:12.089><c> of</c><00:06:12.179><c> how</c><00:06:12.299><c> formats</c><00:06:12.869><c> are</c>

00:06:13.009 --> 00:06:13.019 align:start position:0%
of review the basics of how formats are
 

00:06:13.019 --> 00:06:15.439 align:start position:0%
of review the basics of how formats are
represented<00:06:13.559><c> in</c><00:06:13.759><c> karate</c><00:06:14.759><c> oh</c><00:06:14.879><c> then</c><00:06:15.149><c> I'll</c><00:06:15.239><c> talk</c>

00:06:15.439 --> 00:06:15.449 align:start position:0%
represented in karate oh then I'll talk
 

00:06:15.449 --> 00:06:19.369 align:start position:0%
represented in karate oh then I'll talk
about<00:06:15.589><c> the</c><00:06:16.589><c> audio</c><00:06:16.829><c> converter</c><00:06:17.039><c> API</c><00:06:17.939><c> and</c><00:06:18.419><c> the</c>

00:06:19.369 --> 00:06:19.379 align:start position:0%
about the audio converter API and the
 

00:06:19.379 --> 00:06:20.899 align:start position:0%
about the audio converter API and the
audio<00:06:19.619><c> format</c><00:06:19.979><c> API</c><00:06:20.249><c> which</c><00:06:20.519><c> is</c><00:06:20.639><c> new</c><00:06:20.789><c> and</c>

00:06:20.899 --> 00:06:20.909 align:start position:0%
audio format API which is new and
 

00:06:20.909 --> 00:06:22.759 align:start position:0%
audio format API which is new and
Panther<00:06:21.299><c> I'll</c><00:06:22.169><c> talk</c><00:06:22.319><c> about</c><00:06:22.349><c> some</c><00:06:22.559><c> new</c>

00:06:22.759 --> 00:06:22.769 align:start position:0%
Panther I'll talk about some new
 

00:06:22.769 --> 00:06:25.369 align:start position:0%
Panther I'll talk about some new
features<00:06:23.699><c> for</c><00:06:23.939><c> audio</c><00:06:24.419><c> units</c><00:06:24.719><c> for</c><00:06:24.929><c> supporting</c>

00:06:25.369 --> 00:06:25.379 align:start position:0%
features for audio units for supporting
 

00:06:25.379 --> 00:06:28.189 align:start position:0%
features for audio units for supporting
multi-channel<00:06:25.769><c> and</c><00:06:26.039><c> surround</c><00:06:26.369><c> and</c><00:06:26.909><c> I'll</c><00:06:27.569><c> talk</c>

00:06:28.189 --> 00:06:28.199 align:start position:0%
multi-channel and surround and I'll talk
 

00:06:28.199 --> 00:06:31.749 align:start position:0%
multi-channel and surround and I'll talk
about<00:06:28.259><c> the</c><00:06:28.799><c> new</c><00:06:29.639><c> audio</c><00:06:30.029><c> file</c><00:06:30.329><c> get</c><00:06:30.599><c> global</c><00:06:30.989><c> info</c>

00:06:31.749 --> 00:06:31.759 align:start position:0%
about the new audio file get global info
 

00:06:31.759 --> 00:06:36.279 align:start position:0%
about the new audio file get global info
API<00:06:32.759><c> and</c><00:06:33.119><c> the</c><00:06:33.629><c> new</c><00:06:33.749><c> matrix</c><00:06:34.079><c> mixer</c><00:06:34.499><c> audio</c><00:06:34.829><c> unit</c>

00:06:36.279 --> 00:06:36.289 align:start position:0%
API and the new matrix mixer audio unit
 

00:06:36.289 --> 00:06:40.879 align:start position:0%
API and the new matrix mixer audio unit
okay<00:06:37.289><c> so</c><00:06:38.360><c> one</c><00:06:39.360><c> thing</c><00:06:39.539><c> that's</c><00:06:39.719><c> been</c><00:06:40.019><c> a</c><00:06:40.229><c> source</c>

00:06:40.879 --> 00:06:40.889 align:start position:0%
okay so one thing that's been a source
 

00:06:40.889 --> 00:06:43.219 align:start position:0%
okay so one thing that's been a source
of<00:06:40.979><c> some</c><00:06:41.219><c> confusion</c><00:06:41.729><c> in</c><00:06:41.849><c> karate</c><00:06:42.179><c> is</c><00:06:42.360><c> what</c><00:06:42.869><c> is</c>

00:06:43.219 --> 00:06:43.229 align:start position:0%
of some confusion in karate is what is
 

00:06:43.229 --> 00:06:45.319 align:start position:0%
of some confusion in karate is what is
the<00:06:43.439><c> definition</c><00:06:43.589><c> of</c><00:06:44.039><c> frames</c><00:06:44.489><c> and</c><00:06:44.729><c> packets</c><00:06:45.119><c> and</c>

00:06:45.319 --> 00:06:45.329 align:start position:0%
the definition of frames and packets and
 

00:06:45.329 --> 00:06:47.509 align:start position:0%
the definition of frames and packets and
bites<00:06:45.929><c> examples</c><00:06:46.439><c> and</c><00:06:46.649><c> when</c><00:06:47.219><c> you're</c><00:06:47.339><c> dealing</c>

00:06:47.509 --> 00:06:47.519 align:start position:0%
bites examples and when you're dealing
 

00:06:47.519 --> 00:06:50.029 align:start position:0%
bites examples and when you're dealing
with<00:06:47.699><c> compressed</c><00:06:48.509><c> formats</c><00:06:48.899><c> it</c><00:06:49.049><c> gets</c><00:06:49.199><c> pretty</c>

00:06:50.029 --> 00:06:50.039 align:start position:0%
with compressed formats it gets pretty
 

00:06:50.039 --> 00:06:52.269 align:start position:0%
with compressed formats it gets pretty
important<00:06:50.519><c> to</c><00:06:50.669><c> take</c><00:06:51.059><c> them</c><00:06:51.239><c> all</c><00:06:51.389><c> into</c><00:06:51.539><c> account</c>

00:06:52.269 --> 00:06:52.279 align:start position:0%
important to take them all into account
 

00:06:52.279 --> 00:06:58.039 align:start position:0%
important to take them all into account
so<00:06:53.509><c> this</c><00:06:54.509><c> graphic</c><00:06:55.049><c> shows</c><00:06:55.079><c> a</c><00:06:55.789><c> what</c><00:06:56.789><c> a</c><00:06:57.049><c> 5-channel</c>

00:06:58.039 --> 00:06:58.049 align:start position:0%
so this graphic shows a what a 5-channel
 

00:06:58.049 --> 00:07:02.299 align:start position:0%
so this graphic shows a what a 5-channel
interleave<00:06:58.759><c> 24</c><00:06:59.759><c> bit</c><00:06:59.939><c> stream</c><00:07:00.269><c> looks</c><00:07:00.539><c> like</c><00:07:01.309><c> you</c>

00:07:02.299 --> 00:07:02.309 align:start position:0%
interleave 24 bit stream looks like you
 

00:07:02.309 --> 00:07:04.850 align:start position:0%
interleave 24 bit stream looks like you
can<00:07:02.429><c> see</c><00:07:02.669><c> that</c><00:07:03.179><c> one</c><00:07:03.689><c> sample</c><00:07:04.199><c> is</c><00:07:04.349><c> three</c><00:07:04.649><c> bytes</c>

00:07:04.850 --> 00:07:04.860 align:start position:0%
can see that one sample is three bytes
 

00:07:04.860 --> 00:07:08.149 align:start position:0%
can see that one sample is three bytes
and<00:07:05.449><c> five</c><00:07:06.449><c> channels</c><00:07:06.959><c> are</c><00:07:07.319><c> interleaved</c><00:07:07.769><c> into</c>

00:07:08.149 --> 00:07:08.159 align:start position:0%
and five channels are interleaved into
 

00:07:08.159 --> 00:07:12.169 align:start position:0%
and five channels are interleaved into
one<00:07:08.339><c> frame</c><00:07:08.729><c> and</c><00:07:08.969><c> for</c><00:07:09.209><c> linear</c><00:07:09.569><c> PCM</c><00:07:10.849><c> one</c><00:07:11.849><c> frame</c>

00:07:12.169 --> 00:07:12.179 align:start position:0%
one frame and for linear PCM one frame
 

00:07:12.179 --> 00:07:16.609 align:start position:0%
one frame and for linear PCM one frame
equals<00:07:12.509><c> one</c><00:07:12.809><c> packet</c><00:07:13.349><c> in</c><00:07:13.699><c> the</c><00:07:14.699><c> way</c><00:07:15.089><c> we</c><00:07:15.619><c> count</c>

00:07:16.609 --> 00:07:16.619 align:start position:0%
equals one packet in the way we count
 

00:07:16.619 --> 00:07:23.199 align:start position:0%
equals one packet in the way we count
thanks<00:07:16.860><c> in</c><00:07:17.099><c> the</c><00:07:17.219><c> car</c><00:07:17.369><c> audio</c><00:07:17.719><c> ap</c><00:07:18.719><c> is</c><00:07:19.309><c> and</c><00:07:20.309><c> this</c>

00:07:23.199 --> 00:07:23.209 align:start position:0%
 
 

00:07:23.209 --> 00:07:26.419 align:start position:0%
 
information<00:07:24.209><c> is</c><00:07:24.749><c> is</c><00:07:25.050><c> the</c><00:07:25.619><c> way</c><00:07:25.769><c> you</c><00:07:25.829><c> describe</c><00:07:26.339><c> a</c>

00:07:26.419 --> 00:07:26.429 align:start position:0%
information is is the way you describe a
 

00:07:26.429 --> 00:07:29.209 align:start position:0%
information is is the way you describe a
format<00:07:26.849><c> is</c><00:07:26.999><c> is</c><00:07:27.179><c> by</c><00:07:28.050><c> specifying</c><00:07:28.499><c> an</c><00:07:28.919><c> audio</c>

00:07:29.209 --> 00:07:29.219 align:start position:0%
format is is by specifying an audio
 

00:07:29.219 --> 00:07:31.459 align:start position:0%
format is is by specifying an audio
stream<00:07:29.549><c> basic</c><00:07:30.029><c> description</c><00:07:30.360><c> which</c><00:07:31.199><c> is</c><00:07:31.379><c> a</c>

00:07:31.459 --> 00:07:31.469 align:start position:0%
stream basic description which is a
 

00:07:31.469 --> 00:07:33.169 align:start position:0%
stream basic description which is a
structure<00:07:31.919><c> that's</c><00:07:32.129><c> used</c><00:07:32.429><c> throughout</c><00:07:32.939><c> the</c>

00:07:33.169 --> 00:07:33.179 align:start position:0%
structure that's used throughout the
 

00:07:33.179 --> 00:07:39.289 align:start position:0%
structure that's used throughout the
core<00:07:33.360><c> audio</c><00:07:33.629><c> ap</c><00:07:33.959><c> is</c><00:07:34.399><c> it</c><00:07:35.399><c> it</c><00:07:36.499><c> has</c><00:07:37.499><c> the</c><00:07:38.299><c> sample</c>

00:07:39.289 --> 00:07:39.299 align:start position:0%
core audio ap is it it has the sample
 

00:07:39.299 --> 00:07:41.959 align:start position:0%
core audio ap is it it has the sample
rate<00:07:39.449><c> for</c><00:07:39.719><c> the</c><00:07:39.839><c> stream</c><00:07:40.379><c> and</c><00:07:40.709><c> the</c><00:07:40.759><c> format</c><00:07:41.759><c> ID</c>

00:07:41.959 --> 00:07:41.969 align:start position:0%
rate for the stream and the format ID
 

00:07:41.969 --> 00:07:44.319 align:start position:0%
rate for the stream and the format ID
which<00:07:42.269><c> tells</c><00:07:42.509><c> you</c><00:07:42.689><c> whether</c><00:07:42.959><c> it's</c><00:07:43.079><c> a</c><00:07:43.409><c> PCM</c>

00:07:44.319 --> 00:07:44.329 align:start position:0%
which tells you whether it's a PCM
 

00:07:44.329 --> 00:07:46.999 align:start position:0%
which tells you whether it's a PCM
screen<00:07:45.329><c> or</c><00:07:45.659><c> it's</c><00:07:46.079><c> some</c><00:07:46.319><c> kind</c><00:07:46.529><c> of</c><00:07:46.589><c> compressed</c>

00:07:46.999 --> 00:07:47.009 align:start position:0%
screen or it's some kind of compressed
 

00:07:47.009 --> 00:07:50.089 align:start position:0%
screen or it's some kind of compressed
format<00:07:47.779><c> that's</c><00:07:48.779><c> the</c><00:07:49.049><c> format</c><00:07:49.379><c> ideas</c><00:07:49.739><c> of</c><00:07:49.889><c> for</c>

00:07:50.089 --> 00:07:50.099 align:start position:0%
format that's the format ideas of for
 

00:07:50.099 --> 00:07:54.469 align:start position:0%
format that's the format ideas of for
character<00:07:50.489><c> code</c><00:07:51.439><c> for</c><00:07:52.439><c> the</c><00:07:52.619><c> format</c><00:07:53.479><c> then</c>

00:07:54.469 --> 00:07:54.479 align:start position:0%
character code for the format then
 

00:07:54.479 --> 00:07:55.999 align:start position:0%
character code for the format then
there's<00:07:54.779><c> flags</c><00:07:55.139><c> that</c><00:07:55.349><c> are</c><00:07:55.439><c> specific</c><00:07:55.860><c> to</c><00:07:55.889><c> that</c>

00:07:55.999 --> 00:07:56.009 align:start position:0%
there's flags that are specific to that
 

00:07:56.009 --> 00:07:59.509 align:start position:0%
there's flags that are specific to that
format<00:07:56.549><c> and</c><00:07:56.809><c> some</c><00:07:57.949><c> fields</c><00:07:58.949><c> that</c><00:07:59.099><c> tell</c><00:07:59.309><c> you</c><00:07:59.429><c> the</c>

00:07:59.509 --> 00:07:59.519 align:start position:0%
format and some fields that tell you the
 

00:07:59.519 --> 00:08:01.819 align:start position:0%
format and some fields that tell you the
relationships<00:08:00.089><c> between</c><00:08:00.259><c> the</c><00:08:01.259><c> bites</c><00:08:01.499><c> the</c>

00:08:01.819 --> 00:08:01.829 align:start position:0%
relationships between the bites the
 

00:08:01.829 --> 00:08:04.579 align:start position:0%
relationships between the bites the
packets<00:08:02.249><c> and</c><00:08:02.549><c> the</c><00:08:02.699><c> frames</c><00:08:03.029><c> in</c><00:08:03.360><c> that</c><00:08:04.139><c> format</c>

00:08:04.579 --> 00:08:04.589 align:start position:0%
packets and the frames in that format
 

00:08:04.589 --> 00:08:06.489 align:start position:0%
packets and the frames in that format
and<00:08:04.829><c> a</c><00:08:04.860><c> number</c><00:08:05.309><c> of</c><00:08:05.459><c> channels</c><00:08:05.729><c> in</c><00:08:05.969><c> that</c><00:08:06.089><c> format</c>

00:08:06.489 --> 00:08:06.499 align:start position:0%
and a number of channels in that format
 

00:08:06.499 --> 00:08:10.860 align:start position:0%
and a number of channels in that format
and<00:08:07.499><c> how</c><00:08:07.619><c> many</c><00:08:07.799><c> bits</c><00:08:08.009><c> per</c><00:08:08.219><c> channel</c>

00:08:10.860 --> 00:08:10.870 align:start position:0%
 
 

00:08:10.870 --> 00:08:14.830 align:start position:0%
 
each<00:08:11.870><c> sample</c><00:08:12.290><c> is</c><00:08:12.380><c> in</c><00:08:12.560><c> that</c><00:08:12.680><c> format</c><00:08:13.780><c> okay</c><00:08:14.780><c> so</c>

00:08:14.830 --> 00:08:14.840 align:start position:0%
each sample is in that format okay so
 

00:08:14.840 --> 00:08:16.660 align:start position:0%
each sample is in that format okay so
here's<00:08:15.110><c> an</c><00:08:15.260><c> example</c><00:08:15.320><c> of</c><00:08:15.770><c> how</c><00:08:15.950><c> to</c><00:08:16.010><c> fill</c><00:08:16.400><c> one</c><00:08:16.550><c> of</c>

00:08:16.660 --> 00:08:16.670 align:start position:0%
here's an example of how to fill one of
 

00:08:16.670 --> 00:08:19.860 align:start position:0%
here's an example of how to fill one of
these<00:08:16.700><c> out</c><00:08:17.000><c> for</c><00:08:17.300><c> the</c><00:08:18.110><c> five</c><00:08:18.890><c> channel</c><00:08:19.280><c> 24</c><00:08:19.640><c> bit</c>

00:08:19.860 --> 00:08:19.870 align:start position:0%
these out for the five channel 24 bit
 

00:08:19.870 --> 00:08:22.630 align:start position:0%
these out for the five channel 24 bit
interleaved<00:08:20.870><c> stream</c><00:08:21.140><c> that</c><00:08:21.320><c> was</c><00:08:21.470><c> in</c><00:08:21.620><c> the</c><00:08:21.770><c> first</c>

00:08:22.630 --> 00:08:22.640 align:start position:0%
interleaved stream that was in the first
 

00:08:22.640 --> 00:08:26.110 align:start position:0%
interleaved stream that was in the first
graphic<00:08:23.150><c> there</c><00:08:23.470><c> the</c><00:08:24.470><c> format</c><00:08:24.800><c> ID</c><00:08:25.010><c> is</c><00:08:25.310><c> linear</c>

00:08:26.110 --> 00:08:26.120 align:start position:0%
graphic there the format ID is linear
 

00:08:26.120 --> 00:08:29.290 align:start position:0%
graphic there the format ID is linear
PCM<00:08:26.770><c> the</c><00:08:27.770><c> flags</c><00:08:28.070><c> are</c><00:08:28.340><c> sets</c><00:08:28.580><c> a</c><00:08:28.730><c> big</c><00:08:28.910><c> Indian</c>

00:08:29.290 --> 00:08:29.300 align:start position:0%
PCM the flags are sets a big Indian
 

00:08:29.300 --> 00:08:33.940 align:start position:0%
PCM the flags are sets a big Indian
signed<00:08:29.990><c> integer</c><00:08:30.410><c> packed</c><00:08:31.870><c> it's</c><00:08:32.870><c> one</c><00:08:33.410><c> frame</c><00:08:33.650><c> for</c>

00:08:33.940 --> 00:08:33.950 align:start position:0%
signed integer packed it's one frame for
 

00:08:33.950 --> 00:08:37.240 align:start position:0%
signed integer packed it's one frame for
packets<00:08:34.310><c> all</c><00:08:34.780><c> linear</c><00:08:35.780><c> PCM</c><00:08:35.960><c> is</c><00:08:36.410><c> one</c><00:08:36.590><c> frame</c><00:08:36.950><c> per</c>

00:08:37.240 --> 00:08:37.250 align:start position:0%
packets all linear PCM is one frame per
 

00:08:37.250 --> 00:08:40.930 align:start position:0%
packets all linear PCM is one frame per
packet<00:08:38.290><c> and</c><00:08:39.290><c> then</c><00:08:40.010><c> for</c><00:08:40.400><c> this</c><00:08:40.550><c> interleaved</c>

00:08:40.930 --> 00:08:40.940 align:start position:0%
packet and then for this interleaved
 

00:08:40.940 --> 00:08:43.360 align:start position:0%
packet and then for this interleaved
rain<00:08:41.210><c> there's</c><00:08:41.480><c> 15</c><00:08:41.870><c> bytes</c><00:08:42.110><c> per</c><00:08:42.380><c> packet</c><00:08:42.890><c> and</c><00:08:43.100><c> 15</c>

00:08:43.360 --> 00:08:43.370 align:start position:0%
rain there's 15 bytes per packet and 15
 

00:08:43.370 --> 00:08:47.050 align:start position:0%
rain there's 15 bytes per packet and 15
bytes<00:08:43.580><c> for</c><00:08:43.760><c> frame</c><00:08:44.440><c> 5</c><00:08:45.440><c> channels</c><00:08:45.830><c> for</c><00:08:45.980><c> frame</c><00:08:46.250><c> 24</c>

00:08:47.050 --> 00:08:47.060 align:start position:0%
bytes for frame 5 channels for frame 24
 

00:08:47.060 --> 00:08:51.010 align:start position:0%
bytes for frame 5 channels for frame 24
bits<00:08:47.270><c> per</c><00:08:47.420><c> channel</c><00:08:48.760><c> ok</c><00:08:49.760><c> so</c><00:08:49.820><c> you</c><00:08:50.300><c> know</c><00:08:50.450><c> this</c>

00:08:51.010 --> 00:08:51.020 align:start position:0%
bits per channel ok so you know this
 

00:08:51.020 --> 00:08:52.810 align:start position:0%
bits per channel ok so you know this
shows<00:08:51.260><c> an</c><00:08:51.470><c> example</c><00:08:51.710><c> of</c><00:08:51.920><c> an</c><00:08:52.100><c> on</c><00:08:52.370><c> interleaves</c>

00:08:52.810 --> 00:08:52.820 align:start position:0%
shows an example of an on interleaves
 

00:08:52.820 --> 00:08:56.860 align:start position:0%
shows an example of an on interleaves
stream<00:08:53.860><c> there's</c><00:08:54.860><c> a</c><00:08:55.010><c> two</c><00:08:55.670><c> buffers</c><00:08:56.090><c> each</c><00:08:56.600><c> of</c>

00:08:56.860 --> 00:08:56.870 align:start position:0%
stream there's a two buffers each of
 

00:08:56.870 --> 00:08:59.610 align:start position:0%
stream there's a two buffers each of
them<00:08:57.020><c> holds</c><00:08:57.470><c> floating</c><00:08:58.460><c> point</c><00:08:58.670><c> samples</c>

00:08:59.610 --> 00:08:59.620 align:start position:0%
them holds floating point samples
 

00:08:59.620 --> 00:09:04.840 align:start position:0%
them holds floating point samples
therefore<00:09:00.620><c> by</c><00:09:00.740><c> speech</c><00:09:03.130><c> you</c><00:09:04.130><c> see</c><00:09:04.370><c> on</c><00:09:04.520><c> the</c><00:09:04.640><c> Left</c>

00:09:04.840 --> 00:09:04.850 align:start position:0%
therefore by speech you see on the Left
 

00:09:04.850 --> 00:09:11.860 align:start position:0%
therefore by speech you see on the Left
there's<00:09:05.210><c> a</c><00:09:06.910><c> these</c><00:09:07.910><c> names</c><00:09:08.900><c> and</c><00:09:09.260><c> buffers</c><00:09:10.630><c> sub</c><00:09:11.630><c> 0</c>

00:09:11.860 --> 00:09:11.870 align:start position:0%
there's a these names and buffers sub 0
 

00:09:11.870 --> 00:09:14.650 align:start position:0%
there's a these names and buffers sub 0
M<00:09:12.260><c> data</c><00:09:12.500><c> that's</c><00:09:12.770><c> that's</c><00:09:13.160><c> a</c><00:09:13.450><c> fields</c><00:09:14.450><c> in</c><00:09:14.570><c> the</c>

00:09:14.650 --> 00:09:14.660 align:start position:0%
M data that's that's a fields in the
 

00:09:14.660 --> 00:09:16.300 align:start position:0%
M data that's that's a fields in the
audio<00:09:14.930><c> buffer</c><00:09:15.170><c> list</c><00:09:15.500><c> structure</c><00:09:15.920><c> which</c><00:09:16.190><c> I'll</c>

00:09:16.300 --> 00:09:16.310 align:start position:0%
audio buffer list structure which I'll
 

00:09:16.310 --> 00:09:19.990 align:start position:0%
audio buffer list structure which I'll
show<00:09:16.520><c> in</c><00:09:16.640><c> a</c><00:09:16.700><c> minute</c><00:09:17.860><c> so</c><00:09:18.860><c> in</c><00:09:18.950><c> each</c><00:09:19.070><c> each</c><00:09:19.610><c> buffer</c>

00:09:19.990 --> 00:09:20.000 align:start position:0%
show in a minute so in each each buffer
 

00:09:20.000 --> 00:09:25.060 align:start position:0%
show in a minute so in each each buffer
there's<00:09:23.140><c> samples</c><00:09:24.140><c> from</c><00:09:24.260><c> one</c><00:09:24.530><c> channel</c><00:09:24.740><c> of</c><00:09:24.980><c> the</c>

00:09:25.060 --> 00:09:25.070 align:start position:0%
there's samples from one channel of the
 

00:09:25.070 --> 00:09:29.800 align:start position:0%
there's samples from one channel of the
data<00:09:25.280><c> so</c><00:09:26.120><c> this</c><00:09:28.180><c> non-arabic</c><00:09:29.180><c> stream</c><00:09:29.450><c> has</c><00:09:29.630><c> two</c>

00:09:29.800 --> 00:09:29.810 align:start position:0%
data so this non-arabic stream has two
 

00:09:29.810 --> 00:09:33.460 align:start position:0%
data so this non-arabic stream has two
channels<00:09:30.020><c> and</c><00:09:30.410><c> so</c><00:09:30.560><c> there's</c><00:09:30.740><c> two</c><00:09:30.950><c> buffers</c><00:09:32.470><c> ok</c>

00:09:33.460 --> 00:09:33.470 align:start position:0%
channels and so there's two buffers ok
 

00:09:33.470 --> 00:09:34.870 align:start position:0%
channels and so there's two buffers ok
and<00:09:33.560><c> then</c><00:09:33.680><c> here's</c><00:09:33.920><c> the</c><00:09:33.980><c> audio</c><00:09:34.370><c> stream</c><00:09:34.580><c> basic</c>

00:09:34.870 --> 00:09:34.880 align:start position:0%
and then here's the audio stream basic
 

00:09:34.880 --> 00:09:38.260 align:start position:0%
and then here's the audio stream basic
description<00:09:35.180><c> for</c><00:09:35.480><c> that</c><00:09:36.790><c> the</c><00:09:37.790><c> one</c><00:09:38.000><c> difference</c>

00:09:38.260 --> 00:09:38.270 align:start position:0%
description for that the one difference
 

00:09:38.270 --> 00:09:39.880 align:start position:0%
description for that the one difference
you'll<00:09:38.690><c> see</c><00:09:38.930><c> here</c><00:09:39.230><c> well</c><00:09:39.530><c> for</c><00:09:39.740><c> one</c><00:09:39.860><c> thing</c>

00:09:39.880 --> 00:09:39.890 align:start position:0%
you'll see here well for one thing
 

00:09:39.890 --> 00:09:41.890 align:start position:0%
you'll see here well for one thing
there's<00:09:40.190><c> the</c><00:09:40.310><c> flag</c><00:09:40.490><c> for</c><00:09:41.030><c> non</c><00:09:41.240><c> interleaved</c><00:09:41.660><c> is</c>

00:09:41.890 --> 00:09:41.900 align:start position:0%
there's the flag for non interleaved is
 

00:09:41.900 --> 00:09:44.230 align:start position:0%
there's the flag for non interleaved is
set<00:09:42.170><c> the</c><00:09:42.500><c> format</c><00:09:42.830><c> flag</c><00:09:43.100><c> and</c><00:09:43.430><c> another</c>

00:09:44.230 --> 00:09:44.240 align:start position:0%
set the format flag and another
 

00:09:44.240 --> 00:09:45.730 align:start position:0%
set the format flag and another
difference<00:09:44.720><c> you'll</c><00:09:44.840><c> see</c><00:09:45.020><c> here</c><00:09:45.260><c> is</c><00:09:45.350><c> that</c><00:09:45.500><c> vice</c>

00:09:45.730 --> 00:09:45.740 align:start position:0%
difference you'll see here is that vice
 

00:09:45.740 --> 00:09:48.210 align:start position:0%
difference you'll see here is that vice
for<00:09:45.980><c> packet</c><00:09:46.310><c> invites</c><00:09:46.610><c> for</c><00:09:46.790><c> a</c><00:09:46.850><c> frame</c><00:09:47.150><c> is</c><00:09:47.420><c> for</c>

00:09:48.210 --> 00:09:48.220 align:start position:0%
for packet invites for a frame is for
 

00:09:48.220 --> 00:09:53.110 align:start position:0%
for packet invites for a frame is for
describes<00:09:49.220><c> one</c><00:09:49.910><c> of</c><00:09:50.030><c> those</c><00:09:51.130><c> buffers</c><00:09:52.130><c> so</c><00:09:52.520><c> even</c>

00:09:53.110 --> 00:09:53.120 align:start position:0%
describes one of those buffers so even
 

00:09:53.120 --> 00:09:54.760 align:start position:0%
describes one of those buffers so even
though<00:09:53.210><c> there's</c><00:09:53.390><c> two</c><00:09:53.510><c> channels</c><00:09:53.990><c> it's</c><00:09:54.200><c> not</c><00:09:54.380><c> two</c>

00:09:54.760 --> 00:09:54.770 align:start position:0%
though there's two channels it's not two
 

00:09:54.770 --> 00:09:56.530 align:start position:0%
though there's two channels it's not two
times<00:09:55.040><c> four</c><00:09:55.370><c> bytes</c><00:09:55.640><c> it's</c><00:09:55.910><c> just</c><00:09:56.120><c> four</c><00:09:56.300><c> bytes</c>

00:09:56.530 --> 00:09:56.540 align:start position:0%
times four bytes it's just four bytes
 

00:09:56.540 --> 00:09:58.930 align:start position:0%
times four bytes it's just four bytes
per<00:09:56.860><c> package</c><00:09:57.860><c> because</c><00:09:58.010><c> they're</c><00:09:58.340><c> split</c><00:09:58.670><c> into</c>

00:09:58.930 --> 00:09:58.940 align:start position:0%
per package because they're split into
 

00:09:58.940 --> 00:10:03.610 align:start position:0%
per package because they're split into
two<00:09:59.120><c> buffers</c><00:10:01.030><c> ok</c><00:10:02.030><c> so</c><00:10:02.140><c> now</c><00:10:03.140><c> when</c><00:10:03.260><c> you</c><00:10:03.350><c> get</c><00:10:03.470><c> into</c>

00:10:03.610 --> 00:10:03.620 align:start position:0%
two buffers ok so now when you get into
 

00:10:03.620 --> 00:10:06.430 align:start position:0%
two buffers ok so now when you get into
compressed<00:10:04.010><c> formats</c><00:10:04.550><c> the</c><00:10:05.450><c> simplest</c><00:10:05.870><c> kind</c><00:10:06.290><c> of</c>

00:10:06.430 --> 00:10:06.440 align:start position:0%
compressed formats the simplest kind of
 

00:10:06.440 --> 00:10:08.020 align:start position:0%
compressed formats the simplest kind of
compressed<00:10:06.800><c> format</c><00:10:07.130><c> it's</c><00:10:07.280><c> a</c><00:10:07.340><c> constant</c><00:10:07.910><c> bit</c>

00:10:08.020 --> 00:10:08.030 align:start position:0%
compressed format it's a constant bit
 

00:10:08.030 --> 00:10:11.050 align:start position:0%
compressed format it's a constant bit
rate<00:10:08.060><c> format</c><00:10:08.720><c> this</c><00:10:09.440><c> is</c><00:10:09.620><c> there's</c><00:10:10.130><c> a</c><00:10:10.190><c> constant</c>

00:10:11.050 --> 00:10:11.060 align:start position:0%
rate format this is there's a constant
 

00:10:11.060 --> 00:10:14.710 align:start position:0%
rate format this is there's a constant
number<00:10:11.210><c> of</c><00:10:11.510><c> bytes</c><00:10:11.750><c> per</c><00:10:11.930><c> packet</c><00:10:12.670><c> a</c><00:10:13.670><c> number</c><00:10:14.630><c> of</c>

00:10:14.710 --> 00:10:14.720 align:start position:0%
number of bytes per packet a number of
 

00:10:14.720 --> 00:10:16.210 align:start position:0%
number of bytes per packet a number of
frames<00:10:14.930><c> for</c><00:10:15.290><c> packet</c><00:10:15.590><c> depends</c><00:10:15.980><c> on</c><00:10:16.100><c> the</c>

00:10:16.210 --> 00:10:16.220 align:start position:0%
frames for packet depends on the
 

00:10:16.220 --> 00:10:18.130 align:start position:0%
frames for packet depends on the
compressed<00:10:16.580><c> format</c><00:10:17.030><c> that</c><00:10:17.690><c> you're</c><00:10:17.810><c> dealing</c>

00:10:18.130 --> 00:10:18.140 align:start position:0%
compressed format that you're dealing
 

00:10:18.140 --> 00:10:20.540 align:start position:0%
compressed format that you're dealing
with

00:10:20.540 --> 00:10:20.550 align:start position:0%
 
 

00:10:20.550 --> 00:10:24.389 align:start position:0%
 
so<00:10:21.550><c> the</c><00:10:22.300><c> other</c><00:10:22.420><c> kind</c><00:10:22.720><c> will</c><00:10:23.499><c> be</c><00:10:23.649><c> a</c><00:10:23.680><c> variable</c><00:10:24.189><c> bit</c>

00:10:24.389 --> 00:10:24.399 align:start position:0%
so the other kind will be a variable bit
 

00:10:24.399 --> 00:10:28.110 align:start position:0%
so the other kind will be a variable bit
rate<00:10:24.870><c> data</c><00:10:25.870><c> and</c><00:10:26.319><c> that's</c><00:10:26.470><c> the</c><00:10:27.399><c> number</c><00:10:27.850><c> of</c><00:10:27.939><c> bytes</c>

00:10:28.110 --> 00:10:28.120 align:start position:0%
rate data and that's the number of bytes
 

00:10:28.120 --> 00:10:31.650 align:start position:0%
rate data and that's the number of bytes
per<00:10:28.240><c> packet</c><00:10:28.689><c> can</c><00:10:29.529><c> vary</c><00:10:29.769><c> and</c><00:10:30.040><c> in</c><00:10:30.759><c> the</c><00:10:30.910><c> audio</c>

00:10:31.650 --> 00:10:31.660 align:start position:0%
per packet can vary and in the audio
 

00:10:31.660 --> 00:10:33.869 align:start position:0%
per packet can vary and in the audio
stream<00:10:31.870><c> basic</c><00:10:32.139><c> description</c><00:10:32.499><c> the</c><00:10:32.860><c> n</c><00:10:33.279><c> bytes</c><00:10:33.790><c> per</c>

00:10:33.869 --> 00:10:33.879 align:start position:0%
stream basic description the n bytes per
 

00:10:33.879 --> 00:10:36.389 align:start position:0%
stream basic description the n bytes per
packet<00:10:34.499><c> it's</c><00:10:35.499><c> just</c><00:10:35.709><c> such</c><00:10:35.860><c> a</c><00:10:35.889><c> zero</c><00:10:36.189><c> because</c>

00:10:36.389 --> 00:10:36.399 align:start position:0%
packet it's just such a zero because
 

00:10:36.399 --> 00:10:42.059 align:start position:0%
packet it's just such a zero because
it's<00:10:36.639><c> not</c><00:10:36.790><c> a</c><00:10:36.819><c> constant</c><00:10:37.329><c> value</c><00:10:40.259><c> ok</c><00:10:41.259><c> now</c><00:10:41.889><c> when</c>

00:10:42.059 --> 00:10:42.069 align:start position:0%
it's not a constant value ok now when
 

00:10:42.069 --> 00:10:44.040 align:start position:0%
it's not a constant value ok now when
you're<00:10:42.189><c> dealing</c><00:10:42.399><c> with</c><00:10:42.579><c> some</c><00:10:42.910><c> formats</c><00:10:43.360><c> like</c>

00:10:44.040 --> 00:10:44.050 align:start position:0%
you're dealing with some formats like
 

00:10:44.050 --> 00:10:47.850 align:start position:0%
you're dealing with some formats like
AAC<00:10:44.470><c> that</c><00:10:45.040><c> are</c><00:10:45.160><c> don't</c><00:10:46.029><c> have</c><00:10:46.379><c> information</c><00:10:47.379><c> in</c>

00:10:47.850 --> 00:10:47.860 align:start position:0%
AAC that are don't have information in
 

00:10:47.860 --> 00:10:49.170 align:start position:0%
AAC that are don't have information in
the<00:10:47.980><c> bitstream</c><00:10:48.279><c> about</c><00:10:48.670><c> where</c><00:10:48.879><c> the</c><00:10:48.999><c> package</c>

00:10:49.170 --> 00:10:49.180 align:start position:0%
the bitstream about where the package
 

00:10:49.180 --> 00:10:51.900 align:start position:0%
the bitstream about where the package
boundaries<00:10:49.689><c> are</c><00:10:49.839><c> you</c><00:10:50.050><c> need</c><00:10:50.230><c> something</c><00:10:51.189><c> an</c>

00:10:51.900 --> 00:10:51.910 align:start position:0%
boundaries are you need something an
 

00:10:51.910 --> 00:10:55.410 align:start position:0%
boundaries are you need something an
external<00:10:53.430><c> piece</c><00:10:54.430><c> of</c><00:10:54.579><c> data</c><00:10:54.730><c> to</c><00:10:54.939><c> tell</c><00:10:55.120><c> you</c><00:10:55.240><c> where</c>

00:10:55.410 --> 00:10:55.420 align:start position:0%
external piece of data to tell you where
 

00:10:55.420 --> 00:10:57.840 align:start position:0%
external piece of data to tell you where
those<00:10:55.569><c> package</c><00:10:55.930><c> boundaries</c><00:10:56.350><c> are</c><00:10:56.559><c> and</c><00:10:56.800><c> we</c><00:10:57.639><c> use</c>

00:10:57.840 --> 00:10:57.850 align:start position:0%
those package boundaries are and we use
 

00:10:57.850 --> 00:11:01.350 align:start position:0%
those package boundaries are and we use
the<00:10:58.740><c> audio</c><00:10:59.740><c> stream</c><00:11:00.189><c> package</c><00:11:00.579><c> description</c><00:11:01.059><c> in</c>

00:11:01.350 --> 00:11:01.360 align:start position:0%
the audio stream package description in
 

00:11:01.360 --> 00:11:04.470 align:start position:0%
the audio stream package description in
RIT<00:11:02.019><c> is</c><00:11:02.139><c> to</c><00:11:02.589><c> tell</c><00:11:02.800><c> you</c><00:11:03.059><c> what</c><00:11:04.059><c> the</c><00:11:04.180><c> starting</c>

00:11:04.470 --> 00:11:04.480 align:start position:0%
RIT is to tell you what the starting
 

00:11:04.480 --> 00:11:07.019 align:start position:0%
RIT is to tell you what the starting
byte<00:11:04.660><c> offset</c><00:11:04.809><c> of</c><00:11:05.139><c> a</c><00:11:05.199><c> packet</c><00:11:05.559><c> is</c><00:11:05.740><c> and</c><00:11:06.029><c> the</c>

00:11:07.019 --> 00:11:07.029 align:start position:0%
byte offset of a packet is and the
 

00:11:07.029 --> 00:11:10.079 align:start position:0%
byte offset of a packet is and the
length<00:11:07.240><c> in</c><00:11:07.540><c> bytes</c><00:11:07.839><c> of</c><00:11:08.050><c> that</c><00:11:08.230><c> packet</c><00:11:08.620><c> and</c><00:11:09.089><c> when</c>

00:11:10.079 --> 00:11:10.089 align:start position:0%
length in bytes of that packet and when
 

00:11:10.089 --> 00:11:11.790 align:start position:0%
length in bytes of that packet and when
you're<00:11:10.209><c> passing</c><00:11:10.569><c> around</c><00:11:10.720><c> a</c><00:11:10.899><c> fee</c><00:11:11.290><c> data</c><00:11:11.529><c> you</c>

00:11:11.790 --> 00:11:11.800 align:start position:0%
you're passing around a fee data you
 

00:11:11.800 --> 00:11:14.100 align:start position:0%
you're passing around a fee data you
have<00:11:11.829><c> to</c><00:11:12.249><c> pass</c><00:11:12.399><c> around</c><00:11:12.610><c> a</c><00:11:13.120><c> ray</c><00:11:13.809><c> of</c><00:11:13.839><c> these</c>

00:11:14.100 --> 00:11:14.110 align:start position:0%
have to pass around a ray of these
 

00:11:14.110 --> 00:11:15.720 align:start position:0%
have to pass around a ray of these
packet<00:11:14.529><c> descriptions</c><00:11:14.949><c> to</c><00:11:15.100><c> tell</c><00:11:15.309><c> you</c><00:11:15.430><c> where</c>

00:11:15.720 --> 00:11:15.730 align:start position:0%
packet descriptions to tell you where
 

00:11:15.730 --> 00:11:22.499 align:start position:0%
packet descriptions to tell you where
the<00:11:16.389><c> packet</c><00:11:16.990><c> boundaries</c><00:11:17.319><c> are</c><00:11:19.920><c> ok</c><00:11:20.920><c> now</c><00:11:21.509><c> audio</c>

00:11:22.499 --> 00:11:22.509 align:start position:0%
the packet boundaries are ok now audio
 

00:11:22.509 --> 00:11:25.379 align:start position:0%
the packet boundaries are ok now audio
data<00:11:22.809><c> is</c><00:11:23.529><c> stored</c><00:11:23.980><c> in</c><00:11:24.189><c> audio</c><00:11:24.670><c> buffer</c><00:11:24.910><c> list</c><00:11:25.209><c> in</c>

00:11:25.379 --> 00:11:25.389 align:start position:0%
data is stored in audio buffer list in
 

00:11:25.389 --> 00:11:28.619 align:start position:0%
data is stored in audio buffer list in
core<00:11:25.600><c> audio</c><00:11:26.069><c> throughout</c><00:11:27.069><c> our</c><00:11:27.279><c> api's</c><00:11:27.910><c> this</c><00:11:28.449><c> is</c>

00:11:28.619 --> 00:11:28.629 align:start position:0%
core audio throughout our api's this is
 

00:11:28.629 --> 00:11:31.079 align:start position:0%
core audio throughout our api's this is
an<00:11:28.750><c> audio</c><00:11:29.079><c> unit</c><00:11:29.410><c> and</c><00:11:29.769><c> the</c><00:11:30.639><c> audio</c><00:11:30.879><c> converter</c>

00:11:31.079 --> 00:11:31.089 align:start position:0%
an audio unit and the audio converter
 

00:11:31.089 --> 00:11:35.720 align:start position:0%
an audio unit and the audio converter
and<00:11:31.540><c> the</c><00:11:32.110><c> how</c><00:11:33.569><c> the</c><00:11:34.569><c> audio</c><00:11:34.750><c> buffer</c><00:11:34.959><c> list</c><00:11:35.230><c> is</c><00:11:35.470><c> a</c>

00:11:35.720 --> 00:11:35.730 align:start position:0%
and the how the audio buffer list is a
 

00:11:35.730 --> 00:11:37.889 align:start position:0%
and the how the audio buffer list is a
so<00:11:36.730><c> it</c><00:11:36.790><c> tells</c><00:11:37.180><c> you</c><00:11:37.329><c> the</c><00:11:37.389><c> number</c><00:11:37.660><c> of</c><00:11:37.750><c> buffers</c>

00:11:37.889 --> 00:11:37.899 align:start position:0%
so it tells you the number of buffers
 

00:11:37.899 --> 00:11:40.139 align:start position:0%
so it tells you the number of buffers
and<00:11:38.319><c> then</c><00:11:38.620><c> there's</c><00:11:38.800><c> a</c><00:11:38.860><c> buffer</c><00:11:39.459><c> structure</c><00:11:39.939><c> an</c>

00:11:40.139 --> 00:11:40.149 align:start position:0%
and then there's a buffer structure an
 

00:11:40.149 --> 00:11:42.059 align:start position:0%
and then there's a buffer structure an
array<00:11:40.389><c> of</c><00:11:40.420><c> buffer</c><00:11:40.750><c> structures</c><00:11:41.170><c> in</c><00:11:41.949><c> each</c>

00:11:42.059 --> 00:11:42.069 align:start position:0%
array of buffer structures in each
 

00:11:42.069 --> 00:11:44.160 align:start position:0%
array of buffer structures in each
buffer<00:11:42.309><c> tells</c><00:11:42.639><c> you</c><00:11:42.759><c> how</c><00:11:42.970><c> many</c><00:11:43.170><c> interleave</c>

00:11:44.160 --> 00:11:44.170 align:start position:0%
buffer tells you how many interleave
 

00:11:44.170 --> 00:11:47.699 align:start position:0%
buffer tells you how many interleave
channels<00:11:44.620><c> there</c><00:11:44.860><c> are</c><00:11:45.040><c> in</c><00:11:45.279><c> that</c><00:11:46.500><c> buffer</c><00:11:47.500><c> and</c>

00:11:47.699 --> 00:11:47.709 align:start position:0%
channels there are in that buffer and
 

00:11:47.709 --> 00:11:50.579 align:start position:0%
channels there are in that buffer and
the<00:11:48.550><c> size</c><00:11:48.819><c> of</c><00:11:49.029><c> the</c><00:11:49.120><c> buffer</c><00:11:49.300><c> and</c><00:11:49.660><c> then</c><00:11:50.439><c> there's</c>

00:11:50.579 --> 00:11:50.589 align:start position:0%
the size of the buffer and then there's
 

00:11:50.589 --> 00:11:54.660 align:start position:0%
the size of the buffer and then there's
a<00:11:50.649><c> pointer</c><00:11:50.949><c> to</c><00:11:50.980><c> the</c><00:11:51.189><c> buffer</c><00:11:53.129><c> ok</c><00:11:54.129><c> all</c><00:11:54.370><c> these</c>

00:11:54.660 --> 00:11:54.670 align:start position:0%
a pointer to the buffer ok all these
 

00:11:54.670 --> 00:11:56.670 align:start position:0%
a pointer to the buffer ok all these
structures<00:11:55.509><c> on</c><00:11:55.720><c> talking</c><00:11:56.079><c> about</c><00:11:56.290><c> and</c><00:11:56.529><c> some</c>

00:11:56.670 --> 00:11:56.680 align:start position:0%
structures on talking about and some
 

00:11:56.680 --> 00:11:58.490 align:start position:0%
structures on talking about and some
I'll<00:11:56.800><c> talk</c><00:11:56.980><c> about</c><00:11:57.009><c> later</c><00:11:57.220><c> are</c><00:11:57.670><c> defining</c>

00:11:58.490 --> 00:11:58.500 align:start position:0%
I'll talk about later are defining
 

00:11:58.500 --> 00:12:03.600 align:start position:0%
I'll talk about later are defining
Corrado<00:11:59.500><c> types</c><00:11:59.829><c> eh</c><00:12:01.920><c> they're</c><00:12:02.920><c> used</c><00:12:03.160><c> everywhere</c>

00:12:03.600 --> 00:12:03.610 align:start position:0%
Corrado types eh they're used everywhere
 

00:12:03.610 --> 00:12:09.030 align:start position:0%
Corrado types eh they're used everywhere
in<00:12:03.850><c> car</c><00:12:04.059><c> audio</c><00:12:04.480><c> so</c><00:12:04.929><c> they're</c><00:12:07.649><c> to</c><00:12:08.649><c> maintain</c>

00:12:09.030 --> 00:12:09.040 align:start position:0%
in car audio so they're to maintain
 

00:12:09.040 --> 00:12:11.569 align:start position:0%
in car audio so they're to maintain
consistency<00:12:09.660><c> throughout</c><00:12:10.660><c> Claudio</c><00:12:11.199><c> and</c>

00:12:11.569 --> 00:12:11.579 align:start position:0%
consistency throughout Claudio and
 

00:12:11.579 --> 00:12:14.340 align:start position:0%
consistency throughout Claudio and
there's<00:12:12.579><c> public</c><00:12:12.819><c> utility</c><00:12:13.420><c> classes</c><00:12:13.689><c> that</c><00:12:14.259><c> are</c>

00:12:14.340 --> 00:12:14.350 align:start position:0%
there's public utility classes that are
 

00:12:14.350 --> 00:12:18.119 align:start position:0%
there's public utility classes that are
shipped<00:12:14.589><c> with</c><00:12:14.709><c> the</c><00:12:14.829><c> SDK</c><00:12:15.309><c> that</c><00:12:15.870><c> provide</c><00:12:17.129><c> common</c>

00:12:18.119 --> 00:12:18.129 align:start position:0%
shipped with the SDK that provide common
 

00:12:18.129 --> 00:12:20.340 align:start position:0%
shipped with the SDK that provide common
operations<00:12:18.730><c> on</c><00:12:18.939><c> these</c><00:12:19.089><c> structures</c><00:12:19.600><c> and</c><00:12:19.899><c> make</c>

00:12:20.340 --> 00:12:20.350 align:start position:0%
operations on these structures and make
 

00:12:20.350 --> 00:12:23.129 align:start position:0%
operations on these structures and make
it<00:12:20.499><c> easier</c><00:12:21.040><c> to</c><00:12:21.160><c> fill</c><00:12:21.370><c> them</c><00:12:21.550><c> out</c><00:12:21.670><c> and</c><00:12:22.110><c> do</c><00:12:23.110><c> the</c>

00:12:23.129 --> 00:12:23.139 align:start position:0%
it easier to fill them out and do the
 

00:12:23.139 --> 00:12:25.980 align:start position:0%
it easier to fill them out and do the
things<00:12:23.559><c> that</c><00:12:24.249><c> you</c><00:12:24.370><c> commonly</c><00:12:25.269><c> need</c><00:12:25.629><c> to</c><00:12:25.720><c> do</c><00:12:25.839><c> with</c>

00:12:25.980 --> 00:12:25.990 align:start position:0%
things that you commonly need to do with
 

00:12:25.990 --> 00:12:30.440 align:start position:0%
things that you commonly need to do with
them<00:12:27.029><c> ok</c><00:12:28.029><c> so</c><00:12:28.089><c> in</c><00:12:28.360><c> audio</c><00:12:28.809><c> units</c>

00:12:30.440 --> 00:12:30.450 align:start position:0%
them ok so in audio units
 

00:12:30.450 --> 00:12:33.140 align:start position:0%
them ok so in audio units
I'm<00:12:30.960><c> going</c><00:12:31.110><c> to</c><00:12:31.230><c> talk</c><00:12:31.350><c> about</c><00:12:31.470><c> how</c><00:12:31.820><c> frames</c><00:12:32.820><c> and</c>

00:12:33.140 --> 00:12:33.150 align:start position:0%
I'm going to talk about how frames and
 

00:12:33.150 --> 00:12:38.630 align:start position:0%
I'm going to talk about how frames and
packets<00:12:33.540><c> are</c><00:12:34.070><c> used</c><00:12:35.070><c> by</c><00:12:35.370><c> the</c><00:12:35.540><c> various</c><00:12:37.640><c> core</c>

00:12:38.630 --> 00:12:38.640 align:start position:0%
packets are used by the various core
 

00:12:38.640 --> 00:12:41.390 align:start position:0%
packets are used by the various core
audio<00:12:38.910><c> api's</c><00:12:39.590><c> Audio</c><00:12:40.590><c> Units</c><00:12:40.650><c> express</c><00:12:41.250><c> their</c>

00:12:41.390 --> 00:12:41.400 align:start position:0%
audio api's Audio Units express their
 

00:12:41.400 --> 00:12:44.480 align:start position:0%
audio api's Audio Units express their
buffer<00:12:41.670><c> sizes</c><00:12:41.880><c> and</c><00:12:42.270><c> frames</c><00:12:42.860><c> by</c><00:12:43.860><c> default</c><00:12:44.280><c> the</c>

00:12:44.480 --> 00:12:44.490 align:start position:0%
buffer sizes and frames by default the
 

00:12:44.490 --> 00:12:49.000 align:start position:0%
buffer sizes and frames by default the
format<00:12:44.880><c> is</c><00:12:45.090><c> 32-bit</c><00:12:45.960><c> float</c><00:12:46.470><c> non</c><00:12:46.710><c> interleave</c>

00:12:49.000 --> 00:12:49.010 align:start position:0%
format is 32-bit float non interleave
 

00:12:49.010 --> 00:12:50.630 align:start position:0%
format is 32-bit float non interleave
people<00:12:50.010><c> have</c><00:12:50.100><c> sort</c><00:12:50.310><c> of</c><00:12:50.340><c> gotten</c><00:12:50.430><c> the</c>

00:12:50.630 --> 00:12:50.640 align:start position:0%
people have sort of gotten the
 

00:12:50.640 --> 00:12:52.820 align:start position:0%
people have sort of gotten the
impression<00:12:50.730><c> that</c><00:12:51.060><c> that's</c><00:12:51.270><c> the</c><00:12:52.260><c> only</c><00:12:52.500><c> format</c>

00:12:52.820 --> 00:12:52.830 align:start position:0%
impression that that's the only format
 

00:12:52.830 --> 00:12:56.840 align:start position:0%
impression that that's the only format
you<00:12:53.010><c> could</c><00:12:53.130><c> do</c><00:12:53.250><c> with</c><00:12:53.370><c> audio</c><00:12:53.640><c> units</c><00:12:53.970><c> but</c><00:12:55.850><c> since</c>

00:12:56.840 --> 00:12:56.850 align:start position:0%
you could do with audio units but since
 

00:12:56.850 --> 00:12:58.160 align:start position:0%
you could do with audio units but since
there's<00:12:57.090><c> a</c><00:12:57.180><c> stream</c><00:12:57.480><c> description</c><00:12:57.960><c> that</c><00:12:58.110><c> you</c>

00:12:58.160 --> 00:12:58.170 align:start position:0%
there's a stream description that you
 

00:12:58.170 --> 00:13:01.430 align:start position:0%
there's a stream description that you
can<00:12:58.290><c> set</c><00:12:58.560><c> on</c><00:12:58.770><c> the</c><00:12:59.700><c> inputs</c><00:13:00.000><c> and</c><00:13:00.330><c> outputs</c><00:13:01.260><c> of</c><00:13:01.380><c> the</c>

00:13:01.430 --> 00:13:01.440 align:start position:0%
can set on the inputs and outputs of the
 

00:13:01.440 --> 00:13:05.120 align:start position:0%
can set on the inputs and outputs of the
audio<00:13:01.740><c> units</c><00:13:02.150><c> you</c><00:13:03.150><c> can</c><00:13:03.330><c> actually</c><00:13:03.950><c> put</c><00:13:04.950><c> any</c>

00:13:05.120 --> 00:13:05.130 align:start position:0%
audio units you can actually put any
 

00:13:05.130 --> 00:13:10.400 align:start position:0%
audio units you can actually put any
kind<00:13:05.340><c> of</c><00:13:05.490><c> audio</c><00:13:06.480><c> data</c><00:13:08.300><c> into</c><00:13:09.300><c> those</c><00:13:09.480><c> audio</c>

00:13:10.400 --> 00:13:10.410 align:start position:0%
kind of audio data into those audio
 

00:13:10.410 --> 00:13:17.750 align:start position:0%
kind of audio data into those audio
units<00:13:13.790><c> ok</c><00:13:14.790><c> the</c><00:13:15.180><c> how</c><00:13:15.800><c> counts</c><00:13:16.800><c> time</c><00:13:17.010><c> in</c><00:13:17.370><c> frames</c>

00:13:17.750 --> 00:13:17.760 align:start position:0%
units ok the how counts time in frames
 

00:13:17.760 --> 00:13:21.110 align:start position:0%
units ok the how counts time in frames
so<00:13:18.270><c> when</c><00:13:18.660><c> you</c><00:13:18.750><c> get</c><00:13:18.870><c> the</c><00:13:19.140><c> e</c><00:13:19.470><c> rio</c><00:13:20.250><c> proc</c><00:13:20.640><c> call</c><00:13:20.880><c> back</c>

00:13:21.110 --> 00:13:21.120 align:start position:0%
so when you get the e rio proc call back
 

00:13:21.120 --> 00:13:24.260 align:start position:0%
so when you get the e rio proc call back
the<00:13:21.480><c> post</c><00:13:22.140><c> time</c><00:13:22.440><c> I</c><00:13:22.710><c> mean</c><00:13:22.950><c> the</c><00:13:23.070><c> sample</c><00:13:23.400><c> time</c><00:13:23.580><c> is</c>

00:13:24.260 --> 00:13:24.270 align:start position:0%
the post time I mean the sample time is
 

00:13:24.270 --> 00:13:31.250 align:start position:0%
the post time I mean the sample time is
provided<00:13:24.540><c> there</c><00:13:24.990><c> in</c><00:13:25.170><c> frames</c><00:13:26.960><c> in</c><00:13:27.960><c> PCM</c><00:13:28.830><c> mode</c><00:13:30.260><c> the</c>

00:13:31.250 --> 00:13:31.260 align:start position:0%
provided there in frames in PCM mode the
 

00:13:31.260 --> 00:13:34.520 align:start position:0%
provided there in frames in PCM mode the
how<00:13:31.760><c> tells</c><00:13:32.760><c> us</c><00:13:32.970><c> buffer</c><00:13:33.150><c> size</c><00:13:33.360><c> in</c><00:13:33.570><c> frame</c><00:13:33.900><c> the</c>

00:13:34.520 --> 00:13:34.530 align:start position:0%
how tells us buffer size in frame the
 

00:13:34.530 --> 00:13:36.350 align:start position:0%
how tells us buffer size in frame the
buffer<00:13:34.770><c> size</c><00:13:34.920><c> are</c><00:13:35.040><c> said</c><00:13:35.220><c> it</c><00:13:35.340><c> Bolin</c><00:13:35.490><c> frames</c><00:13:35.880><c> and</c>

00:13:36.350 --> 00:13:36.360 align:start position:0%
buffer size are said it Bolin frames and
 

00:13:36.360 --> 00:13:40.130 align:start position:0%
buffer size are said it Bolin frames and
and<00:13:37.250><c> unless</c><00:13:38.250><c> you</c><00:13:38.400><c> tell</c><00:13:38.610><c> it</c><00:13:38.640><c> otherwise</c><00:13:39.140><c> the</c>

00:13:40.130 --> 00:13:40.140 align:start position:0%
and unless you tell it otherwise the
 

00:13:40.140 --> 00:13:45.080 align:start position:0%
and unless you tell it otherwise the
format<00:13:40.560><c> will</c><00:13:40.710><c> be</c><00:13:41.000><c> 32-bit</c><00:13:42.000><c> float</c><00:13:42.800><c> in</c><00:13:44.090><c> non</c>

00:13:45.080 --> 00:13:45.090 align:start position:0%
format will be 32-bit float in non
 

00:13:45.090 --> 00:13:48.650 align:start position:0%
format will be 32-bit float in non
linear<00:13:45.360><c> PCM</c><00:13:45.600><c> mode</c><00:13:47.090><c> you're</c><00:13:48.090><c> restricted</c><00:13:48.450><c> to</c>

00:13:48.650 --> 00:13:48.660 align:start position:0%
linear PCM mode you're restricted to
 

00:13:48.660 --> 00:13:50.240 align:start position:0%
linear PCM mode you're restricted to
dealing<00:13:48.990><c> one</c><00:13:49.350><c> packet</c><00:13:49.680><c> at</c><00:13:49.770><c> a</c><00:13:49.800><c> time</c><00:13:50.010><c> with</c><00:13:50.160><c> the</c>

00:13:50.240 --> 00:13:50.250 align:start position:0%
dealing one packet at a time with the
 

00:13:50.250 --> 00:13:55.490 align:start position:0%
dealing one packet at a time with the
date<00:13:50.430><c> with</c><00:13:50.820><c> the</c><00:13:50.940><c> data</c><00:13:51.090><c> and</c><00:13:52.340><c> the</c><00:13:54.020><c> buffer</c><00:13:55.020><c> frame</c>

00:13:55.490 --> 00:13:55.500 align:start position:0%
date with the data and the buffer frame
 

00:13:55.500 --> 00:13:57.680 align:start position:0%
date with the data and the buffer frame
size<00:13:55.740><c> ranges</c><00:13:56.220><c> restricted</c><00:13:56.790><c> to</c><00:13:57.120><c> the</c><00:13:57.300><c> number</c><00:13:57.570><c> of</c>

00:13:57.680 --> 00:13:57.690 align:start position:0%
size ranges restricted to the number of
 

00:13:57.690 --> 00:14:05.780 align:start position:0%
size ranges restricted to the number of
frames<00:13:58.110><c> for</c><00:13:58.470><c> packet</c><00:14:04.010><c> ok</c><00:14:05.010><c> so</c><00:14:05.070><c> for</c><00:14:05.490><c> the</c><00:14:05.580><c> audio</c>

00:14:05.780 --> 00:14:05.790 align:start position:0%
frames for packet ok so for the audio
 

00:14:05.790 --> 00:14:10.310 align:start position:0%
frames for packet ok so for the audio
file<00:14:06.030><c> API</c><00:14:06.740><c> there's</c><00:14:07.740><c> two</c><00:14:08.040><c> calls</c><00:14:09.110><c> audio</c><00:14:10.110><c> file</c>

00:14:10.310 --> 00:14:10.320 align:start position:0%
file API there's two calls audio file
 

00:14:10.320 --> 00:14:12.410 align:start position:0%
file API there's two calls audio file
read<00:14:10.650><c> bytes</c><00:14:10.920><c> and</c><00:14:11.220><c> write</c><00:14:11.400><c> bites</c><00:14:11.640><c> deals</c><00:14:12.150><c> and</c>

00:14:12.410 --> 00:14:12.420 align:start position:0%
read bytes and write bites deals and
 

00:14:12.420 --> 00:14:14.870 align:start position:0%
read bytes and write bites deals and
bites<00:14:12.630><c> and</c><00:14:13.020><c> then</c><00:14:13.680><c> audio</c><00:14:13.920><c> file</c><00:14:14.190><c> read</c><00:14:14.430><c> packets</c>

00:14:14.870 --> 00:14:14.880 align:start position:0%
bites and then audio file read packets
 

00:14:14.880 --> 00:14:16.580 align:start position:0%
bites and then audio file read packets
and<00:14:15.090><c> right</c><00:14:15.300><c> package</c><00:14:15.660><c> deals</c><00:14:15.900><c> and</c><00:14:16.110><c> packets</c><00:14:16.470><c> and</c>

00:14:16.580 --> 00:14:16.590 align:start position:0%
and right package deals and packets and
 

00:14:16.590 --> 00:14:18.890 align:start position:0%
and right package deals and packets and
if<00:14:16.680><c> you're</c><00:14:16.850><c> since</c><00:14:17.850><c> some</c><00:14:18.120><c> frames</c><00:14:18.540><c> equals</c>

00:14:18.890 --> 00:14:18.900 align:start position:0%
if you're since some frames equals
 

00:14:18.900 --> 00:14:21.710 align:start position:0%
if you're since some frames equals
packets<00:14:19.650><c> for</c><00:14:19.920><c> PCM</c><00:14:20.430><c> then</c><00:14:20.940><c> you</c><00:14:21.180><c> can</c><00:14:21.300><c> use</c><00:14:21.450><c> audio</c>

00:14:21.710 --> 00:14:21.720 align:start position:0%
packets for PCM then you can use audio
 

00:14:21.720 --> 00:14:24.350 align:start position:0%
packets for PCM then you can use audio
file<00:14:22.020><c> read</c><00:14:22.290><c> packets</c><00:14:22.710><c> for</c><00:14:22.860><c> PCM</c><00:14:23.310><c> and</c><00:14:23.580><c> that</c><00:14:24.240><c> will</c>

00:14:24.350 --> 00:14:24.360 align:start position:0%
file read packets for PCM and that will
 

00:14:24.360 --> 00:14:27.950 align:start position:0%
file read packets for PCM and that will
return<00:14:24.660><c> you</c><00:14:24.900><c> PCM</c><00:14:25.590><c> frames</c><00:14:26.130><c> if</c><00:14:26.430><c> you're</c><00:14:27.030><c> dealing</c>

00:14:27.950 --> 00:14:27.960 align:start position:0%
return you PCM frames if you're dealing
 

00:14:27.960 --> 00:14:30.500 align:start position:0%
return you PCM frames if you're dealing
with<00:14:28.200><c> compressed</c><00:14:28.920><c> data</c><00:14:29.100><c> and</c><00:14:29.520><c> read</c><00:14:30.030><c> packets</c>

00:14:30.500 --> 00:14:30.510 align:start position:0%
with compressed data and read packets
 

00:14:30.510 --> 00:14:32.960 align:start position:0%
with compressed data and read packets
will<00:14:31.170><c> return</c><00:14:31.470><c> you</c><00:14:31.710><c> some</c><00:14:32.280><c> number</c><00:14:32.550><c> of</c><00:14:32.640><c> packets</c>

00:14:32.960 --> 00:14:32.970 align:start position:0%
will return you some number of packets
 

00:14:32.970 --> 00:14:36.500 align:start position:0%
will return you some number of packets
of<00:14:33.150><c> that</c><00:14:33.270><c> compressed</c><00:14:33.630><c> data</c><00:14:34.610><c> ok</c><00:14:35.610><c> so</c><00:14:35.670><c> now</c><00:14:36.450><c> you</c>

00:14:36.500 --> 00:14:36.510 align:start position:0%
of that compressed data ok so now you
 

00:14:36.510 --> 00:14:38.750 align:start position:0%
of that compressed data ok so now you
can<00:14:36.720><c> describe</c><00:14:36.990><c> different</c><00:14:37.400><c> formats</c><00:14:38.400><c> how</c><00:14:38.700><c> do</c>

00:14:38.750 --> 00:14:38.760 align:start position:0%
can describe different formats how do
 

00:14:38.760 --> 00:14:40.790 align:start position:0%
can describe different formats how do
you<00:14:38.910><c> convert</c><00:14:39.600><c> from</c><00:14:40.110><c> one</c><00:14:40.170><c> format</c><00:14:40.590><c> to</c><00:14:40.650><c> another</c>

00:14:40.790 --> 00:14:40.800 align:start position:0%
you convert from one format to another
 

00:14:40.800 --> 00:14:42.090 align:start position:0%
you convert from one format to another
and

00:14:42.090 --> 00:14:42.100 align:start position:0%
and
 

00:14:42.100 --> 00:14:47.389 align:start position:0%
and
for<00:14:43.089><c> that</c><00:14:43.180><c> we</c><00:14:43.360><c> have</c><00:14:43.540><c> the</c><00:14:43.750><c> audio</c><00:14:44.019><c> converter</c><00:14:46.139><c> it</c>

00:14:47.389 --> 00:14:47.399 align:start position:0%
for that we have the audio converter it
 

00:14:47.399 --> 00:14:51.300 align:start position:0%
for that we have the audio converter it
can<00:14:48.399><c> do</c><00:14:48.579><c> a</c><00:14:49.110><c> floating-point</c><00:14:50.110><c> integer</c><00:14:50.740><c> various</c>

00:14:51.300 --> 00:14:51.310 align:start position:0%
can do a floating-point integer various
 

00:14:51.310 --> 00:14:52.740 align:start position:0%
can do a floating-point integer various
death<00:14:51.670><c> sample</c><00:14:52.120><c> rate</c><00:14:52.240><c> conversion</c>

00:14:52.740 --> 00:14:52.750 align:start position:0%
death sample rate conversion
 

00:14:52.750 --> 00:14:54.600 align:start position:0%
death sample rate conversion
interleaving<00:14:53.290><c> DNR</c><00:14:53.769><c> leaving</c><00:14:54.100><c> channel</c>

00:14:54.600 --> 00:14:54.610 align:start position:0%
interleaving DNR leaving channel
 

00:14:54.610 --> 00:14:57.420 align:start position:0%
interleaving DNR leaving channel
reordering<00:14:55.000><c> and</c><00:14:55.589><c> new</c><00:14:56.589><c> and</c><00:14:56.740><c> panthers</c><00:14:57.190><c> that</c>

00:14:57.420 --> 00:14:57.430 align:start position:0%
reordering and new and panthers that
 

00:14:57.430 --> 00:14:59.579 align:start position:0%
reordering and new and panthers that
convert<00:14:57.850><c> convert</c><00:14:58.120><c> between</c><00:14:58.420><c> PCM</c><00:14:59.290><c> and</c>

00:14:59.579 --> 00:14:59.589 align:start position:0%
convert convert between PCM and
 

00:14:59.589 --> 00:15:02.090 align:start position:0%
convert convert between PCM and
compressed<00:15:00.069><c> formats</c><00:15:00.550><c> for</c><00:15:00.819><c> codecs</c><00:15:01.209><c> that</c><00:15:01.300><c> are</c>

00:15:02.090 --> 00:15:02.100 align:start position:0%
compressed formats for codecs that are
 

00:15:02.100 --> 00:15:06.629 align:start position:0%
compressed formats for codecs that are
installed<00:15:03.100><c> in</c><00:15:03.220><c> the</c><00:15:03.339><c> system</c><00:15:05.250><c> in</c><00:15:06.250><c> order</c><00:15:06.430><c> to</c>

00:15:06.629 --> 00:15:06.639 align:start position:0%
installed in the system in order to
 

00:15:06.639 --> 00:15:08.400 align:start position:0%
installed in the system in order to
create<00:15:06.759><c> an</c><00:15:07.149><c> audio</c><00:15:07.420><c> converter</c><00:15:07.779><c> use</c><00:15:08.170><c> audio</c>

00:15:08.400 --> 00:15:08.410 align:start position:0%
create an audio converter use audio
 

00:15:08.410 --> 00:15:10.710 align:start position:0%
create an audio converter use audio
converter<00:15:08.709><c> new</c><00:15:09.130><c> you</c><00:15:09.519><c> give</c><00:15:09.670><c> it</c><00:15:09.790><c> an</c><00:15:10.000><c> input</c><00:15:10.480><c> and</c>

00:15:10.710 --> 00:15:10.720 align:start position:0%
converter new you give it an input and
 

00:15:10.720 --> 00:15:14.370 align:start position:0%
converter new you give it an input and
output<00:15:11.170><c> format</c><00:15:11.769><c> and</c><00:15:12.670><c> it</c><00:15:13.449><c> returns</c><00:15:13.810><c> you</c><00:15:14.110><c> an</c>

00:15:14.370 --> 00:15:14.380 align:start position:0%
output format and it returns you an
 

00:15:14.380 --> 00:15:16.710 align:start position:0%
output format and it returns you an
audio<00:15:15.250><c> converter</c><00:15:15.459><c> rest</c><00:15:16.149><c> which</c><00:15:16.389><c> is</c><00:15:16.540><c> your</c>

00:15:16.710 --> 00:15:16.720 align:start position:0%
audio converter rest which is your
 

00:15:16.720 --> 00:15:19.290 align:start position:0%
audio converter rest which is your
audience<00:15:17.259><c> inverter</c><00:15:17.560><c> object</c><00:15:18.009><c> so</c><00:15:18.819><c> in</c><00:15:19.060><c> order</c><00:15:19.180><c> to</c>

00:15:19.290 --> 00:15:19.300 align:start position:0%
audience inverter object so in order to
 

00:15:19.300 --> 00:15:24.509 align:start position:0%
audience inverter object so in order to
call<00:15:19.509><c> it</c><00:15:19.630><c> here</c><00:15:20.459><c> you</c><00:15:21.459><c> would</c><00:15:22.470><c> fill</c><00:15:23.470><c> out</c><00:15:23.589><c> to</c><00:15:24.190><c> audio</c>

00:15:24.509 --> 00:15:24.519 align:start position:0%
call it here you would fill out to audio
 

00:15:24.519 --> 00:15:27.059 align:start position:0%
call it here you would fill out to audio
stream<00:15:24.940><c> descriptions</c><00:15:25.540><c> you</c><00:15:26.500><c> can</c><00:15:26.649><c> use</c><00:15:26.769><c> see</c><00:15:27.040><c> a</c>

00:15:27.059 --> 00:15:27.069 align:start position:0%
stream descriptions you can use see a
 

00:15:27.069 --> 00:15:28.680 align:start position:0%
stream descriptions you can use see a
stream<00:15:27.490><c> basic</c><00:15:27.790><c> description</c><00:15:28.120><c> to</c><00:15:28.329><c> help</c><00:15:28.480><c> you</c><00:15:28.569><c> do</c>

00:15:28.680 --> 00:15:28.690 align:start position:0%
stream basic description to help you do
 

00:15:28.690 --> 00:15:33.540 align:start position:0%
stream basic description to help you do
that<00:15:28.810><c> the</c><00:15:29.050><c> SDK</c><00:15:29.880><c> clow</c><00:15:30.880><c> and</c><00:15:32.220><c> then</c><00:15:33.220><c> you</c><00:15:33.370><c> have</c><00:15:33.519><c> a</c>

00:15:33.540 --> 00:15:33.550 align:start position:0%
that the SDK clow and then you have a
 

00:15:33.550 --> 00:15:37.949 align:start position:0%
that the SDK clow and then you have a
decoder<00:15:35.279><c> well</c><00:15:36.279><c> in</c><00:15:36.880><c> this</c><00:15:37.000><c> example</c><00:15:37.600><c> I'm</c><00:15:37.779><c> just</c>

00:15:37.949 --> 00:15:37.959 align:start position:0%
decoder well in this example I'm just
 

00:15:37.959 --> 00:15:42.150 align:start position:0%
decoder well in this example I'm just
showing<00:15:38.529><c> a</c><00:15:38.709><c> decoder</c><00:15:39.069><c> creating</c><00:15:40.029><c> a</c><00:15:40.089><c> decoder</c><00:15:41.160><c> I</c>

00:15:42.150 --> 00:15:42.160 align:start position:0%
showing a decoder creating a decoder I
 

00:15:42.160 --> 00:15:44.160 align:start position:0%
showing a decoder creating a decoder I
do<00:15:43.000><c> a</c><00:15:43.120><c> lot</c><00:15:43.180><c> of</c><00:15:43.240><c> converter</c><00:15:43.630><c> new</c><00:15:43.810><c> and</c><00:15:43.959><c> I'll</c><00:15:44.019><c> get</c>

00:15:44.160 --> 00:15:44.170 align:start position:0%
do a lot of converter new and I'll get
 

00:15:44.170 --> 00:15:48.090 align:start position:0%
do a lot of converter new and I'll get
my<00:15:44.319><c> decoder</c><00:15:45.220><c> instance</c><00:15:45.730><c> out</c><00:15:45.910><c> from</c><00:15:46.149><c> that</c><00:15:47.100><c> in</c>

00:15:48.090 --> 00:15:48.100 align:start position:0%
my decoder instance out from that in
 

00:15:48.100 --> 00:15:50.370 align:start position:0%
my decoder instance out from that in
order<00:15:48.399><c> to</c><00:15:48.730><c> will</c><00:15:49.060><c> say</c><00:15:49.209><c> after</c><00:15:49.540><c> you've</c><00:15:49.689><c> created</c>

00:15:50.370 --> 00:15:50.380 align:start position:0%
order to will say after you've created
 

00:15:50.380 --> 00:15:53.490 align:start position:0%
order to will say after you've created
your<00:15:50.589><c> audio</c><00:15:50.889><c> converter</c><00:15:51.069><c> you</c><00:15:51.459><c> want</c><00:15:51.670><c> to</c><00:15:52.500><c> convert</c>

00:15:53.490 --> 00:15:53.500 align:start position:0%
your audio converter you want to convert
 

00:15:53.500 --> 00:15:55.829 align:start position:0%
your audio converter you want to convert
audio<00:15:53.620><c> with</c><00:15:54.040><c> it</c><00:15:54.220><c> so</c><00:15:54.459><c> you</c><00:15:55.240><c> call</c><00:15:55.569><c> audio</c>

00:15:55.829 --> 00:15:55.839 align:start position:0%
audio with it so you call audio
 

00:15:55.839 --> 00:16:00.139 align:start position:0%
audio with it so you call audio
converter<00:15:56.470><c> fill</c><00:15:56.920><c> complex</c><00:15:57.370><c> buffer</c><00:15:58.139><c> that</c><00:15:59.139><c> is</c><00:15:59.410><c> a</c>

00:16:00.139 --> 00:16:00.149 align:start position:0%
converter fill complex buffer that is a
 

00:16:00.149 --> 00:16:02.850 align:start position:0%
converter fill complex buffer that is a
call<00:16:01.149><c> that</c><00:16:01.420><c> takes</c><00:16:02.170><c> an</c><00:16:02.350><c> audio</c><00:16:02.649><c> converter</c>

00:16:02.850 --> 00:16:02.860 align:start position:0%
call that takes an audio converter
 

00:16:02.860 --> 00:16:06.030 align:start position:0%
call that takes an audio converter
instance<00:16:03.459><c> in</c><00:16:03.930><c> it</c><00:16:04.930><c> takes</c><00:16:05.230><c> a</c><00:16:05.380><c> pointer</c><00:16:05.740><c> to</c><00:16:05.769><c> an</c>

00:16:06.030 --> 00:16:06.040 align:start position:0%
instance in it takes a pointer to an
 

00:16:06.040 --> 00:16:08.309 align:start position:0%
instance in it takes a pointer to an
input<00:16:06.370><c> procedure</c><00:16:06.819><c> which</c><00:16:07.149><c> is</c><00:16:07.300><c> the</c><00:16:07.480><c> data</c><00:16:07.899><c> source</c>

00:16:08.309 --> 00:16:08.319 align:start position:0%
input procedure which is the data source
 

00:16:08.319 --> 00:16:11.519 align:start position:0%
input procedure which is the data source
for<00:16:09.420><c> getting</c><00:16:10.420><c> into</c><00:16:10.660><c> it</c><00:16:10.750><c> into</c><00:16:11.079><c> the</c><00:16:11.199><c> audio</c>

00:16:11.519 --> 00:16:11.529 align:start position:0%
for getting into it into the audio
 

00:16:11.529 --> 00:16:17.129 align:start position:0%
for getting into it into the audio
converter<00:16:11.970><c> a</c><00:16:13.230><c> user</c><00:16:14.230><c> data</c><00:16:14.529><c> field</c><00:16:15.279><c> for</c><00:16:16.139><c> storing</c>

00:16:17.129 --> 00:16:17.139 align:start position:0%
converter a user data field for storing
 

00:16:17.139 --> 00:16:19.170 align:start position:0%
converter a user data field for storing
your<00:16:17.319><c> instance</c><00:16:17.769><c> data</c><00:16:17.920><c> for</c><00:16:18.399><c> the</c><00:16:18.550><c> audio</c>

00:16:19.170 --> 00:16:19.180 align:start position:0%
your instance data for the audio
 

00:16:19.180 --> 00:16:23.009 align:start position:0%
your instance data for the audio
converter<00:16:19.389><c> and</c><00:16:19.980><c> then</c><00:16:20.980><c> there's</c><00:16:21.189><c> a</c><00:16:21.250><c> I'll</c><00:16:22.120><c> output</c>

00:16:23.009 --> 00:16:23.019 align:start position:0%
converter and then there's a I'll output
 

00:16:23.019 --> 00:16:25.199 align:start position:0%
converter and then there's a I'll output
data<00:16:23.230><c> packet</c><00:16:23.589><c> size</c><00:16:23.769><c> is</c><00:16:24.100><c> the</c><00:16:24.339><c> number</c><00:16:25.180><c> of</c>

00:16:25.199 --> 00:16:25.209 align:start position:0%
data packet size is the number of
 

00:16:25.209 --> 00:16:27.660 align:start position:0%
data packet size is the number of
packets<00:16:25.569><c> you</c><00:16:25.750><c> want</c><00:16:26.019><c> to</c><00:16:26.139><c> get</c><00:16:26.259><c> out</c><00:16:26.380><c> of</c><00:16:26.500><c> the</c><00:16:26.680><c> audio</c>

00:16:27.660 --> 00:16:27.670 align:start position:0%
packets you want to get out of the audio
 

00:16:27.670 --> 00:16:29.429 align:start position:0%
packets you want to get out of the audio
converter<00:16:27.880><c> and</c><00:16:28.300><c> on</c><00:16:28.509><c> return</c><00:16:28.899><c> it</c><00:16:29.079><c> will</c><00:16:29.170><c> be</c><00:16:29.199><c> the</c>

00:16:29.429 --> 00:16:29.439 align:start position:0%
converter and on return it will be the
 

00:16:29.439 --> 00:16:32.059 align:start position:0%
converter and on return it will be the
number<00:16:29.529><c> of</c><00:16:29.709><c> packets</c><00:16:30.009><c> you</c><00:16:30.130><c> actually</c><00:16:30.579><c> got</c><00:16:30.730><c> out</c>

00:16:32.059 --> 00:16:32.069 align:start position:0%
number of packets you actually got out
 

00:16:32.069 --> 00:16:34.559 align:start position:0%
number of packets you actually got out
that<00:16:33.069><c> number</c><00:16:33.610><c> could</c><00:16:33.759><c> be</c><00:16:33.819><c> less</c><00:16:34.149><c> than</c><00:16:34.329><c> what</c><00:16:34.480><c> you</c>

00:16:34.559 --> 00:16:34.569 align:start position:0%
that number could be less than what you
 

00:16:34.569 --> 00:16:36.600 align:start position:0%
that number could be less than what you
requested<00:16:34.779><c> if</c><00:16:35.170><c> you're</c><00:16:36.009><c> at</c><00:16:36.130><c> the</c><00:16:36.160><c> end</c><00:16:36.339><c> of</c><00:16:36.519><c> the</c>

00:16:36.600 --> 00:16:36.610 align:start position:0%
requested if you're at the end of the
 

00:16:36.610 --> 00:16:42.689 align:start position:0%
requested if you're at the end of the
stream<00:16:36.939><c> or</c><00:16:37.180><c> there</c><00:16:37.509><c> was</c><00:16:37.600><c> an</c><00:16:37.720><c> error</c><00:16:41.579><c> then</c><00:16:42.579><c> you</c>

00:16:42.689 --> 00:16:42.699 align:start position:0%
stream or there was an error then you
 

00:16:42.699 --> 00:16:44.579 align:start position:0%
stream or there was an error then you
pass<00:16:42.910><c> in</c><00:16:43.180><c> the</c><00:16:43.300><c> audio</c><00:16:43.569><c> buffer</c><00:16:43.810><c> list</c><00:16:44.139><c> which</c><00:16:44.380><c> you</c>

00:16:44.579 --> 00:16:44.589 align:start position:0%
pass in the audio buffer list which you
 

00:16:44.589 --> 00:16:48.990 align:start position:0%
pass in the audio buffer list which you
want<00:16:44.860><c> to</c><00:16:44.920><c> be</c><00:16:46.110><c> the</c><00:16:47.110><c> audio</c><00:16:47.380><c> converter</c><00:16:47.730><c> to</c><00:16:48.730><c> write</c>

00:16:48.990 --> 00:16:49.000 align:start position:0%
want to be the audio converter to write
 

00:16:49.000 --> 00:16:52.860 align:start position:0%
want to be the audio converter to write
your<00:16:49.209><c> data</c><00:16:49.620><c> converted</c><00:16:50.620><c> data</c><00:16:50.769><c> into</c><00:16:51.189><c> and</c><00:16:51.870><c> and</c>

00:16:52.860 --> 00:16:52.870 align:start position:0%
your data converted data into and and
 

00:16:52.870 --> 00:16:54.569 align:start position:0%
your data converted data into and and
then<00:16:53.529><c> there's</c><00:16:53.800><c> a</c>

00:16:54.569 --> 00:16:54.579 align:start position:0%
then there's a
 

00:16:54.579 --> 00:16:57.179 align:start position:0%
then there's a
a<00:16:55.139><c> pointer</c><00:16:56.139><c> to</c><00:16:56.170><c> an</c><00:16:56.410><c> array</c><00:16:56.470><c> of</c><00:16:56.679><c> packet</c>

00:16:57.179 --> 00:16:57.189 align:start position:0%
a pointer to an array of packet
 

00:16:57.189 --> 00:16:59.780 align:start position:0%
a pointer to an array of packet
descriptions<00:16:57.670><c> if</c><00:16:57.850><c> you're</c><00:16:57.999><c> converting</c><00:16:58.389><c> a</c><00:16:58.629><c> AC</c>

00:16:59.780 --> 00:16:59.790 align:start position:0%
descriptions if you're converting a AC
 

00:16:59.790 --> 00:17:01.859 align:start position:0%
descriptions if you're converting a AC
and<00:17:00.790><c> you're</c><00:17:00.910><c> asking</c><00:17:01.179><c> for</c><00:17:01.209><c> some</c><00:17:01.509><c> number</c><00:17:01.779><c> of</c>

00:17:01.859 --> 00:17:01.869 align:start position:0%
and you're asking for some number of
 

00:17:01.869 --> 00:17:03.840 align:start position:0%
and you're asking for some number of
packets<00:17:02.199><c> of</c><00:17:02.319><c> AC</c><00:17:02.769><c> you</c><00:17:03.040><c> need</c><00:17:03.189><c> to</c><00:17:03.279><c> pass</c><00:17:03.459><c> in</c><00:17:03.730><c> an</c>

00:17:03.840 --> 00:17:03.850 align:start position:0%
packets of AC you need to pass in an
 

00:17:03.850 --> 00:17:05.370 align:start position:0%
packets of AC you need to pass in an
array<00:17:04.059><c> a</c><00:17:04.089><c> packet</c><00:17:04.510><c> description</c><00:17:04.990><c> so</c><00:17:05.230><c> you'll</c>

00:17:05.370 --> 00:17:05.380 align:start position:0%
array a packet description so you'll
 

00:17:05.380 --> 00:17:07.289 align:start position:0%
array a packet description so you'll
know<00:17:05.500><c> where</c><00:17:05.649><c> the</c><00:17:05.679><c> package</c><00:17:06.069><c> boundaries</c><00:17:06.490><c> of</c><00:17:06.699><c> the</c>

00:17:07.289 --> 00:17:07.299 align:start position:0%
know where the package boundaries of the
 

00:17:07.299 --> 00:17:15.539 align:start position:0%
know where the package boundaries of the
data<00:17:07.899><c> you</c><00:17:08.319><c> get</c><00:17:08.470><c> back</c><00:17:08.709><c> is</c><00:17:11.309><c> ok</c><00:17:12.309><c> so</c><00:17:14.309><c> in</c><00:17:15.309><c> order</c><00:17:15.459><c> to</c>

00:17:15.539 --> 00:17:15.549 align:start position:0%
data you get back is ok so in order to
 

00:17:15.549 --> 00:17:17.579 align:start position:0%
data you get back is ok so in order to
call<00:17:15.730><c> audio</c><00:17:16.120><c> converter</c><00:17:16.720><c> field</c><00:17:17.319><c> complex</c>

00:17:17.579 --> 00:17:17.589 align:start position:0%
call audio converter field complex
 

00:17:17.589 --> 00:17:19.230 align:start position:0%
call audio converter field complex
buffer<00:17:18.010><c> you</c><00:17:18.159><c> need</c><00:17:18.309><c> to</c><00:17:18.459><c> prepare</c><00:17:18.640><c> an</c><00:17:18.939><c> output</c>

00:17:19.230 --> 00:17:19.240 align:start position:0%
buffer you need to prepare an output
 

00:17:19.240 --> 00:17:22.350 align:start position:0%
buffer you need to prepare an output
buffer<00:17:19.569><c> list</c><00:17:20.010><c> if</c><00:17:21.010><c> it's</c><00:17:21.220><c> interleague</c><00:17:21.610><c> data</c><00:17:21.909><c> and</c>

00:17:22.350 --> 00:17:22.360 align:start position:0%
buffer list if it's interleague data and
 

00:17:22.360 --> 00:17:24.389 align:start position:0%
buffer list if it's interleague data and
there'll<00:17:22.990><c> be</c><00:17:23.049><c> one</c><00:17:23.439><c> buffer</c><00:17:23.799><c> in</c><00:17:24.010><c> the</c><00:17:24.039><c> buffer</c>

00:17:24.389 --> 00:17:24.399 align:start position:0%
there'll be one buffer in the buffer
 

00:17:24.399 --> 00:17:28.740 align:start position:0%
there'll be one buffer in the buffer
Lister<00:17:24.730><c> array</c><00:17:25.419><c> and</c><00:17:26.939><c> if</c><00:17:27.939><c> it's</c><00:17:28.120><c> non</c><00:17:28.299><c> interleave</c>

00:17:28.740 --> 00:17:28.750 align:start position:0%
Lister array and if it's non interleave
 

00:17:28.750 --> 00:17:32.310 align:start position:0%
Lister array and if it's non interleave
you'll<00:17:28.990><c> need</c><00:17:29.169><c> multiple</c><00:17:29.649><c> mono</c><00:17:29.919><c> buffers</c><00:17:31.169><c> the</c><00:17:32.169><c> M</c>

00:17:32.310 --> 00:17:32.320 align:start position:0%
you'll need multiple mono buffers the M
 

00:17:32.320 --> 00:17:34.799 align:start position:0%
you'll need multiple mono buffers the M
data<00:17:32.649><c> pointer</c><00:17:33.130><c> contains</c><00:17:34.029><c> the</c><00:17:34.210><c> pointer</c><00:17:34.539><c> to</c><00:17:34.690><c> the</c>

00:17:34.799 --> 00:17:34.809 align:start position:0%
data pointer contains the pointer to the
 

00:17:34.809 --> 00:17:37.080 align:start position:0%
data pointer contains the pointer to the
buffers<00:17:35.169><c> that</c><00:17:35.440><c> will</c><00:17:35.590><c> have</c><00:17:36.130><c> the</c><00:17:36.490><c> audio</c><00:17:36.850><c> data</c>

00:17:37.080 --> 00:17:37.090 align:start position:0%
buffers that will have the audio data
 

00:17:37.090 --> 00:17:39.240 align:start position:0%
buffers that will have the audio data
written<00:17:37.330><c> into</c><00:17:37.720><c> it</c><00:17:37.840><c> and</c><00:17:38.019><c> the</c><00:17:38.590><c> data</c><00:17:38.740><c> byte</c><00:17:39.010><c> size</c>

00:17:39.240 --> 00:17:39.250 align:start position:0%
written into it and the data byte size
 

00:17:39.250 --> 00:17:43.080 align:start position:0%
written into it and the data byte size
is<00:17:39.669><c> the</c><00:17:40.330><c> size</c><00:17:41.399><c> tells</c><00:17:42.399><c> the</c><00:17:42.549><c> size</c><00:17:42.730><c> of</c><00:17:42.850><c> the</c><00:17:42.909><c> buffer</c>

00:17:43.080 --> 00:17:43.090 align:start position:0%
is the size tells the size of the buffer
 

00:17:43.090 --> 00:17:47.580 align:start position:0%
is the size tells the size of the buffer
and<00:17:43.480><c> if</c><00:17:44.019><c> you</c><00:17:44.860><c> asked</c><00:17:45.490><c> for</c><00:17:45.760><c> more</c><00:17:46.600><c> Pakistan</c><00:17:47.380><c> will</c>

00:17:47.580 --> 00:17:47.590 align:start position:0%
and if you asked for more Pakistan will
 

00:17:47.590 --> 00:17:50.730 align:start position:0%
and if you asked for more Pakistan will
fit<00:17:47.950><c> into</c><00:17:48.250><c> that</c><00:17:48.460><c> size</c><00:17:49.450><c> it</c><00:17:50.110><c> will</c><00:17:50.289><c> get</c><00:17:50.380><c> truncated</c>

00:17:50.730 --> 00:17:50.740 align:start position:0%
fit into that size it will get truncated
 

00:17:50.740 --> 00:17:53.190 align:start position:0%
fit into that size it will get truncated
down<00:17:51.070><c> to</c><00:17:51.399><c> whatever</c><00:17:51.730><c> you</c><00:17:52.059><c> the</c><00:17:52.720><c> space</c><00:17:52.899><c> that</c><00:17:52.960><c> you</c>

00:17:53.190 --> 00:17:53.200 align:start position:0%
down to whatever you the space that you
 

00:17:53.200 --> 00:17:57.480 align:start position:0%
down to whatever you the space that you
provided<00:17:53.590><c> to</c><00:17:53.860><c> it</c><00:17:55.260><c> so</c><00:17:56.260><c> in</c><00:17:56.440><c> order</c><00:17:56.559><c> to</c><00:17:56.679><c> call</c><00:17:56.950><c> audio</c>

00:17:57.480 --> 00:17:57.490 align:start position:0%
provided to it so in order to call audio
 

00:17:57.490 --> 00:18:01.590 align:start position:0%
provided to it so in order to call audio
converter<00:17:58.179><c> fill</c><00:17:58.539><c> complex</c><00:17:58.960><c> buffer</c><00:18:00.600><c> basically</c>

00:18:01.590 --> 00:18:01.600 align:start position:0%
converter fill complex buffer basically
 

00:18:01.600 --> 00:18:04.310 align:start position:0%
converter fill complex buffer basically
this<00:18:01.720><c> shows</c><00:18:01.990><c> just</c><00:18:02.409><c> passing</c><00:18:02.769><c> the</c><00:18:02.799><c> arguments</c>

00:18:04.310 --> 00:18:04.320 align:start position:0%
this shows just passing the arguments
 

00:18:04.320 --> 00:18:07.470 align:start position:0%
this shows just passing the arguments
this<00:18:05.320><c> is</c><00:18:05.470><c> the</c><00:18:05.769><c> decoder</c><00:18:06.159><c> the</c><00:18:06.279><c> input</c><00:18:07.029><c> procedure</c>

00:18:07.470 --> 00:18:07.480 align:start position:0%
this is the decoder the input procedure
 

00:18:07.480 --> 00:18:11.970 align:start position:0%
this is the decoder the input procedure
pointer<00:18:07.960><c> the</c><00:18:08.470><c> user</c><00:18:08.710><c> data</c><00:18:10.110><c> the</c><00:18:11.110><c> packet</c><00:18:11.769><c> list</c>

00:18:11.970 --> 00:18:11.980 align:start position:0%
pointer the user data the packet list
 

00:18:11.980 --> 00:18:14.100 align:start position:0%
pointer the user data the packet list
I'm<00:18:12.250><c> requesting</c><00:18:12.580><c> which</c><00:18:12.970><c> is</c><00:18:13.120><c> 8192</c><00:18:13.750><c> in</c><00:18:13.960><c> this</c>

00:18:14.100 --> 00:18:14.110 align:start position:0%
I'm requesting which is 8192 in this
 

00:18:14.110 --> 00:18:16.560 align:start position:0%
I'm requesting which is 8192 in this
case<00:18:14.289><c> and</c><00:18:14.529><c> a</c><00:18:14.679><c> buffer</c><00:18:14.919><c> list</c><00:18:15.250><c> which</c><00:18:15.909><c> I've</c><00:18:16.090><c> filled</c>

00:18:16.560 --> 00:18:16.570 align:start position:0%
case and a buffer list which I've filled
 

00:18:16.570 --> 00:18:19.980 align:start position:0%
case and a buffer list which I've filled
out<00:18:16.720><c> and</c><00:18:17.309><c> then</c><00:18:18.309><c> on</c><00:18:18.429><c> passing</c><00:18:18.850><c> here</c><00:18:19.299><c> null</c><00:18:19.659><c> for</c>

00:18:19.980 --> 00:18:19.990 align:start position:0%
out and then on passing here null for
 

00:18:19.990 --> 00:18:22.139 align:start position:0%
out and then on passing here null for
the<00:18:20.200><c> pack</c><00:18:21.159><c> of</c><00:18:21.309><c> descriptions</c><00:18:21.760><c> because</c><00:18:21.880><c> I'm</c>

00:18:22.139 --> 00:18:22.149 align:start position:0%
the pack of descriptions because I'm
 

00:18:22.149 --> 00:18:25.080 align:start position:0%
the pack of descriptions because I'm
probably<00:18:22.960><c> dealing</c><00:18:23.380><c> with</c><00:18:23.649><c> well</c><00:18:24.610><c> I'm</c><00:18:24.730><c> dealing</c>

00:18:25.080 --> 00:18:25.090 align:start position:0%
probably dealing with well I'm dealing
 

00:18:25.090 --> 00:18:28.500 align:start position:0%
probably dealing with well I'm dealing
on<00:18:25.210><c> decoding</c><00:18:25.840><c> so</c><00:18:26.019><c> on</c><00:18:26.169><c> I'm</c><00:18:26.889><c> getting</c><00:18:27.220><c> PCM</c><00:18:28.000><c> out</c><00:18:28.210><c> so</c>

00:18:28.500 --> 00:18:28.510 align:start position:0%
on decoding so on I'm getting PCM out so
 

00:18:28.510 --> 00:18:30.690 align:start position:0%
on decoding so on I'm getting PCM out so
I<00:18:28.539><c> don't</c><00:18:28.809><c> need</c><00:18:29.529><c> back</c><00:18:29.769><c> in</c><00:18:29.919><c> description</c><00:18:30.370><c> in</c><00:18:30.610><c> this</c>

00:18:30.690 --> 00:18:30.700 align:start position:0%
I don't need back in description in this
 

00:18:30.700 --> 00:18:36.930 align:start position:0%
I don't need back in description in this
case<00:18:32.399><c> so</c><00:18:33.450><c> now</c><00:18:34.450><c> when</c><00:18:35.049><c> you</c><00:18:35.580><c> use</c><00:18:36.580><c> an</c><00:18:36.730><c> audio</c>

00:18:36.930 --> 00:18:36.940 align:start position:0%
case so now when you use an audio
 

00:18:36.940 --> 00:18:38.549 align:start position:0%
case so now when you use an audio
converter<00:18:37.149><c> you</c><00:18:37.570><c> need</c><00:18:37.750><c> to</c><00:18:37.870><c> write</c><00:18:37.990><c> an</c><00:18:38.200><c> input</c>

00:18:38.549 --> 00:18:38.559 align:start position:0%
converter you need to write an input
 

00:18:38.559 --> 00:18:41.870 align:start position:0%
converter you need to write an input
procedure<00:18:38.919><c> and</c><00:18:39.570><c> the</c><00:18:40.570><c> input</c><00:18:40.750><c> procedure</c>

00:18:41.870 --> 00:18:41.880 align:start position:0%
procedure and the input procedure
 

00:18:41.880 --> 00:18:44.720 align:start position:0%
procedure and the input procedure
implements<00:18:42.880><c> the</c><00:18:42.970><c> source</c><00:18:43.240><c> of</c><00:18:43.679><c> the</c>

00:18:44.720 --> 00:18:44.730 align:start position:0%
implements the source of the
 

00:18:44.730 --> 00:18:46.680 align:start position:0%
implements the source of the
demand-driven<00:18:45.730><c> model</c><00:18:46.269><c> so</c><00:18:46.360><c> the</c><00:18:46.450><c> audio</c>

00:18:46.680 --> 00:18:46.690 align:start position:0%
demand-driven model so the audio
 

00:18:46.690 --> 00:18:49.250 align:start position:0%
demand-driven model so the audio
converter<00:18:46.870><c> when</c><00:18:47.769><c> you</c><00:18:47.919><c> ask</c><00:18:48.190><c> it</c><00:18:48.429><c> for</c><00:18:48.460><c> for</c>

00:18:49.250 --> 00:18:49.260 align:start position:0%
converter when you ask it for for
 

00:18:49.260 --> 00:18:52.080 align:start position:0%
converter when you ask it for for
converted<00:18:50.260><c> data</c><00:18:50.470><c> it</c><00:18:50.799><c> will</c><00:18:51.070><c> call</c><00:18:51.519><c> your</c><00:18:51.730><c> input</c>

00:18:52.080 --> 00:18:52.090 align:start position:0%
converted data it will call your input
 

00:18:52.090 --> 00:19:00.139 align:start position:0%
converted data it will call your input
proc<00:18:52.299><c> to</c><00:18:52.480><c> get</c><00:18:53.340><c> data</c><00:18:55.139><c> the</c><00:18:57.120><c> input</c><00:18:58.120><c> side</c><00:18:58.510><c> data</c><00:18:58.809><c> and</c>

00:19:00.139 --> 00:19:00.149 align:start position:0%
proc to get data the input side data and
 

00:19:00.149 --> 00:19:03.930 align:start position:0%
proc to get data the input side data and
it's<00:19:01.149><c> it's</c><00:19:01.929><c> demand-driven</c><00:19:02.440><c> so</c><00:19:02.889><c> that</c><00:19:03.100><c> if</c>

00:19:03.930 --> 00:19:03.940 align:start position:0%
it's it's demand-driven so that if
 

00:19:03.940 --> 00:19:05.879 align:start position:0%
it's it's demand-driven so that if
you're<00:19:04.419><c> doing</c><00:19:04.750><c> a</c><00:19:04.840><c> sample</c><00:19:05.200><c> rate</c><00:19:05.350><c> conversion</c>

00:19:05.879 --> 00:19:05.889 align:start position:0%
you're doing a sample rate conversion
 

00:19:05.889 --> 00:19:07.150 align:start position:0%
you're doing a sample rate conversion
then<00:19:06.340><c> it</c><00:19:06.610><c> may</c><00:19:06.820><c> be</c>

00:19:07.150 --> 00:19:07.160 align:start position:0%
then it may be
 

00:19:07.160 --> 00:19:09.720 align:start position:0%
then it may be
polling<00:19:07.340><c> data</c><00:19:07.520><c> you</c><00:19:08.480><c> know</c><00:19:08.600><c> at</c><00:19:08.810><c> a</c><00:19:09.170><c> different</c>

00:19:09.720 --> 00:19:09.730 align:start position:0%
polling data you know at a different
 

00:19:09.730 --> 00:19:13.510 align:start position:0%
polling data you know at a different
race<00:19:10.730><c> and</c><00:19:11.060><c> then</c><00:19:11.300><c> you're</c><00:19:12.100><c> then</c><00:19:13.100><c> you're</c><00:19:13.250><c> getting</c>

00:19:13.510 --> 00:19:13.520 align:start position:0%
race and then you're then you're getting
 

00:19:13.520 --> 00:19:17.830 align:start position:0%
race and then you're then you're getting
it<00:19:13.640><c> out</c><00:19:13.760><c> so</c><00:19:14.690><c> and</c><00:19:14.990><c> also</c><00:19:15.440><c> there's</c><00:19:15.980><c> a</c><00:19:16.840><c> some</c>

00:19:17.830 --> 00:19:17.840 align:start position:0%
it out so and also there's a some
 

00:19:17.840 --> 00:19:21.070 align:start position:0%
it out so and also there's a some
internal<00:19:18.470><c> buffering</c><00:19:19.360><c> that</c><00:19:20.360><c> can</c><00:19:20.510><c> happen</c><00:19:20.660><c> for</c>

00:19:21.070 --> 00:19:21.080 align:start position:0%
internal buffering that can happen for
 

00:19:21.080 --> 00:19:22.630 align:start position:0%
internal buffering that can happen for
doing<00:19:21.470><c> compression</c><00:19:22.010><c> or</c><00:19:22.190><c> sample</c><00:19:22.520><c> rate</c>

00:19:22.630 --> 00:19:22.640 align:start position:0%
doing compression or sample rate
 

00:19:22.640 --> 00:19:27.190 align:start position:0%
doing compression or sample rate
conversion<00:19:23.440><c> so</c><00:19:24.440><c> that</c><00:19:24.670><c> the</c><00:19:25.780><c> pulling</c><00:19:26.780><c> needs</c><00:19:26.990><c> to</c>

00:19:27.190 --> 00:19:27.200 align:start position:0%
conversion so that the pulling needs to
 

00:19:27.200 --> 00:19:30.910 align:start position:0%
conversion so that the pulling needs to
be<00:19:27.350><c> decoupled</c><00:19:28.220><c> from</c><00:19:29.200><c> the</c><00:19:30.200><c> pulling</c><00:19:30.560><c> of</c><00:19:30.590><c> info</c><00:19:30.860><c> it</c>

00:19:30.910 --> 00:19:30.920 align:start position:0%
be decoupled from the pulling of info it
 

00:19:30.920 --> 00:19:32.470 align:start position:0%
be decoupled from the pulling of info it
needs<00:19:31.070><c> to</c><00:19:31.160><c> be</c><00:19:31.250><c> decoupled</c><00:19:31.790><c> from</c><00:19:31.970><c> the</c><00:19:32.180><c> pulling</c>

00:19:32.470 --> 00:19:32.480 align:start position:0%
needs to be decoupled from the pulling
 

00:19:32.480 --> 00:19:33.910 align:start position:0%
needs to be decoupled from the pulling
of<00:19:32.540><c> output</c><00:19:32.900><c> and</c><00:19:33.020><c> that's</c><00:19:33.140><c> what</c><00:19:33.290><c> the</c><00:19:33.380><c> input</c><00:19:33.530><c> prop</c>

00:19:33.910 --> 00:19:33.920 align:start position:0%
of output and that's what the input prop
 

00:19:33.920 --> 00:19:40.300 align:start position:0%
of output and that's what the input prop
implements<00:19:34.820><c> on</c><00:19:36.190><c> so</c><00:19:37.780><c> you</c><00:19:38.780><c> need</c><00:19:38.930><c> to</c><00:19:39.050><c> set</c><00:19:39.230><c> up</c><00:19:39.310><c> your</c>

00:19:40.300 --> 00:19:40.310 align:start position:0%
implements on so you need to set up your
 

00:19:40.310 --> 00:19:42.780 align:start position:0%
implements on so you need to set up your
buffer<00:19:40.700><c> list</c><00:19:40.940><c> okay</c><00:19:41.510><c> inside</c><00:19:41.900><c> your</c><00:19:42.140><c> input</c><00:19:42.410><c> proc</c>

00:19:42.780 --> 00:19:42.790 align:start position:0%
buffer list okay inside your input proc
 

00:19:42.790 --> 00:19:46.270 align:start position:0%
buffer list okay inside your input proc
the<00:19:43.790><c> job</c><00:19:44.030><c> your</c><00:19:44.240><c> job</c><00:19:44.270><c> is</c><00:19:44.780><c> to</c><00:19:44.830><c> provide</c><00:19:45.830><c> data</c><00:19:46.100><c> to</c>

00:19:46.270 --> 00:19:46.280 align:start position:0%
the job your job is to provide data to
 

00:19:46.280 --> 00:19:47.860 align:start position:0%
the job your job is to provide data to
the<00:19:46.430><c> audio</c><00:19:46.820><c> converter</c><00:19:47.060><c> you</c><00:19:47.450><c> don't</c><00:19:47.600><c> have</c><00:19:47.750><c> to</c>

00:19:47.860 --> 00:19:47.870 align:start position:0%
the audio converter you don't have to
 

00:19:47.870 --> 00:19:51.160 align:start position:0%
the audio converter you don't have to
copy<00:19:48.170><c> data</c><00:19:48.850><c> into</c><00:19:49.850><c> audio</c><00:19:50.060><c> converters</c><00:19:50.690><c> buffers</c>

00:19:51.160 --> 00:19:51.170 align:start position:0%
copy data into audio converters buffers
 

00:19:51.170 --> 00:19:52.540 align:start position:0%
copy data into audio converters buffers
you<00:19:51.350><c> just</c><00:19:51.560><c> give</c><00:19:51.920><c> the</c><00:19:52.100><c> audio</c><00:19:52.340><c> converter</c>

00:19:52.540 --> 00:19:52.550 align:start position:0%
you just give the audio converter
 

00:19:52.550 --> 00:19:55.750 align:start position:0%
you just give the audio converter
pointers<00:19:53.210><c> to</c><00:19:53.390><c> your</c><00:19:53.540><c> data</c><00:19:53.780><c> and</c><00:19:54.020><c> so</c><00:19:54.770><c> it</c><00:19:55.520><c> passes</c>

00:19:55.750 --> 00:19:55.760 align:start position:0%
pointers to your data and so it passes
 

00:19:55.760 --> 00:19:59.410 align:start position:0%
pointers to your data and so it passes
you<00:19:56.120><c> a</c><00:19:56.180><c> buffer</c><00:19:56.570><c> list</c><00:19:56.810><c> and</c><00:19:57.050><c> you</c><00:19:58.000><c> fill</c><00:19:59.000><c> out</c><00:19:59.030><c> that</c>

00:19:59.410 --> 00:19:59.420 align:start position:0%
you a buffer list and you fill out that
 

00:19:59.420 --> 00:20:01.060 align:start position:0%
you a buffer list and you fill out that
buffer<00:19:59.900><c> list</c><00:20:00.110><c> with</c><00:20:00.320><c> the</c><00:20:00.350><c> pointers</c><00:20:00.800><c> to</c><00:20:00.950><c> the</c>

00:20:01.060 --> 00:20:01.070 align:start position:0%
buffer list with the pointers to the
 

00:20:01.070 --> 00:20:03.490 align:start position:0%
buffer list with the pointers to the
data<00:20:01.250><c> that</c><00:20:01.460><c> it</c><00:20:01.670><c> wants</c><00:20:01.880><c> to</c><00:20:01.970><c> convert</c><00:20:02.300><c> the</c><00:20:03.080><c> audio</c>

00:20:03.490 --> 00:20:03.500 align:start position:0%
data that it wants to convert the audio
 

00:20:03.500 --> 00:20:05.530 align:start position:0%
data that it wants to convert the audio
converter<00:20:03.950><c> in</c><00:20:04.250><c> general</c><00:20:04.610><c> goes</c><00:20:04.820><c> out</c><00:20:05.150><c> of</c><00:20:05.210><c> its</c><00:20:05.420><c> way</c>

00:20:05.530 --> 00:20:05.540 align:start position:0%
converter in general goes out of its way
 

00:20:05.540 --> 00:20:09.880 align:start position:0%
converter in general goes out of its way
to<00:20:06.100><c> eliminate</c><00:20:07.100><c> copying</c><00:20:07.880><c> and</c><00:20:08.150><c> so</c><00:20:08.480><c> it</c><00:20:08.830><c> tries</c><00:20:09.830><c> to</c>

00:20:09.880 --> 00:20:09.890 align:start position:0%
to eliminate copying and so it tries to
 

00:20:09.890 --> 00:20:14.430 align:start position:0%
to eliminate copying and so it tries to
just<00:20:11.350><c> convert</c><00:20:12.350><c> it</c><00:20:12.980><c> mean</c><00:20:13.190><c> if</c><00:20:13.340><c> it</c><00:20:13.490><c> can</c><00:20:13.730><c> it</c><00:20:13.940><c> will</c>

00:20:14.430 --> 00:20:14.440 align:start position:0%
just convert it mean if it can it will
 

00:20:14.440 --> 00:20:18.220 align:start position:0%
just convert it mean if it can it will
just<00:20:15.440><c> convert</c><00:20:16.340><c> from</c><00:20:16.670><c> your</c><00:20:16.970><c> input</c><00:20:17.480><c> buffer</c><00:20:18.020><c> and</c>

00:20:18.220 --> 00:20:18.230 align:start position:0%
just convert from your input buffer and
 

00:20:18.230 --> 00:20:21.060 align:start position:0%
just convert from your input buffer and
into<00:20:18.650><c> your</c><00:20:18.830><c> output</c><00:20:19.280><c> buffer</c><00:20:19.750><c> without</c>

00:20:21.060 --> 00:20:21.070 align:start position:0%
into your output buffer without
 

00:20:21.070 --> 00:20:24.760 align:start position:0%
into your output buffer without
buffering<00:20:22.070><c> internally</c><00:20:23.200><c> in</c><00:20:24.200><c> certain</c><00:20:24.650><c> cases</c>

00:20:24.760 --> 00:20:24.770 align:start position:0%
buffering internally in certain cases
 

00:20:24.770 --> 00:20:29.920 align:start position:0%
buffering internally in certain cases
that<00:20:25.220><c> cannot</c><00:20:25.430><c> do</c><00:20:25.610><c> that</c><00:20:25.790><c> but</c><00:20:25.970><c> so</c><00:20:28.240><c> in</c><00:20:29.240><c> the</c><00:20:29.690><c> input</c>

00:20:29.920 --> 00:20:29.930 align:start position:0%
that cannot do that but so in the input
 

00:20:29.930 --> 00:20:31.690 align:start position:0%
that cannot do that but so in the input
brockie<00:20:30.170><c> you</c><00:20:30.350><c> provide</c><00:20:30.650><c> pointers</c><00:20:31.100><c> to</c><00:20:31.550><c> your</c>

00:20:31.690 --> 00:20:31.700 align:start position:0%
brockie you provide pointers to your
 

00:20:31.700 --> 00:20:36.790 align:start position:0%
brockie you provide pointers to your
your<00:20:32.060><c> data</c><00:20:32.360><c> not</c><00:20:32.600><c> not</c><00:20:32.930><c> copy</c><00:20:33.320><c> it</c><00:20:33.560><c> and</c><00:20:35.620><c> you</c><00:20:36.620><c> need</c>

00:20:36.790 --> 00:20:36.800 align:start position:0%
your data not not copy it and you need
 

00:20:36.800 --> 00:20:39.820 align:start position:0%
your data not not copy it and you need
in<00:20:36.980><c> your</c><00:20:37.610><c> input</c><00:20:37.970><c> proc</c><00:20:38.210><c> when</c><00:20:38.540><c> you</c><00:20:38.690><c> pass</c><00:20:39.230><c> data</c><00:20:39.590><c> to</c>

00:20:39.820 --> 00:20:39.830 align:start position:0%
in your input proc when you pass data to
 

00:20:39.830 --> 00:20:41.050 align:start position:0%
in your input proc when you pass data to
the<00:20:39.950><c> audio</c><00:20:40.160><c> converter</c><00:20:40.370><c> you</c><00:20:40.640><c> have</c><00:20:40.760><c> to</c><00:20:40.880><c> keep</c>

00:20:41.050 --> 00:20:41.060 align:start position:0%
the audio converter you have to keep
 

00:20:41.060 --> 00:20:44.980 align:start position:0%
the audio converter you have to keep
that<00:20:41.210><c> data</c><00:20:42.250><c> valid</c><00:20:43.250><c> until</c><00:20:43.670><c> the</c><00:20:43.790><c> next</c><00:20:43.970><c> time</c><00:20:44.180><c> your</c>

00:20:44.980 --> 00:20:44.990 align:start position:0%
that data valid until the next time your
 

00:20:44.990 --> 00:20:46.780 align:start position:0%
that data valid until the next time your
input<00:20:45.320><c> proc</c><00:20:45.530><c> is</c><00:20:45.680><c> called</c><00:20:45.950><c> and</c><00:20:46.190><c> that</c><00:20:46.310><c> might</c><00:20:46.550><c> be</c>

00:20:46.780 --> 00:20:46.790 align:start position:0%
input proc is called and that might be
 

00:20:46.790 --> 00:20:49.480 align:start position:0%
input proc is called and that might be
across<00:20:47.440><c> calls</c><00:20:48.440><c> the</c><00:20:48.740><c> two</c><00:20:48.980><c> audio</c><00:20:49.250><c> converter</c>

00:20:49.480 --> 00:20:49.490 align:start position:0%
across calls the two audio converter
 

00:20:49.490 --> 00:20:51.820 align:start position:0%
across calls the two audio converter
field<00:20:49.880><c> complex</c><00:20:50.180><c> buffer</c><00:20:50.660><c> so</c><00:20:50.870><c> you</c><00:20:51.440><c> may</c><00:20:51.590><c> call</c>

00:20:51.820 --> 00:20:51.830 align:start position:0%
field complex buffer so you may call
 

00:20:51.830 --> 00:20:53.770 align:start position:0%
field complex buffer so you may call
audio<00:20:52.250><c> converter</c><00:20:52.460><c> field</c><00:20:52.820><c> complex</c><00:20:53.150><c> buffer</c><00:20:53.600><c> it</c>

00:20:53.770 --> 00:20:53.780 align:start position:0%
audio converter field complex buffer it
 

00:20:53.780 --> 00:20:56.650 align:start position:0%
audio converter field complex buffer it
calls<00:20:53.990><c> your</c><00:20:54.140><c> input</c><00:20:54.500><c> proc</c><00:20:55.120><c> which</c><00:20:56.120><c> returns</c><00:20:56.480><c> data</c>

00:20:56.650 --> 00:20:56.660 align:start position:0%
calls your input proc which returns data
 

00:20:56.660 --> 00:20:59.800 align:start position:0%
calls your input proc which returns data
to<00:20:56.900><c> the</c><00:20:56.930><c> audio</c><00:20:57.200><c> converter</c><00:20:57.410><c> and</c><00:20:57.770><c> then</c><00:20:58.460><c> you</c><00:20:59.270><c> exit</c>

00:20:59.800 --> 00:20:59.810 align:start position:0%
to the audio converter and then you exit
 

00:20:59.810 --> 00:21:01.840 align:start position:0%
to the audio converter and then you exit
audios<00:21:00.110><c> audio</c><00:21:00.860><c> converter</c><00:21:01.040><c> field</c><00:21:01.400><c> complex</c><00:21:01.610><c> but</c>

00:21:01.840 --> 00:21:01.850 align:start position:0%
audios audio converter field complex but
 

00:21:01.850 --> 00:21:04.060 align:start position:0%
audios audio converter field complex but
for<00:21:02.000><c> exit</c><00:21:02.300><c> and</c><00:21:02.420><c> returns</c><00:21:02.660><c> you</c><00:21:02.840><c> data</c><00:21:03.050><c> you</c><00:21:03.830><c> still</c>

00:21:04.060 --> 00:21:04.070 align:start position:0%
for exit and returns you data you still
 

00:21:04.070 --> 00:21:06.730 align:start position:0%
for exit and returns you data you still
have<00:21:04.190><c> to</c><00:21:04.280><c> keep</c><00:21:04.430><c> that</c><00:21:04.580><c> that</c><00:21:05.510><c> input</c><00:21:06.230><c> data</c><00:21:06.440><c> live</c>

00:21:06.730 --> 00:21:06.740 align:start position:0%
have to keep that that input data live
 

00:21:06.740 --> 00:21:08.410 align:start position:0%
have to keep that that input data live
until<00:21:07.100><c> the</c><00:21:07.220><c> next</c><00:21:07.400><c> time</c><00:21:07.550><c> you</c><00:21:07.790><c> call</c><00:21:08.090><c> audio</c>

00:21:08.410 --> 00:21:08.420 align:start position:0%
until the next time you call audio
 

00:21:08.420 --> 00:21:09.880 align:start position:0%
until the next time you call audio
converter<00:21:08.600><c> fill</c><00:21:08.990><c> complex</c><00:21:09.410><c> buffer</c><00:21:09.710><c> and</c><00:21:09.800><c> it's</c>

00:21:09.880 --> 00:21:09.890 align:start position:0%
converter fill complex buffer and it's
 

00:21:09.890 --> 00:21:12.250 align:start position:0%
converter fill complex buffer and it's
called<00:21:10.160><c> your</c><00:21:10.280><c> input</c><00:21:10.580><c> proc</c><00:21:10.930><c> because</c><00:21:11.930><c> it's</c>

00:21:12.250 --> 00:21:12.260 align:start position:0%
called your input proc because it's
 

00:21:12.260 --> 00:21:17.000 align:start position:0%
called your input proc because it's
still<00:21:12.650><c> looking</c><00:21:13.460><c> at</c><00:21:13.550><c> that</c><00:21:13.700><c> data</c>

00:21:17.000 --> 00:21:17.010 align:start position:0%
 
 

00:21:17.010 --> 00:21:20.970 align:start position:0%
 
now<00:21:18.010><c> your</c><00:21:18.880><c> input</c><00:21:19.179><c> Brock</c><00:21:19.419><c> gets</c><00:21:20.380><c> past</c><00:21:20.679><c> the</c>

00:21:20.970 --> 00:21:20.980 align:start position:0%
now your input Brock gets past the
 

00:21:20.980 --> 00:21:23.639 align:start position:0%
now your input Brock gets past the
number<00:21:21.250><c> of</c><00:21:21.340><c> packets</c><00:21:21.730><c> that</c><00:21:22.529><c> the</c><00:21:23.529><c> auto</c>

00:21:23.639 --> 00:21:23.649 align:start position:0%
number of packets that the auto
 

00:21:23.649 --> 00:21:25.110 align:start position:0%
number of packets that the auto
converter<00:21:24.100><c> once</c><00:21:24.399><c> from</c><00:21:24.610><c> you</c><00:21:24.730><c> but</c><00:21:24.940><c> you're</c>

00:21:25.110 --> 00:21:25.120 align:start position:0%
converter once from you but you're
 

00:21:25.120 --> 00:21:29.340 align:start position:0%
converter once from you but you're
you're<00:21:26.429><c> allowed</c><00:21:27.429><c> to</c><00:21:27.850><c> return</c><00:21:28.570><c> either</c><00:21:28.899><c> more</c><00:21:29.320><c> or</c>

00:21:29.340 --> 00:21:29.350 align:start position:0%
you're allowed to return either more or
 

00:21:29.350 --> 00:21:32.820 align:start position:0%
you're allowed to return either more or
less<00:21:29.710><c> data</c><00:21:29.950><c> than</c><00:21:30.070><c> its</c><00:21:30.340><c> asked</c><00:21:30.669><c> before</c><00:21:31.029><c> if</c><00:21:31.830><c> you</c>

00:21:32.820 --> 00:21:32.830 align:start position:0%
less data than its asked before if you
 

00:21:32.830 --> 00:21:35.490 align:start position:0%
less data than its asked before if you
return<00:21:33.190><c> less</c><00:21:33.520><c> then</c><00:21:34.000><c> it</c><00:21:34.510><c> will</c><00:21:34.659><c> be</c><00:21:34.809><c> called</c><00:21:35.049><c> again</c>

00:21:35.490 --> 00:21:35.500 align:start position:0%
return less then it will be called again
 

00:21:35.500 --> 00:21:40.850 align:start position:0%
return less then it will be called again
the<00:21:35.890><c> word</c><00:21:36.070><c> again</c><00:21:36.399><c> has</c><00:21:36.580><c> been</c><00:21:37.770><c> removed</c><00:21:38.770><c> here</c><00:21:39.390><c> and</c>

00:21:40.850 --> 00:21:40.860 align:start position:0%
the word again has been removed here and
 

00:21:40.860 --> 00:21:45.240 align:start position:0%
the word again has been removed here and
if<00:21:41.860><c> you</c><00:21:42.039><c> return</c><00:21:42.340><c> more</c><00:21:42.580><c> than</c><00:21:42.820><c> it</c><00:21:42.909><c> will</c><00:21:44.070><c> just</c><00:21:45.070><c> ask</c>

00:21:45.240 --> 00:21:45.250 align:start position:0%
if you return more than it will just ask
 

00:21:45.250 --> 00:21:47.159 align:start position:0%
if you return more than it will just ask
you<00:21:45.520><c> less</c><00:21:45.820><c> frequently</c><00:21:46.299><c> I'll</c><00:21:46.570><c> just</c><00:21:46.870><c> ask</c><00:21:47.020><c> you</c>

00:21:47.159 --> 00:21:47.169 align:start position:0%
you less frequently I'll just ask you
 

00:21:47.169 --> 00:21:50.850 align:start position:0%
you less frequently I'll just ask you
the<00:21:47.289><c> next</c><00:21:47.350><c> time</c><00:21:47.559><c> it</c><00:21:47.799><c> needs</c><00:21:47.919><c> data</c><00:21:49.620><c> okay</c><00:21:50.620><c> so</c><00:21:50.679><c> the</c>

00:21:50.850 --> 00:21:50.860 align:start position:0%
the next time it needs data okay so the
 

00:21:50.860 --> 00:21:53.840 align:start position:0%
the next time it needs data okay so the
input<00:21:50.980><c> proc</c><00:21:51.370><c> you</c><00:21:52.240><c> have</c><00:21:52.390><c> an</c><00:21:52.929><c> audio</c><00:21:53.260><c> converter</c>

00:21:53.840 --> 00:21:53.850 align:start position:0%
input proc you have an audio converter
 

00:21:53.850 --> 00:21:57.330 align:start position:0%
input proc you have an audio converter
instance<00:21:54.850><c> and</c><00:21:55.659><c> there's</c><00:21:55.870><c> the</c><00:21:55.960><c> number</c><00:21:56.289><c> of</c><00:21:56.440><c> data</c>

00:21:57.330 --> 00:21:57.340 align:start position:0%
instance and there's the number of data
 

00:21:57.340 --> 00:22:00.690 align:start position:0%
instance and there's the number of data
packets<00:21:58.590><c> on</c><00:21:59.590><c> input</c><00:22:00.070><c> is</c><00:22:00.190><c> the</c><00:22:00.340><c> number</c><00:22:00.549><c> of</c><00:22:00.580><c> data</c>

00:22:00.690 --> 00:22:00.700 align:start position:0%
packets on input is the number of data
 

00:22:00.700 --> 00:22:02.130 align:start position:0%
packets on input is the number of data
packets<00:22:01.149><c> that</c><00:22:01.299><c> you</c><00:22:01.419><c> could</c><00:22:01.750><c> have</c><00:22:01.960><c> been</c>

00:22:02.130 --> 00:22:02.140 align:start position:0%
packets that you could have been
 

00:22:02.140 --> 00:22:04.529 align:start position:0%
packets that you could have been
requested<00:22:02.950><c> and</c><00:22:03.130><c> on</c><00:22:03.220><c> output</c><00:22:03.580><c> you</c><00:22:03.820><c> return</c><00:22:04.330><c> the</c>

00:22:04.529 --> 00:22:04.539 align:start position:0%
requested and on output you return the
 

00:22:04.539 --> 00:22:06.330 align:start position:0%
requested and on output you return the
number<00:22:04.690><c> of</c><00:22:04.870><c> data</c><00:22:05.620><c> packets</c><00:22:06.039><c> that</c><00:22:06.190><c> you're</c>

00:22:06.330 --> 00:22:06.340 align:start position:0%
number of data packets that you're
 

00:22:06.340 --> 00:22:08.700 align:start position:0%
number of data packets that you're
actually<00:22:06.520><c> returning</c><00:22:07.090><c> and</c><00:22:07.450><c> it</c><00:22:08.169><c> passes</c><00:22:08.380><c> you</c><00:22:08.649><c> a</c>

00:22:08.700 --> 00:22:08.710 align:start position:0%
actually returning and it passes you a
 

00:22:08.710 --> 00:22:10.080 align:start position:0%
actually returning and it passes you a
buffer<00:22:09.039><c> list</c><00:22:09.250><c> which</c><00:22:09.460><c> you</c><00:22:09.580><c> need</c><00:22:09.700><c> to</c><00:22:09.850><c> fill</c><00:22:10.059><c> out</c>

00:22:10.080 --> 00:22:10.090 align:start position:0%
buffer list which you need to fill out
 

00:22:10.090 --> 00:22:15.690 align:start position:0%
buffer list which you need to fill out
for<00:22:10.659><c> the</c><00:22:10.890><c> data</c><00:22:12.720><c> and</c><00:22:13.720><c> then</c><00:22:14.500><c> there's</c><00:22:14.679><c> a</c><00:22:14.740><c> the</c>

00:22:15.690 --> 00:22:15.700 align:start position:0%
for the data and then there's a the
 

00:22:15.700 --> 00:22:17.370 align:start position:0%
for the data and then there's a the
audio<00:22:16.029><c> stream</c><00:22:16.330><c> packet</c><00:22:16.690><c> description</c><00:22:17.169><c> if</c>

00:22:17.370 --> 00:22:17.380 align:start position:0%
audio stream packet description if
 

00:22:17.380 --> 00:22:22.440 align:start position:0%
audio stream packet description if
you're<00:22:18.510><c> returning</c><00:22:20.100><c> AAC</c><00:22:21.100><c> data</c><00:22:21.370><c> and</c><00:22:21.760><c> you</c><00:22:22.270><c> need</c>

00:22:22.440 --> 00:22:22.450 align:start position:0%
you're returning AAC data and you need
 

00:22:22.450 --> 00:22:24.840 align:start position:0%
you're returning AAC data and you need
to<00:22:22.570><c> set</c><00:22:22.840><c> this</c><00:22:22.990><c> pointer</c><00:22:23.440><c> to</c><00:22:23.649><c> the</c><00:22:24.250><c> array</c><00:22:24.820><c> of</c>

00:22:24.840 --> 00:22:24.850 align:start position:0%
to set this pointer to the array of
 

00:22:24.850 --> 00:22:26.909 align:start position:0%
to set this pointer to the array of
package<00:22:25.840><c> description</c><00:22:26.260><c> to</c><00:22:26.409><c> describe</c><00:22:26.529><c> the</c>

00:22:26.909 --> 00:22:26.919 align:start position:0%
package description to describe the
 

00:22:26.919 --> 00:22:29.820 align:start position:0%
package description to describe the
packet<00:22:27.250><c> boundaries</c><00:22:27.580><c> of</c><00:22:27.610><c> the</c><00:22:27.880><c> data</c><00:22:28.090><c> and</c><00:22:28.830><c> then</c>

00:22:29.820 --> 00:22:29.830 align:start position:0%
packet boundaries of the data and then
 

00:22:29.830 --> 00:22:32.130 align:start position:0%
packet boundaries of the data and then
there's<00:22:30.039><c> a</c><00:22:30.100><c> the</c><00:22:31.029><c> user</c><00:22:31.210><c> data</c><00:22:31.510><c> that's</c><00:22:31.690><c> passed</c><00:22:31.929><c> in</c>

00:22:32.130 --> 00:22:32.140 align:start position:0%
there's a the user data that's passed in
 

00:22:32.140 --> 00:22:36.720 align:start position:0%
there's a the user data that's passed in
which<00:22:32.350><c> is</c><00:22:32.500><c> your</c><00:22:32.740><c> own</c><00:22:32.950><c> instance</c><00:22:33.520><c> data</c><00:22:34.480><c> for</c><00:22:35.730><c> use</c>

00:22:36.720 --> 00:22:36.730 align:start position:0%
which is your own instance data for use
 

00:22:36.730 --> 00:22:38.789 align:start position:0%
which is your own instance data for use
however<00:22:37.690><c> you</c><00:22:37.809><c> wanted</c><00:22:38.080><c> to</c><00:22:38.200><c> use</c><00:22:38.350><c> it</c><00:22:38.529><c> in</c><00:22:38.649><c> your</c>

00:22:38.789 --> 00:22:38.799 align:start position:0%
however you wanted to use it in your
 

00:22:38.799 --> 00:22:42.870 align:start position:0%
however you wanted to use it in your
head<00:22:38.890><c> put</c><00:22:39.039><c> prod</c><00:22:40.620><c> there's</c><00:22:41.620><c> a</c><00:22:42.190><c> couple</c><00:22:42.580><c> special</c>

00:22:42.870 --> 00:22:42.880 align:start position:0%
head put prod there's a couple special
 

00:22:42.880 --> 00:22:45.570 align:start position:0%
head put prod there's a couple special
conditions<00:22:43.539><c> for</c><00:22:44.350><c> feeling</c><00:22:45.159><c> that</c><00:22:45.190><c> you</c><00:22:45.399><c> have</c><00:22:45.490><c> to</c>

00:22:45.570 --> 00:22:45.580 align:start position:0%
conditions for feeling that you have to
 

00:22:45.580 --> 00:22:47.970 align:start position:0%
conditions for feeling that you have to
deal<00:22:45.700><c> with</c><00:22:45.880><c> in</c><00:22:46.000><c> your</c><00:22:46.090><c> input</c><00:22:46.390><c> proc</c><00:22:46.620><c> one</c><00:22:47.620><c> is</c><00:22:47.770><c> when</c>

00:22:47.970 --> 00:22:47.980 align:start position:0%
deal with in your input proc one is when
 

00:22:47.980 --> 00:22:49.529 align:start position:0%
deal with in your input proc one is when
you<00:22:48.100><c> reach</c><00:22:48.820><c> the</c><00:22:49.000><c> end</c><00:22:49.029><c> of</c><00:22:49.210><c> the</c><00:22:49.299><c> stream</c><00:22:49.510><c> and</c>

00:22:49.529 --> 00:22:49.539 align:start position:0%
you reach the end of the stream and
 

00:22:49.539 --> 00:22:53.279 align:start position:0%
you reach the end of the stream and
you're<00:22:49.779><c> out</c><00:22:49.899><c> of</c><00:22:49.929><c> data</c><00:22:51.809><c> what</c><00:22:52.809><c> you</c><00:22:52.899><c> need</c><00:22:53.049><c> to</c><00:22:53.140><c> do</c>

00:22:53.279 --> 00:22:53.289 align:start position:0%
you're out of data what you need to do
 

00:22:53.289 --> 00:22:55.649 align:start position:0%
you're out of data what you need to do
is<00:22:53.440><c> set</c><00:22:53.710><c> the</c><00:22:53.740><c> number</c><00:22:54.700><c> of</c><00:22:54.880><c> data</c><00:22:55.000><c> packets</c><00:22:55.510><c> you're</c>

00:22:55.649 --> 00:22:55.659 align:start position:0%
is set the number of data packets you're
 

00:22:55.659 --> 00:22:57.649 align:start position:0%
is set the number of data packets you're
returning<00:22:55.990><c> to</c><00:22:56.230><c> zero</c><00:22:56.529><c> and</c><00:22:56.799><c> return</c><00:22:57.100><c> no</c><00:22:57.340><c> error</c>

00:22:57.649 --> 00:22:57.659 align:start position:0%
returning to zero and return no error
 

00:22:57.659 --> 00:23:01.620 align:start position:0%
returning to zero and return no error
your<00:22:58.659><c> input</c><00:22:58.990><c> proc</c><00:22:59.230><c> may</c><00:22:59.470><c> be</c><00:22:59.529><c> called</c><00:23:00.630><c> several</c>

00:23:01.620 --> 00:23:01.630 align:start position:0%
your input proc may be called several
 

00:23:01.630 --> 00:23:03.210 align:start position:0%
your input proc may be called several
more<00:23:01.779><c> times</c><00:23:02.020><c> and</c><00:23:02.380><c> you</c><00:23:02.620><c> just</c><00:23:02.799><c> keep</c><00:23:02.919><c> returning</c>

00:23:03.210 --> 00:23:03.220 align:start position:0%
more times and you just keep returning
 

00:23:03.220 --> 00:23:06.810 align:start position:0%
more times and you just keep returning
zero<00:23:04.710><c> and</c><00:23:05.710><c> that</c><00:23:05.890><c> will</c><00:23:06.070><c> signal</c><00:23:06.370><c> to</c><00:23:06.490><c> the</c><00:23:06.610><c> audio</c>

00:23:06.810 --> 00:23:06.820 align:start position:0%
zero and that will signal to the audio
 

00:23:06.820 --> 00:23:08.490 align:start position:0%
zero and that will signal to the audio
converter<00:23:07.029><c> that</c><00:23:07.330><c> you're</c><00:23:07.510><c> indeed</c><00:23:07.870><c> out</c><00:23:08.140><c> of</c><00:23:08.289><c> data</c>

00:23:08.490 --> 00:23:08.500 align:start position:0%
converter that you're indeed out of data
 

00:23:08.500 --> 00:23:11.610 align:start position:0%
converter that you're indeed out of data
and<00:23:08.770><c> it</c><00:23:09.250><c> will</c><00:23:09.370><c> flush</c><00:23:09.640><c> its</c><00:23:09.850><c> buffers</c><00:23:10.620><c> another</c>

00:23:11.610 --> 00:23:11.620 align:start position:0%
and it will flush its buffers another
 

00:23:11.620 --> 00:23:14.519 align:start position:0%
and it will flush its buffers another
situation<00:23:11.860><c> you</c><00:23:12.309><c> could</c><00:23:12.429><c> be</c><00:23:12.580><c> in</c><00:23:12.730><c> is</c><00:23:12.940><c> that</c><00:23:13.529><c> if</c>

00:23:14.519 --> 00:23:14.529 align:start position:0%
situation you could be in is that if
 

00:23:14.529 --> 00:23:16.169 align:start position:0%
situation you could be in is that if
you're<00:23:14.740><c> doing</c><00:23:14.950><c> real-time</c><00:23:15.159><c> streaming</c><00:23:15.700><c> you</c><00:23:16.029><c> may</c>

00:23:16.169 --> 00:23:16.179 align:start position:0%
you're doing real-time streaming you may
 

00:23:16.179 --> 00:23:18.389 align:start position:0%
you're doing real-time streaming you may
be<00:23:16.240><c> in</c><00:23:16.390><c> a</c><00:23:16.419><c> situation</c><00:23:16.600><c> where</c><00:23:17.100><c> you're</c><00:23:18.100><c> not</c><00:23:18.279><c> at</c>

00:23:18.389 --> 00:23:18.399 align:start position:0%
be in a situation where you're not at
 

00:23:18.399 --> 00:23:19.620 align:start position:0%
be in a situation where you're not at
the<00:23:18.460><c> end</c><00:23:18.549><c> of</c><00:23:18.700><c> the</c><00:23:18.789><c> screen</c><00:23:19.059><c> but</c><00:23:19.240><c> you</c><00:23:19.360><c> don't</c><00:23:19.539><c> have</c>

00:23:19.620 --> 00:23:19.630 align:start position:0%
the end of the screen but you don't have
 

00:23:19.630 --> 00:23:22.500 align:start position:0%
the end of the screen but you don't have
any<00:23:19.809><c> data</c><00:23:19.990><c> available</c><00:23:20.500><c> right</c><00:23:20.649><c> now</c><00:23:20.710><c> so</c><00:23:21.520><c> the</c>

00:23:22.500 --> 00:23:22.510 align:start position:0%
any data available right now so the
 

00:23:22.510 --> 00:23:24.750 align:start position:0%
any data available right now so the
audio<00:23:22.779><c> converter</c><00:23:23.020><c> needs</c><00:23:23.620><c> to</c><00:23:23.919><c> just</c><00:23:24.580><c> return</c>

00:23:24.750 --> 00:23:24.760 align:start position:0%
audio converter needs to just return
 

00:23:24.760 --> 00:23:27.750 align:start position:0%
audio converter needs to just return
whatever<00:23:25.120><c> it's</c><00:23:25.419><c> got</c><00:23:25.659><c> converted</c><00:23:26.250><c> so</c><00:23:27.250><c> what</c><00:23:27.610><c> you</c>

00:23:27.750 --> 00:23:27.760 align:start position:0%
whatever it's got converted so what you
 

00:23:27.760 --> 00:23:31.850 align:start position:0%
whatever it's got converted so what you
do<00:23:27.850><c> in</c><00:23:28.090><c> that</c><00:23:28.210><c> case</c><00:23:28.450><c> is</c><00:23:28.720><c> you</c><00:23:29.350><c> return</c><00:23:29.770><c> no</c><00:23:30.520><c> packets</c>

00:23:31.850 --> 00:23:31.860 align:start position:0%
do in that case is you return no packets
 

00:23:31.860 --> 00:23:34.380 align:start position:0%
do in that case is you return no packets
available<00:23:32.860><c> and</c><00:23:33.100><c> you</c><00:23:33.220><c> return</c><00:23:33.520><c> an</c><00:23:33.640><c> error</c><00:23:33.850><c> and</c>

00:23:34.380 --> 00:23:34.390 align:start position:0%
available and you return an error and
 

00:23:34.390 --> 00:23:36.510 align:start position:0%
available and you return an error and
this<00:23:34.660><c> return</c><00:23:35.020><c> error</c><00:23:35.290><c> gets</c><00:23:35.590><c> propagated</c><00:23:36.100><c> back</c>

00:23:36.510 --> 00:23:36.520 align:start position:0%
this return error gets propagated back
 

00:23:36.520 --> 00:23:40.230 align:start position:0%
this return error gets propagated back
to<00:23:36.670><c> the</c><00:23:36.760><c> caller</c><00:23:37.000><c> and</c><00:23:37.330><c> any</c><00:23:37.930><c> data</c><00:23:38.170><c> that</c><00:23:39.030><c> had</c><00:23:40.030><c> been</c>

00:23:40.230 --> 00:23:40.240 align:start position:0%
to the caller and any data that had been
 

00:23:40.240 --> 00:23:42.150 align:start position:0%
to the caller and any data that had been
converted<00:23:40.420><c> up</c><00:23:40.810><c> to</c><00:23:40.930><c> that</c><00:23:41.080><c> point</c><00:23:41.350><c> will</c><00:23:42.130><c> be</c>

00:23:42.150 --> 00:23:42.160 align:start position:0%
converted up to that point will be
 

00:23:42.160 --> 00:23:45.270 align:start position:0%
converted up to that point will be
returned<00:23:43.030><c> to</c><00:23:43.150><c> the</c><00:23:43.300><c> caller</c><00:23:43.810><c> but</c><00:23:44.140><c> the</c><00:23:45.130><c> audio</c>

00:23:45.270 --> 00:23:45.280 align:start position:0%
returned to the caller but the audio
 

00:23:45.280 --> 00:23:48.060 align:start position:0%
returned to the caller but the audio
converter<00:23:45.610><c> will</c><00:23:46.030><c> keep</c><00:23:46.450><c> any</c><00:23:46.750><c> unconverted</c><00:23:47.740><c> data</c>

00:23:48.060 --> 00:23:48.070 align:start position:0%
converter will keep any unconverted data
 

00:23:48.070 --> 00:23:50.760 align:start position:0%
converter will keep any unconverted data
that<00:23:48.610><c> it</c><00:23:48.730><c> has</c><00:23:48.820><c> internally</c><00:23:49.420><c> until</c><00:23:50.260><c> the</c><00:23:50.620><c> next</c>

00:23:50.760 --> 00:23:50.770 align:start position:0%
that it has internally until the next
 

00:23:50.770 --> 00:23:52.200 align:start position:0%
that it has internally until the next
time<00:23:50.920><c> audio</c><00:23:51.280><c> converter</c><00:23:51.490><c> field</c><00:23:51.970><c> complex</c>

00:23:52.200 --> 00:23:52.210 align:start position:0%
time audio converter field complex
 

00:23:52.210 --> 00:23:55.530 align:start position:0%
time audio converter field complex
buffers<00:23:52.660><c> called</c><00:23:53.940><c> okay</c><00:23:54.940><c> so</c><00:23:55.000><c> here's</c><00:23:55.390><c> an</c><00:23:55.510><c> example</c>

00:23:55.530 --> 00:23:55.540 align:start position:0%
buffers called okay so here's an example
 

00:23:55.540 --> 00:23:58.980 align:start position:0%
buffers called okay so here's an example
of<00:23:56.080><c> what</c><00:23:57.070><c> an</c><00:23:57.160><c> input</c><00:23:57.430><c> proc</c><00:23:57.640><c> might</c><00:23:57.880><c> look</c><00:23:58.060><c> like</c><00:23:58.120><c> in</c>

00:23:58.980 --> 00:23:58.990 align:start position:0%
of what an input proc might look like in
 

00:23:58.990 --> 00:24:02.010 align:start position:0%
of what an input proc might look like in
the<00:23:59.470><c> first</c><00:24:00.100><c> line</c><00:24:01.000><c> of</c><00:24:01.030><c> code</c><00:24:01.360><c> here</c><00:24:01.390><c> I'm</c><00:24:01.780><c> just</c>

00:24:02.010 --> 00:24:02.020 align:start position:0%
the first line of code here I'm just
 

00:24:02.020 --> 00:24:05.040 align:start position:0%
the first line of code here I'm just
getting<00:24:02.890><c> a</c><00:24:02.950><c> pointer</c><00:24:03.310><c> system</c><00:24:03.760><c> of</c><00:24:03.970><c> my</c><00:24:04.480><c> user</c><00:24:04.780><c> data</c>

00:24:05.040 --> 00:24:05.050 align:start position:0%
getting a pointer system of my user data
 

00:24:05.050 --> 00:24:08.970 align:start position:0%
getting a pointer system of my user data
stuff<00:24:05.350><c> which</c><00:24:05.710><c> is</c><00:24:06.420><c> just</c><00:24:07.420><c> my</c><00:24:07.630><c> own</c><00:24:07.810><c> data</c><00:24:08.350><c> which</c><00:24:08.830><c> I</c>

00:24:08.970 --> 00:24:08.980 align:start position:0%
stuff which is just my own data which I
 

00:24:08.980 --> 00:24:11.790 align:start position:0%
stuff which is just my own data which I
have<00:24:09.250><c> a</c><00:24:09.460><c> buffer</c><00:24:09.760><c> list</c><00:24:10.090><c> stored</c><00:24:10.390><c> in</c><00:24:10.600><c> that</c><00:24:10.960><c> points</c>

00:24:11.790 --> 00:24:11.800 align:start position:0%
have a buffer list stored in that points
 

00:24:11.800 --> 00:24:14.310 align:start position:0%
have a buffer list stored in that points
to<00:24:11.920><c> my</c><00:24:12.120><c> data</c><00:24:13.120><c> and</c><00:24:13.420><c> then</c><00:24:13.570><c> I</c><00:24:13.660><c> have</c><00:24:13.810><c> a</c><00:24:13.840><c> loop</c><00:24:14.080><c> here</c>

00:24:14.310 --> 00:24:14.320 align:start position:0%
to my data and then I have a loop here
 

00:24:14.320 --> 00:24:18.300 align:start position:0%
to my data and then I have a loop here
which<00:24:14.470><c> just</c><00:24:14.710><c> copies</c><00:24:15.550><c> the</c><00:24:15.580><c> pointers</c><00:24:16.090><c> from</c><00:24:17.310><c> my</c>

00:24:18.300 --> 00:24:18.310 align:start position:0%
which just copies the pointers from my
 

00:24:18.310 --> 00:24:22.230 align:start position:0%
which just copies the pointers from my
in<00:24:18.810><c> my</c><00:24:19.810><c> input</c><00:24:20.140><c> data</c><00:24:20.430><c> buffer</c><00:24:21.430><c> list</c><00:24:21.610><c> into</c><00:24:22.120><c> the</c>

00:24:22.230 --> 00:24:22.240 align:start position:0%
in my input data buffer list into the
 

00:24:22.240 --> 00:24:25.680 align:start position:0%
in my input data buffer list into the
audio<00:24:22.570><c> converters</c><00:24:23.080><c> a</c><00:24:24.240><c> buffer</c><00:24:25.240><c> list</c><00:24:25.450><c> so</c><00:24:25.630><c> I'm</c>

00:24:25.680 --> 00:24:25.690 align:start position:0%
audio converters a buffer list so I'm
 

00:24:25.690 --> 00:24:27.690 align:start position:0%
audio converters a buffer list so I'm
just<00:24:25.870><c> copying</c><00:24:26.140><c> pointers</c><00:24:26.710><c> not</c><00:24:26.950><c> data</c><00:24:27.190><c> here</c><00:24:27.520><c> and</c>

00:24:27.690 --> 00:24:27.700 align:start position:0%
just copying pointers not data here and
 

00:24:27.700 --> 00:24:30.630 align:start position:0%
just copying pointers not data here and
then<00:24:27.880><c> I'm</c><00:24:28.000><c> returning</c><00:24:28.930><c> the</c><00:24:29.050><c> number</c><00:24:29.290><c> of</c><00:24:29.640><c> packets</c>

00:24:30.630 --> 00:24:30.640 align:start position:0%
then I'm returning the number of packets
 

00:24:30.640 --> 00:24:35.190 align:start position:0%
then I'm returning the number of packets
that<00:24:30.850><c> were</c><00:24:31.030><c> in</c><00:24:31.240><c> my</c><00:24:33.240><c> that</c><00:24:34.240><c> were</c><00:24:34.420><c> in</c><00:24:34.630><c> my</c><00:24:34.660><c> buffer</c>

00:24:35.190 --> 00:24:35.200 align:start position:0%
that were in my that were in my buffer
 

00:24:35.200 --> 00:24:38.820 align:start position:0%
that were in my that were in my buffer
so<00:24:35.560><c> in</c><00:24:36.490><c> this</c><00:24:36.970><c> in</c><00:24:37.270><c> this</c><00:24:37.510><c> example</c><00:24:38.200><c> here</c><00:24:38.500><c> I'm</c><00:24:38.620><c> just</c>

00:24:38.820 --> 00:24:38.830 align:start position:0%
so in this in this example here I'm just
 

00:24:38.830 --> 00:24:40.680 align:start position:0%
so in this in this example here I'm just
completely<00:24:38.950><c> ignoring</c><00:24:39.640><c> what</c><00:24:39.940><c> the</c><00:24:40.120><c> audio</c>

00:24:40.680 --> 00:24:40.690 align:start position:0%
completely ignoring what the audio
 

00:24:40.690 --> 00:24:42.920 align:start position:0%
completely ignoring what the audio
converter<00:24:40.870><c> actually</c><00:24:41.410><c> asked</c><00:24:41.680><c> me</c><00:24:41.770><c> for</c><00:24:42.040><c> but</c>

00:24:42.920 --> 00:24:42.930 align:start position:0%
converter actually asked me for but
 

00:24:42.930 --> 00:24:45.660 align:start position:0%
converter actually asked me for but
that's<00:24:43.930><c> generally</c><00:24:44.320><c> not</c><00:24:44.620><c> the</c><00:24:45.250><c> best</c><00:24:45.460><c> thing</c><00:24:45.640><c> to</c>

00:24:45.660 --> 00:24:45.670 align:start position:0%
that's generally not the best thing to
 

00:24:45.670 --> 00:24:51.090 align:start position:0%
that's generally not the best thing to
do<00:24:47.490><c> but</c><00:24:48.490><c> it</c><00:24:48.640><c> will</c><00:24:48.760><c> work</c><00:24:49.500><c> you</c><00:24:50.500><c> just</c><00:24:50.710><c> would</c><00:24:50.950><c> get</c>

00:24:51.090 --> 00:24:51.100 align:start position:0%
do but it will work you just would get
 

00:24:51.100 --> 00:24:53.250 align:start position:0%
do but it will work you just would get
extra<00:24:51.670><c> copying</c><00:24:52.090><c> in</c><00:24:52.150><c> that</c><00:24:52.300><c> situation</c><00:24:52.630><c> okay</c><00:24:53.200><c> so</c>

00:24:53.250 --> 00:24:53.260 align:start position:0%
extra copying in that situation okay so
 

00:24:53.260 --> 00:24:54.480 align:start position:0%
extra copying in that situation okay so
the<00:24:53.410><c> next</c><00:24:53.530><c> thing</c><00:24:53.920><c> I'm</c><00:24:54.070><c> going</c><00:24:54.160><c> to</c><00:24:54.250><c> talk</c><00:24:54.340><c> about</c>

00:24:54.480 --> 00:24:54.490 align:start position:0%
the next thing I'm going to talk about
 

00:24:54.490 --> 00:24:57.420 align:start position:0%
the next thing I'm going to talk about
is<00:24:54.640><c> the</c><00:24:54.730><c> audio</c><00:24:54.970><c> format</c><00:24:55.360><c> API</c><00:24:55.860><c> it's</c><00:24:56.860><c> a</c><00:24:56.980><c> new</c><00:24:57.100><c> API</c>

00:24:57.420 --> 00:24:57.430 align:start position:0%
is the audio format API it's a new API
 

00:24:57.430 --> 00:25:01.700 align:start position:0%
is the audio format API it's a new API
in<00:24:57.640><c> pancer</c><00:24:58.000><c> for</c><00:24:58.780><c> asking</c><00:24:59.550><c> questions</c><00:25:00.550><c> about</c>

00:25:01.700 --> 00:25:01.710 align:start position:0%
in pancer for asking questions about
 

00:25:01.710 --> 00:25:05.550 align:start position:0%
in pancer for asking questions about
about<00:25:02.710><c> audio</c><00:25:03.010><c> formats</c><00:25:03.460><c> what</c><00:25:04.380><c> things</c><00:25:05.380><c> you</c><00:25:05.500><c> can</c>

00:25:05.550 --> 00:25:05.560 align:start position:0%
about audio formats what things you can
 

00:25:05.560 --> 00:25:09.480 align:start position:0%
about audio formats what things you can
do<00:25:06.240><c> it</c><00:25:07.240><c> provides</c><00:25:07.690><c> operations</c><00:25:08.230><c> for</c><00:25:08.560><c> handling</c>

00:25:09.480 --> 00:25:09.490 align:start position:0%
do it provides operations for handling
 

00:25:09.490 --> 00:25:10.950 align:start position:0%
do it provides operations for handling
audio<00:25:09.790><c> stream</c><00:25:10.000><c> basic</c><00:25:10.300><c> descriptions</c><00:25:10.780><c> and</c>

00:25:10.950 --> 00:25:10.960 align:start position:0%
audio stream basic descriptions and
 

00:25:10.960 --> 00:25:13.080 align:start position:0%
audio stream basic descriptions and
audio<00:25:11.860><c> channel</c><00:25:12.250><c> layouts</c><00:25:12.520><c> which</c><00:25:12.790><c> I'll</c><00:25:12.940><c> talk</c>

00:25:13.080 --> 00:25:13.090 align:start position:0%
audio channel layouts which I'll talk
 

00:25:13.090 --> 00:25:15.840 align:start position:0%
audio channel layouts which I'll talk
about<00:25:13.680><c> audio</c><00:25:14.680><c> channel</c><00:25:14.980><c> layouts</c><00:25:15.220><c> are</c><00:25:15.430><c> a</c><00:25:15.460><c> new</c>

00:25:15.840 --> 00:25:15.850 align:start position:0%
about audio channel layouts are a new
 

00:25:15.850 --> 00:25:21.180 align:start position:0%
about audio channel layouts are a new
structure<00:25:16.180><c> in</c><00:25:16.510><c> a</c><00:25:17.850><c> panther</c><00:25:18.850><c> which</c><00:25:20.190><c> describes</c>

00:25:21.180 --> 00:25:21.190 align:start position:0%
structure in a panther which describes
 

00:25:21.190 --> 00:25:24.630 align:start position:0%
structure in a panther which describes
the<00:25:21.370><c> locations</c><00:25:22.150><c> or</c><00:25:23.100><c> describe</c><00:25:24.100><c> the</c><00:25:24.220><c> channels</c>

00:25:24.630 --> 00:25:24.640 align:start position:0%
the locations or describe the channels
 

00:25:24.640 --> 00:25:27.450 align:start position:0%
the locations or describe the channels
present<00:25:25.120><c> in</c><00:25:25.240><c> an</c><00:25:25.360><c> audio</c><00:25:25.600><c> stream</c><00:25:26.190><c> and</c><00:25:27.190><c> what</c>

00:25:27.450 --> 00:25:27.460 align:start position:0%
present in an audio stream and what
 

00:25:27.460 --> 00:25:30.030 align:start position:0%
present in an audio stream and what
order<00:25:27.730><c> they're</c><00:25:27.880><c> in</c><00:25:28.090><c> and</c><00:25:28.330><c> then</c><00:25:28.720><c> there's</c><00:25:28.900><c> a</c><00:25:29.040><c> you</c>

00:25:30.030 --> 00:25:30.040 align:start position:0%
order they're in and then there's a you
 

00:25:30.040 --> 00:25:32.370 align:start position:0%
order they're in and then there's a you
can<00:25:30.130><c> also</c><00:25:30.280><c> ask</c><00:25:30.580><c> it</c><00:25:30.760><c> about</c><00:25:30.940><c> what</c><00:25:31.930><c> compressed</c>

00:25:32.370 --> 00:25:32.380 align:start position:0%
can also ask it about what compressed
 

00:25:32.380 --> 00:25:37.470 align:start position:0%
can also ask it about what compressed
formats<00:25:32.860><c> are</c><00:25:33.070><c> installed</c><00:25:33.490><c> on</c><00:25:33.640><c> the</c><00:25:33.730><c> system</c><00:25:36.480><c> so</c>

00:25:37.470 --> 00:25:37.480 align:start position:0%
formats are installed on the system so
 

00:25:37.480 --> 00:25:39.600 align:start position:0%
formats are installed on the system so
for<00:25:37.900><c> audio</c><00:25:38.740><c> stream</c><00:25:39.010><c> basic</c><00:25:39.310><c> description</c>

00:25:39.600 --> 00:25:39.610 align:start position:0%
for audio stream basic description
 

00:25:39.610 --> 00:25:41.500 align:start position:0%
for audio stream basic description
operations<00:25:40.180><c> with</c><00:25:40.330><c> audio</c><00:25:40.780><c> format</c><00:25:41.110><c> 80</c>

00:25:41.500 --> 00:25:41.510 align:start position:0%
operations with audio format 80
 

00:25:41.510 --> 00:25:43.660 align:start position:0%
operations with audio format 80
you<00:25:41.870><c> can</c><00:25:42.020><c> get</c><00:25:42.200><c> a</c><00:25:42.230><c> formats</c><00:25:42.710><c> name</c><00:25:42.980><c> you</c><00:25:43.250><c> pass</c><00:25:43.490><c> an</c>

00:25:43.660 --> 00:25:43.670 align:start position:0%
you can get a formats name you pass an
 

00:25:43.670 --> 00:25:45.690 align:start position:0%
you can get a formats name you pass an
audio<00:25:43.910><c> stream</c><00:25:44.180><c> basic</c><00:25:44.720><c> description</c><00:25:45.020><c> to</c><00:25:45.320><c> the</c>

00:25:45.690 --> 00:25:45.700 align:start position:0%
audio stream basic description to the
 

00:25:45.700 --> 00:25:49.930 align:start position:0%
audio stream basic description to the
audio<00:25:46.700><c> format</c><00:25:47.060><c> API</c><00:25:47.510><c> and</c><00:25:47.900><c> it</c><00:25:48.170><c> will</c><00:25:48.760><c> generate</c><00:25:49.760><c> a</c>

00:25:49.930 --> 00:25:49.940 align:start position:0%
audio format API and it will generate a
 

00:25:49.940 --> 00:25:53.830 align:start position:0%
audio format API and it will generate a
name<00:25:50.650><c> either</c><00:25:51.650><c> name</c><00:25:52.490><c> for</c><00:25:52.850><c> a</c><00:25:52.880><c> compressed</c><00:25:53.390><c> format</c>

00:25:53.830 --> 00:25:53.840 align:start position:0%
name either name for a compressed format
 

00:25:53.840 --> 00:25:58.480 align:start position:0%
name either name for a compressed format
or<00:25:54.110><c> if</c><00:25:54.680><c> you</c><00:25:54.860><c> pass</c><00:25:55.070><c> it</c><00:25:55.250><c> a</c><00:25:55.370><c> certain</c><00:25:57.160><c> linear</c><00:25:58.160><c> PCM</c>

00:25:58.480 --> 00:25:58.490 align:start position:0%
or if you pass it a certain linear PCM
 

00:25:58.490 --> 00:26:00.910 align:start position:0%
or if you pass it a certain linear PCM
format<00:25:59.150><c> it</c><00:25:59.300><c> will</c><00:25:59.420><c> tell</c><00:25:59.630><c> you</c><00:25:59.780><c> generate</c><00:26:00.590><c> a</c><00:26:00.620><c> CF</c>

00:26:00.910 --> 00:26:00.920 align:start position:0%
format it will tell you generate a CF
 

00:26:00.920 --> 00:26:05.530 align:start position:0%
format it will tell you generate a CF
string<00:26:01.220><c> and</c><00:26:01.370><c> tell</c><00:26:01.550><c> you</c><00:26:01.670><c> what</c><00:26:01.790><c> that</c><00:26:01.820><c> is</c><00:26:03.040><c> so</c><00:26:04.540><c> you</c>

00:26:05.530 --> 00:26:05.540 align:start position:0%
string and tell you what that is so you
 

00:26:05.540 --> 00:26:08.200 align:start position:0%
string and tell you what that is so you
can<00:26:05.720><c> also</c><00:26:06.350><c> pass</c><00:26:06.920><c> it</c><00:26:07.160><c> up</c><00:26:07.310><c> partially</c><00:26:07.790><c> filled</c><00:26:08.030><c> out</c>

00:26:08.200 --> 00:26:08.210 align:start position:0%
can also pass it up partially filled out
 

00:26:08.210 --> 00:26:11.200 align:start position:0%
can also pass it up partially filled out
audio<00:26:09.140><c> stream</c><00:26:09.350><c> basic</c><00:26:09.680><c> description</c><00:26:10.210><c> that's</c>

00:26:11.200 --> 00:26:11.210 align:start position:0%
audio stream basic description that's
 

00:26:11.210 --> 00:26:15.010 align:start position:0%
audio stream basic description that's
mostly<00:26:11.480><c> useful</c><00:26:11.720><c> for</c><00:26:12.730><c> constant</c><00:26:13.730><c> bit</c><00:26:13.880><c> rate</c><00:26:14.020><c> data</c>

00:26:15.010 --> 00:26:15.020 align:start position:0%
mostly useful for constant bit rate data
 

00:26:15.020 --> 00:26:18.820 align:start position:0%
mostly useful for constant bit rate data
formats<00:26:15.560><c> to</c><00:26:15.830><c> find</c><00:26:16.670><c> out</c><00:26:16.820><c> what</c><00:26:16.970><c> the</c><00:26:17.710><c> bytes</c><00:26:18.710><c> per</c>

00:26:18.820 --> 00:26:18.830 align:start position:0%
formats to find out what the bytes per
 

00:26:18.830 --> 00:26:23.770 align:start position:0%
formats to find out what the bytes per
packet<00:26:19.310><c> is</c><00:26:19.460><c> for</c><00:26:19.790><c> IMA</c><00:26:20.360><c> for</c><00:26:20.660><c> for</c><00:26:21.050><c> example</c><00:26:22.720><c> so</c><00:26:23.720><c> you</c>

00:26:23.770 --> 00:26:23.780 align:start position:0%
packet is for IMA for for example so you
 

00:26:23.780 --> 00:26:27.670 align:start position:0%
packet is for IMA for for example so you
can<00:26:23.960><c> ask</c><00:26:24.110><c> is</c><00:26:24.980><c> a</c><00:26:25.040><c> format</c><00:26:25.580><c> variable</c><00:26:26.570><c> bitrate</c><00:26:26.750><c> is</c>

00:26:27.670 --> 00:26:27.680 align:start position:0%
can ask is a format variable bitrate is
 

00:26:27.680 --> 00:26:32.310 align:start position:0%
can ask is a format variable bitrate is
it<00:26:28.160><c> externally</c><00:26:28.460><c> framed</c><00:26:29.590><c> you</c><00:26:30.590><c> can</c><00:26:30.740><c> ask</c><00:26:30.890><c> what</c>

00:26:32.310 --> 00:26:32.320 align:start position:0%
it externally framed you can ask what
 

00:26:32.320 --> 00:26:34.450 align:start position:0%
it externally framed you can ask what
encoders<00:26:33.320><c> i</c><00:26:33.470><c> have</c><00:26:33.590><c> installed</c><00:26:33.920><c> on</c><00:26:34.220><c> the</c><00:26:34.310><c> system</c>

00:26:34.450 --> 00:26:34.460 align:start position:0%
encoders i have installed on the system
 

00:26:34.460 --> 00:26:36.280 align:start position:0%
encoders i have installed on the system
and<00:26:34.760><c> what</c><00:26:34.910><c> decoders</c><00:26:35.360><c> i</c><00:26:35.480><c> haven't</c><00:26:35.810><c> installed</c><00:26:36.080><c> on</c>

00:26:36.280 --> 00:26:36.290 align:start position:0%
and what decoders i haven't installed on
 

00:26:36.290 --> 00:26:42.310 align:start position:0%
and what decoders i haven't installed on
the<00:26:36.380><c> system</c><00:26:40.300><c> okay</c><00:26:41.300><c> so</c><00:26:41.360><c> this</c><00:26:41.630><c> is</c><00:26:41.810><c> what</c><00:26:42.200><c> the</c>

00:26:42.310 --> 00:26:42.320 align:start position:0%
the system okay so this is what the
 

00:26:42.320 --> 00:26:44.230 align:start position:0%
the system okay so this is what the
audio<00:26:42.620><c> format</c><00:26:43.010><c> ati</c><00:26:43.280><c> looks</c><00:26:43.610><c> like</c><00:26:43.820><c> there's</c><00:26:44.180><c> a</c>

00:26:44.230 --> 00:26:44.240 align:start position:0%
audio format ati looks like there's a
 

00:26:44.240 --> 00:26:47.620 align:start position:0%
audio format ati looks like there's a
two<00:26:44.750><c> calls</c><00:26:45.080><c> one</c><00:26:45.470><c> is</c><00:26:45.940><c> the</c><00:26:46.940><c> audio</c><00:26:47.180><c> format</c><00:26:47.480><c> get</c>

00:26:47.620 --> 00:26:47.630 align:start position:0%
two calls one is the audio format get
 

00:26:47.630 --> 00:26:50.170 align:start position:0%
two calls one is the audio format get
property<00:26:47.990><c> info</c><00:26:48.290><c> you</c><00:26:49.160><c> use</c><00:26:49.340><c> that</c><00:26:49.580><c> to</c><00:26:49.760><c> find</c><00:26:49.940><c> out</c>

00:26:50.170 --> 00:26:50.180 align:start position:0%
property info you use that to find out
 

00:26:50.180 --> 00:26:54.460 align:start position:0%
property info you use that to find out
the<00:26:50.660><c> size</c><00:26:51.440><c> of</c><00:26:51.710><c> a</c><00:26:51.770><c> property</c><00:26:52.840><c> you</c><00:26:53.840><c> pass</c><00:26:54.080><c> in</c><00:26:54.350><c> a</c>

00:26:54.460 --> 00:26:54.470 align:start position:0%
the size of a property you pass in a
 

00:26:54.470 --> 00:26:56.530 align:start position:0%
the size of a property you pass in a
specifier<00:26:55.100><c> which</c><00:26:55.430><c> is</c><00:26:55.550><c> some</c><00:26:55.730><c> argument</c><00:26:56.210><c> to</c><00:26:56.390><c> the</c>

00:26:56.530 --> 00:26:56.540 align:start position:0%
specifier which is some argument to the
 

00:26:56.540 --> 00:26:58.870 align:start position:0%
specifier which is some argument to the
property<00:26:57.530><c> this</c><00:26:57.710><c> is</c><00:26:57.920><c> well</c><00:26:58.250><c> there's</c><00:26:58.430><c> a</c><00:26:58.490><c> property</c>

00:26:58.870 --> 00:26:58.880 align:start position:0%
property this is well there's a property
 

00:26:58.880 --> 00:27:01.330 align:start position:0%
property this is well there's a property
ID<00:26:59.060><c> which</c><00:26:59.480><c> tells</c><00:26:59.780><c> the</c><00:27:00.080><c> audio</c><00:27:00.800><c> format</c><00:27:01.100><c> a</c><00:27:01.130><c> key</c>

00:27:01.330 --> 00:27:01.340 align:start position:0%
ID which tells the audio format a key
 

00:27:01.340 --> 00:27:03.340 align:start position:0%
ID which tells the audio format a key
what<00:27:01.580><c> what</c><00:27:02.000><c> API</c><00:27:02.510><c> what</c><00:27:02.780><c> property</c><00:27:03.200><c> you're</c>

00:27:03.340 --> 00:27:03.350 align:start position:0%
what what API what property you're
 

00:27:03.350 --> 00:27:04.720 align:start position:0%
what what API what property you're
asking<00:27:03.740><c> about</c><00:27:03.830><c> and</c><00:27:04.160><c> they're</c><00:27:04.430><c> so</c><00:27:04.610><c> the</c>

00:27:04.720 --> 00:27:04.730 align:start position:0%
asking about and they're so the
 

00:27:04.730 --> 00:27:06.670 align:start position:0%
asking about and they're so the
specifier<00:27:05.180><c> which</c><00:27:05.420><c> gives</c><00:27:05.870><c> an</c><00:27:05.990><c> argument</c><00:27:06.470><c> and</c>

00:27:06.670 --> 00:27:06.680 align:start position:0%
specifier which gives an argument and
 

00:27:06.680 --> 00:27:09.010 align:start position:0%
specifier which gives an argument and
then<00:27:06.770><c> there's</c><00:27:06.980><c> a</c><00:27:07.040><c> it</c><00:27:08.030><c> returns</c><00:27:08.360><c> you</c><00:27:08.600><c> the</c><00:27:08.750><c> size</c>

00:27:09.010 --> 00:27:09.020 align:start position:0%
then there's a it returns you the size
 

00:27:09.020 --> 00:27:10.750 align:start position:0%
then there's a it returns you the size
of<00:27:09.350><c> the</c><00:27:09.470><c> property</c><00:27:09.890><c> you're</c><00:27:10.040><c> asking</c><00:27:10.340><c> for</c><00:27:10.550><c> and</c>

00:27:10.750 --> 00:27:10.760 align:start position:0%
of the property you're asking for and
 

00:27:10.760 --> 00:27:12.810 align:start position:0%
of the property you're asking for and
then<00:27:10.850><c> there's</c><00:27:11.030><c> the</c><00:27:11.240><c> get</c><00:27:11.750><c> property</c><00:27:12.140><c> call</c><00:27:12.410><c> which</c>

00:27:12.810 --> 00:27:12.820 align:start position:0%
then there's the get property call which
 

00:27:12.820 --> 00:27:15.670 align:start position:0%
then there's the get property call which
you<00:27:13.820><c> use</c><00:27:14.060><c> to</c><00:27:14.090><c> actually</c><00:27:14.420><c> get</c><00:27:14.870><c> the</c><00:27:15.080><c> value</c><00:27:15.470><c> of</c><00:27:15.590><c> the</c>

00:27:15.670 --> 00:27:15.680 align:start position:0%
you use to actually get the value of the
 

00:27:15.680 --> 00:27:21.930 align:start position:0%
you use to actually get the value of the
property<00:27:18.520><c> alright</c><00:27:19.520><c> so</c><00:27:19.790><c> here's</c><00:27:20.360><c> an</c><00:27:20.510><c> example</c><00:27:20.570><c> of</c>

00:27:21.930 --> 00:27:21.940 align:start position:0%
property alright so here's an example of
 

00:27:21.940 --> 00:27:28.300 align:start position:0%
property alright so here's an example of
using<00:27:22.940><c> it</c><00:27:24.490><c> you</c><00:27:26.020><c> hear</c><00:27:27.020><c> i'm</c><00:27:27.170><c> finding</c><00:27:27.950><c> out</c><00:27:28.070><c> what</c>

00:27:28.300 --> 00:27:28.310 align:start position:0%
using it you hear i'm finding out what
 

00:27:28.310 --> 00:27:30.100 align:start position:0%
using it you hear i'm finding out what
encoders<00:27:28.820><c> are</c><00:27:28.940><c> installed</c><00:27:29.330><c> in</c><00:27:29.420><c> the</c><00:27:29.540><c> system</c><00:27:29.930><c> i</c>

00:27:30.100 --> 00:27:30.110 align:start position:0%
encoders are installed in the system i
 

00:27:30.110 --> 00:27:34.210 align:start position:0%
encoders are installed in the system i
make<00:27:30.410><c> a</c><00:27:31.300><c> get</c><00:27:32.300><c> property</c><00:27:32.660><c> info</c><00:27:33.050><c> call</c><00:27:33.740><c> to</c><00:27:33.950><c> find</c>

00:27:34.210 --> 00:27:34.220 align:start position:0%
make a get property info call to find
 

00:27:34.220 --> 00:27:38.040 align:start position:0%
make a get property info call to find
out<00:27:34.340><c> the</c><00:27:34.880><c> size</c><00:27:35.540><c> of</c><00:27:35.750><c> the</c><00:27:35.840><c> array</c><00:27:36.110><c> of</c><00:27:36.460><c> encoders</c>

00:27:38.040 --> 00:27:38.050 align:start position:0%
out the size of the array of encoders
 

00:27:38.050 --> 00:27:40.420 align:start position:0%
out the size of the array of encoders
it's<00:27:39.050><c> going</c><00:27:39.230><c> to</c><00:27:39.290><c> return</c><00:27:39.410><c> me</c><00:27:39.680><c> a</c><00:27:39.710><c> list</c><00:27:39.950><c> of</c><00:27:40.100><c> OS</c>

00:27:40.420 --> 00:27:40.430 align:start position:0%
it's going to return me a list of OS
 

00:27:40.430 --> 00:27:44.500 align:start position:0%
it's going to return me a list of OS
types<00:27:40.700><c> for</c><00:27:41.660><c> these</c><00:27:42.400><c> encode</c><00:27:43.400><c> formats</c><00:27:43.940><c> and</c><00:27:44.210><c> then</c>

00:27:44.500 --> 00:27:44.510 align:start position:0%
types for these encode formats and then
 

00:27:44.510 --> 00:27:46.930 align:start position:0%
types for these encode formats and then
i<00:27:44.660><c> call</c><00:27:44.960><c> audio</c><00:27:45.260><c> format</c><00:27:45.920><c> get</c><00:27:46.100><c> property</c><00:27:46.490><c> to</c><00:27:46.820><c> get</c>

00:27:46.930 --> 00:27:46.940 align:start position:0%
i call audio format get property to get
 

00:27:46.940 --> 00:27:48.520 align:start position:0%
i call audio format get property to get
the<00:27:47.120><c> list</c><00:27:47.330><c> do</c><00:27:47.630><c> you</c><00:27:47.690><c> actually</c><00:27:47.840><c> get</c><00:27:48.140><c> the</c><00:27:48.200><c> array</c>

00:27:48.520 --> 00:27:48.530 align:start position:0%
the list do you actually get the array
 

00:27:48.530 --> 00:27:50.860 align:start position:0%
the list do you actually get the array
of<00:27:48.560><c> format</c><00:27:49.130><c> ids</c><00:27:49.430><c> and</c><00:27:49.640><c> then</c><00:27:50.270><c> i</c><00:27:50.360><c> enter</c><00:27:50.660><c> in</c><00:27:50.780><c> the</c>

00:27:50.860 --> 00:27:50.870 align:start position:0%
of format ids and then i enter in the
 

00:27:50.870 --> 00:27:54.159 align:start position:0%
of format ids and then i enter in the
loop<00:27:51.080><c> here</c><00:27:51.380><c> where</c><00:27:51.650><c> I</c><00:27:51.950><c> call</c><00:27:52.940><c> the</c><00:27:53.120><c> format</c><00:27:53.720><c> API</c>

00:27:54.159 --> 00:27:54.169 align:start position:0%
loop here where I call the format API
 

00:27:54.169 --> 00:27:57.879 align:start position:0%
loop here where I call the format API
I to<00:27:54.399><c> to</c><00:27:55.399><c> give</c><00:27:55.549><c> me</c><00:27:55.700><c> a</c><00:27:55.730><c> name</c><00:27:55.999><c> for</c><00:27:56.299><c> that</c><00:27:56.330><c> format</c><00:27:56.889><c> I</c>

00:27:57.879 --> 00:27:57.889 align:start position:0%
I to to give me a name for that format I
 

00:27:57.889 --> 00:27:59.830 align:start position:0%
I to to give me a name for that format I
created<00:27:58.789><c> a</c><00:27:58.850><c> small</c><00:27:58.970><c> audio</c><00:27:59.359><c> stream</c><00:27:59.570><c> basic</c>

00:27:59.830 --> 00:27:59.840 align:start position:0%
created a small audio stream basic
 

00:27:59.840 --> 00:28:01.180 align:start position:0%
created a small audio stream basic
description<00:28:00.109><c> and</c><00:28:00.379><c> get</c><00:28:00.619><c> a</c><00:28:00.649><c> name</c><00:28:00.859><c> for</c><00:28:01.100><c> the</c>

00:28:01.180 --> 00:28:01.190 align:start position:0%
description and get a name for the
 

00:28:01.190 --> 00:28:03.430 align:start position:0%
description and get a name for the
format<00:28:01.549><c> and</c><00:28:01.789><c> print</c><00:28:01.940><c> them</c><00:28:02.149><c> out</c><00:28:02.210><c> and</c><00:28:02.509><c> then</c><00:28:02.989><c> on</c><00:28:03.230><c> my</c>

00:28:03.430 --> 00:28:03.440 align:start position:0%
format and print them out and then on my
 

00:28:03.440 --> 00:28:07.200 align:start position:0%
format and print them out and then on my
system<00:28:03.799><c> this</c><00:28:03.950><c> is</c><00:28:04.419><c> why</c><00:28:05.419><c> I</c><00:28:05.450><c> got</c><00:28:06.049><c> turned</c><00:28:06.289><c> it</c><00:28:06.350><c> out</c>

00:28:07.200 --> 00:28:07.210 align:start position:0%
system this is why I got turned it out
 

00:28:07.210 --> 00:28:11.529 align:start position:0%
system this is why I got turned it out
so<00:28:08.830><c> okay</c><00:28:09.830><c> so</c><00:28:09.889><c> a</c><00:28:10.159><c> new</c><00:28:10.549><c> structure</c><00:28:10.879><c> and</c><00:28:11.149><c> Panther</c>

00:28:11.529 --> 00:28:11.539 align:start position:0%
so okay so a new structure and Panther
 

00:28:11.539 --> 00:28:16.799 align:start position:0%
so okay so a new structure and Panther
is<00:28:11.720><c> the</c><00:28:11.899><c> audio</c><00:28:12.230><c> channel</c><00:28:12.590><c> layout</c><00:28:14.470><c> this</c><00:28:15.470><c> uh</c>

00:28:16.799 --> 00:28:16.809 align:start position:0%
is the audio channel layout this uh
 

00:28:16.809 --> 00:28:18.970 align:start position:0%
is the audio channel layout this uh
describes<00:28:17.809><c> the</c><00:28:18.109><c> channel</c><00:28:18.559><c> ordering</c><00:28:18.830><c> of</c><00:28:18.919><c> a</c>

00:28:18.970 --> 00:28:18.980 align:start position:0%
describes the channel ordering of a
 

00:28:18.980 --> 00:28:21.340 align:start position:0%
describes the channel ordering of a
stream<00:28:19.249><c> now</c><00:28:20.059><c> audio</c><00:28:20.779><c> stream</c><00:28:21.019><c> basic</c>

00:28:21.340 --> 00:28:21.350 align:start position:0%
stream now audio stream basic
 

00:28:21.350 --> 00:28:22.989 align:start position:0%
stream now audio stream basic
description<00:28:21.739><c> tells</c><00:28:22.429><c> you</c><00:28:22.549><c> the</c><00:28:22.669><c> number</c><00:28:22.909><c> of</c>

00:28:22.989 --> 00:28:22.999 align:start position:0%
description tells you the number of
 

00:28:22.999 --> 00:28:24.220 align:start position:0%
description tells you the number of
channels<00:28:23.239><c> in</c><00:28:23.450><c> the</c><00:28:23.480><c> stream</c><00:28:23.779><c> but</c><00:28:23.960><c> it</c><00:28:24.019><c> doesn't</c>

00:28:24.220 --> 00:28:24.230 align:start position:0%
channels in the stream but it doesn't
 

00:28:24.230 --> 00:28:27.190 align:start position:0%
channels in the stream but it doesn't
really<00:28:24.379><c> tell</c><00:28:24.559><c> you</c><00:28:24.679><c> what</c><00:28:24.830><c> they</c><00:28:24.950><c> are</c><00:28:24.980><c> so</c><00:28:25.960><c> if</c><00:28:26.960><c> you</c>

00:28:27.190 --> 00:28:27.200 align:start position:0%
really tell you what they are so if you
 

00:28:27.200 --> 00:28:29.739 align:start position:0%
really tell you what they are so if you
have<00:28:27.440><c> a</c><00:28:27.580><c> one</c><00:28:28.580><c> channel</c><00:28:28.999><c> or</c><00:28:29.119><c> two</c><00:28:29.299><c> channel</c><00:28:29.659><c> you</c>

00:28:29.739 --> 00:28:29.749 align:start position:0%
have a one channel or two channel you
 

00:28:29.749 --> 00:28:31.029 align:start position:0%
have a one channel or two channel you
can<00:28:29.840><c> pretty</c><00:28:30.019><c> much</c><00:28:30.109><c> guess</c><00:28:30.350><c> that's</c><00:28:30.559><c> mono</c><00:28:30.799><c> or</c>

00:28:31.029 --> 00:28:31.039 align:start position:0%
can pretty much guess that's mono or
 

00:28:31.039 --> 00:28:35.229 align:start position:0%
can pretty much guess that's mono or
stereo<00:28:31.220><c> but</c><00:28:31.549><c> if</c><00:28:31.639><c> you</c><00:28:31.730><c> have</c><00:28:32.350><c> five</c><00:28:33.350><c> channels</c><00:28:34.239><c> it</c>

00:28:35.229 --> 00:28:35.239 align:start position:0%
stereo but if you have five channels it
 

00:28:35.239 --> 00:28:39.489 align:start position:0%
stereo but if you have five channels it
could<00:28:35.570><c> be</c><00:28:35.749><c> one</c><00:28:36.379><c> of</c><00:28:36.499><c> several</c><00:28:36.710><c> orderings</c><00:28:37.279><c> of</c><00:28:38.499><c> 50</c>

00:28:39.489 --> 00:28:39.499 align:start position:0%
could be one of several orderings of 50
 

00:28:39.499 --> 00:28:41.710 align:start position:0%
could be one of several orderings of 50
if<00:28:39.710><c> you</c><00:28:39.830><c> have</c><00:28:39.919><c> six</c><00:28:40.190><c> channels</c><00:28:40.580><c> it</c><00:28:40.759><c> could</c><00:28:40.940><c> be</c><00:28:41.090><c> 60</c>

00:28:41.710 --> 00:28:41.720 align:start position:0%
if you have six channels it could be 60
 

00:28:41.720 --> 00:28:43.299 align:start position:0%
if you have six channels it could be 60
or<00:28:41.899><c> 50</c><00:28:41.989><c> five</c><00:28:42.320><c> dot</c><00:28:42.529><c> one</c><00:28:42.769><c> in</c><00:28:42.919><c> several</c><00:28:43.220><c> different</c>

00:28:43.299 --> 00:28:43.309 align:start position:0%
or 50 five dot one in several different
 

00:28:43.309 --> 00:28:45.940 align:start position:0%
or 50 five dot one in several different
orderings<00:28:43.850><c> so</c><00:28:44.109><c> you</c><00:28:45.109><c> need</c><00:28:45.259><c> a</c><00:28:45.289><c> way</c><00:28:45.470><c> to</c><00:28:45.499><c> find</c><00:28:45.830><c> out</c>

00:28:45.940 --> 00:28:45.950 align:start position:0%
orderings so you need a way to find out
 

00:28:45.950 --> 00:28:49.830 align:start position:0%
orderings so you need a way to find out
what<00:28:46.940><c> that</c><00:28:47.059><c> is</c><00:28:48.129><c> the</c><00:28:49.129><c> audio</c><00:28:49.309><c> channel</c><00:28:49.669><c> layout</c>

00:28:49.830 --> 00:28:49.840 align:start position:0%
what that is the audio channel layout
 

00:28:49.840 --> 00:28:55.090 align:start position:0%
what that is the audio channel layout
has<00:28:52.029><c> several</c><00:28:53.029><c> ways</c><00:28:53.239><c> of</c><00:28:53.480><c> specifying</c><00:28:54.100><c> ordering</c>

00:28:55.090 --> 00:28:55.100 align:start position:0%
has several ways of specifying ordering
 

00:28:55.100 --> 00:28:57.609 align:start position:0%
has several ways of specifying ordering
there's<00:28:55.519><c> an</c><00:28:55.669><c> integer</c><00:28:55.909><c> tag</c><00:28:56.239><c> for</c><00:28:56.629><c> a</c><00:28:56.840><c> bunch</c><00:28:57.499><c> of</c>

00:28:57.609 --> 00:28:57.619 align:start position:0%
there's an integer tag for a bunch of
 

00:28:57.619 --> 00:29:00.759 align:start position:0%
there's an integer tag for a bunch of
predefined<00:28:57.950><c> layouts</c><00:28:58.639><c> in</c><00:28:59.119><c> a</c><00:29:00.080><c> lot</c><00:29:00.289><c> of</c><00:29:00.320><c> cases</c><00:29:00.590><c> you</c>

00:29:00.759 --> 00:29:00.769 align:start position:0%
predefined layouts in a lot of cases you
 

00:29:00.769 --> 00:29:02.430 align:start position:0%
predefined layouts in a lot of cases you
can<00:29:00.830><c> just</c><00:29:01.039><c> pass</c><00:29:01.309><c> around</c><00:29:01.519><c> these</c><00:29:01.730><c> integer</c><00:29:02.059><c> tags</c>

00:29:02.430 --> 00:29:02.440 align:start position:0%
can just pass around these integer tags
 

00:29:02.440 --> 00:29:05.830 align:start position:0%
can just pass around these integer tags
to<00:29:03.440><c> tell</c><00:29:03.649><c> you</c><00:29:03.830><c> what</c><00:29:04.609><c> channel</c><00:29:05.450><c> ordering</c><00:29:05.749><c> you</c>

00:29:05.830 --> 00:29:05.840 align:start position:0%
to tell you what channel ordering you
 

00:29:05.840 --> 00:29:09.129 align:start position:0%
to tell you what channel ordering you
have<00:29:06.080><c> there's</c><00:29:06.980><c> a</c><00:29:07.100><c> bitmap</c><00:29:07.669><c> for</c><00:29:08.149><c> USB</c><00:29:08.840><c> wave</c>

00:29:09.129 --> 00:29:09.139 align:start position:0%
have there's a bitmap for USB wave
 

00:29:09.139 --> 00:29:12.249 align:start position:0%
have there's a bitmap for USB wave
layout<00:29:09.679><c> style</c><00:29:10.609><c> layouts</c><00:29:10.970><c> on</c><00:29:11.239><c> wave</c><00:29:11.539><c> files</c><00:29:11.869><c> or</c>

00:29:12.249 --> 00:29:12.259 align:start position:0%
layout style layouts on wave files or
 

00:29:12.259 --> 00:29:14.680 align:start position:0%
layout style layouts on wave files or
USB<00:29:12.649><c> there's</c><00:29:13.129><c> a</c><00:29:13.190><c> bitmap</c><00:29:14.090><c> to</c><00:29:14.119><c> tell</c><00:29:14.389><c> you</c><00:29:14.509><c> which</c>

00:29:14.680 --> 00:29:14.690 align:start position:0%
USB there's a bitmap to tell you which
 

00:29:14.690 --> 00:29:16.299 align:start position:0%
USB there's a bitmap to tell you which
channels<00:29:15.139><c> are</c><00:29:15.289><c> present</c><00:29:15.619><c> in</c><00:29:15.710><c> this</c><00:29:15.859><c> stream</c><00:29:16.129><c> and</c>

00:29:16.299 --> 00:29:16.309 align:start position:0%
channels are present in this stream and
 

00:29:16.309 --> 00:29:18.129 align:start position:0%
channels are present in this stream and
then<00:29:16.399><c> they</c><00:29:16.489><c> have</c><00:29:16.609><c> to</c><00:29:16.730><c> be</c><00:29:16.960><c> present</c><00:29:17.960><c> in</c><00:29:18.049><c> a</c>

00:29:18.129 --> 00:29:18.139 align:start position:0%
then they have to be present in a
 

00:29:18.139 --> 00:29:20.979 align:start position:0%
then they have to be present in a
certain<00:29:18.320><c> order</c><00:29:18.559><c> and</c><00:29:19.149><c> then</c><00:29:20.149><c> there's</c><00:29:20.330><c> a</c><00:29:20.389><c> an</c>

00:29:20.979 --> 00:29:20.989 align:start position:0%
certain order and then there's a an
 

00:29:20.989 --> 00:29:22.960 align:start position:0%
certain order and then there's a an
array<00:29:21.769><c> of</c><00:29:21.799><c> channel</c><00:29:22.190><c> descriptions</c><00:29:22.639><c> which</c><00:29:22.850><c> you</c>

00:29:22.960 --> 00:29:22.970 align:start position:0%
array of channel descriptions which you
 

00:29:22.970 --> 00:29:26.979 align:start position:0%
array of channel descriptions which you
can<00:29:23.119><c> use</c><00:29:23.149><c> to</c><00:29:23.299><c> describe</c><00:29:23.629><c> arbitrary</c><00:29:24.320><c> layouts</c><00:29:25.989><c> so</c>

00:29:26.979 --> 00:29:26.989 align:start position:0%
can use to describe arbitrary layouts so
 

00:29:26.989 --> 00:29:29.729 align:start position:0%
can use to describe arbitrary layouts so
the<00:29:27.169><c> structure</c><00:29:27.470><c> looks</c><00:29:27.769><c> like</c><00:29:27.950><c> this</c><00:29:28.190><c> there's</c><00:29:28.669><c> a</c>

00:29:29.729 --> 00:29:29.739 align:start position:0%
the structure looks like this there's a
 

00:29:29.739 --> 00:29:32.289 align:start position:0%
the structure looks like this there's a
channel<00:29:30.739><c> layout</c><00:29:30.950><c> tag</c><00:29:31.429><c> which</c><00:29:31.820><c> is</c><00:29:31.970><c> one</c><00:29:32.119><c> of</c><00:29:32.149><c> these</c>

00:29:32.289 --> 00:29:32.299 align:start position:0%
channel layout tag which is one of these
 

00:29:32.299 --> 00:29:36.430 align:start position:0%
channel layout tag which is one of these
predefined<00:29:32.539><c> layouts</c><00:29:33.230><c> there's</c><00:29:34.100><c> a</c><00:29:34.159><c> bitmap</c><00:29:35.440><c> then</c>

00:29:36.430 --> 00:29:36.440 align:start position:0%
predefined layouts there's a bitmap then
 

00:29:36.440 --> 00:29:42.039 align:start position:0%
predefined layouts there's a bitmap then
there's<00:29:36.649><c> a</c><00:29:36.710><c> ray</c><00:29:36.919><c> of</c><00:29:36.950><c> channel</c><00:29:37.399><c> descriptions</c><00:29:41.049><c> so</c>

00:29:42.039 --> 00:29:42.049 align:start position:0%
there's a ray of channel descriptions so
 

00:29:42.049 --> 00:29:47.049 align:start position:0%
there's a ray of channel descriptions so
lots<00:29:42.350><c> of</c><00:29:42.529><c> formats</c><00:29:42.889><c> are</c><00:29:43.039><c> predefined</c><00:29:44.470><c> we</c><00:29:46.059><c> define</c>

00:29:47.049 --> 00:29:47.059 align:start position:0%
lots of formats are predefined we define
 

00:29:47.059 --> 00:29:48.789 align:start position:0%
lots of formats are predefined we define
just<00:29:47.690><c> about</c><00:29:47.869><c> everything</c><00:29:48.109><c> we</c><00:29:48.259><c> could</c><00:29:48.470><c> think</c><00:29:48.529><c> of</c>

00:29:48.789 --> 00:29:48.799 align:start position:0%
just about everything we could think of
 

00:29:48.799 --> 00:29:55.119 align:start position:0%
just about everything we could think of
or<00:29:49.129><c> find</c><00:29:49.549><c> references</c><00:29:50.269><c> to</c><00:29:51.159><c> so</c><00:29:52.960><c> and</c><00:29:54.129><c> then</c>

00:29:55.119 --> 00:29:55.129 align:start position:0%
or find references to so and then
 

00:29:55.129 --> 00:29:56.889 align:start position:0%
or find references to so and then
there's<00:29:55.309><c> a</c><00:29:55.369><c> one</c><00:29:56.179><c> thing</c><00:29:56.389><c> you</c><00:29:56.480><c> can</c><00:29:56.600><c> do</c><00:29:56.720><c> with</c>

00:29:56.889 --> 00:29:56.899 align:start position:0%
there's a one thing you can do with
 

00:29:56.899 --> 00:29:58.690 align:start position:0%
there's a one thing you can do with
these<00:29:57.019><c> integer</c><00:29:57.379><c> tags</c><00:29:57.619><c> is</c><00:29:57.830><c> mask</c><00:29:58.100><c> off</c><00:29:58.340><c> the</c><00:29:58.549><c> low</c>

00:29:58.690 --> 00:29:58.700 align:start position:0%
these integer tags is mask off the low
 

00:29:58.700 --> 00:30:00.190 align:start position:0%
these integer tags is mask off the low
16<00:29:59.119><c> bits</c><00:29:59.359><c> and</c><00:29:59.509><c> that</c><00:29:59.600><c> will</c><00:29:59.720><c> tell</c><00:29:59.869><c> you</c><00:30:00.019><c> the</c>

00:30:00.190 --> 00:30:00.200 align:start position:0%
16 bits and that will tell you the
 

00:30:00.200 --> 00:30:01.990 align:start position:0%
16 bits and that will tell you the
number<00:30:00.590><c> of</c><00:30:00.619><c> channels</c><00:30:00.980><c> in</c><00:30:01.340><c> the</c>

00:30:01.990 --> 00:30:02.000 align:start position:0%
number of channels in the
 

00:30:02.000 --> 00:30:06.700 align:start position:0%
number of channels in the
format<00:30:02.390><c> and</c><00:30:02.930><c> then</c><00:30:03.050><c> the</c><00:30:03.200><c> the</c><00:30:05.170><c> the</c><00:30:06.170><c> whole</c><00:30:06.350><c> tag</c>

00:30:06.700 --> 00:30:06.710 align:start position:0%
format and then the the the whole tag
 

00:30:06.710 --> 00:30:08.680 align:start position:0%
format and then the the the whole tag
will<00:30:06.920><c> tell</c><00:30:07.130><c> it</c><00:30:07.250><c> will</c><00:30:07.460><c> be</c><00:30:07.910><c> more</c><00:30:08.120><c> specific</c><00:30:08.300><c> and</c>

00:30:08.680 --> 00:30:08.690 align:start position:0%
will tell it will be more specific and
 

00:30:08.690 --> 00:30:10.710 align:start position:0%
will tell it will be more specific and
tell<00:30:08.840><c> you</c><00:30:08.990><c> what</c><00:30:09.260><c> kind</c><00:30:09.440><c> of</c><00:30:09.530><c> ordering</c><00:30:09.830><c> there</c><00:30:10.070><c> is</c>

00:30:10.710 --> 00:30:10.720 align:start position:0%
tell you what kind of ordering there is
 

00:30:10.720 --> 00:30:13.480 align:start position:0%
tell you what kind of ordering there is
there's<00:30:11.720><c> two</c><00:30:12.020><c> special</c><00:30:12.500><c> tags</c><00:30:12.740><c> one</c><00:30:13.070><c> is</c><00:30:13.190><c> used</c>

00:30:13.480 --> 00:30:13.490 align:start position:0%
there's two special tags one is used
 

00:30:13.490 --> 00:30:15.930 align:start position:0%
there's two special tags one is used
channel<00:30:14.000><c> descriptions</c><00:30:14.510><c> which</c><00:30:14.840><c> means</c><00:30:15.440><c> that</c>

00:30:15.930 --> 00:30:15.940 align:start position:0%
channel descriptions which means that
 

00:30:15.940 --> 00:30:18.790 align:start position:0%
channel descriptions which means that
you<00:30:16.940><c> can't</c><00:30:17.180><c> know</c><00:30:17.420><c> anything</c><00:30:17.630><c> from</c><00:30:18.470><c> looking</c><00:30:18.740><c> at</c>

00:30:18.790 --> 00:30:18.800 align:start position:0%
you can't know anything from looking at
 

00:30:18.800 --> 00:30:20.110 align:start position:0%
you can't know anything from looking at
the<00:30:18.920><c> tag</c><00:30:19.100><c> you</c><00:30:19.280><c> have</c><00:30:19.340><c> to</c><00:30:19.550><c> look</c><00:30:19.670><c> at</c><00:30:19.760><c> the</c><00:30:19.820><c> array</c><00:30:20.090><c> of</c>

00:30:20.110 --> 00:30:20.120 align:start position:0%
the tag you have to look at the array of
 

00:30:20.120 --> 00:30:21.730 align:start position:0%
the tag you have to look at the array of
channel<00:30:20.510><c> descriptions</c><00:30:20.930><c> to</c><00:30:21.110><c> find</c><00:30:21.320><c> out</c><00:30:21.470><c> what</c>

00:30:21.730 --> 00:30:21.740 align:start position:0%
channel descriptions to find out what
 

00:30:21.740 --> 00:30:24.460 align:start position:0%
channel descriptions to find out what
channels<00:30:22.520><c> are</c><00:30:22.640><c> present</c><00:30:23.170><c> and</c><00:30:24.170><c> then</c><00:30:24.260><c> there's</c>

00:30:24.460 --> 00:30:24.470 align:start position:0%
channels are present and then there's
 

00:30:24.470 --> 00:30:25.780 align:start position:0%
channels are present and then there's
used<00:30:24.680><c> channel</c><00:30:25.010><c> bitmaps</c><00:30:25.370><c> or</c><00:30:25.580><c> if</c><00:30:25.640><c> you're</c>

00:30:25.780 --> 00:30:25.790 align:start position:0%
used channel bitmaps or if you're
 

00:30:25.790 --> 00:30:30.640 align:start position:0%
used channel bitmaps or if you're
dealing<00:30:26.090><c> with</c><00:30:26.270><c> a</c><00:30:26.360><c> USB</c><00:30:26.750><c> wave</c><00:30:27.170><c> style</c><00:30:29.650><c> channel</c>

00:30:30.640 --> 00:30:30.650 align:start position:0%
dealing with a USB wave style channel
 

00:30:30.650 --> 00:30:33.490 align:start position:0%
dealing with a USB wave style channel
layout<00:30:30.890><c> so</c><00:30:31.850><c> you</c><00:30:32.180><c> can</c><00:30:32.330><c> see</c><00:30:32.510><c> here</c><00:30:32.810><c> that</c><00:30:32.840><c> there's</c>

00:30:33.490 --> 00:30:33.500 align:start position:0%
layout so you can see here that there's
 

00:30:33.500 --> 00:30:37.630 align:start position:0%
layout so you can see here that there's
a<00:30:34.270><c> four</c><00:30:35.270><c> different</c><00:30:35.660><c> kinds</c><00:30:35.810><c> of</c><00:30:36.250><c> layouts</c><00:30:37.250><c> for</c><00:30:37.460><c> it</c>

00:30:37.630 --> 00:30:37.640 align:start position:0%
a four different kinds of layouts for it
 

00:30:37.640 --> 00:30:40.420 align:start position:0%
a four different kinds of layouts for it
for<00:30:37.910><c> five</c><00:30:38.120><c> dot</c><00:30:38.360><c> one</c><00:30:38.630><c> this</c><00:30:39.500><c> sort</c><00:30:40.340><c> of</c>

00:30:40.420 --> 00:30:40.430 align:start position:0%
for five dot one this sort of
 

00:30:40.430 --> 00:30:41.770 align:start position:0%
for five dot one this sort of
illustrates<00:30:41.090><c> the</c><00:30:41.180><c> kind</c><00:30:41.360><c> of</c><00:30:41.420><c> problem</c><00:30:41.750><c> that</c>

00:30:41.770 --> 00:30:41.780 align:start position:0%
illustrates the kind of problem that
 

00:30:41.780 --> 00:30:48.820 align:start position:0%
illustrates the kind of problem that
this<00:30:42.080><c> is</c><00:30:42.230><c> trying</c><00:30:43.160><c> to</c><00:30:43.250><c> solve</c><00:30:45.340><c> various</c><00:30:47.830><c> strains</c>

00:30:48.820 --> 00:30:48.830 align:start position:0%
this is trying to solve various strains
 

00:30:48.830 --> 00:30:50.860 align:start position:0%
this is trying to solve various strains
will<00:30:49.070><c> be</c><00:30:49.430><c> in</c><00:30:49.520><c> different</c><00:30:50.360><c> ones</c><00:30:50.660><c> of</c><00:30:50.750><c> these</c>

00:30:50.860 --> 00:30:50.870 align:start position:0%
will be in different ones of these
 

00:30:50.870 --> 00:30:51.880 align:start position:0%
will be in different ones of these
formats<00:30:51.260><c> you</c><00:30:51.410><c> have</c><00:30:51.500><c> to</c><00:30:51.590><c> be</c><00:30:51.680><c> able</c><00:30:51.740><c> to</c>

00:30:51.880 --> 00:30:51.890 align:start position:0%
formats you have to be able to
 

00:30:51.890 --> 00:30:56.500 align:start position:0%
formats you have to be able to
differentiate<00:30:52.250><c> them</c><00:30:54.940><c> okay</c><00:30:55.940><c> the</c><00:30:56.090><c> channel</c>

00:30:56.500 --> 00:30:56.510 align:start position:0%
differentiate them okay the channel
 

00:30:56.510 --> 00:30:58.480 align:start position:0%
differentiate them okay the channel
description<00:30:56.780><c> struck</c><00:30:57.380><c> for</c><00:30:58.190><c> the</c><00:30:58.280><c> array</c><00:30:58.460><c> of</c>

00:30:58.480 --> 00:30:58.490 align:start position:0%
description struck for the array of
 

00:30:58.490 --> 00:31:00.490 align:start position:0%
description struck for the array of
channel<00:30:58.820><c> description</c><00:30:59.000><c> to</c><00:30:59.420><c> the</c><00:30:59.540><c> channel</c><00:31:00.200><c> label</c>

00:31:00.490 --> 00:31:00.500 align:start position:0%
channel description to the channel label
 

00:31:00.500 --> 00:31:01.990 align:start position:0%
channel description to the channel label
that<00:31:00.650><c> tells</c><00:31:00.890><c> you</c><00:31:01.070><c> whether</c><00:31:01.250><c> it's</c><00:31:01.370><c> left</c><00:31:01.730><c> right</c>

00:31:01.990 --> 00:31:02.000 align:start position:0%
that tells you whether it's left right
 

00:31:02.000 --> 00:31:05.800 align:start position:0%
that tells you whether it's left right
let's<00:31:02.300><c> round</c><00:31:02.800><c> and</c><00:31:03.800><c> then</c><00:31:04.730><c> there's</c><00:31:05.060><c> some</c>

00:31:05.800 --> 00:31:05.810 align:start position:0%
let's round and then there's some
 

00:31:05.810 --> 00:31:07.630 align:start position:0%
let's round and then there's some
optional<00:31:06.290><c> coordinate</c><00:31:06.980><c> so</c><00:31:07.160><c> if</c><00:31:07.250><c> you</c><00:31:07.340><c> wanted</c><00:31:07.550><c> to</c>

00:31:07.630 --> 00:31:07.640 align:start position:0%
optional coordinate so if you wanted to
 

00:31:07.640 --> 00:31:11.050 align:start position:0%
optional coordinate so if you wanted to
specify<00:31:08.090><c> speaker</c><00:31:08.660><c> positions</c><00:31:09.640><c> using</c><00:31:10.640><c> floating</c>

00:31:11.050 --> 00:31:11.060 align:start position:0%
specify speaker positions using floating
 

00:31:11.060 --> 00:31:12.340 align:start position:0%
specify speaker positions using floating
point<00:31:11.240><c> coordinates</c><00:31:11.660><c> you</c><00:31:11.750><c> can</c><00:31:11.870><c> do</c><00:31:11.960><c> that</c><00:31:12.110><c> in</c>

00:31:12.340 --> 00:31:12.350 align:start position:0%
point coordinates you can do that in
 

00:31:12.350 --> 00:31:15.750 align:start position:0%
point coordinates you can do that in
rectangular<00:31:12.890><c> or</c><00:31:13.040><c> spherical</c><00:31:13.430><c> coordinates</c>

00:31:15.750 --> 00:31:15.760 align:start position:0%
rectangular or spherical coordinates
 

00:31:15.760 --> 00:31:18.760 align:start position:0%
rectangular or spherical coordinates
okay<00:31:16.760><c> the</c><00:31:16.940><c> channel</c><00:31:17.600><c> label</c><00:31:17.930><c> is</c><00:31:18.110><c> an</c><00:31:18.230><c> integer</c><00:31:18.470><c> it</c>

00:31:18.760 --> 00:31:18.770 align:start position:0%
okay the channel label is an integer it
 

00:31:18.770 --> 00:31:21.160 align:start position:0%
okay the channel label is an integer it
tells<00:31:18.980><c> you</c><00:31:19.160><c> just</c><00:31:19.400><c> basically</c><00:31:19.750><c> which</c><00:31:20.750><c> channel</c>

00:31:21.160 --> 00:31:21.170 align:start position:0%
tells you just basically which channel
 

00:31:21.170 --> 00:31:24.760 align:start position:0%
tells you just basically which channel
you're<00:31:21.290><c> dealing</c><00:31:21.620><c> with</c><00:31:21.650><c> there's</c><00:31:23.560><c> basic</c><00:31:24.560><c> ones</c>

00:31:24.760 --> 00:31:24.770 align:start position:0%
you're dealing with there's basic ones
 

00:31:24.770 --> 00:31:27.100 align:start position:0%
you're dealing with there's basic ones
and<00:31:25.010><c> then</c><00:31:25.130><c> there's</c><00:31:25.340><c> lots</c><00:31:25.700><c> of</c><00:31:25.820><c> more</c><00:31:26.110><c> esoteric</c>

00:31:27.100 --> 00:31:27.110 align:start position:0%
and then there's lots of more esoteric
 

00:31:27.110 --> 00:31:30.460 align:start position:0%
and then there's lots of more esoteric
ones<00:31:27.710><c> this</c><00:31:27.980><c> is</c><00:31:28.040><c> sort</c><00:31:28.580><c> of</c><00:31:28.640><c> a</c><00:31:28.900><c> channel</c><00:31:29.900><c> some</c><00:31:30.440><c> of</c>

00:31:30.460 --> 00:31:30.470 align:start position:0%
ones this is sort of a channel some of
 

00:31:30.470 --> 00:31:31.900 align:start position:0%
ones this is sort of a channel some of
the<00:31:30.590><c> channels</c><00:31:30.740><c> defined</c><00:31:31.340><c> by</c><00:31:31.490><c> the</c><00:31:31.550><c> theater</c>

00:31:31.900 --> 00:31:31.910 align:start position:0%
the channels defined by the theater
 

00:31:31.910 --> 00:31:34.780 align:start position:0%
the channels defined by the theater
industry<00:31:32.860><c> along</c><00:31:33.860><c> with</c><00:31:34.040><c> my</c><00:31:34.190><c> favorite</c><00:31:34.520><c> channel</c>

00:31:34.780 --> 00:31:34.790 align:start position:0%
industry along with my favorite channel
 

00:31:34.790 --> 00:31:37.030 align:start position:0%
industry along with my favorite channel
the<00:31:34.910><c> left</c><00:31:35.180><c> surround</c><00:31:35.420><c> direct</c><00:31:35.660><c> channel</c><00:31:36.040><c> LSD</c>

00:31:37.030 --> 00:31:37.040 align:start position:0%
the left surround direct channel LSD
 

00:31:37.040 --> 00:31:40.450 align:start position:0%
the left surround direct channel LSD
channel<00:31:38.560><c> the</c><00:31:39.560><c> audio</c><00:31:39.950><c> channel</c><00:31:40.310><c> layout</c>

00:31:40.450 --> 00:31:40.460 align:start position:0%
channel the audio channel layout
 

00:31:40.460 --> 00:31:42.790 align:start position:0%
channel the audio channel layout
operations<00:31:41.240><c> you</c><00:31:41.810><c> can</c><00:31:41.960><c> get</c><00:31:42.230><c> the</c><00:31:42.380><c> number</c><00:31:42.680><c> of</c>

00:31:42.790 --> 00:31:42.800 align:start position:0%
operations you can get the number of
 

00:31:42.800 --> 00:31:47.350 align:start position:0%
operations you can get the number of
channels<00:31:43.460><c> and</c><00:31:43.670><c> a</c><00:31:43.790><c> layout</c><00:31:45.430><c> you</c><00:31:46.430><c> can</c><00:31:46.460><c> get</c><00:31:47.120><c> a</c><00:31:47.150><c> full</c>

00:31:47.350 --> 00:31:47.360 align:start position:0%
channels and a layout you can get a full
 

00:31:47.360 --> 00:31:49.660 align:start position:0%
channels and a layout you can get a full
description<00:31:47.660><c> from</c><00:31:48.650><c> a</c><00:31:48.770><c> layout</c><00:31:48.920><c> tag</c><00:31:49.370><c> or</c><00:31:49.640><c> a</c>

00:31:49.660 --> 00:31:49.670 align:start position:0%
description from a layout tag or a
 

00:31:49.670 --> 00:31:53.040 align:start position:0%
description from a layout tag or a
bitmap<00:31:50.500><c> so</c><00:31:51.500><c> if</c><00:31:51.560><c> you</c><00:31:51.650><c> have</c><00:31:51.740><c> a</c><00:31:51.800><c> one</c><00:31:52.250><c> of</c><00:31:52.340><c> these</c>

00:31:53.040 --> 00:31:53.050 align:start position:0%
bitmap so if you have a one of these
 

00:31:53.050 --> 00:31:56.020 align:start position:0%
bitmap so if you have a one of these
integer<00:31:54.050><c> tags</c><00:31:54.290><c> like</c><00:31:54.590><c> five</c><00:31:55.040><c> dot</c><00:31:55.250><c> 1a</c><00:31:55.580><c> you</c><00:31:55.640><c> can</c>

00:31:56.020 --> 00:31:56.030 align:start position:0%
integer tags like five dot 1a you can
 

00:31:56.030 --> 00:31:58.720 align:start position:0%
integer tags like five dot 1a you can
have<00:31:56.960><c> it</c><00:31:57.080><c> give</c><00:31:57.290><c> you</c><00:31:57.410><c> an</c><00:31:57.440><c> array</c><00:31:57.860><c> of</c><00:31:57.890><c> the</c><00:31:58.400><c> channel</c>

00:31:58.720 --> 00:31:58.730 align:start position:0%
have it give you an array of the channel
 

00:31:58.730 --> 00:32:02.200 align:start position:0%
have it give you an array of the channel
descriptions<00:31:59.210><c> telling</c><00:32:00.170><c> you</c><00:32:00.290><c> what</c><00:32:00.670><c> with</c><00:32:01.670><c> the</c>

00:32:02.200 --> 00:32:02.210 align:start position:0%
descriptions telling you what with the
 

00:32:02.210 --> 00:32:03.580 align:start position:0%
descriptions telling you what with the
channel<00:32:02.510><c> labels</c><00:32:02.780><c> all</c><00:32:02.960><c> filled</c><00:32:03.200><c> out</c><00:32:03.320><c> so</c><00:32:03.500><c> you</c>

00:32:03.580 --> 00:32:03.590 align:start position:0%
channel labels all filled out so you
 

00:32:03.590 --> 00:32:05.590 align:start position:0%
channel labels all filled out so you
know<00:32:03.680><c> which</c><00:32:03.890><c> channel</c><00:32:04.730><c> is</c><00:32:04.820><c> where</c><00:32:05.090><c> in</c><00:32:05.270><c> certain</c>

00:32:05.590 --> 00:32:05.600 align:start position:0%
know which channel is where in certain
 

00:32:05.600 --> 00:32:07.840 align:start position:0%
know which channel is where in certain
layout<00:32:06.040><c> you</c><00:32:07.040><c> can</c><00:32:07.070><c> get</c><00:32:07.340><c> a</c><00:32:07.370><c> matrix</c><00:32:07.760><c> of</c>

00:32:07.840 --> 00:32:07.850 align:start position:0%
layout you can get a matrix of
 

00:32:07.850 --> 00:32:10.000 align:start position:0%
layout you can get a matrix of
coefficients<00:32:08.030><c> for</c><00:32:08.840><c> using</c><00:32:09.380><c> with</c><00:32:09.590><c> the</c><00:32:09.710><c> matrix</c>

00:32:10.000 --> 00:32:10.010 align:start position:0%
coefficients for using with the matrix
 

00:32:10.010 --> 00:32:12.290 align:start position:0%
coefficients for using with the matrix
mixer<00:32:10.250><c> which</c><00:32:10.429><c> I'll</c><00:32:10.550><c> go</c><00:32:10.700><c> over</c><00:32:10.730><c> in</c><00:32:11.600><c> a</c><00:32:11.870><c> bit</c>

00:32:12.290 --> 00:32:12.300 align:start position:0%
mixer which I'll go over in a bit
 

00:32:12.300 --> 00:32:15.300 align:start position:0%
mixer which I'll go over in a bit
for<00:32:13.300><c> doing</c><00:32:13.510><c> down</c><00:32:13.690><c> mixing</c><00:32:14.140><c> from</c><00:32:14.470><c> like</c><00:32:14.830><c> five</c><00:32:15.100><c> got</c>

00:32:15.300 --> 00:32:15.310 align:start position:0%
for doing down mixing from like five got
 

00:32:15.310 --> 00:32:19.350 align:start position:0%
for doing down mixing from like five got
12<00:32:15.610><c> stereo</c><00:32:17.370><c> you</c><00:32:18.370><c> can</c><00:32:18.550><c> get</c><00:32:18.700><c> a</c><00:32:18.730><c> name</c><00:32:19.000><c> for</c><00:32:19.330><c> a</c>

00:32:19.350 --> 00:32:19.360 align:start position:0%
12 stereo you can get a name for a
 

00:32:19.360 --> 00:32:23.310 align:start position:0%
12 stereo you can get a name for a
layout<00:32:20.250><c> so</c><00:32:21.250><c> if</c><00:32:21.340><c> you</c><00:32:21.460><c> have</c><00:32:21.840><c> some</c><00:32:22.840><c> layout</c><00:32:23.170><c> you</c>

00:32:23.310 --> 00:32:23.320 align:start position:0%
layout so if you have some layout you
 

00:32:23.320 --> 00:32:26.610 align:start position:0%
layout so if you have some layout you
can<00:32:23.350><c> pass</c><00:32:23.650><c> it</c><00:32:23.830><c> here</c><00:32:24.130><c> to</c><00:32:24.970><c> the</c><00:32:25.090><c> audio</c><00:32:25.960><c> format</c><00:32:26.350><c> API</c>

00:32:26.610 --> 00:32:26.620 align:start position:0%
can pass it here to the audio format API
 

00:32:26.620 --> 00:32:28.590 align:start position:0%
can pass it here to the audio format API
and<00:32:26.860><c> it'll</c><00:32:27.070><c> give</c><00:32:27.400><c> you</c><00:32:27.520><c> a</c><00:32:27.550><c> CF</c><00:32:27.820><c> string</c><00:32:28.120><c> which</c><00:32:28.480><c> you</c>

00:32:28.590 --> 00:32:28.600 align:start position:0%
and it'll give you a CF string which you
 

00:32:28.600 --> 00:32:31.800 align:start position:0%
and it'll give you a CF string which you
can<00:32:28.750><c> print</c><00:32:28.930><c> out</c><00:32:30.000><c> you</c><00:32:31.000><c> can</c><00:32:31.120><c> get</c><00:32:31.300><c> a</c><00:32:31.330><c> name</c><00:32:31.540><c> for</c><00:32:31.780><c> a</c>

00:32:31.800 --> 00:32:31.810 align:start position:0%
can print out you can get a name for a
 

00:32:31.810 --> 00:32:33.720 align:start position:0%
can print out you can get a name for a
channel<00:32:32.230><c> so</c><00:32:32.530><c> if</c><00:32:32.680><c> you</c><00:32:32.800><c> want</c><00:32:32.950><c> to</c><00:32:33.040><c> you</c><00:32:33.670><c> know</c>

00:32:33.720 --> 00:32:33.730 align:start position:0%
channel so if you want to you know
 

00:32:33.730 --> 00:32:35.280 align:start position:0%
channel so if you want to you know
certain<00:32:34.060><c> channel</c><00:32:34.330><c> you</c><00:32:34.420><c> want</c><00:32:34.570><c> to</c><00:32:34.630><c> find</c><00:32:34.780><c> out</c><00:32:34.930><c> a</c>

00:32:35.280 --> 00:32:35.290 align:start position:0%
certain channel you want to find out a
 

00:32:35.290 --> 00:32:38.940 align:start position:0%
certain channel you want to find out a
name<00:32:35.890><c> you</c><00:32:36.040><c> can</c><00:32:36.070><c> print</c><00:32:36.340><c> for</c><00:32:36.520><c> the</c><00:32:36.610><c> user</c><00:32:37.950><c> these</c>

00:32:38.940 --> 00:32:38.950 align:start position:0%
name you can print for the user these
 

00:32:38.950 --> 00:32:42.540 align:start position:0%
name you can print for the user these
are<00:32:39.100><c> these</c><00:32:39.490><c> are</c><00:32:39.550><c> localized</c><00:32:40.060><c> strings</c><00:32:40.420><c> so</c><00:32:41.550><c> if</c>

00:32:42.540 --> 00:32:42.550 align:start position:0%
are these are localized strings so if
 

00:32:42.550 --> 00:32:45.090 align:start position:0%
are these are localized strings so if
you<00:32:42.640><c> want</c><00:32:42.790><c> to</c><00:32:42.820><c> see</c><00:32:43.650><c> what</c><00:32:44.650><c> the</c><00:32:44.740><c> left</c><00:32:44.950><c> channel</c>

00:32:45.090 --> 00:32:45.100 align:start position:0%
you want to see what the left channel
 

00:32:45.100 --> 00:32:48.510 align:start position:0%
you want to see what the left channel
looks<00:32:45.400><c> like</c><00:32:45.580><c> you</c><00:32:46.540><c> can</c><00:32:46.770><c> get</c><00:32:47.770><c> that</c><00:32:47.950><c> and</c><00:32:48.400><c> that</c>

00:32:48.510 --> 00:32:48.520 align:start position:0%
looks like you can get that and that
 

00:32:48.520 --> 00:32:53.480 align:start position:0%
looks like you can get that and that
will<00:32:48.580><c> be</c><00:32:48.730><c> localized</c><00:32:49.240><c> so</c><00:32:50.730><c> and</c><00:32:52.110><c> then</c><00:32:53.110><c> there's</c><00:32:53.320><c> a</c>

00:32:53.480 --> 00:32:53.490 align:start position:0%
will be localized so and then there's a
 

00:32:53.490 --> 00:32:55.860 align:start position:0%
will be localized so and then there's a
you<00:32:54.490><c> can</c><00:32:54.610><c> also</c><00:32:54.760><c> put</c><00:32:55.060><c> these</c><00:32:55.240><c> audio</c><00:32:55.540><c> channel</c>

00:32:55.860 --> 00:32:55.870 align:start position:0%
you can also put these audio channel
 

00:32:55.870 --> 00:33:03.900 align:start position:0%
you can also put these audio channel
layouts<00:32:56.140><c> into</c><00:32:56.970><c> files</c><00:32:57.970><c> so</c><00:33:01.740><c> alright</c><00:33:02.740><c> so</c><00:33:03.070><c> with</c>

00:33:03.900 --> 00:33:03.910 align:start position:0%
layouts into files so alright so with
 

00:33:03.910 --> 00:33:06.870 align:start position:0%
layouts into files so alright so with
audio<00:33:04.210><c> units</c><00:33:04.570><c> you</c><00:33:04.780><c> can</c><00:33:04.930><c> get</c><00:33:05.470><c> the</c><00:33:05.880><c> channel</c>

00:33:06.870 --> 00:33:06.880 align:start position:0%
audio units you can get the channel
 

00:33:06.880 --> 00:33:08.970 align:start position:0%
audio units you can get the channel
layouts<00:33:07.240><c> and</c><00:33:07.450><c> audio</c><00:33:07.690><c> unit</c><00:33:07.960><c> supports</c><00:33:08.440><c> this</c><00:33:08.890><c> is</c>

00:33:08.970 --> 00:33:08.980 align:start position:0%
layouts and audio unit supports this is
 

00:33:08.980 --> 00:33:12.660 align:start position:0%
layouts and audio unit supports this is
a<00:33:09.010><c> new</c><00:33:09.160><c> feature</c><00:33:09.370><c> for</c><00:33:09.790><c> Panther</c><00:33:10.950><c> all</c><00:33:11.950><c> units</c><00:33:12.190><c> can</c>

00:33:12.660 --> 00:33:12.670 align:start position:0%
a new feature for Panther all units can
 

00:33:12.670 --> 00:33:15.900 align:start position:0%
a new feature for Panther all units can
support<00:33:13.060><c> channel</c><00:33:13.840><c> layouts</c><00:33:14.140><c> and</c><00:33:14.440><c> you</c><00:33:14.740><c> can</c><00:33:14.910><c> get</c>

00:33:15.900 --> 00:33:15.910 align:start position:0%
support channel layouts and you can get
 

00:33:15.910 --> 00:33:17.880 align:start position:0%
support channel layouts and you can get
or<00:33:16.090><c> set</c><00:33:16.330><c> channel</c><00:33:16.930><c> layout</c><00:33:17.080><c> for</c><00:33:17.320><c> an</c><00:33:17.380><c> audio</c><00:33:17.590><c> units</c>

00:33:17.880 --> 00:33:17.890 align:start position:0%
or set channel layout for an audio units
 

00:33:17.890 --> 00:33:21.930 align:start position:0%
or set channel layout for an audio units
dream<00:33:18.480><c> for</c><00:33:19.480><c> example</c><00:33:19.810><c> the</c><00:33:19.870><c> matrix</c><00:33:20.230><c> reverb</c><00:33:20.980><c> can</c>

00:33:21.930 --> 00:33:21.940 align:start position:0%
dream for example the matrix reverb can
 

00:33:21.940 --> 00:33:26.610 align:start position:0%
dream for example the matrix reverb can
have<00:33:22.150><c> stereo</c><00:33:22.900><c> quad</c><00:33:23.260><c> or</c><00:33:23.470><c> 50</c><00:33:24.070><c> channel</c><00:33:24.880><c> layout</c><00:33:25.620><c> as</c>

00:33:26.610 --> 00:33:26.620 align:start position:0%
have stereo quad or 50 channel layout as
 

00:33:26.620 --> 00:33:30.980 align:start position:0%
have stereo quad or 50 channel layout as
output<00:33:28.680><c> ok</c><00:33:29.680><c> you</c><00:33:29.740><c> don't</c><00:33:30.100><c> have</c><00:33:30.250><c> to</c><00:33:30.400><c> support</c>

00:33:30.980 --> 00:33:30.990 align:start position:0%
output ok you don't have to support
 

00:33:30.990 --> 00:33:33.360 align:start position:0%
output ok you don't have to support
channel<00:33:31.990><c> layouts</c><00:33:32.230><c> if</c><00:33:32.470><c> you're</c><00:33:32.650><c> doing</c><00:33:33.040><c> an</c><00:33:33.130><c> audio</c>

00:33:33.360 --> 00:33:33.370 align:start position:0%
channel layouts if you're doing an audio
 

00:33:33.370 --> 00:33:35.670 align:start position:0%
channel layouts if you're doing an audio
unit<00:33:33.610><c> that's</c><00:33:33.840><c> it's</c><00:33:34.840><c> only</c><00:33:35.020><c> doing</c><00:33:35.230><c> mono</c><00:33:35.440><c> or</c>

00:33:35.670 --> 00:33:35.680 align:start position:0%
unit that's it's only doing mono or
 

00:33:35.680 --> 00:33:37.380 align:start position:0%
unit that's it's only doing mono or
stereo<00:33:35.890><c> or</c><00:33:36.460><c> it</c><00:33:36.610><c> doesn't</c><00:33:36.850><c> really</c><00:33:37.090><c> care</c><00:33:37.300><c> about</c>

00:33:37.380 --> 00:33:37.390 align:start position:0%
stereo or it doesn't really care about
 

00:33:37.390 --> 00:33:40.500 align:start position:0%
stereo or it doesn't really care about
spatial<00:33:37.840><c> location</c><00:33:38.260><c> like</c><00:33:38.440><c> a</c><00:33:38.470><c> filter</c><00:33:39.390><c> then</c><00:33:40.390><c> you</c>

00:33:40.500 --> 00:33:40.510 align:start position:0%
spatial location like a filter then you
 

00:33:40.510 --> 00:33:43.320 align:start position:0%
spatial location like a filter then you
can<00:33:40.660><c> go</c><00:33:41.380><c> have</c><00:33:41.560><c> to</c><00:33:41.710><c> support</c><00:33:42.700><c> audio</c><00:33:42.940><c> channel</c>

00:33:43.320 --> 00:33:43.330 align:start position:0%
can go have to support audio channel
 

00:33:43.330 --> 00:33:46.110 align:start position:0%
can go have to support audio channel
layouts<00:33:43.540><c> but</c><00:33:43.660><c> if</c><00:33:43.840><c> you're</c><00:33:43.990><c> doing</c><00:33:44.260><c> a</c><00:33:44.880><c> reverb</c><00:33:45.880><c> or</c>

00:33:46.110 --> 00:33:46.120 align:start position:0%
layouts but if you're doing a reverb or
 

00:33:46.120 --> 00:33:50.210 align:start position:0%
layouts but if you're doing a reverb or
a<00:33:46.210><c> Panar</c><00:33:46.510><c> or</c><00:33:47.070><c> something</c><00:33:48.070><c> that</c><00:33:48.250><c> can</c><00:33:48.940><c> deal</c><00:33:49.120><c> with</c>

00:33:50.210 --> 00:33:50.220 align:start position:0%
a Panar or something that can deal with
 

00:33:50.220 --> 00:33:52.620 align:start position:0%
a Panar or something that can deal with
certain<00:33:51.220><c> numbers</c><00:33:51.910><c> of</c><00:33:51.940><c> channels</c><00:33:52.360><c> like</c><00:33:52.510><c> if</c>

00:33:52.620 --> 00:33:52.630 align:start position:0%
certain numbers of channels like if
 

00:33:52.630 --> 00:33:56.280 align:start position:0%
certain numbers of channels like if
you're<00:33:52.720><c> dealing</c><00:33:52.870><c> with</c><00:33:54.570><c> five</c><00:33:55.570><c> channels</c><00:33:55.930><c> and</c>

00:33:56.280 --> 00:33:56.290 align:start position:0%
you're dealing with five channels and
 

00:33:56.290 --> 00:33:57.450 align:start position:0%
you're dealing with five channels and
you<00:33:56.380><c> want</c><00:33:56.590><c> to</c><00:33:56.650><c> be</c><00:33:56.710><c> able</c><00:33:56.800><c> to</c><00:33:56.950><c> support</c><00:33:57.220><c> multiple</c>

00:33:57.450 --> 00:33:57.460 align:start position:0%
you want to be able to support multiple
 

00:33:57.460 --> 00:34:00.420 align:start position:0%
you want to be able to support multiple
channel<00:33:58.330><c> or</c><00:33:58.420><c> drinks</c><00:33:58.810><c> and</c><00:33:58.960><c> you</c><00:33:59.100><c> want</c><00:34:00.100><c> to</c><00:34:00.190><c> do</c>

00:34:00.420 --> 00:34:00.430 align:start position:0%
channel or drinks and you want to do
 

00:34:00.430 --> 00:34:06.300 align:start position:0%
channel or drinks and you want to do
that<00:34:00.640><c> use</c><00:34:01.480><c> audio</c><00:34:01.720><c> channel</c><00:34:02.110><c> layout</c><00:34:04.890><c> so</c><00:34:05.890><c> the</c>

00:34:06.300 --> 00:34:06.310 align:start position:0%
that use audio channel layout so the
 

00:34:06.310 --> 00:34:08.280 align:start position:0%
that use audio channel layout so the
audio<00:34:06.550><c> converter</c><00:34:06.760><c> also</c><00:34:07.300><c> supports</c><00:34:07.810><c> channel</c>

00:34:08.280 --> 00:34:08.290 align:start position:0%
audio converter also supports channel
 

00:34:08.290 --> 00:34:13.280 align:start position:0%
audio converter also supports channel
layout<00:34:08.409><c> you</c><00:34:08.800><c> can</c><00:34:10.110><c> use</c><00:34:11.110><c> the</c><00:34:11.320><c> AAC</c><00:34:11.560><c> codec</c><00:34:11.740><c> to</c>

00:34:13.280 --> 00:34:13.290 align:start position:0%
layout you can use the AAC codec to
 

00:34:13.290 --> 00:34:17.760 align:start position:0%
layout you can use the AAC codec to
support<00:34:15.389><c> various</c><00:34:16.389><c> channel</c><00:34:16.960><c> layout</c><00:34:17.110><c> when</c>

00:34:17.760 --> 00:34:17.770 align:start position:0%
support various channel layout when
 

00:34:17.770 --> 00:34:21.930 align:start position:0%
support various channel layout when
encoding<00:34:18.610><c> to</c><00:34:18.909><c> AAC</c><00:34:20.460><c> there's</c><00:34:21.460><c> a</c><00:34:21.550><c> property</c><00:34:21.909><c> for</c>

00:34:21.930 --> 00:34:21.940 align:start position:0%
encoding to AAC there's a property for
 

00:34:21.940 --> 00:34:23.850 align:start position:0%
encoding to AAC there's a property for
getting<00:34:22.360><c> the</c><00:34:22.510><c> available</c><00:34:23.080><c> in</c><00:34:23.260><c> code</c><00:34:23.470><c> channel</c>

00:34:23.850 --> 00:34:23.860 align:start position:0%
getting the available in code channel
 

00:34:23.860 --> 00:34:24.730 align:start position:0%
getting the available in code channel
outs<00:34:24.040><c> and</c><00:34:24.399><c> for</c>

00:34:24.730 --> 00:34:24.740 align:start position:0%
outs and for
 

00:34:24.740 --> 00:34:28.899 align:start position:0%
outs and for
are<00:34:25.119><c> studying</c><00:34:26.119><c> the</c><00:34:26.300><c> channel</c><00:34:26.750><c> layout</c><00:34:27.909><c> when</c>

00:34:28.899 --> 00:34:28.909 align:start position:0%
are studying the channel layout when
 

00:34:28.909 --> 00:34:33.520 align:start position:0%
are studying the channel layout when
you're<00:34:29.060><c> in</c><00:34:29.240><c> coding</c><00:34:31.060><c> so</c><00:34:32.060><c> this</c><00:34:32.690><c> also</c><00:34:32.899><c> the</c><00:34:33.230><c> audio</c>

00:34:33.520 --> 00:34:33.530 align:start position:0%
you're in coding so this also the audio
 

00:34:33.530 --> 00:34:36.730 align:start position:0%
you're in coding so this also the audio
files<00:34:33.800><c> global</c><00:34:34.730><c> info</c><00:34:35.000><c> API</c><00:34:35.470><c> which</c><00:34:36.470><c> is</c><00:34:36.590><c> related</c>

00:34:36.730 --> 00:34:36.740 align:start position:0%
files global info API which is related
 

00:34:36.740 --> 00:34:38.770 align:start position:0%
files global info API which is related
to<00:34:37.070><c> audio</c><00:34:37.310><c> audio</c><00:34:37.669><c> format</c><00:34:38.060><c> API</c><00:34:38.330><c> but</c><00:34:38.570><c> it</c><00:34:38.659><c> gets</c>

00:34:38.770 --> 00:34:38.780 align:start position:0%
to audio audio format API but it gets
 

00:34:38.780 --> 00:34:42.190 align:start position:0%
to audio audio format API but it gets
some<00:34:39.280><c> audio</c><00:34:40.280><c> it</c><00:34:40.940><c> gets</c><00:34:41.149><c> information</c><00:34:41.750><c> about</c>

00:34:42.190 --> 00:34:42.200 align:start position:0%
some audio it gets information about
 

00:34:42.200 --> 00:34:45.310 align:start position:0%
some audio it gets information about
audio<00:34:42.710><c> files</c><00:34:43.240><c> in</c><00:34:44.240><c> a</c><00:34:44.360><c> skia</c><00:34:44.570><c> what</c><00:34:44.780><c> file</c><00:34:45.020><c> types</c>

00:34:45.310 --> 00:34:45.320 align:start position:0%
audio files in a skia what file types
 

00:34:45.320 --> 00:34:48.790 align:start position:0%
audio files in a skia what file types
can<00:34:45.860><c> be</c><00:34:45.889><c> read</c><00:34:46.190><c> what</c><00:34:46.639><c> can</c><00:34:47.210><c> be</c><00:34:47.330><c> written</c><00:34:47.649><c> you</c><00:34:48.649><c> can</c>

00:34:48.790 --> 00:34:48.800 align:start position:0%
can be read what can be written you can
 

00:34:48.800 --> 00:34:51.720 align:start position:0%
can be read what can be written you can
get<00:34:48.950><c> names</c><00:34:49.220><c> for</c><00:34:49.490><c> the</c><00:34:49.610><c> file</c><00:34:50.030><c> types</c><00:34:50.840><c> and</c><00:34:51.230><c> you</c><00:34:51.379><c> can</c>

00:34:51.720 --> 00:34:51.730 align:start position:0%
get names for the file types and you can
 

00:34:51.730 --> 00:34:54.399 align:start position:0%
get names for the file types and you can
find<00:34:52.730><c> out</c><00:34:52.909><c> what</c><00:34:53.149><c> stream</c><00:34:53.629><c> formats</c><00:34:53.899><c> a</c><00:34:54.139><c> certain</c>

00:34:54.399 --> 00:34:54.409 align:start position:0%
find out what stream formats a certain
 

00:34:54.409 --> 00:34:58.120 align:start position:0%
find out what stream formats a certain
file<00:34:54.590><c> type</c><00:34:54.860><c> can</c><00:34:55.100><c> have</c><00:34:55.310><c> put</c><00:34:56.000><c> into</c><00:34:56.270><c> it</c><00:34:56.950><c> you</c><00:34:57.950><c> can</c>

00:34:58.120 --> 00:34:58.130 align:start position:0%
file type can have put into it you can
 

00:34:58.130 --> 00:35:03.340 align:start position:0%
file type can have put into it you can
find<00:34:58.580><c> out</c><00:34:58.700><c> what</c><00:34:58.880><c> file</c><00:34:59.180><c> extensions</c><00:35:02.020><c> apply</c><00:35:03.020><c> for</c>

00:35:03.340 --> 00:35:03.350 align:start position:0%
find out what file extensions apply for
 

00:35:03.350 --> 00:35:05.200 align:start position:0%
find out what file extensions apply for
a<00:35:03.380><c> certain</c><00:35:03.740><c> file</c><00:35:04.040><c> type</c><00:35:04.310><c> or</c><00:35:04.550><c> for</c><00:35:04.730><c> all</c><00:35:04.850><c> the</c><00:35:05.030><c> pile</c>

00:35:05.200 --> 00:35:05.210 align:start position:0%
a certain file type or for all the pile
 

00:35:05.210 --> 00:35:11.560 align:start position:0%
a certain file type or for all the pile
tides<00:35:08.080><c> so</c><00:35:09.080><c> it's</c><00:35:09.350><c> it's</c><00:35:09.970><c> basically</c><00:35:10.970><c> symmetrical</c>

00:35:11.560 --> 00:35:11.570 align:start position:0%
tides so it's it's basically symmetrical
 

00:35:11.570 --> 00:35:14.109 align:start position:0%
tides so it's it's basically symmetrical
to<00:35:11.660><c> the</c><00:35:11.690><c> audio</c><00:35:11.990><c> format</c><00:35:12.350><c> a</c><00:35:12.380><c> TI</c><00:35:13.030><c> there's</c><00:35:14.030><c> a</c>

00:35:14.109 --> 00:35:14.119 align:start position:0%
to the audio format a TI there's a
 

00:35:14.119 --> 00:35:18.250 align:start position:0%
to the audio format a TI there's a
property<00:35:14.540><c> ID</c><00:35:14.720><c> a</c><00:35:15.050><c> specifier</c><00:35:15.740><c> and</c><00:35:16.040><c> and</c><00:35:17.000><c> then</c><00:35:17.720><c> for</c>

00:35:18.250 --> 00:35:18.260 align:start position:0%
property ID a specifier and and then for
 

00:35:18.260 --> 00:35:20.020 align:start position:0%
property ID a specifier and and then for
the<00:35:18.350><c> info</c><00:35:18.740><c> you</c><00:35:18.770><c> get</c><00:35:19.130><c> the</c><00:35:19.550><c> size</c><00:35:19.820><c> of</c><00:35:19.970><c> the</c>

00:35:20.020 --> 00:35:20.030 align:start position:0%
the info you get the size of the
 

00:35:20.030 --> 00:35:23.380 align:start position:0%
the info you get the size of the
property<00:35:20.480><c> and</c><00:35:20.630><c> for</c><00:35:20.930><c> the</c><00:35:21.610><c> for</c><00:35:22.610><c> the</c><00:35:22.640><c> get</c>

00:35:23.380 --> 00:35:23.390 align:start position:0%
property and for the for the get
 

00:35:23.390 --> 00:35:26.350 align:start position:0%
property and for the for the get
property<00:35:23.750><c> call</c><00:35:23.990><c> you</c><00:35:24.380><c> get</c><00:35:24.590><c> the</c><00:35:24.800><c> you</c><00:35:25.310><c> get</c><00:35:26.240><c> the</c>

00:35:26.350 --> 00:35:26.360 align:start position:0%
property call you get the you get the
 

00:35:26.360 --> 00:35:30.430 align:start position:0%
property call you get the you get the
property<00:35:26.660><c> data</c><00:35:26.869><c> so</c><00:35:28.570><c> so</c><00:35:29.570><c> here's</c><00:35:29.750><c> an</c><00:35:29.869><c> example</c><00:35:29.930><c> of</c>

00:35:30.430 --> 00:35:30.440 align:start position:0%
property data so so here's an example of
 

00:35:30.440 --> 00:35:33.520 align:start position:0%
property data so so here's an example of
finding<00:35:31.280><c> out</c><00:35:31.400><c> what</c><00:35:32.240><c> Y</c><00:35:32.540><c> double</c><00:35:32.780><c> file</c><00:35:33.050><c> types</c><00:35:33.350><c> are</c>

00:35:33.520 --> 00:35:33.530 align:start position:0%
finding out what Y double file types are
 

00:35:33.530 --> 00:35:36.070 align:start position:0%
finding out what Y double file types are
on<00:35:33.590><c> the</c><00:35:33.710><c> system</c><00:35:34.070><c> it's</c><00:35:34.480><c> almost</c><00:35:35.480><c> identical</c><00:35:36.050><c> to</c>

00:35:36.070 --> 00:35:36.080 align:start position:0%
on the system it's almost identical to
 

00:35:36.080 --> 00:35:38.290 align:start position:0%
on the system it's almost identical to
the<00:35:36.350><c> finding</c><00:35:36.950><c> out</c><00:35:37.010><c> what</c><00:35:37.190><c> encoders</c><00:35:38.000><c> are</c><00:35:38.090><c> on</c><00:35:38.210><c> the</c>

00:35:38.290 --> 00:35:38.300 align:start position:0%
the finding out what encoders are on the
 

00:35:38.300 --> 00:35:43.840 align:start position:0%
the finding out what encoders are on the
system<00:35:38.660><c> I</c><00:35:39.790><c> find</c><00:35:40.790><c> out</c><00:35:40.910><c> what</c><00:35:41.150><c> the</c><00:35:42.100><c> the</c><00:35:43.100><c> size</c><00:35:43.640><c> of</c>

00:35:43.840 --> 00:35:43.850 align:start position:0%
system I find out what the the size of
 

00:35:43.850 --> 00:35:45.730 align:start position:0%
system I find out what the the size of
the<00:35:43.940><c> array</c><00:35:44.150><c> I'm</c><00:35:44.300><c> going</c><00:35:44.450><c> to</c><00:35:44.510><c> get</c><00:35:44.630><c> back</c><00:35:44.810><c> is</c><00:35:45.050><c> using</c>

00:35:45.730 --> 00:35:45.740 align:start position:0%
the array I'm going to get back is using
 

00:35:45.740 --> 00:35:52.270 align:start position:0%
the array I'm going to get back is using
the<00:35:48.280><c> info</c><00:35:49.280><c> size</c><00:35:49.900><c> call</c><00:35:50.900><c> and</c><00:35:51.230><c> then</c><00:35:51.350><c> I</c><00:35:51.590><c> get</c><00:35:52.130><c> the</c>

00:35:52.270 --> 00:35:52.280 align:start position:0%
the info size call and then I get the
 

00:35:52.280 --> 00:35:56.109 align:start position:0%
the info size call and then I get the
array<00:35:52.520><c> of</c><00:35:53.080><c> file</c><00:35:54.080><c> types</c><00:35:54.550><c> that</c><00:35:55.550><c> can</c><00:35:55.609><c> be</c><00:35:55.730><c> read</c><00:35:55.910><c> and</c>

00:35:56.109 --> 00:35:56.119 align:start position:0%
array of file types that can be read and
 

00:35:56.119 --> 00:35:59.710 align:start position:0%
array of file types that can be read and
I<00:35:56.210><c> go</c><00:35:56.390><c> into</c><00:35:56.540><c> a</c><00:35:56.660><c> loop</c><00:35:56.900><c> and</c><00:35:57.170><c> I</c><00:35:57.410><c> use</c><00:35:57.890><c> a</c><00:35:58.180><c> the</c><00:35:59.180><c> file</c>

00:35:59.710 --> 00:35:59.720 align:start position:0%
I go into a loop and I use a the file
 

00:35:59.720 --> 00:36:02.140 align:start position:0%
I go into a loop and I use a the file
type<00:36:00.020><c> name</c><00:36:00.350><c> property</c><00:36:01.040><c> to</c><00:36:01.310><c> get</c><00:36:01.490><c> a</c><00:36:01.520><c> CF</c><00:36:01.850><c> string</c>

00:36:02.140 --> 00:36:02.150 align:start position:0%
type name property to get a CF string
 

00:36:02.150 --> 00:36:04.330 align:start position:0%
type name property to get a CF string
that<00:36:02.300><c> I</c><00:36:02.390><c> can</c><00:36:02.540><c> print</c><00:36:02.750><c> out</c><00:36:02.869><c> and</c><00:36:03.140><c> so</c><00:36:03.590><c> this</c><00:36:03.920><c> is</c><00:36:04.070><c> what</c>

00:36:04.330 --> 00:36:04.340 align:start position:0%
that I can print out and so this is what
 

00:36:04.340 --> 00:36:09.340 align:start position:0%
that I can print out and so this is what
I<00:36:04.369><c> get</c><00:36:05.080><c> so</c><00:36:06.100><c> in</c><00:36:07.100><c> Panther</c><00:36:07.670><c> audio</c><00:36:08.119><c> file</c><00:36:08.450><c> now</c>

00:36:09.340 --> 00:36:09.350 align:start position:0%
I get so in Panther audio file now
 

00:36:09.350 --> 00:36:13.900 align:start position:0%
I get so in Panther audio file now
supports<00:36:10.660><c> MPEG</c><00:36:11.660><c> layer</c><00:36:11.840><c> 3</c><00:36:12.170><c> files</c><00:36:12.440><c> a</c><00:36:12.800><c> ac3</c><00:36:13.250><c> and</c>

00:36:13.900 --> 00:36:13.910 align:start position:0%
supports MPEG layer 3 files a ac3 and
 

00:36:13.910 --> 00:36:22.510 align:start position:0%
supports MPEG layer 3 files a ac3 and
AAC<00:36:14.570><c> a</c><00:36:15.020><c> DTS</c><00:36:15.920><c> files</c><00:36:18.250><c> ok</c><00:36:19.330><c> one</c><00:36:20.330><c> new</c><00:36:21.230><c> audio</c><00:36:22.010><c> unit</c><00:36:22.310><c> in</c>

00:36:22.510 --> 00:36:22.520 align:start position:0%
AAC a DTS files ok one new audio unit in
 

00:36:22.520 --> 00:36:28.210 align:start position:0%
AAC a DTS files ok one new audio unit in
in<00:36:23.440><c> Panther</c><00:36:24.440><c> is</c><00:36:24.590><c> the</c><00:36:24.740><c> matrix</c><00:36:25.040><c> mixer</c><00:36:27.220><c> audio</c>

00:36:28.210 --> 00:36:28.220 align:start position:0%
in Panther is the matrix mixer audio
 

00:36:28.220 --> 00:36:31.830 align:start position:0%
in Panther is the matrix mixer audio
unit<00:36:28.520><c> it's</c><00:36:28.730><c> a</c><00:36:28.940><c> naughty</c><00:36:29.930><c> guy</c><00:36:30.140><c> that</c><00:36:30.350><c> can</c><00:36:30.470><c> take</c><00:36:30.680><c> n</c>

00:36:31.830 --> 00:36:31.840 align:start position:0%
unit it's a naughty guy that can take n
 

00:36:31.840 --> 00:36:34.630 align:start position:0%
unit it's a naughty guy that can take n
inputs<00:36:32.840><c> to</c><00:36:33.170><c> or</c><00:36:33.440><c> any</c><00:36:33.710><c> number</c><00:36:33.890><c> of</c><00:36:34.040><c> inputs</c><00:36:34.430><c> to</c><00:36:34.550><c> any</c>

00:36:34.630 --> 00:36:34.640 align:start position:0%
inputs to or any number of inputs to any
 

00:36:34.640 --> 00:36:36.220 align:start position:0%
inputs to or any number of inputs to any
number<00:36:34.790><c> of</c><00:36:34.970><c> outputs</c><00:36:35.390><c> and</c><00:36:35.930><c> they</c><00:36:36.050><c> can</c><00:36:36.200><c> be</c>

00:36:36.220 --> 00:36:36.230 align:start position:0%
number of outputs and they can be
 

00:36:36.230 --> 00:36:37.970 align:start position:0%
number of outputs and they can be
bundled<00:36:36.560><c> and</c><00:36:36.890><c> strange</c><00:36:37.250><c> of</c>

00:36:37.970 --> 00:36:37.980 align:start position:0%
bundled and strange of
 

00:36:37.980 --> 00:36:44.010 align:start position:0%
bundled and strange of
any<00:36:38.980><c> size</c><00:36:39.760><c> so</c><00:36:40.680><c> and</c><00:36:41.680><c> the</c><00:36:42.220><c> CPU</c><00:36:42.730><c> usage</c><00:36:43.030><c> depends</c>

00:36:44.010 --> 00:36:44.020 align:start position:0%
any size so and the CPU usage depends
 

00:36:44.020 --> 00:36:46.319 align:start position:0%
any size so and the CPU usage depends
only<00:36:44.230><c> on</c><00:36:44.380><c> the</c><00:36:44.500><c> number</c><00:36:44.859><c> of</c><00:36:44.890><c> nonzero</c><00:36:45.579><c> cross</c>

00:36:46.319 --> 00:36:46.329 align:start position:0%
only on the number of nonzero cross
 

00:36:46.329 --> 00:36:48.750 align:start position:0%
only on the number of nonzero cross
points<00:36:46.690><c> in</c><00:36:46.780><c> the</c><00:36:46.839><c> matrix</c><00:36:47.250><c> not</c><00:36:48.250><c> the</c><00:36:48.369><c> size</c><00:36:48.609><c> of</c><00:36:48.700><c> the</c>

00:36:48.750 --> 00:36:48.760 align:start position:0%
points in the matrix not the size of the
 

00:36:48.760 --> 00:36:53.510 align:start position:0%
points in the matrix not the size of the
matrix<00:36:48.910><c> so</c><00:36:50.069><c> and</c><00:36:51.069><c> you</c><00:36:51.190><c> can</c><00:36:51.309><c> get</c><00:36:51.430><c> metering</c><00:36:51.910><c> on</c>

00:36:53.510 --> 00:36:53.520 align:start position:0%
matrix so and you can get metering on
 

00:36:53.520 --> 00:36:58.880 align:start position:0%
matrix so and you can get metering on
inputs<00:36:54.520><c> cross</c><00:36:54.760><c> points</c><00:36:55.119><c> and</c><00:36:55.240><c> outputs</c><00:36:57.809><c> so</c>

00:36:58.880 --> 00:36:58.890 align:start position:0%
inputs cross points and outputs so
 

00:36:58.890 --> 00:37:02.819 align:start position:0%
inputs cross points and outputs so
matrix<00:36:59.890><c> matrix</c><00:37:00.579><c> mixer</c><00:37:00.970><c> is</c><00:37:01.089><c> useful</c><00:37:01.510><c> for</c><00:37:01.829><c> signal</c>

00:37:02.819 --> 00:37:02.829 align:start position:0%
matrix matrix mixer is useful for signal
 

00:37:02.829 --> 00:37:05.490 align:start position:0%
matrix matrix mixer is useful for signal
routing<00:37:03.119><c> channel</c><00:37:04.119><c> reordering</c><00:37:04.510><c> surround</c><00:37:05.290><c> down</c>

00:37:05.490 --> 00:37:05.500 align:start position:0%
routing channel reordering surround down
 

00:37:05.500 --> 00:37:07.410 align:start position:0%
routing channel reordering surround down
mixing<00:37:05.940><c> generalized</c><00:37:06.940><c> panning</c><00:37:07.329><c> and</c>

00:37:07.410 --> 00:37:07.420 align:start position:0%
mixing generalized panning and
 

00:37:07.420 --> 00:37:13.140 align:start position:0%
mixing generalized panning and
generalize<00:37:08.050><c> mixing</c><00:37:11.160><c> all</c><00:37:12.160><c> the</c><00:37:12.430><c> input</c><00:37:12.760><c> buses</c>

00:37:13.140 --> 00:37:13.150 align:start position:0%
generalize mixing all the input buses
 

00:37:13.150 --> 00:37:17.099 align:start position:0%
generalize mixing all the input buses
are<00:37:13.470><c> flattened</c><00:37:14.470><c> to</c><00:37:15.450><c> an</c><00:37:16.450><c> array</c><00:37:16.720><c> of</c><00:37:16.750><c> mono</c>

00:37:17.099 --> 00:37:17.109 align:start position:0%
are flattened to an array of mono
 

00:37:17.109 --> 00:37:20.730 align:start position:0%
are flattened to an array of mono
channel<00:37:17.790><c> so</c><00:37:18.809><c> for</c><00:37:19.809><c> all</c><00:37:20.079><c> the</c><00:37:20.319><c> input</c><00:37:20.440><c> and</c><00:37:20.619><c> output</c>

00:37:20.730 --> 00:37:20.740 align:start position:0%
channel so for all the input and output
 

00:37:20.740 --> 00:37:24.260 align:start position:0%
channel so for all the input and output
buses<00:37:21.280><c> so</c><00:37:21.660><c> it's</c><00:37:22.660><c> a</c><00:37:22.750><c> big</c><00:37:22.990><c> matrix</c><00:37:23.650><c> of</c><00:37:23.980><c> mono</c>

00:37:24.260 --> 00:37:24.270 align:start position:0%
buses so it's a big matrix of mono
 

00:37:24.270 --> 00:37:28.859 align:start position:0%
buses so it's a big matrix of mono
channel<00:37:25.270><c> and</c><00:37:25.980><c> for</c><00:37:26.980><c> gains</c><00:37:27.250><c> control</c><00:37:27.609><c> each</c><00:37:28.480><c> cross</c>

00:37:28.859 --> 00:37:28.869 align:start position:0%
channel and for gains control each cross
 

00:37:28.869 --> 00:37:30.839 align:start position:0%
channel and for gains control each cross
point<00:37:29.200><c> there's</c><00:37:29.410><c> a</c><00:37:29.470><c> gain</c><00:37:30.010><c> on</c><00:37:30.040><c> input</c><00:37:30.520><c> a</c><00:37:30.550><c> cross</c>

00:37:30.839 --> 00:37:30.849 align:start position:0%
point there's a gain on input a cross
 

00:37:30.849 --> 00:37:33.900 align:start position:0%
point there's a gain on input a cross
point<00:37:31.119><c> gain</c><00:37:31.329><c> an</c><00:37:31.599><c> output</c><00:37:32.230><c> gain</c><00:37:32.500><c> and</c><00:37:32.829><c> a</c><00:37:33.010><c> master</c>

00:37:33.900 --> 00:37:33.910 align:start position:0%
point gain an output gain and a master
 

00:37:33.910 --> 00:37:38.599 align:start position:0%
point gain an output gain and a master
gain<00:37:34.059><c> for</c><00:37:34.329><c> the</c><00:37:34.359><c> entire</c><00:37:34.660><c> matrix</c><00:37:36.030><c> so</c><00:37:37.030><c> this</c><00:37:37.210><c> is</c><00:37:37.240><c> a</c>

00:37:38.599 --> 00:37:38.609 align:start position:0%
gain for the entire matrix so this is a
 

00:37:38.609 --> 00:37:40.920 align:start position:0%
gain for the entire matrix so this is a
this<00:37:39.609><c> is</c><00:37:39.760><c> a</c><00:37:39.790><c> game</c><00:37:40.030><c> of</c><00:37:40.059><c> go</c><00:37:40.390><c> where</c><00:37:40.660><c> black</c><00:37:40.900><c> is</c>

00:37:40.920 --> 00:37:40.930 align:start position:0%
this is a game of go where black is
 

00:37:40.930 --> 00:37:49.370 align:start position:0%
this is a game of go where black is
losing<00:37:44.130><c> so</c><00:37:45.130><c> this</c><00:37:45.280><c> shows</c><00:37:47.280><c> this</c><00:37:48.280><c> shows</c><00:37:48.520><c> the</c>

00:37:49.370 --> 00:37:49.380 align:start position:0%
losing so this shows this shows the
 

00:37:49.380 --> 00:37:53.640 align:start position:0%
losing so this shows this shows the
input<00:37:50.380><c> buses</c><00:37:51.750><c> coming</c><00:37:52.750><c> in</c><00:37:52.990><c> they're</c><00:37:53.200><c> flattened</c>

00:37:53.640 --> 00:37:53.650 align:start position:0%
input buses coming in they're flattened
 

00:37:53.650 --> 00:37:57.839 align:start position:0%
input buses coming in they're flattened
to<00:37:53.920><c> a</c><00:37:53.950><c> set</c><00:37:54.700><c> of</c><00:37:54.819><c> four</c><00:37:55.030><c> channels</c><00:37:55.450><c> I</c><00:37:56.339><c> have</c><00:37:57.339><c> there's</c>

00:37:57.839 --> 00:37:57.849 align:start position:0%
to a set of four channels I have there's
 

00:37:57.849 --> 00:38:01.559 align:start position:0%
to a set of four channels I have there's
a<00:37:57.970><c> stereo</c><00:37:58.390><c> buses</c><00:37:58.780><c> that</c><00:37:58.990><c> are</c><00:37:59.109><c> flattened</c><00:38:00.569><c> 24</c>

00:38:01.559 --> 00:38:01.569 align:start position:0%
a stereo buses that are flattened 24
 

00:38:01.569 --> 00:38:03.299 align:start position:0%
a stereo buses that are flattened 24
channels<00:38:01.930><c> there's</c><00:38:02.230><c> a</c><00:38:02.290><c> gain</c><00:38:02.740><c> on</c><00:38:02.770><c> each</c><00:38:03.069><c> input</c>

00:38:03.299 --> 00:38:03.309 align:start position:0%
channels there's a gain on each input
 

00:38:03.309 --> 00:38:07.680 align:start position:0%
channels there's a gain on each input
and<00:38:03.790><c> the</c><00:38:04.780><c> channels</c><00:38:05.260><c> get</c><00:38:05.530><c> numbered</c><00:38:06.420><c> across</c><00:38:07.420><c> all</c>

00:38:07.680 --> 00:38:07.690 align:start position:0%
and the channels get numbered across all
 

00:38:07.690 --> 00:38:10.140 align:start position:0%
and the channels get numbered across all
the<00:38:07.809><c> buses</c><00:38:08.230><c> in</c><00:38:08.920><c> just</c><00:38:09.160><c> a</c><00:38:09.250><c> linear</c><00:38:09.400><c> fashion</c><00:38:09.730><c> so</c>

00:38:10.140 --> 00:38:10.150 align:start position:0%
the buses in just a linear fashion so
 

00:38:10.150 --> 00:38:12.870 align:start position:0%
the buses in just a linear fashion so
they<00:38:10.270><c> go</c><00:38:10.390><c> 0</c><00:38:10.660><c> 1</c><00:38:10.900><c> 2</c><00:38:11.079><c> 3</c><00:38:11.109><c> 4</c><00:38:11.790><c> addressing</c><00:38:12.790><c> each</c>

00:38:12.870 --> 00:38:12.880 align:start position:0%
they go 0 1 2 3 4 addressing each
 

00:38:12.880 --> 00:38:16.890 align:start position:0%
they go 0 1 2 3 4 addressing each
channel<00:38:13.390><c> and</c><00:38:13.829><c> then</c><00:38:14.829><c> a</c><00:38:14.880><c> I'm</c><00:38:15.880><c> using</c><00:38:16.240><c> a</c><00:38:16.420><c> black</c>

00:38:16.890 --> 00:38:16.900 align:start position:0%
channel and then a I'm using a black
 

00:38:16.900 --> 00:38:21.809 align:start position:0%
channel and then a I'm using a black
circle<00:38:17.200><c> to</c><00:38:17.500><c> here</c><00:38:17.980><c> to</c><00:38:18.130><c> represent</c><00:38:19.119><c> a</c><00:38:20.819><c> cross</c>

00:38:21.809 --> 00:38:21.819 align:start position:0%
circle to here to represent a cross
 

00:38:21.819 --> 00:38:24.539 align:start position:0%
circle to here to represent a cross
point<00:38:22.119><c> that</c><00:38:22.270><c> has</c><00:38:22.390><c> a</c><00:38:22.680><c> nonzero</c><00:38:23.680><c> gain</c><00:38:24.250><c> and</c><00:38:24.460><c> then</c>

00:38:24.539 --> 00:38:24.549 align:start position:0%
point that has a nonzero gain and then
 

00:38:24.549 --> 00:38:28.079 align:start position:0%
point that has a nonzero gain and then
the<00:38:24.670><c> open</c><00:38:25.030><c> circles</c><00:38:25.390><c> are</c><00:38:25.980><c> show</c><00:38:26.980><c> 0</c><00:38:27.339><c> game</c><00:38:27.609><c> so</c><00:38:27.819><c> here</c>

00:38:28.079 --> 00:38:28.089 align:start position:0%
the open circles are show 0 game so here
 

00:38:28.089 --> 00:38:31.260 align:start position:0%
the open circles are show 0 game so here
I've<00:38:28.270><c> got</c><00:38:28.299><c> an</c><00:38:28.780><c> input</c><00:38:29.170><c> x</c><00:38:29.319><c> 0</c><00:38:29.710><c> is</c><00:38:29.770><c> being</c><00:38:30.190><c> mixed</c><00:38:30.460><c> to</c>

00:38:31.260 --> 00:38:31.270 align:start position:0%
I've got an input x 0 is being mixed to
 

00:38:31.270 --> 00:38:34.470 align:start position:0%
I've got an input x 0 is being mixed to
output<00:38:31.690><c> buses</c><00:38:32.109><c> 0</c><00:38:32.799><c> and</c><00:38:32.980><c> 1</c><00:38:33.190><c> and</c><00:38:33.460><c> input</c><00:38:33.970><c> bus</c><00:38:34.150><c> one</c>

00:38:34.470 --> 00:38:34.480 align:start position:0%
output buses 0 and 1 and input bus one
 

00:38:34.480 --> 00:38:39.780 align:start position:0%
output buses 0 and 1 and input bus one
is<00:38:34.829><c> being</c><00:38:35.829><c> mixed</c><00:38:36.010><c> just</c><00:38:36.670><c> two</c><00:38:36.880><c> output</c><00:38:37.720><c> bus</c><00:38:37.900><c> 0</c><00:38:38.790><c> so</c>

00:38:39.780 --> 00:38:39.790 align:start position:0%
is being mixed just two output bus 0 so
 

00:38:39.790 --> 00:38:42.030 align:start position:0%
is being mixed just two output bus 0 so
that's<00:38:39.940><c> that's</c><00:38:40.299><c> how</c><00:38:40.510><c> its</c><00:38:40.660><c> laid</c><00:38:40.809><c> out</c><00:38:41.040><c> and</c>

00:38:42.030 --> 00:38:42.040 align:start position:0%
that's that's how its laid out and
 

00:38:42.040 --> 00:38:45.240 align:start position:0%
that's that's how its laid out and
you're<00:38:42.670><c> only</c><00:38:42.819><c> paying</c><00:38:43.089><c> CPU</c><00:38:43.720><c> cost</c><00:38:44.140><c> for</c><00:38:44.440><c> the</c><00:38:44.559><c> for</c>

00:38:45.240 --> 00:38:45.250 align:start position:0%
you're only paying CPU cost for the for
 

00:38:45.250 --> 00:38:47.880 align:start position:0%
you're only paying CPU cost for the for
the<00:38:45.280><c> black</c><00:38:45.579><c> circle</c><00:38:45.819><c> so</c><00:38:46.270><c> as</c><00:38:46.420><c> you</c><00:38:46.660><c> turn</c><00:38:47.500><c> out</c><00:38:47.650><c> more</c>

00:38:47.880 --> 00:38:47.890 align:start position:0%
the black circle so as you turn out more
 

00:38:47.890 --> 00:38:49.339 align:start position:0%
the black circle so as you turn out more
gains<00:38:48.160><c> fuel</c>

00:38:49.339 --> 00:38:49.349 align:start position:0%
gains fuel
 

00:38:49.349 --> 00:38:55.219 align:start position:0%
gains fuel
you'll<00:38:51.229><c> have</c><00:38:52.229><c> more</c><00:38:52.470><c> cpu</c><00:38:52.920><c> load</c><00:38:53.989><c> okay</c><00:38:54.989><c> so</c><00:38:55.049><c> i'm</c>

00:38:55.219 --> 00:38:55.229 align:start position:0%
you'll have more cpu load okay so i'm
 

00:38:55.229 --> 00:39:07.910 align:start position:0%
you'll have more cpu load okay so i'm
going<00:38:55.349><c> to</c><00:38:55.440><c> demonstrate</c><00:38:56.279><c> that</c><00:38:56.849><c> now</c><00:39:06.859><c> okay</c><00:39:07.859><c> so</c>

00:39:07.910 --> 00:39:07.920 align:start position:0%
going to demonstrate that now okay so
 

00:39:07.920 --> 00:39:11.569 align:start position:0%
going to demonstrate that now okay so
here's<00:39:08.190><c> the</c><00:39:08.249><c> matrix</c><00:39:08.640><c> mixer</c><00:39:08.940><c> or</c><00:39:09.150><c> just</c><00:39:10.079><c> my</c><00:39:10.289><c> UI</c><00:39:11.249><c> on</c>

00:39:11.569 --> 00:39:11.579 align:start position:0%
here's the matrix mixer or just my UI on
 

00:39:11.579 --> 00:39:16.249 align:start position:0%
here's the matrix mixer or just my UI on
top<00:39:11.609><c> of</c><00:39:11.940><c> the</c><00:39:12.029><c> matrix</c><00:39:12.299><c> mixer</c><00:39:14.479><c> I've</c><00:39:15.479><c> got</c><00:39:16.019><c> two</c>

00:39:16.249 --> 00:39:16.259 align:start position:0%
top of the matrix mixer I've got two
 

00:39:16.259 --> 00:39:19.700 align:start position:0%
top of the matrix mixer I've got two
stereo<00:39:17.539><c> input</c><00:39:18.539><c> buses</c><00:39:18.930><c> coming</c><00:39:19.170><c> in</c><00:39:19.410><c> and</c><00:39:19.619><c> I've</c>

00:39:19.700 --> 00:39:19.710 align:start position:0%
stereo input buses coming in and I've
 

00:39:19.710 --> 00:39:23.620 align:start position:0%
stereo input buses coming in and I've
got<00:39:19.999><c> five</c><00:39:20.999><c> channels</c><00:39:21.359><c> going</c><00:39:21.869><c> out</c><00:39:21.989><c> in</c><00:39:22.229><c> one</c><00:39:22.440><c> bus</c>

00:39:23.620 --> 00:39:23.630 align:start position:0%
got five channels going out in one bus
 

00:39:23.630 --> 00:39:28.339 align:start position:0%
got five channels going out in one bus
so<00:39:24.630><c> if</c><00:39:24.720><c> I</c><00:39:24.779><c> hit</c><00:39:24.930><c> play</c><00:39:25.259><c> here</c><00:39:26.509><c> you</c><00:39:27.509><c> can</c><00:39:27.660><c> see</c><00:39:27.900><c> on</c><00:39:28.200><c> the</c>

00:39:28.339 --> 00:39:28.349 align:start position:0%
so if I hit play here you can see on the
 

00:39:28.349 --> 00:39:31.999 align:start position:0%
so if I hit play here you can see on the
left<00:39:28.619><c> these</c><00:39:29.130><c> are</c><00:39:29.339><c> the</c><00:39:29.430><c> pre</c><00:39:29.819><c> fader</c><00:39:31.009><c> input</c>

00:39:31.999 --> 00:39:32.009 align:start position:0%
left these are the pre fader input
 

00:39:32.009 --> 00:39:35.329 align:start position:0%
left these are the pre fader input
meters<00:39:33.140><c> and</c><00:39:34.140><c> turn</c><00:39:34.319><c> out</c><00:39:34.440><c> my</c><00:39:34.529><c> master</c><00:39:34.890><c> gain</c><00:39:35.069><c> here</c>

00:39:35.329 --> 00:39:35.339 align:start position:0%
meters and turn out my master gain here
 

00:39:35.339 --> 00:39:40.190 align:start position:0%
meters and turn out my master gain here
and<00:39:35.609><c> then</c><00:39:36.150><c> I'm</c><00:39:36.589><c> so</c><00:39:37.589><c> Isaiah</c><00:39:38.599><c> so</c><00:39:39.599><c> I</c><00:39:39.630><c> turn</c><00:39:39.989><c> these</c>

00:39:40.190 --> 00:39:40.200 align:start position:0%
and then I'm so Isaiah so I turn these
 

00:39:40.200 --> 00:39:45.680 align:start position:0%
and then I'm so Isaiah so I turn these
input<00:39:40.589><c> faders</c><00:39:40.920><c> on</c><00:39:43.130><c> you</c><00:39:44.130><c> can</c><00:39:44.279><c> see</c><00:39:44.549><c> this</c><00:39:45.479><c> is</c><00:39:45.660><c> the</c>

00:39:45.680 --> 00:39:45.690 align:start position:0%
input faders on you can see this is the
 

00:39:45.690 --> 00:39:48.620 align:start position:0%
input faders on you can see this is the
postpaid<00:39:46.259><c> input</c><00:39:46.829><c> meter</c><00:39:47.150><c> and</c><00:39:48.150><c> I'll</c><00:39:48.299><c> turn</c><00:39:48.479><c> on</c>

00:39:48.620 --> 00:39:48.630 align:start position:0%
postpaid input meter and I'll turn on
 

00:39:48.630 --> 00:39:50.089 align:start position:0%
postpaid input meter and I'll turn on
these<00:39:48.779><c> cross</c><00:39:49.049><c> point</c><00:39:49.319><c> gain</c><00:39:49.529><c> so</c><00:39:49.739><c> I</c><00:39:49.769><c> want</c><00:39:49.890><c> to</c><00:39:49.950><c> map</c>

00:39:50.089 --> 00:39:50.099 align:start position:0%
these cross point gain so I want to map
 

00:39:50.099 --> 00:39:52.999 align:start position:0%
these cross point gain so I want to map
this<00:39:50.279><c> challenge</c><00:39:50.789><c> to</c><00:39:51.499><c> channel</c><00:39:52.499><c> 0</c><00:39:52.799><c> of</c><00:39:52.890><c> the</c>

00:39:52.999 --> 00:39:53.009 align:start position:0%
this challenge to channel 0 of the
 

00:39:53.009 --> 00:39:57.799 align:start position:0%
this challenge to channel 0 of the
output<00:39:53.339><c> no</c><00:39:53.549><c> map</c><00:39:53.759><c> this</c><00:39:54.710><c> channel</c><00:39:55.710><c> 1</c><00:39:55.890><c> into</c><00:39:56.809><c> output</c>

00:39:57.799 --> 00:39:57.809 align:start position:0%
output no map this channel 1 into output
 

00:39:57.809 --> 00:40:07.100 align:start position:0%
output no map this channel 1 into output
1<00:39:58.079><c> I</c><00:39:58.400><c> channel</c><00:39:59.400><c> one</c><00:39:59.549><c> of</c><00:39:59.670><c> the</c><00:39:59.759><c> output</c>

00:40:07.100 --> 00:40:07.110 align:start position:0%
 
 

00:40:07.110 --> 00:40:11.640 align:start position:0%
 
and<00:40:08.110><c> then</c><00:40:08.470><c> I</c><00:40:08.590><c> can</c><00:40:10.230><c> sort</c><00:40:11.230><c> of</c><00:40:11.320><c> put</c><00:40:11.500><c> those</c>

00:40:11.640 --> 00:40:11.650 align:start position:0%
and then I can sort of put those
 

00:40:11.650 --> 00:40:21.480 align:start position:0%
and then I can sort of put those
backwards<00:40:12.160><c> into</c><00:40:12.400><c> the</c><00:40:13.260><c> surround</c><00:40:14.260><c> channels</c>

00:40:21.480 --> 00:40:21.490 align:start position:0%
 
 

00:40:21.490 --> 00:40:24.660 align:start position:0%
 
okay<00:40:22.710><c> so</c><00:40:23.710><c> you</c><00:40:23.770><c> can</c><00:40:23.890><c> see</c><00:40:24.010><c> the</c><00:40:24.130><c> metering</c><00:40:24.400><c> on</c><00:40:24.580><c> the</c>

00:40:24.660 --> 00:40:24.670 align:start position:0%
okay so you can see the metering on the
 

00:40:24.670 --> 00:40:26.550 align:start position:0%
okay so you can see the metering on the
cross<00:40:24.880><c> points</c><00:40:25.330><c> here</c><00:40:25.630><c> in</c><00:40:25.930><c> the</c><00:40:26.050><c> metering</c><00:40:26.290><c> on</c><00:40:26.440><c> the</c>

00:40:26.550 --> 00:40:26.560 align:start position:0%
cross points here in the metering on the
 

00:40:26.560 --> 00:40:43.010 align:start position:0%
cross points here in the metering on the
output<00:40:38.460><c> on</c><00:40:39.460><c> mixing</c><00:40:39.790><c> another</c><00:40:40.110><c> found</c><00:40:41.110><c> in</c><00:40:41.290><c> here</c>

00:40:43.010 --> 00:40:43.020 align:start position:0%
output on mixing another found in here
 

00:40:43.020 --> 00:40:46.290 align:start position:0%
output on mixing another found in here
and<00:40:44.020><c> I</c><00:40:44.170><c> can</c><00:40:44.350><c> mix</c><00:40:45.130><c> it</c><00:40:45.280><c> also</c><00:40:45.520><c> into</c><00:40:45.730><c> the</c><00:40:45.760><c> surrounds</c>

00:40:46.290 --> 00:40:46.300 align:start position:0%
and I can mix it also into the surrounds
 

00:40:46.300 --> 00:40:48.060 align:start position:0%
and I can mix it also into the surrounds
here

00:40:48.060 --> 00:40:48.070 align:start position:0%
here
 

00:40:48.070 --> 00:40:53.509 align:start position:0%
here
[Applause]

00:40:53.509 --> 00:40:53.519 align:start position:0%
 
 

00:40:53.519 --> 00:41:00.839 align:start position:0%
 
this<00:40:54.149><c> is</c><00:40:54.329><c> this</c><00:40:54.659><c> is</c><00:40:54.839><c> center</c><00:40:55.229><c> here</c>

00:41:00.839 --> 00:41:00.849 align:start position:0%
 
 

00:41:00.849 --> 00:41:04.140 align:start position:0%
 
okay<00:41:01.599><c> so</c><00:41:01.660><c> let's</c><00:41:01.869><c> shows</c><00:41:02.140><c> the</c><00:41:02.849><c> basically</c><00:41:03.849><c> the</c>

00:41:04.140 --> 00:41:04.150 align:start position:0%
okay so let's shows the basically the
 

00:41:04.150 --> 00:41:10.410 align:start position:0%
okay so let's shows the basically the
studying<00:41:05.019><c> the</c><00:41:05.109><c> levels</c><00:41:05.440><c> and</c><00:41:05.799><c> the</c><00:41:06.749><c> metering</c><00:41:09.420><c> in</c>

00:41:10.410 --> 00:41:10.420 align:start position:0%
studying the levels and the metering in
 

00:41:10.420 --> 00:41:14.219 align:start position:0%
studying the levels and the metering in
addition<00:41:10.960><c> you</c><00:41:11.759><c> can</c><00:41:12.809><c> enable</c><00:41:13.809><c> and</c><00:41:14.109><c> disable</c>

00:41:14.219 --> 00:41:14.229 align:start position:0%
addition you can enable and disable
 

00:41:14.229 --> 00:41:16.410 align:start position:0%
addition you can enable and disable
buses<00:41:14.979><c> and</c><00:41:15.220><c> that</c><00:41:15.309><c> basically</c><00:41:15.609><c> turns</c><00:41:16.180><c> off</c>

00:41:16.410 --> 00:41:16.420 align:start position:0%
buses and that basically turns off
 

00:41:16.420 --> 00:41:21.059 align:start position:0%
buses and that basically turns off
pulling<00:41:17.130><c> for</c><00:41:18.130><c> that</c><00:41:18.279><c> branch</c><00:41:18.849><c> of</c><00:41:19.089><c> the</c><00:41:19.269><c> of</c><00:41:19.509><c> the</c><00:41:20.410><c> on</c>

00:41:21.059 --> 00:41:21.069 align:start position:0%
pulling for that branch of the of the on
 

00:41:21.069 --> 00:41:22.979 align:start position:0%
pulling for that branch of the of the on
that<00:41:21.099><c> bus</c><00:41:21.489><c> of</c><00:41:21.729><c> input</c><00:41:22.089><c> so</c><00:41:22.299><c> basically</c><00:41:22.779><c> it's</c><00:41:22.930><c> like</c>

00:41:22.979 --> 00:41:22.989 align:start position:0%
that bus of input so basically it's like
 

00:41:22.989 --> 00:41:29.539 align:start position:0%
that bus of input so basically it's like
pausing<00:41:23.710><c> a</c><00:41:23.829><c> section</c><00:41:24.789><c> of</c><00:41:24.910><c> your</c><00:41:25.950><c> your</c><00:41:26.950><c> input</c><00:41:27.369><c> oh</c>

00:41:29.539 --> 00:41:29.549 align:start position:0%
pausing a section of your your input oh
 

00:41:29.549 --> 00:41:34.859 align:start position:0%
pausing a section of your your input oh
yeah<00:41:30.549><c> so</c><00:41:31.619><c> all</c><00:41:32.619><c> right</c><00:41:32.769><c> now</c><00:41:33.119><c> just</c><00:41:34.119><c> I</c><00:41:34.359><c> implemented</c>

00:41:34.859 --> 00:41:34.869 align:start position:0%
yeah so all right now just I implemented
 

00:41:34.869 --> 00:41:39.019 align:start position:0%
yeah so all right now just I implemented
this<00:41:35.049><c> so</c><00:41:35.289><c> i</c><00:41:35.319><c> can</c><00:41:35.680><c> just</c><00:41:36.130><c> demonstrate</c><00:41:36.729><c> a</c><00:41:37.799><c> that</c>

00:41:39.019 --> 00:41:39.029 align:start position:0%
this so i can just demonstrate a that
 

00:41:39.029 --> 00:41:40.910 align:start position:0%
this so i can just demonstrate a that
you<00:41:40.029><c> know</c><00:41:40.119><c> you</c><00:41:40.180><c> can</c><00:41:40.359><c> automate</c><00:41:40.720><c> these</c>

00:41:40.910 --> 00:41:40.920 align:start position:0%
you know you can automate these
 

00:41:40.920 --> 00:41:43.700 align:start position:0%
you know you can automate these
programmatically<00:41:41.920><c> to</c><00:41:42.369><c> do</c><00:41:42.549><c> in</c><00:41:42.819><c> kind</c><00:41:43.180><c> of</c>

00:41:43.700 --> 00:41:43.710 align:start position:0%
programmatically to do in kind of
 

00:41:43.710 --> 00:41:48.749 align:start position:0%
programmatically to do in kind of
panning<00:41:44.710><c> algorithm</c><00:41:45.130><c> you</c><00:41:45.249><c> wanted</c><00:41:45.460><c> to</c><00:41:45.549><c> do</c><00:41:47.759><c> one</c>

00:41:48.749 --> 00:41:48.759 align:start position:0%
panning algorithm you wanted to do one
 

00:41:48.759 --> 00:41:50.999 align:start position:0%
panning algorithm you wanted to do one
of<00:41:48.849><c> the</c><00:41:49.259><c> kind</c><00:41:50.259><c> of</c><00:41:50.289><c> interesting</c><00:41:50.710><c> things</c><00:41:50.890><c> you</c>

00:41:50.999 --> 00:41:51.009 align:start position:0%
of the kind of interesting things you
 

00:41:51.009 --> 00:41:52.079 align:start position:0%
of the kind of interesting things you
can<00:41:51.130><c> do</c><00:41:51.220><c> with</c><00:41:51.309><c> a</c><00:41:51.369><c> matrix</c><00:41:51.700><c> mixer</c><00:41:51.970><c> is</c>

00:41:52.079 --> 00:41:52.089 align:start position:0%
can do with a matrix mixer is
 

00:41:52.089 --> 00:41:55.489 align:start position:0%
can do with a matrix mixer is
multi-channel<00:41:53.019><c> panning</c><00:41:53.529><c> and</c><00:41:53.619><c> various</c>

00:41:55.489 --> 00:41:55.499 align:start position:0%
multi-channel panning and various
 

00:41:55.499 --> 00:42:08.710 align:start position:0%
multi-channel panning and various
manners

00:42:08.710 --> 00:42:08.720 align:start position:0%
 
 

00:42:08.720 --> 00:42:14.470 align:start position:0%
 
so<00:42:09.720><c> that's</c><00:42:09.869><c> just</c><00:42:09.990><c> the</c><00:42:10.200><c> rear</c>

00:42:14.470 --> 00:42:14.480 align:start position:0%
 
 

00:42:14.480 --> 00:42:18.960 align:start position:0%
 
ok

00:42:18.960 --> 00:42:18.970 align:start position:0%
 
 

00:42:18.970 --> 00:42:21.990 align:start position:0%
 
I<00:42:19.050><c> can</c><00:42:20.050><c> also</c><00:42:20.170><c> disable</c><00:42:20.650><c> the</c><00:42:20.890><c> output</c><00:42:21.250><c> not</c><00:42:21.760><c> just</c>

00:42:21.990 --> 00:42:22.000 align:start position:0%
I can also disable the output not just
 

00:42:22.000 --> 00:42:29.730 align:start position:0%
I can also disable the output not just
needs<00:42:22.240><c> the</c><00:42:22.360><c> basement</c>

00:42:29.730 --> 00:42:29.740 align:start position:0%
 
 

00:42:29.740 --> 00:42:35.790 align:start position:0%
 
okay<00:42:30.740><c> so</c><00:42:30.800><c> that's</c><00:42:31.100><c> that's</c><00:42:31.580><c> the</c><00:42:31.760><c> matrix</c><00:42:32.090><c> mixer</c>

00:42:35.790 --> 00:42:35.800 align:start position:0%
 
 

00:42:35.800 --> 00:42:46.920 align:start position:0%
 
and<00:42:36.800><c> get</c><00:42:36.950><c> back</c><00:42:37.070><c> to</c><00:42:37.160><c> slides</c><00:42:37.400><c> now</c>

00:42:46.920 --> 00:42:46.930 align:start position:0%
 
 

00:42:46.930 --> 00:42:49.500 align:start position:0%
 
alright<00:42:47.619><c> so</c><00:42:47.920><c> in</c><00:42:48.490><c> order</c><00:42:48.640><c> to</c><00:42:48.760><c> set</c><00:42:48.970><c> the</c><00:42:49.059><c> gains</c><00:42:49.270><c> on</c>

00:42:49.500 --> 00:42:49.510 align:start position:0%
alright so in order to set the gains on
 

00:42:49.510 --> 00:42:52.950 align:start position:0%
alright so in order to set the gains on
the<00:42:49.569><c> matrix</c><00:42:49.869><c> mixer</c><00:42:50.700><c> you</c><00:42:51.700><c> can</c><00:42:52.059><c> set</c><00:42:52.390><c> all</c><00:42:52.599><c> gains</c>

00:42:52.950 --> 00:42:52.960 align:start position:0%
the matrix mixer you can set all gains
 

00:42:52.960 --> 00:42:56.490 align:start position:0%
the matrix mixer you can set all gains
from<00:42:53.170><c> global</c><00:42:53.619><c> scope</c><00:42:53.829><c> Audio</c><00:42:54.760><c> Units</c><00:42:55.410><c> when</c><00:42:56.410><c> you</c>

00:42:56.490 --> 00:42:56.500 align:start position:0%
from global scope Audio Units when you
 

00:42:56.500 --> 00:42:59.040 align:start position:0%
from global scope Audio Units when you
set<00:42:56.680><c> parameters</c><00:42:56.890><c> you</c><00:42:57.250><c> set</c><00:42:57.510><c> parameters</c><00:42:58.510><c> using</c>

00:42:59.040 --> 00:42:59.050 align:start position:0%
set parameters you set parameters using
 

00:42:59.050 --> 00:43:01.620 align:start position:0%
set parameters you set parameters using
either<00:42:59.460><c> input</c><00:43:00.460><c> scope</c><00:43:00.700><c> output</c><00:43:01.180><c> scope</c><00:43:01.420><c> for</c>

00:43:01.620 --> 00:43:01.630 align:start position:0%
either input scope output scope for
 

00:43:01.630 --> 00:43:05.940 align:start position:0%
either input scope output scope for
global<00:43:01.960><c> scope</c><00:43:02.170><c> and</c><00:43:04.380><c> with</c><00:43:05.380><c> the</c><00:43:05.470><c> matrix</c><00:43:05.740><c> mixer</c>

00:43:05.940 --> 00:43:05.950 align:start position:0%
global scope and with the matrix mixer
 

00:43:05.950 --> 00:43:07.319 align:start position:0%
global scope and with the matrix mixer
you<00:43:06.040><c> can</c><00:43:06.130><c> set</c><00:43:06.339><c> everything</c><00:43:06.430><c> from</c><00:43:06.790><c> global</c><00:43:07.119><c> scope</c>

00:43:07.319 --> 00:43:07.329 align:start position:0%
you can set everything from global scope
 

00:43:07.329 --> 00:43:09.420 align:start position:0%
you can set everything from global scope
although<00:43:08.170><c> you</c><00:43:08.230><c> can</c><00:43:08.470><c> set</c><00:43:08.710><c> input</c><00:43:08.890><c> gains</c><00:43:09.250><c> and</c>

00:43:09.420 --> 00:43:09.430 align:start position:0%
although you can set input gains and
 

00:43:09.430 --> 00:43:12.569 align:start position:0%
although you can set input gains and
output<00:43:09.640><c> gains</c><00:43:09.849><c> from</c><00:43:10.079><c> from</c><00:43:11.400><c> input</c><00:43:12.400><c> or</c><00:43:12.520><c> output</c>

00:43:12.569 --> 00:43:12.579 align:start position:0%
output gains from from input or output
 

00:43:12.579 --> 00:43:16.710 align:start position:0%
output gains from from input or output
scope<00:43:13.030><c> but</c><00:43:13.720><c> this</c><00:43:14.520><c> shows</c><00:43:15.520><c> how</c><00:43:15.940><c> you</c><00:43:16.569><c> would</c>

00:43:16.710 --> 00:43:16.720 align:start position:0%
scope but this shows how you would
 

00:43:16.720 --> 00:43:19.400 align:start position:0%
scope but this shows how you would
specify<00:43:16.960><c> a</c><00:43:17.230><c> certain</c><00:43:17.650><c> gain</c><00:43:17.890><c> in</c><00:43:18.160><c> the</c><00:43:18.250><c> crosspoint</c>

00:43:19.400 --> 00:43:19.410 align:start position:0%
specify a certain gain in the crosspoint
 

00:43:19.410 --> 00:43:24.510 align:start position:0%
specify a certain gain in the crosspoint
cross<00:43:20.410><c> points</c><00:43:20.710><c> of</c><00:43:20.800><c> the</c><00:43:20.859><c> matrix</c><00:43:21.869><c> you</c><00:43:22.869><c> would</c><00:43:23.619><c> you</c>

00:43:24.510 --> 00:43:24.520 align:start position:0%
cross points of the matrix you would you
 

00:43:24.520 --> 00:43:27.290 align:start position:0%
cross points of the matrix you would you
need<00:43:24.670><c> to</c><00:43:24.880><c> specify</c><00:43:25.869><c> these</c><00:43:26.109><c> using</c><00:43:26.589><c> the</c><00:43:26.680><c> element</c>

00:43:27.290 --> 00:43:27.300 align:start position:0%
need to specify these using the element
 

00:43:27.300 --> 00:43:31.230 align:start position:0%
need to specify these using the element
argument<00:43:28.300><c> to</c><00:43:28.599><c> a</c><00:43:28.630><c> unit</c><00:43:29.470><c> set</c><00:43:29.619><c> parameter</c><00:43:30.040><c> and</c><00:43:30.240><c> you</c>

00:43:31.230 --> 00:43:31.240 align:start position:0%
argument to a unit set parameter and you
 

00:43:31.240 --> 00:43:32.910 align:start position:0%
argument to a unit set parameter and you
do<00:43:31.359><c> that</c><00:43:31.390><c> by</c><00:43:31.540><c> shifting</c><00:43:32.200><c> the</c><00:43:32.260><c> input</c><00:43:32.619><c> channel</c>

00:43:32.910 --> 00:43:32.920 align:start position:0%
do that by shifting the input channel
 

00:43:32.920 --> 00:43:36.059 align:start position:0%
do that by shifting the input channel
left<00:43:33.099><c> by</c><00:43:33.250><c> 16</c><00:43:33.720><c> bits</c><00:43:34.720><c> and</c><00:43:35.020><c> then</c><00:43:35.079><c> pouring</c><00:43:35.800><c> that</c>

00:43:36.059 --> 00:43:36.069 align:start position:0%
left by 16 bits and then pouring that
 

00:43:36.069 --> 00:43:38.520 align:start position:0%
left by 16 bits and then pouring that
with<00:43:36.220><c> the</c><00:43:36.339><c> output</c><00:43:36.640><c> channel</c><00:43:37.109><c> and</c><00:43:38.109><c> then</c><00:43:38.230><c> for</c>

00:43:38.520 --> 00:43:38.530 align:start position:0%
with the output channel and then for
 

00:43:38.530 --> 00:43:40.589 align:start position:0%
with the output channel and then for
studying<00:43:38.859><c> an</c><00:43:38.950><c> input</c><00:43:39.220><c> gain</c><00:43:39.430><c> you</c><00:43:40.210><c> said</c><00:43:40.450><c> output</c>

00:43:40.589 --> 00:43:40.599 align:start position:0%
studying an input gain you said output
 

00:43:40.599 --> 00:43:47.430 align:start position:0%
studying an input gain you said output
channel<00:43:42.510><c> 22</c><00:43:43.510><c> hex</c><00:43:44.230><c> all</c><00:43:44.470><c> s</c><00:43:44.680><c> or</c><00:43:45.430><c> 4s</c><00:43:45.910><c> and</c><00:43:46.180><c> then</c><00:43:46.440><c> for</c>

00:43:47.430 --> 00:43:47.440 align:start position:0%
channel 22 hex all s or 4s and then for
 

00:43:47.440 --> 00:43:48.870 align:start position:0%
channel 22 hex all s or 4s and then for
that<00:43:47.710><c> with</c><00:43:47.890><c> the</c><00:43:47.980><c> input</c><00:43:48.099><c> channel</c><00:43:48.520><c> strips</c><00:43:48.700><c> less</c>

00:43:48.870 --> 00:43:48.880 align:start position:0%
that with the input channel strips less
 

00:43:48.880 --> 00:43:51.150 align:start position:0%
that with the input channel strips less
Sixteen<00:43:49.300><c> and</c><00:43:49.540><c> for</c><00:43:50.230><c> the</c><00:43:50.290><c> output</c><00:43:50.589><c> gain</c><00:43:50.770><c> you</c><00:43:51.040><c> do</c>

00:43:51.150 --> 00:43:51.160 align:start position:0%
Sixteen and for the output gain you do
 

00:43:51.160 --> 00:43:53.309 align:start position:0%
Sixteen and for the output gain you do
the<00:43:51.339><c> converse</c><00:43:52.030><c> operation</c><00:43:52.599><c> and</c><00:43:52.869><c> then</c><00:43:52.960><c> master</c>

00:43:53.309 --> 00:43:53.319 align:start position:0%
the converse operation and then master
 

00:43:53.319 --> 00:43:58.799 align:start position:0%
the converse operation and then master
gayness<00:43:53.680><c> all</c><00:43:54.250><c> s</c><00:43:56.490><c> okay</c><00:43:57.490><c> so</c><00:43:57.579><c> you</c><00:43:57.910><c> can</c><00:43:58.089><c> as</c><00:43:58.270><c> you</c><00:43:58.599><c> saw</c>

00:43:58.799 --> 00:43:58.809 align:start position:0%
gayness all s okay so you can as you saw
 

00:43:58.809 --> 00:44:01.799 align:start position:0%
gayness all s okay so you can as you saw
you<00:43:58.869><c> can</c><00:43:59.109><c> get</c><00:43:59.260><c> metering</c><00:43:59.680><c> on</c><00:44:00.450><c> prepaid</c><00:44:01.450><c> and</c>

00:44:01.799 --> 00:44:01.809 align:start position:0%
you can get metering on prepaid and
 

00:44:01.809 --> 00:44:03.750 align:start position:0%
you can get metering on prepaid and
postpaid<00:44:01.839><c> metering</c><00:44:02.589><c> on</c><00:44:02.680><c> inputs</c><00:44:03.069><c> and</c><00:44:03.309><c> postpaid</c>

00:44:03.750 --> 00:44:03.760 align:start position:0%
postpaid metering on inputs and postpaid
 

00:44:03.760 --> 00:44:08.039 align:start position:0%
postpaid metering on inputs and postpaid
metering<00:44:04.150><c> on</c><00:44:04.240><c> outputs</c><00:44:04.630><c> and</c><00:44:04.809><c> cross</c><00:44:05.500><c> points</c><00:44:07.049><c> in</c>

00:44:08.039 --> 00:44:08.049 align:start position:0%
metering on outputs and cross points in
 

00:44:08.049 --> 00:44:09.450 align:start position:0%
metering on outputs and cross points in
order<00:44:08.200><c> to</c><00:44:08.349><c> get</c><00:44:08.470><c> metering</c><00:44:08.920><c> you</c><00:44:08.980><c> need</c><00:44:09.130><c> to</c><00:44:09.220><c> set</c>

00:44:09.450 --> 00:44:09.460 align:start position:0%
order to get metering you need to set
 

00:44:09.460 --> 00:44:11.579 align:start position:0%
order to get metering you need to set
audio<00:44:09.910><c> unit</c><00:44:10.180><c> property</c><00:44:10.510><c> meeting</c><00:44:10.809><c> metering</c>

00:44:11.579 --> 00:44:11.589 align:start position:0%
audio unit property meeting metering
 

00:44:11.589 --> 00:44:16.940 align:start position:0%
audio unit property meeting metering
mode<00:44:11.880><c> 21</c><00:44:13.740><c> metering</c><00:44:14.740><c> does</c><00:44:15.309><c> take</c><00:44:15.640><c> some</c><00:44:15.790><c> cpu</c><00:44:16.150><c> so</c>

00:44:16.940 --> 00:44:16.950 align:start position:0%
mode 21 metering does take some cpu so
 

00:44:16.950 --> 00:44:20.400 align:start position:0%
mode 21 metering does take some cpu so
you<00:44:17.950><c> want</c><00:44:18.099><c> to</c><00:44:18.160><c> have</c><00:44:18.250><c> the</c><00:44:18.460><c> option</c><00:44:19.450><c> to</c><00:44:19.690><c> turn</c><00:44:20.290><c> it</c>

00:44:20.400 --> 00:44:20.410 align:start position:0%
you want to have the option to turn it
 

00:44:20.410 --> 00:44:26.309 align:start position:0%
you want to have the option to turn it
off<00:44:20.500><c> if</c><00:44:20.710><c> you</c><00:44:20.859><c> don't</c><00:44:20.890><c> need</c><00:44:21.160><c> it</c><00:44:21.280><c> and</c><00:44:23.460><c> so</c><00:44:24.460><c> and</c><00:44:25.319><c> the</c>

00:44:26.309 --> 00:44:26.319 align:start position:0%
off if you don't need it and so and the
 

00:44:26.319 --> 00:44:28.920 align:start position:0%
off if you don't need it and so and the
parameters<00:44:26.770><c> for</c><00:44:27.609><c> metering</c><00:44:27.940><c> are</c><00:44:28.299><c> accessing</c>

00:44:28.920 --> 00:44:28.930 align:start position:0%
parameters for metering are accessing
 

00:44:28.930 --> 00:44:32.819 align:start position:0%
parameters for metering are accessing
the<00:44:29.140><c> same</c><00:44:30.359><c> method</c><00:44:31.359><c> as</c><00:44:31.420><c> the</c><00:44:31.599><c> gains</c><00:44:31.809><c> by</c><00:44:32.079><c> shifting</c>

00:44:32.819 --> 00:44:32.829 align:start position:0%
the same method as the gains by shifting
 

00:44:32.829 --> 00:44:36.710 align:start position:0%
the same method as the gains by shifting
the<00:44:33.150><c> input</c><00:44:34.150><c> last-16</c><00:44:34.920><c> in</c><00:44:35.920><c> the</c><00:44:36.099><c> element</c><00:44:36.490><c> i'm</c>

00:44:36.710 --> 00:44:36.720 align:start position:0%
the input last-16 in the element i'm
 

00:44:36.720 --> 00:44:42.030 align:start position:0%
the input last-16 in the element i'm
wearing<00:44:37.720><c> with</c><00:44:37.839><c> the</c><00:44:37.869><c> output</c>

00:44:42.030 --> 00:44:42.040 align:start position:0%
 
 

00:44:42.040 --> 00:44:45.390 align:start position:0%
 
okay<00:44:43.040><c> so</c><00:44:43.100><c> the</c><00:44:43.700><c> bus</c><00:44:43.880><c> enable</c><00:44:44.270><c> that</c><00:44:44.360><c> I</c><00:44:44.480><c> showed</c><00:44:44.780><c> you</c>

00:44:45.390 --> 00:44:45.400 align:start position:0%
okay so the bus enable that I showed you
 

00:44:45.400 --> 00:44:48.820 align:start position:0%
okay so the bus enable that I showed you
major<00:44:46.400><c> mr.</c><00:44:46.850><c> parameter</c><00:44:47.390><c> bus</c><00:44:47.600><c> unable</c><00:44:47.900><c> or</c><00:44:48.170><c> enable</c>

00:44:48.820 --> 00:44:48.830 align:start position:0%
major mr. parameter bus unable or enable
 

00:44:48.830 --> 00:44:52.480 align:start position:0%
major mr. parameter bus unable or enable
if<00:44:49.820><c> a</c><00:44:50.420><c> input</c><00:44:50.870><c> buses</c><00:44:51.320><c> disabled</c><00:44:51.980><c> then</c><00:44:52.250><c> it</c><00:44:52.370><c> won't</c>

00:44:52.480 --> 00:44:52.490 align:start position:0%
if a input buses disabled then it won't
 

00:44:52.490 --> 00:44:54.430 align:start position:0%
if a input buses disabled then it won't
be<00:44:52.640><c> pulled</c><00:44:52.970><c> pulled</c><00:44:53.510><c> so</c><00:44:53.810><c> that's</c><00:44:53.990><c> some</c><00:44:54.230><c> that's</c>

00:44:54.430 --> 00:44:54.440 align:start position:0%
be pulled pulled so that's some that's
 

00:44:54.440 --> 00:44:59.410 align:start position:0%
be pulled pulled so that's some that's
one<00:44:55.220><c> way</c><00:44:55.370><c> you</c><00:44:55.430><c> can</c><00:44:55.550><c> use</c><00:44:55.760><c> to</c><00:44:55.910><c> manage</c><00:44:58.210><c> cpu</c><00:44:59.210><c> load</c>

00:44:59.410 --> 00:44:59.420 align:start position:0%
one way you can use to manage cpu load
 

00:44:59.420 --> 00:45:03.760 align:start position:0%
one way you can use to manage cpu load
when<00:44:59.810><c> you're</c><00:44:59.960><c> using</c><00:45:00.140><c> a</c><00:45:00.320><c> matrix</c><00:45:00.620><c> mixer</c><00:45:02.650><c> so</c><00:45:03.650><c> if</c>

00:45:03.760 --> 00:45:03.770 align:start position:0%
when you're using a matrix mixer so if
 

00:45:03.770 --> 00:45:07.360 align:start position:0%
when you're using a matrix mixer so if
you<00:45:03.890><c> disable</c><00:45:04.870><c> input</c><00:45:05.870><c> buses</c><00:45:06.200><c> and</c><00:45:06.470><c> basically</c>

00:45:07.360 --> 00:45:07.370 align:start position:0%
you disable input buses and basically
 

00:45:07.370 --> 00:45:08.980 align:start position:0%
you disable input buses and basically
turning<00:45:07.700><c> that</c><00:45:07.880><c> part</c><00:45:08.150><c> of</c><00:45:08.240><c> your</c><00:45:08.390><c> input</c><00:45:08.570><c> graph</c>

00:45:08.980 --> 00:45:08.990 align:start position:0%
turning that part of your input graph
 

00:45:08.990 --> 00:45:17.050 align:start position:0%
turning that part of your input graph
off<00:45:11.350><c> so</c><00:45:14.440><c> if</c><00:45:15.440><c> you</c><00:45:15.590><c> just</c><00:45:15.830><c> set</c><00:45:16.070><c> the</c><00:45:16.190><c> input</c><00:45:16.310><c> gain</c><00:45:16.670><c> 20</c>

00:45:17.050 --> 00:45:17.060 align:start position:0%
off so if you just set the input gain 20
 

00:45:17.060 --> 00:45:19.960 align:start position:0%
off so if you just set the input gain 20
that<00:45:17.570><c> that</c><00:45:18.100><c> input</c><00:45:19.100><c> will</c><00:45:19.280><c> still</c><00:45:19.520><c> be</c><00:45:19.670><c> playing</c>

00:45:19.960 --> 00:45:19.970 align:start position:0%
that that input will still be playing
 

00:45:19.970 --> 00:45:21.760 align:start position:0%
that that input will still be playing
you<00:45:20.240><c> just</c><00:45:20.450><c> not</c><00:45:20.870><c> hearing</c><00:45:21.110><c> it</c><00:45:21.260><c> so</c><00:45:21.500><c> it's</c><00:45:21.620><c> just</c>

00:45:21.760 --> 00:45:21.770 align:start position:0%
you just not hearing it so it's just
 

00:45:21.770 --> 00:45:25.660 align:start position:0%
you just not hearing it so it's just
differently<00:45:23.350><c> to</c><00:45:24.350><c> do</c><00:45:24.530><c> something</c><00:45:25.490><c> like</c><00:45:25.580><c> that</c>

00:45:25.660 --> 00:45:25.670 align:start position:0%
differently to do something like that
 

00:45:25.670 --> 00:45:29.260 align:start position:0%
differently to do something like that
okay<00:45:26.270><c> so</c><00:45:27.190><c> in</c><00:45:28.190><c> order</c><00:45:28.400><c> to</c><00:45:28.520><c> set</c><00:45:28.760><c> up</c><00:45:28.850><c> the</c><00:45:28.970><c> matrix</c>

00:45:29.260 --> 00:45:29.270 align:start position:0%
okay so in order to set up the matrix
 

00:45:29.270 --> 00:45:30.670 align:start position:0%
okay so in order to set up the matrix
mature<00:45:29.540><c> before</c><00:45:29.720><c> you</c><00:45:29.930><c> can</c><00:45:30.080><c> use</c><00:45:30.110><c> it</c><00:45:30.260><c> you</c><00:45:30.500><c> need</c><00:45:30.650><c> to</c>

00:45:30.670 --> 00:45:30.680 align:start position:0%
mature before you can use it you need to
 

00:45:30.680 --> 00:45:32.590 align:start position:0%
mature before you can use it you need to
set<00:45:30.920><c> the</c><00:45:31.100><c> number</c><00:45:31.250><c> of</c><00:45:31.460><c> input</c><00:45:31.820><c> and</c><00:45:31.940><c> output</c><00:45:32.240><c> buses</c>

00:45:32.590 --> 00:45:32.600 align:start position:0%
set the number of input and output buses
 

00:45:32.600 --> 00:45:36.010 align:start position:0%
set the number of input and output buses
using<00:45:32.990><c> audio</c><00:45:33.320><c> unit</c><00:45:33.710><c> property</c><00:45:34.130><c> bus</c><00:45:34.340><c> count</c><00:45:35.020><c> and</c>

00:45:36.010 --> 00:45:36.020 align:start position:0%
using audio unit property bus count and
 

00:45:36.020 --> 00:45:37.420 align:start position:0%
using audio unit property bus count and
you<00:45:36.350><c> need</c><00:45:36.500><c> to</c><00:45:36.590><c> set</c><00:45:36.770><c> the</c><00:45:36.860><c> number</c><00:45:37.010><c> of</c><00:45:37.190><c> channels</c>

00:45:37.420 --> 00:45:37.430 align:start position:0%
you need to set the number of channels
 

00:45:37.430 --> 00:45:40.300 align:start position:0%
you need to set the number of channels
in<00:45:38.300><c> the</c><00:45:38.420><c> stream</c><00:45:38.660><c> formats</c><00:45:39.080><c> of</c><00:45:39.230><c> each</c><00:45:39.380><c> bus</c><00:45:39.710><c> this</c>

00:45:40.300 --> 00:45:40.310 align:start position:0%
in the stream formats of each bus this
 

00:45:40.310 --> 00:45:44.740 align:start position:0%
in the stream formats of each bus this
defines<00:45:40.880><c> the</c><00:45:41.270><c> size</c><00:45:41.450><c> of</c><00:45:41.660><c> the</c><00:45:41.720><c> matrix</c><00:45:43.720><c> so</c><00:45:44.720><c> that</c>

00:45:44.740 --> 00:45:44.750 align:start position:0%
defines the size of the matrix so that
 

00:45:44.750 --> 00:45:47.380 align:start position:0%
defines the size of the matrix so that
it<00:45:44.930><c> can</c><00:45:45.460><c> allocate</c><00:45:46.460><c> itself</c><00:45:46.880><c> to</c><00:45:47.000><c> the</c><00:45:47.090><c> proper</c>

00:45:47.380 --> 00:45:47.390 align:start position:0%
it can allocate itself to the proper
 

00:45:47.390 --> 00:45:53.770 align:start position:0%
it can allocate itself to the proper
size<00:45:50.230><c> okay</c><00:45:51.230><c> also</c><00:45:51.890><c> in</c><00:45:52.040><c> the</c><00:45:52.220><c> IMP</c><00:45:52.550><c> answer</c><00:45:53.000><c> there's</c>

00:45:53.770 --> 00:45:53.780 align:start position:0%
size okay also in the IMP answer there's
 

00:45:53.780 --> 00:45:59.500 align:start position:0%
size okay also in the IMP answer there's
a<00:45:53.840><c> new</c><00:45:55.210><c> panner</c><00:45:56.210><c> unit</c><00:45:56.690><c> as</c><00:45:57.350><c> as</c><00:45:58.090><c> bill</c><00:45:59.090><c> was</c><00:45:59.270><c> saying</c>

00:45:59.500 --> 00:45:59.510 align:start position:0%
a new panner unit as as bill was saying
 

00:45:59.510 --> 00:46:05.730 align:start position:0%
a new panner unit as as bill was saying
a<00:45:59.870><c> panel</c><00:46:00.650><c> unit</c><00:46:01.120><c> class</c><00:46:02.120><c> from</c><00:46:02.830><c> fora</c><00:46:03.830><c> for</c><00:46:04.820><c> doing</c><00:46:05.120><c> a</c>

00:46:05.730 --> 00:46:05.740 align:start position:0%
a panel unit class from fora for doing a
 

00:46:05.740 --> 00:46:09.250 align:start position:0%
a panel unit class from fora for doing a
mono<00:46:06.740><c> stereo</c><00:46:06.890><c> or</c><00:46:07.640><c> end</c><00:46:07.820><c> channel</c><00:46:08.300><c> inputs</c><00:46:08.660><c> to</c><00:46:08.960><c> end</c>

00:46:09.250 --> 00:46:09.260 align:start position:0%
mono stereo or end channel inputs to end
 

00:46:09.260 --> 00:46:13.540 align:start position:0%
mono stereo or end channel inputs to end
channel<00:46:09.590><c> outputs</c><00:46:10.960><c> and</c><00:46:11.960><c> possibly</c><00:46:12.560><c> using</c><00:46:12.740><c> audio</c>

00:46:13.540 --> 00:46:13.550 align:start position:0%
channel outputs and possibly using audio
 

00:46:13.550 --> 00:46:18.670 align:start position:0%
channel outputs and possibly using audio
channel<00:46:14.030><c> layouts</c><00:46:14.330><c> you</c><00:46:16.030><c> can</c><00:46:17.030><c> do</c><00:46:17.410><c> you</c><00:46:18.410><c> can</c><00:46:18.440><c> use</c>

00:46:18.670 --> 00:46:18.680 align:start position:0%
channel layouts you can do you can use
 

00:46:18.680 --> 00:46:20.860 align:start position:0%
channel layouts you can do you can use
it<00:46:18.710><c> to</c><00:46:18.950><c> do</c><00:46:19.070><c> panning</c><00:46:19.580><c> or</c><00:46:19.790><c> you</c><00:46:20.000><c> can</c><00:46:20.210><c> use</c><00:46:20.240><c> it</c><00:46:20.480><c> to</c><00:46:20.720><c> do</c>

00:46:20.860 --> 00:46:20.870 align:start position:0%
it to do panning or you can use it to do
 

00:46:20.870 --> 00:46:26.460 align:start position:0%
it to do panning or you can use it to do
like<00:46:21.590><c> in</c><00:46:21.770><c> line</c><00:46:21.980><c> faders</c><00:46:22.400><c> for</c><00:46:22.610><c> channel</c><00:46:22.880><c> volumes</c>

00:46:26.460 --> 00:46:26.470 align:start position:0%
 
 

00:46:26.470 --> 00:46:30.690 align:start position:0%
 
alright<00:46:27.470><c> so</c><00:46:27.770><c> that's</c><00:46:28.280><c> that's</c><00:46:28.730><c> about</c><00:46:29.030><c> it</c>

00:46:30.690 --> 00:46:30.700 align:start position:0%
alright so that's that's about it
 

00:46:30.700 --> 00:46:35.049 align:start position:0%
alright so that's that's about it
wrap<00:46:31.700><c> up</c><00:46:31.880><c> ok</c><00:46:32.539><c> I</c><00:46:32.779><c> think</c><00:46:33.049><c> a</c><00:46:33.229><c> couple</c><00:46:33.910><c> these</c><00:46:34.910><c> are</c>

00:46:35.049 --> 00:46:35.059 align:start position:0%
wrap up ok I think a couple these are
 

00:46:35.059 --> 00:46:38.829 align:start position:0%
wrap up ok I think a couple these are
over<00:46:35.390><c> others</c><00:46:36.109><c> audio</c><00:46:36.650><c> and</c><00:46:37.009><c> quicktime</c><00:46:37.839><c> tomorrow</c>

00:46:38.829 --> 00:46:38.839 align:start position:0%
over others audio and quicktime tomorrow
 

00:46:38.839 --> 00:46:54.510 align:start position:0%
over others audio and quicktime tomorrow
morning<00:46:39.200><c> and</c><00:46:45.369><c> clearly</c><00:46:46.369><c> documentation</c>

00:46:54.510 --> 00:46:54.520 align:start position:0%
 
 

00:46:54.520 --> 00:46:56.580 align:start position:0%
 
you

