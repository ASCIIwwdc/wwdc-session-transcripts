WEBVTT

00:00:06.250 --> 00:00:07.430
>> Jay Capela: Good morning.

00:00:07.430 --> 00:00:12.360
My name is Jay Capela, I'm the Design
Manager for iWork and productivity apps.

00:00:12.360 --> 00:00:13.910
This is John Geleynse.

00:00:13.910 --> 00:00:19.960
John is Director of Technological Evangelism at Apple.

00:00:19.960 --> 00:00:20.220
John?

00:00:20.220 --> 00:00:21.260
>> John Geleynse: All right.

00:00:21.260 --> 00:00:23.450
Well, let's get started this morning.

00:00:23.450 --> 00:00:28.590
First thing I want to say is that there
is no possible way that we could talk

00:00:28.590 --> 00:00:33.780
about every User Interface design situation that
you will face, designing for iPad and iPhone,

00:00:33.780 --> 00:00:36.340
and that's not our intention this session.

00:00:36.340 --> 00:00:42.520
But what Jay and I put together is some content that
we believe is most applicable to you at this stage,

00:00:42.520 --> 00:00:51.070
based on just our own learning around apps that Jay's team
has done internal at Apple as well as my experience working

00:00:51.070 --> 00:00:55.870
with so many of you bringing your apps
to the platform and to these devices.

00:00:55.870 --> 00:00:59.790
So let's get started.

00:00:59.790 --> 00:01:02.920
You know, you're here because you
understand that design matters.

00:01:02.920 --> 00:01:10.450
But let me, just for the fun of it, just get started along
a construction theme because design doesn't only apply

00:01:10.450 --> 00:01:16.010
to software -- design applies to pretty much
any great product that's built around the world

00:01:16.010 --> 00:01:19.660
that we all use or that we live in or drive or whatever.

00:01:19.660 --> 00:01:22.410
And design really matters.

00:01:22.410 --> 00:01:25.820
Take this net-zero energy home.

00:01:25.820 --> 00:01:30.910
It's got solar panels producing power
year-round, it's got insulation, you know,

00:01:30.910 --> 00:01:33.520
beyond what you would normally have in a home.

00:01:33.520 --> 00:01:38.210
It's air-tight, great ventilation
systems for air-conditioning and heating.

00:01:38.210 --> 00:01:44.410
I mean, there's just all kinds of levels in the
construction of this home that required great design.

00:01:44.410 --> 00:01:47.100
And the end result is something that's phenomenal.

00:01:47.100 --> 00:01:51.650
And hopefully there's lots more of these
kinds of homes throughout the country.

00:01:51.650 --> 00:01:58.010
So that's an example of what you get when
you do great design and you follow the plan.

00:01:58.010 --> 00:02:01.830
But what do you get when you don't,
you know, design in the first place?

00:02:01.830 --> 00:02:06.840
Or when you don't execute on the design that was
given you and fall asleep at the wheel so to speak

00:02:06.840 --> 00:02:10.220
and stay in the construction theme for a minute.

00:02:10.220 --> 00:02:19.160
You know, you can get disasters like this: unplanned
stairways, unplanned levels, unplanned laundry facilities,

00:02:19.160 --> 00:02:22.000
questionable construction techniques, right?

00:02:22.000 --> 00:02:24.850
Clearly there's a problem here.

00:02:24.850 --> 00:02:26.750
What else can happen?

00:02:26.750 --> 00:02:31.810
Well, you can have something like
this, which is a big problem.

00:02:31.810 --> 00:02:37.430
So either somebody didn't bother designing this or
somebody was asleep at the wheel when they put it together

00:02:37.430 --> 00:02:41.920
and didn't even notice that there was
a problem when they were assembling it.

00:02:41.920 --> 00:02:42.790
Or this one.

00:02:42.790 --> 00:02:46.100
Now this is not a Photoshopped image.

00:02:46.100 --> 00:02:52.440
But you know, clearly -- maybe there was good
design because you know, the porch is not too bad,

00:02:52.440 --> 00:02:57.550
the balcony is not too bad but
something went awry along the way.

00:02:58.560 --> 00:03:05.460
And all of these examples show that without design,
without execution on design, good execution on design,

00:03:05.460 --> 00:03:08.550
you can end up with total catastrophes, total disasters.

00:03:08.550 --> 00:03:14.230
Now, we're not talking about construction;
this is a software development conference.

00:03:14.230 --> 00:03:17.760
We're talking about designing for iPad and iPhone.

00:03:17.760 --> 00:03:21.170
And design is essential.

00:03:21.170 --> 00:03:24.310
Design really matters and design takes planning.

00:03:24.310 --> 00:03:27.010
There are some steps that you go
through in the design process.

00:03:27.010 --> 00:03:31.490
There's an iterative process that goes on and
we'll talk more about that in a few moments.

00:03:31.490 --> 00:03:33.210
But it takes a lot of planning.

00:03:33.210 --> 00:03:39.920
And it absolutely matters for apps,
particularly on this Multi-Touch platform

00:03:39.920 --> 00:03:43.240
of iPad, you know of iOS on iPhone and on iPad.

00:03:43.240 --> 00:03:51.650
And I want to begin with this great quote by Adam
Engst because I think it sets a great content

00:03:51.650 --> 00:03:54.720
for this session this morning and for
the material that we want to cover.

00:03:54.720 --> 00:04:06.020
The quote is this: "...the iPad becomes the app you're
using...Switch to another app and the iPad becomes that app.

00:04:06.020 --> 00:04:08.090
If that is not magical I don't know what is..."

00:04:08.090 --> 00:04:15.090
And I love this quote because it's definitely
been my own experience running many of your apps,

00:04:15.090 --> 00:04:18.810
as well as our the apps that we have
bundled with the Operating System

00:04:18.810 --> 00:04:21.120
or that I've picked up from Apple on the App Store.

00:04:21.120 --> 00:04:22.330
It's been definitely my experience.

00:04:22.330 --> 00:04:25.560
Hopefully it's been your experience with many apps.

00:04:25.560 --> 00:04:29.840
And I think it sets a great context for
what we want to talk about this morning.

00:04:29.840 --> 00:04:31.330
So I'll give you a couple examples.

00:04:31.330 --> 00:04:39.030
Here's Maps for iPad; the iPad essentially becomes a map.

00:04:39.030 --> 00:04:43.090
You pinch, you zoom, you move around, you set attributes.

00:04:43.090 --> 00:04:47.680
It's a digital map but it feels almost like the real thing.

00:04:47.680 --> 00:04:55.280
Here's Notes on iPad; iPad becomes a note pad.

00:04:57.210 --> 00:05:02.230
Here's Calendars; iPad becomes a Day-Timer essentially.

00:05:04.850 --> 00:05:08.800
Here's Contacts; iPad becomes an address book.

00:05:08.800 --> 00:05:14.250
I mean, it's just you flip through your contacts,
you flip through groups, you change contacts,

00:05:14.250 --> 00:05:16.730
it's just like what you'd expect it to be.

00:05:16.730 --> 00:05:18.970
And iPad becomes this [inaudible].

00:05:18.970 --> 00:05:21.970
Here's Square; this is a point-of-sales system.

00:05:21.970 --> 00:05:24.610
This is a disruptive product.

00:05:24.610 --> 00:05:29.290
I mean, what it does is it turns any
one of you on your iPhone or iPad,

00:05:29.290 --> 00:05:31.790
it gives you the ability to process credit cards.

00:05:31.790 --> 00:05:35.460
You swipe a credit card at a garage sale,
you swipe a credit card at a farmer's market.

00:05:35.460 --> 00:05:39.690
Whatever you're doing, using Square,
you can process credit cards.

00:05:39.690 --> 00:05:41.380
And you can take signatures on the iPad.

00:05:41.380 --> 00:05:46.530
And so if you're running a coffee shop, you walk in, you
hold the iPad -- you don't have a cash register anymore,

00:05:46.530 --> 00:05:50.790
you're just holding an iPad and you're letting people
sign, you're letting your customers buy products

00:05:50.790 --> 00:05:54.570
from you off this device that's in your
hand and you're issuing them receipts,

00:05:54.570 --> 00:05:58.130
you're processing credit cards, all these kinds of things.

00:05:58.130 --> 00:06:01.350
iPad becomes a point-of-sale system.

00:06:01.350 --> 00:06:08.290
And so as I said, there's no way we can
possibly speak to every design scenario

00:06:08.290 --> 00:06:11.390
that you will face coming to iPhone and iPad.

00:06:11.390 --> 00:06:17.400
But what we thought we would do is talk about 6 things
that we think are the most that are very important for you

00:06:17.400 --> 00:06:22.500
to consider and 6 steps, if you will, that
you should take in your design process.

00:06:22.500 --> 00:06:23.570
And there are more.

00:06:23.570 --> 00:06:30.000
This isn't meant to be the be-all and end-all list but
these are a good starting point and they are the following:

00:06:30.000 --> 00:06:35.090
it's important to pay attention to the
structure of your app, to define that structure;

00:06:35.090 --> 00:06:42.030
it's important to get the navigation of your application
correct; we're going to talk about reduction --

00:06:42.030 --> 00:06:47.620
how do you decide what features are in your
application?; we're going to talk about appearance --

00:06:47.620 --> 00:06:54.910
how do you make sure that your app looks great and
what's the standard that you're really pursuing there?;

00:06:54.910 --> 00:06:57.710
we're going to talk about feedback
-- what does that mean for the user,

00:06:57.710 --> 00:06:59.650
what does it mean on this Multi-Touch platform?

00:06:59.650 --> 00:07:04.550
and we're going to give you some examples of great
feedback; and then we're going to talk a optimization,

00:07:04.550 --> 00:07:10.130
some things that you can do that you may not have
thought about that will help to ensure the delivery

00:07:10.130 --> 00:07:13.450
of a great user experience within your app.

00:07:13.450 --> 00:07:16.450
So let's start with number one, structure.

00:07:16.450 --> 00:07:19.370
You know -- just let me use this construction analogy again.

00:07:19.370 --> 00:07:23.660
You know, the structure defines
everything about a building, about a home.

00:07:23.660 --> 00:07:30.750
And it's on that structure that you hang every aspect of,
you know, the interior design of that home and it's true

00:07:30.750 --> 00:07:33.860
for applications -- great applications have great structure.

00:07:33.860 --> 00:07:40.120
And it's on the structure of your app that you
hang the UI, that you hang the features set.

00:07:40.120 --> 00:07:42.680
And these things influence each other a little bit.

00:07:42.680 --> 00:07:45.620
There's an iterative process that we'll talk about later on.

00:07:45.620 --> 00:07:51.050
But there's no doubt that the best apps on
the platform have a very clear structure.

00:07:51.050 --> 00:07:57.680
And the structure of your app is
defined by the user mental model.

00:07:57.680 --> 00:08:03.790
And this is a term that I've spoke about at WWDC, it's a
term that we talk about in the Human Interface Guidelines.

00:08:03.790 --> 00:08:07.460
But it's a really important concept to get.

00:08:07.460 --> 00:08:12.590
And user mental model basically means
the way a task it perceived by people.

00:08:12.590 --> 00:08:19.800
So your app does something and users hear about what your
app does or they hear about the "something" that it does

00:08:19.800 --> 00:08:24.920
and they immediately form a set of they form a mental image.

00:08:24.920 --> 00:08:32.520
You know, if I say something like "shopping,"
instantly we have a mental model of what that means --

00:08:32.520 --> 00:08:35.640
you have a list, you do things,
you go after stuff, you know?

00:08:35.640 --> 00:08:36.840
Banking, right?

00:08:36.840 --> 00:08:41.490
There's all these things that we do in life, there's
all these things that applications do and as users think

00:08:41.490 --> 00:08:43.940
about these apps, they form a mental model.

00:08:43.940 --> 00:08:46.410
And that's what user mental model is all about.

00:08:46.410 --> 00:08:52.070
And user mental model -- identifying what the user mental
model is for what you're trying to do is a vital step

00:08:52.070 --> 00:08:56.960
in determining what the user experience and
the User Interface design is going to be.

00:08:56.960 --> 00:09:02.400
So let's say you were going to build a calendaring
app -- and we did that, we built Calendars.

00:09:02.400 --> 00:09:05.380
And here's what Calendars on iPad looks like.

00:09:05.380 --> 00:09:11.580
The question is: how did we get from
this or how did we get to this design?

00:09:11.580 --> 00:09:14.070
How did we decide that the Calendar dominated the UI?

00:09:14.070 --> 00:09:17.710
How did we decide that appointments
were within the Calendar?

00:09:17.710 --> 00:09:21.390
How did we decide that the search bar
search field was in the top right corner?

00:09:21.390 --> 00:09:28.770
How did we decide to do the navigation across months,
etc. on the bottom on the bottom of the screen?

00:09:28.770 --> 00:09:32.600
Well, we did this using this concept
this exercise Mental Model.

00:09:32.600 --> 00:09:37.240
And I have shared this exercise with
countless developers over the years

00:09:37.240 --> 00:09:40.620
and it really has been productive every time I've done it.

00:09:40.620 --> 00:09:44.380
Now I'm going to gloss over the exercise quickly
because we don't have -- in the interest of time --

00:09:44.380 --> 00:09:47.750
but let me just talk about the basic steps.

00:09:47.750 --> 00:09:53.310
So determining user mental model really is
all about building some lists first of all

00:09:53.310 --> 00:09:59.600
and it's about assembling all of -- you know, the
stakeholders in your company together by a giant white board

00:09:59.600 --> 00:10:03.260
or what have you -- and coming up with some key lists.

00:10:03.260 --> 00:10:08.690
So as you talk about your app, first thing is:
what are the objects that users are thinking about?

00:10:08.690 --> 00:10:12.110
You know, if you talk about Shopping app,
you're going to think about certain objects

00:10:12.110 --> 00:10:15.430
as I said -- Finance app, Calendaring app, right?

00:10:15.430 --> 00:10:19.880
You're going to determine what the objects are, everything
the user might be thinking about in terms of entities.

00:10:19.880 --> 00:10:24.240
Then you're going to list all of the tasks
that users are going to do with this app.

00:10:24.240 --> 00:10:27.890
And then along the line, build a list of concepts.

00:10:27.890 --> 00:10:33.140
They are sort of larger concepts that users have
got around what your application is trying to do.

00:10:33.140 --> 00:10:36.670
So once you've got these lists,
there's 3 more things you do.

00:10:36.670 --> 00:10:42.230
The next is you identify relationships between all
these objects within objects, between all these lists.

00:10:42.230 --> 00:10:47.140
Within the objects lists you determine: what are the
relationships between these objects that we've listed out?

00:10:47.140 --> 00:10:49.880
Some are parent objects, some are child objects.

00:10:49.880 --> 00:10:53.350
In tasks, which tasks are most frequently used?

00:10:53.350 --> 00:10:54.770
Which ones relate to each other?

00:10:54.770 --> 00:10:56.320
That kind of thing.

00:10:56.320 --> 00:11:01.070
Then you're going to identify dependencies
-- which tasks relate to which objects?

00:11:01.070 --> 00:11:03.880
And you're going to group a lot of
these things under the concepts.

00:11:03.880 --> 00:11:09.530
And then the last step is to identify
to prioritize these things.

00:11:09.530 --> 00:11:14.900
Well, of all the objects that we've listed,
which ones are the most important to the user?

00:11:14.900 --> 00:11:17.040
Which ones are the most frequently used?

00:11:17.040 --> 00:11:20.850
Largely it's driven Most of the
time it's driven by frequency of use

00:11:20.850 --> 00:11:23.900
or frequency on the mind of the user potentially.

00:11:23.900 --> 00:11:26.460
All right, so what does this look like for Calendaring?

00:11:26.460 --> 00:11:29.060
Well, what do people think about
when they think about Calendaring?

00:11:29.060 --> 00:11:34.090
Well, people are thinking about calendars themselves, the
objects; they're thinking about days, weeks, and months;

00:11:34.090 --> 00:11:39.710
groups -- sets of time if you will; they're thinking
about appointments; they're thinking about reminders.

00:11:39.710 --> 00:11:43.570
This is not an exhaustive list but you get the picture.

00:11:43.570 --> 00:11:47.360
In terms of tasks, what do you do when you're
Calendaring, when you're managing your time?

00:11:47.360 --> 00:11:51.390
Well, you're filtering, you're choosing whether you
look at a week or a month, this kind of a thing;

00:11:51.390 --> 00:11:56.830
you're creating appointments; you're creating calendars
potentially; you're editing things; you're searching;

00:11:56.830 --> 00:11:59.910
you're managing; you're changing dates, right?

00:11:59.910 --> 00:12:01.250
It's not a super complex task.

00:12:01.250 --> 00:12:04.720
I'm going through a simple example
here but hopefully you get the picture.

00:12:04.720 --> 00:12:07.300
And then in terms of the concepts
the user's got around Calendaring,

00:12:07.300 --> 00:12:10.160
you've got searching, managing, scheduling, right?

00:12:10.160 --> 00:12:15.210
And you can see already that some of these things
relate to tasks, they relate to objects obviously.

00:12:15.210 --> 00:12:18.490
So next step is: well, what are the
relationships between these things?

00:12:18.490 --> 00:12:25.630
Well, just in the interest of time, I mean, obviously
Calendars are a key object and a lot of the other objects,

00:12:25.630 --> 00:12:31.000
if you will, are child objects, they relate
to Calendars -- same thing with tasks.

00:12:31.000 --> 00:12:33.470
There are certain tasks that relate to scheduling.

00:12:33.470 --> 00:12:38.110
There are certain things -- tasks -- that
you would relate to a concept of searching.

00:12:38.110 --> 00:12:43.910
And so you do this kind of grouping -- you
organize, you figure out the relationships.

00:12:43.910 --> 00:12:49.800
And then lastly, the next step in the process is -- again,
with this stakeholder team of key people who are going

00:12:49.800 --> 00:12:55.020
to influence the product -- go through the
dependencies, figure out which tasks affect

00:12:55.020 --> 00:12:58.660
which objects, which concepts manage which tasks.

00:12:58.660 --> 00:13:01.820
You know, how is all this stuff associated with each other?

00:13:04.170 --> 00:13:10.000
And then you prioritize, based around frequency of use,
or frequency, you know, top of mind kind of concept.

00:13:10.000 --> 00:13:13.380
Which things are the most important for the user?

00:13:13.380 --> 00:13:15.930
Well in Calendaring, obviously Calendars are number one.

00:13:15.930 --> 00:13:23.080
Appointments are really high priority as well but because
they're a child object of, they're a child of Calendars,

00:13:23.080 --> 00:13:26.810
you're going to end up with a different
result, so they have a slightly less priority.

00:13:26.810 --> 00:13:30.620
Creating things -- creating appointments, creating
calendars -- is a priority task, you know?

00:13:30.620 --> 00:13:34.910
Searching and filtering is an important
task but it's sort of secondary.

00:13:34.910 --> 00:13:43.060
Well, that process then would result probably in some
drawings, some paper prototypes, some whiteboard sketches,

00:13:43.060 --> 00:13:45.970
which in turn would get turned into
something that's more real like this;

00:13:45.970 --> 00:13:48.400
clearly you don't jump from that to something like this.

00:13:48.400 --> 00:13:56.300
But what's interesting is you think about that exercise
we just went through and the impact on this app.

00:13:56.300 --> 00:14:00.810
The UI is dominated by the primary objects, Calendars.

00:14:00.810 --> 00:14:04.900
The sort of secondary object, which was a
child of the primary object was Appointments;

00:14:04.900 --> 00:14:07.990
it is front and center in the app as well.

00:14:07.990 --> 00:14:11.140
Changing dates is there on the main screen as well.

00:14:11.140 --> 00:14:18.260
And then towards the top and bottom -- and we'll talk about
placement on screen shortly -- you've got these tasks.

00:14:18.260 --> 00:14:23.240
Towards the top you've got some more primary tasks -- you're
filtering day, week, month lists, that kind of thing --

00:14:23.240 --> 00:14:29.700
and then towards the bottom, less frequently accessed
tasks for changing date, maybe changing the month in a way

00:14:29.700 --> 00:14:35.560
that you might do a lot less than you would just
picking a specific day of the current month.

00:14:35.560 --> 00:14:41.970
So you can see how user mental model informs the
UI design and that's a really important exercise.

00:14:41.970 --> 00:14:48.900
Now, next step or next step next thing
to pay attention to is navigation.

00:14:48.900 --> 00:14:52.980
And structure impacts navigation.

00:14:52.980 --> 00:14:58.140
In fact, navigation is basically the floor
plan of your application, if you will -

00:14:58.140 --> 00:15:03.920
mixing mixing these analogies together, mixing metaphors
here, this construction thing I talked about earlier.

00:15:03.920 --> 00:15:06.680
If you're building a home, you're
going to come up with a navigation.

00:15:06.680 --> 00:15:08.750
You're going to come up with a layout for that home.

00:15:08.750 --> 00:15:13.040
You're going to decide that there's lots of traffic
over here going to that room, there's not much traffic,

00:15:13.040 --> 00:15:17.320
we rarely go to that room, so let's
change the floor plan accordingly.

00:15:17.320 --> 00:15:18.960
That's what navigation's about.

00:15:18.960 --> 00:15:24.030
Navigation is the movement of, you know,
people within your app between modules

00:15:24.030 --> 00:15:26.610
and between data data collections, that kind of thing.

00:15:26.610 --> 00:15:34.270
And there are lots of different
navigation techniques on iOS.

00:15:34.270 --> 00:15:36.630
Here is the iPhone, you've got the Weather app.

00:15:36.630 --> 00:15:38.910
It's got a very simple mental model.

00:15:38.910 --> 00:15:40.710
There's no data hierarchy.

00:15:40.710 --> 00:15:45.090
And so all of the objects, if you will,
that the user's thinking about are simple.

00:15:45.090 --> 00:15:51.510
They're thinking about cities, locations and all cities
are the same in terms of the hierarchy in the user's mind.

00:15:51.510 --> 00:15:55.350
They just they've got 6 of them or
they've got 10 of them or 2 of them.

00:15:55.350 --> 00:15:58.070
And the navigation here is very simple, right?

00:15:58.070 --> 00:16:04.140
You just swipe across the screen and you're moving between
these peer objects -- there is no other navigation --

00:16:04.140 --> 00:16:09.010
and the page control navigation is a great
way to move between frequently accessed items.

00:16:09.010 --> 00:16:16.480
User wants to get to the 5th city, they want to get to
the 1st city; it's a very, very efficient navigation tool.

00:16:16.480 --> 00:16:18.160
So think about page controls.

00:16:18.160 --> 00:16:19.500
iBooks does something similar.

00:16:19.500 --> 00:16:22.800
I mean, iBooks use a real-world
metaphor so you're flipping pages.

00:16:22.800 --> 00:16:25.260
Obviously it's just like a book, right?

00:16:25.260 --> 00:16:28.520
The iPad becomes a book in essence.

00:16:28.520 --> 00:16:35.050
But at the bottom of iBooks, you've got a page changer
and so you can tap and drag and choose which page you want

00:16:35.050 --> 00:16:37.630
to go to; that gives you a higher degree of granularity.

00:16:37.630 --> 00:16:42.370
It's something you would do less
frequently, so it's not always there.

00:16:42.370 --> 00:16:48.110
But it's a couple it's another example of how you
can do navigation within within your application.

00:16:48.110 --> 00:16:49.990
Tabs are a great way to do navigation.

00:16:49.990 --> 00:16:52.260
Tabs allow you to manage complexity.

00:16:52.260 --> 00:16:58.660
They're pervasive on iPhone and they're also a great
thing to do inside of popovers in your iPad app.

00:16:58.660 --> 00:16:59.930
They manage complexity.

00:16:59.930 --> 00:17:03.040
They allow you to increase efficiency
because it's really simple for users just

00:17:03.040 --> 00:17:04.850
to go, "Oh, I don't want albums, I want songs.

00:17:04.850 --> 00:17:10.280
I don't want songs, I want artists," and to quickly
sort their information, let's say, in the iPod app.

00:17:10.280 --> 00:17:16.310
And as a result, tabs allow for an efficient way
of switching between modes or collections of data.

00:17:16.310 --> 00:17:21.020
And again, out of your mental model you're going to come
and see that you've got a lot of tasks so you're more

00:17:21.020 --> 00:17:26.360
of in a task-intensive app or whether you
have lots of objects or groups of objects

00:17:26.360 --> 00:17:28.950
and certain objects are collections are within others.

00:17:28.950 --> 00:17:32.560
And so you'll find out whether you're more
content-driven than you are task-driven.

00:17:32.560 --> 00:17:35.210
All of these things can impact your design.

00:17:35.210 --> 00:17:41.660
And so in the iPod app, which we're all familiar
with, you can see the tab navigation at the bottom.

00:17:41.660 --> 00:17:43.990
You're moving between songs, artists, albums.

00:17:43.990 --> 00:17:48.420
So think about tabs if you've got
a good structure within your app

00:17:48.420 --> 00:17:52.730
and you want to move between modules or content sets.

00:17:52.730 --> 00:17:55.940
Now, here's iPod on iPad.

00:17:55.940 --> 00:18:01.380
And the app is essentially the same app, you do the same
kinds of things with it but what's interesting here is --

00:18:01.380 --> 00:18:08.620
and this is a key take-away: where on iPhone you have a
great degree of hierarchy across screens and you're tapping,

00:18:08.620 --> 00:18:13.960
you're moving between screens, you know that's the way
that we design an iPhone because of the screen size;

00:18:13.960 --> 00:18:16.870
where you've got great degree of hierarchy on iPhone,

00:18:16.870 --> 00:18:20.990
you actually what you need to do
on iPad is flatten that hierarchy.

00:18:20.990 --> 00:18:26.710
Try to come up with a primary context, a single focus
screen where the user is going to spend most of their time

00:18:26.710 --> 00:18:31.920
and then use popovers, which are hierarchical
in nature to modify that primary context.

00:18:31.920 --> 00:18:37.400
Here the iPod app on iPad uses a set of
collections in list format on the left.

00:18:37.400 --> 00:18:43.360
And then in the right on the right side of the screen,
which dominates the screen -- two-thirds of the view --

00:18:43.360 --> 00:18:46.020
it's the content the user cares about the most.

00:18:46.020 --> 00:18:50.710
It's the number 1, the top priority content
for the user in terms of their mental model.

00:18:50.710 --> 00:18:52.240
It's their music.

00:18:52.240 --> 00:18:53.430
So it dominates the UI.

00:18:53.430 --> 00:18:59.990
And at the bottom in terms of navigation, there's a segment
of control that allows the user to filter that content,

00:18:59.990 --> 00:19:03.750
the stuff that they're looking at
around artist genre, that kind of thing.

00:19:03.750 --> 00:19:10.180
So segment controls are a great way to to
allow for navigation between sets of content.

00:19:11.290 --> 00:19:17.940
And navigation isn't only about movement, it's also about
placement and I've touched on a few of these points.

00:19:17.940 --> 00:19:25.190
But if you're designing a home, you're going to optimize
the kitchen for the way that you use your kitchen.

00:19:25.190 --> 00:19:29.550
You're going to optimize different parts of
the home for how you use those parts of home.

00:19:29.550 --> 00:19:34.920
If you're building a factory, assembling cars, you're
going to optimize each station within that factory

00:19:34.920 --> 00:19:38.570
so that it does exactly what has to happen here perfectly.

00:19:38.570 --> 00:19:41.400
And the same concept is true for designing your apps.

00:19:41.400 --> 00:19:46.140
Once you've got the mental model -- you've determined which
objects are key, which tasks relate to which objects --

00:19:46.140 --> 00:19:50.240
you're now at a point where you're starting to
see relationships between things and you may have,

00:19:50.240 --> 00:19:55.960
like in the Phone app a screen, which is where
you store phone numbers and other information.

00:19:55.960 --> 00:20:00.040
And so what you want to do as you design this
screen is optimize the design of the screen

00:20:00.040 --> 00:20:02.280
for what the user is trying to accomplish here.

00:20:02.280 --> 00:20:07.720
And if you're in the Phone app, the most important thing
is the phone number, which is why we list it at the top

00:20:07.720 --> 00:20:13.800
of the set of data because you have the most frequently read
items or things that matter to the user the most at the top

00:20:13.800 --> 00:20:19.790
and as you progress down the screen, you get less and
less important information in terms of the current task.

00:20:19.790 --> 00:20:24.170
It's still important information, it's just
not within the context of the Phone app.

00:20:24.170 --> 00:20:30.530
And so placement of UI elements and content on the screen
is also a function of navigation because once you're

00:20:30.530 --> 00:20:33.410
in a room, it's like, "What do I do in this room?"

00:20:33.410 --> 00:20:37.680
Once you're on a screen of your
app, what do you do on this screen?

00:20:37.680 --> 00:20:44.360
So where you place things is a function of
frequency of use or importance to the user.

00:20:44.360 --> 00:20:46.670
So, you know, give it visual emphasis.

00:20:46.670 --> 00:20:50.040
Give it the right positioning towards
the top or towards the bottom.

00:20:50.040 --> 00:20:51.960
And focus on the purpose of each screen.

00:20:51.960 --> 00:20:57.620
Keep asking yourself as you're deciding to put a
button on the screen say, "Is this important now?

00:20:57.620 --> 00:21:01.120
Does this add or detract from what
the user needs to do on this screen?"

00:21:01.120 --> 00:21:04.880
And if detracts, it shouldn't be on there.

00:21:04.880 --> 00:21:07.770
And so this is Calendar, we talked about that several times.

00:21:07.770 --> 00:21:10.840
And so we've got the controls at
the top -- frequently accessed.

00:21:10.840 --> 00:21:17.060
And then you've got less-frequently accessed -- well, you've
got the changing dates in the middle of the Calendar --

00:21:17.060 --> 00:21:22.080
mentioned that earlier -- and then towards the bottom
placement, less important, less frequently accessed

00:21:22.080 --> 00:21:25.140
by the user, less on their radar if you will.

00:21:25.140 --> 00:21:28.660
You've got the navigation for things
they do less frequently.

00:21:30.220 --> 00:21:30.910
All right.

00:21:30.910 --> 00:21:36.080
And now over to Jay to talk about
these concepts as they apply to iWork.

00:21:36.080 --> 00:21:37.880
>> Jay Capela: Thank you, John.

00:21:37.880 --> 00:21:42.820
When we thought about bringing iWork to iPad
-- that's Keynote, Pages, and Numbers --

00:21:42.820 --> 00:21:50.440
the goal was really simple: we wanted to capture the heart
and soul of these apps and bring them to a new platform.

00:21:52.220 --> 00:21:58.050
Now in doing so, we had a couple challenges
that maybe most developers won't have.

00:21:58.050 --> 00:22:03.950
First of all, we're dealing with 3 applications here -- 3
apps that we wanted to have a real consistent look and feel,

00:22:03.950 --> 00:22:06.380
wanted to make sure they family
together, wanted to make sure

00:22:06.380 --> 00:22:10.550
that they have a consistent set
of interactions and behaviors.

00:22:10.550 --> 00:22:13.380
So I know a lot of people aren't building 3 apps.

00:22:13.380 --> 00:22:20.890
We're taking Desktop applications and putting them onto
iPad and that may be more relevant to some folks here.

00:22:20.890 --> 00:22:26.330
But regardless of whether you're building 1 app or 3 and
regardless of whether you're already taking something

00:22:26.330 --> 00:22:29.130
that you've built on Desktop and bringing it over to iPad,

00:22:29.130 --> 00:22:34.190
there's certainly some lessons here
that you can get from our experience.

00:22:34.190 --> 00:22:41.670
Now John's talked a lot about organization and structure
and that's the first thing that we did when we decided --

00:22:41.670 --> 00:22:46.080
or taking a look -- at how we're going to
proceed in building these apps for iPad.

00:22:46.080 --> 00:22:51.040
And essentially for the iWork apps,
these are content creation tools.

00:22:51.040 --> 00:22:53.160
And that was a big part of what we wanted to do --

00:22:53.160 --> 00:22:59.590
was show that the platform could really
support apps that not just consume content

00:22:59.590 --> 00:23:03.080
but they were able to build and edit content as well.

00:23:03.080 --> 00:23:07.740
And in terms of structure, the user's content is key.

00:23:07.740 --> 00:23:14.000
We had to make sure that the user's content is going
to remain front and center in the whole experience.

00:23:14.000 --> 00:23:20.350
So as you can see, the user's content is front and center
and we've created just a little bit of UI around it.

00:23:20.350 --> 00:23:25.310
There's not a whole bunch of UI that's
kind of imposed on that experience.

00:23:25.310 --> 00:23:33.000
And really, the UI is in 2 areas: there's navigational
elements that allow you to work within your documents,

00:23:33.000 --> 00:23:38.630
to get around in your document
and then there's a top toolbar.

00:23:38.630 --> 00:23:46.540
And a top toolbar is essentially all the UI that you
need to go about the business of building your content.

00:23:46.540 --> 00:23:52.770
And just really quickly to recap what we've done,
we've got this down to just a number of UI elements.

00:23:52.770 --> 00:23:59.610
The first, left to right, is My Documents -- very clear
what it does, it takes you out of the current documents,

00:23:59.610 --> 00:24:03.880
puts you in a place where you can see the documents
you've already created, you can manage them.

00:24:03.880 --> 00:24:09.010
And it's also a jumping off point
to creating a new document.

00:24:09.010 --> 00:24:10.950
Next is Undo.

00:24:10.950 --> 00:24:16.320
This is the one command, the one piece of
functionality that we thought was so important

00:24:16.320 --> 00:24:18.860
that we brought it up to the top level surface.

00:24:18.860 --> 00:24:24.540
It's kind of obvious but the File Name, the document name.

00:24:24.540 --> 00:24:31.520
This is just a key way to keep the user, you know,
informed of where they are in your application.

00:24:31.520 --> 00:24:36.020
And on the right-hand side, there's 4 buttons.

00:24:36.020 --> 00:24:42.720
We reduce it down to 4 buttons that are essentially
the stepping off points to all of the functionality

00:24:42.720 --> 00:24:48.220
that you're going to need to build your
content: the first one of these is Formatting --

00:24:48.220 --> 00:24:53.170
essentially the inspector where you set all the
formatting attributes to the objects you're working on;

00:24:53.170 --> 00:25:01.110
the second is Insertion -- you can add photos and
the native objects, charts, tables, shapes, and text;

00:25:01.110 --> 00:25:10.530
there's Tools so these are document settings in Tools;
and lastly, there's one button that removes all of the UI

00:25:10.530 --> 00:25:18.290
so it gives you a very clean experience to consume
and see your content without any obstruction.

00:25:18.290 --> 00:25:28.850
Now we also wanted each of these apps to have its own
identity and to embrace some kind of metaphor that was true

00:25:28.850 --> 00:25:32.950
to the application and to the task at hand.

00:25:35.150 --> 00:25:40.490
So in Keynote, we took that concept and
we bundled it in with the main piece

00:25:40.490 --> 00:25:44.570
of navigation, the Slide Navigator in Keynote.

00:25:44.570 --> 00:25:50.800
And the Slide Navigator is one of the hallmark features
of Keynote on the Desktop and we thought it important

00:25:50.800 --> 00:25:55.600
to bring it over to translate it to Keynote on iPad.

00:25:55.600 --> 00:26:03.320
So the idea here is that this is a fundamental
piece of UI and we will surface it appropriately.

00:26:03.320 --> 00:26:08.270
The other thing we did is kept the
pallet really neutral in Keynote.

00:26:08.270 --> 00:26:10.420
And again, to let your content come through.

00:26:10.420 --> 00:26:16.970
In Pages, we took a little more liberty in branding.

00:26:16.970 --> 00:26:20.340
Your content maybe isn't going
to be as vibrant and saturated.

00:26:20.340 --> 00:26:26.120
So we have some opportunity here to brand
the app and give it a unique look and feel.

00:26:26.120 --> 00:26:33.460
And we did that by building this Ruler -- still making
functional, the user can choose to see it or not

00:26:33.460 --> 00:26:38.780
but it's something that really
gives the app a distinct quality.

00:26:38.780 --> 00:26:42.080
Another thing we did for Pages was the Page Navigator.

00:26:42.080 --> 00:26:50.010
And this is something where we made a conscious decision
not to have a concrete or persistent piece of UI for this.

00:26:50.010 --> 00:26:53.190
You know, we could have had a list
of thumbnails but we decided

00:26:53.190 --> 00:26:57.900
that basic navigation was simple
enough; scrolling is very easy.

00:26:57.900 --> 00:27:05.630
But this is a way now to, you know, navigate long
documents and we built this tool, essentially a loupe,

00:27:05.630 --> 00:27:09.430
and we were able to give it a very
distinctive look and feel as well.

00:27:11.830 --> 00:27:17.060
In Numbers, again, minimal UI but
UI that we were able to craft

00:27:17.060 --> 00:27:21.540
and give something textural, get
some production values into it.

00:27:21.540 --> 00:27:27.990
And here it's also around navigation and
the concrete metaphor is a File tabs.

00:27:27.990 --> 00:27:28.850
So there you have it.

00:27:28.850 --> 00:27:32.650
It's a simple philosophy that keeps
these 3 apps feeling consistent,

00:27:32.650 --> 00:27:36.960
yet gives each of them the room
to be unique on their own terms.

00:27:36.960 --> 00:27:43.260
And the bottom line, like John says, if your
app is well-organized, it's going to read well,

00:27:43.260 --> 00:27:47.380
it's going to feel intuitive, it's
going to be easy to understand.

00:27:47.380 --> 00:27:55.310
Think about this and these concepts as you go about building
your app: does your organization support what's going

00:27:55.310 --> 00:28:02.420
on in the user mental model; are you presenting
the main workflows clearly and understandably;

00:28:02.420 --> 00:28:08.020
are you presenting a UI that's efficient and
uncluttered; and are you giving an experience that's going

00:28:08.020 --> 00:28:13.460
to be just really easy to understand and read?

00:28:13.460 --> 00:28:16.640
Next we're going to talk about reduction.

00:28:16.640 --> 00:28:23.290
And really, I boil this down to 3 concepts:
simplify, prioritize, and innovate.

00:28:23.290 --> 00:28:28.590
Simplify -- how many times have we heard this?

00:28:28.590 --> 00:28:34.790
And as often as you've heard it, it's
absolutely true when building apps for the iPad.

00:28:36.510 --> 00:28:43.710
It means that you don't have to, you don't
have to make watered-down single function apps,

00:28:43.710 --> 00:28:46.600
you don't have to make underpowered apps.

00:28:46.600 --> 00:28:51.480
But what it does mean is that whatever
you do, keep it feeling simple.

00:28:51.480 --> 00:28:57.570
There's no need to overwhelm your users with
a thousand choices all at the same level.

00:28:57.570 --> 00:29:01.940
This is Keynote on the Desktop and
we're really proud of what we've done

00:29:01.940 --> 00:29:05.240
with Keynote, Pages, and Numbers on the Desktop.

00:29:06.930 --> 00:29:09.920
But there's a lot going on in these apps on the Desktop.

00:29:09.920 --> 00:29:19.340
We give the user a lot of power, a
lot of flexibility, a lot of control.

00:29:19.340 --> 00:29:34.800
But let's face it, there's a lot to manage: 335 Menu items,
154 Mapbar items, 64 shortcuts, a thousand places to click.

00:29:34.800 --> 00:29:37.660
There's a lot going on, on the Desktop apps.

00:29:37.660 --> 00:29:43.290
Now, we think we've done a really good job of disclosing
that complexity and offering it to you on the Desktop.

00:29:43.290 --> 00:29:50.740
But we're still bound by legacy conventions on the
Desktop that we don't need to bring to the iPad.

00:29:52.520 --> 00:29:56.600
These things simply do not translate,
nor should they translate.

00:29:56.600 --> 00:30:03.580
The iPad is a brand-new platform, the conventions are just
emerging, it's an absolutely wonderful time to be developing

00:30:03.580 --> 00:30:09.740
for iPad -- no Menuing system, there's no
Windowing system, there's no File system.

00:30:09.740 --> 00:30:13.560
Already you've got a head start in keeping things simple.

00:30:13.560 --> 00:30:21.330
So whether you bring an app over from the Desktop or
building an app from scratch, be true to the platform.

00:30:23.320 --> 00:30:29.450
So I want to go back to Keynote for a
second and talk just about the Inspectors.

00:30:29.450 --> 00:30:35.910
The Inspectors here are a primary way
of building content, setting attributes,

00:30:35.910 --> 00:30:38.700
formatting things, Keynote on the Desktop.

00:30:42.670 --> 00:30:49.730
And we've made some real simplifications when
we've kind of doing the same tasks for iPad.

00:30:49.730 --> 00:30:56.990
So first of all, there's no window
to manage; the Inspector's a popover.

00:30:58.060 --> 00:31:02.670
And already we're kind of taking
away some of the complexity.

00:31:02.670 --> 00:31:06.540
Another thing we've done is we've
made the Inspector dynamic,

00:31:06.540 --> 00:31:09.940
which means it responds to the
current context that you're on.

00:31:09.940 --> 00:31:15.990
On the Desktop, you can have as many Inspectors
open as you want, there's 10 tabs at the top,

00:31:15.990 --> 00:31:23.190
you get to decide which tab you want visible, there's
9 subtabs underneath, you get to figure out what kind

00:31:23.190 --> 00:31:27.980
of Inspector you want to have open, how many
you want to have on the screen, where they are.

00:31:27.980 --> 00:31:29.960
Again, it's a lot to manage.

00:31:29.960 --> 00:31:33.150
On iPad, taking a lot of that away.

00:31:33.150 --> 00:31:37.880
So if you have an image selected,
you get an image Inspector.

00:31:37.880 --> 00:31:41.010
If you have a table selected, you get a table Inspector.

00:31:41.010 --> 00:31:45.100
If you have a chart selected, you get a chart Inspector.

00:31:46.980 --> 00:31:50.350
It's just a lot less overhead to impose on the user.

00:31:50.350 --> 00:31:53.660
Prioritization is a key concept as well.

00:31:53.660 --> 00:31:59.960
One of the things that this means is: well,
what features do your app really require?

00:31:59.960 --> 00:32:03.700
We made some cuts as we brought
things over from the Desktop to iPad.

00:32:03.700 --> 00:32:13.380
And these were hard decisions that we had to make
about what's most important in this experience.

00:32:13.380 --> 00:32:17.520
Another concept of prioritization is
how you surface features in the app.

00:32:17.520 --> 00:32:24.920
So again, going back to the Inspector
model, this is a chart Inspector in Keynote.

00:32:24.920 --> 00:32:28.710
Here you can see the top level -- very, very simple.

00:32:28.710 --> 00:32:38.120
You can drill down in, you can get to more complicated
options, you can drill in again and get to more options.

00:32:38.120 --> 00:32:42.190
So this concept of disclosing is very important.

00:32:42.190 --> 00:32:48.460
In this example we're talking about
how to change a chart type of a chart

00:32:48.460 --> 00:32:53.390
that already exists, in this case, going from column to bar.

00:32:53.390 --> 00:33:00.610
Now this isn't something that you do all the time; this
is not something that's required for creating a chart.

00:33:00.610 --> 00:33:01.970
It's not at the top level.

00:33:01.970 --> 00:33:10.240
You have to drill in 3 steps to get to this but it feels
all right because in respect to the frequency of use,

00:33:10.240 --> 00:33:12.300
there's a good payoff and a good balance.

00:33:12.300 --> 00:33:14.600
The last thing you need to do is to innovate.

00:33:14.600 --> 00:33:23.000
I want to talk about one example that we did
across the 3 apps, Keynote, Pages, and Numbers.

00:33:23.000 --> 00:33:28.560
And again, looking back at the Inspector, you
can notice the top-level choices we provide.

00:33:28.560 --> 00:33:32.020
There's 6 icons there, 6 thumbnails.

00:33:32.020 --> 00:33:41.090
What we did is we decided to package and create
collections of attributes, collections of styles.

00:33:41.090 --> 00:33:47.270
So instead of tapping 30 times to get to the
right selection of, you know, whatever --

00:33:47.270 --> 00:33:53.640
a data point label or a tick mark -- and
then find the UI to set that attribute,

00:33:53.640 --> 00:33:57.060
we built these packages that do all that for you.

00:33:57.060 --> 00:34:04.950
So in this case, it's really easy, really efficient,
and really satisfying to tap through these collections

00:34:04.950 --> 00:34:08.370
and see how they change the look and feel of your object.

00:34:09.600 --> 00:34:11.450
And we've done this across the board.

00:34:11.450 --> 00:34:20.060
We've done a lot of work so that each template, each theme,
has defined for every object that the app knows about --

00:34:20.060 --> 00:34:29.910
every chart, table, shape, text, we've collected attributes
and we've produced these packages that go with the theme.

00:34:29.910 --> 00:34:36.310
So it's now very convenient for a user to see that they
can get very different looks and feels without having

00:34:36.310 --> 00:34:41.450
to spend a lot of time tapping through,
making selections, setting attributes.

00:34:42.530 --> 00:34:49.400
But of course, as we showed, we still prioritize and
disclose, so that we do offer advanced features --

00:34:49.400 --> 00:34:53.820
you can get to them, you just don't
have to and they don't get in your way.

00:34:53.820 --> 00:35:01.800
So when you're looking at how your app is organized, looking
at what the top-level user experience is going to be,

00:35:01.800 --> 00:35:09.010
figuring out what functionality is necessary,
keep these concepts in mind: how can you simplify;

00:35:09.010 --> 00:35:15.570
can you cut non-essential features; can you make sure you've
got the right prioritization level for your features --

00:35:15.570 --> 00:35:21.910
the ones most used very near the surface, others
pushed down a little bit; and how can you innovate --

00:35:21.910 --> 00:35:26.840
what things can you come up with to make this
feel more natural, to make it feel more efficient,

00:35:26.840 --> 00:35:32.540
to make it feel more friendly and fun and
to make it feel like it all makes sense?

00:35:34.760 --> 00:35:40.040
I'll have John talk about appearance.

00:35:40.040 --> 00:35:41.560
>> John Geleynse: All right, talk about appearance.

00:35:41.560 --> 00:35:45.050
You know the appearance of your app is its identity.

00:35:45.050 --> 00:35:49.490
We said in other Interface Design
presentations we've done in the past,

00:35:49.490 --> 00:35:53.310
we've talked about how your icon is your calling card.

00:35:53.310 --> 00:35:59.930
Well, on iPad and on iPhone, the appearance of
your app is definitely the identity its identity.

00:35:59.930 --> 00:36:05.980
And you know, as we move to iPhone
4, with the Retina display,

00:36:05.980 --> 00:36:10.670
the appearance of your app is going
to take on even more importance.

00:36:12.810 --> 00:36:17.200
Structure influences your appearance as well.

00:36:17.200 --> 00:36:17.880
Why is that?

00:36:17.880 --> 00:36:22.090
It's because as you determine your
structure, as you determine user mental model,

00:36:22.090 --> 00:36:25.690
there's going to be certain objects that
bubble up to the top as being priority.

00:36:25.690 --> 00:36:30.520
In many cases, those objects are going
to have a clear real world metaphor.

00:36:30.520 --> 00:36:32.720
Some cases they don't, and that's okay.

00:36:32.720 --> 00:36:38.750
But in the cases where they do, the appearance
and the way that you implement or sort of design

00:36:38.750 --> 00:36:41.240
for that real world metaphor is going to be key.

00:36:41.240 --> 00:36:46.870
Now the best place to start in terms of delivering a really
great experience, a great interface design for your app is

00:36:46.870 --> 00:36:52.400
to read the HIG we say this all the time and yet I still
meet with companies who have not really read the HIG --

00:36:52.400 --> 00:36:55.150
somebody did but not the people I met with.

00:36:55.150 --> 00:36:59.670
And so just so reminder: check out
the HIG, read it from cover to cover.

00:36:59.670 --> 00:37:05.090
It's not exactly a novel but there's a lot of great stuff,
there's a lot of great conceptual material at the beginning

00:37:05.090 --> 00:37:08.150
and implementation material further, further through.

00:37:08.150 --> 00:37:10.430
And it's not meant to be the be-all
and end-all of everything.

00:37:10.430 --> 00:37:16.310
We can't possibly write a book that just
documents every scenario that you're going to face.

00:37:16.310 --> 00:37:21.260
But you can come by the HI lab, you can contact me
after the show, and we can work with you individually

00:37:21.260 --> 00:37:24.780
to contextualize the content of the HIG for your app.

00:37:24.780 --> 00:37:27.600
But it definitely is the first step for everybody.

00:37:29.200 --> 00:37:36.560
But let's take a look more closely at at some of our apps.

00:37:36.560 --> 00:37:40.930
You know, that was, that was Notes.

00:37:40.930 --> 00:37:44.830
This is Address Book, our Contacts, we talked about that.

00:37:44.830 --> 00:37:48.650
Here's a third-party app: it's
called TabToolkit by Agile Partners.

00:37:48.650 --> 00:37:50.440
It looks like a sheet of music.

00:37:50.440 --> 00:37:55.660
Notes looks like notepad, Calendar looked like a
calendar, this looks like a bit of sheet music.

00:37:55.660 --> 00:38:01.650
This is an app that teaches you fingering on the fretboard
or on the keyboard as it plays through the sheet music.

00:38:01.650 --> 00:38:03.600
You can slow it down, you can speed it up.

00:38:03.600 --> 00:38:09.410
It's all about teaching you how to play
guitar or play the piano or any keyboard.

00:38:09.410 --> 00:38:14.980
It's an incredible app and it looks like
essentially it looks like a sheet of music.

00:38:14.980 --> 00:38:16.140
That's great design.

00:38:16.140 --> 00:38:21.780
Great anti-aliasing display, I
mean this is a really great app.

00:38:21.780 --> 00:38:26.230
Well, what is it about these examples that
I've given and earlier on in the session

00:38:26.230 --> 00:38:28.640
that we've talked about that makes them so great?

00:38:28.640 --> 00:38:35.770
Well, it comes down to the fact that our
human visual system is wired in a sense

00:38:35.770 --> 00:38:40.460
to understand real world situations, to real world objects.

00:38:40.460 --> 00:38:48.130
And the apps that reflect that in a sense -- that reflect
the real world back to the user in ways in certain ways --

00:38:48.130 --> 00:38:52.430
are instantly familiar and approachable
because they're like the real world.

00:38:53.580 --> 00:39:00.140
Contrast that with the kinds of things that we've
seen on the Desktop for a couple of decades.

00:39:00.140 --> 00:39:04.310
Now, not everything has been like this, and
I'm not picking on this app particularly.

00:39:04.310 --> 00:39:08.700
But think about what you just saw and now look at this.

00:39:08.700 --> 00:39:11.180
There's hardly anything on this
screen that's familiar to you.

00:39:11.180 --> 00:39:15.510
And in fact, as a result -- maybe there's a
keyboard on here, there's something that looks

00:39:15.510 --> 00:39:17.640
like a keyboard and so you instantly zero in on that.

00:39:17.640 --> 00:39:19.040
Isn't that interesting?

00:39:19.040 --> 00:39:25.070
And it's because our minds are wired to see things that
are familiar to them, that are in the real world to it.

00:39:25.070 --> 00:39:28.460
And there's so many things about
this screen that are just wrong.

00:39:28.460 --> 00:39:34.470
And it introduces, actually, a
significant cognitive load for the user.

00:39:34.470 --> 00:39:39.910
People looking at a UI like this, whether it's on
the Desktop or wherever, are going to be fatigued,

00:39:39.910 --> 00:39:43.130
it's tiring to use, and you're not
even aware of the fact that it is.

00:39:43.130 --> 00:39:46.670
And that's on the Desktop.

00:39:46.670 --> 00:39:49.390
Imagine if something like this was
on a Touch device like the iPad.

00:39:49.390 --> 00:39:55.630
I mean, you would hesitate to touch anything on this
screen, not to mention the fact that there are all kinds

00:39:55.630 --> 00:40:01.870
of design issues here: there's way much on the screen, so
to Jay's point about reduction; the elements are too tiny

00:40:01.870 --> 00:40:06.910
to touch; the keys are too tiny to touch;
you have all kinds of mistouched elements

00:40:06.910 --> 00:40:09.720
and you'd have to revert and there's big problems.

00:40:09.720 --> 00:40:13.710
So don't do this kind of thing.

00:40:13.710 --> 00:40:20.430
Instead, what we're trying to do and what you should be
trying to do is to mimic the real world wherever you can.

00:40:20.430 --> 00:40:22.640
So look at these apps, keep showing you these.

00:40:22.640 --> 00:40:31.910
But it's just a significant point because the iPad becomes
these apps when it's running them, right, to Adam's quote.

00:40:31.910 --> 00:40:38.050
Now, as you do your structured definition, as you determine
your user mental model, you come up with this key objects

00:40:38.050 --> 00:40:41.690
and you might in many cases say, "Oh,
that's there's a great real world metaphor

00:40:41.690 --> 00:40:44.990
for that calendaring," you know, these kinds of things.

00:40:44.990 --> 00:40:49.550
And you should you should build on these metaphors
because they make the app familiar to users.

00:40:49.550 --> 00:40:52.050
But be careful not to force them.

00:40:52.050 --> 00:40:57.120
There are going to be times that you might want to use
it but the decision really should come down to whether

00:40:57.120 --> 00:41:00.620
or not using this metaphor -- implementing
it within the design of your app --

00:41:00.620 --> 00:41:04.200
will enhance the user's understanding of
the app or whether it will detract from it.

00:41:04.200 --> 00:41:08.670
You know, the real world is limited sometimes in
terms of what we want to accomplish digitally.

00:41:08.670 --> 00:41:13.950
And so not every real world metaphor makes
sense; it's simply a frame of reference --

00:41:13.950 --> 00:41:20.160
sometimes it works great and other times
it doesn't it doesn't work so well.

00:41:20.160 --> 00:41:23.890
Case in point, Mail -- Mail on iPhone, Mail on iPad.

00:41:23.890 --> 00:41:28.850
It doesn't look at all like what you would
instantly think of as a real world metaphor for mail,

00:41:28.850 --> 00:41:32.290
which would be envelopes and stationary
and these kinds of things, right?

00:41:32.290 --> 00:41:34.100
That wouldn't work.

00:41:34.100 --> 00:41:39.680
It's an idea but it's not going to work because the point
of Mail is to focus on the content that matters to people,

00:41:39.680 --> 00:41:46.350
which is the Mail message and to give them the ascalable,
efficient UI to move quickly between messages and respond

00:41:46.350 --> 00:41:49.310
and send them and do whatever they do with Mail, with email.

00:41:49.310 --> 00:41:52.760
So this is a great design for that
and it's not a real world metaphor.

00:41:52.760 --> 00:41:58.160
Now, as you implement the UI design, as you implement
the visual aspects of your app -- the appearance --

00:41:58.160 --> 00:42:03.330
keep in mind some of the attributes
of real visual scenes and use them.

00:42:03.330 --> 00:42:07.680
I mean, for example: non-straight lines
-- nature of abhors non-straight lines.

00:42:07.680 --> 00:42:09.850
Don't look internally at this building.

00:42:09.850 --> 00:42:15.340
Anything that we build as people, as humans
has got lots of straight lines typically.

00:42:15.340 --> 00:42:16.470
There's lots of reasons for that.

00:42:16.470 --> 00:42:21.280
But if you look at the natural
world, not a lot of straight lines.

00:42:21.280 --> 00:42:22.710
So bring that into your design.

00:42:22.710 --> 00:42:25.020
I mean, take a look at Notes closely.

00:42:25.020 --> 00:42:29.220
You've got the free-form highlight of the active note.

00:42:29.220 --> 00:42:33.100
It could have been just a rectangular
highlight like, you know, shine or something.

00:42:33.100 --> 00:42:36.360
It isn't. It's much more relaxed.

00:42:36.360 --> 00:42:39.100
It's more kind of casual like note-taking is.

00:42:39.100 --> 00:42:42.010
Same thing with the icons, they're hand drawn.

00:42:42.010 --> 00:42:43.700
The idea is casual, relaxed.

00:42:43.700 --> 00:42:49.880
They're not straight, you know,
precise icons, photorealistic icons.

00:42:49.880 --> 00:42:54.350
Take a look at the in the left
corner, the angled leather here.

00:42:54.350 --> 00:42:58.730
This could have been rectangular, you
know, rectangular 90-degree corners.

00:42:58.730 --> 00:43:01.900
But we decided to put an angle on
there to just introduce kind of a sense

00:43:01.900 --> 00:43:04.720
of familiarity; it feels more like the real object.

00:43:04.720 --> 00:43:06.330
How about at the top of the Notepad?

00:43:06.330 --> 00:43:07.800
You've got the torn paper.

00:43:07.800 --> 00:43:10.320
This is true on iPhone as well, Notes on iPhone.

00:43:10.320 --> 00:43:13.480
And what that does is it makes it instantly familiar.

00:43:13.480 --> 00:43:17.140
You kind of get a chuckle out of it because
you're like, "What a great attention to detail."

00:43:17.140 --> 00:43:21.220
But more importantly, it actually
breaks up the hard edge at the top.

00:43:21.220 --> 00:43:26.160
It softens those those hard cuts, visual cuts.

00:43:26.160 --> 00:43:32.750
And then around the edge of the Notes app,
you've got this double stitching in leather.

00:43:32.750 --> 00:43:34.990
I mean, it's great.

00:43:34.990 --> 00:43:36.410
Is it necessary?

00:43:36.410 --> 00:43:43.580
No. But it's totally delightful and it doesn't detract
from the design and it totally establishes this app

00:43:43.580 --> 00:43:46.310
in your mind as something that's awesome, right?

00:43:46.310 --> 00:43:50.490
That's the kind of attention to detail
that delights and surprises users.

00:43:50.490 --> 00:43:53.220
And that's the kind of detail you
want to build into your appearance.

00:43:53.220 --> 00:43:58.150
How about gradients and textures and
attribute of real world visual scenes?

00:43:58.150 --> 00:44:01.920
Here's a wood texture -- soft pine maybe, you know?

00:44:01.920 --> 00:44:02.760
Sanded pine.

00:44:02.760 --> 00:44:05.520
Well, where would you use wood in an app?

00:44:05.520 --> 00:44:12.190
Well, we used it in iBooks for the book shelf as an example,
maybe a slightly different wood grain but wood nonetheless.

00:44:12.190 --> 00:44:14.060
Here's Labyrinth 2 , right?

00:44:14.060 --> 00:44:20.080
The actual toy is wooden, so it made sense to leverage
that real world example and reimplement that digitally.

00:44:20.080 --> 00:44:22.500
But leveraging a texture like wood totally makes sense.

00:44:22.500 --> 00:44:24.190
And it looks great.

00:44:24.190 --> 00:44:27.300
How about this?

00:44:27.300 --> 00:44:27.960
Brushed metal.

00:44:27.960 --> 00:44:35.530
Leather. Think for a second: how would you
use those in the Interface design of an app?

00:44:35.530 --> 00:44:40.210
Well, what we did in Pages -- what
Jay's team did in Pages --

00:44:40.210 --> 00:44:47.750
is the Inspector button at the top is really a combination
of these 2 textures with some different color palate.

00:44:47.750 --> 00:44:49.460
Isn't that great?

00:44:49.460 --> 00:44:52.690
How about this?

00:44:52.690 --> 00:44:56.820
Fabric. A linen texture.

00:44:56.820 --> 00:45:05.180
Well, Sophiestication with Articles on iPad has a very, very
faint linen texture behind the content of their main screen.

00:45:05.180 --> 00:45:05.990
It's awesome.

00:45:05.990 --> 00:45:10.420
It just adds a degree of luxury to this app.

00:45:10.420 --> 00:45:12.180
And shadowing.

00:45:12.180 --> 00:45:14.170
This is iBook shadowed down the middle of the page.

00:45:14.170 --> 00:45:20.550
It gives you the sense of, you know, thickness and
page turn, shadowing on the bookshelves of iBooks.

00:45:20.550 --> 00:45:23.780
And perspective -- turning a page in iBooks.

00:45:23.780 --> 00:45:29.910
Watch carefully when you turn the page what's happening at
the page turn: we are compressing or expanding the distance

00:45:29.910 --> 00:45:33.910
between pixels to give you sense
of, like, the page curving around.

00:45:33.910 --> 00:45:35.580
It's awesome.

00:45:37.200 --> 00:45:42.000
So use metaphors when appropriate, mimic the
real world wherever possible because it means

00:45:42.000 --> 00:45:46.540
that your app is instantly familiar to
users, and deliver high fidelity art.

00:45:46.540 --> 00:45:50.820
And this is no more, you know, this
is more applicable today than ever

00:45:50.820 --> 00:45:54.540
with iPhone 4 on the horizon with the Retina display.

00:45:54.540 --> 00:45:56.510
Back to Jay.

00:45:56.510 --> 00:46:02.620
[ Applause ]

00:46:02.620 --> 00:46:05.380
>> Jay Capela: A lot of times we we talk
about the concept of production value

00:46:05.380 --> 00:46:10.310
and that's just how much polish you're able to
bring, how much finesse you're able to bring

00:46:10.310 --> 00:46:12.960
to the look and feel of your application.

00:46:12.960 --> 00:46:16.130
John talked about that basic appearance.

00:46:16.130 --> 00:46:23.080
There's a whole other concept, a whole other axis to
consider when building apps for Touch and that's feedback.

00:46:23.080 --> 00:46:30.260
I've broken this down to just 3
very basic concepts about immediacy,

00:46:30.260 --> 00:46:33.080
about cinematic feedback, and about appropriate feedback.

00:46:33.080 --> 00:46:39.240
It's a whole new world, building for iPad.

00:46:39.240 --> 00:46:45.070
Everything wants to be touched, everything wants
to be fluid, everything wants to be responsive.

00:46:46.230 --> 00:46:50.690
In terms of immediate feedback, it's a
whole different world than the Desktop.

00:46:50.690 --> 00:46:57.510
On the Desktop, your whole experience is mediated,
more than likely by a keyboard or a mouse.

00:46:57.510 --> 00:47:02.320
On Touch, it is exactly that --
everything is happening under your finger.

00:47:03.450 --> 00:47:08.500
If you don't give feedback, if you don't give
immediate feedback, you're going to fail.

00:47:08.500 --> 00:47:11.560
It's just not going to feel right.

00:47:13.980 --> 00:47:19.880
And there's a whole opportunity here for
a whole new type of feedback as well.

00:47:20.890 --> 00:47:25.710
Just look at the kinds of things that iPad is doing
already -- not only our apps but third-party apps.

00:47:25.710 --> 00:47:29.340
I mean, everything just feels wonderful.

00:47:29.340 --> 00:47:32.090
It feels rich.

00:47:33.880 --> 00:47:36.480
And don't forget sound.

00:47:36.480 --> 00:47:40.510
You can take advantage of sound
in your application and feedback.

00:47:40.510 --> 00:47:44.040
[ Computer sounds ]

00:47:44.040 --> 00:47:45.900
>> Already we know what these sound means.

00:47:45.900 --> 00:47:48.810
You hear it and you know what it means.

00:47:48.810 --> 00:47:54.360
We all have opportunities to integrate
sound in our application design as well.

00:47:55.960 --> 00:48:00.250
And lastly, think about what is appropriate feedback.

00:48:00.250 --> 00:48:06.750
Now here's the third party example -- this
is a static example -- just confirmation.

00:48:06.750 --> 00:48:12.400
In this example it's success on a
postcard being sent or failure of that.

00:48:12.400 --> 00:48:18.580
And obviously this could be accomplished with just
a little popover, alert something, text message.

00:48:18.580 --> 00:48:25.100
But the developers here went that extra mile; they
really embraced this idea of production value.

00:48:25.100 --> 00:48:29.720
They carried through their metaphor
in giving you this feedback.

00:48:32.890 --> 00:48:39.450
And I want to end on a note of
what we did with with Keynote here.

00:48:39.450 --> 00:48:40.850
And we had a lot of fun.

00:48:40.850 --> 00:48:48.420
On the Desktop we were pretty cautious
about doing animations in the iWork apps.

00:48:48.420 --> 00:48:53.660
We certainly don't want to get
in the way of you using the apps.

00:48:53.660 --> 00:48:56.110
Here's an example of what we did in Keynote for iPad.

00:48:56.110 --> 00:48:58.900
And this is very subtle.

00:48:58.900 --> 00:49:03.360
This shows moving a slide and then we're
going to show creating a new slide.

00:49:05.720 --> 00:49:07.070
Now, we had a lot of fun with this.

00:49:07.070 --> 00:49:13.640
We had a lot of fun thinking of ways that we could add
value to the experience to make it seem more fun, more rich.

00:49:13.640 --> 00:49:17.890
Let me play that one again, at
least the moving of the slide.

00:49:17.890 --> 00:49:18.840
So this is not gratuitous.

00:49:18.840 --> 00:49:24.690
When you finger down, the slide pops
up and it hovers under your finger --

00:49:24.690 --> 00:49:28.030
that lets you know that you're in a
state where you can move the slide.

00:49:28.030 --> 00:49:31.850
As you move the slide, we have
physics and we have velocity there.

00:49:31.850 --> 00:49:35.330
There's some intentionality in the
direction that the slide it moving.

00:49:35.330 --> 00:49:39.070
The other slides move out of the way in a cascade fashion.

00:49:39.070 --> 00:49:42.680
When you let go, the slide drops, everything ripples.

00:49:42.680 --> 00:49:50.430
So we thought we're trying to dial this in
and get it subtle, rich, but not over the top.

00:49:50.430 --> 00:49:51.720
This is something you do all the time.

00:49:51.720 --> 00:49:54.040
When you add a new slide, you're doing that all the time.

00:49:54.040 --> 00:49:55.740
We don't want it to get in your way.

00:49:55.740 --> 00:50:02.050
You have to find the right balance of
interesting, meaningful, but also appropriate.

00:50:02.050 --> 00:50:08.750
So when you think about what you're doing in your apps
and when you think about production value and taking it

00:50:08.750 --> 00:50:14.050
to the next level, there's a whole world
of opportunity here in providing feedback,

00:50:14.050 --> 00:50:18.760
new types of feedback, and really rich feedback.

00:50:18.760 --> 00:50:21.140
Last, we're going to end on optimization.

00:50:21.140 --> 00:50:30.710
And optimization means a lot of things, even just more
than getting your code to run faster and more efficient.

00:50:34.400 --> 00:50:39.590
We hear all the time that the iPad feels incredibly fast.

00:50:40.790 --> 00:50:42.960
It's very, very responsive.

00:50:42.960 --> 00:50:48.990
And a lot of that has to do with
perception more than anything else.

00:50:50.140 --> 00:50:57.990
When you're building your apps, you have to launch fast, you
have to get very quickly get the user back to the context

00:50:57.990 --> 00:51:04.500
in which they left, very quickly you have to allow the
user to move around the app to get to the places they want.

00:51:04.500 --> 00:51:09.090
This has to feel just instantaneous.

00:51:09.090 --> 00:51:12.480
And you have to sweat the details.

00:51:12.480 --> 00:51:15.600
You have to get the timings just right.

00:51:15.600 --> 00:51:19.370
You have to make sure everything works together.

00:51:19.370 --> 00:51:23.080
If you've got the most beautiful animation
and the most beautiful piece of feedback

00:51:23.080 --> 00:51:26.370
but you can't get it to work just right, you can't ship it.

00:51:26.370 --> 00:51:33.160
It's going to make a disconnect between what the user
is doing and the kind of feedback they're getting.

00:51:33.160 --> 00:51:41.010
So you have to find ways of making it faster,
making it better, making it more responsive.

00:51:41.010 --> 00:51:45.020
This concept is about helping the user.

00:51:45.020 --> 00:51:48.270
There's a whole host of technologies available to you.

00:51:48.270 --> 00:51:52.960
If you know the user's location, don't make them type it in.

00:51:52.960 --> 00:51:58.460
You can rely on things to help
the user out and not impair them.

00:51:58.460 --> 00:52:02.050
If you have a discreet list of things
that the user's going to have to do, well,

00:52:02.050 --> 00:52:05.820
don't make them type it in, either;
let them pick from a list.

00:52:05.820 --> 00:52:09.280
Employ autocomplete, autocorrection.

00:52:09.280 --> 00:52:13.710
These things the platform gives to
you to make the user's life easier.

00:52:13.710 --> 00:52:17.310
Embrace these things.

00:52:17.310 --> 00:52:20.310
And see what you can invent to make the user's life easier.

00:52:20.310 --> 00:52:25.910
See what you can invent to create
optimizations in the workflow.

00:52:25.910 --> 00:52:30.540
I'll end with an example that we have in Numbers for iPad.

00:52:30.540 --> 00:52:33.620
In Numbers for iPad, we have tables.

00:52:33.620 --> 00:52:38.710
Here's an invoice example and the table here
has cells that are formatted differently.

00:52:38.710 --> 00:52:46.360
There's some text, there's some numbers, some
concurrency, some time, date, and some formulas.

00:52:47.410 --> 00:52:51.660
And this shows the typical QWERTY glass keyboard.

00:52:53.860 --> 00:53:01.020
Even on the in the real world with a physical keyboard,
it's really difficult to surface all of the keys

00:53:01.020 --> 00:53:04.210
that you that you want to have access to.

00:53:04.210 --> 00:53:13.130
I think we're so used to Shift, Tap,
Option, Tap, Option, Shift, Tap.

00:53:13.130 --> 00:53:18.100
If you can remember those things -- I think we've
all internalized it already in the real world.

00:53:18.100 --> 00:53:21.200
Here you have to find the keys that you're looking for.

00:53:21.200 --> 00:53:27.650
And even here with the QWERTY keyboard, if you're looking
for Numbers, just that one extra step away is too much.

00:53:29.790 --> 00:53:31.690
But it's all glass on the iPad.

00:53:31.690 --> 00:53:32.860
You can do anything you want.

00:53:32.860 --> 00:53:37.060
So what we decided to do is, "Well,
we know the context you're in,

00:53:37.060 --> 00:53:39.880
why don't we give you the input method
that's going to make sense for you?"

00:53:39.880 --> 00:53:43.280
So here's an example of a time and date keyboard.

00:53:43.280 --> 00:53:46.760
You don't ever have to type "August"
in; you hit the "August" button.

00:53:48.570 --> 00:53:53.360
Here's an example of a numeric pad
and we also give you format controls.

00:53:53.360 --> 00:53:57.880
So there's a limited amount of formatting you can
do here for currencies, percentages, and whatnot.

00:53:57.880 --> 00:54:03.900
There's a whole keyboard dedicated to formulas.

00:54:03.900 --> 00:54:09.260
There's quick formulas here, there's help
with formulas, there's access to functions.

00:54:09.260 --> 00:54:15.350
So we don't make you type anything in to do a
formula; it's all tapping and it's all about trying

00:54:15.350 --> 00:54:17.320
to bring it closer to the surface for you.

00:54:17.320 --> 00:54:24.890
In a sense, this is magic and this again
goes back to the quote John started with:

00:54:24.890 --> 00:54:31.390
we can make this thing become anything that we want it to
and let's make it become something useful, in this case,

00:54:31.390 --> 00:54:34.110
for our users and save them save them some effort.

00:54:34.110 --> 00:54:36.120
So think about this when you're building your apps.

00:54:36.120 --> 00:54:43.890
Yes, get your code to run as fast as it can but make
things feel fast, give the perception of responsiveness.

00:54:43.890 --> 00:54:46.460
You have to sweat the details.

00:54:46.460 --> 00:54:54.050
Think of ways that you could help your users complete the
task that they started and see where you can innovate.

00:54:54.050 --> 00:54:59.230
What can you do to make this all come
together in ways that nobody's seen before?

00:55:00.360 --> 00:55:05.780
So like John said, this isn't, you know, the be-all
end-all checklist of what you need to do to build your apps

00:55:05.780 --> 00:55:11.520
but these are some of the key concepts that we've come up
with to try to explain, you know, some of our experience

00:55:11.520 --> 00:55:14.280
and things that we want to surface as important.

00:55:15.390 --> 00:55:19.370
And lastly, we've shown this off in a linear fashion.

00:55:19.370 --> 00:55:24.140
And you kind of need a structure to get
going, you need something to follow.

00:55:24.140 --> 00:55:28.320
But what we find all the time is
it quickly becomes nonlinear.

00:55:28.320 --> 00:55:37.910
One of the things we do in our group and at Apple in
general is we iterate, we iterate, iterate, iterate.

00:55:37.910 --> 00:55:44.760
We start off with a linear process but we find that
decisions that we make in one area ripple out to another.

00:55:44.760 --> 00:55:50.940
Things that we learn in one part when we think we're
almost done cause us to rethink assumptions we've made

00:55:50.940 --> 00:55:55.650
or implementations that we've already
completed in another area.

00:55:55.650 --> 00:56:02.190
The one question we're always asking
ourselves is: how can we make it better?

00:56:02.190 --> 00:56:04.580
How can we make what we're doing better?

00:56:04.580 --> 00:56:08.560
And every time we have an answer
to that, we ask the question again.

00:56:08.560 --> 00:56:12.700
We keep asking it and asking it until we are done.

00:56:12.700 --> 00:56:16.650
When we have no more questions about how
we can make it better, that's when we ship

00:56:16.650 --> 00:56:19.870
and that's when we know we can make it great.

00:56:19.870 --> 00:56:21.510
Thank you.

00:56:21.510 --> 00:56:28.150
[ Applause ]

00:56:28.150 --> 00:56:33.120
>> John Geleynse: So just to finish,
here's some contact information for myself,

00:56:33.120 --> 00:56:35.200
John Geleynse, User Experience Evangelist.

00:56:35.200 --> 00:56:37.570
Feel free to reach out to me after the conference.

00:56:37.570 --> 00:56:39.290
Please try to come down to the HI lab.

00:56:39.290 --> 00:56:43.230
We may or may not be able to meet with you because
there's tremendous demand but we look forward

00:56:43.230 --> 00:56:44.710
to seeing your really great apps on the platform.

00:56:44.710 --> 00:56:45.520
Thanks for coming today.

