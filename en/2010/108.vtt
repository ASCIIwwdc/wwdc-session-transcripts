WEBVTT

00:00:06.420 --> 00:00:11.740
>> Dave Rahardja: Welcome to Session
108: Managing Mobile Devices.

00:00:11.740 --> 00:00:18.590
My name is Dave Rahardja and I'm joined
here with my colleague Chris Skogen.

00:00:18.590 --> 00:00:27.110
Now with a title for our session called Managing
Mobile Devices I'm guessing there are two groups

00:00:27.110 --> 00:00:31.060
of people here who will make up the majority of you.

00:00:31.060 --> 00:00:40.240
So the first group I think are IT managers,
IT developers who are trying to figure out how

00:00:40.240 --> 00:00:43.820
to integrate iPhone into your enterprises.

00:00:47.450 --> 00:00:49.970
Right? [applause] So this talk is for you.

00:00:49.970 --> 00:01:03.450
And the second group of people who are probably here
are developers of enterprise appliances and server apps

00:01:03.450 --> 00:01:09.910
and you're trying to figure out how to make
your next killer app to sell to the enterprise

00:01:09.910 --> 00:01:18.010
and this talk is also for you, so let's get started.

00:01:18.010 --> 00:01:20.680
When we talk about managing mobile devices

00:01:20.680 --> 00:01:27.790
and the enterprise we're probably talking
about three specific requirements.

00:01:27.790 --> 00:01:32.980
So the first thing that you got to do to manage
your mobile device is you need to configure them.

00:01:32.980 --> 00:01:41.270
You need to set up email, you need to set up VPN,
Wi-Fi access, as well you need to set up restrictions

00:01:41.270 --> 00:01:48.870
such as passcode complexity limitations, or
disabling certain features on the device.

00:01:48.870 --> 00:01:52.270
So that's the first thing you got
to do, configure your device.

00:01:52.270 --> 00:01:59.660
Now once you do that you need to enroll a large
number of devices into your management system.

00:01:59.660 --> 00:02:05.490
You don't want to have to manually configure
every device that comes into your organization

00:02:05.490 --> 00:02:09.970
because you might have thousands
or tens of thousands of devices.

00:02:09.970 --> 00:02:16.900
So how do you get these devices enrolled in your
management system without manual intervention?

00:02:16.900 --> 00:02:25.720
So that's the second requirement and
the third requirement is management.

00:02:25.720 --> 00:02:31.330
Once you've configured these devices your
configurations will change over time.

00:02:31.330 --> 00:02:38.250
So certificates expire, server addresses change,
people move from one department to another.

00:02:38.250 --> 00:02:40.850
How do you keep their devices up to date?

00:02:40.850 --> 00:02:44.830
So that's the third key to the puzzle, management.

00:02:44.830 --> 00:02:54.470
And in iOS 4 we have three great solutions for you to
address these three specific requirements so the first one

00:02:54.470 --> 00:02:58.810
for configuration we have configuration profiles.

00:03:00.370 --> 00:03:09.030
For enrollment we have Over-the-Air
Enrollment and brand new for iOS 4

00:03:09.030 --> 00:03:14.510
to manage your devices we have Mobile Device Management.

00:03:14.510 --> 00:03:19.040
[ applause ]

00:03:19.040 --> 00:03:26.690
So three key technologies that we are presenting to you
in  4 to make your life easier as an IT administrator

00:03:26.690 --> 00:03:31.910
and developer and to help you make your next killer app.

00:03:31.910 --> 00:03:36.220
So let's take a look at these three during the next hour.

00:03:36.220 --> 00:03:42.430
Starting with configuration profiles: so a lot of
you are already familiar with configuration profiles,

00:03:42.430 --> 00:03:52.160
they're just XML files, they're simple XML files, they look
like this, it's a P-list so if you're familiar with P-list

00:03:52.160 --> 00:04:01.390
on OS 10 and you use these files to configure
accounts and settings using what's called payloads.

00:04:01.390 --> 00:04:07.500
So a single configuration profile
contains one or more payloads.

00:04:07.500 --> 00:04:12.480
Each payload can be an exchange setting, email accounts,

00:04:12.480 --> 00:04:20.620
VPN etc. or it can also be restrictions
and passcode requirements.

00:04:20.620 --> 00:04:27.320
You can make these things using iPhone
Configuration Utility which is a free download,

00:04:27.320 --> 00:04:35.590
because they're XML files you can use your own script
on your server, or you can purchase a third party app

00:04:35.590 --> 00:04:38.930
to integrate this with your server management system.

00:04:38.930 --> 00:04:46.970
So let's take a look at how iPhone Configuration Utility
helps you to create these configuration profiles.

00:04:46.970 --> 00:04:49.410
So over to Chris.

00:04:49.410 --> 00:04:51.020
>> Chris Skogen: Thanks Dave.

00:04:51.020 --> 00:04:51.620
There we go.

00:04:51.620 --> 00:04:56.710
I don't know how many of you ever seen iPhone
Configuration Utility before but this is it.

00:04:56.710 --> 00:04:59.290
We're going to take a quick tour around.

00:04:59.290 --> 00:05:04.580
iPhone Configuration Utility or iPCU as we like to call it.

00:05:04.580 --> 00:05:11.880
iPCU is the primary means, you know, for Apple to
generate configuration profiles for your devices.

00:05:11.880 --> 00:05:18.950
In addition to using it to create configuration profiles
you can also use iPCU to store those configuration profiles.

00:05:18.950 --> 00:05:23.300
You can also store enterprise applications
and you can also store provisioning profiles

00:05:23.300 --> 00:05:25.900
that can be later installed on devices.

00:05:25.900 --> 00:05:33.340
iPCU typically does all of its installation to devices via
the tether so it tends for that type of feature it tends

00:05:33.340 --> 00:05:38.360
to be a really good tool for small shops but
for making configuration profiles it excels.

00:05:38.360 --> 00:05:46.610
Here on the left side of iPCU we have a library with
source list and you'll see where it contains devices

00:05:46.610 --> 00:05:49.990
that have been connected to iPCU via tether.

00:05:49.990 --> 00:05:54.650
It also contains a list of applications
that I can deploy to devices.

00:05:54.650 --> 00:05:59.960
It also has a place for provisioning
profiles for those applications

00:05:59.960 --> 00:06:03.480
and here's the one we're most interested
in for the purposes of this demo.

00:06:03.480 --> 00:06:05.980
This is configuration profiles.

00:06:05.980 --> 00:06:13.550
Once I've selected the source for configuration profiles
on the right side I see like a master detail view

00:06:13.550 --> 00:06:18.660
where the upper portion will show me all of the
configuration profiles that I have in my library

00:06:18.660 --> 00:06:23.020
and below I get the editor for each
of those configuration profiles.

00:06:23.020 --> 00:06:29.430
So to begin making a configuration profile what
we do is we go up to the toolbar and we hit New.

00:06:29.430 --> 00:06:36.750
Creates a configuration profile here called profile name,
and I'm automatically selected on the general payload

00:06:36.750 --> 00:06:43.390
so in the general payload I would enter a specific name
to help me remember what this is for and I'm also required

00:06:43.390 --> 00:06:48.140
to enter in a identifier for the configuration profile.

00:06:48.140 --> 00:06:52.680
Com.apple.myprofile, something like that.

00:06:52.680 --> 00:06:58.150
Then going down the list I have the rest
of the payload types that iPCU supports.

00:06:58.150 --> 00:07:06.430
We see passcode restrictions or passcode requirements,
we see restrictions, we see Wi-Fi, VPN, email,

00:07:06.430 --> 00:07:12.370
exchange accounts, LDAP accounts,
CALDAV, CARDAV, subscribe calendars.

00:07:12.370 --> 00:07:16.920
I'm not going to go through all of these today 'cause
there's many but I'm going to kind of go down the list

00:07:16.920 --> 00:07:20.070
and touch on the things that are new in iOS 4.

00:07:20.070 --> 00:07:26.350
If I go over to restrictions to add a restrictions
payload to this profile I just hit Configure

00:07:26.350 --> 00:07:31.790
and the UI will change to show me the restrictions editor.

00:07:31.790 --> 00:07:38.120
The restrictions editor are really things that you can
put on the device to stop your user from using the feature

00:07:38.120 --> 00:07:46.270
or save ratings from movies or content from the store
and also for iOS 4 we've also added a few new ones.

00:07:46.270 --> 00:07:53.620
You'll see allowed voice dialing, you can
actually force your users to encrypt backups here.

00:07:53.620 --> 00:08:01.660
We've also allowed in iOS 4 we've allowed control over
Safari so here I can disable Safari's use of auto fill.

00:08:01.660 --> 00:08:10.740
I can also force my user Safari to block pop-ups and we've
also added ratings down here at the bottom for the store

00:08:10.740 --> 00:08:17.290
so we can say well, ok, I want my users
only to be able to see PG-13 or less movies.

00:08:17.290 --> 00:08:22.970
In iOS 4 another new feature is multiple exchange accounts.

00:08:22.970 --> 00:08:28.800
Previously we allowed a single exchange account on a
device in a configuration profile now we can do multiples.

00:08:28.800 --> 00:08:35.530
We just merely hit that second button there and there's
another exchange account configured for the device.

00:08:35.530 --> 00:08:38.480
In iOS 4 we've also added Card dev.

00:08:38.480 --> 00:08:45.660
I just click configure, enter in the
account name, host name and port, URLs,

00:08:45.660 --> 00:08:51.660
things like that to let my users access the Card dev.

00:08:51.660 --> 00:08:56.390
In Web Clips we've added a new feature to configuration
profiles that enable you to fire the web clip

00:08:56.390 --> 00:09:02.440
in full screen modes so it kind of
looks like a complete app when it runs.

00:09:02.440 --> 00:09:09.070
You'll also see the Mobile Device Management payload,
which Dave is going to talk about in detail later.

00:09:09.070 --> 00:09:15.010
So for the sake of this demo let's go ahead I
have a profile up here that I've already built.

00:09:15.010 --> 00:09:17.050
I'm going to get rid of the one.

00:09:17.050 --> 00:09:20.050
So I have a profile here that I
pre-built that has a passcode.

00:09:20.050 --> 00:09:23.570
It's going to require my users to
have a passcode on their device.

00:09:23.570 --> 00:09:30.990
It also has a web clip that's going to give
them access to a URL and my enterprise.

00:09:30.990 --> 00:09:35.130
It's also got an exchange account
so they can get to their email.

00:09:35.130 --> 00:09:39.720
When I install this on a phone all of those payloads
are going to be deployed at one time and there's no way

00:09:39.720 --> 00:09:46.250
to separate them so when we see this go we're going
to be forced to put on a passcode and in exchange

00:09:46.250 --> 00:09:50.830
for that we're going to get access
to email and that web clip.

00:09:50.830 --> 00:09:55.810
So when a phone is connected in
iPCU to the 30 pin, as this one is,

00:09:55.810 --> 00:09:59.290
you'll see it on the left side as a connected device.

00:09:59.290 --> 00:10:05.090
So I click on that and it will show me what
configuration profiles are currently on that device

00:10:05.090 --> 00:10:08.160
and it also shows me the ones in my
library that I can add to the device.

00:10:08.160 --> 00:10:13.270
So here's the one that we want to target for this
device so I'm going to go ahead and hit install.

00:10:13.270 --> 00:10:22.600
I'm going to flip over to the device
itself, it's pretty hard to make out.

00:10:22.600 --> 00:10:23.870
>> That's pretty harsh.

00:10:23.870 --> 00:10:27.090
>> Chris: Yeah it's pretty bright.

00:10:27.090 --> 00:10:29.510
Does anybody know how to get that down?

00:10:29.510 --> 00:10:37.050
[ pause in speaking ]

00:10:37.050 --> 00:10:40.640
>> Just adjustments on the projector.

00:10:40.640 --> 00:10:43.570
>> Chris: Once I hit install on
iPCU the phone actually prompts me

00:10:43.570 --> 00:10:47.770
with this install screen for installing the profile.

00:10:47.770 --> 00:10:50.980
Right here it says what's, you
know, the name of the profile?

00:10:50.980 --> 00:10:52.280
It shows that it's verified.

00:10:52.280 --> 00:10:56.470
When we send it over from iPCU we sign it and encrypt it.

00:10:56.470 --> 00:10:58.900
It'll also show you the different
payloads that are in the profile.

00:10:58.900 --> 00:11:04.080
You'll see a web clip, an exchange account and a
password policy; those are the three that we put in.

00:11:04.080 --> 00:11:06.130
Now go ahead and hit Install.

00:11:06.130 --> 00:11:15.560
It'll prompt me to confirm it, we'll see that it's
installing the profile, takes a couple of seconds.

00:11:16.860 --> 00:11:23.570
What it's doing now at this point is it's going
to go through and evaluate the payloads typically

00:11:23.570 --> 00:11:30.000
with the exchange account it's going to try to make contact
I believe so we're just going to wait for that to happen.

00:11:30.000 --> 00:11:32.630
We're just going to let that run and continue on.

00:11:32.630 --> 00:11:38.150
So anyways that is iPCU trying to install the profile
and I will drop back and if that ever finishes,

00:11:38.150 --> 00:11:43.590
the rest of the connected device screen you'll see here
is provisioning profiles that might be on the device,

00:11:43.590 --> 00:11:48.200
applications that are on the device and iPCU
also lets you see the console on the device

00:11:48.200 --> 00:11:52.490
and save it and export it to a disk file.

00:11:52.490 --> 00:11:58.070
That is iPCU and this thing is not done so I'm
going to send it back to Dave to keep it going.

00:11:58.070 --> 00:12:00.030
>> Dave: Alright thank you Chris.

00:12:00.030 --> 00:12:05.940
So with iPhone Configuration Utility it's really easy
for you to create profiles that contain the settings

00:12:05.940 --> 00:12:13.810
that you want, using a very user friendly UI and you can
install these profiles on a device by tethering it directly

00:12:13.810 --> 00:12:18.220
to the device and sending the profile over that way.

00:12:18.220 --> 00:12:22.320
So let's take a little closer look
about configuration profiles.

00:12:22.320 --> 00:12:27.460
As you saw with iPCU profiles can be signed and encrypted.

00:12:27.460 --> 00:12:37.770
Now with iPCU the encryption keys are exchanged between the
device and the computer via the USB cable but as we move

00:12:37.770 --> 00:12:42.970
on you're going to see that you need
the device to have the private key

00:12:42.970 --> 00:12:49.330
to decrypt the profile before you can encrypt the
profile for that device and that presents a challenge

00:12:49.330 --> 00:12:56.870
which we're going to address with the other technologies
that we're going to present later today in this session.

00:12:56.870 --> 00:13:00.840
You can install profiles over USB
but you can also install it

00:13:00.840 --> 00:13:04.710
over the air using the other technologies
in this presentation.

00:13:04.710 --> 00:13:14.530
Now here's the key fact that you have
that you can use to your advantage.

00:13:14.530 --> 00:13:22.630
All of the payloads installed in the profile
are installed together or not at all.

00:13:22.630 --> 00:13:34.470
So all the payloads are installed together or not at all
and this gives you the ability to combine restrictions

00:13:34.470 --> 00:13:40.710
and account access in a single payload and this
is a technique we call the carrot and stick.

00:13:40.710 --> 00:13:44.090
So the carrot and stick basically says if you want access

00:13:44.090 --> 00:13:51.460
to my email servers you must have a passcode
of a certain standard on your device.

00:13:51.460 --> 00:13:58.240
If you want access to my VPN then you can only let your
device idle for five minutes before it locks the screen.

00:13:58.240 --> 00:14:05.400
So you combine the carrot which is access to your resources
with the stick which is the restriction that you put

00:14:05.400 --> 00:14:08.730
in place to get that access and since the profile needs

00:14:08.730 --> 00:14:14.410
to be installed together the user can't remove
the restriction without also removing the access.

00:14:14.410 --> 00:14:16.830
So use this to your advantage.

00:14:16.830 --> 00:14:22.480
Carrot and stick combine your restrictions
and your account access in a single profile.

00:14:22.480 --> 00:14:27.090
So that's configuration profiles.

00:14:27.090 --> 00:14:35.430
It allows you to configure your iPhone very easily
using XML files that you can generate and install them,

00:14:35.430 --> 00:14:38.740
get your accounts in there, your
restrictions, your certificates,

00:14:38.740 --> 00:14:47.110
etc. So now you can do that with iPCU you can
connect your phone to your computer and that's great

00:14:47.110 --> 00:14:52.330
and then you get 20 iPhones and then you get
50 iPhones and you get 100 iPhones and 1,000

00:14:52.330 --> 00:14:58.920
and 10,000 iPhones you don't want to handle each one
of them by hand because you'd be doing nothing else.

00:14:58.920 --> 00:15:05.660
So is there a way to get these iPhones
configured without manual intervention?

00:15:05.660 --> 00:15:10.880
And the technology we use to solve that
problem is Over-the-Air Enrollment.

00:15:10.880 --> 00:15:15.390
So let's take a look at that.

00:15:15.390 --> 00:15:24.470
Over-the-Air Enrollment allows you to use a web
portal to set up the iPhones so the user logs

00:15:24.470 --> 00:15:31.130
into your web portal and gets their iPhones configured.

00:15:31.130 --> 00:15:41.820
Because you know their login you can create a custom profile
for each login and this is useful because you may want

00:15:41.820 --> 00:15:47.650
to configure a phone owned by an
employee on the west coast a certain way,

00:15:47.650 --> 00:15:52.150
Wi-Fi and VPN access for them,
versus somebody in the east coast.

00:15:52.150 --> 00:15:56.590
You may want to configure a phone that
belongs to engineering a certain way

00:15:56.590 --> 00:16:00.780
versus something that belongs to a user in sales.

00:16:00.780 --> 00:16:08.150
So you can make these decisions and deliver custom
profiles using OT Enrollment based on the user's login.

00:16:08.150 --> 00:16:18.550
As an added benefit of OT Enrollment we use a protocol
called SCEP: Simple Certificate Enrollment Protocol

00:16:18.550 --> 00:16:28.010
to exchange certificate information so that
the phone has a private key and a public key

00:16:28.010 --> 00:16:33.750
and then your server has the public key to
that iPhone and now you can encrypt profiles

00:16:33.750 --> 00:16:37.640
for the iPhone, so let's take a look at how that works.

00:16:39.000 --> 00:16:45.110
So by the way I have an iPad here that I'm
using to control a server behind the scenes

00:16:45.110 --> 00:16:49.130
so I'm not actually controlling the iPhone
from here but this is just a console

00:16:49.130 --> 00:16:53.870
so I'm going to stage a profile for enrollment.

00:16:53.870 --> 00:17:00.110
So the first thing you see in OTA
Enrollment is a login screen.

00:17:00.110 --> 00:17:06.510
So the user visits a login screen and they type the
user name and password so Chris is going to login here

00:17:06.510 --> 00:17:16.060
[ pause in speaking ]

00:17:16.060 --> 00:17:26.400
and he gets a view that shows him that he's enrolling
in a configuration service so go ahead and install that.

00:17:29.270 --> 00:17:39.840
Now the device is using SCEP to exchange their public
key with the server and then it installs a profile.

00:17:39.840 --> 00:17:41.030
Ah, this time it works.

00:17:41.030 --> 00:17:44.660
Thanks for turning off your MiFis.

00:17:47.830 --> 00:17:55.600
So set a passcode, this is the same profile that were set
up using iPCU a few minutes ago so we require a passcode

00:17:55.600 --> 00:18:01.300
and we're going to configure an
exchange account and a web clip.

00:18:01.300 --> 00:18:13.040
Notice that you are prompted for a passcode before the
profile is actually installed and it's installed, tap done,

00:18:13.040 --> 00:18:20.620
so let's go back to the home screen and there's
our web clip, the Apple web clip and oh,

00:18:20.620 --> 00:18:28.900
we have an email, our email is set up, there you go.

00:18:28.900 --> 00:18:34.770
So that's Over-the-Air configuration.

00:18:34.770 --> 00:18:41.050
You go from a login to a custom-configured iPhone and
this is of course very scalable because you don't have

00:18:41.050 --> 00:18:47.470
to do any manual steps once you've configured
your web server and you can put in rules

00:18:47.470 --> 00:18:56.860
that configure devices according to your IT policy and
you can deliver custom profiles based on a user's login.

00:18:56.860 --> 00:19:01.530
So let's take a closer look at how
this actually works behind the scenes.

00:19:01.530 --> 00:19:08.160
The first thing you want to do is you want to send
your user to visit a URL, so you can do this using SMS,

00:19:08.160 --> 00:19:13.940
you can send them an SMS with URL in it, you can send
them an email instructions, or just tell them to go

00:19:13.940 --> 00:19:21.970
to the IT page and tap a link or some combination
of those, so get them to go to a portal.

00:19:21.970 --> 00:19:25.540
The user will then log in with their credentials.

00:19:25.540 --> 00:19:32.440
Now you know who they are and you can decide whether
the user is eligible for your enrollment service or not.

00:19:32.440 --> 00:19:38.160
If they are, your server then sends a device
authentication challenge which will show up as

00:19:38.160 --> 00:19:41.550
that view with the install button on the device.

00:19:41.550 --> 00:19:48.860
If the user taps install, what happens is then the iPhone
is going to talk to your server and tell your server

00:19:48.860 --> 00:19:56.700
about its hardware and configuration, so it
tells it what model it is, what OS version it has

00:19:56.700 --> 00:20:01.130
and serial numbers and a handful of other information.

00:20:01.130 --> 00:20:07.420
At this point, your server can make another decision
whether to continue with enrollment or whether

00:20:07.420 --> 00:20:10.560
to deliver a custom profile based on the device type.

00:20:10.560 --> 00:20:14.090
For example, iPod Touch versus iPhone versus iPad.

00:20:14.090 --> 00:20:22.840
If your server decides to go on we then use SCEP:
Simple Certificate Enrollment Protocol to exchange keys,

00:20:22.840 --> 00:20:28.900
and this is how it works, so the iPhone
generates a public and private key pair.

00:20:28.900 --> 00:20:31.440
It then takes the public key and sends it

00:20:31.440 --> 00:20:37.920
to your certificate authority server
as a certificate signing request.

00:20:37.920 --> 00:20:45.770
Your server then signs the certificate, keeps a copy for
itself and sends the signed certificate back to the device.

00:20:45.770 --> 00:20:51.390
At the end of that process the device has a private
key and a public key in the form of a certificate

00:20:51.390 --> 00:20:56.900
that has been signed by you and you
have the copy of the public key,

00:20:56.900 --> 00:21:01.330
now you can encrypt profiles for
the phone, which is what you do.

00:21:01.330 --> 00:21:09.680
You create a custom profile which you then encrypt and
send to the phone where it automatically gets installed

00:21:09.680 --> 00:21:17.400
and new in iOS 4 you can now configure the iPhone
to send a confirmation back to your server

00:21:17.400 --> 00:21:22.730
to said yes, I installed this profile successfully.

00:21:22.730 --> 00:21:25.180
So this is how OTA Enrollment works.

00:21:25.180 --> 00:21:31.820
You go from a login to creating
a custom profile specifically

00:21:31.820 --> 00:21:36.220
for their user according to your
rules, based on their login.

00:21:36.220 --> 00:21:40.510
So that's OTA Enrollment.

00:21:40.510 --> 00:21:45.520
[ applause ]

00:21:45.520 --> 00:21:51.280
So now we can use configuration profiles to configure
your phones to set up your accounts and restrictions.

00:21:51.280 --> 00:21:58.790
We know how to deliver these custom configurations
in a very scalable way using OTA Enrollment.

00:21:58.790 --> 00:22:09.550
Now, your configurations changed, right, your email servers
may move or your VPN may change, certificates expire

00:22:09.550 --> 00:22:14.630
and users may move from one department to
another and you have to reconfigure your phone.

00:22:14.630 --> 00:22:16.770
Well how do you do this?

00:22:16.770 --> 00:22:26.690
Well what you do now in iOS versions prior to 4.0
is you tell the users to re-enroll so you go back

00:22:26.690 --> 00:22:31.340
to the URL, re-enroll your phone reconfigured.

00:22:31.340 --> 00:22:35.360
Well that's great but, you know, how can we automate this?

00:22:35.360 --> 00:22:41.650
How can we proactively configure
someone's phone and while we're at it,

00:22:41.650 --> 00:22:47.380
why not try and find out what the snapshot
of the device state is at that time.

00:22:47.380 --> 00:22:49.000
Are you still compliant?

00:22:49.000 --> 00:22:50.550
Did you do something to your phone?

00:22:50.550 --> 00:22:53.350
Did you upgrade your OS without letting me know?

00:22:53.350 --> 00:22:57.760
It would be nice if you could do that, wouldn't it?

00:22:57.760 --> 00:23:05.650
Yet now we can because in iOS 4 we have a new
technology that we call Mobile Device Management.

00:23:05.650 --> 00:23:07.220
Let's take a closer look.

00:23:07.220 --> 00:23:21.760
Mobile Device Management: Mobile Device Management
allows you to manage iPhones over the air and on demand.

00:23:23.080 --> 00:23:28.980
It works over Wi-Fi and cellular so it works
with iPhones, it works with iPod Touch,

00:23:28.980 --> 00:23:33.940
it works with iPad when iOS 4 becomes available for it.

00:23:33.940 --> 00:23:41.210
It is mostly transparent to the user; the user
wouldn't even know that you're managing their phones.

00:23:41.210 --> 00:23:48.800
Things just get magically set up and
updated without the user knowing it.

00:23:48.800 --> 00:23:56.270
So users buy iPhones and iPads and iPod Touches because the
user experience is great and we want to be able to preserve

00:23:56.270 --> 00:24:00.320
that while giving you the ability to manage the devices.

00:24:00.320 --> 00:24:07.920
You get to initiate this process using
the Apple Push Notification Service.

00:24:07.920 --> 00:24:10.010
Now why do we do this?

00:24:10.010 --> 00:24:19.210
Well the Apple Push Notification Service is great for
preserving battery life so the device is essentially asleep

00:24:19.210 --> 00:24:24.130
until it gets a Push Notification,
so that's one main reason.

00:24:24.130 --> 00:24:32.960
The other is the Apple Push Notification Network is far from
being exercised to capacity, there's a lot of bandwidth left

00:24:32.960 --> 00:24:42.800
and we can use this to our advantage so that you get a
response for the device in a reasonable amount of time.

00:24:42.800 --> 00:24:52.650
However, once the device wakes up, it talks to your server
directly using HTTPS so Apple's network wakes the device up

00:24:52.650 --> 00:24:59.720
and then gets out of the way and now
it's between your server and the device.

00:24:59.720 --> 00:25:05.560
You get a comprehensive list of management
features using Mobile Device Management.

00:25:05.560 --> 00:25:10.350
You get a handful of very useful
remote commands and lots of queries.

00:25:10.350 --> 00:25:12.950
Let's take a look at those.

00:25:12.950 --> 00:25:24.450
So remote commands you can install and remove
configuration profiles over the air on demand.

00:25:24.450 --> 00:25:34.080
So as your configurations change you can update them, you
can install and remove provisioning profiles so if you have

00:25:34.080 --> 00:25:42.830
in house apps you use this to install provisioning profiles
on the devices and keep them up to date so as your provision

00:25:42.830 --> 00:25:50.630
and profiles expire, before they expire, you replace them
with a new provisioning profile and the user doesn't know

00:25:50.630 --> 00:25:57.660
that it's expired, no alerts no
nothing, reduces your help desk calls.

00:25:57.660 --> 00:26:04.460
You can lock a device, you can remove a passcode.

00:26:04.460 --> 00:26:07.050
Now why would you do this?

00:26:07.050 --> 00:26:15.650
Well since you are the IT crowd there's some of you
who have made your users have 12 character passcodes

00:26:15.650 --> 00:26:21.140
with punctuation, no sequential
characters and alphanumeric, right?

00:26:22.890 --> 00:26:24.330
And what happens?

00:26:24.330 --> 00:26:25.450
They forget.

00:26:25.450 --> 00:26:27.510
They forget their passcodes.

00:26:27.510 --> 00:26:33.580
So this gives your help desk another
button to push to support your users

00:26:33.580 --> 00:26:40.230
so if they forget the passcodes they give you
a call, maybe you do somebody else's iPhone,

00:26:40.230 --> 00:26:46.780
let that sink in for a minute, but now you
have the option to send a command to the device

00:26:46.780 --> 00:26:51.450
to temporarily remove the passcode
so that they can enter another one.

00:26:51.450 --> 00:26:59.670
Let's take a look at oh you got remote erase so
you can erase a device without using exchange.

00:27:01.510 --> 00:27:08.040
[ applause ]

00:27:08.040 --> 00:27:11.280
So very useful commands, very powerful commands.

00:27:11.280 --> 00:27:13.910
Let's take a look at what you can ask the phone.

00:27:13.910 --> 00:27:18.290
You can ask it about its network details.

00:27:18.290 --> 00:27:25.400
Bluetooth and Wi-Fi Mac addresses, etc.
What can you do with this information?

00:27:25.400 --> 00:27:28.230
You can tell if a user is roaming.

00:27:28.230 --> 00:27:34.980
You can tell if a user is roaming with their data
roaming turned on and you can tell them to turn it off.

00:27:34.980 --> 00:27:39.450
You can tell when the user has changed their SIM card.

00:27:39.450 --> 00:27:45.880
Some of you have policies about that about international
travel where you want them to change the SIM card

00:27:45.880 --> 00:27:50.370
to use a local SIM, you can use this
to check whether they've done that

00:27:50.370 --> 00:27:54.660
and when they change their SIM card their phone numbers
change you can ask the phone what is your current phone

00:27:54.660 --> 00:27:58.880
number and you can update your database, very convenient.

00:27:58.880 --> 00:28:05.380
You can ask the phone about its device
information, sort of general device information.

00:28:05.380 --> 00:28:13.250
So OS build version at that time so on demand
if the user upgrades their OS you can detect it.

00:28:13.250 --> 00:28:19.480
You can also detect free space available so if you have
enterprise apps that require certain amount of free space

00:28:19.480 --> 00:28:24.780
to download very large documents you can warn the user,
hey, you know, you're not going to be able to use this part

00:28:24.780 --> 00:28:27.260
of the app unless you free up some space.

00:28:27.260 --> 00:28:30.300
You can ask the device about application details.

00:28:30.300 --> 00:28:33.040
What apps do you have installed?

00:28:33.040 --> 00:28:35.630
How much space are they taking up?

00:28:35.630 --> 00:28:38.060
And what version are they?

00:28:38.060 --> 00:28:43.680
And the version part is important for you
because as you deploy enterprise apps you want

00:28:43.680 --> 00:28:49.570
to make sure users keep updating their versions
so that you can keep the support up to date

00:28:49.570 --> 00:28:52.800
and if the user hasn't updated it
you can send them a friendly email,

00:28:52.800 --> 00:28:59.120
hey please update your app before we drop support
for your version and you can do this proactively,

00:28:59.120 --> 00:29:06.480
and you can of course you can install and a query
provisioning profiles so you can see when they're going

00:29:06.480 --> 00:29:10.540
to expire on the device and install
a new one before it expires,

00:29:10.540 --> 00:29:15.870
and finally you can ask the device for
compliance and security information.

00:29:15.870 --> 00:29:22.830
So you can ask what configuration profiles are installed,
what certificates are installed, when they expire,

00:29:22.830 --> 00:29:29.340
what restrictions are in effect and this
is an interesting one, data protection.

00:29:29.340 --> 00:29:36.830
So in iOS 4 we're introducing a new kind of encryption
called Data Protection that encrypts your email database

00:29:36.830 --> 00:29:42.940
and your attachments with an encryption strategy
that involves the passcode on the device

00:29:42.940 --> 00:29:46.870
and it protects the data at rest with your passcode.

00:29:46.870 --> 00:29:54.280
Well in order to use this capability the user
must have formatted the device in a certain way

00:29:54.280 --> 00:30:00.050
and not all upgrade paths lead to that
formatted state and you can use the query

00:30:00.050 --> 00:30:05.360
to determine whether the device is
actually supporting data protection.

00:30:05.360 --> 00:30:11.530
This is of interest to you because you want to know that
your devices are protected to the best possible extent.

00:30:11.530 --> 00:30:19.460
By the way, the way that you get your devices into the
state of data protection is you need to back up the device,

00:30:19.460 --> 00:30:23.960
restore it to factory settings,
and restore the data but make sure

00:30:23.960 --> 00:30:26.780
that the device is correctly formatted for data protection.

00:30:26.780 --> 00:30:31.280
So you can find out if that's working on the device

00:30:31.280 --> 00:30:38.470
and of course passcode compliance you have a passcode
standard you want to know if the user's still compliant.

00:30:38.470 --> 00:30:46.500
So network details, device information, application details
and compliance and security these are very comprehensive,

00:30:46.500 --> 00:30:53.510
gives you a comprehensive snapshot of the
device at any time, this is on demand.

00:30:53.510 --> 00:31:01.560
[ applause ]

00:31:01.560 --> 00:31:02.930
Let's see how it works.

00:31:02.930 --> 00:31:06.920
Again I'm using my iPad to control a server back there.

00:31:06.920 --> 00:31:16.340
I'm not actually controlling the phone from this device,
although that would be cool so alright

00:31:16.340 --> 00:31:22.550
so the first thing we do is we go to OTA
Enrollment again just as we saw previously.

00:31:22.550 --> 00:31:32.520
Chris is going to log in but instead of delivering
the final configured profile, as we did previously,

00:31:32.520 --> 00:31:41.060
we're going to deliver a profile that just has the
MDM payload in it so let's go ahead and install that,

00:31:43.510 --> 00:31:50.790
SCEP exchanging keys, installing the
profile, oh and you get a warning

00:31:50.790 --> 00:31:55.870
that says hey this guy wants to
manage your phone, do you agree?

00:31:55.870 --> 00:32:11.550
Sure let's install that and it's installed, so
now I'm managing Chris's phone, it's that simple.

00:32:12.730 --> 00:32:18.620
So let's see what we can do [laughter].

00:32:18.620 --> 00:32:25.260
Be nice. So let's add a web clip to the home page.

00:32:25.260 --> 00:32:31.160
Now watch closely I'm going to install profile
here and I'm going to send a Push Notification, go.

00:32:31.160 --> 00:32:36.510
Boom there it is

00:32:36.510 --> 00:32:45.080
[ applause ]

00:32:45.080 --> 00:32:48.260
Let's see another demo let's go to the mail account Chris.

00:32:48.260 --> 00:32:54.340
So nothing there so it says set up your mail account well
I don't know about that, maybe I'll configure it for him.

00:32:54.340 --> 00:32:59.080
So I'm going to send a mail account, push.

00:33:00.230 --> 00:33:03.510
Boom it's configured

00:33:03.510 --> 00:33:09.040
[ applause ]

00:33:09.040 --> 00:33:12.060
It's going to take a second here to
download the messages there it is.

00:33:12.060 --> 00:33:17.600
So I'm not going to push a passcode
restriction to Chris's device.

00:33:17.600 --> 00:33:22.070
Now as you can tell the whole process is very unobtrusive.

00:33:22.070 --> 00:33:26.330
The user doesn't even have to know that you're doing
anything and all of a sudden his emails arrive.

00:33:26.330 --> 00:33:28.030
You know it's how did that happen?

00:33:28.030 --> 00:33:29.810
Well you did it, right?

00:33:29.810 --> 00:33:32.580
So what about passcode restrictions?

00:33:32.580 --> 00:33:33.630
How's that going to work?

00:33:33.630 --> 00:33:35.070
So let's try that.

00:33:35.070 --> 00:33:43.190
So I'm going to install a passcode restriction
on his phone, push, and you're going to notice

00:33:43.190 --> 00:33:55.180
and that's installed ok now it's installed but
nothing happens, so let's go to the homepage.

00:33:55.180 --> 00:34:01.750
Oh, somebody pushed a passcode restriction on
you and you have 60 minutes to comply [laughter].

00:34:06.180 --> 00:34:11.450
Well the reason we do this is we don't want to immediately
apply the passcode restriction in case Chris was

00:34:11.450 --> 00:34:16.590
at the airport and is looking up flight information and
he's like, oh, I got to enter a passcode while I'm running

00:34:16.590 --> 00:34:21.740
to the gate, so we give a little bit of grace
period there and give him 60 minutes to do that.

00:34:21.740 --> 00:34:26.430
Now this is going to count down 59, 58, and
once it gets to 0 that later buttons going

00:34:26.430 --> 00:34:29.810
to be gone so you have to comply right there.

00:34:29.810 --> 00:34:36.300
So he's going to dismiss it, now he's going to do other
things, he's going to email and notice that when he does

00:34:36.300 --> 00:34:39.400
that and he goes to the Home button it doesn't appear again

00:34:39.400 --> 00:34:42.780
and it only appears the next time
he sleep cycles the device.

00:34:42.780 --> 00:34:50.990
So sleep, ok I'll wake it up again, oh there it is,

00:34:50.990 --> 00:34:56.510
it's still 60 minutes it will say 59,
58, etc. So let's comply with that.

00:34:56.510 --> 00:35:05.070
[ pause in speaking ]

00:35:05.070 --> 00:35:07.100
So now he's complied with the passcode.

00:35:07.100 --> 00:35:17.280
So he's going to lock the device and try and
enter a passcode here, and alright there you go.

00:35:17.280 --> 00:35:25.650
So let's lock the device again
and try another scenario shall we?

00:35:25.650 --> 00:35:28.930
So Chris has forgotten his passcode.

00:35:30.000 --> 00:35:34.170
I made him enter a 12-character passcode
and he's forgotten, uh-oh, now what?

00:35:34.170 --> 00:35:37.820
Help! Oh that's too bad.

00:35:40.740 --> 00:35:48.950
So he calls my help desk, your help desk,
now you have the ability to clear a passcode.

00:35:48.950 --> 00:35:59.500
So I'm going to send a clear passcode here and oh
you have to press cancel, let's see what happens.

00:35:59.500 --> 00:36:04.510
Oh it's gone and you get the passcode
requirement alert again

00:36:04.510 --> 00:36:11.060
[ applause ]

00:36:11.060 --> 00:36:15.030
So that's Mobile Device Management and it's pretty cool.

00:36:15.030 --> 00:36:18.550
So let's take a look at how this works.

00:36:18.550 --> 00:36:22.440
So the first thing you do as you saw
is you go through OTA enrollment.

00:36:22.440 --> 00:36:28.420
The user types a login, goes to your server,
you say, ok, this guy, I know him and I'm going

00:36:28.420 --> 00:36:31.760
to configure the device through Mobile Device Management.

00:36:31.760 --> 00:36:33.660
So you've seen that before.

00:36:33.660 --> 00:36:39.880
So you generate an MDM profile, or a
profile that contains an MDM payload in it,

00:36:39.880 --> 00:36:46.530
instead of your final configuration you configure it
to just have MDM and it gets installed in the device.

00:36:46.530 --> 00:36:53.830
At this point, the device talks to the server, talks to
your MDM server to bind itself to its management service

00:36:53.830 --> 00:36:56.940
so it says, hey, I want to be managed by you is that ok?

00:36:56.940 --> 00:37:04.920
The server says sure, the device verifies that the
HTTPS certificate is valid, etc., and they're bound.

00:37:04.920 --> 00:37:08.810
Once everything's in place the device
basically goes to sleep and listens

00:37:08.810 --> 00:37:12.860
for the next notification from your server.

00:37:12.860 --> 00:37:15.330
This is the end of initial configuration.

00:37:15.330 --> 00:37:17.890
The device is configured.

00:37:17.890 --> 00:37:24.100
Now when your server wants to talk
to the device all it has to do is

00:37:24.100 --> 00:37:30.070
to send a Push Notification to our Push Notification server.

00:37:30.070 --> 00:37:37.360
Our services are going to deliver that to the
device via 3G or Wi-Fi and wake the device up.

00:37:37.360 --> 00:37:41.350
Now there is no command inside the notification.

00:37:41.350 --> 00:37:51.450
The device talks directly to your server through HTTPS and
at this point your server can talk to the device and ask it

00:37:51.450 --> 00:37:57.110
to do things, send commands, send queries, the device
talks to your server and this can be a batch command

00:37:57.110 --> 00:38:02.130
so you can send it more than one command, it does it in
a batch, it also saves battery life, do it in a batch

00:38:02.130 --> 00:38:06.890
and once it's done the device goes back to
sleep and listens for the next notification.

00:38:06.890 --> 00:38:13.800
So it's very simple but very powerful,
gives you access to the device on demand.

00:38:13.800 --> 00:38:20.220
There is one thing that we need to remember when we're
managing a device through Mobile Device Management

00:38:20.220 --> 00:38:24.000
and it has to do with something we call manage profiles.

00:38:24.000 --> 00:38:29.590
So let's take a look at under the hood of an
iPhone after it is being managed by your server.

00:38:30.780 --> 00:38:37.670
So the first thing you do as you saw is you
want to install an MDM configuration profile

00:38:37.670 --> 00:38:44.190
into the iPhone using OT Enrollment so this is the
root MDM profile, that's the first thing you install.

00:38:44.190 --> 00:38:51.580
Once that's installed you can install
other profiles through MDM.

00:38:52.990 --> 00:39:00.380
These profiles that you installed are called managed
profiles and these are distinct from profiles

00:39:00.380 --> 00:39:06.580
that you install using iPCU for
instance which are not managed profiles.

00:39:07.870 --> 00:39:10.090
So what's the difference?

00:39:10.090 --> 00:39:16.930
Your MDM server can query for all of the profiles
on the device, including the unmanaged ones

00:39:16.930 --> 00:39:21.480
so you can tell what other things the
user has installed on their phone.

00:39:21.480 --> 00:39:27.380
However, it can only remove or replace managed profiles.

00:39:27.380 --> 00:39:39.640
Right? It can only remove or replace managed profiles, so
if you didn't install it you can look but you can't touch.

00:39:39.640 --> 00:39:43.020
Those are the rules.

00:39:43.020 --> 00:39:48.530
You can also install profiles through MDM that are locked.

00:39:48.530 --> 00:39:54.790
These are profiles that are marked unremoveable
by the user so the user can look in the settings

00:39:54.790 --> 00:39:58.840
and there will be no remove button on the profile.

00:39:58.840 --> 00:40:06.820
So the user can't remove these profiles but
your root MDM profile may not be locked,

00:40:06.820 --> 00:40:13.780
so the user can remove that profile at any time and
terminate their relationship with your management server.

00:40:13.780 --> 00:40:16.270
This is very important.

00:40:16.270 --> 00:40:22.800
The user can always terminate their relationship
with your management server but if they do

00:40:22.800 --> 00:40:27.500
that all of the managed profiles are removed.

00:40:28.890 --> 00:40:32.660
So why is this important?

00:40:32.660 --> 00:40:35.750
Well remember the carrot and stick.

00:40:35.750 --> 00:40:38.750
So you now have two approaches to do carrot and stick.

00:40:38.750 --> 00:40:40.380
So the first one you've already seen.

00:40:40.380 --> 00:40:47.990
You put your restrictions and your accounts in a single
profile, the user cannot remove one without the other,

00:40:47.990 --> 00:40:52.340
so as long as they have access to your accounts
they must have the restrictions in place.

00:40:52.340 --> 00:41:02.500
With MDM you can use manage profiles to do another way
of carrot and stick, another way to do carrot and stick.

00:41:02.500 --> 00:41:06.130
You install the restrictions first in a locked profile.

00:41:06.130 --> 00:41:12.220
The user can't remove it and then you can query the
device if you want, make sure that the users comply

00:41:12.220 --> 00:41:18.350
with the 60-second grace period for the passcode,
if you like, and then install the account.

00:41:18.350 --> 00:41:24.380
So the user cannot remove the restrictions
without removing also the accounts.

00:41:24.380 --> 00:41:30.740
So the only way they can get over the restrictions is
to stop their devices, remove the root MDM profile,

00:41:30.740 --> 00:41:33.190
terminate the relationship with your management server

00:41:33.190 --> 00:41:36.610
but they lose all the accounts as
well so that's your carrot and stick.

00:41:36.610 --> 00:41:39.970
If you want access to my resources
you've got to let me manage your phone.

00:41:39.970 --> 00:41:44.220
If you want access to my resources you've
got to have these restrictions in place.

00:41:44.220 --> 00:41:50.810
So that's carrot and stick number two so these are the two
choices you can either one of these is fine by the way.

00:41:50.810 --> 00:41:55.370
You can use the first carrot and stick approach
with MDM, that's fine you can install a profile

00:41:55.370 --> 00:42:03.970
with both the restrictions and account access and so you can
but this is another choice the second way is more granular

00:42:03.970 --> 00:42:07.920
because you can install an individual
restrictions or individual accounts.

00:42:07.920 --> 00:42:14.500
So pick one that goes with your IT workflow
best or your enterprise server at workflow best

00:42:14.500 --> 00:42:19.710
and go with it, so two ways of doing carrot and stick.

00:42:19.710 --> 00:42:22.510
So that's Mobile Device Management

00:42:22.510 --> 00:42:30.070
[ applause ]

00:42:30.070 --> 00:42:35.440
So three key technologies in iOS 4 that helps you
to manage iPhones in your enterprise and help you

00:42:35.440 --> 00:42:39.840
to create your next killer app for the enterprise space.

00:42:39.840 --> 00:42:43.370
Configuration profiles lets you
configure iPhones with accounts

00:42:43.370 --> 00:42:47.670
and restrictions and settings just the way you like it.

00:42:47.670 --> 00:42:53.460
OTA Enrollment allows you to enroll tens
of thousands of devices using a web portal

00:42:53.460 --> 00:43:02.080
and now in iOS 4 you have Mobile Device Management that
allows you to monitor and manage these devices on demand

00:43:02.080 --> 00:43:05.130
and over the air, but there is one more thing.

00:43:05.130 --> 00:43:11.760
There's a new feature in iOS 4 that you've asked us

00:43:11.760 --> 00:43:18.800
that will make your lives easier
and today we're giving it to you.

00:43:18.800 --> 00:43:24.510
That new feature is Wireless Enterprise App Distribution

00:43:24.510 --> 00:43:31.210
[ applause and cheering ]

00:43:31.210 --> 00:43:36.250
You can now distribute your enterprise apps
wirelessly without having the user to go

00:43:36.250 --> 00:43:41.250
through the tethering process and downloading your apps.

00:43:41.250 --> 00:43:51.850
So we use, we allow you to distribute in-house apps in
this protocol using your web server, your own web server.

00:43:51.850 --> 00:43:57.190
No need to register your app with iTunes
you serve it up, the user can install it.

00:43:57.190 --> 00:44:03.960
There is Xcode integration to make your life
easier to stage your apps for deployment this way.

00:44:03.960 --> 00:44:07.580
Let's see how it works.

00:44:07.580 --> 00:44:14.820
So I'm still managing Chris's phone, so
I'm still managing his phone through MDM.

00:44:14.820 --> 00:44:25.010
So what I'm going to do here is I am going to
install a provisioning profile and a little web clip.

00:44:25.010 --> 00:44:33.870
Now remember I can batch these commands so I'm going to
send a push notification now and it's going to do both.

00:44:35.800 --> 00:44:36.630
There it is.

00:44:36.630 --> 00:44:41.330
Oh it's an app catalogue; it's your app catalogue.

00:44:41.330 --> 00:44:46.200
So let's tap that link.

00:44:46.200 --> 00:44:49.290
Ah these are your apps.

00:44:49.290 --> 00:44:56.390
They're hosted on your web server and this is just a
simple webpage that you serve up on your web server

00:44:56.390 --> 00:45:04.450
so let's install the customers app,
maybe this is a CRM application.

00:45:04.450 --> 00:45:10.510
Oh sure, install that, and it's installed

00:45:10.510 --> 00:45:21.120
[ applause ]

00:45:21.120 --> 00:45:22.840
So it's that simple.

00:45:24.320 --> 00:45:27.260
So how do you get this thing going?

00:45:27.260 --> 00:45:29.890
What do you need?

00:45:29.890 --> 00:45:35.110
Well you need a web server but you probably got one already.

00:45:35.110 --> 00:45:38.140
You need a distribution provisioning profile.

00:45:38.140 --> 00:45:45.750
You can download this through the developer's portal,
it's the same provisioning profile that you've always had.

00:45:45.750 --> 00:45:55.510
You need your apps to be packaged in the .IPA format and
you need an XML manifest to help the phone find your app

00:45:55.510 --> 00:46:03.630
and figure out how to install it and fortunately
we automate the last two pieces using Xcode.

00:46:03.630 --> 00:46:14.750
So you [applause] you click an archive so you do an app
archive and you say share with enterprise or distribute

00:46:14.750 --> 00:46:19.940
for enterprise and fill in the forms
with a URL and that's all you need.

00:46:21.720 --> 00:46:24.130
It works best with MDM.

00:46:24.130 --> 00:46:30.510
Now wireless enterprise app distribution does
not require MDM so you can use this today.

00:46:30.510 --> 00:46:35.580
You can deploy your apps today with iOS 4 just
using your web server, tell the users to go here,

00:46:35.580 --> 00:46:41.730
grab the app and off they go but it
works best with MDM and here's why.

00:46:41.730 --> 00:46:46.320
You can install a web clip for your app
catalogue like I saw and save your user

00:46:46.320 --> 00:46:49.570
from having to find where to get the apps.

00:46:49.570 --> 00:46:54.490
You can install and renew provisioning
profile which is really cool.

00:46:54.490 --> 00:47:00.240
It helps you to prepare the devices to have the
provision and profile before the users install the app

00:47:00.240 --> 00:47:08.150
and renew this provision and profiles before
they expire so the user experience remains great.

00:47:08.150 --> 00:47:13.720
You can monitor your app versions, which is important again

00:47:13.720 --> 00:47:19.620
if you're doing enterprise app development you want your
users to stay on the latest version so you can use MDM

00:47:19.620 --> 00:47:23.290
to remind users to upgrade their installations if needed.

00:47:23.290 --> 00:47:30.490
So configuration profiles lets you configure the phones with
your accounts and restrictions just the way you like them.

00:47:30.490 --> 00:47:38.180
Over-the-Air Enrollment lets you deploy these
configuration in a customized way using your rules,

00:47:38.180 --> 00:47:43.350
very scalable solution for tens of
thousands of iPhones using a web portal.

00:47:43.350 --> 00:47:49.480
Mobile Device Management lets you manage these devices,
monitor them and keep their configurations up to date

00:47:49.480 --> 00:48:00.240
on demand and over the air and now wireless app distribution
allows you to distribute your enterprise apps wirelessly.

00:48:00.240 --> 00:48:07.830
Four great technologies in iOS 4 to help you
integrate iPhone at your enterprise better

00:48:07.830 --> 00:48:11.080
and to help you make your next killer enterprise app.

00:48:11.080 --> 00:48:12.670
So what next?

00:48:12.670 --> 00:48:15.970
I'd like you to start using these technologies.

00:48:15.970 --> 00:48:22.520
The easiest way to get started of course if you
haven't already download iPhone Configuration Utility.

00:48:22.520 --> 00:48:27.490
It's free of charge and it helps you to
get started with configuration profiles.

00:48:27.490 --> 00:48:34.940
If you have a very small workgroup, maybe 20-50 iPhones,
this is maybe all you need, this is maybe all you need

00:48:34.940 --> 00:48:42.110
for configuring all the devices using a
USB connection but if not I encourage you

00:48:42.110 --> 00:48:46.680
to develop your own solution, join
the Enterprise Developer Program.

00:48:46.680 --> 00:48:51.510
You can review all the documentations and
you can create your own customized solution,

00:48:51.510 --> 00:48:57.820
integrate that with your IT framework
and you know go all the way

00:48:57.820 --> 00:49:01.230
and if you're an enterprise app
developer an enterprise appliance

00:49:01.230 --> 00:49:03.540
or server app developer this is the route you want to go.

00:49:03.540 --> 00:49:13.250
You can integrate iPhone iOS 4 into your application,
into your workflow to your console in very deep way,

00:49:13.250 --> 00:49:19.680
or you can buy a third-party solution,
maybe from some of the guys in this room.

00:49:19.680 --> 00:49:29.100
Watch for Mobile Device Management
outfits to start supporting iOS 4 soon.

00:49:29.100 --> 00:49:32.210
Alright, for more information please contact Mark Malone.

00:49:32.210 --> 00:49:36.290
He's our Integration Technologies Evangelist.

00:49:36.290 --> 00:49:40.140
Here's some documentation they are
still going through the review process

00:49:40.140 --> 00:49:46.090
so we'll make them available to
you soon on the developers website.

00:49:46.090 --> 00:49:51.940
If you need early access to this documentation please come
to the lab after this, talk to us, we'll see what we can do

00:49:51.940 --> 00:50:00.090
for you and of course Apple Developer Forum is always a great
place to get help from Apple engineers and each other.

00:50:00.090 --> 00:50:08.670
So some related sessions: There's one today Creating
Secure Applications right following this session.

00:50:08.670 --> 00:50:13.110
There's one on Wednesday and one on
Thursday that you might be interested in.

00:50:13.110 --> 00:50:14.510
Thank you very much.

00:50:14.510 --> 00:50:17.870
[ applause ]

