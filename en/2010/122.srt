1
00:00:06,130 --> 00:00:09,960
>> Alright welcome to Accessibility on iPhone OS.

2
00:00:09,960 --> 00:00:14,380
We're going to learn how to make an app useable by everyone.

3
00:00:14,380 --> 00:00:15,640
My name is Chris Fleizach.

4
00:00:15,640 --> 00:00:18,890
I'm on the iPhone Accessibility and VoiceOver team.

5
00:00:20,010 --> 00:00:23,830
So when I talk about accessibility, what do I mean?

6
00:00:23,830 --> 00:00:29,550
I think about accessibility as using
technology to overcome disabilities.

7
00:00:29,550 --> 00:00:36,260
So things like closed captioning, things like
system zoom, screen readers to help people

8
00:00:36,260 --> 00:00:42,950
who can't see the screen use a computer, and
there's lots of other kinds of technologies.

9
00:00:42,950 --> 00:00:48,780
So on the iPhone and Apple what
do we have for accessibility?

10
00:00:48,780 --> 00:00:52,580
Well most of our accessibility options are
found in Settings, General, Accessibility.

11
00:00:52,580 --> 00:00:54,480
We have a lot of great built-in things.

12
00:00:54,480 --> 00:00:56,450
Things like system-wide zoom.

13
00:00:56,450 --> 00:00:58,250
We have black on white.

14
00:00:58,250 --> 00:01:03,210
In 4.0 we have large text so you can
make your fonts bigger in some apps.

15
00:01:03,210 --> 00:01:06,360
But what I want to talk about mostly today is VoiceOver.

16
00:01:06,360 --> 00:01:10,700
And this will really give you the most bang for your buck.

17
00:01:10,700 --> 00:01:17,540
So VoiceOver is the iPhone's built-in screen reader.

18
00:01:17,540 --> 00:01:20,950
It's the first touch-based screen reader.

19
00:01:20,950 --> 00:01:26,040
And since we released it in the past
year the response has been tremendous.

20
00:01:26,040 --> 00:01:31,800
Really we've been blown away by how widely it's been
adopted and how quick the community has taken to it.

21
00:01:31,800 --> 00:01:39,360
My friend Dean, who is the QA engineer in the front row
confided in me earlier that he'd rather get rid of his wife

22
00:01:39,360 --> 00:01:44,290
than live for one day without his iPhone.

23
00:01:44,290 --> 00:01:49,190
So, and the reason, half that story is because of Apple.

24
00:01:49,190 --> 00:01:53,550
We've done a great job making VoiceOver
accessible and work with the all the apps

25
00:01:53,550 --> 00:01:57,330
but the other half are app developers making great apps.

26
00:01:57,330 --> 00:02:01,920
Not only making great apps that are
useful but making them accessible.

27
00:02:01,920 --> 00:02:06,320
So I'd like just to read a quote
from one our users who said,

28
00:02:06,320 --> 00:02:12,620
"I predict that the visually impaired community will agree
that the iPhone was the single biggest game-changing piece

29
00:02:12,620 --> 00:02:16,600
of technology in the assistive
tech industry in modern times."

30
00:02:16,600 --> 00:02:23,570
Now that's a pretty bold statement, but
with VoiceOver and your apps that is true.

31
00:02:23,570 --> 00:02:30,050
So today we're going to learn how to make your apps even
more accessible, make them better for VoiceOver users

32
00:02:30,050 --> 00:02:36,020
so we can keep this ball rolling and continue
making the greatest accessible product ever made.

33
00:02:36,020 --> 00:02:43,210
So before we get into the meat of the presentation,
which is learning how to make your app accessible I want

34
00:02:43,210 --> 00:02:50,160
to give you a little demo of VoiceOver and some of
the things that it can do and also explain what I mean

35
00:02:50,160 --> 00:02:53,530
when an app is accessible and when it's not accessible.

36
00:02:53,530 --> 00:02:55,750
Alright so we've got a standard phone here.

37
00:02:55,750 --> 00:03:00,250
VoiceOver and Accessibility work on 3GS phones and above.

38
00:03:00,250 --> 00:03:06,000
So the first thing we want to do
is go into Settings and inside

39
00:03:06,000 --> 00:03:09,380
of the General Panel there is this Accessibility thing.

40
00:03:09,380 --> 00:03:11,440
We have all our options here.

41
00:03:11,440 --> 00:03:17,720
What I want do first is turn on Triple Click Home
and this going to be a great thing for you to use

42
00:03:17,720 --> 00:03:21,540
if you're testing VoiceOver or you just
want to use VoiceOver on a regular basis.

43
00:03:21,540 --> 00:03:27,280
I use this myself when I'm driving in the car and I want
to change my music but I don't want to look at the screen.

44
00:03:27,280 --> 00:03:31,180
So Triple Click I can set that in Toggle VoiceOver.

45
00:03:31,180 --> 00:03:34,290
Now when I use the Home button
three times, VoiceOver will turn on.

46
00:03:34,290 --> 00:03:40,430
Quickly I'd just like to show you some of
the things you'll see in the VoiceOver panel.

47
00:03:40,430 --> 00:03:46,620
We've added some great new features in 4.0 including
Bluetooth Braille so you can connect a Braille display,

48
00:03:46,620 --> 00:03:51,330
we have a way for you to change the language on
the fly and we have some great new ways to type.

49
00:03:51,330 --> 00:03:54,810
All of these make VoiceOver even better in 4.0.

50
00:03:54,810 --> 00:03:58,510
So let's turn on VoiceOver and see what happens.

51
00:03:58,510 --> 00:04:06,580
[ VoiceOver Sound ]

52
00:04:06,580 --> 00:04:10,180
Alright so what it does it speaks things on the screen.

53
00:04:10,180 --> 00:04:11,570
I can touch something--

54
00:04:11,570 --> 00:04:14,170
>> VoiceOver speaks something on the screen.

55
00:04:14,170 --> 00:04:16,300
>> And it's going to speak it back to me.

56
00:04:16,300 --> 00:04:21,810
So as I touch around the screen
[VoiceOver Sounds] I hear different things.

57
00:04:21,810 --> 00:04:26,430
I can also do other gestures to
help me move around the screen.

58
00:04:26,430 --> 00:04:33,740
[Background VoiceOver Sounds] Flicking left or flicking
right will move me to the previous or next item.

59
00:04:33,740 --> 00:04:46,820
Then when I'm ready to press a button I select
it once and then I double-tap to press it.

60
00:04:46,820 --> 00:04:52,150
So VoiceOver takes all of the normal
gestures and changes them in a way

61
00:04:52,150 --> 00:04:54,750
that makes sense for someone who can't see the screen.

62
00:04:54,750 --> 00:04:57,860
So there's a good reason that you
can't just touch an item and press it

63
00:04:57,860 --> 00:05:02,650
because if you can't see the screen you're
going to be activating things all the time.

64
00:05:02,650 --> 00:05:05,090
So let's take a look at an app that's accessible.

65
00:05:05,090 --> 00:05:06,650
>> Messages stocks.

66
00:05:06,650 --> 00:05:08,510
>> Something like stocks.

67
00:05:08,510 --> 00:05:13,620
[ VoiceOver Sounds ]

68
00:05:13,620 --> 00:05:14,300
>> Stocks.

69
00:05:14,300 --> 00:05:19,520
Dow Jones industrial average 10,249.54 up.

70
00:05:19,520 --> 00:05:23,960
>> So what we see in stocks is that it's going to give
me all the information that I want when I go to it.

71
00:05:23,960 --> 00:05:25,350
[Sound effects] I can touch all around the screen.

72
00:05:25,350 --> 00:05:27,940
>> Incorporated, 15.18.

73
00:05:27,940 --> 00:05:31,460
>> Get the right stuff that I would expect to hear.

74
00:05:31,460 --> 00:05:37,590
The graph down here, which I can probably turn on--

75
00:05:37,590 --> 00:05:37,940
>> Settings.

76
00:05:37,940 --> 00:05:38,960
>> WiFi --

77
00:05:38,960 --> 00:05:40,610
>> General.

78
00:05:40,610 --> 00:05:45,100
Settings. Airplane mode off.

79
00:05:45,100 --> 00:05:46,780
Backswitcher stocks.

80
00:05:46,780 --> 00:05:47,970
[Sound effects]

81
00:05:47,970 --> 00:05:51,500
>> Select WiFi to iPhone.

82
00:05:51,500 --> 00:05:54,160
Selected. iPhone stocks.

83
00:05:54,160 --> 00:05:55,570
Dow Jones industrial average.

84
00:05:55,570 --> 00:06:01,390
>> So an accessible app will give me access to
all parts [Sound effects] of the app even a graph.

85
00:06:01,390 --> 00:06:06,100
>> March 17th 10,770; December 30th.

86
00:06:06,100 --> 00:06:09,980
>> So even the graph here, even the chart is accessible.

87
00:06:09,980 --> 00:06:12,350
I can feel this chart and get to all of it.

88
00:06:12,350 --> 00:06:18,890
So there's no limits to what you can make accessible
and we're going to try to push the boundaries today

89
00:06:18,890 --> 00:06:24,410
with another app I have here, which is our app that
we're going to be working with called the Bowler app.

90
00:06:24,410 --> 00:06:28,230
You can get this in your WWDC sample library.

91
00:06:28,230 --> 00:06:29,510
>> Bowler no.

92
00:06:29,510 --> 00:06:36,310
>> So if I open this Bowler app the first thing
you're going to notice is the fantastic graphics.

93
00:06:36,310 --> 00:06:43,660
Once you get beyond that and see it's sort of a game
where you can play things, you can move this ball around

94
00:06:43,660 --> 00:06:50,510
and you can throw the ball and score and so on,
but if I try to use it with VoiceOver what happens?

95
00:06:50,510 --> 00:06:56,320
[Sound effects]

96
00:06:56,320 --> 00:06:59,150
So the first thing I notice is I've got this bonking sound.

97
00:06:59,150 --> 00:07:01,300
That means the VoiceOver user can't touch anything.

98
00:07:01,300 --> 00:07:03,380
So that part is inaccessible.

99
00:07:03,380 --> 00:07:10,130
If I go down to the bottom [VoiceOver Sound]
it gave me some gibberish for the name

100
00:07:10,130 --> 00:07:11,770
of this button and that's not good either.

101
00:07:11,770 --> 00:07:17,200
If I open the button [Sound effects] I
found that this was, "Ah Bowling News."

102
00:07:17,200 --> 00:07:25,260
If I try to touch [VoiceOver Sounds] I can't
even get to the content in that table view

103
00:07:25,260 --> 00:07:28,400
so that is an example of an inaccessible app.

104
00:07:28,400 --> 00:07:35,800
Now in the next few minutes we're going to learn how to
turn this app into a completely accessible bowling game

105
00:07:35,800 --> 00:07:37,980
where everything works as you might expect.

106
00:07:37,980 --> 00:07:40,180
So how are we going to make our app accessible?

107
00:07:40,180 --> 00:07:46,010
We're going to use the UIAccessibility
protocol, it came out in iPhone 3.0,

108
00:07:46,010 --> 00:07:50,420
and it allows your app to give the
right information to VoiceOver.

109
00:07:50,420 --> 00:07:52,950
So how does this work?

110
00:07:52,950 --> 00:07:56,550
VoiceOver is a separate app running in the background.

111
00:07:56,550 --> 00:07:59,900
It intercepts all the gestures and touch events that go on.

112
00:07:59,900 --> 00:08:09,680
So you might press down on this time and when that
happens VoiceOver says what is the element at this point

113
00:08:09,680 --> 00:08:13,370
by asking through the UIAccessibility protocol.

114
00:08:13,370 --> 00:08:20,630
The app, your app, collects the information that's
important, things like what is the TXT of this sends it back

115
00:08:20,630 --> 00:08:25,870
to VoiceOver and then VoiceOver
can do with it what it needs.

116
00:08:25,870 --> 00:08:26,540
It can speak it.

117
00:08:26,540 --> 00:08:32,740
It can Braille it and other output devices it might have.

118
00:08:32,740 --> 00:08:38,070
So we're going to find out that accessibility
is not only easy to add but you're going

119
00:08:38,070 --> 00:08:40,870
to find that most of the work is actually done.

120
00:08:40,870 --> 00:08:45,800
So our hard work will be adding labels and
that's going to take us 75 percent of the way.

121
00:08:47,130 --> 00:08:53,350
So the things we want to focus on today in the Accessibility
protocol are the attributes that allows VoiceOver

122
00:08:53,350 --> 00:08:59,940
to know stuff about information, containers, which allows us
to do some custom work and some new things called actions.

123
00:08:59,940 --> 00:09:06,970
So here are the attributes that we
have in the UIAccessibility API.

124
00:09:06,970 --> 00:09:09,900
There is a few of them.

125
00:09:09,900 --> 00:09:16,190
The most important of them though are things that
address the two most common things in an accessible app.

126
00:09:16,190 --> 00:09:22,060
One, can VoiceOver get to the element
and that is isAccessibilityElement.

127
00:09:22,060 --> 00:09:26,600
The other is can VoiceOver speak this
element and that's accessibilityLabel.

128
00:09:26,600 --> 00:09:31,120
So if you return yes for AccessibilityElement
VoiceOver can get to this element.

129
00:09:31,120 --> 00:09:36,440
If you give it an accessibilityLabel VoiceOver
can speak this instead of some gibberish.

130
00:09:37,590 --> 00:09:42,170
We also have this notion of accessibility Traits.

131
00:09:42,170 --> 00:09:49,670
Now traits encapsulate the state, the role, generally the
behavior of this item and it uses a bitmask of integers

132
00:09:49,670 --> 00:09:56,340
so you can combine things and tell VoiceOver more
about the object it is trying to communicate with.

133
00:09:56,340 --> 00:10:00,990
So to take a quick example of what
I mean by accessibilityTraits

134
00:10:00,990 --> 00:10:03,150
so we've got a screen that looks like this.

135
00:10:03,150 --> 00:10:06,540
There's a bunch of different elements on this screen.

136
00:10:06,540 --> 00:10:09,910
We've got some static text at the top
so that would get a Static text trait.

137
00:10:09,910 --> 00:10:13,350
We've got an image in the middle,
which would have an Image trait.

138
00:10:13,350 --> 00:10:20,160
We've got a button down at the bottom that would have
a Button trait and a slider with an Adjustable trait.

139
00:10:20,160 --> 00:10:26,090
Pretty straightforward, the naming for those traits is
on the reference guide but because these are a bitmask

140
00:10:26,090 --> 00:10:28,850
of integers they have a little bit more power.

141
00:10:28,850 --> 00:10:30,480
An object can have more than one trait.

142
00:10:30,480 --> 00:10:34,750
For example, that Static text can also be Summary Element.

143
00:10:34,750 --> 00:10:39,100
That means when VoiceOver enters that screen
that's what it's going to speak first.

144
00:10:39,100 --> 00:10:45,510
That button on the bottom can also have the Starts
Media Session trait so when VoiceOver presses

145
00:10:45,510 --> 00:10:50,270
that button it's going to shut off and
not talk while it's trying to play music.

146
00:10:53,070 --> 00:10:55,340
There are some other attributes as well.

147
00:10:55,340 --> 00:11:00,870
You won't need them as often because they often
come for free if you're using UIKit software.

148
00:11:00,870 --> 00:11:06,020
The accessibilityFrame is the onscreen frame of this object.

149
00:11:06,020 --> 00:11:10,260
The accessibilityValue is the dynamically
changing value of an object.

150
00:11:10,260 --> 00:11:12,990
The simplest example is in a TXT field.

151
00:11:12,990 --> 00:11:20,520
The content of the TXT field is then an accessibilityValue
while the label will describe the TXT field.

152
00:11:20,520 --> 00:11:27,210
Content like chris@apple.com is the
accessibilityValue and label is to field.

153
00:11:27,210 --> 00:11:30,830
The accessibilityHint is an interesting little thing.

154
00:11:30,830 --> 00:11:35,790
It allows you to provide a little bit
more context and help about this object

155
00:11:35,790 --> 00:11:42,850
so you can give the VoiceOver user a little
bit more help to know what's going to happen.

156
00:11:42,850 --> 00:11:45,050
So how do we add accessibility?

157
00:11:45,050 --> 00:11:48,100
The simplest way is through Interface Builder.

158
00:11:48,100 --> 00:11:55,480
Once you open up an object and go to the inspector you'll
see in the fourth tab there's a little Accessibility section

159
00:11:55,480 --> 00:11:59,780
so we have things that you can control
like is this an accessibilityElement?

160
00:11:59,780 --> 00:12:01,760
You can set the label directly.

161
00:12:01,760 --> 00:12:07,330
You can set the hint directly and you
can choose the traits that you want.

162
00:12:07,330 --> 00:12:11,610
Now most of the time if you just have a
standard UI Kit control like a UI button,

163
00:12:11,610 --> 00:12:14,200
UI label all that stuff is just there for you.

164
00:12:14,200 --> 00:12:16,480
You don't even have to touch it.

165
00:12:16,480 --> 00:12:20,890
If you have a custom element you might need to do that.

166
00:12:20,890 --> 00:12:25,550
So let's take a look at adding Accessibility to an app.

167
00:12:25,550 --> 00:12:31,150
So the first thing I want to do, we've got this app running,

168
00:12:31,150 --> 00:12:35,150
so I didn't show you exactly how it
worked but we can move this ball around.

169
00:12:35,150 --> 00:12:42,290
We can select it and then bowl
it and then the score changes.

170
00:12:42,290 --> 00:12:45,700
So what are the kinds of things we want to do?

171
00:12:45,700 --> 00:12:49,760
Well the first thing I'd like to do is add
a label to these buttons at the bottom,

172
00:12:49,760 --> 00:12:52,980
which we heard were sort of gibberish before.

173
00:12:52,980 --> 00:13:02,080
So we open up Interface Builder, look at these buttons.

174
00:13:02,080 --> 00:13:09,580
The first button here we see has got no label, no
hint but it is accessible and it does have a button.

175
00:13:09,580 --> 00:13:12,930
So let's give it a label like Settings.

176
00:13:12,930 --> 00:13:16,460
We've got this other one down here with no label as well.

177
00:13:16,460 --> 00:13:19,360
Let's give this a label like Bowling News.

178
00:13:25,270 --> 00:13:27,600
Alright, so that was pretty easy.

179
00:13:27,600 --> 00:13:33,320
Let's see what turns out.

180
00:13:35,350 --> 00:13:38,330
Alright, so it's very accessible.

181
00:13:38,330 --> 00:13:40,110
Can you tell?

182
00:13:40,110 --> 00:13:41,800
Alright, so we have problem.

183
00:13:41,800 --> 00:13:44,600
So how do we tell that this is now accessible?

184
00:13:44,600 --> 00:13:54,490
So what we can do is go to Settings,
General, Accessibility, turn this thing on.

185
00:13:54,490 --> 00:14:00,520
We're going to get this weird little looking window
where it basically mimics the behavior of VoiceOver.

186
00:14:00,520 --> 00:14:01,910
So I touch once.

187
00:14:01,910 --> 00:14:06,720
It will select something and tell me the
label, traits, frame, et cetera about it.

188
00:14:06,720 --> 00:14:11,520
If I touch, if I double-tap it will activate that object.

189
00:14:11,520 --> 00:14:21,820
So let's kill our Bowling app and start over again.

190
00:14:21,820 --> 00:14:24,300
See if this thing is accessible now.

191
00:14:24,300 --> 00:14:31,600
So now if I click on these buttons,
say its label, Settings, grade,

192
00:14:31,600 --> 00:14:35,810
that's what I added in for this one, label Bowling News.

193
00:14:35,810 --> 00:14:39,140
Alright, so we've made those two buttons accessible.

194
00:14:39,140 --> 00:14:40,910
What else can we do?

195
00:14:40,910 --> 00:14:48,190
So I have the Settings button and some
things here that change the ball color.

196
00:14:48,190 --> 00:14:56,420
So I can get a yellow ball, a blue ball,
all the ball colors you really want.

197
00:14:56,420 --> 00:14:59,860
But can I change them through Accessibility?

198
00:14:59,860 --> 00:15:02,140
I can't even click on these things.

199
00:15:02,140 --> 00:15:05,080
So what can we do for that?

200
00:15:05,080 --> 00:15:12,180
We go back here, open up the right
view and now we look at these elements.

201
00:15:12,180 --> 00:15:13,170
So what do we notice?

202
00:15:13,170 --> 00:15:14,770
They are UI controls.

203
00:15:14,770 --> 00:15:17,670
So UI controls don't have any base accessibility on them.

204
00:15:17,670 --> 00:15:19,420
We have to add them.

205
00:15:19,420 --> 00:15:24,700
So that means checking this box to
make it accessible, adding a label,

206
00:15:24,700 --> 00:15:30,240
blue ball color and possibly changing the trait.

207
00:15:30,240 --> 00:15:34,440
So this one is a button and we want
to do the same for all of these.

208
00:15:34,440 --> 00:15:37,830
This one is red.

209
00:15:37,830 --> 00:15:40,020
This one is yellow.

210
00:15:46,990 --> 00:15:51,940
Now when we check this out we can now select these things.

211
00:15:51,940 --> 00:15:53,040
We see that it has a right label.

212
00:15:53,040 --> 00:15:58,930
It has a right button.

213
00:15:58,930 --> 00:16:04,290
Alright, so what that means is now the VoiceOver user
can get to those things and change the ball color.

214
00:16:04,290 --> 00:16:06,220
We know how important that is.

215
00:16:06,220 --> 00:16:08,540
So that's really how easy it is.

216
00:16:08,540 --> 00:16:10,350
We just made something accessible.

217
00:16:10,350 --> 00:16:14,820
It didn't require any heartache and
that's going to get you pretty far

218
00:16:14,820 --> 00:16:19,550
but we can also add accessibility and
code in case you have custom views.

219
00:16:19,550 --> 00:16:21,820
So how do we add Accessibility in Code?

220
00:16:21,820 --> 00:16:26,040
Well there's two main methods,
one would be Setting the value.

221
00:16:26,040 --> 00:16:28,400
This would be if your accessibility
values don't really change.

222
00:16:28,400 --> 00:16:31,500
So say I have a Play button and it's always a Play button.

223
00:16:31,500 --> 00:16:39,140
Well I just set that to isAccessibility on YES, set
the label Play, we're done, just walk away from it.

224
00:16:39,140 --> 00:16:42,930
But you might have other views that are more dynamic.

225
00:16:42,930 --> 00:16:47,390
Say you have like a temperature view where
the temperature changes on regular basis.

226
00:16:47,390 --> 00:16:52,450
So in this case you would override in your
subtask, YES for your accessibilityElement,

227
00:16:52,450 --> 00:16:57,540
give it a label like current temperature
and you can return the accessibilityValue

228
00:16:57,540 --> 00:17:01,620
as whatever the value is for that city.

229
00:17:01,620 --> 00:17:07,520
Alright, so that gives us Accessibility Attributes.

230
00:17:07,520 --> 00:17:12,460
That gives us a lot of accessibility of how VoiceOver
is going to interact with objects on your screen.

231
00:17:12,460 --> 00:17:16,380
What we haven't talked about is
what happens when content changes?

232
00:17:16,380 --> 00:17:21,130
So there are notifications that allow us
to tell VoiceOver when something happens.

233
00:17:21,130 --> 00:17:25,540
Like if we look at this example, say I
select an album in this iTunes store.

234
00:17:25,540 --> 00:17:29,330
We get a completely different screen.

235
00:17:29,330 --> 00:17:32,750
In that scenario we want to tell
VoiceOver that the screen has changed.

236
00:17:32,750 --> 00:17:36,780
When all of the elements are gone we get a
new, basically we get a whole new screen.

237
00:17:36,780 --> 00:17:40,550
To do that we send UIAccessibilityScreenChanged.

238
00:17:40,550 --> 00:17:46,440
The other kind of content change is
when we get just a few things changed,

239
00:17:46,440 --> 00:17:51,370
maybe just a label changes a few elements
disappear, but it's essentially the same screen.

240
00:17:51,370 --> 00:17:55,500
So for example if I press the Price
button it's going to change to Buy Now

241
00:17:55,500 --> 00:18:00,620
and all that happens is just the button
changed its size and it changed its label.

242
00:18:00,620 --> 00:18:04,920
To tell VoiceOver that happened we
post a LayoutChangeNotification.

243
00:18:04,920 --> 00:18:09,390
Alright, so let's see how we can do some of this in code.

244
00:18:09,390 --> 00:18:14,440
We're going to start making our app really accessible.

245
00:18:14,440 --> 00:18:24,400
So the first thing, our first problem is
that this bowling ball, we can't touch it.

246
00:18:24,400 --> 00:18:29,880
I can click on these buttons down here, even
this UILabel, I can't get to the bowling ball.

247
00:18:29,880 --> 00:18:35,910
So let's make our bowling ball
accessible at the right position here.

248
00:18:35,910 --> 00:18:41,890
Where I create my bowling ball object
and I'm going to add in a few things.

249
00:18:41,890 --> 00:18:44,700
One bowling ball is accessibilityElement.

250
00:18:44,700 --> 00:18:53,220
Yes, set the trait to a button for now, give it
an accessibiltyLabel and an accessibilityHint.

251
00:18:53,220 --> 00:18:55,310
Notice those are localized strings.

252
00:18:55,310 --> 00:18:56,890
VoiceOver speaks over 20 languages.

253
00:18:56,890 --> 00:19:09,430
So if we do that, check it out in the
simulator, now I can select my bowling ball.

254
00:19:09,430 --> 00:19:15,420
I got the hint that says Align the Ball by Tilting
Left or Right, When Ready Select the Ball, Then Throw.

255
00:19:15,420 --> 00:19:18,440
So that's a pretty good hint to
tell the user what's going on.

256
00:19:18,440 --> 00:19:25,580
It's not the label obviously, but it's the little bit
of extra context to let the user know what's happening.

257
00:19:25,580 --> 00:19:30,020
So another thing we can do with this
bowling ball is make it Selected.

258
00:19:30,020 --> 00:19:34,170
So when it's in the Selected State it's ready to throw.

259
00:19:34,170 --> 00:19:38,020
But if you look at the traits there's
nothing that says this is Selected

260
00:19:38,020 --> 00:19:42,550
so how would we make the bowling ball say its Selected now?

261
00:19:42,550 --> 00:19:45,700
Well I'll go inside of this bowling
view, this bowling ball view.

262
00:19:45,700 --> 00:19:55,450
We'll go down to where we say Set Ball
Selected and we'll change the traits.

263
00:19:55,450 --> 00:20:00,950
So if the ball is Selected I'll OrInThisTraitSelected.

264
00:20:00,950 --> 00:20:06,110
If it's not selected I'll AndNotTheTrait,
which basically removes the trait.

265
00:20:06,110 --> 00:20:17,250
Now if we give this a try we'll see that the traits on
the bowling ball change whether it's Selected or not.

266
00:20:17,250 --> 00:20:20,630
Selected I might have to click
away to get the new selection.

267
00:20:20,630 --> 00:20:22,630
Traits Selected you'll see it right here.

268
00:20:22,630 --> 00:20:29,740
If we Unselect it the trait is no longer selected.

269
00:20:29,740 --> 00:20:35,970
Alright, that's pretty good if we made our
bowling ball accessible we're getting there.

270
00:20:35,970 --> 00:20:42,460
So another thing we saw was in this Bowling News page.

271
00:20:42,460 --> 00:20:49,430
And our first problem is this RSS
button, the tiny thing at the bottom.

272
00:20:49,430 --> 00:20:52,550
It says label SM newsfeed BTN.

273
00:20:52,550 --> 00:20:55,280
Where do you think that label comes from?

274
00:20:55,280 --> 00:20:58,970
Well hopefully the developer didn't
set that so VoiceOver will try

275
00:20:58,970 --> 00:21:02,060
to take the imaged name if it doesn't have any label.

276
00:21:02,060 --> 00:21:05,350
So it will give you something but
that's not a good label to have.

277
00:21:05,350 --> 00:21:09,190
So let's see if we can change that.

278
00:21:09,190 --> 00:21:13,080
So we'll go into our Bowling News table.

279
00:21:13,080 --> 00:21:21,260
Here's our Link button that we create and we can
add the appropriate label, a note for the trait,

280
00:21:21,260 --> 00:21:25,300
I've set that to a tight link,
so instead of a button how come,

281
00:21:25,300 --> 00:21:31,160
because when you open it it might
open a web page instead of a button.

282
00:21:31,160 --> 00:21:34,320
So let's see what that looks like.

283
00:21:40,570 --> 00:21:48,960
Alright, we got label more information, the trait is the
link and double-click on that, it opens up a web page.

284
00:21:53,190 --> 00:22:01,040
Alright, so we're getting there, so in there you might have
noticed there's a big problem in our Bowling News, however,

285
00:22:01,040 --> 00:22:06,080
is that we can't get to any of the
News and that's kind of important.

286
00:22:06,080 --> 00:22:07,870
So how are we going to do that?

287
00:22:07,870 --> 00:22:12,730
Well, we have our Bowling News table view
cell, which is a subclass of table view

288
00:22:12,730 --> 00:22:18,710
and all we have to do is add an accessibilityLabel.

289
00:22:18,710 --> 00:22:28,440
So what I've done here is just taken the News
title and the News subtitle that are both I bars

290
00:22:28,440 --> 00:22:32,450
in the class and return them as a combined string.

291
00:22:32,450 --> 00:22:42,250
So in this way I've combined information
that's generally together so that I can click

292
00:22:42,250 --> 00:22:45,880
in this one big area and get all of my information together.

293
00:22:45,880 --> 00:22:47,730
So this is to serve an important point.

294
00:22:47,730 --> 00:22:54,360
In a touch-base interface it's really nice when elements
are big and easy to touch when you can't see the screen.

295
00:22:54,360 --> 00:23:03,710
So by combining the title and the subtitle I've made
this one big area that makes it really easy to get to.

296
00:23:03,710 --> 00:23:08,000
Alright, so I press Done, I don't know if you can see.

297
00:23:08,000 --> 00:23:15,920
Our only problem here is that the
cursor, that little box is still there.

298
00:23:15,920 --> 00:23:20,290
Likewise when I open this up our
little box is still at the bottom.

299
00:23:20,290 --> 00:23:24,680
So what we need to do is post a ScreenChange
notification when this Bowling News appears.

300
00:23:24,680 --> 00:23:36,120
So if we go to BowlingViewController again
find out where this Bowling News appears

301
00:23:39,750 --> 00:23:42,980
and we can send out the right ScreenChange.

302
00:23:42,980 --> 00:23:48,130
So after the animation is done I'll
post the ScreenChange notification.

303
00:23:48,130 --> 00:23:51,630
Likewise when the view goes away
I'll also post a ScreenChange.

304
00:23:51,630 --> 00:23:58,630
So now when this button opens we'll notice

305
00:23:58,630 --> 00:24:06,180
in the notifications list we'll see a ScreenChange
amongst other things but the cursor has also disappeared.

306
00:24:06,180 --> 00:24:10,070
When I press the Done button the cursor will also go away.

307
00:24:10,070 --> 00:24:14,040
That informs you that the ScreenChange
has been posted successfully.

308
00:24:14,040 --> 00:24:18,610
So that's Setting Accessibility Attributes.

309
00:24:18,610 --> 00:24:19,970
Just wait.

310
00:24:21,980 --> 00:24:24,760
[Applause] Hold your applause, because there's more.

311
00:24:24,760 --> 00:24:30,520
Now that's going to get you 90 percent
of the way to make your app accessible.

312
00:24:30,520 --> 00:24:32,950
How do we do the rest of this?

313
00:24:32,950 --> 00:24:38,440
So to get you the next 8 percent or so we're
going to talk about Accessibility Containers.

314
00:24:38,440 --> 00:24:43,820
Now containers allow you to deal with
custom views, things that you draw yourself

315
00:24:43,820 --> 00:24:47,510
that might have multiple parts inside of it.

316
00:24:47,510 --> 00:24:50,060
So you would look at a view that looks like this.

317
00:24:50,060 --> 00:24:55,690
This month view we might have one UIView
that draws all these tiny little boxes there.

318
00:24:55,690 --> 00:25:02,660
We need to return separate accessibility information for
each of those boxes because they are each separate elements.

319
00:25:02,660 --> 00:25:05,410
So we need an element for October 14th.

320
00:25:05,410 --> 00:25:07,660
Likewise we need an element for October 11th.

321
00:25:07,660 --> 00:25:10,850
So how we are going to do this?

322
00:25:10,850 --> 00:25:14,250
You might think this is really
complicated but you'd be wrong.

323
00:25:14,250 --> 00:25:16,670
There's two steps.

324
00:25:16,670 --> 00:25:20,260
Step one, make the UIAccessibilityElement.

325
00:25:20,260 --> 00:25:26,640
This is like a shell to hold all this
good accessibility nougats inside of it.

326
00:25:26,640 --> 00:25:30,930
So we make the UIAccessibilityElement.

327
00:25:30,930 --> 00:25:36,430
We emit it with its container view and
then we start stuffing things inside of it.

328
00:25:36,430 --> 00:25:39,540
So we put in a label inside of that.

329
00:25:39,540 --> 00:25:43,170
We put in a frame inside of that, the onscreen rectangle.

330
00:25:43,170 --> 00:25:49,890
We put in any traits that it might
have that might be a selected trait.

331
00:25:49,890 --> 00:25:54,640
And finally we should store this
object so that we can reference it.

332
00:25:54,640 --> 00:25:58,990
We're going to return this object
once we're done making them.

333
00:25:58,990 --> 00:26:00,950
Alright, so that's step one.

334
00:26:00,950 --> 00:26:05,920
Step two is implement this AccessibilityContainer protocol.

335
00:26:05,920 --> 00:26:13,160
So in your custom UIView inside of this month view
you're going to basically mirror what NSArray does.

336
00:26:13,160 --> 00:26:17,630
So you're going to tell them how many
accessible elements you have with a count.

337
00:26:17,630 --> 00:26:21,970
You're going to tell it what is an element at this index,

338
00:26:21,970 --> 00:26:26,180
and you're going to tell it what
is the index of this object.

339
00:26:26,180 --> 00:26:33,790
So three methods that you can implement and they can mirror
NSarray, pretty straightforward, and with that you're going

340
00:26:33,790 --> 00:26:39,200
to be able to take a custom view and turn
it into something that's very accessible.

341
00:26:39,200 --> 00:26:41,240
So let's see how we can do that.

342
00:26:41,240 --> 00:26:45,930
So which part of this view is very
custom and not accessible?

343
00:26:45,930 --> 00:26:49,860
So these frame score things up here, totally inaccessible.

344
00:26:49,860 --> 00:26:51,940
I can't select them at all.

345
00:26:51,940 --> 00:26:54,840
So how are we going to do this?

346
00:26:54,840 --> 00:26:58,700
Inside of my scorecard view I have all this code.

347
00:26:58,700 --> 00:27:04,710
We're just going to go to the bottom and
start pasting in things that we want.

348
00:27:04,710 --> 00:27:07,810
So the first thing we do is make our accessible framework.

349
00:27:07,810 --> 00:27:11,760
So I'm going to have this method accessible elements.

350
00:27:11,760 --> 00:27:17,950
It's going to store my accessible objects
and return them for me whenever I need them.

351
00:27:17,950 --> 00:27:21,140
So this is just sort of the standard
template that you'd want.

352
00:27:21,140 --> 00:27:24,830
You're going to check if they're NIL if they're
not NIL you'll make the array and return them.

353
00:27:24,830 --> 00:27:29,720
At that point we're ready to make
our UIAccessibilityElement.

354
00:27:29,720 --> 00:27:39,960
So I have three frames that we
saw, whatever these two frames are.

355
00:27:39,960 --> 00:27:42,060
So I want to make three of them.

356
00:27:42,060 --> 00:27:45,230
Each one I make a UIAccessibilityElement.

357
00:27:45,230 --> 00:27:53,500
I've set the container to Self because that's a custom view
and I add each one to the array of accessible elements.

358
00:27:53,500 --> 00:27:56,700
Alright, so that part's done.

359
00:27:56,700 --> 00:28:00,700
I made the accessible elements and now I
need to stick some information into them.

360
00:28:00,700 --> 00:28:04,900
So how do I do that?

361
00:28:04,900 --> 00:28:20,680
So it depends on where I want to put this but I
will put this I think here so inside of this part

362
00:28:20,680 --> 00:28:28,730
where I'm drawing this Rect and it's a big method inside
of drawRect, I'm calculating the string I want to be

363
00:28:28,730 --> 00:28:36,870
so I'll pull out the part that I want for what index of the
frame and then I'll set the label to this accessible string

364
00:28:36,870 --> 00:28:41,120
that I've calculated, and the accessible
string is just what's the score of this frame.

365
00:28:41,120 --> 00:28:43,540
So I've set the label.

366
00:28:43,540 --> 00:28:44,870
That tells VoiceOver what to speak.

367
00:28:44,870 --> 00:28:48,640
It needs one more part however,
it needs the onscreen rectangle.

368
00:28:48,640 --> 00:28:53,680
So when VoiceOver touches this thing
it's going to know where it is.

369
00:28:56,070 --> 00:29:04,070
So I can do that with these three methods and
what they do is get me the onscreen rectangle.

370
00:29:04,070 --> 00:29:07,150
So I don't want to just pass at
any frames or bounds for this view

371
00:29:07,150 --> 00:29:12,040
because that won't be the onscreen frame it
will be the frame inside of this subframe.

372
00:29:12,040 --> 00:29:13,050
So how do I do that?

373
00:29:13,050 --> 00:29:15,840
I take my rectangle for this view.

374
00:29:15,840 --> 00:29:22,790
I say convert it to the Self window then I
ask the window to convert it to a NIL window.

375
00:29:22,790 --> 00:29:27,840
So those two lines take a frame for this
view, convert it to the onscreen rectangle,

376
00:29:27,840 --> 00:29:33,540
and then I can set it as my accessibility
frame and that will give me the onscreen frame.

377
00:29:33,540 --> 00:29:41,110
Alright, so I've made the accessible elements, I've stored
them, I've put some information in them and now I just need

378
00:29:41,110 --> 00:29:45,520
to implement this protocol, the
accessibility container protocol.

379
00:29:45,520 --> 00:29:53,500
So I've done that with these three methods, accessibility
element count, the index of the accessibility element

380
00:29:53,500 --> 00:29:57,620
and the element at the index, which
you as you can see just mirror NSarray.

381
00:29:57,620 --> 00:30:02,060
Alright, it's going to happen.

382
00:30:02,060 --> 00:30:15,160
Now if I touch these things it says Label, Frame 1, 0, it's
got the right frame so all these now have the right size.

383
00:30:15,160 --> 00:30:21,250
If I try to bowl, 9 pins pretty good.

384
00:30:21,250 --> 00:30:25,490
If I check this one again it says frame 1, 9, 9 pins.

385
00:30:25,490 --> 00:30:28,950
See if I can get a spare.

386
00:30:28,950 --> 00:30:32,070
No. Come on.

387
00:30:32,070 --> 00:30:35,760
Oh a strike.

388
00:30:35,760 --> 00:30:40,220
Alright, so now the label says
frame 2, 19, You Got a Strike.

389
00:30:40,220 --> 00:30:42,030
So that's some good labeling there.

390
00:30:42,030 --> 00:30:43,650
That's very informative.

391
00:30:43,650 --> 00:30:45,700
So that's Accessibility Containers.

392
00:30:45,700 --> 00:30:49,190
We've taken a very custom view
with lots of little drawn widgets

393
00:30:49,190 --> 00:30:55,500
and made into an accessible object
in a pretty short amount of time.

394
00:30:55,500 --> 00:30:59,480
So there's something new in 4.0
called Accessibility Actions.

395
00:30:59,480 --> 00:31:04,600
This will get you the final 2 percent
to make your app completely accessible.

396
00:31:04,600 --> 00:31:09,520
What these do, what this does is basically
allows you to make a new kind of custom element

397
00:31:09,520 --> 00:31:13,540
that behaves like a slider or an adjustable value.

398
00:31:13,540 --> 00:31:19,480
So we have something like in iBooks this Page Controller
where you can move it forward or you can move it backwards.

399
00:31:19,480 --> 00:31:22,280
How does a VoiceOver user use that?

400
00:31:22,280 --> 00:31:25,510
Well they touch on that object and
they perform a different gesture.

401
00:31:25,510 --> 00:31:29,130
They perform a gesture like a flick
up or flick down to adjust it.

402
00:31:29,130 --> 00:31:35,740
So if you want to make an element like this you can
just return the trait adjustable for this object

403
00:31:35,740 --> 00:31:42,050
and then implement two methods,
accessibilityIncrement and accessibilityDecrement

404
00:31:42,050 --> 00:31:46,300
and those will do the appropriate things for the object.

405
00:31:49,590 --> 00:31:52,860
So that's a UIAccessibility protocol.

406
00:31:52,860 --> 00:31:58,270
Pretty simple, it can make things
very accessible as you've seen.

407
00:31:58,270 --> 00:32:02,720
So let's go over some good things that
you should try to do and you should avoid.

408
00:32:02,720 --> 00:32:04,690
Try to be concise in your labels.

409
00:32:04,690 --> 00:32:09,350
You don't need to be overly verbose, telling
the user all the things they need to do,

410
00:32:09,350 --> 00:32:11,560
just something like Add a City is appropriate.

411
00:32:11,560 --> 00:32:16,700
You don't need to include the type
of information in the label.

412
00:32:16,700 --> 00:32:23,450
So don't set your accessibility label to Settings button
because then VoiceOver will say, "Settings Button Button."

413
00:32:23,450 --> 00:32:29,970
So that information is communicated in the traits.

414
00:32:29,970 --> 00:32:33,340
Make sure to use localized strings
for your labels and hints.

415
00:32:33,340 --> 00:32:38,500
VoiceOver speaks a lot of languages so if your app
is going to be localized make sure that you also use

416
00:32:38,500 --> 00:32:44,000
that localization in your accessibility stuff.

417
00:32:44,000 --> 00:32:48,060
Remember with custom view table cells
this is like the most important part

418
00:32:48,060 --> 00:32:50,670
of your app so you don't want to forget about this.

419
00:32:50,670 --> 00:32:56,050
Make sure you just add the accessibilityLabel,
those things are already accessibility elements.

420
00:32:56,050 --> 00:33:02,790
All you've got to do is add that label and
your app is going to become very accessible.

421
00:33:02,790 --> 00:33:10,820
Alright, so if we put all these pieces
together what kind of game can we make?

422
00:33:13,410 --> 00:33:20,340
[Sound effects] So I have the original Bowler
with all of those changes that we put in

423
00:33:20,340 --> 00:33:25,510
and we're going to see how accessible this game can be.

424
00:33:25,510 --> 00:33:30,530
>> Bowler score 13, frame 1, 9, 8 pins, then 1 pin.

425
00:33:30,530 --> 00:33:32,840
>> All right I can flick through this.

426
00:33:32,840 --> 00:33:35,400
>> Frame 2, 13, 4 pins.

427
00:33:35,400 --> 00:33:37,330
Frame 3, 0.

428
00:33:37,330 --> 00:33:38,990
Bowling ball button.

429
00:33:38,990 --> 00:33:40,170
>> Alright, that's good.

430
00:33:40,170 --> 00:33:42,710
>> By moving to the left or right when ready.

431
00:33:42,710 --> 00:33:43,660
Select the ball.

432
00:33:43,660 --> 00:33:44,930
Then throw.

433
00:33:44,930 --> 00:33:49,120
>> Okay [Sound effects] you notice
there's this little annoying sound.

434
00:33:49,120 --> 00:33:57,700
[Sound effects] All right so I
can figure if I'm aligned or not.

435
00:33:57,700 --> 00:34:01,000
So visually you can see whether this is aligned or not.

436
00:34:01,000 --> 00:34:03,580
But if you can't see it you can use sound
[Background sound effects] to do that.

437
00:34:03,580 --> 00:34:04,850
When we're ready.

438
00:34:04,850 --> 00:34:08,510
Alright we're ready to bowl.

439
00:34:08,510 --> 00:34:15,510
[ Sound effects ]

440
00:34:15,510 --> 00:34:16,940
>> 2 pins hit.

441
00:34:16,940 --> 00:34:18,220
Starting frame 3.

442
00:34:18,220 --> 00:34:19,400
[Sound effects]

443
00:34:19,400 --> 00:34:22,940
>> So I only got 2 pins hit.

444
00:34:22,940 --> 00:34:26,610
Maybe if everyone will turn up their
phones I can get some more pins.

445
00:34:26,610 --> 00:34:29,650
[Laughter and applause]

446
00:34:29,650 --> 00:34:32,850
>> Frame 3, 25, 4 pins then a spare.

447
00:34:32,850 --> 00:34:33,610
>> Alright.

448
00:34:33,610 --> 00:34:34,400
>> Settings.

449
00:34:34,400 --> 00:34:38,520
>> How about these other things we looked at the Settings--

450
00:34:38,520 --> 00:34:39,460
>> Settings done.

451
00:34:39,460 --> 00:34:40,630
High Score.

452
00:34:40,630 --> 00:34:41,790
Ball color.

453
00:34:41,790 --> 00:34:42,550
Blue ball color.

454
00:34:42,550 --> 00:34:44,090
Red ball color selected.

455
00:34:44,090 --> 00:34:45,060
Yellow ball color.

456
00:34:45,060 --> 00:34:49,750
>> So notice all the ball colors that
we set, the right one is selected.

457
00:34:49,750 --> 00:34:50,920
>> Blue ball color selected.

458
00:34:50,920 --> 00:34:54,870
>> Let's change our ball color from blue.

459
00:34:54,870 --> 00:34:58,040
How about the Bowling News.

460
00:34:58,040 --> 00:34:59,170
>> [Sound effects] Bowling News.

461
00:34:59,170 --> 00:35:00,470
Bowling for babies.

462
00:35:00,470 --> 00:35:03,250
Teach your Toddler How to Bowl in
this fun and exciting new program.

463
00:35:03,250 --> 00:35:04,830
>> Alright, so I can get to the labels now.

464
00:35:04,830 --> 00:35:05,800
I can get to this news.

465
00:35:05,800 --> 00:35:06,900
>> For more information [Sound effects]

466
00:35:06,900 --> 00:35:10,710
>> I can get to this button and set the right thing.

467
00:35:10,710 --> 00:35:13,880
[Sound effects] When I close this thing
VoiceOver will go back to something.

468
00:35:13,880 --> 00:35:18,410
>> Frame 1, 9, 8 pins, then 1 pin.

469
00:35:18,410 --> 00:35:22,310
>> Alright so that's a pretty accessible Bowling game.

470
00:35:22,310 --> 00:35:26,380
So if you paid close attention you might
have noticed there's some things in there

471
00:35:26,380 --> 00:35:29,980
that you probably couldn't do with
what we talked about so far.

472
00:35:29,980 --> 00:35:37,730
So the 4.0 SDK, we have some new Bonus API for you so
that you can really make a great app for a VoiceOver user.

473
00:35:37,730 --> 00:35:40,880
One is whether -- is VoiceOver running?

474
00:35:40,880 --> 00:35:46,180
So this now available and I was using that
in that app to know when to play sounds.

475
00:35:46,180 --> 00:35:48,230
VoiceOver is not on, no sounds are played.

476
00:35:48,230 --> 00:35:51,260
VoiceOver is on, the sound is played.

477
00:35:51,260 --> 00:35:56,280
Another thing that I use is, is
the accessibility element focused?

478
00:35:56,280 --> 00:36:03,420
So this tells you where is the VoiceOver cursor on the
screen, what element has the VoiceOver user selected?

479
00:36:03,420 --> 00:36:08,130
So I used that to determine if I should play
that alignment sound on the Bowling ball.

480
00:36:08,130 --> 00:36:14,580
If the VoiceOver user wasn't on that bowling
ball it wouldn't play that annoying sound.

481
00:36:16,430 --> 00:36:21,880
So in case you haven't noticed we
really want you to add accessibility.

482
00:36:21,880 --> 00:36:25,750
Not only is it easy but it's also pretty darn fun.

483
00:36:25,750 --> 00:36:29,840
That Bowling game which took me probably
20 hours to write took me about 30 minutes

484
00:36:29,840 --> 00:36:34,310
to make accessible and that's pretty easy.

485
00:36:34,310 --> 00:36:37,220
So you're going to see your user
base increase if you do this.

486
00:36:37,220 --> 00:36:44,000
You're going to probably make millions more dollars
than you're already making, if that's even possible.

487
00:36:44,000 --> 00:36:46,250
You're going to get all kinds of great praise.

488
00:36:46,250 --> 00:36:47,440
You're going to be like the hero.

489
00:36:47,440 --> 00:36:51,410
You're going to be telling your grandchildren's
grandchildren about how you made this thing accessible

490
00:36:51,410 --> 00:36:55,270
and people are going to be sending you
email all the time about how great you are.

491
00:36:55,270 --> 00:36:59,760
And you're going to get all kinds of other
intangible benefits for your everlasting soul

492
00:36:59,760 --> 00:37:03,610
if you just make your app accessible
by setting a few labels.

493
00:37:03,610 --> 00:37:05,410
There's some great documentation.

494
00:37:05,410 --> 00:37:09,540
We have the protocol reference for
all the new stuff we got up there.

495
00:37:09,540 --> 00:37:15,110
We have the accessibility guideline programs,
which give you some more helpful hints about how

496
00:37:15,110 --> 00:37:18,120
to make your app accessible and the
VoiceOver user manual is really cool

497
00:37:18,120 --> 00:37:23,250
and it will tell you all the different gestures
you can do with VoiceOver in the iPhone.

