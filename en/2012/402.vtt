WEBVTT

99:59:59.999 --> 99:59:59.999
My name is Brooke. I'm an engineer an the Xcode team.

99:59:59.999 --> 99:59:59.999
This session is about how you can most efficiently work with Xcode.

99:59:59.999 --> 99:59:59.999
Xcode supports wide variety of working styles.

99:59:59.999 --> 99:59:59.999
When we were designing Xcode, we knew that different engineers wanted to use our tools differently.

99:59:59.999 --> 99:59:59.999
So in this session we would like to show you three different ways to use Xcode.

99:59:59.999 --> 99:59:59.999
First I'll show you my single window workflow.

99:59:59.999 --> 99:59:59.999
After that Kelly will come up and show you her workflow using tabs and behaviors.

99:59:59.999 --> 99:59:59.999
And finally Chris will come up and show you his keyboard centric workflow using multiple windows.

99:59:59.999 --> 99:59:59.999
All right. So, let's look at how I use a single window.

99:59:59.999 --> 99:59:59.999
Xcode tries to automatically show you just what you need in time,

99:59:59.999 --> 99:59:59.999
or whatever your current activity is.

99:59:59.999 --> 99:59:59.999
But sometimes you wanna show or hide parts of the window yourself.

99:59:59.999 --> 99:59:59.999
So it can ??? the keyboard shortcuts.

99:59:59.999 --> 99:59:59.999
After look at that, we'll see how you can find and open content in the editor.

99:59:59.999 --> 99:59:59.999
And then we'll look at some source editor tips and tricks.

99:59:59.999 --> 99:59:59.999
All right. So let's see a demo. So, I gotta bug to fix.

99:59:59.999 --> 99:59:59.999
But the first thing I notice here is that I got the utility area open

99:59:59.999 --> 99:59:59.999
and know I'm not gonna need it, 'cause I'm just doing some source editing.

99:59:59.999 --> 99:59:59.999
So, I can hide that with this button up here.

99:59:59.999 --> 99:59:59.999
But there's also a keyboard shortcut I like to use:

99:59:59.999 --> 99:59:59.999
<i>command</i> + <i>option</i> + <i>0</i>

99:59:59.999 --> 99:59:59.999
And if I want even more space for the editor,

99:59:59.999 --> 99:59:59.999
I can hide the navigator area with <i>command</i> + <i>0</i>

99:59:59.999 --> 99:59:59.999
But let's bring that back for now.

99:59:59.999 --> 99:59:59.999
So, in my bug I got a crash in the app delegate.

99:59:59.999 --> 99:59:59.999
So, I'm just gonna click down here and type

99:59:59.999 --> 99:59:59.999
“appdel” and there's my app delegate.

99:59:59.999 --> 99:59:59.999
But actually, my crash report says what method I'm crashing in.

99:59:59.999 --> 99:59:59.999
So, instead I'm gonna use “Open Quickly”

99:59:59.999 --> 99:59:59.999
<i>command</i> + <i>shift</i> + … — bring that up with <i>command</i> + <i>shift</i> + <i>0</i> — that's not right —

99:59:59.999 --> 99:59:59.999
<i>command</i> + <i>shift</i> + <i>O</i>

99:59:59.999 --> 99:59:59.999
and type in the name of that method: “saveContext”

99:59:59.999 --> 99:59:59.999
“Open Quickly” is really powerful and actually kind of forgiving.

99:59:59.999 --> 99:59:59.999
It'll find files and symbols both, in my project or in the SDK.

99:59:59.999 --> 99:59:59.999
And often I don't even need to type the name of what I'm looking for correctly.

99:59:59.999 --> 99:59:59.999
So, now that it's found the method I'm looking for, I'm just gonna hit <i>return</i>

99:59:59.999 --> 99:59:59.999
And it shown me the symbol I'm looking for.

99:59:59.999 --> 99:59:59.999
So, what you just saw, is an example what we call “navigation”.

99:59:59.999 --> 99:59:59.999
Navigation is the active opening a document, or a specific location of a document in the editor.

99:59:59.999 --> 99:59:59.999
So, on to my bug: I seen here it looks like we're calling <i>abort().</i>

99:59:59.999 --> 99:59:59.999
That's probably why we're crashing. And must be from the save error.

99:59:59.999 --> 99:59:59.999
I've even got a comment here telling me that I need to fix the bug here.

99:59:59.999 --> 99:59:59.999
Well, I wonder, I wonder if <i>NSManagedObjectContext</i> has another save method, that might deal with the error for me.

99:59:59.999 --> 99:59:59.999
So, I'm going to jump to the definition

99:59:59.999 --> 99:59:59.999
of the save method in the assistant editor by holding on <i>command</i> + <i>option</i> and clicking on it.

99:59:59.999 --> 99:59:59.999
So, now I can … so, that's brought up <i>NSManagedObjectContext</i> in the assistant editor,

99:59:59.999 --> 99:59:59.999
so I can use this as a reference while I'm still looking at my primary document that I'm working on.

99:59:59.999 --> 99:59:59.999
And this is what we call “modified navigation”.

99:59:59.999 --> 99:59:59.999
By … normally … if I do <i>command</i> + <i>click</i> on the save method, it would open up in the primary editor.

99:59:59.999 --> 99:59:59.999
But in this case — by holding down <i>option</i> — I jumped to definition in the assistant editor instead.

99:59:59.999 --> 99:59:59.999
So, looking around in <i>NSManagedObjectContext</i> I see there's no other save method, so that's not gonna help me.

99:59:59.999 --> 99:59:59.999
But there's something else I can try.

99:59:59.999 --> 99:59:59.999
Maybe I could — instead of fixing the here — I might try pushing the error on to the callers instead.

99:59:59.999 --> 99:59:59.999
So, if I click on the assistant editor category popup here,

99:59:59.999 --> 99:59:59.999
I see one of the new categories in the latest version Xcode is <i>Callers.</i>

99:59:59.999 --> 99:59:59.999
I'll select that and I see there are three different callers and there actually right here and none of them are doing any other error handling.

99:59:59.999 --> 99:59:59.999
So that's not gonna help me either.

99:59:59.999 --> 99:59:59.999
All right, so I'm done with the assistant editor for now. I'm just gonna put that away with <i>command</i> + <i>return</i>

99:59:59.999 --> 99:59:59.999
All right, so clearly I'm not gonna fix this bug ???

99:59:59.999 --> 99:59:59.999
Instead I'm just gonna make this comment to <i>TODO</i> to make it a little bit more obvious

99:59:59.999 --> 99:59:59.999
and you can see when I did that it made … it promoted that comment into the function pop up.

99:59:59.999 --> 99:59:59.999
As you know the function pop up'll show you all the symbols in your document.

99:59:59.999 --> 99:59:59.999
But you can also annotate the function pop up with <i>TODOs,</i> pragmas — like this one here —, or <i>FIXME</i> comments, like this one down here.

99:59:59.999 --> 99:59:59.999
Another feature the function pop up you might not know about, you can actually search in it.

99:59:59.999 --> 99:59:59.999
So, if I type “Application”, it'll show me just the matching entries in the pop up

99:59:59.999 --> 99:59:59.999
and I can just click to navigate to one of those.

99:59:59.999 --> 99:59:59.999
Another way I like to use the function pop up is with the keyboard short cut:

99:59:59.999 --> 99:59:59.999
I can use … I can just press <i>control</i> + <i>6</i> to bring it up, arrow up to the method I'm looking for and hit <i>return</i> and I'm there.

99:59:59.999 --> 99:59:59.999
All right, actually, I remember earlier I was in this file and I saw there's a really messy list of imports and I like to clean that up.

99:59:59.999 --> 99:59:59.999
And I'm gonna do this using Mac OS X's text services.

99:59:59.999 --> 99:59:59.999
Mac OS X has powerful text services that are … and since Xcode is … Xcode like any Cocoa application can take advantage of these for free.

99:59:59.999 --> 99:59:59.999
The best part about is, you create them yourself. And I'd like to show you how right now using <i>Automator.</i>