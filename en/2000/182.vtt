WEBVTT
Kind: captions
Language: en

00:00:10.550 --> 00:00:13.549 align:start position:0%
 
good<00:00:11.550><c> afternoon</c><00:00:11.700><c> everyone</c><00:00:12.530><c> welcome</c><00:00:13.530><c> to</c>

00:00:13.549 --> 00:00:13.559 align:start position:0%
good afternoon everyone welcome to
 

00:00:13.559 --> 00:00:17.480 align:start position:0%
good afternoon everyone welcome to
session<00:00:14.400><c> 182</c><00:00:15.410><c> which</c><00:00:16.410><c> is</c><00:00:16.619><c> Java</c><00:00:16.920><c> getting</c><00:00:17.400><c> the</c>

00:00:17.480 --> 00:00:17.490 align:start position:0%
session 182 which is Java getting the
 

00:00:17.490 --> 00:00:19.230 align:start position:0%
session 182 which is Java getting the
best<00:00:17.700><c> performance</c>

00:00:19.230 --> 00:00:19.240 align:start position:0%
best performance
 

00:00:19.240 --> 00:00:22.140 align:start position:0%
best performance
and<00:00:19.330><c> here</c><00:00:20.260><c> to</c><00:00:20.470><c> begin</c><00:00:20.680><c> our</c><00:00:21.130><c> presentation</c><00:00:22.000><c> this</c>

00:00:22.140 --> 00:00:22.150 align:start position:0%
and here to begin our presentation this
 

00:00:22.150 --> 00:00:30.690 align:start position:0%
and here to begin our presentation this
afternoon<00:00:22.529><c> please</c><00:00:23.529><c> welcome</c><00:00:23.800><c> Jim</c><00:00:24.760><c> Leske</c><00:00:29.700><c> good</c>

00:00:30.690 --> 00:00:30.700 align:start position:0%
afternoon please welcome Jim Leske good
 

00:00:30.700 --> 00:00:32.100 align:start position:0%
afternoon please welcome Jim Leske good
afternoon<00:00:31.090><c> we're</c><00:00:31.599><c> going</c><00:00:31.720><c> to</c><00:00:31.779><c> talk</c><00:00:31.960><c> a</c><00:00:31.990><c> little</c>

00:00:32.100 --> 00:00:32.110 align:start position:0%
afternoon we're going to talk a little
 

00:00:32.110 --> 00:00:35.280 align:start position:0%
afternoon we're going to talk a little
bit<00:00:32.290><c> about</c><00:00:32.410><c> performance</c><00:00:33.100><c> yesterday</c><00:00:33.940><c> and</c><00:00:34.540><c> we</c>

00:00:35.280 --> 00:00:35.290 align:start position:0%
bit about performance yesterday and we
 

00:00:35.290 --> 00:00:37.650 align:start position:0%
bit about performance yesterday and we
talked<00:00:35.530><c> a</c><00:00:35.769><c> little</c><00:00:36.129><c> bit</c><00:00:36.309><c> about</c><00:00:36.670><c> some</c><00:00:37.480><c> of</c><00:00:37.600><c> the</c>

00:00:37.650 --> 00:00:37.660 align:start position:0%
talked a little bit about some of the
 

00:00:37.660 --> 00:00:39.090 align:start position:0%
talked a little bit about some of the
new<00:00:37.690><c> technology</c><00:00:37.900><c> that</c><00:00:38.320><c> was</c><00:00:38.530><c> being</c><00:00:38.680><c> introduced</c>

00:00:39.090 --> 00:00:39.100 align:start position:0%
new technology that was being introduced
 

00:00:39.100 --> 00:00:43.520 align:start position:0%
new technology that was being introduced
on<00:00:39.449><c> Mac</c><00:00:40.449><c> OS</c><00:00:40.480><c> 10</c><00:00:41.050><c> in</c><00:00:41.650><c> particular</c><00:00:42.250><c> hotspot</c>

00:00:43.520 --> 00:00:43.530 align:start position:0%
on Mac OS 10 in particular hotspot
 

00:00:43.530 --> 00:00:47.729 align:start position:0%
on Mac OS 10 in particular hotspot
hotspot<00:00:44.530><c> and</c><00:00:45.390><c> some</c><00:00:46.390><c> of</c><00:00:46.510><c> Java</c><00:00:46.720><c> too</c><00:00:47.019><c> we're</c><00:00:47.620><c> going</c>

00:00:47.729 --> 00:00:47.739 align:start position:0%
hotspot and some of Java too we're going
 

00:00:47.739 --> 00:00:50.970 align:start position:0%
hotspot and some of Java too we're going
to<00:00:47.800><c> focus</c><00:00:48.010><c> on</c><00:00:48.339><c> different</c><00:00:48.820><c> aspects</c><00:00:49.390><c> of</c><00:00:49.980><c> these</c>

00:00:50.970 --> 00:00:50.980 align:start position:0%
to focus on different aspects of these
 

00:00:50.980 --> 00:00:52.740 align:start position:0%
to focus on different aspects of these
two<00:00:51.160><c> technologies</c><00:00:51.460><c> but</c><00:00:51.909><c> we're</c><00:00:52.449><c> trying</c><00:00:52.659><c> to</c>

00:00:52.740 --> 00:00:52.750 align:start position:0%
two technologies but we're trying to
 

00:00:52.750 --> 00:00:54.180 align:start position:0%
two technologies but we're trying to
zero<00:00:52.930><c> in</c><00:00:53.049><c> on</c><00:00:53.260><c> performance</c><00:00:53.830><c> and</c><00:00:53.920><c> we're</c><00:00:54.070><c> going</c>

00:00:54.180 --> 00:00:54.190 align:start position:0%
zero in on performance and we're going
 

00:00:54.190 --> 00:00:56.430 align:start position:0%
zero in on performance and we're going
to<00:00:54.250><c> talk</c><00:00:54.400><c> about</c><00:00:54.570><c> how</c><00:00:55.570><c> we've</c><00:00:56.229><c> made</c>

00:00:56.430 --> 00:00:56.440 align:start position:0%
to talk about how we've made
 

00:00:56.440 --> 00:00:59.070 align:start position:0%
to talk about how we've made
improvements<00:00:57.119><c> to</c><00:00:58.119><c> performance</c><00:00:58.659><c> in</c><00:00:58.780><c> the</c><00:00:58.869><c> Java</c>

00:00:59.070 --> 00:00:59.080 align:start position:0%
improvements to performance in the Java
 

00:00:59.080 --> 00:01:01.380 align:start position:0%
improvements to performance in the Java
VM<00:00:59.320><c> and</c><00:00:59.610><c> we're</c><00:01:00.610><c> going</c><00:01:00.729><c> to</c><00:01:00.760><c> give</c><00:01:01.119><c> you</c><00:01:01.210><c> some</c>

00:01:01.380 --> 00:01:01.390 align:start position:0%
VM and we're going to give you some
 

00:01:01.390 --> 00:01:03.539 align:start position:0%
VM and we're going to give you some
hints<00:01:01.600><c> or</c><00:01:01.900><c> ideas</c><00:01:02.320><c> about</c><00:01:02.530><c> how</c><00:01:02.710><c> you</c><00:01:02.769><c> can</c><00:01:03.100><c> modify</c>

00:01:03.539 --> 00:01:03.549 align:start position:0%
hints or ideas about how you can modify
 

00:01:03.549 --> 00:01:08.730 align:start position:0%
hints or ideas about how you can modify
your<00:01:03.820><c> code</c><00:01:04.059><c> to</c><00:01:04.089><c> gain</c><00:01:05.159><c> game</c><00:01:06.159><c> performance</c><00:01:07.740><c> we've</c>

00:01:08.730 --> 00:01:08.740 align:start position:0%
your code to gain game performance we've
 

00:01:08.740 --> 00:01:10.320 align:start position:0%
your code to gain game performance we've
broken<00:01:08.979><c> the</c><00:01:09.190><c> stock</c><00:01:09.700><c> up</c><00:01:09.850><c> into</c><00:01:10.000><c> three</c><00:01:10.150><c> parts</c>

00:01:10.320 --> 00:01:10.330 align:start position:0%
broken the stock up into three parts
 

00:01:10.330 --> 00:01:12.230 align:start position:0%
broken the stock up into three parts
because<00:01:10.689><c> we</c><00:01:10.780><c> wanted</c><00:01:11.020><c> to</c><00:01:11.110><c> get</c><00:01:11.260><c> three</c><00:01:12.040><c> different</c>

00:01:12.230 --> 00:01:12.240 align:start position:0%
because we wanted to get three different
 

00:01:12.240 --> 00:01:14.399 align:start position:0%
because we wanted to get three different
the<00:01:13.240><c> categories</c><00:01:13.750><c> of</c><00:01:13.869><c> things</c><00:01:14.049><c> to</c><00:01:14.200><c> talk</c><00:01:14.350><c> about</c>

00:01:14.399 --> 00:01:14.409 align:start position:0%
the categories of things to talk about
 

00:01:14.409 --> 00:01:17.130 align:start position:0%
the categories of things to talk about
the<00:01:14.680><c> first</c><00:01:14.830><c> part</c><00:01:15.729><c> will</c><00:01:15.909><c> be</c><00:01:15.939><c> done</c><00:01:16.390><c> by</c><00:01:16.420><c> Yvonne</c>

00:01:17.130 --> 00:01:17.140 align:start position:0%
the first part will be done by Yvonne
 

00:01:17.140 --> 00:01:19.289 align:start position:0%
the first part will be done by Yvonne
posta<00:01:17.560><c> of</c><00:01:17.770><c> the</c><00:01:18.100><c> vm</c><00:01:18.340><c> team</c><00:01:18.549><c> who's</c><00:01:18.970><c> going</c><00:01:19.060><c> to</c><00:01:19.150><c> talk</c>

00:01:19.289 --> 00:01:19.299 align:start position:0%
posta of the vm team who's going to talk
 

00:01:19.299 --> 00:01:21.830 align:start position:0%
posta of the vm team who's going to talk
about<00:01:19.420><c> the</c><00:01:19.540><c> vm</c><00:01:19.960><c> the</c><00:01:20.710><c> new</c><00:01:21.070><c> memory</c><00:01:21.369><c> management</c>

00:01:21.830 --> 00:01:21.840 align:start position:0%
about the vm the new memory management
 

00:01:21.840 --> 00:01:24.870 align:start position:0%
about the vm the new memory management
thread<00:01:22.840><c> synchronization</c><00:01:23.640><c> then</c><00:01:24.640><c> I'll</c><00:01:24.759><c> come</c>

00:01:24.870 --> 00:01:24.880 align:start position:0%
thread synchronization then I'll come
 

00:01:24.880 --> 00:01:27.300 align:start position:0%
thread synchronization then I'll come
back<00:01:25.060><c> for</c><00:01:25.119><c> part</c><00:01:25.479><c> two</c><00:01:25.750><c> and</c><00:01:25.960><c> talk</c><00:01:26.109><c> about</c><00:01:26.310><c> code</c>

00:01:27.300 --> 00:01:27.310 align:start position:0%
back for part two and talk about code
 

00:01:27.310 --> 00:01:29.789 align:start position:0%
back for part two and talk about code
execution<00:01:27.729><c> and</c><00:01:28.030><c> how</c><00:01:28.899><c> we</c><00:01:28.990><c> boosted</c><00:01:29.320><c> performance</c>

00:01:29.789 --> 00:01:29.799 align:start position:0%
execution and how we boosted performance
 

00:01:29.799 --> 00:01:32.789 align:start position:0%
execution and how we boosted performance
up<00:01:29.920><c> in</c><00:01:30.359><c> the</c><00:01:31.359><c> performance</c><00:01:32.079><c> of</c><00:01:32.140><c> code</c><00:01:32.500><c> and</c>

00:01:32.789 --> 00:01:32.799 align:start position:0%
up in the performance of code and
 

00:01:32.799 --> 00:01:34.560 align:start position:0%
up in the performance of code and
finally<00:01:33.399><c> John</c><00:01:33.579><c> berkey</c><00:01:33.880><c> will</c><00:01:34.030><c> come</c><00:01:34.210><c> up</c><00:01:34.359><c> and</c>

00:01:34.560 --> 00:01:34.570 align:start position:0%
finally John berkey will come up and
 

00:01:34.570 --> 00:01:37.649 align:start position:0%
finally John berkey will come up and
discuss<00:01:35.380><c> how</c><00:01:35.679><c> we</c><00:01:36.249><c> can</c><00:01:36.280><c> get</c><00:01:37.030><c> some</c><00:01:37.179><c> performance</c>

00:01:37.649 --> 00:01:37.659 align:start position:0%
discuss how we can get some performance
 

00:01:37.659 --> 00:01:41.580 align:start position:0%
discuss how we can get some performance
out<00:01:37.810><c> of</c><00:01:37.840><c> the</c><00:01:38.109><c> aw</c><00:01:38.679><c> aw</c><00:01:39.009><c> tea</c><00:01:39.609><c> and</c><00:01:39.789><c> swing</c><00:01:40.149><c> and</c><00:01:40.590><c> the</c>

00:01:41.580 --> 00:01:41.590 align:start position:0%
out of the aw aw tea and swing and the
 

00:01:41.590 --> 00:01:44.730 align:start position:0%
out of the aw aw tea and swing and the
new<00:01:41.950><c> Java</c><00:01:42.159><c> classes</c><00:01:42.509><c> so</c><00:01:43.509><c> I</c><00:01:43.869><c> guess</c><00:01:44.229><c> forget</c><00:01:44.560><c> to</c>

00:01:44.730 --> 00:01:44.740 align:start position:0%
new Java classes so I guess forget to
 

00:01:44.740 --> 00:01:47.360 align:start position:0%
new Java classes so I guess forget to
Yvonne<00:01:45.249><c> to</c><00:01:45.340><c> come</c><00:01:45.460><c> up</c><00:01:45.520><c> now</c>

00:01:47.360 --> 00:01:47.370 align:start position:0%
Yvonne to come up now
 

00:01:47.370 --> 00:01:52.680 align:start position:0%
Yvonne to come up now
[Applause]

00:01:52.680 --> 00:01:52.690 align:start position:0%
 
 

00:01:52.690 --> 00:01:58.020 align:start position:0%
 
well<00:01:53.690><c> thanks</c><00:01:54.140><c> Jim</c><00:01:54.320><c> for</c><00:01:54.620><c> the</c><00:01:55.040><c> introduction</c><00:01:56.979><c> so</c>

00:01:58.020 --> 00:01:58.030 align:start position:0%
well thanks Jim for the introduction so
 

00:01:58.030 --> 00:02:01.000 align:start position:0%
well thanks Jim for the introduction so
let's<00:01:59.030><c> look</c><00:01:59.300><c> at</c><00:01:59.720><c> first</c><00:01:59.960><c> what</c><00:02:00.290><c> are</c><00:02:00.440><c> the</c><00:02:00.590><c> factors</c>

00:02:01.000 --> 00:02:01.010 align:start position:0%
let's look at first what are the factors
 

00:02:01.010 --> 00:02:03.670 align:start position:0%
let's look at first what are the factors
of<00:02:01.070><c> Java</c><00:02:01.460><c> performance</c><00:02:02.180><c> first</c><00:02:03.110><c> of</c><00:02:03.260><c> all</c><00:02:03.380><c> it's</c>

00:02:03.670 --> 00:02:03.680 align:start position:0%
of Java performance first of all it's
 

00:02:03.680 --> 00:02:06.670 align:start position:0%
of Java performance first of all it's
the<00:02:04.160><c> design</c><00:02:05.090><c> of</c><00:02:05.119><c> your</c><00:02:05.330><c> application</c><00:02:06.170><c> that's</c>

00:02:06.670 --> 00:02:06.680 align:start position:0%
the design of your application that's
 

00:02:06.680 --> 00:02:09.490 align:start position:0%
the design of your application that's
the<00:02:06.830><c> most</c><00:02:06.979><c> important</c><00:02:07.520><c> part</c><00:02:07.580><c> of</c><00:02:07.910><c> that</c><00:02:08.500><c> second</c>

00:02:09.490 --> 00:02:09.500 align:start position:0%
the most important part of that second
 

00:02:09.500 --> 00:02:12.670 align:start position:0%
the most important part of that second
is<00:02:09.740><c> the</c><00:02:10.340><c> speed</c><00:02:10.670><c> of</c><00:02:11.090><c> the</c><00:02:11.600><c> byte</c><00:02:11.870><c> code</c><00:02:12.140><c> execution</c>

00:02:12.670 --> 00:02:12.680 align:start position:0%
is the speed of the byte code execution
 

00:02:12.680 --> 00:02:14.830 align:start position:0%
is the speed of the byte code execution
inside<00:02:13.220><c> the</c><00:02:13.340><c> vm</c><00:02:13.610><c> of</c><00:02:13.820><c> the</c><00:02:13.910><c> speed</c><00:02:14.150><c> at</c><00:02:14.390><c> which</c><00:02:14.450><c> we</c>

00:02:14.830 --> 00:02:14.840 align:start position:0%
inside the vm of the speed at which we
 

00:02:14.840 --> 00:02:18.060 align:start position:0%
inside the vm of the speed at which we
execute<00:02:15.290><c> the</c><00:02:15.410><c> byte</c><00:02:15.590><c> codes</c><00:02:15.950><c> of</c><00:02:16.010><c> your</c><00:02:16.190><c> program</c>

00:02:18.060 --> 00:02:18.070 align:start position:0%
execute the byte codes of your program
 

00:02:18.070 --> 00:02:20.590 align:start position:0%
execute the byte codes of your program
next<00:02:19.070><c> and</c><00:02:19.370><c> that's</c><00:02:19.520><c> what</c><00:02:19.700><c> I</c><00:02:19.730><c> will</c><00:02:19.970><c> focus</c><00:02:20.240><c> about</c>

00:02:20.590 --> 00:02:20.600 align:start position:0%
next and that's what I will focus about
 

00:02:20.600 --> 00:02:23.620 align:start position:0%
next and that's what I will focus about
is<00:02:20.870><c> speed</c><00:02:21.800><c> of</c><00:02:21.980><c> vm</c><00:02:22.250><c> operation</c><00:02:22.940><c> speed</c><00:02:23.270><c> class</c>

00:02:23.620 --> 00:02:23.630 align:start position:0%
is speed of vm operation speed class
 

00:02:23.630 --> 00:02:26.320 align:start position:0%
is speed of vm operation speed class
loading<00:02:23.959><c> garbage</c><00:02:24.470><c> collection</c><00:02:25.330><c> threading</c>

00:02:26.320 --> 00:02:26.330 align:start position:0%
loading garbage collection threading
 

00:02:26.330 --> 00:02:28.570 align:start position:0%
loading garbage collection threading
synchronization<00:02:27.260><c> and</c><00:02:27.470><c> its</c><00:02:28.070><c> associated</c>

00:02:28.570 --> 00:02:28.580 align:start position:0%
synchronization and its associated
 

00:02:28.580 --> 00:02:32.380 align:start position:0%
synchronization and its associated
library<00:02:29.150><c> and</c><00:02:29.860><c> last</c><00:02:30.860><c> is</c><00:02:31.250><c> the</c><00:02:31.280><c> speed</c><00:02:32.120><c> of</c><00:02:32.270><c> the</c>

00:02:32.380 --> 00:02:32.390 align:start position:0%
library and last is the speed of the
 

00:02:32.390 --> 00:02:33.880 align:start position:0%
library and last is the speed of the
hardware<00:02:32.840><c> you're</c><00:02:33.170><c> running</c><00:02:33.410><c> on</c><00:02:33.500><c> and</c><00:02:33.770><c> the</c>

00:02:33.880 --> 00:02:33.890 align:start position:0%
hardware you're running on and the
 

00:02:33.890 --> 00:02:36.910 align:start position:0%
hardware you're running on and the
underlying<00:02:34.160><c> operating</c><00:02:34.459><c> system</c><00:02:35.620><c> that's</c><00:02:36.620><c> not</c>

00:02:36.910 --> 00:02:36.920 align:start position:0%
underlying operating system that's not
 

00:02:36.920 --> 00:02:38.830 align:start position:0%
underlying operating system that's not
much<00:02:37.130><c> we</c><00:02:37.370><c> can</c><00:02:37.400><c> do</c><00:02:37.640><c> about</c><00:02:37.760><c> it</c><00:02:37.910><c> but</c><00:02:38.630><c> we</c><00:02:38.780><c> are</c>

00:02:38.830 --> 00:02:38.840 align:start position:0%
much we can do about it but we are
 

00:02:38.840 --> 00:02:40.120 align:start position:0%
much we can do about it but we are
pressing<00:02:39.080><c> on</c><00:02:39.320><c> the</c><00:02:39.350><c> colonel</c><00:02:39.560><c> team</c><00:02:39.890><c> in</c><00:02:40.010><c> that</c>

00:02:40.120 --> 00:02:40.130 align:start position:0%
pressing on the colonel team in that
 

00:02:40.130 --> 00:02:45.729 align:start position:0%
pressing on the colonel team in that
area<00:02:42.910><c> so</c><00:02:43.910><c> the</c><00:02:44.360><c> two</c><00:02:44.630><c> main</c><00:02:44.870><c> attractions</c><00:02:45.530><c> of</c><00:02:45.620><c> the</c>

00:02:45.729 --> 00:02:45.739 align:start position:0%
area so the two main attractions of the
 

00:02:45.739 --> 00:02:49.150 align:start position:0%
area so the two main attractions of the
Java<00:02:46.959><c> the</c><00:02:47.959><c> two</c><00:02:48.140><c> main</c><00:02:48.320><c> attractions</c><00:02:48.890><c> of</c><00:02:48.980><c> the</c>

00:02:49.150 --> 00:02:49.160 align:start position:0%
Java the two main attractions of the
 

00:02:49.160 --> 00:02:53.860 align:start position:0%
Java the two main attractions of the
Java<00:02:49.370><c> language</c><00:02:49.489><c> are</c><00:02:52.720><c> automatic</c><00:02:53.720><c> memory</c>

00:02:53.860 --> 00:02:53.870 align:start position:0%
Java language are automatic memory
 

00:02:53.870 --> 00:02:56.410 align:start position:0%
Java language are automatic memory
management<00:02:54.050><c> and</c><00:02:54.940><c> language</c><00:02:55.940><c> level</c><00:02:56.150><c> support</c>

00:02:56.410 --> 00:02:56.420 align:start position:0%
management and language level support
 

00:02:56.420 --> 00:02:59.610 align:start position:0%
management and language level support
for<00:02:56.959><c> threading</c><00:02:57.769><c> and</c><00:02:57.920><c> synchronization</c>

00:02:59.610 --> 00:02:59.620 align:start position:0%
for threading and synchronization
 

00:02:59.620 --> 00:03:03.280 align:start position:0%
for threading and synchronization
unfortunately<00:03:00.620><c> these</c><00:03:00.709><c> two</c><00:03:01.780><c> points</c><00:03:02.780><c> are</c><00:03:03.140><c> also</c>

00:03:03.280 --> 00:03:03.290 align:start position:0%
unfortunately these two points are also
 

00:03:03.290 --> 00:03:05.920 align:start position:0%
unfortunately these two points are also
associated<00:03:03.709><c> with</c><00:03:04.340><c> them</c><00:03:04.600><c> having</c><00:03:05.600><c> the</c><00:03:05.810><c> most</c>

00:03:05.920 --> 00:03:05.930 align:start position:0%
associated with them having the most
 

00:03:05.930 --> 00:03:08.500 align:start position:0%
associated with them having the most
impact<00:03:06.530><c> on</c><00:03:06.799><c> performance</c><00:03:07.280><c> most</c><00:03:08.120><c> negative</c>

00:03:08.500 --> 00:03:08.510 align:start position:0%
impact on performance most negative
 

00:03:08.510 --> 00:03:10.660 align:start position:0%
impact on performance most negative
impact<00:03:08.840><c> on</c><00:03:08.959><c> the</c><00:03:09.079><c> performance</c><00:03:09.230><c> and</c><00:03:09.769><c> we</c><00:03:10.579><c> are</c>

00:03:10.660 --> 00:03:10.670 align:start position:0%
impact on the performance and we are
 

00:03:10.670 --> 00:03:12.340 align:start position:0%
impact on the performance and we are
here<00:03:10.940><c> to</c><00:03:10.970><c> clean</c><00:03:11.750><c> up</c><00:03:11.900><c> some</c><00:03:12.079><c> of</c><00:03:12.140><c> those</c>

00:03:12.340 --> 00:03:12.350 align:start position:0%
here to clean up some of those
 

00:03:12.350 --> 00:03:15.640 align:start position:0%
here to clean up some of those
misconceptions<00:03:12.799><c> and</c><00:03:14.200><c> show</c><00:03:15.200><c> you</c><00:03:15.260><c> what</c><00:03:15.530><c> you</c><00:03:15.620><c> can</c>

00:03:15.640 --> 00:03:15.650 align:start position:0%
misconceptions and show you what you can
 

00:03:15.650 --> 00:03:21.250 align:start position:0%
misconceptions and show you what you can
do<00:03:15.860><c> to</c><00:03:16.160><c> give</c><00:03:16.510><c> the</c><00:03:17.510><c> vm</c><00:03:17.810><c> hin</c><00:03:18.130><c> in</c><00:03:19.130><c> that</c><00:03:19.340><c> area</c><00:03:20.260><c> so</c>

00:03:21.250 --> 00:03:21.260 align:start position:0%
do to give the vm hin in that area so
 

00:03:21.260 --> 00:03:23.199 align:start position:0%
do to give the vm hin in that area so
first<00:03:21.739><c> I</c><00:03:22.010><c> will</c><00:03:22.220><c> deal</c><00:03:22.610><c> about</c><00:03:22.730><c> memory</c>

00:03:23.199 --> 00:03:23.209 align:start position:0%
first I will deal about memory
 

00:03:23.209 --> 00:03:26.800 align:start position:0%
first I will deal about memory
management<00:03:23.860><c> we</c><00:03:24.860><c> have</c><00:03:25.070><c> in</c><00:03:25.400><c> the</c><00:03:25.940><c> hotspot</c><00:03:26.299><c> vm</c><00:03:26.630><c> we</c>

00:03:26.800 --> 00:03:26.810 align:start position:0%
management we have in the hotspot vm we
 

00:03:26.810 --> 00:03:29.710 align:start position:0%
management we have in the hotspot vm we
have<00:03:26.959><c> direct</c><00:03:27.410><c> object</c><00:03:27.829><c> references</c><00:03:28.400><c> to</c><00:03:29.120><c> two</c>

00:03:29.710 --> 00:03:29.720 align:start position:0%
have direct object references to two
 

00:03:29.720 --> 00:03:32.380 align:start position:0%
have direct object references to two
objects<00:03:30.290><c> we</c><00:03:30.769><c> don't</c><00:03:30.920><c> we</c><00:03:31.280><c> don't</c><00:03:31.459><c> go</c><00:03:31.640><c> to</c><00:03:31.670><c> handles</c>

00:03:32.380 --> 00:03:32.390 align:start position:0%
objects we don't we don't go to handles
 

00:03:32.390 --> 00:03:35.170 align:start position:0%
objects we don't we don't go to handles
as<00:03:32.540><c> the</c><00:03:32.690><c> classic</c><00:03:33.049><c> vm</c><00:03:33.320><c> goes</c><00:03:33.560><c> the</c><00:03:34.310><c> stuffs</c><00:03:34.910><c> we</c>

00:03:35.170 --> 00:03:35.180 align:start position:0%
as the classic vm goes the stuffs we
 

00:03:35.180 --> 00:03:38.650 align:start position:0%
as the classic vm goes the stuffs we
have<00:03:35.390><c> see</c><00:03:36.350><c> speed</c><00:03:36.769><c> up</c><00:03:36.980><c> see</c><00:03:37.760><c> speed</c><00:03:38.060><c> access</c><00:03:38.269><c> to</c>

00:03:38.650 --> 00:03:38.660 align:start position:0%
have see speed up see speed access to
 

00:03:38.660 --> 00:03:41.020 align:start position:0%
have see speed up see speed access to
fields<00:03:39.110><c> of</c><00:03:39.290><c> instances</c><00:03:39.709><c> and</c><00:03:40.070><c> we</c><00:03:40.700><c> also</c><00:03:40.850><c> have</c>

00:03:41.020 --> 00:03:41.030 align:start position:0%
fields of instances and we also have
 

00:03:41.030 --> 00:03:44.620 align:start position:0%
fields of instances and we also have
basically<00:03:41.900><c> see</c><00:03:42.170><c> speed</c><00:03:42.470><c> access</c><00:03:43.239><c> static</c><00:03:44.239><c> fields</c>

00:03:44.620 --> 00:03:44.630 align:start position:0%
basically see speed access static fields
 

00:03:44.630 --> 00:03:48.509 align:start position:0%
basically see speed access static fields
in<00:03:44.780><c> your</c><00:03:44.930><c> classes</c><00:03:46.329><c> also</c><00:03:47.329><c> what</c><00:03:47.720><c> we</c><00:03:47.750><c> have</c><00:03:48.049><c> is</c><00:03:48.290><c> a</c>

00:03:48.509 --> 00:03:48.519 align:start position:0%
in your classes also what we have is a
 

00:03:48.519 --> 00:03:52.240 align:start position:0%
in your classes also what we have is a
Loper<00:03:49.519><c> object</c><00:03:49.910><c> overhead</c><00:03:50.269><c> we</c><00:03:50.989><c> have</c><00:03:51.200><c> two</c><00:03:51.980><c> words</c>

00:03:52.240 --> 00:03:52.250 align:start position:0%
Loper object overhead we have two words
 

00:03:52.250 --> 00:03:55.000 align:start position:0%
Loper object overhead we have two words
per<00:03:52.610><c> object</c><00:03:52.760><c> or</c><00:03:53.269><c> associated</c><00:03:54.110><c> for</c><00:03:54.500><c> use</c><00:03:54.739><c> by</c><00:03:54.980><c> the</c>

00:03:55.000 --> 00:03:55.010 align:start position:0%
per object or associated for use by the
 

00:03:55.010 --> 00:03:55.830 align:start position:0%
per object or associated for use by the
vm

00:03:55.830 --> 00:03:55.840 align:start position:0%
vm
 

00:03:55.840 --> 00:03:57.630 align:start position:0%
vm
when<00:03:56.050><c> you</c><00:03:56.140><c> compare</c><00:03:56.470><c> that</c><00:03:56.500><c> to</c><00:03:56.680><c> classic</c><00:03:57.190><c> to</c><00:03:57.519><c> the</c>

00:03:57.630 --> 00:03:57.640 align:start position:0%
when you compare that to classic to the
 

00:03:57.640 --> 00:04:00.630 align:start position:0%
when you compare that to classic to the
classic<00:03:58.030><c> vm</c><00:03:58.500><c> which</c><00:03:59.500><c> has</c><00:03:59.709><c> three</c><00:04:00.010><c> words</c><00:04:00.430><c> four</c>

00:04:00.630 --> 00:04:00.640 align:start position:0%
classic vm which has three words four
 

00:04:00.640 --> 00:04:02.910 align:start position:0%
classic vm which has three words four
objects<00:04:01.060><c> this</c><00:04:01.750><c> doesn't</c><00:04:01.989><c> seem</c><00:04:02.200><c> significant</c>

00:04:02.910 --> 00:04:02.920 align:start position:0%
objects this doesn't seem significant
 

00:04:02.920 --> 00:04:06.210 align:start position:0%
objects this doesn't seem significant
but<00:04:04.019><c> this</c><00:04:05.019><c> is</c><00:04:05.170><c> actually</c><00:04:05.560><c> where</c><00:04:05.650><c> we</c><00:04:05.800><c> get</c><00:04:05.980><c> some</c>

00:04:06.210 --> 00:04:06.220 align:start position:0%
but this is actually where we get some
 

00:04:06.220 --> 00:04:09.180 align:start position:0%
but this is actually where we get some
of<00:04:06.370><c> the</c><00:04:06.810><c> performance</c><00:04:07.810><c> or</c><00:04:07.959><c> memory</c><00:04:08.319><c> memory</c>

00:04:09.180 --> 00:04:09.190 align:start position:0%
of the performance or memory memory
 

00:04:09.190 --> 00:04:11.610 align:start position:0%
of the performance or memory memory
advantages<00:04:09.940><c> because</c><00:04:10.629><c> Java</c><00:04:11.170><c> tends</c><00:04:11.500><c> to</c>

00:04:11.610 --> 00:04:11.620 align:start position:0%
advantages because Java tends to
 

00:04:11.620 --> 00:04:14.729 align:start position:0%
advantages because Java tends to
allocate<00:04:12.010><c> a</c><00:04:12.250><c> lot</c><00:04:12.610><c> of</c><00:04:12.819><c> a</c><00:04:13.060><c> lot</c><00:04:13.660><c> of</c><00:04:13.810><c> small</c><00:04:14.170><c> objects</c>

00:04:14.729 --> 00:04:14.739 align:start position:0%
allocate a lot of a lot of small objects
 

00:04:14.739 --> 00:04:21.500 align:start position:0%
allocate a lot of a lot of small objects
and<00:04:16.019><c> studies</c><00:04:17.019><c> have</c><00:04:17.169><c> shown</c><00:04:17.199><c> that</c><00:04:17.470><c> for</c><00:04:18.810><c> the</c><00:04:19.810><c> mtrt</c>

00:04:21.500 --> 00:04:21.510 align:start position:0%
and studies have shown that for the mtrt
 

00:04:21.510 --> 00:04:25.200 align:start position:0%
and studies have shown that for the mtrt
benchmark<00:04:22.510><c> in</c><00:04:22.780><c> the</c><00:04:23.020><c> spec</c><00:04:23.410><c> JVM</c><00:04:23.889><c> sweet</c><00:04:24.250><c> each</c>

00:04:25.200 --> 00:04:25.210 align:start position:0%
benchmark in the spec JVM sweet each
 

00:04:25.210 --> 00:04:28.020 align:start position:0%
benchmark in the spec JVM sweet each
additional<00:04:25.900><c> word</c><00:04:26.139><c> in</c><00:04:26.530><c> the</c><00:04:27.400><c> object</c><00:04:27.550><c> header</c>

00:04:28.020 --> 00:04:28.030 align:start position:0%
additional word in the object header
 

00:04:28.030 --> 00:04:31.560 align:start position:0%
additional word in the object header
cost<00:04:28.840><c> you</c><00:04:29.139><c> twenty</c><00:04:29.590><c> percent</c><00:04:29.919><c> more</c><00:04:30.220><c> memory</c><00:04:30.570><c> for</c>

00:04:31.560 --> 00:04:31.570 align:start position:0%
cost you twenty percent more memory for
 

00:04:31.570 --> 00:04:34.260 align:start position:0%
cost you twenty percent more memory for
java<00:04:32.139><c> see</c><00:04:32.470><c> this</c><00:04:33.040><c> additional</c><00:04:33.490><c> cost</c><00:04:33.729><c> is</c><00:04:34.000><c> twelve</c>

00:04:34.260 --> 00:04:34.270 align:start position:0%
java see this additional cost is twelve
 

00:04:34.270 --> 00:04:37.110 align:start position:0%
java see this additional cost is twelve
percent<00:04:34.660><c> so</c><00:04:35.370><c> the</c><00:04:36.370><c> lower</c><00:04:36.580><c> the</c><00:04:36.700><c> per</c><00:04:36.970><c> object</c>

00:04:37.110 --> 00:04:37.120 align:start position:0%
percent so the lower the per object
 

00:04:37.120 --> 00:04:41.760 align:start position:0%
percent so the lower the per object
overhead<00:04:37.660><c> is</c><00:04:38.490><c> the</c><00:04:39.780><c> last</c><00:04:40.780><c> memory</c><00:04:41.139><c> you</c><00:04:41.320><c> use</c><00:04:41.500><c> and</c>

00:04:41.760 --> 00:04:41.770 align:start position:0%
overhead is the last memory you use and
 

00:04:41.770 --> 00:04:46.909 align:start position:0%
overhead is the last memory you use and
it<00:04:41.860><c> can</c><00:04:42.310><c> be</c><00:04:42.340><c> a</c><00:04:42.729><c> considerable</c><00:04:43.680><c> game</c><00:04:45.240><c> so</c><00:04:46.240><c> I</c><00:04:46.600><c> will</c>

00:04:46.909 --> 00:04:46.919 align:start position:0%
it can be a considerable game so I will
 

00:04:46.919 --> 00:04:50.640 align:start position:0%
it can be a considerable game so I will
the<00:04:47.919><c> hotspot</c><00:04:48.310><c> vm</c><00:04:48.930><c> uses</c><00:04:49.930><c> a</c><00:04:49.960><c> generational</c>

00:04:50.640 --> 00:04:50.650 align:start position:0%
the hotspot vm uses a generational
 

00:04:50.650 --> 00:04:53.279 align:start position:0%
the hotspot vm uses a generational
copying<00:04:51.070><c> garbage</c><00:04:51.370><c> collector</c><00:04:51.850><c> and</c><00:04:52.030><c> on</c><00:04:52.930><c> the</c>

00:04:53.279 --> 00:04:53.289 align:start position:0%
copying garbage collector and on the
 

00:04:53.289 --> 00:04:56.310 align:start position:0%
copying garbage collector and on the
next<00:04:53.560><c> slide</c><00:04:53.770><c> I</c><00:04:53.919><c> will</c><00:04:54.130><c> deal</c><00:04:54.430><c> and</c><00:04:54.840><c> dive</c><00:04:55.840><c> into</c><00:04:56.020><c> bit</c>

00:04:56.310 --> 00:04:56.320 align:start position:0%
next slide I will deal and dive into bit
 

00:04:56.320 --> 00:05:01.409 align:start position:0%
next slide I will deal and dive into bit
more<00:04:56.590><c> detail</c><00:04:57.810><c> so</c><00:04:58.810><c> it</c><00:04:59.710><c> is</c><00:05:00.610><c> accurate</c><00:05:01.000><c> the</c>

00:05:01.409 --> 00:05:01.419 align:start position:0%
more detail so it is accurate the
 

00:05:01.419 --> 00:05:03.240 align:start position:0%
more detail so it is accurate the
garbage<00:05:01.690><c> collector</c><00:05:01.810><c> is</c><00:05:02.169><c> accurate</c><00:05:02.710><c> which</c>

00:05:03.240 --> 00:05:03.250 align:start position:0%
garbage collector is accurate which
 

00:05:03.250 --> 00:05:06.120 align:start position:0%
garbage collector is accurate which
means<00:05:03.570><c> we</c><00:05:04.570><c> know</c><00:05:04.690><c> at</c><00:05:04.840><c> all</c><00:05:04.870><c> kinds</c><00:05:05.710><c> in</c><00:05:05.860><c> the</c>

00:05:06.120 --> 00:05:06.130 align:start position:0%
means we know at all kinds in the
 

00:05:06.130 --> 00:05:08.040 align:start position:0%
means we know at all kinds in the
executing<00:05:06.850><c> Java</c><00:05:07.150><c> program</c><00:05:07.690><c> we</c><00:05:07.810><c> know</c><00:05:07.900><c> at</c><00:05:08.020><c> all</c>

00:05:08.040 --> 00:05:08.050 align:start position:0%
executing Java program we know at all
 

00:05:08.050 --> 00:05:10.770 align:start position:0%
executing Java program we know at all
times<00:05:08.560><c> where</c><00:05:09.280><c> we</c><00:05:09.430><c> have</c><00:05:09.580><c> life</c><00:05:09.850><c> references</c><00:05:10.570><c> to</c>

00:05:10.770 --> 00:05:10.780 align:start position:0%
times where we have life references to
 

00:05:10.780 --> 00:05:14.070 align:start position:0%
times where we have life references to
object<00:05:11.260><c> we</c><00:05:12.220><c> are</c><00:05:12.430><c> not</c><00:05:12.789><c> conservative</c><00:05:13.510><c> when</c><00:05:13.870><c> we</c>

00:05:14.070 --> 00:05:14.080 align:start position:0%
object we are not conservative when we
 

00:05:14.080 --> 00:05:19.110 align:start position:0%
object we are not conservative when we
walk<00:05:14.560><c> through</c><00:05:14.590><c> the</c><00:05:14.889><c> stack</c><00:05:15.250><c> so</c><00:05:16.060><c> we</c><00:05:16.240><c> know</c><00:05:18.120><c> what</c>

00:05:19.110 --> 00:05:19.120 align:start position:0%
walk through the stack so we know what
 

00:05:19.120 --> 00:05:22.409 align:start position:0%
walk through the stack so we know what
what<00:05:19.720><c> objects</c><00:05:20.169><c> are</c><00:05:20.289><c> what</c><00:05:20.620><c> words</c><00:05:21.520><c> on</c><00:05:21.789><c> the</c><00:05:21.940><c> stack</c>

00:05:22.409 --> 00:05:22.419 align:start position:0%
what objects are what words on the stack
 

00:05:22.419 --> 00:05:24.990 align:start position:0%
what objects are what words on the stack
our<00:05:22.750><c> actual</c><00:05:23.710><c> integers</c><00:05:24.340><c> even</c><00:05:24.760><c> though</c><00:05:24.849><c> they</c>

00:05:24.990 --> 00:05:25.000 align:start position:0%
our actual integers even though they
 

00:05:25.000 --> 00:05:27.210 align:start position:0%
our actual integers even though they
look<00:05:25.180><c> like</c><00:05:25.389><c> object</c><00:05:25.870><c> references</c><00:05:26.410><c> and</c><00:05:26.650><c> we</c><00:05:27.099><c> can</c>

00:05:27.210 --> 00:05:27.220 align:start position:0%
look like object references and we can
 

00:05:27.220 --> 00:05:33.140 align:start position:0%
look like object references and we can
collect<00:05:27.580><c> those</c><00:05:28.229><c> objects</c><00:05:29.229><c> in</c><00:05:29.950><c> contrast</c><00:05:30.820><c> to</c><00:05:31.000><c> the</c>

00:05:33.140 --> 00:05:33.150 align:start position:0%
collect those objects in contrast to the
 

00:05:33.150 --> 00:05:36.300 align:start position:0%
collect those objects in contrast to the
conservative<00:05:34.150><c> collectors</c><00:05:34.690><c> this</c><00:05:34.870><c> can</c><00:05:35.310><c> really</c>

00:05:36.300 --> 00:05:36.310 align:start position:0%
conservative collectors this can really
 

00:05:36.310 --> 00:05:39.210 align:start position:0%
conservative collectors this can really
make<00:05:36.580><c> a</c><00:05:36.610><c> big</c><00:05:36.729><c> difference</c><00:05:37.060><c> in</c><00:05:37.360><c> memory</c><00:05:37.660><c> usage</c><00:05:38.220><c> in</c>

00:05:39.210 --> 00:05:39.220 align:start position:0%
make a big difference in memory usage in
 

00:05:39.220 --> 00:05:40.740 align:start position:0%
make a big difference in memory usage in
the<00:05:39.340><c> sense</c><00:05:39.550><c> that</c><00:05:39.639><c> you're</c><00:05:39.849><c> not</c><00:05:40.090><c> keeping</c><00:05:40.389><c> live</c>

00:05:40.740 --> 00:05:40.750 align:start position:0%
the sense that you're not keeping live
 

00:05:40.750 --> 00:05:44.129 align:start position:0%
the sense that you're not keeping live
object<00:05:41.500><c> that</c><00:05:42.070><c> you're</c><00:05:42.310><c> that</c><00:05:43.030><c> are</c><00:05:43.360><c> apparent</c>

00:05:44.129 --> 00:05:44.139 align:start position:0%
object that you're that are apparent
 

00:05:44.139 --> 00:05:48.180 align:start position:0%
object that you're that are apparent
objects<00:05:44.950><c> but</c><00:05:45.160><c> you</c><00:05:45.580><c> actually</c><00:05:46.950><c> leading</c><00:05:47.950><c> to</c>

00:05:48.180 --> 00:05:48.190 align:start position:0%
objects but you actually leading to
 

00:05:48.190 --> 00:05:51.600 align:start position:0%
objects but you actually leading to
leads<00:05:48.400><c> in</c><00:05:48.639><c> that</c><00:05:48.760><c> area</c><00:05:49.590><c> it</c><00:05:50.590><c> is</c><00:05:50.650><c> generational</c>

00:05:51.600 --> 00:05:51.610 align:start position:0%
leads in that area it is generational
 

00:05:51.610 --> 00:05:56.250 align:start position:0%
leads in that area it is generational
which<00:05:52.210><c> means</c><00:05:54.060><c> the</c><00:05:55.060><c> majority</c><00:05:55.570><c> of</c><00:05:55.599><c> objects</c><00:05:56.229><c> that</c>

00:05:56.250 --> 00:05:56.260 align:start position:0%
which means the majority of objects that
 

00:05:56.260 --> 00:05:57.990 align:start position:0%
which means the majority of objects that
you<00:05:56.380><c> allocate</c><00:05:56.919><c> in</c><00:05:57.039><c> Java</c><00:05:57.310><c> when</c><00:05:57.580><c> you</c><00:05:57.700><c> when</c><00:05:57.970><c> you</c>

00:05:57.990 --> 00:05:58.000 align:start position:0%
you allocate in Java when you when you
 

00:05:58.000 --> 00:06:00.750 align:start position:0%
you allocate in Java when you when you
actually<00:05:58.300><c> study</c><00:05:58.750><c> it</c><00:05:58.960><c> is</c>

00:06:00.750 --> 00:06:00.760 align:start position:0%
actually study it is
 

00:06:00.760 --> 00:06:03.000 align:start position:0%
actually study it is
they're<00:06:01.360><c> very</c><00:06:01.570><c> short-lived</c><00:06:02.050><c> so</c><00:06:02.590><c> what</c><00:06:02.740><c> we</c><00:06:02.860><c> do</c>

00:06:03.000 --> 00:06:03.010 align:start position:0%
they're very short-lived so what we do
 

00:06:03.010 --> 00:06:07.040 align:start position:0%
they're very short-lived so what we do
we<00:06:03.220><c> allocate</c><00:06:03.460><c> all</c><00:06:04.180><c> the</c><00:06:05.050><c> objects</c><00:06:05.500><c> in</c><00:06:05.620><c> this</c><00:06:05.860><c> new</c>

00:06:07.040 --> 00:06:07.050 align:start position:0%
we allocate all the objects in this new
 

00:06:07.050 --> 00:06:10.020 align:start position:0%
we allocate all the objects in this new
object<00:06:08.050><c> heat</c><00:06:08.350><c> or</c><00:06:08.710><c> what</c><00:06:09.100><c> we</c><00:06:09.220><c> call</c><00:06:09.250><c> the</c><00:06:09.580><c> nursery</c>

00:06:10.020 --> 00:06:10.030 align:start position:0%
object heat or what we call the nursery
 

00:06:10.030 --> 00:06:14.640 align:start position:0%
object heat or what we call the nursery
and<00:06:10.980><c> once</c><00:06:11.980><c> we</c><00:06:12.100><c> exhausted</c><00:06:12.730><c> this</c><00:06:13.600><c> nursery</c><00:06:14.230><c> we</c>

00:06:14.640 --> 00:06:14.650 align:start position:0%
and once we exhausted this nursery we
 

00:06:14.650 --> 00:06:16.770 align:start position:0%
and once we exhausted this nursery we
copy<00:06:14.890><c> the</c><00:06:15.070><c> surviving</c><00:06:15.700><c> object</c><00:06:16.150><c> out</c><00:06:16.330><c> of</c><00:06:16.570><c> there</c>

00:06:16.770 --> 00:06:16.780 align:start position:0%
copy the surviving object out of there
 

00:06:16.780 --> 00:06:20.310 align:start position:0%
copy the surviving object out of there
into<00:06:17.560><c> an</c><00:06:17.680><c> old</c><00:06:17.800><c> space</c><00:06:18.250><c> and</c><00:06:18.780><c> can</c><00:06:19.780><c> start</c><00:06:20.110><c> from</c>

00:06:20.310 --> 00:06:20.320 align:start position:0%
into an old space and can start from
 

00:06:20.320 --> 00:06:23.580 align:start position:0%
into an old space and can start from
scratch<00:06:20.590><c> in</c><00:06:20.980><c> that</c><00:06:21.130><c> nursery</c><00:06:21.780><c> which</c><00:06:22.780><c> means</c><00:06:23.050><c> we</c>

00:06:23.580 --> 00:06:23.590 align:start position:0%
scratch in that nursery which means we
 

00:06:23.590 --> 00:06:25.800 align:start position:0%
scratch in that nursery which means we
have<00:06:23.740><c> a</c><00:06:23.800><c> fast</c><00:06:24.400><c> allocation</c><00:06:25.120><c> in</c><00:06:25.240><c> this</c><00:06:25.360><c> nursery</c>

00:06:25.800 --> 00:06:25.810 align:start position:0%
have a fast allocation in this nursery
 

00:06:25.810 --> 00:06:27.930 align:start position:0%
have a fast allocation in this nursery
we<00:06:26.440><c> don't</c><00:06:26.650><c> have</c><00:06:26.830><c> to</c><00:06:26.980><c> deal</c><00:06:27.190><c> with</c><00:06:27.400><c> with</c><00:06:27.910><c> the</c>

00:06:27.930 --> 00:06:27.940 align:start position:0%
we don't have to deal with with the
 

00:06:27.940 --> 00:06:30.960 align:start position:0%
we don't have to deal with with the
garbage<00:06:28.240><c> here</c><00:06:29.040><c> we</c><00:06:30.040><c> have</c><00:06:30.220><c> in</c><00:06:30.400><c> there</c><00:06:30.580><c> we</c><00:06:30.760><c> don't</c>

00:06:30.960 --> 00:06:30.970 align:start position:0%
garbage here we have in there we don't
 

00:06:30.970 --> 00:06:32.730 align:start position:0%
garbage here we have in there we don't
do<00:06:31.150><c> anything</c><00:06:31.390><c> with</c><00:06:31.660><c> the</c><00:06:31.750><c> garbage</c><00:06:31.960><c> we</c><00:06:32.500><c> just</c>

00:06:32.730 --> 00:06:32.740 align:start position:0%
do anything with the garbage we just
 

00:06:32.740 --> 00:06:38.340 align:start position:0%
do anything with the garbage we just
copy<00:06:33.130><c> out</c><00:06:33.460><c> the</c><00:06:33.940><c> object</c><00:06:34.450><c> that</c><00:06:34.930><c> survived</c><00:06:37.350><c> let's</c>

00:06:38.340 --> 00:06:38.350 align:start position:0%
copy out the object that survived let's
 

00:06:38.350 --> 00:06:40.980 align:start position:0%
copy out the object that survived let's
survive<00:06:38.620><c> from</c><00:06:39.040><c> this</c><00:06:39.730><c> new</c><00:06:39.940><c> generation</c><00:06:40.420><c> to</c><00:06:40.960><c> the</c>

00:06:40.980 --> 00:06:40.990 align:start position:0%
survive from this new generation to the
 

00:06:40.990 --> 00:06:44.520 align:start position:0%
survive from this new generation to the
old<00:06:41.230><c> generation</c><00:06:42.330><c> you</c><00:06:43.330><c> could</c><00:06:43.510><c> you</c><00:06:44.110><c> could</c><00:06:44.260><c> say</c>

00:06:44.520 --> 00:06:44.530 align:start position:0%
old generation you could you could say
 

00:06:44.530 --> 00:06:48.270 align:start position:0%
old generation you could you could say
that<00:06:44.560><c> garbage</c><00:06:45.220><c> collection</c><00:06:45.760><c> is</c><00:06:47.160><c> actually</c><00:06:48.160><c> the</c>

00:06:48.270 --> 00:06:48.280 align:start position:0%
that garbage collection is actually the
 

00:06:48.280 --> 00:06:49.290 align:start position:0%
that garbage collection is actually the
wrong<00:06:48.460><c> term</c><00:06:48.760><c> it's</c><00:06:48.970><c> more</c><00:06:49.120><c> like</c><00:06:49.270><c> a</c>

00:06:49.290 --> 00:06:49.300 align:start position:0%
wrong term it's more like a
 

00:06:49.300 --> 00:06:51.450 align:start position:0%
wrong term it's more like a
search-and-rescue<00:06:49.900><c> operation</c><00:06:50.860><c> where</c><00:06:51.220><c> your</c>

00:06:51.450 --> 00:06:51.460 align:start position:0%
search-and-rescue operation where your
 

00:06:51.460 --> 00:06:54.870 align:start position:0%
search-and-rescue operation where your
rescue<00:06:51.790><c> the</c><00:06:51.910><c> few</c><00:06:52.150><c> survivors</c><00:06:52.570><c> out</c><00:06:52.960><c> of</c><00:06:53.380><c> the</c><00:06:53.880><c> new</c>

00:06:54.870 --> 00:06:54.880 align:start position:0%
rescue the few survivors out of the new
 

00:06:54.880 --> 00:06:57.510 align:start position:0%
rescue the few survivors out of the new
heat<00:06:55.180><c> into</c><00:06:55.750><c> an</c><00:06:55.990><c> out</c><00:06:56.170><c> of</c><00:06:56.200><c> the</c><00:06:56.410><c> nursery</c><00:06:56.770><c> into</c><00:06:57.430><c> the</c>

00:06:57.510 --> 00:06:57.520 align:start position:0%
heat into an out of the nursery into the
 

00:06:57.520 --> 00:07:01.320 align:start position:0%
heat into an out of the nursery into the
old<00:06:57.640><c> old</c><00:06:58.120><c> space</c><00:06:58.890><c> it</c><00:06:59.890><c> is</c><00:07:00.460><c> also</c><00:07:00.670><c> a</c><00:07:00.790><c> search</c><00:07:01.060><c> where</c>

00:07:01.320 --> 00:07:01.330 align:start position:0%
old old space it is also a search where
 

00:07:01.330 --> 00:07:03.390 align:start position:0%
old old space it is also a search where
we<00:07:01.420><c> do</c><00:07:01.750><c> to</c><00:07:01.900><c> the</c><00:07:02.020><c> accurate</c><00:07:02.500><c> nature</c><00:07:02.860><c> we</c><00:07:03.280><c> know</c>

00:07:03.390 --> 00:07:03.400 align:start position:0%
we do to the accurate nature we know
 

00:07:03.400 --> 00:07:07.140 align:start position:0%
we do to the accurate nature we know
exactly<00:07:04.030><c> who's</c><00:07:04.210><c> surviving</c><00:07:04.810><c> and</c><00:07:05.290><c> so</c><00:07:05.950><c> it</c><00:07:06.150><c> the</c>

00:07:07.140 --> 00:07:07.150 align:start position:0%
exactly who's surviving and so it the
 

00:07:07.150 --> 00:07:10.440 align:start position:0%
exactly who's surviving and so it the
search<00:07:07.420><c> is</c><00:07:07.450><c> pretty</c><00:07:07.990><c> fast</c><00:07:08.260><c> i</c><00:07:08.530><c> say</c><00:07:09.190><c> i</c><00:07:09.490><c> mentioned</c>

00:07:10.440 --> 00:07:10.450 align:start position:0%
search is pretty fast i say i mentioned
 

00:07:10.450 --> 00:07:13.200 align:start position:0%
search is pretty fast i say i mentioned
copying<00:07:10.870><c> we</c><00:07:11.020><c> actually</c><00:07:11.500><c> move</c><00:07:12.370><c> those</c><00:07:12.670><c> objects</c>

00:07:13.200 --> 00:07:13.210 align:start position:0%
copying we actually move those objects
 

00:07:13.210 --> 00:07:16.020 align:start position:0%
copying we actually move those objects
out<00:07:13.420><c> of</c><00:07:13.480><c> out</c><00:07:13.960><c> of</c><00:07:14.170><c> the</c><00:07:14.260><c> nursery</c><00:07:14.650><c> in</c><00:07:15.070><c> the</c>

00:07:16.020 --> 00:07:16.030 align:start position:0%
out of out of the nursery in the
 

00:07:16.030 --> 00:07:19.380 align:start position:0%
out of out of the nursery in the
separate<00:07:16.420><c> memory</c><00:07:16.780><c> area</c><00:07:18.180><c> studies</c><00:07:19.180><c> have</c><00:07:19.210><c> shown</c>

00:07:19.380 --> 00:07:19.390 align:start position:0%
separate memory area studies have shown
 

00:07:19.390 --> 00:07:24.450 align:start position:0%
separate memory area studies have shown
that<00:07:21.480><c> five</c><00:07:22.480><c> to</c><00:07:22.780><c> ten</c><00:07:22.960><c> percent</c><00:07:23.410><c> of</c><00:07:23.650><c> allocated</c>

00:07:24.450 --> 00:07:24.460 align:start position:0%
that five to ten percent of allocated
 

00:07:24.460 --> 00:07:29.820 align:start position:0%
that five to ten percent of allocated
objects<00:07:25.000><c> survive</c><00:07:26.400><c> from</c><00:07:27.400><c> the</c><00:07:27.750><c> new</c><00:07:28.830><c> allocation</c>

00:07:29.820 --> 00:07:29.830 align:start position:0%
objects survive from the new allocation
 

00:07:29.830 --> 00:07:32.340 align:start position:0%
objects survive from the new allocation
space<00:07:30.070><c> from</c><00:07:30.820><c> the</c><00:07:30.940><c> nursery</c><00:07:31.270><c> into</c><00:07:31.600><c> the</c><00:07:31.720><c> old</c>

00:07:32.340 --> 00:07:32.350 align:start position:0%
space from the nursery into the old
 

00:07:32.350 --> 00:07:36.570 align:start position:0%
space from the nursery into the old
generation<00:07:32.980><c> so</c><00:07:33.940><c> if</c><00:07:34.300><c> we</c><00:07:34.660><c> say</c><00:07:34.900><c> this</c><00:07:35.580><c> nurseries</c>

00:07:36.570 --> 00:07:36.580 align:start position:0%
generation so if we say this nurseries
 

00:07:36.580 --> 00:07:40.380 align:start position:0%
generation so if we say this nurseries
half<00:07:36.790><c> a</c><00:07:36.940><c> megabyte</c><00:07:37.210><c> big</c><00:07:37.600><c> we</c><00:07:38.230><c> copy</c><00:07:38.760><c> 25</c><00:07:39.760><c> to</c><00:07:40.030><c> 50</c>

00:07:40.380 --> 00:07:40.390 align:start position:0%
half a megabyte big we copy 25 to 50
 

00:07:40.390 --> 00:07:42.300 align:start position:0%
half a megabyte big we copy 25 to 50
kilobytes<00:07:40.870><c> words</c><00:07:41.200><c> of</c><00:07:41.380><c> objects</c><00:07:41.770><c> which</c><00:07:42.010><c> is</c><00:07:42.130><c> not</c>

00:07:42.300 --> 00:07:42.310 align:start position:0%
kilobytes words of objects which is not
 

00:07:42.310 --> 00:07:47.370 align:start position:0%
kilobytes words of objects which is not
very<00:07:42.340><c> much</c><00:07:45.810><c> also</c><00:07:46.810><c> since</c><00:07:46.960><c> you</c><00:07:47.110><c> have</c><00:07:47.260><c> this</c>

00:07:47.370 --> 00:07:47.380 align:start position:0%
very much also since you have this
 

00:07:47.380 --> 00:07:49.530 align:start position:0%
very much also since you have this
copying<00:07:48.040><c> infrastructure</c><00:07:48.880><c> already</c><00:07:49.030><c> in</c><00:07:49.300><c> place</c>

00:07:49.530 --> 00:07:49.540 align:start position:0%
copying infrastructure already in place
 

00:07:49.540 --> 00:07:54.120 align:start position:0%
copying infrastructure already in place
for<00:07:50.170><c> this</c><00:07:50.320><c> rather</c><00:07:50.920><c> big</c><00:07:51.960><c> object</c><00:07:52.960><c> space</c><00:07:53.230><c> we</c>

00:07:54.120 --> 00:07:54.130 align:start position:0%
for this rather big object space we
 

00:07:54.130 --> 00:07:56.670 align:start position:0%
for this rather big object space we
compact<00:07:54.610><c> it</c><00:07:54.850><c> regularly</c><00:07:55.270><c> every</c><00:07:55.510><c> time</c><00:07:55.930><c> be</c>

00:07:56.670 --> 00:07:56.680 align:start position:0%
compact it regularly every time be
 

00:07:56.680 --> 00:07:59.340 align:start position:0%
compact it regularly every time be
around<00:07:56.890><c> the</c><00:07:57.100><c> old</c><00:07:57.280><c> space</c><00:07:58.000><c> collector</c><00:07:58.630><c> we</c><00:07:59.170><c> can</c>

00:07:59.340 --> 00:07:59.350 align:start position:0%
around the old space collector we can
 

00:07:59.350 --> 00:08:00.129 align:start position:0%
around the old space collector we can
compact

00:08:00.129 --> 00:08:00.139 align:start position:0%
compact
 

00:08:00.139 --> 00:08:04.119 align:start position:0%
compact
with<00:08:00.289><c> the</c><00:08:01.270><c> heat</c><00:08:02.270><c> and</c><00:08:02.569><c> keep</c><00:08:03.439><c> the</c><00:08:03.650><c> memory</c><00:08:03.949><c> usage</c>

00:08:04.119 --> 00:08:04.129 align:start position:0%
with the heat and keep the memory usage
 

00:08:04.129 --> 00:08:09.640 align:start position:0%
with the heat and keep the memory usage
to<00:08:04.490><c> a</c><00:08:04.550><c> minimum</c><00:08:05.860><c> also</c><00:08:06.860><c> to</c><00:08:07.779><c> the</c><00:08:08.779><c> old</c><00:08:09.409><c> space</c>

00:08:09.640 --> 00:08:09.650 align:start position:0%
to a minimum also to the old space
 

00:08:09.650 --> 00:08:11.890 align:start position:0%
to a minimum also to the old space
collector<00:08:10.159><c> also</c><00:08:10.580><c> since</c><00:08:11.090><c> it</c><00:08:11.240><c> has</c><00:08:11.389><c> to</c><00:08:11.569><c> deal</c><00:08:11.719><c> with</c>

00:08:11.890 --> 00:08:11.900 align:start position:0%
collector also since it has to deal with
 

00:08:11.900 --> 00:08:13.830 align:start position:0%
collector also since it has to deal with
much<00:08:12.080><c> bigger</c><00:08:12.319><c> memory</c><00:08:12.650><c> allocation</c><00:08:13.430><c> is</c>

00:08:13.830 --> 00:08:13.840 align:start position:0%
much bigger memory allocation is
 

00:08:13.840 --> 00:08:19.390 align:start position:0%
much bigger memory allocation is
incremental<00:08:14.949><c> so</c><00:08:15.949><c> it's</c><00:08:16.569><c> it</c><00:08:17.569><c> work</c><00:08:18.499><c> it</c><00:08:18.949><c> works</c><00:08:19.189><c> on</c>

00:08:19.390 --> 00:08:19.400 align:start position:0%
incremental so it's it work it works on
 

00:08:19.400 --> 00:08:22.059 align:start position:0%
incremental so it's it work it works on
a<00:08:19.460><c> chunk</c><00:08:19.849><c> at</c><00:08:20.029><c> a</c><00:08:20.120><c> time</c><00:08:20.680><c> every</c><00:08:21.680><c> time</c><00:08:21.889><c> it's</c>

00:08:22.059 --> 00:08:22.069 align:start position:0%
a chunk at a time every time it's
 

00:08:22.069 --> 00:08:25.689 align:start position:0%
a chunk at a time every time it's
involved<00:08:22.539><c> it</c><00:08:23.539><c> reduces</c><00:08:24.529><c> you</c><00:08:24.710><c> to</c><00:08:24.770><c> perceivable</c>

00:08:25.689 --> 00:08:25.699 align:start position:0%
involved it reduces you to perceivable
 

00:08:25.699 --> 00:08:28.179 align:start position:0%
involved it reduces you to perceivable
posits<00:08:26.180><c> so</c><00:08:26.300><c> you</c><00:08:26.360><c> don't</c><00:08:26.599><c> have</c><00:08:27.289><c> this</c><00:08:27.499><c> big</c><00:08:27.740><c> stop</c>

00:08:28.179 --> 00:08:28.189 align:start position:0%
posits so you don't have this big stop
 

00:08:28.189 --> 00:08:31.119 align:start position:0%
posits so you don't have this big stop
in<00:08:28.520><c> the</c><00:08:28.699><c> middle</c><00:08:29.439><c> where</c><00:08:30.439><c> you're</c><00:08:30.590><c> collecting</c>

00:08:31.119 --> 00:08:31.129 align:start position:0%
in the middle where you're collecting
 

00:08:31.129 --> 00:08:33.600 align:start position:0%
in the middle where you're collecting
the<00:08:31.279><c> whole</c><00:08:31.430><c> heap</c><00:08:31.699><c> but</c><00:08:32.180><c> you</c><00:08:32.269><c> have</c><00:08:32.419><c> these</c><00:08:32.589><c> many</c>

00:08:33.600 --> 00:08:33.610 align:start position:0%
the whole heap but you have these many
 

00:08:33.610 --> 00:08:37.149 align:start position:0%
the whole heap but you have these many
many<00:08:34.610><c> small</c><00:08:35.029><c> causes</c><00:08:35.599><c> which</c><00:08:35.810><c> makes</c><00:08:36.110><c> your</c><00:08:36.380><c> UI</c>

00:08:37.149 --> 00:08:37.159 align:start position:0%
many small causes which makes your UI
 

00:08:37.159 --> 00:08:39.370 align:start position:0%
many small causes which makes your UI
applications<00:08:38.060><c> or</c><00:08:38.269><c> server</c><00:08:38.690><c> applications</c>

00:08:39.370 --> 00:08:39.380 align:start position:0%
applications or server applications
 

00:08:39.380 --> 00:08:43.990 align:start position:0%
applications or server applications
respond<00:08:39.769><c> much</c><00:08:40.310><c> faster</c><00:08:42.159><c> so</c><00:08:43.159><c> the</c><00:08:43.399><c> benefits</c><00:08:43.820><c> to</c>

00:08:43.990 --> 00:08:44.000 align:start position:0%
respond much faster so the benefits to
 

00:08:44.000 --> 00:08:46.720 align:start position:0%
respond much faster so the benefits to
you<00:08:44.120><c> as</c><00:08:44.269><c> a</c><00:08:44.300><c> programmer</c><00:08:44.899><c> are</c><00:08:45.399><c> very</c><00:08:46.399><c> fast</c>

00:08:46.720 --> 00:08:46.730 align:start position:0%
you as a programmer are very fast
 

00:08:46.730 --> 00:08:50.530 align:start position:0%
you as a programmer are very fast
allocation<00:08:48.279><c> since</c><00:08:49.279><c> we</c><00:08:49.430><c> always</c><00:08:49.820><c> allocated</c><00:08:50.510><c> a</c>

00:08:50.530 --> 00:08:50.540 align:start position:0%
allocation since we always allocated a
 

00:08:50.540 --> 00:08:55.090 align:start position:0%
allocation since we always allocated a
bit<00:08:50.810><c> nursery</c><00:08:52.209><c> and</c><00:08:53.529><c> reallocate</c><00:08:54.529><c> in</c><00:08:54.680><c> a</c><00:08:54.769><c> stock</c>

00:08:55.090 --> 00:08:55.100 align:start position:0%
bit nursery and reallocate in a stock
 

00:08:55.100 --> 00:08:57.480 align:start position:0%
bit nursery and reallocate in a stock
like<00:08:55.130><c> fashion</c><00:08:55.940><c> so</c><00:08:56.089><c> we</c><00:08:56.240><c> always</c><00:08:56.600><c> do</c><00:08:56.810><c> is</c>

00:08:57.480 --> 00:08:57.490 align:start position:0%
like fashion so we always do is
 

00:08:57.490 --> 00:09:00.340 align:start position:0%
like fashion so we always do is
increment<00:08:58.490><c> the</c><00:08:58.610><c> pointer</c><00:08:59.089><c> and</c><00:08:59.300><c> this</c><00:09:00.050><c> is</c><00:09:00.230><c> our</c>

00:09:00.340 --> 00:09:00.350 align:start position:0%
increment the pointer and this is our
 

00:09:00.350 --> 00:09:02.560 align:start position:0%
increment the pointer and this is our
new<00:09:00.649><c> object</c><00:09:01.130><c> all</c><00:09:01.490><c> we</c><00:09:01.790><c> have</c><00:09:01.940><c> to</c><00:09:02.089><c> do</c><00:09:02.180><c> after</c><00:09:02.449><c> we</c>

00:09:02.560 --> 00:09:02.570 align:start position:0%
new object all we have to do after we
 

00:09:02.570 --> 00:09:04.360 align:start position:0%
new object all we have to do after we
increment<00:09:02.959><c> at</c><00:09:03.110><c> the</c><00:09:03.199><c> pointer</c><00:09:03.620><c> is</c><00:09:03.800><c> check</c><00:09:04.100><c> if</c><00:09:04.250><c> we</c>

00:09:04.360 --> 00:09:04.370 align:start position:0%
increment at the pointer is check if we
 

00:09:04.370 --> 00:09:06.519 align:start position:0%
increment at the pointer is check if we
exhausted<00:09:04.910><c> the</c><00:09:05.029><c> nursery</c><00:09:05.420><c> space</c><00:09:05.779><c> and</c><00:09:06.019><c> then</c><00:09:06.410><c> we</c>

00:09:06.519 --> 00:09:06.529 align:start position:0%
exhausted the nursery space and then we
 

00:09:06.529 --> 00:09:07.990 align:start position:0%
exhausted the nursery space and then we
have<00:09:06.709><c> to</c><00:09:06.740><c> trigger</c><00:09:07.100><c> this</c><00:09:07.250><c> new</c><00:09:07.699><c> space</c>

00:09:07.990 --> 00:09:08.000 align:start position:0%
have to trigger this new space
 

00:09:08.000 --> 00:09:14.470 align:start position:0%
have to trigger this new space
collection<00:09:10.600><c> this</c><00:09:12.550><c> this</c><00:09:13.550><c> allocation</c><00:09:14.000><c> code</c><00:09:14.329><c> is</c>

00:09:14.470 --> 00:09:14.480 align:start position:0%
collection this this allocation code is
 

00:09:14.480 --> 00:09:18.490 align:start position:0%
collection this this allocation code is
actually<00:09:14.630><c> in</c><00:09:15.110><c> line</c><00:09:15.380><c> in</c><00:09:15.769><c> the</c><00:09:16.760><c> compiled</c><00:09:17.149><c> code</c><00:09:17.500><c> so</c>

00:09:18.490 --> 00:09:18.500 align:start position:0%
actually in line in the compiled code so
 

00:09:18.500 --> 00:09:20.740 align:start position:0%
actually in line in the compiled code so
all<00:09:19.190><c> we</c><00:09:19.220><c> have</c><00:09:19.490><c> to</c><00:09:19.640><c> do</c><00:09:19.880><c> is</c><00:09:19.910><c> to</c><00:09:20.240><c> allocate</c><00:09:20.390><c> a</c><00:09:20.630><c> new</c>

00:09:20.740 --> 00:09:20.750 align:start position:0%
all we have to do is to allocate a new
 

00:09:20.750 --> 00:09:23.050 align:start position:0%
all we have to do is to allocate a new
new<00:09:21.410><c> objects</c><00:09:21.949><c> when</c><00:09:22.100><c> you</c><00:09:22.190><c> have</c><00:09:22.339><c> the</c><00:09:22.550><c> new</c>

00:09:23.050 --> 00:09:23.060 align:start position:0%
new objects when you have the new
 

00:09:23.060 --> 00:09:26.439 align:start position:0%
new objects when you have the new
operation<00:09:23.690><c> this</c><00:09:24.290><c> is</c><00:09:24.790><c> equivalent</c><00:09:25.790><c> to</c><00:09:26.060><c> 11</c>

00:09:26.439 --> 00:09:26.449 align:start position:0%
operation this is equivalent to 11
 

00:09:26.449 --> 00:09:28.509 align:start position:0%
operation this is equivalent to 11
instructions<00:09:27.079><c> when</c><00:09:27.860><c> you</c><00:09:27.949><c> compare</c><00:09:28.310><c> that</c><00:09:28.339><c> to</c>

00:09:28.509 --> 00:09:28.519 align:start position:0%
instructions when you compare that to
 

00:09:28.519 --> 00:09:31.750 align:start position:0%
instructions when you compare that to
the<00:09:29.420><c> a/c</c><00:09:29.779><c> style</c><00:09:30.110><c> my</c><00:09:30.320><c> log</c><00:09:30.529><c> function</c><00:09:30.980><c> call</c><00:09:31.190><c> you</c>

00:09:31.750 --> 00:09:31.760 align:start position:0%
the a/c style my log function call you
 

00:09:31.760 --> 00:09:33.340 align:start position:0%
the a/c style my log function call you
have<00:09:31.880><c> to</c><00:09:32.029><c> go</c><00:09:32.180><c> through</c><00:09:32.510><c> cross</c><00:09:32.810><c> library</c>

00:09:33.340 --> 00:09:33.350 align:start position:0%
have to go through cross library
 

00:09:33.350 --> 00:09:35.319 align:start position:0%
have to go through cross library
function<00:09:34.160><c> glue</c><00:09:34.399><c> and</c><00:09:34.699><c> then</c><00:09:34.820><c> you</c><00:09:34.940><c> have</c><00:09:35.089><c> to</c><00:09:35.240><c> do</c>

00:09:35.319 --> 00:09:35.329 align:start position:0%
function glue and then you have to do
 

00:09:35.329 --> 00:09:38.530 align:start position:0%
function glue and then you have to do
the<00:09:35.540><c> c.c</c><00:09:36.500><c> prologue</c><00:09:37.070><c> to</c><00:09:37.100><c> allocate</c><00:09:37.790><c> after</c><00:09:38.390><c> those</c>

00:09:38.530 --> 00:09:38.540 align:start position:0%
the c.c prologue to allocate after those
 

00:09:38.540 --> 00:09:39.910 align:start position:0%
the c.c prologue to allocate after those
11<00:09:38.899><c> instructions</c><00:09:39.410><c> you're</c><00:09:39.529><c> not</c><00:09:39.680><c> even</c>

00:09:39.910 --> 00:09:39.920 align:start position:0%
11 instructions you're not even
 

00:09:39.920 --> 00:09:42.670 align:start position:0%
11 instructions you're not even
allocating<00:09:40.660><c> objects</c><00:09:41.660><c> in</c><00:09:41.779><c> the</c><00:09:41.870><c> c</c><00:09:42.050><c> language</c><00:09:42.230><c> yet</c>

00:09:42.670 --> 00:09:42.680 align:start position:0%
allocating objects in the c language yet
 

00:09:42.680 --> 00:09:45.130 align:start position:0%
allocating objects in the c language yet
versus<00:09:43.310><c> in</c><00:09:43.430><c> java</c><00:09:43.699><c> you</c><00:09:44.269><c> have</c><00:09:44.420><c> your</c><00:09:44.600><c> object</c><00:09:45.019><c> and</c>

00:09:45.130 --> 00:09:45.140 align:start position:0%
versus in java you have your object and
 

00:09:45.140 --> 00:09:49.870 align:start position:0%
versus in java you have your object and
are<00:09:45.230><c> ready</c><00:09:45.440><c> to</c><00:09:45.560><c> go</c><00:09:46.570><c> as</c><00:09:47.570><c> i</c><00:09:48.500><c> mentioned</c><00:09:48.529><c> before</c><00:09:48.920><c> we</c>

00:09:49.870 --> 00:09:49.880 align:start position:0%
are ready to go as i mentioned before we
 

00:09:49.880 --> 00:09:51.460 align:start position:0%
are ready to go as i mentioned before we
have<00:09:50.000><c> an</c><00:09:50.120><c> accurate</c><00:09:50.269><c> collector</c><00:09:51.050><c> so</c><00:09:51.199><c> we</c><00:09:51.350><c> do</c>

00:09:51.460 --> 00:09:51.470 align:start position:0%
have an accurate collector so we do
 

00:09:51.470 --> 00:09:53.680 align:start position:0%
have an accurate collector so we do
aggressive<00:09:52.010><c> reclamation</c><00:09:52.790><c> of</c><00:09:52.880><c> of</c><00:09:53.060><c> this</c>

00:09:53.680 --> 00:09:53.690 align:start position:0%
aggressive reclamation of of this
 

00:09:53.690 --> 00:09:59.530 align:start position:0%
aggressive reclamation of of this
nursery<00:09:54.199><c> as</c><00:09:54.380><c> well</c><00:09:54.649><c> as</c><00:09:55.120><c> of</c><00:09:56.120><c> the</c><00:09:56.390><c> old</c><00:09:56.899><c> generation</c>

00:09:59.530 --> 00:09:59.540 align:start position:0%
 
 

00:09:59.540 --> 00:10:03.860 align:start position:0%
 
so<00:10:01.040><c> for</c><00:10:02.040><c> example</c><00:10:02.070><c> you</c><00:10:02.550><c> don't</c><00:10:02.790><c> leave</c><00:10:03.029><c> of</c><00:10:03.360><c> the</c>

00:10:03.860 --> 00:10:03.870 align:start position:0%
so for example you don't leave of the
 

00:10:03.870 --> 00:10:06.620 align:start position:0%
so for example you don't leave of the
trends<00:10:04.320><c> that</c><00:10:04.410><c> are</c><00:10:04.769><c> not</c><00:10:05.670><c> accessible</c><00:10:06.029><c> anymore</c>

00:10:06.620 --> 00:10:06.630 align:start position:0%
trends that are not accessible anymore
 

00:10:06.630 --> 00:10:10.069 align:start position:0%
trends that are not accessible anymore
and<00:10:07.550><c> due</c><00:10:08.550><c> to</c><00:10:08.610><c> these</c><00:10:08.820><c> two</c><00:10:09.149><c> factors</c><00:10:09.870><c> you</c><00:10:10.050><c> have</c>

00:10:10.069 --> 00:10:10.079 align:start position:0%
and due to these two factors you have
 

00:10:10.079 --> 00:10:14.319 align:start position:0%
and due to these two factors you have
essentially<00:10:10.560><c> free</c><00:10:10.889><c> free</c><00:10:11.670><c> temporary</c><00:10:12.240><c> objects</c>

00:10:14.319 --> 00:10:14.329 align:start position:0%
essentially free free temporary objects
 

00:10:14.329 --> 00:10:16.340 align:start position:0%
essentially free free temporary objects
temporary<00:10:15.329><c> objects</c><00:10:15.870><c> are</c><00:10:15.990><c> by</c><00:10:16.290><c> definition</c>

00:10:16.340 --> 00:10:16.350 align:start position:0%
temporary objects are by definition
 

00:10:16.350 --> 00:10:19.160 align:start position:0%
temporary objects are by definition
short-lived<00:10:17.339><c> which</c><00:10:18.029><c> we</c><00:10:18.420><c> don't</c><00:10:18.630><c> have</c><00:10:18.839><c> to</c><00:10:18.990><c> deal</c>

00:10:19.160 --> 00:10:19.170 align:start position:0%
short-lived which we don't have to deal
 

00:10:19.170 --> 00:10:20.990 align:start position:0%
short-lived which we don't have to deal
with<00:10:19.410><c> you</c><00:10:20.040><c> have</c><00:10:20.190><c> no</c><00:10:20.370><c> overhead</c><00:10:20.790><c> for</c>

00:10:20.990 --> 00:10:21.000 align:start position:0%
with you have no overhead for
 

00:10:21.000 --> 00:10:23.090 align:start position:0%
with you have no overhead for
short-lived<00:10:21.449><c> objects</c><00:10:21.990><c> because</c><00:10:22.529><c> all</c><00:10:22.800><c> we</c><00:10:22.949><c> have</c>

00:10:23.090 --> 00:10:23.100 align:start position:0%
short-lived objects because all we have
 

00:10:23.100 --> 00:10:25.040 align:start position:0%
short-lived objects because all we have
to<00:10:23.250><c> do</c><00:10:23.370><c> is</c><00:10:23.399><c> but</c><00:10:23.790><c> we</c><00:10:23.940><c> copy</c><00:10:24.209><c> the</c><00:10:24.300><c> few</c><00:10:24.660><c> survivors</c>

00:10:25.040 --> 00:10:25.050 align:start position:0%
to do is but we copy the few survivors
 

00:10:25.050 --> 00:10:28.480 align:start position:0%
to do is but we copy the few survivors
out<00:10:25.319><c> of</c><00:10:25.380><c> there</c><00:10:25.709><c> so</c><00:10:26.569><c> I</c><00:10:27.569><c> claim</c><00:10:28.079><c> when</c><00:10:28.230><c> you</c><00:10:28.290><c> have</c>

00:10:28.480 --> 00:10:28.490 align:start position:0%
out of there so I claim when you have
 

00:10:28.490 --> 00:10:31.009 align:start position:0%
out of there so I claim when you have
essentially<00:10:29.490><c> free</c><00:10:29.699><c> of</c><00:10:29.850><c> essentially</c><00:10:30.839><c> free</c>

00:10:31.009 --> 00:10:31.019 align:start position:0%
essentially free of essentially free
 

00:10:31.019 --> 00:10:33.410 align:start position:0%
essentially free of essentially free
temporary<00:10:31.470><c> object</c><00:10:31.889><c> especially</c><00:10:32.819><c> since</c><00:10:33.029><c> javis</c>

00:10:33.410 --> 00:10:33.420 align:start position:0%
temporary object especially since javis
 

00:10:33.420 --> 00:10:37.129 align:start position:0%
temporary object especially since javis
multi-threaded<00:10:34.110><c> if</c><00:10:34.259><c> you</c><00:10:34.889><c> have</c><00:10:35.069><c> an</c><00:10:36.139><c> allocation</c>

00:10:37.129 --> 00:10:37.139 align:start position:0%
multi-threaded if you have an allocation
 

00:10:37.139 --> 00:10:39.230 align:start position:0%
multi-threaded if you have an allocation
cash<00:10:37.680><c> you</c><00:10:38.040><c> would</c><00:10:38.190><c> have</c><00:10:38.339><c> to</c><00:10:38.519><c> lock</c><00:10:38.730><c> that</c>

00:10:39.230 --> 00:10:39.240 align:start position:0%
cash you would have to lock that
 

00:10:39.240 --> 00:10:41.540 align:start position:0%
cash you would have to lock that
allocation<00:10:39.720><c> cash</c><00:10:40.139><c> flows</c><00:10:40.529><c> you</c><00:10:41.220><c> would</c><00:10:41.339><c> have</c><00:10:41.490><c> to</c>

00:10:41.540 --> 00:10:41.550 align:start position:0%
allocation cash flows you would have to
 

00:10:41.550 --> 00:10:45.110 align:start position:0%
allocation cash flows you would have to
take<00:10:42.649><c> the</c><00:10:43.649><c> object</c><00:10:44.130><c> out</c><00:10:44.250><c> of</c><00:10:44.399><c> the</c><00:10:44.490><c> allocation</c>

00:10:45.110 --> 00:10:45.120 align:start position:0%
take the object out of the allocation
 

00:10:45.120 --> 00:10:47.689 align:start position:0%
take the object out of the allocation
cash<00:10:45.360><c> and</c><00:10:45.720><c> then</c><00:10:46.110><c> unlock</c><00:10:46.560><c> but</c><00:10:47.279><c> by</c><00:10:47.519><c> that</c><00:10:47.639><c> time</c>

00:10:47.689 --> 00:10:47.699 align:start position:0%
cash and then unlock but by that time
 

00:10:47.699 --> 00:10:49.970 align:start position:0%
cash and then unlock but by that time
you<00:10:48.420><c> already</c><00:10:48.720><c> allocated</c><00:10:48.959><c> the</c><00:10:49.380><c> obstacles</c>

00:10:49.970 --> 00:10:49.980 align:start position:0%
you already allocated the obstacles
 

00:10:49.980 --> 00:10:55.400 align:start position:0%
you already allocated the obstacles
nursery<00:10:51.199><c> so</c><00:10:53.209><c> what</c><00:10:54.209><c> do</c><00:10:54.569><c> you</c><00:10:54.690><c> need</c><00:10:54.810><c> to</c><00:10:54.959><c> do</c><00:10:55.079><c> well</c>

00:10:55.400 --> 00:10:55.410 align:start position:0%
nursery so what do you need to do well
 

00:10:55.410 --> 00:10:57.319 align:start position:0%
nursery so what do you need to do well
as<00:10:55.649><c> I</c><00:10:56.220><c> mentioned</c><00:10:56.610><c> these</c><00:10:56.699><c> do</c><00:10:56.910><c> not</c><00:10:56.940><c> build</c>

00:10:57.319 --> 00:10:57.329 align:start position:0%
as I mentioned these do not build
 

00:10:57.329 --> 00:10:59.660 align:start position:0%
as I mentioned these do not build
allocation<00:10:57.990><c> caches</c><00:10:58.470><c> but</c><00:10:58.949><c> what</c><00:10:59.100><c> you</c><00:10:59.190><c> also</c><00:10:59.339><c> have</c>

00:10:59.660 --> 00:10:59.670 align:start position:0%
allocation caches but what you also have
 

00:10:59.670 --> 00:11:03.139 align:start position:0%
allocation caches but what you also have
to<00:10:59.819><c> do</c><00:10:59.910><c> is</c><00:11:00.920><c> you</c><00:11:01.920><c> have</c><00:11:01.949><c> to</c><00:11:02.190><c> tell</c><00:11:02.430><c> the</c><00:11:02.610><c> vm</c><00:11:02.910><c> that</c>

00:11:03.139 --> 00:11:03.149 align:start position:0%
to do is you have to tell the vm that
 

00:11:03.149 --> 00:11:07.400 align:start position:0%
to do is you have to tell the vm that
you're<00:11:03.269><c> done</c><00:11:03.540><c> with</c><00:11:03.750><c> an</c><00:11:03.839><c> object</c><00:11:04.370><c> so</c><00:11:06.110><c> so</c><00:11:07.110><c> what</c><00:11:07.350><c> do</c>

00:11:07.400 --> 00:11:07.410 align:start position:0%
you're done with an object so so what do
 

00:11:07.410 --> 00:11:09.470 align:start position:0%
you're done with an object so so what do
you<00:11:07.470><c> have</c><00:11:07.500><c> to</c><00:11:07.709><c> do</c><00:11:07.829><c> is</c><00:11:07.980><c> if</c><00:11:08.160><c> you</c><00:11:08.819><c> have</c><00:11:08.850><c> an</c><00:11:09.089><c> object</c>

00:11:09.470 --> 00:11:09.480 align:start position:0%
you have to do is if you have an object
 

00:11:09.480 --> 00:11:11.840 align:start position:0%
you have to do is if you have an object
here<00:11:09.870><c> that</c><00:11:10.410><c> you</c><00:11:10.529><c> don't</c><00:11:10.709><c> need</c><00:11:11.040><c> anymore</c><00:11:11.430><c> or</c><00:11:11.730><c> you</c>

00:11:11.840 --> 00:11:11.850 align:start position:0%
here that you don't need anymore or you
 

00:11:11.850 --> 00:11:13.670 align:start position:0%
here that you don't need anymore or you
have<00:11:12.000><c> even</c><00:11:12.149><c> universe</c><00:11:12.810><c> if</c><00:11:12.990><c> you</c><00:11:13.079><c> have</c><00:11:13.199><c> an</c><00:11:13.290><c> object</c>

00:11:13.670 --> 00:11:13.680 align:start position:0%
have even universe if you have an object
 

00:11:13.680 --> 00:11:16.490 align:start position:0%
have even universe if you have an object
hierarchy<00:11:14.870><c> especially</c><00:11:15.870><c> if</c><00:11:15.930><c> you</c><00:11:16.079><c> have</c><00:11:16.110><c> it</c><00:11:16.319><c> in</c><00:11:16.410><c> a</c>

00:11:16.490 --> 00:11:16.500 align:start position:0%
hierarchy especially if you have it in a
 

00:11:16.500 --> 00:11:19.910 align:start position:0%
hierarchy especially if you have it in a
static<00:11:16.889><c> field</c><00:11:17.190><c> you</c><00:11:17.880><c> have</c><00:11:18.000><c> to</c><00:11:18.209><c> set</c><00:11:18.870><c> that</c><00:11:19.079><c> value</c>

00:11:19.910 --> 00:11:19.920 align:start position:0%
static field you have to set that value
 

00:11:19.920 --> 00:11:23.000 align:start position:0%
static field you have to set that value
that<00:11:20.100><c> restaurants</c><00:11:20.579><c> to</c><00:11:20.730><c> know</c><00:11:20.910><c> so</c><00:11:21.540><c> we</c><00:11:21.690><c> know</c><00:11:22.010><c> this</c>

00:11:23.000 --> 00:11:23.010 align:start position:0%
that restaurants to know so we know this
 

00:11:23.010 --> 00:11:24.949 align:start position:0%
that restaurants to know so we know this
object<00:11:23.610><c> hierarchy</c><00:11:23.880><c> or</c><00:11:24.209><c> this</c><00:11:24.420><c> object</c><00:11:24.839><c> is</c><00:11:24.899><c> not</c>

00:11:24.949 --> 00:11:24.959 align:start position:0%
object hierarchy or this object is not
 

00:11:24.959 --> 00:11:27.379 align:start position:0%
object hierarchy or this object is not
reachable<00:11:25.350><c> reachable</c><00:11:26.279><c> anymore</c><00:11:26.639><c> so</c><00:11:27.120><c> we</c><00:11:27.209><c> don't</c>

00:11:27.379 --> 00:11:27.389 align:start position:0%
reachable reachable anymore so we don't
 

00:11:27.389 --> 00:11:32.059 align:start position:0%
reachable reachable anymore so we don't
copy<00:11:27.750><c> it</c><00:11:27.959><c> out</c><00:11:28.079><c> into</c><00:11:28.410><c> the</c><00:11:28.649><c> old</c><00:11:29.040><c> generation</c><00:11:31.069><c> or</c>

00:11:32.059 --> 00:11:32.069 align:start position:0%
copy it out into the old generation or
 

00:11:32.069 --> 00:11:34.280 align:start position:0%
copy it out into the old generation or
even<00:11:33.029><c> worse</c><00:11:33.209><c> if</c><00:11:33.389><c> it's</c><00:11:33.540><c> in</c><00:11:33.660><c> the</c><00:11:33.810><c> old</c><00:11:33.930><c> generation</c>

00:11:34.280 --> 00:11:34.290 align:start position:0%
even worse if it's in the old generation
 

00:11:34.290 --> 00:11:37.250 align:start position:0%
even worse if it's in the old generation
we<00:11:35.010><c> keep</c><00:11:35.459><c> compacting</c><00:11:36.089><c> it</c><00:11:36.180><c> and</c><00:11:36.420><c> so</c><00:11:36.540><c> on</c><00:11:36.690><c> we</c><00:11:37.079><c> keep</c>

00:11:37.250 --> 00:11:37.260 align:start position:0%
we keep compacting it and so on we keep
 

00:11:37.260 --> 00:11:39.980 align:start position:0%
we keep compacting it and so on we keep
that<00:11:37.440><c> memory</c><00:11:37.620><c> alive</c><00:11:38.519><c> so</c><00:11:39.209><c> what</c><00:11:39.569><c> do</c><00:11:39.660><c> you</c><00:11:39.720><c> have</c><00:11:39.839><c> to</c>

00:11:39.980 --> 00:11:39.990 align:start position:0%
that memory alive so what do you have to
 

00:11:39.990 --> 00:11:41.300 align:start position:0%
that memory alive so what do you have to
make<00:11:40.019><c> sure</c><00:11:40.440><c> that</c><00:11:40.649><c> we</c><00:11:40.769><c> need</c><00:11:40.860><c> all</c><00:11:40.949><c> out</c><00:11:41.130><c> your</c>

00:11:41.300 --> 00:11:41.310 align:start position:0%
make sure that we need all out your
 

00:11:41.310 --> 00:11:44.170 align:start position:0%
make sure that we need all out your
object<00:11:41.760><c> that</c><00:11:42.240><c> you're</c><00:11:42.389><c> not</c><00:11:42.600><c> using</c><00:11:42.839><c> anymore</c><00:11:43.170><c> and</c>

00:11:44.170 --> 00:11:44.180 align:start position:0%
object that you're not using anymore and
 

00:11:44.180 --> 00:11:47.120 align:start position:0%
object that you're not using anymore and
while<00:11:45.180><c> i</c><00:11:45.209><c> mentioned</c><00:11:45.630><c> allocation</c><00:11:46.199><c> caches</c><00:11:46.589><c> what</c>

00:11:47.120 --> 00:11:47.130 align:start position:0%
while i mentioned allocation caches what
 

00:11:47.130 --> 00:11:48.530 align:start position:0%
while i mentioned allocation caches what
you<00:11:47.220><c> also</c><00:11:47.399><c> have</c><00:11:47.730><c> to</c><00:11:47.760><c> do</c><00:11:47.970><c> is</c><00:11:48.180><c> if</c><00:11:48.389><c> you</c><00:11:48.510><c> have</c>

00:11:48.530 --> 00:11:48.540 align:start position:0%
you also have to do is if you have
 

00:11:48.540 --> 00:11:52.340 align:start position:0%
you also have to do is if you have
native<00:11:49.230><c> code</c><00:11:49.500><c> via</c><00:11:50.310><c> the</c><00:11:50.639><c> stub</c><00:11:51.389><c> library</c><00:11:51.870><c> stub</c><00:11:52.199><c> a</c>

00:11:52.340 --> 00:11:52.350 align:start position:0%
native code via the stub library stub a
 

00:11:52.350 --> 00:11:55.309 align:start position:0%
native code via the stub library stub a
slave<00:11:52.649><c> libraries</c><00:11:53.279><c> based</c><00:11:53.880><c> on</c><00:11:54.180><c> on</c><00:11:54.509><c> the</c><00:11:55.139><c> old</c>

00:11:55.309 --> 00:11:55.319 align:start position:0%
slave libraries based on on the old
 

00:11:55.319 --> 00:12:00.410 align:start position:0%
slave libraries based on on the old
native<00:11:55.889><c> call</c><00:11:57.050><c> conventions</c><00:11:58.050><c> from</c><00:11:58.579><c> java</c><00:11:59.579><c> 1.0</c>

00:12:00.410 --> 00:12:00.420 align:start position:0%
native call conventions from java 1.0
 

00:12:00.420 --> 00:12:01.890 align:start position:0%
native call conventions from java 1.0
jdk<00:12:01.050><c> 102</c>

00:12:01.890 --> 00:12:01.900 align:start position:0%
jdk 102
 

00:12:01.900 --> 00:12:07.470 align:start position:0%
jdk 102
or<00:12:01.990><c> John</c><00:12:02.590><c> 11</c><00:12:03.070><c> or</c><00:12:03.820><c> if</c><00:12:04.300><c> you</c><00:12:04.480><c> have</c><00:12:06.030><c> data</c><00:12:07.030><c> in</c><00:12:07.180><c> your</c>

00:12:07.470 --> 00:12:07.480 align:start position:0%
or John 11 or if you have data in your
 

00:12:07.480 --> 00:12:10.080 align:start position:0%
or John 11 or if you have data in your
project<00:12:08.050><c> if</c><00:12:08.140><c> you</c><00:12:08.170><c> have</c><00:12:08.320><c> J</c><00:12:08.530><c> direct</c><00:12:08.800><c> to</c><00:12:09.040><c> code</c><00:12:09.820><c> you</c>

00:12:10.080 --> 00:12:10.090 align:start position:0%
project if you have J direct to code you
 

00:12:10.090 --> 00:12:14.280 align:start position:0%
project if you have J direct to code you
have<00:12:10.210><c> to</c><00:12:11.070><c> basically</c><00:12:12.570><c> convert</c><00:12:13.570><c> those</c><00:12:13.750><c> project</c>

00:12:14.280 --> 00:12:14.290 align:start position:0%
have to basically convert those project
 

00:12:14.290 --> 00:12:17.820 align:start position:0%
have to basically convert those project
to<00:12:14.380><c> use</c><00:12:14.530><c> a</c><00:12:14.770><c> direct</c><00:12:15.040><c> three</c><00:12:16.380><c> there</c><00:12:17.380><c> is</c><00:12:17.500><c> a</c><00:12:17.530><c> talk</c>

00:12:17.820 --> 00:12:17.830 align:start position:0%
to use a direct three there is a talk
 

00:12:17.830 --> 00:12:19.770 align:start position:0%
to use a direct three there is a talk
tomorrow<00:12:18.220><c> about</c><00:12:18.310><c> Michaels</c><00:12:19.120><c> and</c><00:12:19.360><c> jawline</c>

00:12:19.770 --> 00:12:19.780 align:start position:0%
tomorrow about Michaels and jawline
 

00:12:19.780 --> 00:12:22.860 align:start position:0%
tomorrow about Michaels and jawline
death<00:12:20.050><c> and</c><00:12:20.580><c> that</c><00:12:21.580><c> talks</c><00:12:22.390><c> about</c><00:12:22.540><c> how</c><00:12:22.810><c> to</c>

00:12:22.860 --> 00:12:22.870 align:start position:0%
death and that talks about how to
 

00:12:22.870 --> 00:12:26.100 align:start position:0%
death and that talks about how to
convert<00:12:23.200><c> project</c><00:12:23.680><c> page</c><00:12:23.860><c> rectory</c><00:12:24.490><c> or</c><00:12:25.240><c> you</c><00:12:25.990><c> have</c>

00:12:26.100 --> 00:12:26.110 align:start position:0%
convert project page rectory or you have
 

00:12:26.110 --> 00:12:28.470 align:start position:0%
convert project page rectory or you have
to<00:12:26.230><c> convert</c><00:12:26.560><c> your</c><00:12:26.710><c> native</c><00:12:27.520><c> stub</c><00:12:27.790><c> libraries</c><00:12:28.210><c> to</c>

00:12:28.470 --> 00:12:28.480 align:start position:0%
to convert your native stub libraries to
 

00:12:28.480 --> 00:12:34.140 align:start position:0%
to convert your native stub libraries to
use<00:12:28.750><c> J&amp;I</c><00:12:30.570><c> native</c><00:12:31.570><c> calls</c><00:12:31.870><c> and</c><00:12:32.250><c> if</c><00:12:33.250><c> you're</c><00:12:33.880><c> using</c>

00:12:34.140 --> 00:12:34.150 align:start position:0%
use J&amp;I native calls and if you're using
 

00:12:34.150 --> 00:12:38.000 align:start position:0%
use J&amp;I native calls and if you're using
the<00:12:34.330><c> objective-c</c><00:12:34.840><c> to</c><00:12:35.110><c> Java</c><00:12:35.350><c> bridge</c><00:12:35.680><c> for</c>

00:12:38.000 --> 00:12:38.010 align:start position:0%
the objective-c to Java bridge for
 

00:12:38.010 --> 00:12:42.570 align:start position:0%
the objective-c to Java bridge for
wrapping<00:12:39.930><c> objective-c</c><00:12:40.930><c> frameworks</c><00:12:41.830><c> to</c><00:12:41.890><c> Java</c>

00:12:42.570 --> 00:12:42.580 align:start position:0%
wrapping objective-c frameworks to Java
 

00:12:42.580 --> 00:12:44.100 align:start position:0%
wrapping objective-c frameworks to Java
then<00:12:43.150><c> you</c><00:12:43.240><c> have</c><00:12:43.360><c> to</c><00:12:43.480><c> make</c><00:12:43.630><c> sure</c><00:12:43.810><c> that</c><00:12:44.020><c> you</c>

00:12:44.100 --> 00:12:44.110 align:start position:0%
then you have to make sure that you
 

00:12:44.110 --> 00:12:47.070 align:start position:0%
then you have to make sure that you
recompile<00:12:44.440><c> your</c><00:12:44.680><c> wrapper</c><00:12:45.100><c> project</c><00:12:45.760><c> with</c><00:12:46.450><c> the</c>

00:12:47.070 --> 00:12:47.080 align:start position:0%
recompile your wrapper project with the
 

00:12:47.080 --> 00:12:49.590 align:start position:0%
recompile your wrapper project with the
new<00:12:47.890><c> Jane</c><00:12:48.160><c> I</c><00:12:48.310><c> base</c><00:12:48.520><c> bridge</c><00:12:48.940><c> that</c><00:12:49.210><c> comes</c><00:12:49.420><c> with</c>

00:12:49.590 --> 00:12:49.600 align:start position:0%
new Jane I base bridge that comes with
 

00:12:49.600 --> 00:12:56.030 align:start position:0%
new Jane I base bridge that comes with
DP<00:12:49.960><c> for</c><00:12:50.200><c> on</c><00:12:50.470><c> the</c><00:12:51.040><c> CD</c><00:12:53.370><c> before</c><00:12:54.370><c> i</c><00:12:54.640><c> go</c><00:12:54.850><c> into</c>

00:12:56.030 --> 00:12:56.040 align:start position:0%
DP for on the CD before i go into
 

00:12:56.040 --> 00:12:58.100 align:start position:0%
DP for on the CD before i go into
synchronization<00:12:57.040><c> i</c><00:12:57.220><c> wanted</c><00:12:57.550><c> to</c><00:12:57.610><c> mention</c><00:12:57.790><c> that</c>

00:12:58.100 --> 00:12:58.110 align:start position:0%
synchronization i wanted to mention that
 

00:12:58.110 --> 00:13:01.620 align:start position:0%
synchronization i wanted to mention that
java<00:12:59.110><c> threads</c><00:12:59.500><c> are</c><00:12:59.740><c> one-to-one</c><00:13:00.430><c> map</c><00:13:00.700><c> 2</c><00:13:01.060><c> to</c><00:13:01.390><c> P</c>

00:13:01.620 --> 00:13:01.630 align:start position:0%
java threads are one-to-one map 2 to P
 

00:13:01.630 --> 00:13:05.190 align:start position:0%
java threads are one-to-one map 2 to P
threads<00:13:01.990><c> and</c><00:13:02.320><c> therefore</c><00:13:02.710><c> our</c><00:13:04.200><c> also</c>

00:13:05.190 --> 00:13:05.200 align:start position:0%
threads and therefore our also
 

00:13:05.200 --> 00:13:07.590 align:start position:0%
threads and therefore our also
one-to-one<00:13:05.650><c> map</c><00:13:05.890><c> the</c><00:13:06.100><c> kernel</c><00:13:06.490><c> threads</c><00:13:06.640><c> they</c>

00:13:07.590 --> 00:13:07.600 align:start position:0%
one-to-one map the kernel threads they
 

00:13:07.600 --> 00:13:15.690 align:start position:0%
one-to-one map the kernel threads they
are<00:13:07.660><c> fully</c><00:13:07.990><c> preemptive</c><00:13:12.360><c> which</c><00:13:13.360><c> means</c><00:13:14.700><c> we</c>

00:13:15.690 --> 00:13:15.700 align:start position:0%
are fully preemptive which means we
 

00:13:15.700 --> 00:13:19.950 align:start position:0%
are fully preemptive which means we
inside<00:13:16.330><c> the</c><00:13:16.480><c> vm</c><00:13:16.810><c> or</c><00:13:17.140><c> you</c><00:13:18.120><c> we</c><00:13:19.120><c> don't</c><00:13:19.240><c> have</c><00:13:19.420><c> we</c><00:13:19.840><c> do</c>

00:13:19.950 --> 00:13:19.960 align:start position:0%
inside the vm or you we don't have we do
 

00:13:19.960 --> 00:13:21.690 align:start position:0%
inside the vm or you we don't have we do
not<00:13:20.140><c> have</c><00:13:20.200><c> to</c><00:13:20.560><c> deal</c><00:13:20.710><c> with</c><00:13:20.980><c> scheduling</c><00:13:21.310><c> the</c>

00:13:21.690 --> 00:13:21.700 align:start position:0%
not have to deal with scheduling the
 

00:13:21.700 --> 00:13:23.550 align:start position:0%
not have to deal with scheduling the
colonel<00:13:22.030><c> does</c><00:13:22.180><c> that</c><00:13:22.360><c> for</c><00:13:22.600><c> us</c><00:13:22.630><c> we</c><00:13:23.440><c> are</c>

00:13:23.550 --> 00:13:23.560 align:start position:0%
colonel does that for us we are
 

00:13:23.560 --> 00:13:25.320 align:start position:0%
colonel does that for us we are
multiprocessing<00:13:24.370><c> ready</c><00:13:24.730><c> as</c><00:13:24.970><c> we've</c><00:13:25.120><c> seen</c><00:13:25.270><c> in</c>

00:13:25.320 --> 00:13:25.330 align:start position:0%
multiprocessing ready as we've seen in
 

00:13:25.330 --> 00:13:28.500 align:start position:0%
multiprocessing ready as we've seen in
the<00:13:25.450><c> hardware</c><00:13:25.720><c> keynote</c><00:13:26.140><c> this</c><00:13:26.170><c> morning</c><00:13:26.350><c> if</c><00:13:27.510><c> if</c>

00:13:28.500 --> 00:13:28.510 align:start position:0%
the hardware keynote this morning if if
 

00:13:28.510 --> 00:13:31.980 align:start position:0%
the hardware keynote this morning if if
we<00:13:29.320><c> have</c><00:13:29.500><c> something</c><00:13:30.330><c> that</c><00:13:31.330><c> the</c><00:13:31.450><c> criminal</c><00:13:31.840><c> can</c>

00:13:31.980 --> 00:13:31.990 align:start position:0%
we have something that the criminal can
 

00:13:31.990 --> 00:13:35.010 align:start position:0%
we have something that the criminal can
use<00:13:32.200><c> use</c><00:13:32.860><c> to</c><00:13:33.160><c> schedule</c><00:13:33.580><c> more</c><00:13:33.970><c> threads</c><00:13:34.360><c> onto</c>

00:13:35.010 --> 00:13:35.020 align:start position:0%
use use to schedule more threads onto
 

00:13:35.020 --> 00:13:38.070 align:start position:0%
use use to schedule more threads onto
second<00:13:35.560><c> cpu</c><00:13:35.980><c> we</c><00:13:36.610><c> in</c><00:13:37.000><c> the</c><00:13:37.150><c> vm</c><00:13:37.450><c> will</c><00:13:37.660><c> make</c><00:13:37.840><c> use</c><00:13:38.050><c> of</c>

00:13:38.070 --> 00:13:38.080 align:start position:0%
second cpu we in the vm will make use of
 

00:13:38.080 --> 00:13:40.500 align:start position:0%
second cpu we in the vm will make use of
that<00:13:38.260><c> and</c><00:13:38.650><c> therefore</c><00:13:39.430><c> your</c><00:13:39.790><c> applications</c>

00:13:40.500 --> 00:13:40.510 align:start position:0%
that and therefore your applications
 

00:13:40.510 --> 00:13:44.010 align:start position:0%
that and therefore your applications
will<00:13:40.630><c> run</c><00:13:40.870><c> faster</c><00:13:41.080><c> naturally</c><00:13:41.950><c> as</c><00:13:42.430><c> well</c><00:13:43.020><c> we</c>

00:13:44.010 --> 00:13:44.020 align:start position:0%
will run faster naturally as well we
 

00:13:44.020 --> 00:13:45.780 align:start position:0%
will run faster naturally as well we
integrated<00:13:44.500><c> in</c><00:13:44.740><c> that</c><00:13:44.890><c> native</c><00:13:45.400><c> and</c><00:13:45.550><c> java</c>

00:13:45.780 --> 00:13:45.790 align:start position:0%
integrated in that native and java
 

00:13:45.790 --> 00:13:49.880 align:start position:0%
integrated in that native and java
stacks<00:13:46.210><c> for</c><00:13:46.930><c> four</c><00:13:47.350><c> invocation</c><00:13:47.740><c> stacks</c><00:13:48.220><c> into</c>

00:13:49.880 --> 00:13:49.890 align:start position:0%
stacks for four invocation stacks into
 

00:13:49.890 --> 00:13:53.280 align:start position:0%
stacks for four invocation stacks into
into<00:13:50.890><c> one</c><00:13:51.100><c> memory</c><00:13:51.490><c> area</c><00:13:51.910><c> so</c><00:13:52.180><c> you</c><00:13:52.210><c> have</c><00:13:52.540><c> better</c>

00:13:53.280 --> 00:13:53.290 align:start position:0%
into one memory area so you have better
 

00:13:53.290 --> 00:13:55.170 align:start position:0%
into one memory area so you have better
locality<00:13:53.950><c> of</c><00:13:53.980><c> reference</c><00:13:54.070><c> this</c><00:13:54.580><c> is</c><00:13:54.640><c> vm</c>

00:13:55.170 --> 00:13:55.180 align:start position:0%
locality of reference this is vm
 

00:13:55.180 --> 00:13:58.350 align:start position:0%
locality of reference this is vm
internal<00:13:55.840><c> this</c><00:13:56.470><c> is</c><00:13:56.650><c> not</c><00:13:56.800><c> something</c><00:13:57.130><c> you</c><00:13:57.550><c> will</c>

00:13:58.350 --> 00:13:58.360 align:start position:0%
internal this is not something you will
 

00:13:58.360 --> 00:14:00.540 align:start position:0%
internal this is not something you will
notice<00:13:58.660><c> but</c><00:13:59.050><c> this</c><00:13:59.230><c> is</c><00:13:59.350><c> one</c><00:13:59.530><c> of</c><00:13:59.560><c> the</c><00:13:59.800><c> reasons</c>

00:14:00.540 --> 00:14:00.550 align:start position:0%
notice but this is one of the reasons
 

00:14:00.550 --> 00:14:02.520 align:start position:0%
notice but this is one of the reasons
why<00:14:00.700><c> you</c><00:14:00.760><c> have</c><00:14:01.000><c> to</c><00:14:01.150><c> go</c><00:14:01.180><c> to</c><00:14:01.330><c> the</c><00:14:01.600><c> J'naii</c><00:14:01.990><c> for</c>

00:14:02.520 --> 00:14:02.530 align:start position:0%
why you have to go to the J'naii for
 

00:14:02.530 --> 00:14:04.740 align:start position:0%
why you have to go to the J'naii for
example<00:14:02.950><c> as</c><00:14:03.100><c> well</c><00:14:03.280><c> as</c><00:14:03.400><c> the</c><00:14:03.550><c> accurate</c><00:14:03.940><c> garbage</c>

00:14:04.740 --> 00:14:04.750 align:start position:0%
example as well as the accurate garbage
 

00:14:04.750 --> 00:14:07.020 align:start position:0%
example as well as the accurate garbage
collector<00:14:05.140><c> makes</c><00:14:05.590><c> it</c><00:14:05.740><c> necessary</c><00:14:06.130><c> to</c><00:14:06.580><c> go</c><00:14:06.670><c> to</c><00:14:06.730><c> j</c>

00:14:07.020 --> 00:14:07.030 align:start position:0%
collector makes it necessary to go to j
 

00:14:07.030 --> 00:14:07.799 align:start position:0%
collector makes it necessary to go to j
and<00:14:07.060><c> I</c>

00:14:07.799 --> 00:14:07.809 align:start position:0%
and I
 

00:14:07.809 --> 00:14:13.439 align:start position:0%
and I
so<00:14:09.429><c> my</c><00:14:10.429><c> last</c><00:14:10.669><c> slide</c><00:14:10.999><c> is</c><00:14:11.299><c> on</c><00:14:11.449><c> synchronization</c>

00:14:13.439 --> 00:14:13.449 align:start position:0%
so my last slide is on synchronization
 

00:14:13.449 --> 00:14:16.299 align:start position:0%
so my last slide is on synchronization
first<00:14:14.449><c> I</c><00:14:14.600><c> wanted</c><00:14:14.839><c> to</c><00:14:14.959><c> explain</c><00:14:15.319><c> into</c><00:14:15.980><c> when</c><00:14:16.279><c> we</c>

00:14:16.299 --> 00:14:16.309 align:start position:0%
first I wanted to explain into when we
 

00:14:16.309 --> 00:14:18.099 align:start position:0%
first I wanted to explain into when we
talk<00:14:16.639><c> about</c><00:14:16.669><c> synchronization</c><00:14:17.600><c> what</c><00:14:17.839><c> is</c><00:14:18.079><c> a</c>

00:14:18.099 --> 00:14:18.109 align:start position:0%
talk about synchronization what is a
 

00:14:18.109 --> 00:14:20.829 align:start position:0%
talk about synchronization what is a
contended<00:14:18.799><c> case</c><00:14:19.040><c> the</c><00:14:19.699><c> combat</c><00:14:20.059><c> contended</c>

00:14:20.829 --> 00:14:20.839 align:start position:0%
contended case the combat contended
 

00:14:20.839 --> 00:14:23.199 align:start position:0%
contended case the combat contended
cases<00:14:21.259><c> when</c><00:14:21.859><c> you're</c><00:14:22.009><c> executing</c><00:14:22.759><c> in</c><00:14:22.939><c> one</c>

00:14:23.199 --> 00:14:23.209 align:start position:0%
cases when you're executing in one
 

00:14:23.209 --> 00:14:25.749 align:start position:0%
cases when you're executing in one
thread<00:14:23.509><c> a</c><00:14:24.129><c> synchronized</c><00:14:25.129><c> block</c><00:14:25.459><c> below</c>

00:14:25.749 --> 00:14:25.759 align:start position:0%
thread a synchronized block below
 

00:14:25.759 --> 00:14:30.489 align:start position:0%
thread a synchronized block below
synchronized<00:14:27.579><c> method</c><00:14:28.579><c> or</c><00:14:28.759><c> if</c><00:14:29.329><c> you</c><00:14:29.600><c> do</c><00:14:29.839><c> execute</c>

00:14:30.489 --> 00:14:30.499 align:start position:0%
synchronized method or if you do execute
 

00:14:30.499 --> 00:14:31.659 align:start position:0%
synchronized method or if you do execute
the<00:14:30.589><c> synchronized</c><00:14:31.040><c> statement</c><00:14:31.579><c> on</c><00:14:31.639><c> a</c>

00:14:31.659 --> 00:14:31.669 align:start position:0%
the synchronized statement on a
 

00:14:31.669 --> 00:14:35.169 align:start position:0%
the synchronized statement on a
particular<00:14:31.879><c> object</c><00:14:32.649><c> you're</c><00:14:33.649><c> within</c><00:14:34.249><c> inside</c>

00:14:35.169 --> 00:14:35.179 align:start position:0%
particular object you're within inside
 

00:14:35.179 --> 00:14:37.179 align:start position:0%
particular object you're within inside
that<00:14:35.389><c> call</c><00:14:35.689><c> inside</c><00:14:36.169><c> that</c><00:14:36.319><c> block</c><00:14:36.589><c> and</c><00:14:36.889><c> a</c>

00:14:37.179 --> 00:14:37.189 align:start position:0%
that call inside that block and a
 

00:14:37.189 --> 00:14:39.509 align:start position:0%
that call inside that block and a
different<00:14:37.579><c> thread</c><00:14:37.850><c> comes</c><00:14:38.660><c> in</c><00:14:38.899><c> and</c><00:14:39.139><c> tries</c><00:14:39.319><c> to</c>

00:14:39.509 --> 00:14:39.519 align:start position:0%
different thread comes in and tries to
 

00:14:39.519 --> 00:14:43.119 align:start position:0%
different thread comes in and tries to
synchronize<00:14:40.749><c> synchronize</c><00:14:41.749><c> blog</c><00:14:42.109><c> on</c><00:14:42.350><c> the</c><00:14:42.410><c> same</c>

00:14:43.119 --> 00:14:43.129 align:start position:0%
synchronize synchronize blog on the same
 

00:14:43.129 --> 00:14:48.189 align:start position:0%
synchronize synchronize blog on the same
object<00:14:43.929><c> so</c><00:14:44.929><c> at</c><00:14:45.259><c> that</c><00:14:45.980><c> time</c><00:14:46.480><c> it</c><00:14:47.480><c> is</c><00:14:47.720><c> called</c><00:14:47.989><c> that</c>

00:14:48.189 --> 00:14:48.199 align:start position:0%
object so at that time it is called that
 

00:14:48.199 --> 00:14:51.569 align:start position:0%
object so at that time it is called that
you<00:14:48.290><c> have</c><00:14:48.439><c> contention</c><00:14:49.100><c> on</c><00:14:49.189><c> that</c><00:14:49.369><c> object</c><00:14:49.609><c> and</c>

00:14:51.569 --> 00:14:51.579 align:start position:0%
you have contention on that object and
 

00:14:51.579 --> 00:14:54.489 align:start position:0%
you have contention on that object and
the<00:14:52.579><c> on</c><00:14:52.699><c> contended</c><00:14:53.239><c> case</c><00:14:53.449><c> therefore</c><00:14:54.109><c> is</c><00:14:54.259><c> if</c>

00:14:54.489 --> 00:14:54.499 align:start position:0%
the on contended case therefore is if
 

00:14:54.499 --> 00:14:58.210 align:start position:0%
the on contended case therefore is if
you<00:14:55.069><c> have</c><00:14:55.480><c> one</c><00:14:56.480><c> thread</c><00:14:56.809><c> go</c><00:14:57.019><c> in</c><00:14:57.230><c> synchronous</c>

00:14:58.210 --> 00:14:58.220 align:start position:0%
you have one thread go in synchronous
 

00:14:58.220 --> 00:15:00.150 align:start position:0%
you have one thread go in synchronous
synchronize<00:14:59.149><c> in</c><00:14:59.269><c> a</c><00:14:59.329><c> particular</c><00:14:59.809><c> object</c>

00:15:00.150 --> 00:15:00.160 align:start position:0%
synchronize in a particular object
 

00:15:00.160 --> 00:15:02.739 align:start position:0%
synchronize in a particular object
execute<00:15:01.160><c> the</c><00:15:01.309><c> whole</c><00:15:01.459><c> block</c><00:15:01.759><c> and</c><00:15:02.089><c> exit</c><00:15:02.720><c> the</c>

00:15:02.739 --> 00:15:02.749 align:start position:0%
execute the whole block and exit the
 

00:15:02.749 --> 00:15:04.960 align:start position:0%
execute the whole block and exit the
synchronized<00:15:03.379><c> block</c><00:15:03.739><c> without</c><00:15:04.279><c> any</c><00:15:04.759><c> other</c>

00:15:04.960 --> 00:15:04.970 align:start position:0%
synchronized block without any other
 

00:15:04.970 --> 00:15:06.609 align:start position:0%
synchronized block without any other
threat<00:15:05.299><c> trying</c><00:15:05.689><c> to</c><00:15:05.809><c> synchronize</c><00:15:06.230><c> in</c><00:15:06.379><c> the</c><00:15:06.439><c> same</c>

00:15:06.609 --> 00:15:06.619 align:start position:0%
threat trying to synchronize in the same
 

00:15:06.619 --> 00:15:09.340 align:start position:0%
threat trying to synchronize in the same
object<00:15:07.660><c> studies</c><00:15:08.660><c> have</c><00:15:08.809><c> shown</c><00:15:08.899><c> that</c><00:15:09.079><c> the</c>

00:15:09.340 --> 00:15:09.350 align:start position:0%
object studies have shown that the
 

00:15:09.350 --> 00:15:12.220 align:start position:0%
object studies have shown that the
contented<00:15:09.769><c> case</c><00:15:09.980><c> is</c><00:15:10.160><c> very</c><00:15:10.369><c> rare</c><00:15:10.759><c> in</c><00:15:10.999><c> those</c><00:15:11.929><c> in</c>

00:15:12.220 --> 00:15:12.230 align:start position:0%
contented case is very rare in those in
 

00:15:12.230 --> 00:15:15.429 align:start position:0%
contented case is very rare in those in
those<00:15:12.339><c> instances</c><00:15:13.339><c> we</c><00:15:13.699><c> use</c><00:15:14.439><c> pthread</c>

00:15:15.429 --> 00:15:15.439 align:start position:0%
those instances we use pthread
 

00:15:15.439 --> 00:15:17.979 align:start position:0%
those instances we use pthread
primitives<00:15:15.980><c> and</c><00:15:16.220><c> Colonel</c><00:15:16.850><c> primitives</c><00:15:17.299><c> to</c>

00:15:17.979 --> 00:15:17.989 align:start position:0%
primitives and Colonel primitives to
 

00:15:17.989 --> 00:15:20.529 align:start position:0%
primitives and Colonel primitives to
make<00:15:18.919><c> sure</c><00:15:19.129><c> that</c><00:15:19.309><c> we</c><00:15:19.429><c> do</c><00:15:19.579><c> right</c><00:15:19.789><c> we</c><00:15:20.209><c> do</c><00:15:20.359><c> the</c>

00:15:20.529 --> 00:15:20.539 align:start position:0%
make sure that we do right we do the
 

00:15:20.539 --> 00:15:22.150 align:start position:0%
make sure that we do right we do the
right<00:15:20.689><c> thing</c><00:15:20.929><c> or</c><00:15:21.139><c> blocking</c><00:15:21.589><c> the</c><00:15:21.709><c> thread</c><00:15:21.949><c> so</c><00:15:22.100><c> it</c>

00:15:22.150 --> 00:15:22.160 align:start position:0%
right thing or blocking the thread so it
 

00:15:22.160 --> 00:15:25.059 align:start position:0%
right thing or blocking the thread so it
doesn't<00:15:22.459><c> use</c><00:15:23.059><c> any</c><00:15:23.329><c> CPU</c><00:15:24.019><c> cycles</c><00:15:24.289><c> from</c><00:15:24.649><c> then</c><00:15:24.889><c> on</c>

00:15:25.059 --> 00:15:25.069 align:start position:0%
doesn't use any CPU cycles from then on
 

00:15:25.069 --> 00:15:27.999 align:start position:0%
doesn't use any CPU cycles from then on
but<00:15:25.939><c> what</c><00:15:26.779><c> is</c><00:15:26.899><c> much</c><00:15:27.109><c> more</c><00:15:27.139><c> important</c><00:15:27.859><c> is</c><00:15:27.980><c> that</c>

00:15:27.999 --> 00:15:28.009 align:start position:0%
but what is much more important is that
 

00:15:28.009 --> 00:15:30.039 align:start position:0%
but what is much more important is that
we<00:15:28.279><c> have</c><00:15:28.429><c> very</c><00:15:28.819><c> fast</c><00:15:29.119><c> and</c><00:15:29.329><c> conversation</c><00:15:29.899><c> and</c>

00:15:30.039 --> 00:15:30.049 align:start position:0%
we have very fast and conversation and
 

00:15:30.049 --> 00:15:31.960 align:start position:0%
we have very fast and conversation and
young<00:15:30.199><c> contended</c><00:15:30.709><c> case</c><00:15:30.889><c> what</c><00:15:31.730><c> you</c><00:15:31.819><c> have</c>

00:15:31.960 --> 00:15:31.970 align:start position:0%
young contended case what you have
 

00:15:31.970 --> 00:15:34.239 align:start position:0%
young contended case what you have
basically<00:15:32.329><c> is</c><00:15:32.449><c> the</c><00:15:32.569><c> constant</c><00:15:33.529><c> time</c><00:15:33.739><c> overhead</c>

00:15:34.239 --> 00:15:34.249 align:start position:0%
basically is the constant time overhead
 

00:15:34.249 --> 00:15:36.159 align:start position:0%
basically is the constant time overhead
you<00:15:34.879><c> have</c><00:15:34.999><c> a</c><00:15:35.059><c> couple</c><00:15:35.389><c> of</c><00:15:35.480><c> instructions</c><00:15:36.049><c> to</c>

00:15:36.159 --> 00:15:36.169 align:start position:0%
you have a couple of instructions to
 

00:15:36.169 --> 00:15:38.639 align:start position:0%
you have a couple of instructions to
make<00:15:36.289><c> sure</c><00:15:36.589><c> that</c><00:15:37.129><c> you</c><00:15:37.249><c> set</c><00:15:37.489><c> up</c><00:15:37.639><c> that</c>

00:15:38.639 --> 00:15:38.649 align:start position:0%
make sure that you set up that
 

00:15:38.649 --> 00:15:41.590 align:start position:0%
make sure that you set up that
synchronized<00:15:39.649><c> blocks</c><00:15:39.980><c> we</c><00:15:40.730><c> do</c><00:15:40.910><c> not</c><00:15:41.089><c> allocate</c>

00:15:41.590 --> 00:15:41.600 align:start position:0%
synchronized blocks we do not allocate
 

00:15:41.600 --> 00:15:43.619 align:start position:0%
synchronized blocks we do not allocate
memory<00:15:41.869><c> on</c><00:15:42.259><c> the</c><00:15:42.439><c> heap</c><00:15:42.470><c> or</c><00:15:42.829><c> anything</c><00:15:43.189><c> it's</c><00:15:43.369><c> all</c>

00:15:43.619 --> 00:15:43.629 align:start position:0%
memory on the heap or anything it's all
 

00:15:43.629 --> 00:15:47.679 align:start position:0%
memory on the heap or anything it's all
stack<00:15:44.629><c> allocated</c><00:15:45.199><c> for</c><00:15:45.559><c> for</c><00:15:46.279><c> that</c><00:15:46.399><c> memory</c><00:15:47.329><c> are</c>

00:15:47.679 --> 00:15:47.689 align:start position:0%
stack allocated for for that memory are
 

00:15:47.689 --> 00:15:49.509 align:start position:0%
stack allocated for for that memory are
basically<00:15:48.259><c> for</c><00:15:48.470><c> that</c><00:15:48.589><c> for</c><00:15:48.949><c> that</c><00:15:48.980><c> synchronized</c>

00:15:49.509 --> 00:15:49.519 align:start position:0%
basically for that for that synchronized
 

00:15:49.519 --> 00:15:52.269 align:start position:0%
basically for that for that synchronized
block<00:15:49.789><c> we</c><00:15:49.970><c> allocated</c><00:15:50.569><c> on</c><00:15:50.809><c> in</c><00:15:51.160><c> inside</c><00:15:52.160><c> the</c>

00:15:52.269 --> 00:15:52.279 align:start position:0%
block we allocated on in inside the
 

00:15:52.279 --> 00:15:57.579 align:start position:0%
block we allocated on in inside the
invocation<00:15:52.669><c> of</c><00:15:52.910><c> that</c><00:15:53.119><c> stack</c><00:15:53.449><c> and</c><00:15:56.589><c> most</c>

00:15:57.579 --> 00:15:57.589 align:start position:0%
invocation of that stack and most
 

00:15:57.589 --> 00:15:59.529 align:start position:0%
invocation of that stack and most
important<00:15:58.160><c> of</c><00:15:58.189><c> all</c><00:15:58.339><c> we</c><00:15:58.519><c> don't</c><00:15:58.639><c> use</c><00:15:58.939><c> any</c><00:15:59.179><c> OS</c>

00:15:59.529 --> 00:15:59.539 align:start position:0%
important of all we don't use any OS
 

00:15:59.539 --> 00:16:01.869 align:start position:0%
important of all we don't use any OS
resources<00:16:00.289><c> so</c><00:16:00.799><c> we</c><00:16:00.919><c> don't</c><00:16:01.100><c> use</c><00:16:01.189><c> any</c><00:16:01.489><c> colonel</c>

00:16:01.869 --> 00:16:01.879 align:start position:0%
resources so we don't use any colonel
 

00:16:01.879 --> 00:16:03.609 align:start position:0%
resources so we don't use any colonel
resources<00:16:02.480><c> you</c><00:16:02.600><c> don't</c><00:16:02.779><c> make</c><00:16:02.899><c> any</c><00:16:03.109><c> pthread</c>

00:16:03.609 --> 00:16:03.619 align:start position:0%
resources you don't make any pthread
 

00:16:03.619 --> 00:16:05.650 align:start position:0%
resources you don't make any pthread
calls<00:16:03.889><c> and</c><00:16:04.100><c> don't</c><00:16:04.220><c> make</c><00:16:04.339><c> any</c><00:16:04.419><c> Colonel</c><00:16:05.419><c> calls</c>

00:16:05.650 --> 00:16:05.660 align:start position:0%
calls and don't make any Colonel calls
 

00:16:05.660 --> 00:16:09.249 align:start position:0%
calls and don't make any Colonel calls
which<00:16:07.059><c> which</c><00:16:08.059><c> is</c><00:16:08.089><c> important</c><00:16:08.779><c> since</c><00:16:08.899><c> we</c><00:16:09.139><c> want</c>

00:16:09.249 --> 00:16:09.259 align:start position:0%
which which is important since we want
 

00:16:09.259 --> 00:16:12.909 align:start position:0%
which which is important since we want
this<00:16:09.470><c> constant</c><00:16:09.980><c> time</c><00:16:10.129><c> overhead</c><00:16:10.959><c> so</c><00:16:11.959><c> I</c><00:16:12.289><c> will</c>

00:16:12.909 --> 00:16:12.919 align:start position:0%
this constant time overhead so I will
 

00:16:12.919 --> 00:16:15.689 align:start position:0%
this constant time overhead so I will
handle<00:16:13.699><c> podium</c><00:16:14.059><c> back</c><00:16:14.239><c> to</c><00:16:14.419><c> Jim</c><00:16:14.600><c> to</c><00:16:14.929><c> talk</c><00:16:15.109><c> about</c>

00:16:15.689 --> 00:16:15.699 align:start position:0%
handle podium back to Jim to talk about
 

00:16:15.699 --> 00:16:25.559 align:start position:0%
handle podium back to Jim to talk about
code<00:16:15.819><c> execution</c><00:16:16.299><c> I</c><00:16:23.819><c> want</c><00:16:24.819><c> to</c><00:16:24.879><c> try</c><00:16:24.970><c> to</c><00:16:24.999><c> focus</c><00:16:25.239><c> on</c>

00:16:25.559 --> 00:16:25.569 align:start position:0%
code execution I want to try to focus on
 

00:16:25.569 --> 00:16:30.299 align:start position:0%
code execution I want to try to focus on
on<00:16:26.669><c> on</c><00:16:28.259><c> basically</c><00:16:29.259><c> what</c><00:16:29.499><c> we've</c><00:16:29.649><c> done</c><00:16:29.829><c> to</c>

00:16:30.299 --> 00:16:30.309 align:start position:0%
on on basically what we've done to
 

00:16:30.309 --> 00:16:32.220 align:start position:0%
on on basically what we've done to
improve<00:16:30.910><c> performance</c><00:16:31.509><c> in</c><00:16:31.899><c> the</c><00:16:31.989><c> echo</c>

00:16:32.220 --> 00:16:32.230 align:start position:0%
improve performance in the echo
 

00:16:32.230 --> 00:16:34.169 align:start position:0%
improve performance in the echo
generation<00:16:32.769><c> but</c><00:16:33.609><c> I</c><00:16:33.639><c> want</c><00:16:33.790><c> to</c><00:16:33.850><c> give</c><00:16:33.939><c> you</c><00:16:33.970><c> some</c>

00:16:34.169 --> 00:16:34.179 align:start position:0%
generation but I want to give you some
 

00:16:34.179 --> 00:16:35.249 align:start position:0%
generation but I want to give you some
background<00:16:34.209><c> so</c><00:16:34.720><c> we're</c><00:16:34.809><c> going</c><00:16:34.899><c> to</c><00:16:34.989><c> go</c><00:16:35.079><c> in</c><00:16:35.199><c> a</c>

00:16:35.249 --> 00:16:35.259 align:start position:0%
background so we're going to go in a
 

00:16:35.259 --> 00:16:36.329 align:start position:0%
background so we're going to go in a
little<00:16:35.350><c> bit</c><00:16:35.499><c> of</c><00:16:35.589><c> history</c><00:16:35.799><c> first</c><00:16:36.069><c> and</c><00:16:36.249><c> then</c>

00:16:36.329 --> 00:16:36.339 align:start position:0%
little bit of history first and then
 

00:16:36.339 --> 00:16:38.249 align:start position:0%
little bit of history first and then
talk<00:16:36.369><c> about</c><00:16:36.519><c> optimization</c><00:16:37.179><c> and</c><00:16:37.509><c> then</c><00:16:38.079><c> at</c><00:16:38.230><c> the</c>

00:16:38.249 --> 00:16:38.259 align:start position:0%
talk about optimization and then at the
 

00:16:38.259 --> 00:16:40.259 align:start position:0%
talk about optimization and then at the
end<00:16:38.350><c> oh</c><00:16:38.619><c> I</c><00:16:38.799><c> have</c><00:16:38.980><c> a</c><00:16:39.009><c> pin</c><00:16:39.339><c> slides</c><00:16:39.669><c> which</c><00:16:40.059><c> are</c>

00:16:40.259 --> 00:16:40.269 align:start position:0%
end oh I have a pin slides which are
 

00:16:40.269 --> 00:16:43.470 align:start position:0%
end oh I have a pin slides which are
what<00:16:41.019><c> I'm</c><00:16:41.199><c> calling</c><00:16:41.439><c> a</c><00:16:41.759><c> code</c><00:16:42.759><c> generator</c><00:16:43.089><c> hints</c>

00:16:43.470 --> 00:16:43.480 align:start position:0%
what I'm calling a code generator hints
 

00:16:43.480 --> 00:16:45.269 align:start position:0%
what I'm calling a code generator hints
which<00:16:44.199><c> are</c><00:16:44.379><c> things</c><00:16:44.619><c> that</c><00:16:44.709><c> you</c><00:16:44.859><c> can</c><00:16:45.009><c> do</c><00:16:45.100><c> in</c><00:16:45.249><c> your</c>

00:16:45.269 --> 00:16:45.279 align:start position:0%
which are things that you can do in your
 

00:16:45.279 --> 00:16:47.909 align:start position:0%
which are things that you can do in your
code<00:16:45.609><c> which</c><00:16:45.939><c> the</c><00:16:46.509><c> code</c><00:16:46.899><c> generator</c><00:16:47.319><c> can</c><00:16:47.589><c> look</c>

00:16:47.909 --> 00:16:47.919 align:start position:0%
code which the code generator can look
 

00:16:47.919 --> 00:16:49.470 align:start position:0%
code which the code generator can look
at<00:16:48.100><c> and</c><00:16:48.249><c> say</c><00:16:48.429><c> I</c><00:16:48.459><c> hope</c><00:16:48.669><c> this</c><00:16:48.939><c> means</c><00:16:49.119><c> i</c><00:16:49.269><c> can</c><00:16:49.419><c> do</c>

00:16:49.470 --> 00:16:49.480 align:start position:0%
at and say I hope this means i can do
 

00:16:49.480 --> 00:16:51.479 align:start position:0%
at and say I hope this means i can do
this<00:16:49.629><c> optimization</c><00:16:50.169><c> and</c><00:16:50.470><c> hopefully</c><00:16:51.309><c> you</c><00:16:51.399><c> can</c>

00:16:51.479 --> 00:16:51.489 align:start position:0%
this optimization and hopefully you can
 

00:16:51.489 --> 00:16:52.859 align:start position:0%
this optimization and hopefully you can
pick<00:16:51.639><c> up</c><00:16:51.730><c> a</c><00:16:51.850><c> few</c><00:16:51.970><c> of</c><00:16:52.089><c> those</c><00:16:52.179><c> things</c><00:16:52.389><c> and</c><00:16:52.629><c> put</c><00:16:52.809><c> it</c>

00:16:52.859 --> 00:16:52.869 align:start position:0%
pick up a few of those things and put it
 

00:16:52.869 --> 00:16:57.389 align:start position:0%
pick up a few of those things and put it
in<00:16:52.959><c> your</c><00:16:52.989><c> own</c><00:16:53.139><c> code</c><00:16:54.899><c> so</c><00:16:55.899><c> i</c><00:16:56.199><c> would</c><00:16:57.100><c> say</c><00:16:57.220><c> at</c><00:16:57.309><c> this</c>

00:16:57.389 --> 00:16:57.399 align:start position:0%
in your own code so i would say at this
 

00:16:57.399 --> 00:16:59.039 align:start position:0%
in your own code so i would say at this
liner<00:16:57.699><c> i</c><00:16:57.879><c> guess</c><00:16:58.059><c> hopefully</c><00:16:58.269><c> most</c><00:16:58.660><c> of</c><00:16:58.809><c> you</c><00:16:58.869><c> to</c>

00:16:59.039 --> 00:16:59.049 align:start position:0%
liner i guess hopefully most of you to
 

00:16:59.049 --> 00:17:00.960 align:start position:0%
liner i guess hopefully most of you to
say<00:16:59.199><c> at</c><00:16:59.319><c> this</c><00:16:59.410><c> point</c><00:16:59.499><c> the</c><00:16:59.739><c> jab</c><00:16:59.949><c> is</c><00:16:59.980><c> matured</c>

00:17:00.960 --> 00:17:00.970 align:start position:0%
say at this point the jab is matured
 

00:17:00.970 --> 00:17:05.819 align:start position:0%
say at this point the jab is matured
fairly<00:17:01.899><c> well</c><00:17:02.459><c> the</c><00:17:03.459><c> first</c><00:17:04.470><c> versions</c><00:17:05.470><c> of</c><00:17:05.620><c> the</c>

00:17:05.819 --> 00:17:05.829 align:start position:0%
fairly well the first versions of the
 

00:17:05.829 --> 00:17:08.100 align:start position:0%
fairly well the first versions of the
java<00:17:06.039><c> vm</c><00:17:06.279><c> the</c><00:17:06.399><c> chemo</c><00:17:06.850><c> were</c><00:17:07.449><c> simple</c>

00:17:08.100 --> 00:17:08.110 align:start position:0%
java vm the chemo were simple
 

00:17:08.110 --> 00:17:11.789 align:start position:0%
java vm the chemo were simple
interpreters<00:17:08.679><c> that</c><00:17:08.949><c> took</c><00:17:09.699><c> bytecodes</c><00:17:10.799><c> take</c>

00:17:11.789 --> 00:17:11.799 align:start position:0%
interpreters that took bytecodes take
 

00:17:11.799 --> 00:17:13.710 align:start position:0%
interpreters that took bytecodes take
the<00:17:11.919><c> opcode</c><00:17:12.490><c> off</c><00:17:12.639><c> the</c><00:17:12.760><c> bike</c><00:17:12.939><c> code</c><00:17:13.209><c> go</c><00:17:13.510><c> through</c>

00:17:13.710 --> 00:17:13.720 align:start position:0%
the opcode off the bike code go through
 

00:17:13.720 --> 00:17:16.889 align:start position:0%
the opcode off the bike code go through
this<00:17:13.809><c> humongous</c><00:17:14.589><c> T</c><00:17:15.189><c> switch</c><00:17:15.459><c> statement</c><00:17:15.939><c> figure</c>

00:17:16.889 --> 00:17:16.899 align:start position:0%
this humongous T switch statement figure
 

00:17:16.899 --> 00:17:18.509 align:start position:0%
this humongous T switch statement figure
out<00:17:16.990><c> what's</c><00:17:17.169><c> in</c><00:17:17.319><c> strings</c><00:17:17.949><c> that</c><00:17:18.039><c> needed</c><00:17:18.309><c> to</c><00:17:18.399><c> do</c>

00:17:18.509 --> 00:17:18.519 align:start position:0%
out what's in strings that needed to do
 

00:17:18.519 --> 00:17:21.059 align:start position:0%
out what's in strings that needed to do
to<00:17:18.699><c> implement</c><00:17:19.029><c> the</c><00:17:19.089><c> instruction</c><00:17:19.659><c> and</c><00:17:20.069><c> go</c>

00:17:21.059 --> 00:17:21.069 align:start position:0%
to implement the instruction and go
 

00:17:21.069 --> 00:17:23.699 align:start position:0%
to implement the instruction and go
through<00:17:21.250><c> this</c><00:17:21.339><c> process</c><00:17:21.579><c> one</c><00:17:22.480><c> opcode</c><00:17:23.439><c> at</c><00:17:23.589><c> a</c>

00:17:23.699 --> 00:17:23.709 align:start position:0%
through this process one opcode at a
 

00:17:23.709 --> 00:17:26.759 align:start position:0%
through this process one opcode at a
time<00:17:24.809><c> and</c><00:17:25.809><c> that</c><00:17:26.019><c> worked</c><00:17:26.169><c> out</c><00:17:26.350><c> you</c><00:17:26.649><c> know</c>

00:17:26.759 --> 00:17:26.769 align:start position:0%
time and that worked out you know
 

00:17:26.769 --> 00:17:29.789 align:start position:0%
time and that worked out you know
initially<00:17:27.010><c> got</c><00:17:27.429><c> you</c><00:17:27.610><c> interested</c><00:17:27.819><c> in</c><00:17:28.120><c> Java</c><00:17:28.799><c> you</c>

00:17:29.789 --> 00:17:29.799 align:start position:0%
initially got you interested in Java you
 

00:17:29.799 --> 00:17:31.200 align:start position:0%
initially got you interested in Java you
know<00:17:29.950><c> because</c><00:17:30.250><c> it</c><00:17:30.370><c> was</c><00:17:30.460><c> actually</c><00:17:30.789><c> a</c><00:17:30.820><c> real</c>

00:17:31.200 --> 00:17:31.210 align:start position:0%
know because it was actually a real
 

00:17:31.210 --> 00:17:33.000 align:start position:0%
know because it was actually a real
thing<00:17:31.539><c> but</c><00:17:31.960><c> it</c><00:17:32.080><c> turned</c><00:17:32.289><c> out</c><00:17:32.350><c> to</c><00:17:32.409><c> be</c><00:17:32.500><c> very</c><00:17:32.529><c> slow</c>

00:17:33.000 --> 00:17:33.010 align:start position:0%
thing but it turned out to be very slow
 

00:17:33.010 --> 00:17:35.220 align:start position:0%
thing but it turned out to be very slow
performer<00:17:33.700><c> and</c><00:17:33.880><c> so</c><00:17:34.630><c> once</c><00:17:34.809><c> the</c><00:17:34.990><c> initial</c>

00:17:35.220 --> 00:17:35.230 align:start position:0%
performer and so once the initial
 

00:17:35.230 --> 00:17:38.159 align:start position:0%
performer and so once the initial
interest<00:17:35.620><c> the</c><00:17:35.799><c> Java</c><00:17:36.389><c> sort</c><00:17:37.389><c> of</c><00:17:37.450><c> passed</c><00:17:37.659><c> we</c><00:17:38.019><c> had</c>

00:17:38.159 --> 00:17:38.169 align:start position:0%
interest the Java sort of passed we had
 

00:17:38.169 --> 00:17:39.870 align:start position:0%
interest the Java sort of passed we had
to<00:17:38.230><c> find</c><00:17:38.409><c> different</c><00:17:38.769><c> ways</c><00:17:38.799><c> of</c><00:17:39.190><c> speeding</c><00:17:39.700><c> up</c>

00:17:39.870 --> 00:17:39.880 align:start position:0%
to find different ways of speeding up
 

00:17:39.880 --> 00:17:42.090 align:start position:0%
to find different ways of speeding up
the<00:17:40.029><c> performance</c><00:17:40.570><c> so</c><00:17:41.380><c> the</c><00:17:41.500><c> next</c><00:17:41.649><c> generation</c>

00:17:42.090 --> 00:17:42.100 align:start position:0%
the performance so the next generation
 

00:17:42.100 --> 00:17:43.919 align:start position:0%
the performance so the next generation
of<00:17:42.159><c> interpreters</c><00:17:42.700><c> usually</c><00:17:43.360><c> ended</c><00:17:43.539><c> up</c><00:17:43.659><c> being</c><00:17:43.840><c> a</c>

00:17:43.919 --> 00:17:43.929 align:start position:0%
of interpreters usually ended up being a
 

00:17:43.929 --> 00:17:48.360 align:start position:0%
of interpreters usually ended up being a
hand<00:17:44.169><c> coded</c><00:17:45.120><c> assembler</c><00:17:46.260><c> program</c><00:17:47.260><c> so</c><00:17:48.100><c> that</c><00:17:48.130><c> it</c>

00:17:48.360 --> 00:17:48.370 align:start position:0%
hand coded assembler program so that it
 

00:17:48.370 --> 00:17:49.620 align:start position:0%
hand coded assembler program so that it
was<00:17:48.460><c> implemented</c><00:17:49.090><c> in</c><00:17:49.179><c> the</c><00:17:49.299><c> native</c><00:17:49.600><c> language</c>

00:17:49.620 --> 00:17:49.630 align:start position:0%
was implemented in the native language
 

00:17:49.630 --> 00:17:52.080 align:start position:0%
was implemented in the native language
of<00:17:50.139><c> the</c><00:17:50.320><c> platform</c><00:17:50.529><c> and</c><00:17:51.039><c> it</c><00:17:51.639><c> would</c><00:17:51.730><c> go</c><00:17:51.880><c> through</c>

00:17:52.080 --> 00:17:52.090 align:start position:0%
of the platform and it would go through
 

00:17:52.090 --> 00:17:53.519 align:start position:0%
of the platform and it would go through
the<00:17:52.240><c> bike</c><00:17:52.389><c> codes</c><00:17:52.659><c> and</c><00:17:52.899><c> interpret</c><00:17:53.289><c> the</c><00:17:53.380><c> bike</c>

00:17:53.519 --> 00:17:53.529 align:start position:0%
the bike codes and interpret the bike
 

00:17:53.529 --> 00:17:56.519 align:start position:0%
the bike codes and interpret the bike
codes<00:17:53.799><c> a</c><00:17:54.070><c> little</c><00:17:54.870><c> bit</c><00:17:55.870><c> faster</c><00:17:56.260><c> a</c><00:17:56.289><c> little</c><00:17:56.350><c> bit</c>

00:17:56.519 --> 00:17:56.529 align:start position:0%
codes a little bit faster a little bit
 

00:17:56.529 --> 00:17:57.720 align:start position:0%
codes a little bit faster a little bit
more<00:17:56.649><c> optimal</c><00:17:57.070><c> way</c><00:17:57.220><c> that</c><00:17:57.460><c> would</c><00:17:57.549><c> been</c>

00:17:57.720 --> 00:17:57.730 align:start position:0%
more optimal way that would been
 

00:17:57.730 --> 00:17:59.310 align:start position:0%
more optimal way that would been
generated<00:17:58.149><c> by</c><00:17:58.240><c> the</c><00:17:58.299><c> original</c><00:17:58.510><c> interpreters</c>

00:17:59.310 --> 00:17:59.320 align:start position:0%
generated by the original interpreters
 

00:17:59.320 --> 00:18:01.529 align:start position:0%
generated by the original interpreters
and<00:17:59.500><c> it's</c><00:17:59.799><c> that</c><00:17:59.980><c> way</c><00:18:00.130><c> we</c><00:18:00.309><c> got</c><00:18:01.000><c> you</c><00:18:01.240><c> know</c><00:18:01.360><c> maybe</c>

00:18:01.529 --> 00:18:01.539 align:start position:0%
and it's that way we got you know maybe
 

00:18:01.539 --> 00:18:02.759 align:start position:0%
and it's that way we got you know maybe
two<00:18:01.690><c> or</c><00:18:01.720><c> three</c><00:18:01.840><c> times</c><00:18:02.110><c> improvement</c><00:18:02.440><c> in</c>

00:18:02.759 --> 00:18:02.769 align:start position:0%
two or three times improvement in
 

00:18:02.769 --> 00:18:05.970 align:start position:0%
two or three times improvement in
performance<00:18:03.870><c> the</c><00:18:04.870><c> third</c><00:18:05.080><c> generation</c><00:18:05.260><c> which</c>

00:18:05.970 --> 00:18:05.980 align:start position:0%
performance the third generation which
 

00:18:05.980 --> 00:18:08.549 align:start position:0%
performance the third generation which
hotspot<00:18:06.850><c> is</c><00:18:07.029><c> I</c><00:18:07.240><c> would</c><00:18:07.480><c> classify</c><00:18:07.870><c> hotspot</c><00:18:08.409><c> is</c>

00:18:08.549 --> 00:18:08.559 align:start position:0%
hotspot is I would classify hotspot is
 

00:18:08.559 --> 00:18:10.590 align:start position:0%
hotspot is I would classify hotspot is
being<00:18:09.130><c> for</c><00:18:09.309><c> generation</c><00:18:09.669><c> is</c><00:18:09.789><c> that</c><00:18:10.149><c> we</c><00:18:10.419><c> found</c>

00:18:10.590 --> 00:18:10.600 align:start position:0%
being for generation is that we found
 

00:18:10.600 --> 00:18:14.310 align:start position:0%
being for generation is that we found
that<00:18:10.809><c> the</c><00:18:11.529><c> native</c><00:18:12.340><c> code</c><00:18:12.899><c> that</c><00:18:13.899><c> we</c><00:18:13.990><c> created</c>

00:18:14.310 --> 00:18:14.320 align:start position:0%
that the native code that we created
 

00:18:14.320 --> 00:18:16.259 align:start position:0%
that the native code that we created
with<00:18:14.559><c> the</c><00:18:14.590><c> assembler</c><00:18:15.100><c> was</c><00:18:15.700><c> hard</c><00:18:15.940><c> to</c><00:18:16.059><c> manage</c>

00:18:16.259 --> 00:18:16.269 align:start position:0%
with the assembler was hard to manage
 

00:18:16.269 --> 00:18:18.360 align:start position:0%
with the assembler was hard to manage
that<00:18:16.809><c> the</c><00:18:17.049><c> assembler</c><00:18:17.380><c> code</c><00:18:17.649><c> is</c><00:18:17.830><c> always</c><00:18:18.190><c> hard</c>

00:18:18.360 --> 00:18:18.370 align:start position:0%
that the assembler code is always hard
 

00:18:18.370 --> 00:18:20.129 align:start position:0%
that the assembler code is always hard
to<00:18:18.429><c> management</c><00:18:18.970><c> that's</c><00:18:19.360><c> why</c><00:18:19.539><c> we</c><00:18:19.659><c> program</c><00:18:20.019><c> in</c>

00:18:20.129 --> 00:18:20.139 align:start position:0%
to management that's why we program in
 

00:18:20.139 --> 00:18:23.129 align:start position:0%
to management that's why we program in
higher-level<00:18:20.320><c> languages</c><00:18:20.889><c> to</c><00:18:21.159><c> begin</c><00:18:21.399><c> with</c><00:18:22.139><c> so</c>

00:18:23.129 --> 00:18:23.139 align:start position:0%
higher-level languages to begin with so
 

00:18:23.139 --> 00:18:25.320 align:start position:0%
higher-level languages to begin with so
a<00:18:23.500><c> lot</c><00:18:23.740><c> of</c><00:18:23.769><c> these</c><00:18:23.950><c> newer</c><00:18:24.610><c> interpreters</c><00:18:25.269><c> are</c>

00:18:25.320 --> 00:18:25.330 align:start position:0%
a lot of these newer interpreters are
 

00:18:25.330 --> 00:18:27.260 align:start position:0%
a lot of these newer interpreters are
actually<00:18:25.600><c> using</c><00:18:25.720><c> templates</c><00:18:26.230><c> which</c>

00:18:27.260 --> 00:18:27.270 align:start position:0%
actually using templates which
 

00:18:27.270 --> 00:18:29.030 align:start position:0%
actually using templates which
makes<00:18:27.420><c> it</c><00:18:27.600><c> easy</c><00:18:27.870><c> for</c><00:18:28.050><c> us</c><00:18:28.320><c> to</c><00:18:28.350><c> just</c><00:18:28.710><c> go</c><00:18:28.860><c> in</c>

00:18:29.030 --> 00:18:29.040 align:start position:0%
makes it easy for us to just go in
 

00:18:29.040 --> 00:18:31.580 align:start position:0%
makes it easy for us to just go in
insert<00:18:29.480><c> the</c><00:18:30.480><c> instructions</c><00:18:30.930><c> that</c><00:18:30.990><c> we</c><00:18:31.140><c> want</c><00:18:31.380><c> for</c>

00:18:31.580 --> 00:18:31.590 align:start position:0%
insert the instructions that we want for
 

00:18:31.590 --> 00:18:34.370 align:start position:0%
insert the instructions that we want for
particular<00:18:31.860><c> secrets</c><00:18:32.820><c> of</c><00:18:32.940><c> codes</c><00:18:33.210><c> and</c><00:18:33.510><c> then</c><00:18:34.050><c> the</c>

00:18:34.370 --> 00:18:34.380 align:start position:0%
particular secrets of codes and then the
 

00:18:34.380 --> 00:18:36.200 align:start position:0%
particular secrets of codes and then the
the<00:18:34.740><c> particular</c><00:18:35.010><c> vm</c><00:18:35.610><c> that</c><00:18:35.730><c> you're</c><00:18:35.820><c> working</c><00:18:35.970><c> on</c>

00:18:36.200 --> 00:18:36.210 align:start position:0%
the particular vm that you're working on
 

00:18:36.210 --> 00:18:38.270 align:start position:0%
the particular vm that you're working on
in<00:18:36.330><c> this</c><00:18:36.450><c> case</c><00:18:36.600><c> hotspot</c><00:18:37.110><c> gathers</c><00:18:37.980><c> all</c><00:18:38.100><c> those</c>

00:18:38.270 --> 00:18:38.280 align:start position:0%
in this case hotspot gathers all those
 

00:18:38.280 --> 00:18:40.090 align:start position:0%
in this case hotspot gathers all those
templates<00:18:38.580><c> together</c><00:18:38.940><c> and</c><00:18:39.150><c> produces</c><00:18:39.630><c> a</c><00:18:39.660><c> an</c>

00:18:40.090 --> 00:18:40.100 align:start position:0%
templates together and produces a an
 

00:18:40.100 --> 00:18:43.700 align:start position:0%
templates together and produces a an
interpreter<00:18:41.100><c> engine</c><00:18:41.550><c> that</c><00:18:42.090><c> allows</c><00:18:42.270><c> us</c><00:18:42.600><c> to</c><00:18:42.870><c> to</c>

00:18:43.700 --> 00:18:43.710 align:start position:0%
interpreter engine that allows us to to
 

00:18:43.710 --> 00:18:46.040 align:start position:0%
interpreter engine that allows us to to
interpret<00:18:44.190><c> the</c><00:18:44.280><c> code</c><00:18:44.490><c> so</c><00:18:45.270><c> in</c><00:18:45.360><c> hotspot</c><00:18:45.630><c> we</c><00:18:45.840><c> gain</c>

00:18:46.040 --> 00:18:46.050 align:start position:0%
interpret the code so in hotspot we gain
 

00:18:46.050 --> 00:18:47.480 align:start position:0%
interpret the code so in hotspot we gain
another<00:18:46.290><c> two</c><00:18:46.560><c> or</c><00:18:46.590><c> three</c><00:18:46.740><c> times</c><00:18:47.040><c> improvement</c>

00:18:47.480 --> 00:18:47.490 align:start position:0%
another two or three times improvement
 

00:18:47.490 --> 00:18:50.210 align:start position:0%
another two or three times improvement
in<00:18:47.820><c> speed</c><00:18:48.110><c> just</c><00:18:49.110><c> by</c><00:18:49.410><c> using</c><00:18:49.980><c> this</c>

00:18:50.210 --> 00:18:50.220 align:start position:0%
in speed just by using this
 

00:18:50.220 --> 00:18:53.320 align:start position:0%
in speed just by using this
implementation<00:18:51.380><c> now</c><00:18:52.380><c> interpretation</c><00:18:53.100><c> is</c>

00:18:53.320 --> 00:18:53.330 align:start position:0%
implementation now interpretation is
 

00:18:53.330 --> 00:18:55.790 align:start position:0%
implementation now interpretation is
impaired<00:18:54.330><c> you</c><00:18:54.450><c> so</c><00:18:54.630><c> far</c><00:18:54.840><c> but</c><00:18:55.080><c> it's</c><00:18:55.230><c> you</c><00:18:55.680><c> know</c>

00:18:55.790 --> 00:18:55.800 align:start position:0%
impaired you so far but it's you know
 

00:18:55.800 --> 00:18:57.530 align:start position:0%
impaired you so far but it's you know
it's<00:18:55.830><c> really</c><00:18:56.100><c> not</c><00:18:56.310><c> the</c><00:18:56.370><c> the</c><00:18:56.820><c> end</c><00:18:57.000><c> game</c><00:18:57.240><c> and</c>

00:18:57.530 --> 00:18:57.540 align:start position:0%
it's really not the the end game and
 

00:18:57.540 --> 00:18:59.090 align:start position:0%
it's really not the the end game and
what<00:18:57.990><c> we</c><00:18:58.110><c> need</c><00:18:58.140><c> to</c><00:18:58.350><c> be</c><00:18:58.680><c> able</c><00:18:58.770><c> to</c><00:18:58.890><c> do</c><00:18:58.980><c> at</c><00:18:59.070><c> that</c>

00:18:59.090 --> 00:18:59.100 align:start position:0%
what we need to be able to do at that
 

00:18:59.100 --> 00:19:01.040 align:start position:0%
what we need to be able to do at that
point<00:18:59.250><c> is</c><00:18:59.730><c> to</c><00:18:59.850><c> get</c><00:19:00.060><c> into</c><00:19:00.300><c> some</c><00:19:00.480><c> kind</c><00:19:00.660><c> of</c><00:19:00.720><c> native</c>

00:19:01.040 --> 00:19:01.050 align:start position:0%
point is to get into some kind of native
 

00:19:01.050 --> 00:19:03.380 align:start position:0%
point is to get into some kind of native
code<00:19:01.170><c> generation</c><00:19:01.590><c> so</c><00:19:02.490><c> that</c><00:19:02.520><c> we</c><00:19:02.760><c> get</c><00:19:03.180><c> down</c><00:19:03.360><c> to</c>

00:19:03.380 --> 00:19:03.390 align:start position:0%
code generation so that we get down to
 

00:19:03.390 --> 00:19:04.610 align:start position:0%
code generation so that we get down to
the<00:19:03.510><c> point</c><00:19:03.780><c> where</c><00:19:03.930><c> we're</c><00:19:04.080><c> actually</c><00:19:04.200><c> running</c>

00:19:04.610 --> 00:19:04.620 align:start position:0%
the point where we're actually running
 

00:19:04.620 --> 00:19:06.050 align:start position:0%
the point where we're actually running
at<00:19:04.890><c> the</c><00:19:04.980><c> same</c><00:19:05.100><c> sort</c><00:19:05.400><c> of</c><00:19:05.490><c> speed</c><00:19:05.700><c> that</c><00:19:05.730><c> you</c><00:19:05.880><c> would</c>

00:19:06.050 --> 00:19:06.060 align:start position:0%
at the same sort of speed that you would
 

00:19:06.060 --> 00:19:09.320 align:start position:0%
at the same sort of speed that you would
see<00:19:06.210><c> in</c><00:19:06.240><c> C++</c><00:19:07.430><c> so</c><00:19:08.430><c> we</c><00:19:08.640><c> get</c><00:19:08.790><c> into</c><00:19:09.000><c> code</c>

00:19:09.320 --> 00:19:09.330 align:start position:0%
see in C++ so we get into code
 

00:19:09.330 --> 00:19:11.420 align:start position:0%
see in C++ so we get into code
generators<00:19:09.810><c> and</c><00:19:09.960><c> we</c><00:19:10.020><c> had</c><00:19:10.170><c> the</c><00:19:10.350><c> first</c><00:19:11.100><c> jits</c>

00:19:11.420 --> 00:19:11.430 align:start position:0%
generators and we had the first jits
 

00:19:11.430 --> 00:19:14.030 align:start position:0%
generators and we had the first jits
that<00:19:11.610><c> came</c><00:19:11.790><c> out</c><00:19:11.970><c> used</c><00:19:12.720><c> to</c><00:19:12.840><c> compile</c><00:19:13.740><c> an</c>

00:19:14.030 --> 00:19:14.040 align:start position:0%
that came out used to compile an
 

00:19:14.040 --> 00:19:17.360 align:start position:0%
that came out used to compile an
compiler<00:19:14.580><c> interface</c><00:19:15.860><c> there's</c><00:19:16.860><c> a</c><00:19:16.980><c> plug</c><00:19:17.160><c> into</c>

00:19:17.360 --> 00:19:17.370 align:start position:0%
compiler interface there's a plug into
 

00:19:17.370 --> 00:19:19.610 align:start position:0%
compiler interface there's a plug into
the<00:19:17.550><c> classic</c><00:19:17.970><c> vm</c><00:19:18.270><c> and</c><00:19:18.540><c> what</c><00:19:19.200><c> they</c><00:19:19.320><c> did</c><00:19:19.380><c> was</c>

00:19:19.610 --> 00:19:19.620 align:start position:0%
the classic vm and what they did was
 

00:19:19.620 --> 00:19:22.340 align:start position:0%
the classic vm and what they did was
intercepts<00:19:20.190><c> the</c><00:19:20.760><c> execution</c><00:19:21.660><c> of</c><00:19:21.720><c> methods</c><00:19:22.140><c> and</c>

00:19:22.340 --> 00:19:22.350 align:start position:0%
intercepts the execution of methods and
 

00:19:22.350 --> 00:19:24.590 align:start position:0%
intercepts the execution of methods and
go<00:19:22.890><c> through</c><00:19:23.160><c> and</c><00:19:23.370><c> convert</c><00:19:24.000><c> the</c><00:19:24.120><c> bike</c><00:19:24.300><c> codes</c>

00:19:24.590 --> 00:19:24.600 align:start position:0%
go through and convert the bike codes
 

00:19:24.600 --> 00:19:28.010 align:start position:0%
go through and convert the bike codes
into<00:19:24.930><c> native</c><00:19:25.830><c> machine</c><00:19:26.010><c> code</c><00:19:26.250><c> and</c><00:19:26.970><c> as</c><00:19:27.630><c> a</c><00:19:27.660><c> lot</c><00:19:27.900><c> of</c>

00:19:28.010 --> 00:19:28.020 align:start position:0%
into native machine code and as a lot of
 

00:19:28.020 --> 00:19:32.090 align:start position:0%
into native machine code and as a lot of
the<00:19:28.080><c> earlier</c><00:19:28.380><c> jits</c><00:19:29.100><c> the</c><00:19:29.250><c> chemos</c><00:19:30.710><c> base</c><00:19:31.710><c> call</c><00:19:31.980><c> a</c>

00:19:32.090 --> 00:19:32.100 align:start position:0%
the earlier jits the chemos base call a
 

00:19:32.100 --> 00:19:35.030 align:start position:0%
the earlier jits the chemos base call a
really<00:19:32.520><c> did</c><00:19:32.700><c> was</c><00:19:32.850><c> take</c><00:19:33.000><c> to</c><00:19:33.180><c> be</c><00:19:33.510><c> the</c><00:19:33.840><c> bike</c><00:19:34.830><c> code</c>

00:19:35.030 --> 00:19:35.040 align:start position:0%
really did was take to be the bike code
 

00:19:35.040 --> 00:19:36.800 align:start position:0%
really did was take to be the bike code
sequence<00:19:35.520><c> and</c><00:19:35.760><c> convert</c><00:19:36.090><c> them</c><00:19:36.120><c> it</c><00:19:36.360><c> one</c><00:19:36.660><c> to</c><00:19:36.780><c> one</c>

00:19:36.800 --> 00:19:36.810 align:start position:0%
sequence and convert them it one to one
 

00:19:36.810 --> 00:19:41.000 align:start position:0%
sequence and convert them it one to one
into<00:19:37.500><c> sequences</c><00:19:37.860><c> of</c><00:19:38.130><c> native</c><00:19:38.730><c> code</c><00:19:40.010><c> that</c>

00:19:41.000 --> 00:19:41.010 align:start position:0%
into sequences of native code that
 

00:19:41.010 --> 00:19:42.200 align:start position:0%
into sequences of native code that
worked<00:19:41.250><c> again</c><00:19:41.610><c> you</c><00:19:41.730><c> got</c><00:19:41.850><c> another</c><00:19:42.060><c> boost</c>

00:19:42.200 --> 00:19:42.210 align:start position:0%
worked again you got another boost
 

00:19:42.210 --> 00:19:43.670 align:start position:0%
worked again you got another boost
performance<00:19:42.540><c> probably</c><00:19:43.170><c> get</c><00:19:43.260><c> a</c><00:19:43.290><c> vote</c><00:19:43.440><c> of</c><00:19:43.470><c> five</c>

00:19:43.670 --> 00:19:43.680 align:start position:0%
performance probably get a vote of five
 

00:19:43.680 --> 00:19:46.190 align:start position:0%
performance probably get a vote of five
times<00:19:43.950><c> boost</c><00:19:44.910><c> in</c><00:19:45.060><c> performance</c><00:19:45.180><c> but</c><00:19:46.140><c> the</c>

00:19:46.190 --> 00:19:46.200 align:start position:0%
times boost in performance but the
 

00:19:46.200 --> 00:19:48.050 align:start position:0%
times boost in performance but the
problem<00:19:46.590><c> is</c><00:19:46.710><c> it</c><00:19:46.860><c> wasn't</c><00:19:47.130><c> really</c><00:19:47.250><c> utilizing</c>

00:19:48.050 --> 00:19:48.060 align:start position:0%
problem is it wasn't really utilizing
 

00:19:48.060 --> 00:19:50.270 align:start position:0%
problem is it wasn't really utilizing
the<00:19:48.600><c> true</c><00:19:49.230><c> performance</c><00:19:49.710><c> of</c><00:19:49.860><c> the</c><00:19:49.950><c> machine</c>

00:19:50.270 --> 00:19:50.280 align:start position:0%
the true performance of the machine
 

00:19:50.280 --> 00:19:52.760 align:start position:0%
the true performance of the machine
wasn't<00:19:50.940><c> scheduling</c><00:19:51.510><c> the</c><00:19:51.630><c> instructions</c><00:19:52.290><c> it</c>

00:19:52.760 --> 00:19:52.770 align:start position:0%
wasn't scheduling the instructions it
 

00:19:52.770 --> 00:19:54.740 align:start position:0%
wasn't scheduling the instructions it
wasn't<00:19:53.160><c> looking</c><00:19:54.060><c> at</c><00:19:54.180><c> the</c><00:19:54.270><c> sequences</c><00:19:54.720><c> of</c>

00:19:54.740 --> 00:19:54.750 align:start position:0%
wasn't looking at the sequences of
 

00:19:54.750 --> 00:19:55.910 align:start position:0%
wasn't looking at the sequences of
instructions<00:19:55.080><c> and</c><00:19:55.410><c> whether</c><00:19:55.530><c> you</c><00:19:55.590><c> could</c><00:19:55.770><c> get</c>

00:19:55.910 --> 00:19:55.920 align:start position:0%
instructions and whether you could get
 

00:19:55.920 --> 00:19:58.970 align:start position:0%
instructions and whether you could get
any<00:19:56.070><c> kind</c><00:19:56.310><c> of</c><00:19:56.400><c> optimization</c><00:19:57.590><c> so</c><00:19:58.590><c> then</c><00:19:58.740><c> we</c><00:19:58.830><c> got</c>

00:19:58.970 --> 00:19:58.980 align:start position:0%
any kind of optimization so then we got
 

00:19:58.980 --> 00:20:01.370 align:start position:0%
any kind of optimization so then we got
a<00:19:59.010><c> round</c><00:19:59.520><c> of</c><00:19:59.820><c> static</c><00:20:00.480><c> code</c><00:20:00.660><c> generators</c><00:20:01.140><c> where</c>

00:20:01.370 --> 00:20:01.380 align:start position:0%
a round of static code generators where
 

00:20:01.380 --> 00:20:04.190 align:start position:0%
a round of static code generators where
people<00:20:01.740><c> would</c><00:20:01.860><c> take</c><00:20:02.220><c> the</c><00:20:02.570><c> back</c><00:20:03.570><c> end</c><00:20:03.840><c> off</c><00:20:04.020><c> of</c>

00:20:04.190 --> 00:20:04.200 align:start position:0%
people would take the back end off of
 

00:20:04.200 --> 00:20:05.690 align:start position:0%
people would take the back end off of
the<00:20:04.290><c> c</c><00:20:04.470><c> compiler</c><00:20:04.650><c> and</c><00:20:05.100><c> put</c><00:20:05.250><c> a</c><00:20:05.280><c> job</c><00:20:05.520><c> of</c>

00:20:05.690 --> 00:20:05.700 align:start position:0%
the c compiler and put a job of
 

00:20:05.700 --> 00:20:07.810 align:start position:0%
the c compiler and put a job of
front-end<00:20:06.150><c> and</c><00:20:06.450><c> and</c><00:20:06.600><c> produce</c><00:20:07.140><c> static</c>

00:20:07.810 --> 00:20:07.820 align:start position:0%
front-end and and produce static
 

00:20:07.820 --> 00:20:11.990 align:start position:0%
front-end and and produce static
executed<00:20:08.820><c> coat</c><00:20:09.560><c> and</c><00:20:10.560><c> that</c><00:20:11.250><c> sort</c><00:20:11.490><c> of</c><00:20:11.520><c> works</c><00:20:11.730><c> for</c>

00:20:11.990 --> 00:20:12.000 align:start position:0%
executed coat and that sort of works for
 

00:20:12.000 --> 00:20:14.030 align:start position:0%
executed coat and that sort of works for
some<00:20:12.690><c> types</c><00:20:12.870><c> of</c><00:20:12.990><c> applications</c><00:20:13.470><c> but</c><00:20:13.590><c> but</c><00:20:13.950><c> the</c>

00:20:14.030 --> 00:20:14.040 align:start position:0%
some types of applications but but the
 

00:20:14.040 --> 00:20:16.790 align:start position:0%
some types of applications but but the
problem<00:20:14.760><c> with</c><00:20:14.850><c> that</c><00:20:14.910><c> is</c><00:20:15.090><c> that</c><00:20:15.320><c> the</c><00:20:16.320><c> java</c><00:20:16.590><c> is</c><00:20:16.740><c> a</c>

00:20:16.790 --> 00:20:16.800 align:start position:0%
problem with that is that the java is a
 

00:20:16.800 --> 00:20:18.950 align:start position:0%
problem with that is that the java is a
very<00:20:17.040><c> rich</c><00:20:17.310><c> and</c><00:20:17.430><c> dynamic</c><00:20:17.870><c> environment</c><00:20:18.870><c> to</c>

00:20:18.950 --> 00:20:18.960 align:start position:0%
very rich and dynamic environment to
 

00:20:18.960 --> 00:20:21.140 align:start position:0%
very rich and dynamic environment to
work<00:20:19.110><c> in</c><00:20:19.350><c> and</c><00:20:19.620><c> Static</c><00:20:20.190><c> applications</c><00:20:20.880><c> don't</c>

00:20:21.140 --> 00:20:21.150 align:start position:0%
work in and Static applications don't
 

00:20:21.150 --> 00:20:23.600 align:start position:0%
work in and Static applications don't
really<00:20:21.480><c> fit</c><00:20:21.990><c> in</c><00:20:22.140><c> to</c><00:20:22.380><c> what</c><00:20:22.410><c> you</c><00:20:22.800><c> know</c><00:20:22.830><c> what</c><00:20:23.400><c> the</c>

00:20:23.600 --> 00:20:23.610 align:start position:0%
really fit in to what you know what the
 

00:20:23.610 --> 00:20:25.460 align:start position:0%
really fit in to what you know what the
spirit<00:20:24.000><c> of</c><00:20:24.060><c> job</c><00:20:24.300><c> is</c><00:20:24.510><c> about</c><00:20:24.630><c> you</c><00:20:25.110><c> need</c><00:20:25.290><c> that</c>

00:20:25.460 --> 00:20:25.470 align:start position:0%
spirit of job is about you need that
 

00:20:25.470 --> 00:20:30.690 align:start position:0%
spirit of job is about you need that
dynamic<00:20:27.170><c> dynamic</c><00:20:28.190><c> environment</c><00:20:29.190><c> to</c><00:20:29.310><c> run</c><00:20:29.730><c> in</c>

00:20:30.690 --> 00:20:30.700 align:start position:0%
dynamic dynamic environment to run in
 

00:20:30.700 --> 00:20:33.040 align:start position:0%
dynamic dynamic environment to run in
so<00:20:31.700><c> then</c><00:20:31.850><c> we</c><00:20:31.970><c> get</c><00:20:32.090><c> into</c><00:20:32.210><c> the</c><00:20:32.420><c> high-performance</c>

00:20:33.040 --> 00:20:33.050 align:start position:0%
so then we get into the high-performance
 

00:20:33.050 --> 00:20:36.010 align:start position:0%
so then we get into the high-performance
gypsum<00:20:33.620><c> and</c><00:20:33.830><c> you're</c><00:20:34.310><c> familiar</c><00:20:35.120><c> with</c><00:20:35.390><c> save</c><00:20:35.990><c> a</c>

00:20:36.010 --> 00:20:36.020 align:start position:0%
gypsum and you're familiar with save a
 

00:20:36.020 --> 00:20:38.550 align:start position:0%
gypsum and you're familiar with save a
semantic<00:20:36.530><c> jet</c><00:20:36.740><c> that</c><00:20:37.550><c> we've</c><00:20:37.790><c> been</c><00:20:37.940><c> using</c><00:20:38.120><c> again</c>

00:20:38.550 --> 00:20:38.560 align:start position:0%
semantic jet that we've been using again
 

00:20:38.560 --> 00:20:42.280 align:start position:0%
semantic jet that we've been using again
mr<00:20:39.560><c> j</c><00:20:40.150><c> there</c><00:20:41.150><c> is</c><00:20:41.360><c> a</c><00:20:41.390><c> couple</c><00:20:41.930><c> of</c><00:20:42.140><c> other</c>

00:20:42.280 --> 00:20:42.290 align:start position:0%
mr j there is a couple of other
 

00:20:42.290 --> 00:20:44.860 align:start position:0%
mr j there is a couple of other
high-performance<00:20:42.980><c> gifts</c><00:20:43.700><c> like</c><00:20:43.820><c> the</c><00:20:44.060><c> the</c><00:20:44.510><c> situ</c>

00:20:44.860 --> 00:20:44.870 align:start position:0%
high-performance gifts like the the situ
 

00:20:44.870 --> 00:20:48.340 align:start position:0%
high-performance gifts like the the situ
or<00:20:45.200><c> the</c><00:20:45.680><c> server</c><00:20:45.920><c> a</c><00:20:46.150><c> compiler</c><00:20:47.200><c> that's</c><00:20:48.200><c> on</c>

00:20:48.340 --> 00:20:48.350 align:start position:0%
or the server a compiler that's on
 

00:20:48.350 --> 00:20:51.880 align:start position:0%
or the server a compiler that's on
hotspot<00:20:49.420><c> and</c><00:20:50.420><c> what</c><00:20:50.810><c> these</c><00:20:51.020><c> these</c><00:20:51.440><c> ships</c><00:20:51.710><c> would</c>

00:20:51.880 --> 00:20:51.890 align:start position:0%
hotspot and what these these ships would
 

00:20:51.890 --> 00:20:53.890 align:start position:0%
hotspot and what these these ships would
do<00:20:52.040><c> would</c><00:20:52.220><c> basically</c><00:20:52.430><c> optimize</c><00:20:53.360><c> the</c><00:20:53.510><c> heck</c><00:20:53.720><c> out</c>

00:20:53.890 --> 00:20:53.900 align:start position:0%
do would basically optimize the heck out
 

00:20:53.900 --> 00:20:56.410 align:start position:0%
do would basically optimize the heck out
of<00:20:53.930><c> the</c><00:20:54.860><c> byte</c><00:20:55.010><c> codes</c><00:20:55.310><c> and</c><00:20:55.550><c> try</c><00:20:55.820><c> to</c><00:20:55.880><c> reduce</c><00:20:56.210><c> it</c>

00:20:56.410 --> 00:20:56.420 align:start position:0%
of the byte codes and try to reduce it
 

00:20:56.420 --> 00:20:58.450 align:start position:0%
of the byte codes and try to reduce it
down<00:20:56.450><c> to</c><00:20:56.600><c> something</c><00:20:56.870><c> that</c><00:20:57.230><c> would</c><00:20:57.680><c> be</c><00:20:57.710><c> quite</c>

00:20:58.450 --> 00:20:58.460 align:start position:0%
down to something that would be quite
 

00:20:58.460 --> 00:21:00.250 align:start position:0%
down to something that would be quite
close<00:20:58.880><c> to</c><00:20:59.090><c> what</c><00:20:59.210><c> you</c><00:20:59.330><c> would</c><00:20:59.450><c> expect</c><00:20:59.810><c> from</c><00:20:59.900><c> a</c><00:21:00.080><c> C</c>

00:21:00.250 --> 00:21:00.260 align:start position:0%
close to what you would expect from a C
 

00:21:00.260 --> 00:21:04.090 align:start position:0%
close to what you would expect from a C
and<00:21:00.290><c> C++</c><00:21:00.590><c> compiler</c><00:21:01.630><c> ok</c><00:21:02.630><c> now</c><00:21:03.590><c> the</c><00:21:03.650><c> problem</c><00:21:03.890><c> with</c>

00:21:04.090 --> 00:21:04.100 align:start position:0%
and C++ compiler ok now the problem with
 

00:21:04.100 --> 00:21:07.270 align:start position:0%
and C++ compiler ok now the problem with
these<00:21:04.910><c> high-performance</c><00:21:05.180><c> Jets</c><00:21:06.130><c> well</c><00:21:07.130><c> does</c>

00:21:07.270 --> 00:21:07.280 align:start position:0%
these high-performance Jets well does
 

00:21:07.280 --> 00:21:09.040 align:start position:0%
these high-performance Jets well does
the<00:21:07.400><c> positive</c><00:21:07.880><c> part</c><00:21:08.090><c> is</c><00:21:08.240><c> that</c><00:21:08.270><c> we're</c><00:21:08.900><c> getting</c>

00:21:09.040 --> 00:21:09.050 align:start position:0%
the positive part is that we're getting
 

00:21:09.050 --> 00:21:10.870 align:start position:0%
the positive part is that we're getting
the<00:21:09.320><c> really</c><00:21:09.680><c> good</c><00:21:09.770><c> performance</c><00:21:10.310><c> you</c><00:21:10.760><c> know</c>

00:21:10.870 --> 00:21:10.880 align:start position:0%
the really good performance you know
 

00:21:10.880 --> 00:21:12.070 align:start position:0%
the really good performance you know
really<00:21:11.060><c> really</c><00:21:11.360><c> good</c><00:21:11.510><c> performance</c><00:21:11.930><c> but</c><00:21:11.990><c> the</c>

00:21:12.070 --> 00:21:12.080 align:start position:0%
really really good performance but the
 

00:21:12.080 --> 00:21:13.900 align:start position:0%
really really good performance but the
problem<00:21:12.440><c> with</c><00:21:12.560><c> these</c><00:21:12.770><c> was</c><00:21:13.430><c> that</c><00:21:13.670><c> there</c><00:21:13.790><c> was</c><00:21:13.880><c> a</c>

00:21:13.900 --> 00:21:13.910 align:start position:0%
problem with these was that there was a
 

00:21:13.910 --> 00:21:15.910 align:start position:0%
problem with these was that there was a
lot<00:21:14.240><c> of</c><00:21:14.270><c> competition</c><00:21:15.020><c> between</c><00:21:15.350><c> the</c><00:21:15.590><c> JIT</c>

00:21:15.910 --> 00:21:15.920 align:start position:0%
lot of competition between the JIT
 

00:21:15.920 --> 00:21:17.650 align:start position:0%
lot of competition between the JIT
companies<00:21:16.370><c> and</c><00:21:16.610><c> they</c><00:21:17.060><c> were</c><00:21:17.150><c> trying</c><00:21:17.390><c> to</c>

00:21:17.650 --> 00:21:17.660 align:start position:0%
companies and they were trying to
 

00:21:17.660 --> 00:21:19.780 align:start position:0%
companies and they were trying to
squeeze<00:21:18.470><c> out</c><00:21:18.650><c> as</c><00:21:18.860><c> much</c><00:21:18.890><c> performance</c><00:21:19.400><c> as</c><00:21:19.670><c> they</c>

00:21:19.780 --> 00:21:19.790 align:start position:0%
squeeze out as much performance as they
 

00:21:19.790 --> 00:21:21.460 align:start position:0%
squeeze out as much performance as they
possibly<00:21:19.970><c> could</c><00:21:20.390><c> try</c><00:21:21.020><c> to</c><00:21:21.080><c> get</c><00:21:21.230><c> the</c><00:21:21.320><c> best</c>

00:21:21.460 --> 00:21:21.470 align:start position:0%
possibly could try to get the best
 

00:21:21.470 --> 00:21:23.890 align:start position:0%
possibly could try to get the best
caffeine<00:21:22.040><c> mark</c><00:21:22.370><c> that</c><00:21:22.640><c> could</c><00:21:22.850><c> working</c><00:21:23.720><c> with</c>

00:21:23.890 --> 00:21:23.900 align:start position:0%
caffeine mark that could working with
 

00:21:23.900 --> 00:21:27.940 align:start position:0%
caffeine mark that could working with
the<00:21:25.150><c> semantic</c><00:21:26.150><c> Jets</c><00:21:26.420><c> on</c><00:21:27.020><c> the</c><00:21:27.230><c> semantic</c><00:21:27.650><c> gypsy</c>

00:21:27.940 --> 00:21:27.950 align:start position:0%
the semantic Jets on the semantic gypsy
 

00:21:27.950 --> 00:21:29.920 align:start position:0%
the semantic Jets on the semantic gypsy
we<00:21:28.460><c> were</c><00:21:28.520><c> getting</c><00:21:28.760><c> infinite</c><00:21:29.270><c> scores</c><00:21:29.660><c> and</c>

00:21:29.920 --> 00:21:29.930 align:start position:0%
we were getting infinite scores and
 

00:21:29.930 --> 00:21:31.330 align:start position:0%
we were getting infinite scores and
caffeine<00:21:30.290><c> marks</c><00:21:30.590><c> because</c><00:21:30.740><c> we</c><00:21:30.980><c> bit</c><00:21:31.160><c> were</c>

00:21:31.330 --> 00:21:31.340 align:start position:0%
caffeine marks because we bit were
 

00:21:31.340 --> 00:21:33.280 align:start position:0%
caffeine marks because we bit were
optimizing<00:21:31.850><c> methods</c><00:21:32.810><c> right</c><00:21:32.960><c> down</c><00:21:33.110><c> to</c><00:21:33.230><c> the</c>

00:21:33.280 --> 00:21:33.290 align:start position:0%
optimizing methods right down to the
 

00:21:33.290 --> 00:21:34.600 align:start position:0%
optimizing methods right down to the
point<00:21:33.530><c> where</c><00:21:33.680><c> they</c><00:21:33.770><c> were</c><00:21:33.860><c> just</c><00:21:33.980><c> simple</c><00:21:34.280><c> return</c>

00:21:34.600 --> 00:21:34.610 align:start position:0%
point where they were just simple return
 

00:21:34.610 --> 00:21:39.550 align:start position:0%
point where they were just simple return
return<00:21:35.510><c> stages</c><00:21:35.870><c> so</c><00:21:37.840><c> but</c><00:21:38.840><c> the</c><00:21:38.930><c> prob</c><00:21:39.170><c> what</c><00:21:39.440><c> the</c>

00:21:39.550 --> 00:21:39.560 align:start position:0%
return stages so but the prob what the
 

00:21:39.560 --> 00:21:41.470 align:start position:0%
return stages so but the prob what the
problem<00:21:39.980><c> is</c><00:21:40.130><c> that's</c><00:21:40.670><c> the</c><00:21:40.760><c> farthest</c><00:21:41.000><c> side</c><00:21:41.270><c> the</c>

00:21:41.470 --> 00:21:41.480 align:start position:0%
problem is that's the farthest side the
 

00:21:41.480 --> 00:21:43.030 align:start position:0%
problem is that's the farthest side the
negative<00:21:41.810><c> side</c><00:21:41.990><c> is</c><00:21:42.140><c> that</c><00:21:42.290><c> it</c><00:21:42.410><c> was</c><00:21:42.530><c> taking</c><00:21:42.650><c> more</c>

00:21:43.030 --> 00:21:43.040 align:start position:0%
negative side is that it was taking more
 

00:21:43.040 --> 00:21:44.890 align:start position:0%
negative side is that it was taking more
and<00:21:43.070><c> more</c><00:21:43.460><c> time</c><00:21:43.760><c> to</c><00:21:43.970><c> compile</c><00:21:44.330><c> these</c><00:21:44.570><c> things</c>

00:21:44.890 --> 00:21:44.900 align:start position:0%
and more time to compile these things
 

00:21:44.900 --> 00:21:46.810 align:start position:0%
and more time to compile these things
and<00:21:45.080><c> more</c><00:21:45.140><c> and</c><00:21:45.560><c> more</c><00:21:45.620><c> memory</c><00:21:46.100><c> and</c><00:21:46.280><c> that's</c>

00:21:46.810 --> 00:21:46.820 align:start position:0%
and more and more memory and that's
 

00:21:46.820 --> 00:21:48.730 align:start position:0%
and more and more memory and that's
where<00:21:47.000><c> the</c><00:21:47.090><c> cost</c><00:21:47.330><c> was</c><00:21:47.600><c> so</c><00:21:48.080><c> we</c><00:21:48.200><c> have</c><00:21:48.350><c> to</c><00:21:48.500><c> find</c>

00:21:48.730 --> 00:21:48.740 align:start position:0%
where the cost was so we have to find
 

00:21:48.740 --> 00:21:51.730 align:start position:0%
where the cost was so we have to find
some<00:21:48.950><c> kind</c><00:21:49.160><c> of</c><00:21:49.250><c> balance</c><00:21:49.690><c> between</c><00:21:50.690><c> getting</c><00:21:51.500><c> the</c>

00:21:51.730 --> 00:21:51.740 align:start position:0%
some kind of balance between getting the
 

00:21:51.740 --> 00:21:53.890 align:start position:0%
some kind of balance between getting the
optimization<00:21:52.520><c> optimization</c><00:21:53.390><c> done</c><00:21:53.630><c> and</c>

00:21:53.890 --> 00:21:53.900 align:start position:0%
optimization optimization done and
 

00:21:53.900 --> 00:21:56.920 align:start position:0%
optimization optimization done and
keeping<00:21:54.560><c> the</c><00:21:54.680><c> compile</c><00:21:55.220><c> time</c><00:21:55.550><c> and</c><00:21:55.930><c> memory</c>

00:21:56.920 --> 00:21:56.930 align:start position:0%
keeping the compile time and memory
 

00:21:56.930 --> 00:21:59.320 align:start position:0%
keeping the compile time and memory
requirements<00:21:57.560><c> down</c><00:21:57.740><c> to</c><00:21:58.160><c> a</c><00:21:58.700><c> minimum</c><00:21:59.210><c> and</c>

00:21:59.320 --> 00:21:59.330 align:start position:0%
requirements down to a minimum and
 

00:21:59.330 --> 00:22:00.820 align:start position:0%
requirements down to a minimum and
that's<00:21:59.450><c> where</c><00:21:59.690><c> we</c><00:21:59.780><c> are</c><00:21:59.810><c> with</c><00:22:00.080><c> hot</c><00:22:00.200><c> spots</c><00:22:00.530><c> of</c>

00:22:00.820 --> 00:22:00.830 align:start position:0%
that's where we are with hot spots of
 

00:22:00.830 --> 00:22:03.540 align:start position:0%
that's where we are with hot spots of
client<00:22:01.400><c> version</c>

00:22:03.540 --> 00:22:03.550 align:start position:0%
client version
 

00:22:03.550 --> 00:22:05.980 align:start position:0%
client version
so<00:22:04.550><c> the</c><00:22:04.670><c> type</c><00:22:04.850><c> the</c><00:22:05.180><c> traditional</c><00:22:05.600><c> traditional</c>

00:22:05.980 --> 00:22:05.990 align:start position:0%
so the type the traditional traditional
 

00:22:05.990 --> 00:22:07.810 align:start position:0%
so the type the traditional traditional
type<00:22:06.440><c> of</c><00:22:06.560><c> optimizations</c><00:22:07.220><c> you</c><00:22:07.340><c> would</c><00:22:07.460><c> expect</c>

00:22:07.810 --> 00:22:07.820 align:start position:0%
type of optimizations you would expect
 

00:22:07.820 --> 00:22:10.180 align:start position:0%
type of optimizations you would expect
would<00:22:08.060><c> be</c><00:22:08.270><c> you</c><00:22:08.720><c> know</c><00:22:08.840><c> expression</c><00:22:09.650><c> reduction</c>

00:22:10.180 --> 00:22:10.190 align:start position:0%
would be you know expression reduction
 

00:22:10.190 --> 00:22:15.340 align:start position:0%
would be you know expression reduction
CFE<00:22:11.710><c> loops</c><00:22:12.970><c> unfolding</c><00:22:13.970><c> or</c><00:22:14.270><c> loop</c><00:22:14.480><c> optimization</c>

00:22:15.340 --> 00:22:15.350 align:start position:0%
CFE loops unfolding or loop optimization
 

00:22:15.350 --> 00:22:17.410 align:start position:0%
CFE loops unfolding or loop optimization
dataflow<00:22:16.340><c> analysis</c><00:22:16.910><c> these</c><00:22:17.060><c> are</c><00:22:17.180><c> all</c><00:22:17.270><c> the</c>

00:22:17.410 --> 00:22:17.420 align:start position:0%
dataflow analysis these are all the
 

00:22:17.420 --> 00:22:18.700 align:start position:0%
dataflow analysis these are all the
standard<00:22:17.750><c> sort</c><00:22:17.900><c> of</c><00:22:18.020><c> things</c><00:22:18.170><c> he</c><00:22:18.290><c> would</c><00:22:18.410><c> see</c><00:22:18.620><c> in</c>

00:22:18.700 --> 00:22:18.710 align:start position:0%
standard sort of things he would see in
 

00:22:18.710 --> 00:22:21.040 align:start position:0%
standard sort of things he would see in
the<00:22:18.740><c> in</c><00:22:18.980><c> the</c><00:22:19.450><c> dragon</c><00:22:20.450><c> book</c><00:22:20.630><c> i</c><00:22:20.780><c> guess</c><00:22:20.900><c> the</c>

00:22:21.040 --> 00:22:21.050 align:start position:0%
the in the dragon book i guess the
 

00:22:21.050 --> 00:22:23.830 align:start position:0%
the in the dragon book i guess the
standard<00:22:21.350><c> compiler</c><00:22:21.740><c> book</c><00:22:21.890><c> and</c><00:22:22.840><c> typically</c>

00:22:23.830 --> 00:22:23.840 align:start position:0%
standard compiler book and typically
 

00:22:23.840 --> 00:22:25.330 align:start position:0%
standard compiler book and typically
what<00:22:23.930><c> that</c><00:22:24.110><c> would</c><00:22:24.260><c> happen</c><00:22:24.590><c> would</c><00:22:24.710><c> be</c><00:22:24.770><c> that</c><00:22:25.100><c> you</c>

00:22:25.330 --> 00:22:25.340 align:start position:0%
what that would happen would be that you
 

00:22:25.340 --> 00:22:28.150 align:start position:0%
what that would happen would be that you
would<00:22:25.520><c> go</c><00:22:25.610><c> through</c><00:22:25.820><c> a</c><00:22:26.770><c> round</c><00:22:27.770><c> of</c><00:22:28.070><c> these</c>

00:22:28.150 --> 00:22:28.160 align:start position:0%
would go through a round of these
 

00:22:28.160 --> 00:22:30.520 align:start position:0%
would go through a round of these
optimizations<00:22:28.970><c> and</c><00:22:29.090><c> then</c><00:22:29.690><c> they</c><00:22:29.930><c> would</c><00:22:30.080><c> reduce</c>

00:22:30.520 --> 00:22:30.530 align:start position:0%
optimizations and then they would reduce
 

00:22:30.530 --> 00:22:34.270 align:start position:0%
optimizations and then they would reduce
the<00:22:31.090><c> application</c><00:22:32.090><c> down</c><00:22:32.240><c> to</c><00:22:32.450><c> a</c><00:22:33.160><c> little</c><00:22:34.160><c> bit</c>

00:22:34.270 --> 00:22:34.280 align:start position:0%
the application down to a little bit
 

00:22:34.280 --> 00:22:36.010 align:start position:0%
the application down to a little bit
smaller<00:22:34.580><c> and</c><00:22:34.820><c> then</c><00:22:35.240><c> you'd</c><00:22:35.360><c> have</c><00:22:35.510><c> to</c><00:22:35.600><c> go</c><00:22:35.720><c> back</c>

00:22:36.010 --> 00:22:36.020 align:start position:0%
smaller and then you'd have to go back
 

00:22:36.020 --> 00:22:37.630 align:start position:0%
smaller and then you'd have to go back
and<00:22:36.080><c> repeat</c><00:22:36.440><c> them</c><00:22:36.650><c> again</c><00:22:36.950><c> because</c><00:22:37.430><c> then</c><00:22:37.550><c> it</c>

00:22:37.630 --> 00:22:37.640 align:start position:0%
and repeat them again because then it
 

00:22:37.640 --> 00:22:38.680 align:start position:0%
and repeat them again because then it
would<00:22:37.730><c> bring</c><00:22:37.820><c> it</c><00:22:37.940><c> down</c><00:22:38.090><c> again</c><00:22:38.330><c> so</c><00:22:38.450><c> we</c><00:22:38.540><c> have</c><00:22:38.660><c> a</c>

00:22:38.680 --> 00:22:38.690 align:start position:0%
would bring it down again so we have a
 

00:22:38.690 --> 00:22:40.420 align:start position:0%
would bring it down again so we have a
her<00:22:38.870><c> stick</c><00:22:39.140><c> tape</c><00:22:39.500><c> algorithm</c><00:22:40.070><c> to</c><00:22:40.190><c> actually</c>

00:22:40.420 --> 00:22:40.430 align:start position:0%
her stick tape algorithm to actually
 

00:22:40.430 --> 00:22:42.220 align:start position:0%
her stick tape algorithm to actually
reduce<00:22:40.520><c> capitalization</c><00:22:41.420><c> and</c><00:22:41.570><c> this</c><00:22:41.900><c> is</c><00:22:42.020><c> really</c>

00:22:42.220 --> 00:22:42.230 align:start position:0%
reduce capitalization and this is really
 

00:22:42.230 --> 00:22:44.860 align:start position:0%
reduce capitalization and this is really
where<00:22:42.560><c> a</c><00:22:42.830><c> lot</c><00:22:43.130><c> of</c><00:22:43.340><c> these</c><00:22:43.490><c> high-end</c><00:22:44.030><c> optimizers</c>

00:22:44.860 --> 00:22:44.870 align:start position:0%
where a lot of these high-end optimizers
 

00:22:44.870 --> 00:22:46.210 align:start position:0%
where a lot of these high-end optimizers
got<00:22:45.020><c> into</c><00:22:45.230><c> trouble</c><00:22:45.470><c> was</c><00:22:45.710><c> because</c><00:22:45.920><c> they</c><00:22:46.010><c> loop</c>

00:22:46.210 --> 00:22:46.220 align:start position:0%
got into trouble was because they loop
 

00:22:46.220 --> 00:22:47.440 align:start position:0%
got into trouble was because they loop
and<00:22:46.430><c> loop</c><00:22:46.520><c> and</c><00:22:46.730><c> loop</c><00:22:46.820><c> and</c><00:22:47.030><c> it</c><00:22:47.090><c> could</c><00:22:47.270><c> loop</c>

00:22:47.440 --> 00:22:47.450 align:start position:0%
and loop and loop and it could loop
 

00:22:47.450 --> 00:22:49.180 align:start position:0%
and loop and loop and it could loop
several<00:22:47.780><c> hundred</c><00:22:48.020><c> times</c><00:22:48.200><c> before</c><00:22:48.770><c> they</c><00:22:49.040><c> give</c>

00:22:49.180 --> 00:22:49.190 align:start position:0%
several hundred times before they give
 

00:22:49.190 --> 00:22:50.710 align:start position:0%
several hundred times before they give
up<00:22:49.370><c> and</c><00:22:49.520><c> say</c><00:22:49.730><c> well</c><00:22:49.940><c> this</c><00:22:50.120><c> is</c><00:22:50.270><c> the</c><00:22:50.300><c> best</c><00:22:50.540><c> I</c><00:22:50.660><c> can</c>

00:22:50.710 --> 00:22:50.720 align:start position:0%
up and say well this is the best I can
 

00:22:50.720 --> 00:22:52.330 align:start position:0%
up and say well this is the best I can
do<00:22:50.900><c> with</c><00:22:51.020><c> this</c><00:22:51.110><c> method</c><00:22:51.350><c> and</c><00:22:51.650><c> then</c><00:22:52.010><c> actually</c>

00:22:52.330 --> 00:22:52.340 align:start position:0%
do with this method and then actually
 

00:22:52.340 --> 00:22:57.310 align:start position:0%
do with this method and then actually
executed

00:22:57.310 --> 00:22:57.320 align:start position:0%
 
 

00:22:57.320 --> 00:22:59.230 align:start position:0%
 
now<00:22:57.919><c> one</c><00:22:58.070><c> of</c><00:22:58.100><c> the</c><00:22:58.250><c> great</c><00:22:58.399><c> things</c><00:22:58.429><c> about</c><00:22:58.700><c> the</c>

00:22:59.230 --> 00:22:59.240 align:start position:0%
now one of the great things about the
 

00:22:59.240 --> 00:23:02.860 align:start position:0%
now one of the great things about the
runtime<00:23:00.309><c> just-in-time</c><00:23:01.309><c> compiler</c><00:23:01.970><c> is</c><00:23:02.149><c> that</c>

00:23:02.860 --> 00:23:02.870 align:start position:0%
runtime just-in-time compiler is that
 

00:23:02.870 --> 00:23:05.350 align:start position:0%
runtime just-in-time compiler is that
you<00:23:02.960><c> can</c><00:23:03.110><c> do</c><00:23:03.200><c> optimizations</c><00:23:04.039><c> that</c><00:23:04.909><c> you</c>

00:23:05.350 --> 00:23:05.360 align:start position:0%
you can do optimizations that you
 

00:23:05.360 --> 00:23:06.549 align:start position:0%
you can do optimizations that you
wouldn't<00:23:05.630><c> be</c><00:23:05.720><c> able</c><00:23:05.779><c> to</c><00:23:05.929><c> do</c><00:23:06.080><c> an</c><00:23:06.169><c> aesthetic</c>

00:23:06.549 --> 00:23:06.559 align:start position:0%
wouldn't be able to do an aesthetic
 

00:23:06.559 --> 00:23:09.759 align:start position:0%
wouldn't be able to do an aesthetic
aesthetic<00:23:06.980><c> situation</c><00:23:07.759><c> one</c><00:23:08.659><c> of</c><00:23:08.809><c> the</c><00:23:08.899><c> most</c>

00:23:09.759 --> 00:23:09.769 align:start position:0%
aesthetic situation one of the most
 

00:23:09.769 --> 00:23:11.529 align:start position:0%
aesthetic situation one of the most
important<00:23:10.220><c> ones</c><00:23:10.370><c> is</c><00:23:10.580><c> be</c><00:23:10.880><c> able</c><00:23:11.090><c> to</c><00:23:11.210><c> determine</c>

00:23:11.529 --> 00:23:11.539 align:start position:0%
important ones is be able to determine
 

00:23:11.539 --> 00:23:13.870 align:start position:0%
important ones is be able to determine
whether<00:23:11.750><c> a</c><00:23:12.230><c> virtual</c><00:23:12.769><c> method</c><00:23:13.190><c> is</c><00:23:13.370><c> mine</c><00:23:13.759><c> and</c>

00:23:13.870 --> 00:23:13.880 align:start position:0%
whether a virtual method is mine and
 

00:23:13.880 --> 00:23:16.779 align:start position:0%
whether a virtual method is mine and
more<00:23:14.029><c> thick</c><00:23:14.269><c> or</c><00:23:14.450><c> not</c><00:23:14.830><c> what</c><00:23:15.830><c> this</c><00:23:16.009><c> means</c><00:23:16.279><c> what</c>

00:23:16.779 --> 00:23:16.789 align:start position:0%
more thick or not what this means what
 

00:23:16.789 --> 00:23:19.299 align:start position:0%
more thick or not what this means what
might<00:23:16.970><c> a</c><00:23:17.000><c> morphism</c><00:23:17.389><c> is</c><00:23:17.690><c> about</c><00:23:17.929><c> is</c><00:23:18.169><c> that</c><00:23:18.500><c> we</c>

00:23:19.299 --> 00:23:19.309 align:start position:0%
might a morphism is about is that we
 

00:23:19.309 --> 00:23:22.720 align:start position:0%
might a morphism is about is that we
have<00:23:19.519><c> in</c><00:23:20.590><c> Java</c><00:23:21.590><c> the</c><00:23:21.980><c> ability</c><00:23:22.340><c> to</c><00:23:22.460><c> create</c>

00:23:22.720 --> 00:23:22.730 align:start position:0%
have in Java the ability to create
 

00:23:22.730 --> 00:23:24.669 align:start position:0%
have in Java the ability to create
subclasses<00:23:23.450><c> of</c><00:23:23.450><c> a</c><00:23:23.809><c> particular</c><00:23:24.049><c> message</c><00:23:24.500><c> and</c>

00:23:24.669 --> 00:23:24.679 align:start position:0%
subclasses of a particular message and
 

00:23:24.679 --> 00:23:26.080 align:start position:0%
subclasses of a particular message and
then<00:23:24.950><c> to</c><00:23:25.070><c> be</c><00:23:25.190><c> able</c><00:23:25.220><c> to</c><00:23:25.399><c> billet</c><00:23:25.759><c> e</c><00:23:25.789><c> to</c><00:23:25.909><c> be</c><00:23:26.000><c> able</c>

00:23:26.080 --> 00:23:26.090 align:start position:0%
then to be able to billet e to be able
 

00:23:26.090 --> 00:23:28.810 align:start position:0%
then to be able to billet e to be able
to<00:23:26.210><c> override</c><00:23:26.539><c> those</c><00:23:27.019><c> methods</c><00:23:27.440><c> so</c><00:23:28.399><c> in</c><00:23:28.549><c> order</c><00:23:28.700><c> to</c>

00:23:28.810 --> 00:23:28.820 align:start position:0%
to override those methods so in order to
 

00:23:28.820 --> 00:23:31.299 align:start position:0%
to override those methods so in order to
do<00:23:29.059><c> to</c><00:23:29.419><c> call</c><00:23:30.169><c> a</c><00:23:30.440><c> particular</c><00:23:30.710><c> method</c><00:23:31.159><c> with</c><00:23:31.279><c> a</c>

00:23:31.299 --> 00:23:31.309 align:start position:0%
do to call a particular method with a
 

00:23:31.309 --> 00:23:33.159 align:start position:0%
do to call a particular method with a
particular<00:23:31.549><c> object</c><00:23:31.700><c> as</c><00:23:32.120><c> a</c><00:23:32.149><c> dispatch</c><00:23:32.629><c> goes</c><00:23:32.960><c> on</c>

00:23:33.159 --> 00:23:33.169 align:start position:0%
particular object as a dispatch goes on
 

00:23:33.169 --> 00:23:36.009 align:start position:0%
particular object as a dispatch goes on
it<00:23:33.350><c> says</c><00:23:33.639><c> which</c><00:23:34.639><c> method</c><00:23:35.059><c> is</c><00:23:35.240><c> associated</c><00:23:35.809><c> with</c>

00:23:36.009 --> 00:23:36.019 align:start position:0%
it says which method is associated with
 

00:23:36.019 --> 00:23:38.049 align:start position:0%
it says which method is associated with
this<00:23:36.230><c> object</c><00:23:36.679><c> so</c><00:23:37.039><c> it's</c><00:23:37.250><c> basically</c><00:23:37.490><c> virtual</c>

00:23:38.049 --> 00:23:38.059 align:start position:0%
this object so it's basically virtual
 

00:23:38.059 --> 00:23:42.190 align:start position:0%
this object so it's basically virtual
objects<00:23:38.450><c> pervert</c><00:23:39.230><c> virtual</c><00:23:39.679><c> dispatch</c><00:23:41.200><c> but</c>

00:23:42.190 --> 00:23:42.200 align:start position:0%
objects pervert virtual dispatch but
 

00:23:42.200 --> 00:23:44.529 align:start position:0%
objects pervert virtual dispatch but
most<00:23:43.129><c> of</c><00:23:43.279><c> the</c><00:23:43.399><c> time</c><00:23:43.639><c> and</c><00:23:43.940><c> it</c><00:23:44.000><c> turns</c><00:23:44.149><c> out</c><00:23:44.269><c> to</c><00:23:44.419><c> the</c>

00:23:44.529 --> 00:23:44.539 align:start position:0%
most of the time and it turns out to the
 

00:23:44.539 --> 00:23:46.810 align:start position:0%
most of the time and it turns out to the
most<00:23:44.720><c> application</c><00:23:45.409><c> a</c><00:23:45.590><c> little</c><00:23:46.429><c> bit</c><00:23:46.549><c> over</c>

00:23:46.810 --> 00:23:46.820 align:start position:0%
most application a little bit over
 

00:23:46.820 --> 00:23:48.399 align:start position:0%
most application a little bit over
eighty<00:23:47.029><c> percent</c><00:23:47.240><c> of</c><00:23:47.539><c> the</c><00:23:47.659><c> classes</c><00:23:48.169><c> that</c><00:23:48.200><c> you</c>

00:23:48.399 --> 00:23:48.409 align:start position:0%
eighty percent of the classes that you
 

00:23:48.409 --> 00:23:50.950 align:start position:0%
eighty percent of the classes that you
have<00:23:48.649><c> in</c><00:23:48.889><c> your</c><00:23:48.980><c> environment</c><00:23:49.690><c> are</c><00:23:50.690><c> not</c>

00:23:50.950 --> 00:23:50.960 align:start position:0%
have in your environment are not
 

00:23:50.960 --> 00:23:53.649 align:start position:0%
have in your environment are not
overridden<00:23:51.850><c> they're</c><00:23:52.850><c> basically</c><00:23:53.299><c> their</c><00:23:53.480><c> leaf</c>

00:23:53.649 --> 00:23:53.659 align:start position:0%
overridden they're basically their leaf
 

00:23:53.659 --> 00:23:55.930 align:start position:0%
overridden they're basically their leaf
classes<00:23:54.080><c> so</c><00:23:54.799><c> there's</c><00:23:54.980><c> really</c><00:23:55.129><c> no</c><00:23:55.399><c> need</c><00:23:55.429><c> to</c><00:23:55.820><c> go</c>

00:23:55.930 --> 00:23:55.940 align:start position:0%
classes so there's really no need to go
 

00:23:55.940 --> 00:23:57.759 align:start position:0%
classes so there's really no need to go
through<00:23:56.120><c> this</c><00:23:56.240><c> dispatch</c><00:23:56.690><c> mechanism</c><00:23:57.259><c> you</c><00:23:57.620><c> can</c>

00:23:57.759 --> 00:23:57.769 align:start position:0%
through this dispatch mechanism you can
 

00:23:57.769 --> 00:23:59.769 align:start position:0%
through this dispatch mechanism you can
make<00:23:57.860><c> a</c><00:23:57.889><c> direct</c><00:23:58.190><c> call</c><00:23:58.399><c> to</c><00:23:58.429><c> that</c><00:23:59.210><c> method</c><00:23:59.419><c> and</c>

00:23:59.769 --> 00:23:59.779 align:start position:0%
make a direct call to that method and
 

00:23:59.779 --> 00:24:02.259 align:start position:0%
make a direct call to that method and
not<00:24:00.139><c> worry</c><00:24:00.320><c> about</c><00:24:00.409><c> having</c><00:24:00.799><c> to</c><00:24:01.149><c> you</c><00:24:02.149><c> know</c>

00:24:02.259 --> 00:24:02.269 align:start position:0%
not worry about having to you know
 

00:24:02.269 --> 00:24:03.730 align:start position:0%
not worry about having to you know
hitting<00:24:02.570><c> the</c><00:24:02.750><c> wrong</c><00:24:02.870><c> hitting</c><00:24:03.529><c> the</c><00:24:03.620><c> wrong</c>

00:24:03.730 --> 00:24:03.740 align:start position:0%
hitting the wrong hitting the wrong
 

00:24:03.740 --> 00:24:06.789 align:start position:0%
hitting the wrong hitting the wrong
method<00:24:04.090><c> so</c><00:24:05.090><c> the</c><00:24:05.360><c> just-in-time</c><00:24:06.049><c> compilers</c><00:24:06.620><c> try</c>

00:24:06.789 --> 00:24:06.799 align:start position:0%
method so the just-in-time compilers try
 

00:24:06.799 --> 00:24:08.830 align:start position:0%
method so the just-in-time compilers try
to<00:24:06.860><c> exploit</c><00:24:07.309><c> this</c><00:24:07.580><c> and</c><00:24:07.879><c> one</c><00:24:08.570><c> of</c><00:24:08.690><c> the</c><00:24:08.779><c> things</c>

00:24:08.830 --> 00:24:08.840 align:start position:0%
to exploit this and one of the things
 

00:24:08.840 --> 00:24:11.379 align:start position:0%
to exploit this and one of the things
that<00:24:09.049><c> you</c><00:24:09.320><c> can</c><00:24:09.470><c> do</c><00:24:09.649><c> besides</c><00:24:10.549><c> just</c><00:24:10.879><c> you</c><00:24:11.269><c> know</c>

00:24:11.379 --> 00:24:11.389 align:start position:0%
that you can do besides just you know
 

00:24:11.389 --> 00:24:12.759 align:start position:0%
that you can do besides just you know
simplifying<00:24:11.870><c> the</c><00:24:12.049><c> actual</c><00:24:12.350><c> call</c><00:24:12.500><c> to</c><00:24:12.679><c> the</c>

00:24:12.759 --> 00:24:12.769 align:start position:0%
simplifying the actual call to the
 

00:24:12.769 --> 00:24:15.879 align:start position:0%
simplifying the actual call to the
method<00:24:13.039><c> is</c><00:24:13.330><c> in-line</c><00:24:14.330><c> the</c><00:24:14.840><c> code</c><00:24:15.049><c> for</c><00:24:15.740><c> the</c>

00:24:15.879 --> 00:24:15.889 align:start position:0%
method is in-line the code for the
 

00:24:15.889 --> 00:24:19.810 align:start position:0%
method is in-line the code for the
method<00:24:16.159><c> that</c><00:24:16.190><c> you're</c><00:24:16.340><c> dispatching</c><00:24:16.850><c> to</c><00:24:16.970><c> and</c><00:24:18.820><c> if</c>

00:24:19.810 --> 00:24:19.820 align:start position:0%
method that you're dispatching to and if
 

00:24:19.820 --> 00:24:20.919 align:start position:0%
method that you're dispatching to and if
you<00:24:20.000><c> take</c><00:24:20.149><c> a</c><00:24:20.210><c> look</c><00:24:20.450><c> at</c><00:24:20.539><c> some</c><00:24:20.629><c> of</c><00:24:20.690><c> the</c><00:24:20.809><c> examples</c>

00:24:20.919 --> 00:24:20.929 align:start position:0%
you take a look at some of the examples
 

00:24:20.929 --> 00:24:22.509 align:start position:0%
you take a look at some of the examples
of<00:24:21.139><c> your</c><00:24:21.320><c> own</c><00:24:21.409><c> code</c><00:24:21.620><c> you</c><00:24:21.830><c> probably</c><00:24:22.100><c> find</c><00:24:22.340><c> lots</c>

00:24:22.509 --> 00:24:22.519 align:start position:0%
of your own code you probably find lots
 

00:24:22.519 --> 00:24:24.100 align:start position:0%
of your own code you probably find lots
of<00:24:22.639><c> places</c><00:24:22.850><c> where</c><00:24:23.120><c> your</c><00:24:23.269><c> calling</c><00:24:23.629><c> is</c><00:24:23.779><c> this</c>

00:24:24.100 --> 00:24:24.110 align:start position:0%
of places where your calling is this
 

00:24:24.110 --> 00:24:26.019 align:start position:0%
of places where your calling is this
method<00:24:24.320><c> that's</c><00:24:24.620><c> rather</c><00:24:25.070><c> simple</c><00:24:25.580><c> you</c><00:24:25.909><c> know</c>

00:24:26.019 --> 00:24:26.029 align:start position:0%
method that's rather simple you know
 

00:24:26.029 --> 00:24:28.389 align:start position:0%
method that's rather simple you know
maybe<00:24:26.149><c> a</c><00:24:26.299><c> few</c><00:24:26.539><c> lines</c><00:24:26.720><c> of</c><00:24:26.840><c> code</c><00:24:26.899><c> a</c><00:24:27.440><c> good</c><00:24:28.309><c> example</c>

00:24:28.389 --> 00:24:28.399 align:start position:0%
maybe a few lines of code a good example
 

00:24:28.399 --> 00:24:30.279 align:start position:0%
maybe a few lines of code a good example
those<00:24:28.820><c> would</c><00:24:29.000><c> be</c><00:24:29.090><c> get</c><00:24:29.240><c> accessors</c><00:24:29.870><c> finally</c>

00:24:30.279 --> 00:24:30.289 align:start position:0%
those would be get accessors finally
 

00:24:30.289 --> 00:24:32.350 align:start position:0%
those would be get accessors finally
gets<00:24:30.559><c> getters</c><00:24:30.980><c> and</c><00:24:31.009><c> setters</c><00:24:31.190><c> for</c><00:24:31.970><c> your</c><00:24:32.120><c> class</c>

00:24:32.350 --> 00:24:32.360 align:start position:0%
gets getters and setters for your class
 

00:24:32.360 --> 00:24:34.840 align:start position:0%
gets getters and setters for your class
and<00:24:32.769><c> isn't</c><00:24:33.769><c> it</c><00:24:33.860><c> a</c><00:24:33.919><c> shame</c><00:24:33.950><c> i</c><00:24:34.309><c> have</c><00:24:34.460><c> to</c><00:24:34.580><c> go</c><00:24:34.700><c> off</c>

00:24:34.840 --> 00:24:34.850 align:start position:0%
and isn't it a shame i have to go off
 

00:24:34.850 --> 00:24:36.340 align:start position:0%
and isn't it a shame i have to go off
and<00:24:35.059><c> call</c><00:24:35.210><c> this</c><00:24:35.330><c> method</c><00:24:35.539><c> because</c><00:24:35.929><c> this</c><00:24:36.139><c> code</c>

00:24:36.340 --> 00:24:36.350 align:start position:0%
and call this method because this code
 

00:24:36.350 --> 00:24:38.889 align:start position:0%
and call this method because this code
could<00:24:36.559><c> fit</c><00:24:36.919><c> in</c><00:24:37.039><c> rates</c><00:24:37.309><c> Rajon</c><00:24:38.090><c> lineman</c><00:24:38.480><c> and</c><00:24:38.690><c> be</c>

00:24:38.889 --> 00:24:38.899 align:start position:0%
could fit in rates Rajon lineman and be
 

00:24:38.899 --> 00:24:41.350 align:start position:0%
could fit in rates Rajon lineman and be
very<00:24:39.049><c> inexpensive</c><00:24:39.649><c> but</c><00:24:40.549><c> but</c><00:24:41.000><c> this</c><00:24:41.120><c> is</c><00:24:41.240><c> what</c>

00:24:41.350 --> 00:24:41.360 align:start position:0%
very inexpensive but but this is what
 

00:24:41.360 --> 00:24:43.210 align:start position:0%
very inexpensive but but this is what
the<00:24:41.450><c> JIT</c><00:24:41.629><c> does</c><00:24:41.809><c> for</c><00:24:42.080><c> you</c><00:24:42.169><c> it</c><00:24:42.679><c> goes</c><00:24:42.860><c> off</c><00:24:43.070><c> and</c>

00:24:43.210 --> 00:24:43.220 align:start position:0%
the JIT does for you it goes off and
 

00:24:43.220 --> 00:24:44.590 align:start position:0%
the JIT does for you it goes off and
says<00:24:43.340><c> hope</c><00:24:43.490><c> that's</c><00:24:43.730><c> a</c><00:24:43.820><c> really</c><00:24:44.029><c> simple</c><00:24:44.269><c> method</c>

00:24:44.590 --> 00:24:44.600 align:start position:0%
says hope that's a really simple method
 

00:24:44.600 --> 00:24:46.810 align:start position:0%
says hope that's a really simple method
it's<00:24:45.019><c> I</c><00:24:45.320><c> can</c><00:24:45.470><c> deter</c><00:24:45.710><c> I</c><00:24:45.740><c> determined</c><00:24:46.580><c> that</c><00:24:46.610><c> it's</c>

00:24:46.810 --> 00:24:46.820 align:start position:0%
it's I can deter I determined that it's
 

00:24:46.820 --> 00:24:48.369 align:start position:0%
it's I can deter I determined that it's
monomorphic<00:24:47.149><c> there's</c><00:24:47.539><c> nobody</c><00:24:47.809><c> over</c><00:24:47.870><c> writing</c>

00:24:48.369 --> 00:24:48.379 align:start position:0%
monomorphic there's nobody over writing
 

00:24:48.379 --> 00:24:49.990 align:start position:0%
monomorphic there's nobody over writing
this<00:24:48.500><c> so</c><00:24:49.129><c> I'm</c><00:24:49.220><c> just</c><00:24:49.250><c> going</c><00:24:49.460><c> to</c><00:24:49.519><c> in</c><00:24:49.669><c> line</c><00:24:49.850><c> is</c>

00:24:49.990 --> 00:24:50.000 align:start position:0%
this so I'm just going to in line is
 

00:24:50.000 --> 00:24:51.820 align:start position:0%
this so I'm just going to in line is
code<00:24:50.210><c> in</c><00:24:50.389><c> and</c><00:24:50.600><c> the</c><00:24:51.139><c> code</c><00:24:51.350><c> becomes</c><00:24:51.620><c> very</c>

00:24:51.820 --> 00:24:51.830 align:start position:0%
code in and the code becomes very
 

00:24:51.830 --> 00:24:54.070 align:start position:0%
code in and the code becomes very
instant

00:24:54.070 --> 00:24:54.080 align:start position:0%
instant
 

00:24:54.080 --> 00:24:57.779 align:start position:0%
instant
now<00:24:55.000><c> there's</c><00:24:56.000><c> always</c><00:24:56.149><c> the</c><00:24:56.330><c> possibility</c><00:24:56.480><c> that</c>

00:24:57.779 --> 00:24:57.789 align:start position:0%
now there's always the possibility that
 

00:24:57.789 --> 00:25:00.549 align:start position:0%
now there's always the possibility that
that<00:24:58.789><c> method</c><00:24:59.390><c> may</c><00:24:59.510><c> get</c><00:24:59.720><c> overloaded</c><00:25:00.110><c> as</c><00:25:00.409><c> some</c>

00:25:00.549 --> 00:25:00.559 align:start position:0%
that method may get overloaded as some
 

00:25:00.559 --> 00:25:02.139 align:start position:0%
that method may get overloaded as some
other<00:25:00.740><c> or</c><00:25:01.039><c> not</c><00:25:01.159><c> overloaded</c><00:25:01.610><c> but</c><00:25:01.760><c> overridden</c>

00:25:02.139 --> 00:25:02.149 align:start position:0%
other or not overloaded but overridden
 

00:25:02.149 --> 00:25:05.080 align:start position:0%
other or not overloaded but overridden
it<00:25:02.330><c> some</c><00:25:02.450><c> other</c><00:25:02.480><c> time</c><00:25:03.159><c> so</c><00:25:04.159><c> what</c><00:25:04.640><c> will</c><00:25:04.760><c> happen</c>

00:25:05.080 --> 00:25:05.090 align:start position:0%
it some other time so what will happen
 

00:25:05.090 --> 00:25:07.990 align:start position:0%
it some other time so what will happen
in<00:25:05.210><c> the</c><00:25:05.809><c> just-in-time</c><00:25:06.320><c> compiler</c><00:25:07.000><c> environment</c>

00:25:07.990 --> 00:25:08.000 align:start position:0%
in the just-in-time compiler environment
 

00:25:08.000 --> 00:25:10.240 align:start position:0%
in the just-in-time compiler environment
is<00:25:08.149><c> it</c><00:25:08.570><c> it</c><00:25:08.779><c> may</c><00:25:08.960><c> create</c><00:25:09.169><c> several</c><00:25:09.620><c> flavors</c><00:25:09.980><c> of</c>

00:25:10.240 --> 00:25:10.250 align:start position:0%
is it it may create several flavors of
 

00:25:10.250 --> 00:25:12.669 align:start position:0%
is it it may create several flavors of
the<00:25:10.549><c> same</c><00:25:10.760><c> method</c><00:25:11.149><c> so</c><00:25:11.929><c> you</c><00:25:12.019><c> may</c><00:25:12.169><c> have</c><00:25:12.409><c> several</c>

00:25:12.669 --> 00:25:12.679 align:start position:0%
the same method so you may have several
 

00:25:12.679 --> 00:25:14.289 align:start position:0%
the same method so you may have several
different<00:25:13.070><c> versions</c><00:25:13.100><c> of</c><00:25:13.519><c> that</c><00:25:13.669><c> method</c><00:25:13.850><c> for</c>

00:25:14.289 --> 00:25:14.299 align:start position:0%
different versions of that method for
 

00:25:14.299 --> 00:25:17.169 align:start position:0%
different versions of that method for
one<00:25:14.510><c> where</c><00:25:14.750><c> it</c><00:25:14.990><c> may</c><00:25:15.710><c> be</c><00:25:15.769><c> a</c><00:25:15.860><c> call</c><00:25:16.190><c> is</c><00:25:16.519><c> overloaded</c>

00:25:17.169 --> 00:25:17.179 align:start position:0%
one where it may be a call is overloaded
 

00:25:17.179 --> 00:25:20.529 align:start position:0%
one where it may be a call is overloaded
or<00:25:17.360><c> overwritten</c><00:25:18.169><c> and</c><00:25:18.940><c> another</c><00:25:19.940><c> case</c><00:25:20.149><c> where</c><00:25:20.390><c> it</c>

00:25:20.529 --> 00:25:20.539 align:start position:0%
or overwritten and another case where it
 

00:25:20.539 --> 00:25:22.960 align:start position:0%
or overwritten and another case where it
isn't<00:25:20.659><c> over</c><00:25:20.870><c> so</c><00:25:21.649><c> you</c><00:25:21.740><c> so</c><00:25:22.279><c> what</c><00:25:22.490><c> happens</c><00:25:22.820><c> is</c>

00:25:22.960 --> 00:25:22.970 align:start position:0%
isn't over so you so what happens is
 

00:25:22.970 --> 00:25:24.820 align:start position:0%
isn't over so you so what happens is
that<00:25:23.000><c> it's</c><00:25:23.570><c> the</c><00:25:23.720><c> method</c><00:25:24.049><c> that</c><00:25:24.080><c> needs</c><00:25:24.559><c> to</c><00:25:24.740><c> be</c>

00:25:24.820 --> 00:25:24.830 align:start position:0%
that it's the method that needs to be
 

00:25:24.830 --> 00:25:26.500 align:start position:0%
that it's the method that needs to be
executed<00:25:25.039><c> will</c><00:25:25.429><c> be</c><00:25:25.549><c> chosen</c><00:25:25.760><c> that</c><00:25:26.149><c> run</c><00:25:26.330><c> time</c>

00:25:26.500 --> 00:25:26.510 align:start position:0%
executed will be chosen that run time
 

00:25:26.510 --> 00:25:28.149 align:start position:0%
executed will be chosen that run time
and<00:25:26.750><c> will</c><00:25:27.049><c> go</c><00:25:27.230><c> off</c><00:25:27.350><c> and</c><00:25:27.529><c> do</c><00:25:27.620><c> that</c><00:25:27.769><c> code</c><00:25:27.980><c> or</c>

00:25:28.149 --> 00:25:28.159 align:start position:0%
and will go off and do that code or
 

00:25:28.159 --> 00:25:30.279 align:start position:0%
and will go off and do that code or
tutor<00:25:28.460><c> or</c><00:25:28.789><c> which</c><00:25:29.269><c> one</c><00:25:29.480><c> whichever</c><00:25:29.779><c> one</c><00:25:30.019><c> suits</c>

00:25:30.279 --> 00:25:30.289 align:start position:0%
tutor or which one whichever one suits
 

00:25:30.289 --> 00:25:34.570 align:start position:0%
tutor or which one whichever one suits
the<00:25:30.380><c> situation</c><00:25:31.360><c> and</c><00:25:33.100><c> also</c><00:25:34.100><c> should</c><00:25:34.429><c> make</c><00:25:34.549><c> a</c>

00:25:34.570 --> 00:25:34.580 align:start position:0%
the situation and also should make a
 

00:25:34.580 --> 00:25:35.740 align:start position:0%
the situation and also should make a
point<00:25:34.850><c> and</c><00:25:35.059><c> this</c><00:25:35.210><c> is</c><00:25:35.360><c> another</c><00:25:35.600><c> great</c>

00:25:35.740 --> 00:25:35.750 align:start position:0%
point and this is another great
 

00:25:35.750 --> 00:25:38.529 align:start position:0%
point and this is another great
advantage<00:25:36.019><c> of</c><00:25:36.620><c> of</c><00:25:37.370><c> a</c><00:25:38.029><c> different</c><00:25:38.330><c> types</c><00:25:38.450><c> of</c>

00:25:38.529 --> 00:25:38.539 align:start position:0%
advantage of of a different types of
 

00:25:38.539 --> 00:25:40.629 align:start position:0%
advantage of of a different types of
fathers<00:25:38.899><c> is</c><00:25:39.049><c> that</c><00:25:39.200><c> we</c><00:25:39.559><c> can</c><00:25:39.710><c> do</c><00:25:39.919><c> process</c><00:25:40.279><c> or</c>

00:25:40.629 --> 00:25:40.639 align:start position:0%
fathers is that we can do process or
 

00:25:40.639 --> 00:25:45.909 align:start position:0%
fathers is that we can do process or
specific<00:25:41.269><c> optimizations</c><00:25:42.169><c> at</c><00:25:42.350><c> runtime</c><00:25:42.940><c> so</c><00:25:44.919><c> the</c>

00:25:45.909 --> 00:25:45.919 align:start position:0%
specific optimizations at runtime so the
 

00:25:45.919 --> 00:25:48.190 align:start position:0%
specific optimizations at runtime so the
great<00:25:46.130><c> beauty</c><00:25:46.460><c> of</c><00:25:46.669><c> Java</c><00:25:47.480><c> is</c><00:25:47.630><c> that</c><00:25:47.870><c> I</c><00:25:47.960><c> can</c><00:25:48.110><c> take</c>

00:25:48.190 --> 00:25:48.200 align:start position:0%
great beauty of Java is that I can take
 

00:25:48.200 --> 00:25:49.509 align:start position:0%
great beauty of Java is that I can take
this<00:25:48.350><c> bytecode</c><00:25:48.590><c> and</c><00:25:49.010><c> poured</c><00:25:49.220><c> it</c><00:25:49.279><c> to</c><00:25:49.429><c> any</c>

00:25:49.509 --> 00:25:49.519 align:start position:0%
this bytecode and poured it to any
 

00:25:49.519 --> 00:25:51.539 align:start position:0%
this bytecode and poured it to any
machine<00:25:49.970><c> and</c><00:25:50.360><c> have</c><00:25:50.600><c> it</c><00:25:50.720><c> run</c><00:25:50.929><c> on</c><00:25:50.990><c> that</c><00:25:51.260><c> machine</c>

00:25:51.539 --> 00:25:51.549 align:start position:0%
machine and have it run on that machine
 

00:25:51.549 --> 00:25:54.700 align:start position:0%
machine and have it run on that machine
well<00:25:52.549><c> even</c><00:25:52.700><c> on</c><00:25:52.940><c> the</c><00:25:53.120><c> same</c><00:25:53.659><c> architects</c><00:25:54.260><c> general</c>

00:25:54.700 --> 00:25:54.710 align:start position:0%
well even on the same architects general
 

00:25:54.710 --> 00:25:58.480 align:start position:0%
well even on the same architects general
architecture<00:25:54.980><c> like</c><00:25:55.370><c> the</c><00:25:55.460><c> PowerPC</c><00:25:56.139><c> I</c><00:25:57.139><c> can</c><00:25:57.860><c> get</c>

00:25:58.480 --> 00:25:58.490 align:start position:0%
architecture like the PowerPC I can get
 

00:25:58.490 --> 00:26:00.730 align:start position:0%
architecture like the PowerPC I can get
different<00:25:59.029><c> kind</c><00:25:59.360><c> of</c><00:25:59.419><c> optimization</c><00:26:00.049><c> on</c><00:26:00.169><c> the</c><00:26:00.260><c> g3</c>

00:26:00.730 --> 00:26:00.740 align:start position:0%
different kind of optimization on the g3
 

00:26:00.740 --> 00:26:03.279 align:start position:0%
different kind of optimization on the g3
than<00:26:01.039><c> I</c><00:26:01.130><c> was</c><00:26:01.340><c> on</c><00:26:01.639><c> a</c><00:26:01.669><c> g4</c><00:26:02.210><c> because</c><00:26:02.630><c> of</c><00:26:02.929><c> scheduling</c>

00:26:03.279 --> 00:26:03.289 align:start position:0%
than I was on a g4 because of scheduling
 

00:26:03.289 --> 00:26:05.259 align:start position:0%
than I was on a g4 because of scheduling
and<00:26:03.710><c> so</c><00:26:03.860><c> and</c><00:26:04.010><c> so</c><00:26:04.070><c> forth</c><00:26:04.399><c> so</c><00:26:04.909><c> the</c><00:26:05.000><c> types</c><00:26:05.179><c> of</c>

00:26:05.259 --> 00:26:05.269 align:start position:0%
and so and so forth so the types of
 

00:26:05.269 --> 00:26:07.720 align:start position:0%
and so and so forth so the types of
things<00:26:05.389><c> that</c><00:26:05.510><c> you</c><00:26:05.659><c> could</c><00:26:05.809><c> do</c><00:26:05.960><c> would</c><00:26:06.649><c> be</c><00:26:06.830><c> to</c><00:26:06.860><c> say</c>

00:26:07.720 --> 00:26:07.730 align:start position:0%
things that you could do would be to say
 

00:26:07.730 --> 00:26:09.190 align:start position:0%
things that you could do would be to say
on<00:26:07.820><c> the</c><00:26:07.909><c> part</c><00:26:08.090><c> we</c><00:26:08.179><c> see</c><00:26:08.360><c> I</c><00:26:08.389><c> can</c><00:26:08.600><c> use</c><00:26:08.720><c> masks</c><00:26:08.960><c> and</c>

00:26:09.190 --> 00:26:09.200 align:start position:0%
on the part we see I can use masks and
 

00:26:09.200 --> 00:26:10.990 align:start position:0%
on the part we see I can use masks and
shift<00:26:09.380><c> operations</c><00:26:09.980><c> or</c><00:26:10.190><c> if</c><00:26:10.580><c> I'm</c><00:26:10.700><c> running</c><00:26:10.909><c> on</c>

00:26:10.990 --> 00:26:11.000 align:start position:0%
shift operations or if I'm running on
 

00:26:11.000 --> 00:26:12.909 align:start position:0%
shift operations or if I'm running on
the<00:26:11.059><c> g4</c><00:26:11.510><c> I</c><00:26:11.779><c> can</c><00:26:11.990><c> use</c><00:26:12.139><c> the</c><00:26:12.260><c> velocity</c><00:26:12.710><c> engine</c>

00:26:12.909 --> 00:26:12.919 align:start position:0%
the g4 I can use the velocity engine
 

00:26:12.919 --> 00:26:15.159 align:start position:0%
the g4 I can use the velocity engine
instructions<00:26:13.460><c> right</c><00:26:14.179><c> so</c><00:26:14.389><c> I</c><00:26:14.419><c> can</c><00:26:14.600><c> do</c><00:26:14.720><c> that</c><00:26:14.870><c> on</c>

00:26:15.159 --> 00:26:15.169 align:start position:0%
instructions right so I can do that on
 

00:26:15.169 --> 00:26:18.070 align:start position:0%
instructions right so I can do that on
the<00:26:15.500><c> fly</c><00:26:15.740><c> and</c><00:26:16.010><c> then</c><00:26:16.880><c> I</c><00:26:17.000><c> can</c><00:26:17.179><c> do</c><00:26:17.299><c> instruction</c>

00:26:18.070 --> 00:26:18.080 align:start position:0%
the fly and then I can do instruction
 

00:26:18.080 --> 00:26:20.080 align:start position:0%
the fly and then I can do instruction
scheduling<00:26:18.320><c> and</c><00:26:18.769><c> once</c><00:26:19.279><c> I've</c><00:26:19.429><c> done</c><00:26:19.580><c> that</c><00:26:19.639><c> on</c><00:26:20.000><c> a</c>

00:26:20.080 --> 00:26:20.090 align:start position:0%
scheduling and once I've done that on a
 

00:26:20.090 --> 00:26:22.060 align:start position:0%
scheduling and once I've done that on a
particular<00:26:20.480><c> implement</c><00:26:21.200><c> our</c><00:26:21.289><c> particular</c>

00:26:22.060 --> 00:26:22.070 align:start position:0%
particular implement our particular
 

00:26:22.070 --> 00:26:24.159 align:start position:0%
particular implement our particular
machine<00:26:22.309><c> that</c><00:26:22.610><c> I'm</c><00:26:22.700><c> running</c><00:26:23.000><c> on</c><00:26:23.090><c> I</c><00:26:23.360><c> can</c><00:26:23.960><c> cash</c>

00:26:24.159 --> 00:26:24.169 align:start position:0%
machine that I'm running on I can cash
 

00:26:24.169 --> 00:26:26.649 align:start position:0%
machine that I'm running on I can cash
the<00:26:24.470><c> code</c><00:26:24.679><c> that</c><00:26:24.889><c> are</c><00:26:25.010><c> generated</c><00:26:25.549><c> so</c><00:26:26.360><c> the</c><00:26:26.480><c> next</c>

00:26:26.649 --> 00:26:26.659 align:start position:0%
the code that are generated so the next
 

00:26:26.659 --> 00:26:29.590 align:start position:0%
the code that are generated so the next
time<00:26:26.929><c> I</c><00:26:27.289><c> go</c><00:26:27.769><c> and</c><00:26:27.980><c> execute</c><00:26:28.250><c> it</c><00:26:28.549><c> I'm</c><00:26:29.090><c> going</c><00:26:29.450><c> to</c>

00:26:29.590 --> 00:26:29.600 align:start position:0%
time I go and execute it I'm going to
 

00:26:29.600 --> 00:26:30.850 align:start position:0%
time I go and execute it I'm going to
use<00:26:29.750><c> that</c><00:26:29.779><c> cash</c><00:26:30.139><c> code</c><00:26:30.409><c> they</c><00:26:30.559><c> don't</c><00:26:30.710><c> have</c><00:26:30.799><c> to</c>

00:26:30.850 --> 00:26:30.860 align:start position:0%
use that cash code they don't have to
 

00:26:30.860 --> 00:26:33.399 align:start position:0%
use that cash code they don't have to
recompile<00:26:31.340><c> it</c><00:26:31.549><c> and</c><00:26:31.730><c> that</c><00:26:32.570><c> code</c><00:26:32.840><c> is</c><00:26:33.019><c> already</c>

00:26:33.399 --> 00:26:33.409 align:start position:0%
recompile it and that code is already
 

00:26:33.409 --> 00:26:34.779 align:start position:0%
recompile it and that code is already
been<00:26:33.559><c> tailored</c><00:26:34.010><c> for</c><00:26:34.190><c> the</c><00:26:34.309><c> machine</c><00:26:34.610><c> that's</c>

00:26:34.779 --> 00:26:34.789 align:start position:0%
been tailored for the machine that's
 

00:26:34.789 --> 00:26:38.899 align:start position:0%
been tailored for the machine that's
running<00:26:34.850><c> on</c>

00:26:38.899 --> 00:26:38.909 align:start position:0%
 
 

00:26:38.909 --> 00:26:42.210 align:start position:0%
 
ok<00:26:39.909><c> so</c><00:26:39.970><c> what</c><00:26:40.179><c> gets</c><00:26:40.360><c> compiled</c><00:26:41.009><c> now</c><00:26:42.009><c> that</c>

00:26:42.210 --> 00:26:42.220 align:start position:0%
ok so what gets compiled now that
 

00:26:42.220 --> 00:26:44.909 align:start position:0%
ok so what gets compiled now that
there's<00:26:42.429><c> probably</c><00:26:43.210><c> all</c><00:26:43.389><c> kinds</c><00:26:43.720><c> of</c><00:26:43.919><c> myths</c>

00:26:44.909 --> 00:26:44.919 align:start position:0%
there's probably all kinds of myths
 

00:26:44.919 --> 00:26:47.999 align:start position:0%
there's probably all kinds of myths
about<00:26:45.159><c> their</c><00:26:45.610><c> boats</c><00:26:45.850><c> all</c><00:26:46.360><c> these</c><00:26:46.539><c> magics</c><00:26:47.009><c> her</c>

00:26:47.999 --> 00:26:48.009 align:start position:0%
about their boats all these magics her
 

00:26:48.009 --> 00:26:50.759 align:start position:0%
about their boats all these magics her
sticks<00:26:48.309><c> that</c><00:26:48.669><c> we</c><00:26:48.850><c> used</c><00:26:49.120><c> to</c><00:26:49.899><c> figure</c><00:26:50.409><c> out</c><00:26:50.620><c> what</c>

00:26:50.759 --> 00:26:50.769 align:start position:0%
sticks that we used to figure out what
 

00:26:50.769 --> 00:26:54.899 align:start position:0%
sticks that we used to figure out what
method<00:26:51.159><c> gets</c><00:26:51.820><c> executed</c><00:26:52.149><c> and</c><00:26:53.490><c> there</c><00:26:54.490><c> is</c><00:26:54.669><c> some</c>

00:26:54.899 --> 00:26:54.909 align:start position:0%
method gets executed and there is some
 

00:26:54.909 --> 00:26:57.360 align:start position:0%
method gets executed and there is some
some<00:26:55.419><c> truth</c><00:26:55.629><c> to</c><00:26:55.779><c> rumors</c><00:26:56.019><c> but</c><00:26:56.139><c> generally</c><00:26:56.620><c> the</c>

00:26:57.360 --> 00:26:57.370 align:start position:0%
some truth to rumors but generally the
 

00:26:57.370 --> 00:27:00.659 align:start position:0%
some truth to rumors but generally the
things<00:26:57.610><c> that</c><00:26:57.789><c> do</c><00:26:57.940><c> get</c><00:26:58.179><c> compiled</c><00:26:58.840><c> into</c><00:26:59.669><c> native</c>

00:27:00.659 --> 00:27:00.669 align:start position:0%
things that do get compiled into native
 

00:27:00.669 --> 00:27:03.149 align:start position:0%
things that do get compiled into native
language<00:27:01.179><c> our</c><00:27:01.480><c> native</c><00:27:01.870><c> machine</c><00:27:01.990><c> code</c><00:27:02.169><c> our</c>

00:27:03.149 --> 00:27:03.159 align:start position:0%
language our native machine code our
 

00:27:03.159 --> 00:27:07.070 align:start position:0%
language our native machine code our
primarily<00:27:03.730><c> methods</c><00:27:04.450><c> that</c><00:27:04.539><c> have</c><00:27:04.690><c> loops</c><00:27:05.340><c> and</c>

00:27:07.070 --> 00:27:07.080 align:start position:0%
primarily methods that have loops and
 

00:27:07.080 --> 00:27:09.480 align:start position:0%
primarily methods that have loops and
methods<00:27:08.080><c> that</c><00:27:08.230><c> have</c><00:27:08.320><c> interpreted</c><00:27:08.919><c> and</c><00:27:09.159><c> number</c>

00:27:09.480 --> 00:27:09.490 align:start position:0%
methods that have interpreted and number
 

00:27:09.490 --> 00:27:11.489 align:start position:0%
methods that have interpreted and number
of<00:27:09.580><c> times</c><00:27:09.820><c> so</c><00:27:10.509><c> those</c><00:27:10.929><c> are</c><00:27:11.080><c> the</c><00:27:11.110><c> two</c><00:27:11.200><c> primary</c>

00:27:11.489 --> 00:27:11.499 align:start position:0%
of times so those are the two primary
 

00:27:11.499 --> 00:27:13.590 align:start position:0%
of times so those are the two primary
triggers<00:27:12.279><c> the</c><00:27:12.490><c> trigger</c><00:27:12.730><c> whether</c><00:27:13.269><c> something</c>

00:27:13.590 --> 00:27:13.600 align:start position:0%
triggers the trigger whether something
 

00:27:13.600 --> 00:27:16.440 align:start position:0%
triggers the trigger whether something
gets<00:27:13.779><c> converted</c><00:27:13.990><c> to</c><00:27:14.230><c> negative</c><00:27:14.710><c> is</c><00:27:14.799><c> coconut</c><00:27:15.450><c> a</c>

00:27:16.440 --> 00:27:16.450 align:start position:0%
gets converted to negative is coconut a
 

00:27:16.450 --> 00:27:18.330 align:start position:0%
gets converted to negative is coconut a
method<00:27:17.080><c> that</c><00:27:17.110><c> has</c><00:27:17.379><c> a</c><00:27:17.440><c> loop</c><00:27:17.679><c> may</c><00:27:17.860><c> get</c><00:27:18.039><c> executed</c>

00:27:18.330 --> 00:27:18.340 align:start position:0%
method that has a loop may get executed
 

00:27:18.340 --> 00:27:20.999 align:start position:0%
method that has a loop may get executed
once<00:27:18.759><c> in</c><00:27:18.940><c> the</c><00:27:19.029><c> interpreter</c><00:27:19.509><c> but</c><00:27:20.080><c> then</c><00:27:20.289><c> each</c><00:27:20.980><c> of</c>

00:27:20.999 --> 00:27:21.009 align:start position:0%
once in the interpreter but then each of
 

00:27:21.009 --> 00:27:23.310 align:start position:0%
once in the interpreter but then each of
such<00:27:21.340><c> a</c><00:27:21.369><c> time</c><00:27:21.669><c> that</c><00:27:21.909><c> it</c><00:27:21.999><c> may</c><00:27:22.090><c> get</c><00:27:22.320><c> converted</c>

00:27:23.310 --> 00:27:23.320 align:start position:0%
such a time that it may get converted
 

00:27:23.320 --> 00:27:26.159 align:start position:0%
such a time that it may get converted
the<00:27:23.529><c> native</c><00:27:23.740><c> code</c><00:27:23.860><c> and</c><00:27:24.039><c> get</c><00:27:24.129><c> run</c><00:27:25.049><c> run</c><00:27:26.049><c> as</c>

00:27:26.159 --> 00:27:26.169 align:start position:0%
the native code and get run run as
 

00:27:26.169 --> 00:27:29.190 align:start position:0%
the native code and get run run as
native<00:27:26.409><c> code</c><00:27:26.590><c> and</c><00:27:27.179><c> the</c><00:27:28.179><c> triggers</c><00:27:28.539><c> for</c><00:27:28.869><c> a</c>

00:27:29.190 --> 00:27:29.200 align:start position:0%
native code and the triggers for a
 

00:27:29.200 --> 00:27:30.869 align:start position:0%
native code and the triggers for a
number<00:27:29.529><c> of</c><00:27:29.679><c> times</c><00:27:29.860><c> I</c><00:27:30.100><c> said</c><00:27:30.279><c> n</c><00:27:30.429><c> number</c><00:27:30.639><c> of</c><00:27:30.700><c> times</c>

00:27:30.869 --> 00:27:30.879 align:start position:0%
number of times I said n number of times
 

00:27:30.879 --> 00:27:32.970 align:start position:0%
number of times I said n number of times
because<00:27:31.179><c> different</c><00:27:31.659><c> Jets</c><00:27:32.110><c> trigger</c><00:27:32.710><c> at</c>

00:27:32.970 --> 00:27:32.980 align:start position:0%
because different Jets trigger at
 

00:27:32.980 --> 00:27:34.440 align:start position:0%
because different Jets trigger at
different<00:27:33.279><c> levels</c><00:27:33.369><c> like</c><00:27:33.610><c> hotspot</c><00:27:34.090><c> triggers</c>

00:27:34.440 --> 00:27:34.450 align:start position:0%
different levels like hotspot triggers
 

00:27:34.450 --> 00:27:36.989 align:start position:0%
different levels like hotspot triggers
at<00:27:34.600><c> around</c><00:27:35.230><c> 1500</c><00:27:35.919><c> executions</c><00:27:36.549><c> before</c><00:27:36.909><c> it</c>

00:27:36.989 --> 00:27:36.999 align:start position:0%
at around 1500 executions before it
 

00:27:36.999 --> 00:27:38.430 align:start position:0%
at around 1500 executions before it
actually<00:27:37.119><c> goes</c><00:27:37.480><c> and</c><00:27:37.749><c> convert</c><00:27:38.289><c> the</c><00:27:38.409><c> natives</c>

00:27:38.430 --> 00:27:38.440 align:start position:0%
actually goes and convert the natives
 

00:27:38.440 --> 00:27:40.710 align:start position:0%
actually goes and convert the natives
but<00:27:39.220><c> that's</c><00:27:39.490><c> bec</c><00:27:39.669><c> that</c><00:27:39.700><c> fluctuates</c><00:27:40.450><c> depending</c>

00:27:40.710 --> 00:27:40.720 align:start position:0%
but that's bec that fluctuates depending
 

00:27:40.720 --> 00:27:44.070 align:start position:0%
but that's bec that fluctuates depending
on<00:27:41.139><c> different</c><00:27:41.679><c> kinds</c><00:27:42.070><c> of</c><00:27:42.100><c> criteria</c><00:27:43.080><c> what</c>

00:27:44.070 --> 00:27:44.080 align:start position:0%
on different kinds of criteria what
 

00:27:44.080 --> 00:27:45.690 align:start position:0%
on different kinds of criteria what
doesn't<00:27:44.409><c> get</c><00:27:44.529><c> compiled</c><00:27:44.889><c> are</c><00:27:45.220><c> typically</c>

00:27:45.690 --> 00:27:45.700 align:start position:0%
doesn't get compiled are typically
 

00:27:45.700 --> 00:27:48.330 align:start position:0%
doesn't get compiled are typically
things<00:27:46.059><c> that</c><00:27:46.679><c> say</c><00:27:47.679><c> if</c><00:27:47.769><c> you</c><00:27:47.860><c> have</c><00:27:47.950><c> a</c><00:27:47.980><c> method</c>

00:27:48.330 --> 00:27:48.340 align:start position:0%
things that say if you have a method
 

00:27:48.340 --> 00:27:49.710 align:start position:0%
things that say if you have a method
that's<00:27:48.460><c> currently</c><00:27:48.879><c> running</c><00:27:49.149><c> and</c><00:27:49.450><c> it's</c>

00:27:49.710 --> 00:27:49.720 align:start position:0%
that's currently running and it's
 

00:27:49.720 --> 00:27:51.419 align:start position:0%
that's currently running and it's
looping<00:27:50.110><c> and</c><00:27:50.289><c> calling</c><00:27:50.559><c> other</c><00:27:50.769><c> things</c><00:27:51.100><c> and</c><00:27:51.340><c> it</c>

00:27:51.419 --> 00:27:51.429 align:start position:0%
looping and calling other things and it
 

00:27:51.429 --> 00:27:55.859 align:start position:0%
looping and calling other things and it
seems<00:27:51.669><c> to</c><00:27:51.789><c> be</c><00:27:51.960><c> looping</c><00:27:52.960><c> for</c><00:27:53.110><c> a</c><00:27:53.169><c> long</c><00:27:53.320><c> time</c><00:27:54.869><c> if</c>

00:27:55.859 --> 00:27:55.869 align:start position:0%
seems to be looping for a long time if
 

00:27:55.869 --> 00:27:58.019 align:start position:0%
seems to be looping for a long time if
it<00:27:56.049><c> didn't</c><00:27:56.289><c> get</c><00:27:56.379><c> meet</c><00:27:56.889><c> the</c><00:27:57.129><c> original</c><00:27:57.789><c> loop</c>

00:27:58.019 --> 00:27:58.029 align:start position:0%
it didn't get meet the original loop
 

00:27:58.029 --> 00:27:59.759 align:start position:0%
it didn't get meet the original loop
criterion<00:27:58.629><c> didn't</c><00:27:58.840><c> you</c><00:27:58.899><c> compiled</c><00:27:59.259><c> it</c><00:27:59.440><c> may</c><00:27:59.529><c> sit</c>

00:27:59.759 --> 00:27:59.769 align:start position:0%
criterion didn't you compiled it may sit
 

00:27:59.769 --> 00:28:02.460 align:start position:0%
criterion didn't you compiled it may sit
there<00:28:00.009><c> and</c><00:28:00.190><c> a</c><00:28:00.909><c> trip</c><00:28:01.119><c> continuous</c><00:28:02.110><c> as</c><00:28:02.320><c> an</c>

00:28:02.460 --> 00:28:02.470 align:start position:0%
there and a trip continuous as an
 

00:28:02.470 --> 00:28:04.169 align:start position:0%
there and a trip continuous as an
interpreter<00:28:02.830><c> this</c><00:28:03.549><c> is</c><00:28:03.700><c> something</c><00:28:03.850><c> that</c><00:28:04.059><c> would</c>

00:28:04.169 --> 00:28:04.179 align:start position:0%
interpreter this is something that would
 

00:28:04.179 --> 00:28:06.149 align:start position:0%
interpreter this is something that would
require<00:28:04.330><c> on</c><00:28:04.809><c> stack</c><00:28:05.139><c> replacement</c><00:28:05.769><c> and</c><00:28:06.100><c> the</c>

00:28:06.149 --> 00:28:06.159 align:start position:0%
require on stack replacement and the
 

00:28:06.159 --> 00:28:07.560 align:start position:0%
require on stack replacement and the
current<00:28:06.399><c> version</c><00:28:06.669><c> of</c><00:28:06.730><c> hotspot</c><00:28:07.119><c> we</c><00:28:07.210><c> don't</c><00:28:07.389><c> have</c>

00:28:07.560 --> 00:28:07.570 align:start position:0%
current version of hotspot we don't have
 

00:28:07.570 --> 00:28:09.600 align:start position:0%
current version of hotspot we don't have
that<00:28:07.600><c> in</c><00:28:08.049><c> place</c><00:28:08.080><c> yet</c><00:28:08.529><c> but</c><00:28:09.070><c> you</c><00:28:09.159><c> should</c><00:28:09.369><c> be</c><00:28:09.399><c> able</c>

00:28:09.600 --> 00:28:09.610 align:start position:0%
that in place yet but you should be able
 

00:28:09.610 --> 00:28:11.850 align:start position:0%
that in place yet but you should be able
to<00:28:09.879><c> replace</c><00:28:10.379><c> eventually</c><00:28:11.379><c> will</c><00:28:11.499><c> be</c><00:28:11.590><c> able</c><00:28:11.679><c> to</c>

00:28:11.850 --> 00:28:11.860 align:start position:0%
to replace eventually will be able to
 

00:28:11.860 --> 00:28:13.590 align:start position:0%
to replace eventually will be able to
replace<00:28:12.070><c> a</c><00:28:12.460><c> next</c><00:28:12.999><c> something</c><00:28:13.389><c> that's</c>

00:28:13.590 --> 00:28:13.600 align:start position:0%
replace a next something that's
 

00:28:13.600 --> 00:28:15.480 align:start position:0%
replace a next something that's
currently<00:28:14.440><c> being</c><00:28:14.499><c> interpreted</c><00:28:14.980><c> with</c>

00:28:15.480 --> 00:28:15.490 align:start position:0%
currently being interpreted with
 

00:28:15.490 --> 00:28:19.169 align:start position:0%
currently being interpreted with
something<00:28:15.970><c> that's</c><00:28:16.570><c> been</c><00:28:16.809><c> compiled</c><00:28:18.029><c> but</c><00:28:19.029><c> that</c>

00:28:19.169 --> 00:28:19.179 align:start position:0%
something that's been compiled but that
 

00:28:19.179 --> 00:28:20.700 align:start position:0%
something that's been compiled but that
doesn't<00:28:19.509><c> prevent</c><00:28:19.690><c> that</c><00:28:20.049><c> method</c><00:28:20.350><c> from</c><00:28:20.440><c> being</c>

00:28:20.700 --> 00:28:20.710 align:start position:0%
doesn't prevent that method from being
 

00:28:20.710 --> 00:28:22.230 align:start position:0%
doesn't prevent that method from being
compiled<00:28:21.009><c> what</c><00:28:21.220><c> happens</c><00:28:21.580><c> is</c><00:28:21.730><c> that</c><00:28:21.759><c> if</c><00:28:21.970><c> that</c>

00:28:22.230 --> 00:28:22.240 align:start position:0%
compiled what happens is that if that
 

00:28:22.240 --> 00:28:23.609 align:start position:0%
compiled what happens is that if that
method<00:28:22.539><c> is</c><00:28:22.629><c> being</c><00:28:22.779><c> called</c><00:28:23.080><c> by</c><00:28:23.289><c> any</c><00:28:23.470><c> other</c>

00:28:23.609 --> 00:28:23.619 align:start position:0%
method is being called by any other
 

00:28:23.619 --> 00:28:28.109 align:start position:0%
method is being called by any other
point<00:28:23.950><c> in</c><00:28:24.129><c> your</c><00:28:24.940><c> application</c><00:28:25.649><c> then</c><00:28:26.669><c> it</c><00:28:27.669><c> will</c>

00:28:28.109 --> 00:28:28.119 align:start position:0%
point in your application then it will
 

00:28:28.119 --> 00:28:29.549 align:start position:0%
point in your application then it will
use<00:28:28.330><c> the</c><00:28:28.450><c> compiled</c><00:28:28.779><c> version</c><00:28:28.899><c> of</c><00:28:29.259><c> it</c><00:28:29.350><c> because</c>

00:28:29.549 --> 00:28:29.559 align:start position:0%
use the compiled version of it because
 

00:28:29.559 --> 00:28:30.419 align:start position:0%
use the compiled version of it because
it's<00:28:29.679><c> already</c><00:28:29.830><c> been</c><00:28:30.009><c> triggered</c><00:28:30.279><c> to</c><00:28:30.340><c> be</c>

00:28:30.419 --> 00:28:30.429 align:start position:0%
it's already been triggered to be
 

00:28:30.429 --> 00:28:33.389 align:start position:0%
it's already been triggered to be
compliant<00:28:31.289><c> class</c><00:28:32.289><c> initializers</c><00:28:32.919><c> typically</c>

00:28:33.389 --> 00:28:33.399 align:start position:0%
compliant class initializers typically
 

00:28:33.399 --> 00:28:36.299 align:start position:0%
compliant class initializers typically
don't<00:28:33.580><c> get</c><00:28:33.970><c> off</c><00:28:34.710><c> compiled</c><00:28:35.710><c> because</c><00:28:36.039><c> the</c><00:28:36.159><c> fact</c>

00:28:36.299 --> 00:28:36.309 align:start position:0%
don't get off compiled because the fact
 

00:28:36.309 --> 00:28:37.139 align:start position:0%
don't get off compiled because the fact
that<00:28:36.399><c> they're</c><00:28:36.610><c> only</c>

00:28:37.139 --> 00:28:37.149 align:start position:0%
that they're only
 

00:28:37.149 --> 00:28:38.669 align:start position:0%
that they're only
just<00:28:37.330><c> one</c><00:28:37.479><c> that</c><00:28:37.779><c> usually</c><00:28:38.200><c> do</c><00:28:38.529><c> the</c>

00:28:38.669 --> 00:28:38.679 align:start position:0%
just one that usually do the
 

00:28:38.679 --> 00:28:40.229 align:start position:0%
just one that usually do the
initialization<00:28:39.009><c> of</c><00:28:39.429><c> their</c><00:28:39.580><c> statics</c><00:28:40.059><c> and</c>

00:28:40.229 --> 00:28:40.239 align:start position:0%
initialization of their statics and
 

00:28:40.239 --> 00:28:41.789 align:start position:0%
initialization of their statics and
create<00:28:40.929><c> whatever</c><00:28:41.080><c> things</c><00:28:41.440><c> that</c><00:28:41.559><c> they</c><00:28:41.649><c> need</c>

00:28:41.789 --> 00:28:41.799 align:start position:0%
create whatever things that they need
 

00:28:41.799 --> 00:28:43.709 align:start position:0%
create whatever things that they need
they<00:28:41.979><c> don't</c><00:28:42.009><c> need</c><00:28:42.729><c> to</c><00:28:42.820><c> go</c><00:28:42.940><c> beyond</c><00:28:43.239><c> that</c><00:28:43.330><c> so</c>

00:28:43.709 --> 00:28:43.719 align:start position:0%
they don't need to go beyond that so
 

00:28:43.719 --> 00:28:49.259 align:start position:0%
they don't need to go beyond that so
they<00:28:44.559><c> typically</c><00:28:45.869><c> don't</c><00:28:46.869><c> get</c><00:28:47.309><c> compiled</c><00:28:48.309><c> and</c>

00:28:49.259 --> 00:28:49.269 align:start position:0%
they typically don't get compiled and
 

00:28:49.269 --> 00:28:51.419 align:start position:0%
they typically don't get compiled and
finally<00:28:49.869><c> things</c><00:28:50.769><c> are</c><00:28:50.859><c> written</c><00:28:51.039><c> in</c><00:28:51.219><c> Java</c>

00:28:51.419 --> 00:28:51.429 align:start position:0%
finally things are written in Java
 

00:28:51.429 --> 00:28:54.839 align:start position:0%
finally things are written in Java
assembler<00:28:52.440><c> that</c><00:28:53.440><c> are</c><00:28:53.710><c> very</c><00:28:53.919><c> convoluted</c><00:28:54.369><c> and</c>

00:28:54.839 --> 00:28:54.849 align:start position:0%
assembler that are very convoluted and
 

00:28:54.849 --> 00:28:56.519 align:start position:0%
assembler that are very convoluted and
there<00:28:55.149><c> go</c><00:28:55.389><c> to</c><00:28:55.450><c> structures</c><00:28:56.019><c> or</c><00:28:56.109><c> whatnot</c><00:28:56.259><c> where</c>

00:28:56.519 --> 00:28:56.529 align:start position:0%
there go to structures or whatnot where
 

00:28:56.529 --> 00:28:58.200 align:start position:0%
there go to structures or whatnot where
it's<00:28:56.649><c> really</c><00:28:56.859><c> hard</c><00:28:57.070><c> to</c><00:28:57.219><c> do</c><00:28:57.369><c> the</c><00:28:57.519><c> analysis</c><00:28:58.059><c> of</c>

00:28:58.200 --> 00:28:58.210 align:start position:0%
it's really hard to do the analysis of
 

00:28:58.210 --> 00:29:02.609 align:start position:0%
it's really hard to do the analysis of
that<00:28:58.599><c> code</c><00:28:59.019><c> we</c><00:28:59.559><c> can't</c><00:29:01.019><c> generate</c><00:29:02.019><c> generate</c>

00:29:02.609 --> 00:29:02.619 align:start position:0%
that code we can't generate generate
 

00:29:02.619 --> 00:29:04.889 align:start position:0%
that code we can't generate generate
native<00:29:02.830><c> code</c><00:29:03.009><c> for</c><00:29:03.279><c> them</c><00:29:03.429><c> where</c><00:29:04.029><c> we</c><00:29:04.419><c> may</c><00:29:04.599><c> try</c>

00:29:04.889 --> 00:29:04.899 align:start position:0%
native code for them where we may try
 

00:29:04.899 --> 00:29:06.450 align:start position:0%
native code for them where we may try
but<00:29:05.169><c> it's</c><00:29:05.289><c> typically</c><00:29:05.799><c> not</c><00:29:05.889><c> worth</c><00:29:06.159><c> the</c><00:29:06.279><c> trouble</c>

00:29:06.450 --> 00:29:06.460 align:start position:0%
but it's typically not worth the trouble
 

00:29:06.460 --> 00:29:08.729 align:start position:0%
but it's typically not worth the trouble
and<00:29:06.759><c> the</c><00:29:07.570><c> things</c><00:29:07.719><c> I'm</c><00:29:08.080><c> the</c><00:29:08.320><c> only</c><00:29:08.409><c> time</c><00:29:08.589><c> I've</c>

00:29:08.729 --> 00:29:08.739 align:start position:0%
and the things I'm the only time I've
 

00:29:08.739 --> 00:29:10.349 align:start position:0%
and the things I'm the only time I've
ever<00:29:08.769><c> run</c><00:29:09.099><c> in</c><00:29:09.249><c> for</c><00:29:09.369><c> that</c><00:29:09.460><c> really</c><00:29:09.729><c> is</c><00:29:09.789><c> with</c><00:29:09.940><c> the</c>

00:29:10.349 --> 00:29:10.359 align:start position:0%
ever run in for that really is with the
 

00:29:10.359 --> 00:29:12.659 align:start position:0%
ever run in for that really is with the
JDK<00:29:10.929><c> there's</c><00:29:11.589><c> a</c><00:29:11.649><c> lot</c><00:29:11.769><c> of</c><00:29:11.799><c> the</c><00:29:11.919><c> Jacob</c><00:29:12.249><c> K</c><00:29:12.279><c> test</c>

00:29:12.659 --> 00:29:12.669 align:start position:0%
JDK there's a lot of the Jacob K test
 

00:29:12.669 --> 00:29:15.599 align:start position:0%
JDK there's a lot of the Jacob K test
that<00:29:13.269><c> try</c><00:29:13.629><c> to</c><00:29:13.690><c> you</c><00:29:14.109><c> know</c><00:29:14.139><c> see</c><00:29:14.619><c> what</c><00:29:14.799><c> you</c><00:29:15.039><c> can</c><00:29:15.219><c> do</c>

00:29:15.599 --> 00:29:15.609 align:start position:0%
that try to you know see what you can do
 

00:29:15.609 --> 00:29:19.680 align:start position:0%
that try to you know see what you can do
to<00:29:15.759><c> to</c><00:29:16.749><c> a</c><00:29:16.779><c> trip</c><00:29:17.169><c> up</c><00:29:17.320><c> on</c><00:29:17.469><c> the</c><00:29:17.589><c> jet</c><00:29:17.799><c> and</c><00:29:18.089><c> so</c><00:29:19.089><c> you</c>

00:29:19.680 --> 00:29:19.690 align:start position:0%
to to a trip up on the jet and so you
 

00:29:19.690 --> 00:29:20.820 align:start position:0%
to to a trip up on the jet and so you
just<00:29:19.839><c> don't</c><00:29:20.049><c> think</c><00:29:20.200><c> we</c><00:29:20.320><c> have</c><00:29:20.440><c> to</c><00:29:20.529><c> worry</c><00:29:20.559><c> with</c>

00:29:20.820 --> 00:29:20.830 align:start position:0%
just don't think we have to worry with
 

00:29:20.830 --> 00:29:26.519 align:start position:0%
just don't think we have to worry with
them<00:29:22.320><c> okay</c><00:29:23.320><c> so</c><00:29:23.739><c> now</c><00:29:23.830><c> i</c><00:29:23.889><c> have</c><00:29:23.979><c> 10</c><00:29:25.349><c> hints</c><00:29:26.349><c> or</c>

00:29:26.519 --> 00:29:26.529 align:start position:0%
them okay so now i have 10 hints or
 

00:29:26.529 --> 00:29:28.289 align:start position:0%
them okay so now i have 10 hints or
things<00:29:26.950><c> that</c><00:29:27.039><c> you</c><00:29:27.219><c> think</c><00:29:27.729><c> that</c><00:29:27.789><c> you</c><00:29:27.940><c> can</c><00:29:28.089><c> do</c>

00:29:28.289 --> 00:29:28.299 align:start position:0%
things that you think that you can do
 

00:29:28.299 --> 00:29:31.369 align:start position:0%
things that you think that you can do
that<00:29:28.570><c> you</c><00:29:28.690><c> can</c><00:29:28.719><c> provide</c><00:29:29.139><c> the</c><00:29:29.440><c> code</c><00:29:29.649><c> generator</c>

00:29:31.369 --> 00:29:31.379 align:start position:0%
that you can provide the code generator
 

00:29:31.379 --> 00:29:33.359 align:start position:0%
that you can provide the code generator
provide<00:29:32.379><c> to</c><00:29:32.499><c> the</c><00:29:32.619><c> code</c><00:29:32.739><c> generator</c><00:29:33.129><c> that</c><00:29:33.249><c> will</c>

00:29:33.359 --> 00:29:33.369 align:start position:0%
provide to the code generator that will
 

00:29:33.369 --> 00:29:34.799 align:start position:0%
provide to the code generator that will
actually<00:29:33.639><c> help</c><00:29:33.940><c> for</c><00:29:34.179><c> your</c><00:29:34.269><c> performance</c>

00:29:34.799 --> 00:29:34.809 align:start position:0%
actually help for your performance
 

00:29:34.809 --> 00:29:36.869 align:start position:0%
actually help for your performance
there's<00:29:35.259><c> various</c><00:29:35.559><c> degrees</c><00:29:35.679><c> of</c><00:29:35.889><c> performance</c>

00:29:36.869 --> 00:29:36.879 align:start position:0%
there's various degrees of performance
 

00:29:36.879 --> 00:29:40.440 align:start position:0%
there's various degrees of performance
improvement<00:29:37.299><c> here</c><00:29:38.399><c> some</c><00:29:39.399><c> made</c><00:29:39.519><c> me</c><00:29:39.639><c> a</c><00:29:39.940><c> little</c>

00:29:40.440 --> 00:29:40.450 align:start position:0%
improvement here some made me a little
 

00:29:40.450 --> 00:29:43.169 align:start position:0%
improvement here some made me a little
bit<00:29:40.599><c> more</c><00:29:40.779><c> dramatic</c><00:29:41.200><c> than</c><00:29:41.289><c> others</c><00:29:41.559><c> but</c><00:29:42.179><c> you</c>

00:29:43.169 --> 00:29:43.179 align:start position:0%
bit more dramatic than others but you
 

00:29:43.179 --> 00:29:44.969 align:start position:0%
bit more dramatic than others but you
don't<00:29:43.809><c> need</c><00:29:43.899><c> to</c><00:29:44.019><c> use</c><00:29:44.139><c> them</c><00:29:44.320><c> all</c><00:29:44.499><c> and</c><00:29:44.859><c> just</c>

00:29:44.969 --> 00:29:44.979 align:start position:0%
don't need to use them all and just
 

00:29:44.979 --> 00:29:45.930 align:start position:0%
don't need to use them all and just
don't<00:29:45.219><c> have</c><00:29:45.429><c> but</c><00:29:45.580><c> you</c><00:29:45.669><c> don't</c><00:29:45.820><c> necessarily</c>

00:29:45.930 --> 00:29:45.940 align:start position:0%
don't have but you don't necessarily
 

00:29:45.940 --> 00:29:48.180 align:start position:0%
don't have but you don't necessarily
have<00:29:46.330><c> to</c><00:29:46.450><c> go</c><00:29:46.599><c> out</c><00:29:46.690><c> and</c><00:29:46.869><c> feel</c><00:29:47.710><c> it</c><00:29:47.830><c> you</c><00:29:47.919><c> have</c><00:29:48.070><c> to</c>

00:29:48.180 --> 00:29:48.190 align:start position:0%
have to go out and feel it you have to
 

00:29:48.190 --> 00:29:50.249 align:start position:0%
have to go out and feel it you have to
use<00:29:48.309><c> them</c><00:29:48.489><c> all</c><00:29:48.609><c> they're</c><00:29:48.820><c> just</c><00:29:48.999><c> ideas</c><00:29:49.509><c> that</c><00:29:49.839><c> you</c>

00:29:50.249 --> 00:29:50.259 align:start position:0%
use them all they're just ideas that you
 

00:29:50.259 --> 00:29:51.719 align:start position:0%
use them all they're just ideas that you
can<00:29:50.289><c> keep</c><00:29:50.559><c> in</c><00:29:50.679><c> the</c><00:29:50.739><c> back</c><00:29:50.769><c> of</c><00:29:50.889><c> your</c><00:29:51.009><c> mind</c><00:29:51.159><c> when</c>

00:29:51.719 --> 00:29:51.729 align:start position:0%
can keep in the back of your mind when
 

00:29:51.729 --> 00:29:53.219 align:start position:0%
can keep in the back of your mind when
you're<00:29:51.820><c> trying</c><00:29:52.179><c> to</c><00:29:52.269><c> tune</c><00:29:52.509><c> your</c><00:29:52.539><c> application</c>

00:29:53.219 --> 00:29:53.229 align:start position:0%
you're trying to tune your application
 

00:29:53.229 --> 00:29:57.599 align:start position:0%
you're trying to tune your application
at<00:29:53.349><c> the</c><00:29:53.499><c> end</c><00:29:54.039><c> of</c><00:29:54.190><c> end</c><00:29:55.179><c> of</c><00:29:55.299><c> your</c><00:29:55.450><c> your</c><00:29:56.169><c> cycle</c><00:29:56.609><c> the</c>

00:29:57.599 --> 00:29:57.609 align:start position:0%
at the end of end of your your cycle the
 

00:29:57.609 --> 00:29:59.159 align:start position:0%
at the end of end of your your cycle the
first<00:29:57.849><c> is</c><00:29:58.029><c> probably</c><00:29:58.509><c> the</c><00:29:58.599><c> most</c><00:29:58.659><c> important</c>

00:29:59.159 --> 00:29:59.169 align:start position:0%
first is probably the most important
 

00:29:59.169 --> 00:30:01.289 align:start position:0%
first is probably the most important
thing<00:29:59.349><c> is</c><00:29:59.589><c> the</c><00:29:59.979><c> right</c><00:30:00.219><c> small</c><00:30:00.669><c> and</c><00:30:00.969><c> concise</c>

00:30:01.289 --> 00:30:01.299 align:start position:0%
thing is the right small and concise
 

00:30:01.299 --> 00:30:04.079 align:start position:0%
thing is the right small and concise
method<00:30:01.749><c> try</c><00:30:02.499><c> to</c><00:30:02.559><c> avoid</c><00:30:02.919><c> methods</c><00:30:03.789><c> that</c><00:30:03.909><c> have</c>

00:30:04.079 --> 00:30:04.089 align:start position:0%
method try to avoid methods that have
 

00:30:04.089 --> 00:30:05.549 align:start position:0%
method try to avoid methods that have
two<00:30:04.389><c> thousand</c><00:30:04.779><c> lines</c><00:30:04.899><c> of</c><00:30:05.080><c> code</c><00:30:05.259><c> in</c><00:30:05.440><c> them</c>

00:30:05.549 --> 00:30:05.559 align:start position:0%
two thousand lines of code in them
 

00:30:05.559 --> 00:30:08.820 align:start position:0%
two thousand lines of code in them
because<00:30:06.339><c> what</c><00:30:06.789><c> happens</c><00:30:07.239><c> is</c><00:30:07.389><c> that</c><00:30:07.450><c> when</c><00:30:08.049><c> the</c>

00:30:08.820 --> 00:30:08.830 align:start position:0%
because what happens is that when the
 

00:30:08.830 --> 00:30:11.249 align:start position:0%
because what happens is that when the
just-in-time<00:30:09.669><c> compiler</c><00:30:10.299><c> kicks</c><00:30:10.570><c> in</c><00:30:10.809><c> it's</c>

00:30:11.249 --> 00:30:11.259 align:start position:0%
just-in-time compiler kicks in it's
 

00:30:11.259 --> 00:30:12.859 align:start position:0%
just-in-time compiler kicks in it's
going<00:30:11.469><c> to</c><00:30:11.529><c> compile</c><00:30:11.799><c> the</c><00:30:12.009><c> whole</c><00:30:12.159><c> thing</c><00:30:12.429><c> and</c>

00:30:12.859 --> 00:30:12.869 align:start position:0%
going to compile the whole thing and
 

00:30:12.869 --> 00:30:15.299 align:start position:0%
going to compile the whole thing and
maybe<00:30:13.869><c> you're</c><00:30:14.409><c> only</c><00:30:14.559><c> going</c><00:30:14.739><c> to</c><00:30:14.830><c> use</c><00:30:14.859><c> a</c><00:30:15.009><c> couple</c>

00:30:15.299 --> 00:30:15.309 align:start position:0%
maybe you're only going to use a couple
 

00:30:15.309 --> 00:30:16.560 align:start position:0%
maybe you're only going to use a couple
of<00:30:15.429><c> lines</c><00:30:15.580><c> of</c><00:30:15.789><c> this</c><00:30:15.879><c> because</c><00:30:16.210><c> you've</c><00:30:16.330><c> got</c><00:30:16.419><c> this</c>

00:30:16.560 --> 00:30:16.570 align:start position:0%
of lines of this because you've got this
 

00:30:16.570 --> 00:30:19.919 align:start position:0%
of lines of this because you've got this
big<00:30:17.309><c> case</c><00:30:18.309><c> statements</c><00:30:18.849><c> and</c><00:30:19.029><c> as</c><00:30:19.299><c> you</c><00:30:19.809><c> know</c>

00:30:19.919 --> 00:30:19.929 align:start position:0%
big case statements and as you know
 

00:30:19.929 --> 00:30:21.839 align:start position:0%
big case statements and as you know
maybe<00:30:20.379><c> two</c><00:30:20.739><c> lines</c><00:30:20.979><c> and</c><00:30:21.219><c> if</c><00:30:21.279><c> it</c><00:30:21.399><c> gets</c><00:30:21.489><c> executed</c>

00:30:21.839 --> 00:30:21.849 align:start position:0%
maybe two lines and if it gets executed
 

00:30:21.849 --> 00:30:23.579 align:start position:0%
maybe two lines and if it gets executed
most<00:30:22.149><c> of</c><00:30:22.330><c> the</c><00:30:22.389><c> time</c><00:30:22.570><c> and</c><00:30:22.989><c> the</c><00:30:23.109><c> other</c><00:30:23.200><c> ones</c><00:30:23.409><c> may</c>

00:30:23.579 --> 00:30:23.589 align:start position:0%
most of the time and the other ones may
 

00:30:23.589 --> 00:30:28.019 align:start position:0%
most of the time and the other ones may
be<00:30:23.700><c> compiled</c><00:30:24.700><c> or</c><00:30:25.029><c> sorry</c><00:30:25.509><c> runs</c><00:30:25.719><c> very</c><00:30:25.929><c> rarely</c><00:30:27.029><c> so</c>

00:30:28.019 --> 00:30:28.029 align:start position:0%
be compiled or sorry runs very rarely so
 

00:30:28.029 --> 00:30:30.419 align:start position:0%
be compiled or sorry runs very rarely so
what<00:30:28.269><c> you</c><00:30:28.330><c> should</c><00:30:28.359><c> try</c><00:30:28.690><c> to</c><00:30:28.749><c> do</c><00:30:29.049><c> is</c><00:30:29.349><c> to</c><00:30:29.799><c> try</c><00:30:30.339><c> to</c>

00:30:30.419 --> 00:30:30.429 align:start position:0%
what you should try to do is to try to
 

00:30:30.429 --> 00:30:33.450 align:start position:0%
what you should try to do is to try to
to<00:30:30.969><c> keep</c><00:30:31.479><c> them</c><00:30:31.659><c> small</c><00:30:31.839><c> so</c><00:30:32.619><c> that</c><00:30:32.649><c> they</c><00:30:32.919><c> compile</c>

00:30:33.450 --> 00:30:33.460 align:start position:0%
to keep them small so that they compile
 

00:30:33.460 --> 00:30:38.009 align:start position:0%
to keep them small so that they compile
quickly<00:30:33.879><c> and</c><00:30:34.649><c> then</c><00:30:36.119><c> if</c><00:30:37.119><c> you've</c><00:30:37.330><c> got</c><00:30:37.539><c> some</c><00:30:37.779><c> code</c>

00:30:38.009 --> 00:30:38.019 align:start position:0%
quickly and then if you've got some code
 

00:30:38.019 --> 00:30:39.239 align:start position:0%
quickly and then if you've got some code
that's<00:30:38.229><c> not</c><00:30:38.409><c> going</c><00:30:38.499><c> to</c><00:30:38.589><c> be</c><00:30:38.619><c> used</c><00:30:38.859><c> very</c><00:30:39.009><c> often</c>

00:30:39.239 --> 00:30:39.249 align:start position:0%
that's not going to be used very often
 

00:30:39.249 --> 00:30:41.120 align:start position:0%
that's not going to be used very often
move<00:30:39.519><c> that</c><00:30:39.729><c> code</c><00:30:39.969><c> into</c><00:30:40.210><c> separate</c><00:30:40.509><c> routine</c>

00:30:41.120 --> 00:30:41.130 align:start position:0%
move that code into separate routine
 

00:30:41.130 --> 00:30:43.640 align:start position:0%
move that code into separate routine
so<00:30:41.700><c> that</c><00:30:41.910><c> you</c><00:30:42.750><c> know</c><00:30:42.840><c> if</c><00:30:43.020><c> it's</c><00:30:43.170><c> necessary</c><00:30:43.590><c> that</c>

00:30:43.640 --> 00:30:43.650 align:start position:0%
so that you know if it's necessary that
 

00:30:43.650 --> 00:30:46.090 align:start position:0%
so that you know if it's necessary that
we<00:30:43.950><c> compiled</c><00:30:44.310><c> in</c><00:30:44.580><c> but</c><00:30:45.060><c> otherwise</c><00:30:45.270><c> news'matt</c>

00:30:46.090 --> 00:30:46.100 align:start position:0%
we compiled in but otherwise news'matt
 

00:30:46.100 --> 00:30:48.260 align:start position:0%
we compiled in but otherwise news'matt
don't<00:30:47.100><c> worry</c><00:30:47.280><c> about</c><00:30:47.490><c> you</c><00:30:47.670><c> message</c><00:30:47.940><c> being</c><00:30:48.090><c> too</c>

00:30:48.260 --> 00:30:48.270 align:start position:0%
don't worry about you message being too
 

00:30:48.270 --> 00:30:50.000 align:start position:0%
don't worry about you message being too
small<00:30:48.630><c> because</c><00:30:48.840><c> method</c><00:30:49.290><c> inlining</c><00:30:49.440><c> will</c><00:30:49.830><c> take</c>

00:30:50.000 --> 00:30:50.010 align:start position:0%
small because method inlining will take
 

00:30:50.010 --> 00:30:52.220 align:start position:0%
small because method inlining will take
care<00:30:50.190><c> of</c><00:30:50.250><c> that</c><00:30:50.450><c> the</c><00:30:51.450><c> jit</c><00:30:51.690><c> we'll</c><00:30:51.870><c> figure</c><00:30:52.050><c> out</c><00:30:52.140><c> a</c>

00:30:52.220 --> 00:30:52.230 align:start position:0%
care of that the jit we'll figure out a
 

00:30:52.230 --> 00:30:53.900 align:start position:0%
care of that the jit we'll figure out a
nice<00:30:52.470><c> load</c><00:30:52.710><c> balance</c><00:30:53.190><c> to</c><00:30:53.310><c> get</c><00:30:53.430><c> a</c><00:30:53.460><c> nice</c><00:30:53.670><c> size</c>

00:30:53.900 --> 00:30:53.910 align:start position:0%
nice load balance to get a nice size
 

00:30:53.910 --> 00:30:56.690 align:start position:0%
nice load balance to get a nice size
routine<00:30:54.360><c> and</c><00:30:54.750><c> what</c><00:30:55.020><c> what</c><00:30:55.590><c> in</c><00:30:55.890><c> lines</c><00:30:56.190><c> nicely</c>

00:30:56.690 --> 00:30:56.700 align:start position:0%
routine and what what in lines nicely
 

00:30:56.700 --> 00:30:58.940 align:start position:0%
routine and what what in lines nicely
and<00:30:56.940><c> so</c><00:30:57.480><c> on</c><00:30:57.690><c> so</c><00:30:57.930><c> it's</c><00:30:58.080><c> don't</c><00:30:58.500><c> worry</c><00:30:58.650><c> about</c><00:30:58.830><c> the</c>

00:30:58.940 --> 00:30:58.950 align:start position:0%
and so on so it's don't worry about the
 

00:30:58.950 --> 00:31:01.100 align:start position:0%
and so on so it's don't worry about the
size<00:30:59.190><c> of</c><00:30:59.340><c> a</c><00:30:59.430><c> single</c><00:30:59.700><c> sentence</c><00:31:00.000><c> for</c><00:31:00.180><c> its</c><00:31:00.810><c> that's</c>

00:31:01.100 --> 00:31:01.110 align:start position:0%
size of a single sentence for its that's
 

00:31:01.110 --> 00:31:05.210 align:start position:0%
size of a single sentence for its that's
not<00:31:01.260><c> crucial</c><00:31:03.140><c> or</c><00:31:04.140><c> whether</c><00:31:04.350><c> the</c><00:31:04.590><c> method</c><00:31:05.010><c> is</c><00:31:05.100><c> too</c>

00:31:05.210 --> 00:31:05.220 align:start position:0%
not crucial or whether the method is too
 

00:31:05.220 --> 00:31:07.520 align:start position:0%
not crucial or whether the method is too
simple<00:31:05.520><c> and</c><00:31:05.700><c> then</c><00:31:06.150><c> finally</c><00:31:06.480><c> you</c><00:31:07.020><c> should</c><00:31:07.290><c> not</c>

00:31:07.520 --> 00:31:07.530 align:start position:0%
simple and then finally you should not
 

00:31:07.530 --> 00:31:10.340 align:start position:0%
simple and then finally you should not
always<00:31:07.860><c> know</c><00:31:08.220><c> that</c><00:31:08.250><c> are</c><00:31:09.090><c> always</c><00:31:09.350><c> remember</c>

00:31:10.340 --> 00:31:10.350 align:start position:0%
always know that are always remember
 

00:31:10.350 --> 00:31:12.170 align:start position:0%
always know that are always remember
that<00:31:10.380><c> the</c><00:31:10.650><c> accessor</c><00:31:11.100><c> methods</c><00:31:11.460><c> are</c><00:31:11.610><c> almost</c>

00:31:12.170 --> 00:31:12.180 align:start position:0%
that the accessor methods are almost
 

00:31:12.180 --> 00:31:14.450 align:start position:0%
that the accessor methods are almost
always<00:31:12.480><c> inline</c><00:31:13.050><c> even</c><00:31:13.860><c> in</c><00:31:13.980><c> the</c><00:31:14.070><c> classic</c>

00:31:14.450 --> 00:31:14.460 align:start position:0%
always inline even in the classic
 

00:31:14.460 --> 00:31:17.210 align:start position:0%
always inline even in the classic
classic<00:31:15.200><c> interpreter</c><00:31:16.200><c> the</c><00:31:16.710><c> actress</c><00:31:16.920><c> and</c><00:31:17.130><c> math</c>

00:31:17.210 --> 00:31:17.220 align:start position:0%
classic interpreter the actress and math
 

00:31:17.220 --> 00:31:20.630 align:start position:0%
classic interpreter the actress and math
methods<00:31:17.490><c> were</c><00:31:17.760><c> often</c><00:31:18.090><c> in</c><00:31:18.240><c> line</c><00:31:18.530><c> so</c><00:31:19.530><c> you</c><00:31:20.280><c> know</c>

00:31:20.630 --> 00:31:20.640 align:start position:0%
methods were often in line so you know
 

00:31:20.640 --> 00:31:22.490 align:start position:0%
methods were often in line so you know
it's<00:31:20.790><c> good</c><00:31:20.940><c> to</c><00:31:21.090><c> actually</c><00:31:21.330><c> use</c><00:31:21.630><c> asked</c><00:31:21.960><c> accessor</c>

00:31:22.490 --> 00:31:22.500 align:start position:0%
it's good to actually use asked accessor
 

00:31:22.500 --> 00:31:25.130 align:start position:0%
it's good to actually use asked accessor
methods<00:31:22.800><c> instead</c><00:31:23.310><c> of</c><00:31:23.520><c> fun</c><00:31:23.760><c> that's</c><00:31:24.570><c> accessing</c>

00:31:25.130 --> 00:31:25.140 align:start position:0%
methods instead of fun that's accessing
 

00:31:25.140 --> 00:31:28.490 align:start position:0%
methods instead of fun that's accessing
the<00:31:25.200><c> fields</c><00:31:25.470><c> directly</c><00:31:26.390><c> the</c><00:31:27.390><c> next</c><00:31:27.660><c> hint</c><00:31:28.110><c> is</c><00:31:28.320><c> to</c>

00:31:28.490 --> 00:31:28.500 align:start position:0%
the fields directly the next hint is to
 

00:31:28.500 --> 00:31:31.100 align:start position:0%
the fields directly the next hint is to
trust<00:31:28.770><c> the</c><00:31:28.980><c> supply</c><00:31:29.280><c> classes</c><00:31:29.820><c> what</c><00:31:30.570><c> what</c><00:31:31.020><c> we</c>

00:31:31.100 --> 00:31:31.110 align:start position:0%
trust the supply classes what what we
 

00:31:31.110 --> 00:31:33.260 align:start position:0%
trust the supply classes what what we
try<00:31:31.320><c> to</c><00:31:31.350><c> do</c><00:31:31.650><c> is</c><00:31:31.890><c> look</c><00:31:32.220><c> at</c><00:31:32.370><c> look</c><00:31:32.700><c> for</c><00:31:32.940><c> hot</c><00:31:33.090><c> spots</c>

00:31:33.260 --> 00:31:33.270 align:start position:0%
try to do is look at look for hot spots
 

00:31:33.270 --> 00:31:35.450 align:start position:0%
try to do is look at look for hot spots
in<00:31:33.720><c> your</c><00:31:33.810><c> codes</c><00:31:34.110><c> like</c><00:31:34.350><c> things</c><00:31:34.680><c> that</c><00:31:34.860><c> take</c><00:31:35.430><c> a</c>

00:31:35.450 --> 00:31:35.460 align:start position:0%
in your codes like things that take a
 

00:31:35.460 --> 00:31:37.220 align:start position:0%
in your codes like things that take a
lot<00:31:35.700><c> long</c><00:31:36.060><c> time</c><00:31:36.300><c> and</c><00:31:36.480><c> try</c><00:31:36.600><c> to</c><00:31:36.660><c> gain</c>

00:31:37.220 --> 00:31:37.230 align:start position:0%
lot long time and try to gain
 

00:31:37.230 --> 00:31:38.750 align:start position:0%
lot long time and try to gain
performance<00:31:37.800><c> and</c><00:31:37.920><c> one</c><00:31:38.010><c> of</c><00:31:38.100><c> the</c><00:31:38.160><c> things</c><00:31:38.220><c> we</c><00:31:38.460><c> do</c>

00:31:38.750 --> 00:31:38.760 align:start position:0%
performance and one of the things we do
 

00:31:38.760 --> 00:31:41.300 align:start position:0%
performance and one of the things we do
in<00:31:38.940><c> their</c><00:31:39.060><c> analysis</c><00:31:39.540><c> is</c><00:31:39.960><c> identify</c><00:31:40.770><c> methods</c>

00:31:41.300 --> 00:31:41.310 align:start position:0%
in their analysis is identify methods
 

00:31:41.310 --> 00:31:44.180 align:start position:0%
in their analysis is identify methods
that<00:31:42.000><c> get</c><00:31:42.720><c> executed</c><00:31:43.020><c> a</c><00:31:43.350><c> lot</c><00:31:43.560><c> and</c><00:31:43.740><c> want</c><00:31:43.950><c> to</c><00:31:44.040><c> try</c>

00:31:44.180 --> 00:31:44.190 align:start position:0%
that get executed a lot and want to try
 

00:31:44.190 --> 00:31:47.000 align:start position:0%
that get executed a lot and want to try
to<00:31:44.250><c> tune</c><00:31:44.580><c> those</c><00:31:44.880><c> so</c><00:31:45.570><c> that</c><00:31:45.720><c> they</c><00:31:45.810><c> execute</c><00:31:46.350><c> very</c>

00:31:47.000 --> 00:31:47.010 align:start position:0%
to tune those so that they execute very
 

00:31:47.010 --> 00:31:48.620 align:start position:0%
to tune those so that they execute very
quickly<00:31:47.280><c> and</c><00:31:47.640><c> often</c><00:31:47.850><c> we</c><00:31:48.090><c> two</c><00:31:48.300><c> min</c><00:31:48.480><c> write</c>

00:31:48.620 --> 00:31:48.630 align:start position:0%
quickly and often we two min write
 

00:31:48.630 --> 00:31:51.800 align:start position:0%
quickly and often we two min write
directly<00:31:48.930><c> into</c><00:31:49.170><c> December</c><00:31:49.590><c> so</c><00:31:50.520><c> so</c><00:31:51.300><c> methods</c><00:31:51.720><c> in</c>

00:31:51.800 --> 00:31:51.810 align:start position:0%
directly into December so so methods in
 

00:31:51.810 --> 00:31:52.940 align:start position:0%
directly into December so so methods in
the<00:31:51.900><c> class</c><00:31:52.110><c> string</c><00:31:52.470><c> and</c><00:31:52.620><c> string</c><00:31:52.680><c> buffer</c>

00:31:52.940 --> 00:31:52.950 align:start position:0%
the class string and string buffer
 

00:31:52.950 --> 00:31:56.000 align:start position:0%
the class string and string buffer
bestvector<00:31:53.640><c> which</c><00:31:54.210><c> are</c><00:31:54.360><c> used</c><00:31:54.570><c> a</c><00:31:54.720><c> lot</c><00:31:54.750><c> well</c><00:31:55.680><c> we</c>

00:31:56.000 --> 00:31:56.010 align:start position:0%
bestvector which are used a lot well we
 

00:31:56.010 --> 00:31:58.750 align:start position:0%
bestvector which are used a lot well we
actually<00:31:56.340><c> have</c><00:31:56.720><c> intrinsic</c><00:31:57.720><c> or</c><00:31:58.080><c> built-in</c>

00:31:58.750 --> 00:31:58.760 align:start position:0%
actually have intrinsic or built-in
 

00:31:58.760 --> 00:32:01.310 align:start position:0%
actually have intrinsic or built-in
methods<00:31:59.760><c> to</c><00:31:59.880><c> deal</c><00:32:00.090><c> with</c><00:32:00.300><c> a</c><00:32:00.330><c> lot</c><00:32:00.480><c> of</c><00:32:00.660><c> those</c>

00:32:01.310 --> 00:32:01.320 align:start position:0%
methods to deal with a lot of those
 

00:32:01.320 --> 00:32:03.290 align:start position:0%
methods to deal with a lot of those
situations<00:32:01.530><c> you</c><00:32:02.010><c> get</c><00:32:02.160><c> better</c><00:32:02.340><c> performance</c><00:32:02.490><c> so</c>

00:32:03.290 --> 00:32:03.300 align:start position:0%
situations you get better performance so
 

00:32:03.300 --> 00:32:04.460 align:start position:0%
situations you get better performance so
if<00:32:03.360><c> you</c><00:32:03.450><c> think</c><00:32:03.690><c> you</c><00:32:03.840><c> can</c><00:32:03.990><c> write</c><00:32:04.140><c> it</c><00:32:04.290><c> better</c>

00:32:04.460 --> 00:32:04.470 align:start position:0%
if you think you can write it better
 

00:32:04.470 --> 00:32:09.740 align:start position:0%
if you think you can write it better
than<00:32:04.860><c> Java</c><00:32:05.510><c> sorry</c><00:32:06.510><c> better</c><00:32:06.990><c> than</c><00:32:07.170><c> Sun</c><00:32:08.540><c> and</c><00:32:09.540><c> did</c>

00:32:09.740 --> 00:32:09.750 align:start position:0%
than Java sorry better than Sun and did
 

00:32:09.750 --> 00:32:12.380 align:start position:0%
than Java sorry better than Sun and did
well<00:32:10.260><c> just</c><00:32:11.130><c> remember</c><00:32:11.520><c> that</c><00:32:11.670><c> well</c><00:32:11.820><c> maybe</c><00:32:12.000><c> we're</c>

00:32:12.380 --> 00:32:12.390 align:start position:0%
well just remember that well maybe we're
 

00:32:12.390 --> 00:32:13.700 align:start position:0%
well just remember that well maybe we're
going<00:32:12.510><c> to</c><00:32:12.600><c> do</c><00:32:12.690><c> a</c><00:32:12.720><c> little</c><00:32:12.810><c> bit</c><00:32:13.110><c> better</c><00:32:13.200><c> for</c><00:32:13.500><c> you</c>

00:32:13.700 --> 00:32:13.710 align:start position:0%
going to do a little bit better for you
 

00:32:13.710 --> 00:32:17.270 align:start position:0%
going to do a little bit better for you
so<00:32:14.010><c> in</c><00:32:14.460><c> the</c><00:32:14.580><c> background</c><00:32:15.000><c> so</c><00:32:15.950><c> that's</c><00:32:16.950><c> something</c>

00:32:17.270 --> 00:32:17.280 align:start position:0%
so in the background so that's something
 

00:32:17.280 --> 00:32:18.920 align:start position:0%
so in the background so that's something
to<00:32:17.370><c> keep</c><00:32:17.460><c> in</c><00:32:17.580><c> mind</c><00:32:17.640><c> array</c><00:32:18.210><c> copy</c><00:32:18.480><c> is</c><00:32:18.630><c> something</c>

00:32:18.920 --> 00:32:18.930 align:start position:0%
to keep in mind array copy is something
 

00:32:18.930 --> 00:32:22.190 align:start position:0%
to keep in mind array copy is something
we<00:32:19.020><c> gain</c><00:32:19.200><c> performance</c><00:32:19.740><c> on</c><00:32:20.810><c> if</c><00:32:21.810><c> you're</c><00:32:21.990><c> running</c>

00:32:22.190 --> 00:32:22.200 align:start position:0%
we gain performance on if you're running
 

00:32:22.200 --> 00:32:23.900 align:start position:0%
we gain performance on if you're running
on<00:32:22.260><c> a</c><00:32:22.320><c> g4</c><00:32:22.770><c> hopefully</c><00:32:23.160><c> we'll</c><00:32:23.310><c> be</c><00:32:23.400><c> able</c><00:32:23.430><c> to</c><00:32:23.580><c> get</c>

00:32:23.900 --> 00:32:23.910 align:start position:0%
on a g4 hopefully we'll be able to get
 

00:32:23.910 --> 00:32:25.580 align:start position:0%
on a g4 hopefully we'll be able to get
this<00:32:24.060><c> or</c><00:32:24.180><c> not</c><00:32:24.270><c> currently</c><00:32:24.570><c> in</c><00:32:24.690><c> place</c><00:32:24.840><c> but</c><00:32:25.110><c> if</c>

00:32:25.580 --> 00:32:25.590 align:start position:0%
this or not currently in place but if
 

00:32:25.590 --> 00:32:28.970 align:start position:0%
this or not currently in place but if
you're<00:32:25.740><c> a</c><00:32:25.770><c> ray</c><00:32:25.980><c> copy</c><00:32:26.220><c> running</c><00:32:26.730><c> on</c><00:32:26.880><c> a</c><00:32:27.210><c> g4</c><00:32:28.110><c> use</c>

00:32:28.970 --> 00:32:28.980 align:start position:0%
you're a ray copy running on a g4 use
 

00:32:28.980 --> 00:32:30.909 align:start position:0%
you're a ray copy running on a g4 use
the<00:32:29.550><c> velocity</c><00:32:30.360><c> inch</c><00:32:30.480><c> in</c><00:32:30.570><c> the</c><00:32:30.660><c> help</c>

00:32:30.909 --> 00:32:30.919 align:start position:0%
the velocity inch in the help
 

00:32:30.919 --> 00:32:34.269 align:start position:0%
the velocity inch in the help
the<00:32:31.429><c> coffee</c><00:32:31.639><c> in</c><00:32:31.940><c> sine</c><00:32:32.389><c> and</c><00:32:32.509><c> cosine</c><00:32:32.840><c> is</c><00:32:32.989><c> Han</c><00:32:33.279><c> Han</c>

00:32:34.269 --> 00:32:34.279 align:start position:0%
the coffee in sine and cosine is Han Han
 

00:32:34.279 --> 00:32:37.239 align:start position:0%
the coffee in sine and cosine is Han Han
on<00:32:34.669><c> Intel</c><00:32:35.570><c> you</c><00:32:36.409><c> would</c><00:32:36.529><c> call</c><00:32:36.710><c> the</c><00:32:36.859><c> hardware</c>

00:32:37.239 --> 00:32:37.249 align:start position:0%
on Intel you would call the hardware
 

00:32:37.249 --> 00:32:40.269 align:start position:0%
on Intel you would call the hardware
directly<00:32:37.700><c> to</c><00:32:37.850><c> do</c><00:32:37.999><c> those</c><00:32:38.239><c> we</c><00:32:39.200><c> call</c><00:32:39.379><c> the</c><00:32:39.590><c> library</c>

00:32:40.269 --> 00:32:40.279 align:start position:0%
directly to do those we call the library
 

00:32:40.279 --> 00:32:41.560 align:start position:0%
directly to do those we call the library
directly<00:32:40.759><c> so</c><00:32:40.940><c> you</c><00:32:41.029><c> don't</c><00:32:41.210><c> actually</c><00:32:41.330><c> go</c>

00:32:41.560 --> 00:32:41.570 align:start position:0%
directly so you don't actually go
 

00:32:41.570 --> 00:32:42.609 align:start position:0%
directly so you don't actually go
through<00:32:41.600><c> the</c><00:32:41.869><c> group</c><00:32:42.019><c> so</c><00:32:42.139><c> it's</c><00:32:42.259><c> a</c><00:32:42.320><c> bit</c><00:32:42.470><c> of</c><00:32:42.499><c> a</c>

00:32:42.609 --> 00:32:42.619 align:start position:0%
through the group so it's a bit of a
 

00:32:42.619 --> 00:32:46.869 align:start position:0%
through the group so it's a bit of a
performance<00:32:42.919><c> and</c><00:32:43.220><c> season</c><00:32:45.549><c> we</c><00:32:46.549><c> don't</c><00:32:46.759><c> have</c>

00:32:46.869 --> 00:32:46.879 align:start position:0%
performance and season we don't have
 

00:32:46.879 --> 00:32:50.109 align:start position:0%
performance and season we don't have
64-bit<00:32:47.450><c> architecture</c><00:32:48.279><c> so</c><00:32:49.279><c> there</c><00:32:49.609><c> is</c><00:32:49.730><c> a</c><00:32:49.759><c> cost</c>

00:32:50.109 --> 00:32:50.119 align:start position:0%
64-bit architecture so there is a cost
 

00:32:50.119 --> 00:32:54.940 align:start position:0%
64-bit architecture so there is a cost
in<00:32:50.450><c> using</c><00:32:51.080><c> long</c><00:32:52.210><c> so</c><00:32:53.210><c> if</c><00:32:53.389><c> you</c><00:32:53.539><c> if</c><00:32:53.929><c> you</c><00:32:54.679><c> don't</c>

00:32:54.940 --> 00:32:54.950 align:start position:0%
in using long so if you if you don't
 

00:32:54.950 --> 00:32:56.830 align:start position:0%
in using long so if you if you don't
really<00:32:55.580><c> need</c><00:32:55.909><c> long</c><00:32:56.149><c> you're</c><00:32:56.419><c> just</c><00:32:56.539><c> doing</c><00:32:56.809><c> it</c>

00:32:56.830 --> 00:32:56.840 align:start position:0%
really need long you're just doing it
 

00:32:56.840 --> 00:32:58.029 align:start position:0%
really need long you're just doing it
because<00:32:56.929><c> you</c><00:32:57.139><c> think</c><00:32:57.350><c> you</c><00:32:57.529><c> might</c><00:32:57.739><c> need</c><00:32:57.889><c> the</c>

00:32:58.029 --> 00:32:58.039 align:start position:0%
because you think you might need the
 

00:32:58.039 --> 00:33:00.009 align:start position:0%
because you think you might need the
decision<00:32:58.519><c> later</c><00:32:58.730><c> then</c><00:32:59.029><c> we'll</c><00:32:59.239><c> maybe</c><00:32:59.539><c> rethink</c>

00:33:00.009 --> 00:33:00.019 align:start position:0%
decision later then we'll maybe rethink
 

00:33:00.019 --> 00:33:01.599 align:start position:0%
decision later then we'll maybe rethink
is<00:33:00.109><c> a</c><00:33:00.139><c> little</c><00:33:00.320><c> bit</c><00:33:00.409><c> and</c><00:33:00.649><c> go</c><00:33:00.739><c> back</c><00:33:00.919><c> to</c><00:33:01.159><c> using</c>

00:33:01.599 --> 00:33:01.609 align:start position:0%
is a little bit and go back to using
 

00:33:01.609 --> 00:33:06.539 align:start position:0%
is a little bit and go back to using
straight<00:33:02.570><c> industries</c><00:33:04.330><c> long</c><00:33:05.330><c> multiply</c><00:33:05.899><c> takes</c>

00:33:06.539 --> 00:33:06.549 align:start position:0%
straight industries long multiply takes
 

00:33:06.549 --> 00:33:10.359 align:start position:0%
straight industries long multiply takes
five<00:33:07.549><c> instructions</c><00:33:07.940><c> long</c><00:33:08.840><c> design</c><00:33:09.320><c> has</c><00:33:10.159><c> to</c>

00:33:10.359 --> 00:33:10.369 align:start position:0%
five instructions long design has to
 

00:33:10.369 --> 00:33:12.669 align:start position:0%
five instructions long design has to
call<00:33:10.549><c> the</c><00:33:10.669><c> subroutine</c><00:33:11.149><c> a</c><00:33:11.389><c> shift</c><00:33:12.139><c> operation</c>

00:33:12.669 --> 00:33:12.679 align:start position:0%
call the subroutine a shift operation
 

00:33:12.679 --> 00:33:15.310 align:start position:0%
call the subroutine a shift operation
may<00:33:12.799><c> take</c><00:33:12.980><c> several</c><00:33:13.159><c> instructions</c><00:33:13.669><c> so</c><00:33:14.629><c> it's</c>

00:33:15.310 --> 00:33:15.320 align:start position:0%
may take several instructions so it's
 

00:33:15.320 --> 00:33:18.279 align:start position:0%
may take several instructions so it's
not<00:33:15.529><c> as</c><00:33:15.919><c> simple</c><00:33:16.730><c> as</c><00:33:16.970><c> the</c><00:33:17.090><c> same</c><00:33:17.299><c> long</c><00:33:17.570><c> and</c><00:33:17.869><c> you</c>

00:33:18.279 --> 00:33:18.289 align:start position:0%
not as simple as the same long and you
 

00:33:18.289 --> 00:33:19.739 align:start position:0%
not as simple as the same long and you
know<00:33:18.409><c> if</c><00:33:18.590><c> things</c><00:33:18.799><c> are</c><00:33:18.889><c> going</c><00:33:19.009><c> to</c><00:33:19.070><c> work</c><00:33:19.100><c> flow</c>

00:33:19.739 --> 00:33:19.749 align:start position:0%
know if things are going to work flow
 

00:33:19.749 --> 00:33:22.749 align:start position:0%
know if things are going to work flow
there's<00:33:20.749><c> lots</c><00:33:20.929><c> of</c><00:33:21.080><c> techniques</c><00:33:21.379><c> to</c><00:33:21.889><c> get</c><00:33:22.489><c> around</c>

00:33:22.749 --> 00:33:22.759 align:start position:0%
there's lots of techniques to get around
 

00:33:22.759 --> 00:33:24.070 align:start position:0%
there's lots of techniques to get around
some<00:33:22.970><c> of</c><00:33:22.999><c> the</c><00:33:23.119><c> problems</c><00:33:23.299><c> you</c><00:33:23.480><c> might</c><00:33:23.570><c> have</c><00:33:23.749><c> long</c>

00:33:24.070 --> 00:33:24.080 align:start position:0%
some of the problems you might have long
 

00:33:24.080 --> 00:33:28.570 align:start position:0%
some of the problems you might have long
i<00:33:24.999><c> did</c><00:33:25.999><c> a</c><00:33:26.029><c> class</c><00:33:26.450><c> library</c><00:33:26.960><c> that's</c><00:33:27.220><c> it</c><00:33:28.220><c> handles</c>

00:33:28.570 --> 00:33:28.580 align:start position:0%
i did a class library that's it handles
 

00:33:28.580 --> 00:33:29.619 align:start position:0%
i did a class library that's it handles
the<00:33:28.639><c> situation</c><00:33:28.759><c> when</c><00:33:29.179><c> you're</c><00:33:29.269><c> trying</c><00:33:29.389><c> to</c><00:33:29.480><c> use</c>

00:33:29.619 --> 00:33:29.629 align:start position:0%
the situation when you're trying to use
 

00:33:29.629 --> 00:33:31.180 align:start position:0%
the situation when you're trying to use
long's<00:33:29.899><c> that</c><00:33:30.109><c> deal</c><00:33:30.440><c> with</c><00:33:30.619><c> the</c><00:33:30.799><c> unsigned</c>

00:33:31.180 --> 00:33:31.190 align:start position:0%
long's that deal with the unsigned
 

00:33:31.190 --> 00:33:32.320 align:start position:0%
long's that deal with the unsigned
integer<00:33:31.580><c> problem</c><00:33:31.879><c> when</c><00:33:31.970><c> you</c><00:33:32.029><c> wanna</c><00:33:32.149><c> do</c><00:33:32.239><c> lunch</c>

00:33:32.320 --> 00:33:32.330 align:start position:0%
integer problem when you wanna do lunch
 

00:33:32.330 --> 00:33:33.909 align:start position:0%
integer problem when you wanna do lunch
on<00:33:32.509><c> compares</c><00:33:32.929><c> there's</c><00:33:33.350><c> a</c><00:33:33.440><c> way</c><00:33:33.590><c> of</c><00:33:33.769><c> actually</c>

00:33:33.909 --> 00:33:33.919 align:start position:0%
on compares there's a way of actually
 

00:33:33.919 --> 00:33:35.739 align:start position:0%
on compares there's a way of actually
doing<00:33:34.190><c> that</c><00:33:34.489><c> without</c><00:33:34.850><c> having</c><00:33:35.269><c> to</c><00:33:35.359><c> resort</c><00:33:35.480><c> too</c>

00:33:35.739 --> 00:33:35.749 align:start position:0%
doing that without having to resort too
 

00:33:35.749 --> 00:33:41.310 align:start position:0%
doing that without having to resort too
long<00:33:38.049><c> floats</c><00:33:39.049><c> versus</c><00:33:39.470><c> what</c><00:33:39.649><c> of</c><00:33:39.799><c> vs</c><00:33:40.369><c> devils</c>

00:33:41.310 --> 00:33:41.320 align:start position:0%
long floats versus what of vs devils
 

00:33:41.320 --> 00:33:43.989 align:start position:0%
long floats versus what of vs devils
floats<00:33:42.320><c> obviously</c><00:33:42.799><c> are</c><00:33:42.889><c> smaller</c><00:33:43.279><c> take</c><00:33:43.879><c> up</c>

00:33:43.989 --> 00:33:43.999 align:start position:0%
floats obviously are smaller take up
 

00:33:43.999 --> 00:33:47.859 align:start position:0%
floats obviously are smaller take up
less<00:33:44.179><c> memory</c><00:33:44.950><c> and</c><00:33:46.389><c> most</c><00:33:47.389><c> circumstances</c>

00:33:47.859 --> 00:33:47.869 align:start position:0%
less memory and most circumstances
 

00:33:47.869 --> 00:33:49.599 align:start position:0%
less memory and most circumstances
floats<00:33:48.529><c> and</c><00:33:48.769><c> doubles</c><00:33:48.799><c> and</c><00:33:49.190><c> have</c><00:33:49.279><c> equivalent</c>

00:33:49.599 --> 00:33:49.609 align:start position:0%
floats and doubles and have equivalent
 

00:33:49.609 --> 00:33:52.210 align:start position:0%
floats and doubles and have equivalent
and<00:33:50.230><c> execution</c><00:33:51.230><c> but</c><00:33:51.859><c> there</c><00:33:52.009><c> are</c><00:33:52.070><c> some</c>

00:33:52.210 --> 00:33:52.220 align:start position:0%
and execution but there are some
 

00:33:52.220 --> 00:33:54.580 align:start position:0%
and execution but there are some
circumstances<00:33:52.429><c> like</c><00:33:53.029><c> divide</c><00:33:53.450><c> where</c><00:33:54.230><c> divided</c>

00:33:54.580 --> 00:33:54.590 align:start position:0%
circumstances like divide where divided
 

00:33:54.590 --> 00:33:56.649 align:start position:0%
circumstances like divide where divided
of<00:33:54.799><c> a</c><00:33:54.889><c> double</c><00:33:55.249><c> is</c><00:33:55.399><c> actually</c><00:33:55.730><c> twice</c><00:33:55.940><c> as</c><00:33:56.179><c> long</c><00:33:56.359><c> or</c>

00:33:56.649 --> 00:33:56.659 align:start position:0%
of a double is actually twice as long or
 

00:33:56.659 --> 00:34:00.279 align:start position:0%
of a double is actually twice as long or
almost<00:33:56.960><c> places</c><00:33:57.350><c> on</c><00:33:57.529><c> is</c><00:33:57.739><c> a</c><00:33:58.369><c> float</c><00:33:58.809><c> so</c><00:33:59.809><c> if</c><00:34:00.139><c> you</c>

00:34:00.279 --> 00:34:00.289 align:start position:0%
almost places on is a float so if you
 

00:34:00.289 --> 00:34:01.930 align:start position:0%
almost places on is a float so if you
don't<00:34:00.499><c> really</c><00:34:00.769><c> need</c><00:34:01.009><c> the</c><00:34:01.159><c> precision</c><00:34:01.609><c> stick</c>

00:34:01.930 --> 00:34:01.940 align:start position:0%
don't really need the precision stick
 

00:34:01.940 --> 00:34:04.239 align:start position:0%
don't really need the precision stick
with<00:34:02.119><c> float</c><00:34:02.529><c> and</c><00:34:03.529><c> the</c><00:34:03.590><c> other</c><00:34:03.710><c> reason</c><00:34:03.859><c> why</c><00:34:04.129><c> I'm</c>

00:34:04.239 --> 00:34:04.249 align:start position:0%
with float and the other reason why I'm
 

00:34:04.249 --> 00:34:07.119 align:start position:0%
with float and the other reason why I'm
recommending<00:34:04.369><c> using</c><00:34:04.970><c> flowed</c><00:34:05.210><c> is</c><00:34:05.419><c> that</c><00:34:05.889><c> as</c><00:34:06.889><c> we</c>

00:34:07.119 --> 00:34:07.129 align:start position:0%
recommending using flowed is that as we
 

00:34:07.129 --> 00:34:09.069 align:start position:0%
recommending using flowed is that as we
progress<00:34:07.340><c> to</c><00:34:07.850><c> the</c><00:34:07.970><c> velocity</c><00:34:08.179><c> engine</c><00:34:08.809><c> the</c>

00:34:09.069 --> 00:34:09.079 align:start position:0%
progress to the velocity engine the
 

00:34:09.079 --> 00:34:10.990 align:start position:0%
progress to the velocity engine the
velocity<00:34:09.530><c> engine</c><00:34:09.770><c> doesn't</c><00:34:09.919><c> support</c><00:34:10.309><c> doubles</c>

00:34:10.990 --> 00:34:11.000 align:start position:0%
velocity engine doesn't support doubles
 

00:34:11.000 --> 00:34:14.230 align:start position:0%
velocity engine doesn't support doubles
it<00:34:11.240><c> only</c><00:34:11.389><c> supports</c><00:34:11.599><c> float</c><00:34:12.609><c> so</c><00:34:13.609><c> if</c><00:34:13.849><c> you're</c><00:34:13.970><c> if</c>

00:34:14.230 --> 00:34:14.240 align:start position:0%
it only supports float so if you're if
 

00:34:14.240 --> 00:34:15.399 align:start position:0%
it only supports float so if you're if
you're<00:34:14.329><c> thinking</c><00:34:14.480><c> about</c><00:34:14.690><c> declaring</c><00:34:15.139><c> an</c><00:34:15.349><c> array</c>

00:34:15.399 --> 00:34:15.409 align:start position:0%
you're thinking about declaring an array
 

00:34:15.409 --> 00:34:18.099 align:start position:0%
you're thinking about declaring an array
of<00:34:15.559><c> doubles</c><00:34:15.879><c> see</c><00:34:16.879><c> if</c><00:34:16.940><c> you</c><00:34:17.030><c> can</c><00:34:17.210><c> use</c><00:34:17.599><c> a</c><00:34:17.629><c> very</c>

00:34:18.099 --> 00:34:18.109 align:start position:0%
of doubles see if you can use a very
 

00:34:18.109 --> 00:34:20.139 align:start position:0%
of doubles see if you can use a very
floats<00:34:18.379><c> instead</c><00:34:18.799><c> because</c><00:34:19.549><c> then</c><00:34:19.730><c> that's</c><00:34:19.879><c> most</c>

00:34:20.139 --> 00:34:20.149 align:start position:0%
floats instead because then that's most
 

00:34:20.149 --> 00:34:21.109 align:start position:0%
floats instead because then that's most
likely<00:34:20.240><c> what</c><00:34:20.599><c> will</c><00:34:20.750><c> be</c><00:34:20.869><c> able</c>

00:34:21.109 --> 00:34:21.119 align:start position:0%
likely what will be able
 

00:34:21.119 --> 00:34:25.190 align:start position:0%
likely what will be able
used<00:34:21.329><c> to</c><00:34:22.549><c> or</c><00:34:23.549><c> what</c><00:34:23.999><c> will</c><00:34:24.269><c> apply</c><00:34:24.539><c> the</c><00:34:24.599><c> velocity</c>

00:34:25.190 --> 00:34:25.200 align:start position:0%
used to or what will apply the velocity
 

00:34:25.200 --> 00:34:27.799 align:start position:0%
used to or what will apply the velocity
engine<00:34:26.089><c> there's</c><00:34:27.089><c> no</c><00:34:27.240><c> commitment</c><00:34:27.539><c> to</c><00:34:27.779><c> that</c>

00:34:27.799 --> 00:34:27.809 align:start position:0%
engine there's no commitment to that
 

00:34:27.809 --> 00:34:31.730 align:start position:0%
engine there's no commitment to that
project<00:34:28.169><c> sister</c><00:34:28.740><c> just</c><00:34:29.129><c> keep</c><00:34:29.279><c> that</c><00:34:29.399><c> money</c><00:34:30.740><c> try</c>

00:34:31.730 --> 00:34:31.740 align:start position:0%
project sister just keep that money try
 

00:34:31.740 --> 00:34:35.269 align:start position:0%
project sister just keep that money try
to<00:34:31.799><c> avoid</c><00:34:32.129><c> the</c><00:34:32.369><c> use</c><00:34:32.460><c> of</c><00:34:32.519><c> generic</c><00:34:33.389><c> types</c><00:34:34.279><c> it</c>

00:34:35.269 --> 00:34:35.279 align:start position:0%
to avoid the use of generic types it
 

00:34:35.279 --> 00:34:37.099 align:start position:0%
to avoid the use of generic types it
costs<00:34:36.029><c> actually</c><00:34:36.179><c> to</c><00:34:36.419><c> use</c><00:34:36.569><c> these</c><00:34:36.690><c> generic</c>

00:34:37.099 --> 00:34:37.109 align:start position:0%
costs actually to use these generic
 

00:34:37.109 --> 00:34:39.579 align:start position:0%
costs actually to use these generic
types<00:34:37.369><c> especially</c><00:34:38.369><c> when</c><00:34:38.669><c> you're</c><00:34:38.789><c> doing</c>

00:34:39.579 --> 00:34:39.589 align:start position:0%
types especially when you're doing
 

00:34:39.589 --> 00:34:42.019 align:start position:0%
types especially when you're doing
assignment<00:34:40.589><c> between</c><00:34:41.220><c> it's</c><00:34:41.519><c> the</c><00:34:41.639><c> generic</c>

00:34:42.019 --> 00:34:42.029 align:start position:0%
assignment between it's the generic
 

00:34:42.029 --> 00:34:44.299 align:start position:0%
assignment between it's the generic
types<00:34:42.269><c> with</c><00:34:42.509><c> specific</c><00:34:43.019><c> types</c><00:34:43.230><c> because</c><00:34:43.829><c> the</c><00:34:44.039><c> vm</c>

00:34:44.299 --> 00:34:44.309 align:start position:0%
types with specific types because the vm
 

00:34:44.309 --> 00:34:46.489 align:start position:0%
types with specific types because the vm
has<00:34:44.549><c> to</c><00:34:44.669><c> do</c><00:34:44.789><c> a</c><00:34:44.819><c> type</c><00:34:45.089><c> check</c><00:34:45.389><c> to</c><00:34:45.929><c> make</c><00:34:46.079><c> sure</c><00:34:46.139><c> that</c>

00:34:46.489 --> 00:34:46.499 align:start position:0%
has to do a type check to make sure that
 

00:34:46.499 --> 00:34:48.109 align:start position:0%
has to do a type check to make sure that
it's<00:34:46.679><c> valid</c><00:34:47.190><c> to</c><00:34:47.220><c> do</c><00:34:47.429><c> that</c><00:34:47.669><c> and</c><00:34:47.759><c> it</c><00:34:47.849><c> does</c><00:34:47.999><c> that</c>

00:34:48.109 --> 00:34:48.119 align:start position:0%
it's valid to do that and it does that
 

00:34:48.119 --> 00:34:50.419 align:start position:0%
it's valid to do that and it does that
say<00:34:48.269><c> check</c><00:34:48.480><c> at</c><00:34:48.629><c> runtime</c><00:34:48.839><c> and</c><00:34:49.289><c> it</c><00:34:50.039><c> may</c><00:34:50.159><c> have</c><00:34:50.309><c> to</c>

00:34:50.419 --> 00:34:50.429 align:start position:0%
say check at runtime and it may have to
 

00:34:50.429 --> 00:34:52.099 align:start position:0%
say check at runtime and it may have to
search<00:34:50.609><c> up</c><00:34:50.789><c> the</c><00:34:50.879><c> class</c><00:34:51.089><c> hierarchy</c><00:34:51.359><c> in</c><00:34:51.839><c> order</c>

00:34:52.099 --> 00:34:52.109 align:start position:0%
search up the class hierarchy in order
 

00:34:52.109 --> 00:34:54.019 align:start position:0%
search up the class hierarchy in order
to<00:34:52.259><c> determine</c><00:34:52.980><c> whether</c><00:34:53.129><c> that's</c><00:34:53.490><c> a</c><00:34:53.579><c> member</c><00:34:53.879><c> or</c>

00:34:54.019 --> 00:34:54.029 align:start position:0%
to determine whether that's a member or
 

00:34:54.029 --> 00:34:55.940 align:start position:0%
to determine whether that's a member or
not<00:34:54.179><c> okay</c><00:34:54.990><c> so</c><00:34:55.049><c> that's</c><00:34:55.289><c> just</c><00:34:55.349><c> something</c><00:34:55.499><c> that</c>

00:34:55.940 --> 00:34:55.950 align:start position:0%
not okay so that's just something that
 

00:34:55.950 --> 00:34:58.160 align:start position:0%
not okay so that's just something that
you<00:34:56.460><c> should</c><00:34:56.639><c> keep</c><00:34:56.759><c> in</c><00:34:56.909><c> mind</c><00:34:56.999><c> especially</c><00:34:57.720><c> when</c>

00:34:58.160 --> 00:34:58.170 align:start position:0%
you should keep in mind especially when
 

00:34:58.170 --> 00:34:59.930 align:start position:0%
you should keep in mind especially when
you're<00:34:58.259><c> doing</c><00:34:58.349><c> assignment</c><00:34:58.890><c> from</c><00:34:59.009><c> a</c><00:34:59.279><c> generic</c>

00:34:59.930 --> 00:34:59.940 align:start position:0%
you're doing assignment from a generic
 

00:34:59.940 --> 00:35:02.210 align:start position:0%
you're doing assignment from a generic
type<00:35:00.119><c> of</c><00:35:00.299><c> ray</c><00:35:00.480><c> to</c><00:35:01.019><c> a</c><00:35:01.049><c> specific</c><00:35:01.319><c> array</c><00:35:01.829><c> because</c>

00:35:02.210 --> 00:35:02.220 align:start position:0%
type of ray to a specific array because
 

00:35:02.220 --> 00:35:03.559 align:start position:0%
type of ray to a specific array because
that<00:35:02.430><c> means</c><00:35:02.579><c> like</c><00:35:02.880><c> even</c><00:35:03.150><c> if</c><00:35:03.240><c> you're</c><00:35:03.329><c> doing</c><00:35:03.509><c> an</c>

00:35:03.559 --> 00:35:03.569 align:start position:0%
that means like even if you're doing an
 

00:35:03.569 --> 00:35:05.539 align:start position:0%
that means like even if you're doing an
array<00:35:03.809><c> coffee</c><00:35:04.140><c> it</c><00:35:04.680><c> has</c><00:35:04.890><c> to</c><00:35:05.009><c> validate</c>

00:35:05.539 --> 00:35:05.549 align:start position:0%
array coffee it has to validate
 

00:35:05.549 --> 00:35:06.950 align:start position:0%
array coffee it has to validate
everything<00:35:05.940><c> that's</c><00:35:06.299><c> being</c><00:35:06.450><c> moved</c><00:35:06.690><c> from</c><00:35:06.749><c> that</c>

00:35:06.950 --> 00:35:06.960 align:start position:0%
everything that's being moved from that
 

00:35:06.960 --> 00:35:09.499 align:start position:0%
everything that's being moved from that
array<00:35:07.259><c> /</c><00:35:07.789><c> okay</c><00:35:08.789><c> and</c><00:35:08.910><c> has</c><00:35:08.999><c> to</c><00:35:09.119><c> go</c><00:35:09.150><c> through</c><00:35:09.480><c> a</c>

00:35:09.499 --> 00:35:09.509 align:start position:0%
array / okay and has to go through a
 

00:35:09.509 --> 00:35:14.779 align:start position:0%
array / okay and has to go through a
class<00:35:10.470><c> trip</c><00:35:10.940><c> so</c><00:35:12.559><c> try</c><00:35:13.559><c> to</c><00:35:13.619><c> use</c><00:35:13.799><c> subclassing</c><00:35:14.519><c> and</c>

00:35:14.779 --> 00:35:14.789 align:start position:0%
class trip so try to use subclassing and
 

00:35:14.789 --> 00:35:16.819 align:start position:0%
class trip so try to use subclassing and
method<00:35:15.180><c> overloading</c><00:35:15.420><c> as</c><00:35:16.109><c> much</c><00:35:16.349><c> as</c><00:35:16.499><c> you</c><00:35:16.619><c> can</c>

00:35:16.819 --> 00:35:16.829 align:start position:0%
method overloading as much as you can
 

00:35:16.829 --> 00:35:19.009 align:start position:0%
method overloading as much as you can
because<00:35:17.190><c> that</c><00:35:17.789><c> will</c><00:35:17.880><c> actually</c><00:35:18.059><c> be</c><00:35:18.359><c> better</c><00:35:18.569><c> in</c>

00:35:19.009 --> 00:35:19.019 align:start position:0%
because that will actually be better in
 

00:35:19.019 --> 00:35:20.569 align:start position:0%
because that will actually be better in
the<00:35:19.170><c> long</c><00:35:19.380><c> run</c><00:35:19.440><c> than</c><00:35:19.859><c> actually</c><00:35:20.190><c> and</c><00:35:20.400><c> then</c>

00:35:20.569 --> 00:35:20.579 align:start position:0%
the long run than actually and then
 

00:35:20.579 --> 00:35:22.430 align:start position:0%
the long run than actually and then
using<00:35:20.910><c> one</c><00:35:21.210><c> the</c><00:35:21.390><c> sabres</c><00:35:21.660><c> writing</c><00:35:21.930><c> one</c><00:35:22.079><c> routine</c>

00:35:22.430 --> 00:35:22.440 align:start position:0%
using one the sabres writing one routine
 

00:35:22.440 --> 00:35:25.279 align:start position:0%
using one the sabres writing one routine
that<00:35:23.099><c> has</c><00:35:23.279><c> a</c><00:35:23.309><c> generic</c><00:35:23.819><c> type</c><00:35:24.089><c> and</c><00:35:24.390><c> then</c><00:35:25.019><c> doing</c>

00:35:25.279 --> 00:35:25.289 align:start position:0%
that has a generic type and then doing
 

00:35:25.289 --> 00:35:27.440 align:start position:0%
that has a generic type and then doing
an<00:35:25.440><c> instance</c><00:35:26.069><c> of</c><00:35:26.160><c> check</c><00:35:26.460><c> inside</c><00:35:26.940><c> of</c><00:35:27.119><c> it</c><00:35:27.210><c> it's</c>

00:35:27.440 --> 00:35:27.450 align:start position:0%
an instance of check inside of it it's
 

00:35:27.450 --> 00:35:30.999 align:start position:0%
an instance of check inside of it it's
better<00:35:27.660><c> to</c><00:35:27.839><c> do</c><00:35:27.960><c> the</c><00:35:28.109><c> overloading</c><00:35:28.589><c> momentum</c>

00:35:30.999 --> 00:35:31.009 align:start position:0%
 
 

00:35:31.009 --> 00:35:34.309 align:start position:0%
 
copy<00:35:32.009><c> the</c><00:35:32.130><c> valley</c><00:35:32.400><c> local</c><00:35:32.849><c> values</c><00:35:33.230><c> and</c><00:35:34.230><c> then</c>

00:35:34.309 --> 00:35:34.319 align:start position:0%
copy the valley local values and then
 

00:35:34.319 --> 00:35:36.200 align:start position:0%
copy the valley local values and then
some<00:35:34.619><c> of</c><00:35:34.650><c> the</c><00:35:34.769><c> optimizers</c><00:35:35.309><c> in</c><00:35:35.489><c> the</c><00:35:35.609><c> image</c><00:35:35.999><c> its</c>

00:35:36.200 --> 00:35:36.210 align:start position:0%
some of the optimizers in the image its
 

00:35:36.210 --> 00:35:38.299 align:start position:0%
some of the optimizers in the image its
will<00:35:36.569><c> actually</c><00:35:37.049><c> do</c><00:35:37.230><c> this</c><00:35:37.380><c> optimization</c><00:35:37.920><c> for</c>

00:35:38.299 --> 00:35:38.309 align:start position:0%
will actually do this optimization for
 

00:35:38.309 --> 00:35:41.630 align:start position:0%
will actually do this optimization for
you<00:35:38.489><c> but</c><00:35:39.029><c> it's</c><00:35:39.180><c> it's</c><00:35:39.509><c> better</c><00:35:40.099><c> for</c><00:35:41.099><c> most</c><00:35:41.309><c> Kate</c>

00:35:41.630 --> 00:35:41.640 align:start position:0%
you but it's it's better for most Kate
 

00:35:41.640 --> 00:35:43.370 align:start position:0%
you but it's it's better for most Kate
or<00:35:41.789><c> better</c><00:35:42.089><c> for</c><00:35:42.539><c> the</c><00:35:42.630><c> interpreter</c><00:35:43.109><c> it's</c>

00:35:43.370 --> 00:35:43.380 align:start position:0%
or better for the interpreter it's
 

00:35:43.380 --> 00:35:46.729 align:start position:0%
or better for the interpreter it's
better<00:35:43.619><c> for</c><00:35:44.420><c> the</c><00:35:45.420><c> lower</c><00:35:45.630><c> end</c><00:35:45.900><c> jets</c><00:35:46.230><c> and</c><00:35:46.499><c> so</c><00:35:46.650><c> on</c>

00:35:46.729 --> 00:35:46.739 align:start position:0%
better for the lower end jets and so on
 

00:35:46.739 --> 00:35:49.940 align:start position:0%
better for the lower end jets and so on
and<00:35:46.799><c> so</c><00:35:46.859><c> forth</c><00:35:46.920><c> to</c><00:35:47.749><c> have</c><00:35:48.749><c> you</c><00:35:48.989><c> move</c><00:35:49.349><c> it</c><00:35:49.529><c> up</c><00:35:49.710><c> and</c>

00:35:49.940 --> 00:35:49.950 align:start position:0%
and so forth to have you move it up and
 

00:35:49.950 --> 00:35:52.789 align:start position:0%
and so forth to have you move it up and
work<00:35:50.849><c> with</c><00:35:51.029><c> that</c><00:35:51.210><c> coffee</c><00:35:51.480><c> and</c><00:35:51.869><c> then</c><00:35:52.380><c> stuff</c><00:35:52.769><c> it</c>

00:35:52.789 --> 00:35:52.799 align:start position:0%
work with that coffee and then stuff it
 

00:35:52.799 --> 00:35:57.170 align:start position:0%
work with that coffee and then stuff it
back<00:35:53.009><c> in</c><00:35:53.249><c> if</c><00:35:53.430><c> you</c><00:35:53.549><c> speed</c><00:35:53.819><c> to</c><00:35:54.230><c> okay</c><00:35:56.089><c> on</c><00:35:57.089><c> this</c>

00:35:57.170 --> 00:35:57.180 align:start position:0%
back in if you speed to okay on this
 

00:35:57.180 --> 00:35:59.120 align:start position:0%
back in if you speed to okay on this
particular<00:35:57.509><c> examples</c><00:35:58.109><c> example</c><00:35:58.559><c> on</c><00:35:58.710><c> the</c><00:35:58.920><c> on</c>

00:35:59.120 --> 00:35:59.130 align:start position:0%
particular examples example on the on
 

00:35:59.130 --> 00:36:02.210 align:start position:0%
particular examples example on the on
the<00:35:59.519><c> left-hand</c><00:35:59.940><c> side</c><00:36:00.059><c> we</c><00:36:01.069><c> have</c><00:36:02.069><c> the</c>

00:36:02.210 --> 00:36:02.220 align:start position:0%
the left-hand side we have the
 

00:36:02.220 --> 00:36:06.019 align:start position:0%
the left-hand side we have the
increments<00:36:02.970><c> of</c><00:36:03.150><c> the</c><00:36:03.749><c> index</c><00:36:04.789><c> or</c><00:36:05.789><c> sorry</c>

00:36:06.019 --> 00:36:06.029 align:start position:0%
increments of the index or sorry
 

00:36:06.029 --> 00:36:08.890 align:start position:0%
increments of the index or sorry
extracting<00:36:06.869><c> value</c><00:36:07.499><c> from</c><00:36:08.249><c> the</c><00:36:08.400><c> table</c>

00:36:08.890 --> 00:36:08.900 align:start position:0%
extracting value from the table
 

00:36:08.900 --> 00:36:11.450 align:start position:0%
extracting value from the table
increments<00:36:09.900><c> the</c><00:36:09.930><c> value</c><00:36:10.019><c> check</c><00:36:10.799><c> the</c><00:36:10.890><c> CP</c><00:36:11.039><c> values</c>

00:36:11.450 --> 00:36:11.460 align:start position:0%
increments the value check the CP values
 

00:36:11.460 --> 00:36:13.999 align:start position:0%
increments the value check the CP values
exceeded<00:36:12.239><c> 100</c><00:36:12.420><c> and</c><00:36:12.930><c> then</c><00:36:12.989><c> reset</c><00:36:13.470><c> to</c><00:36:13.650><c> zero</c><00:36:13.890><c> if</c>

00:36:13.999 --> 00:36:14.009 align:start position:0%
exceeded 100 and then reset to zero if
 

00:36:14.009 --> 00:36:16.729 align:start position:0%
exceeded 100 and then reset to zero if
it<00:36:14.190><c> has</c><00:36:14.569><c> every</c><00:36:15.569><c> time</c><00:36:15.599><c> you</c><00:36:15.930><c> have</c><00:36:16.109><c> that</c><00:36:16.319><c> index</c>

00:36:16.729 --> 00:36:16.739 align:start position:0%
it has every time you have that index
 

00:36:16.739 --> 00:36:18.589 align:start position:0%
it has every time you have that index
it's<00:36:17.549><c> going</c><00:36:17.700><c> to</c><00:36:17.759><c> have</c><00:36:17.910><c> to</c><00:36:17.970><c> do</c><00:36:18.150><c> an</c><00:36:18.239><c> array</c><00:36:18.420><c> bounds</c>

00:36:18.589 --> 00:36:18.599 align:start position:0%
it's going to have to do an array bounds
 

00:36:18.599 --> 00:36:19.920 align:start position:0%
it's going to have to do an array bounds
check

00:36:19.920 --> 00:36:19.930 align:start position:0%
check
 

00:36:19.930 --> 00:36:22.690 align:start position:0%
check
again<00:36:20.930><c> the</c><00:36:21.050><c> higher-level</c><00:36:21.400><c> optimizers</c><00:36:22.400><c> will</c>

00:36:22.690 --> 00:36:22.700 align:start position:0%
again the higher-level optimizers will
 

00:36:22.700 --> 00:36:25.630 align:start position:0%
again the higher-level optimizers will
take<00:36:23.090><c> care</c><00:36:23.330><c> of</c><00:36:23.390><c> that</c><00:36:23.540><c> and</c><00:36:23.960><c> move</c><00:36:24.080><c> that</c><00:36:24.230><c> out</c><00:36:24.640><c> but</c>

00:36:25.630 --> 00:36:25.640 align:start position:0%
take care of that and move that out but
 

00:36:25.640 --> 00:36:28.060 align:start position:0%
take care of that and move that out but
that's<00:36:25.850><c> that</c><00:36:26.240><c> you</c><00:36:26.360><c> can't</c><00:36:26.600><c> rely</c><00:36:26.900><c> on</c><00:36:26.960><c> that</c><00:36:27.260><c> okay</c>

00:36:28.060 --> 00:36:28.070 align:start position:0%
that's that you can't rely on that okay
 

00:36:28.070 --> 00:36:30.670 align:start position:0%
that's that you can't rely on that okay
so<00:36:28.490><c> it's</c><00:36:28.670><c> probably</c><00:36:28.880><c> a</c><00:36:29.120><c> good</c><00:36:29.180><c> idea</c><00:36:29.420><c> to</c><00:36:29.810><c> move</c><00:36:30.500><c> it</c>

00:36:30.670 --> 00:36:30.680 align:start position:0%
so it's probably a good idea to move it
 

00:36:30.680 --> 00:36:33.210 align:start position:0%
so it's probably a good idea to move it
into<00:36:30.800><c> a</c><00:36:30.920><c> separate</c><00:36:31.280><c> into</c><00:36:32.000><c> a</c><00:36:32.030><c> separate</c><00:36:32.390><c> entity</c>

00:36:33.210 --> 00:36:33.220 align:start position:0%
into a separate into a separate entity
 

00:36:33.220 --> 00:36:37.000 align:start position:0%
into a separate into a separate entity
okay<00:36:34.600><c> the</c><00:36:35.600><c> other</c><00:36:35.720><c> thing</c><00:36:35.930><c> is</c><00:36:35.960><c> a</c><00:36:36.290><c> semantic</c><00:36:36.860><c> this</c>

00:36:37.000 --> 00:36:37.010 align:start position:0%
okay the other thing is a semantic this
 

00:36:37.010 --> 00:36:39.490 align:start position:0%
okay the other thing is a semantic this
issue<00:36:37.580><c> there</c><00:36:37.910><c> as</c><00:36:38.120><c> a</c><00:36:38.150><c> semantic</c><00:36:38.840><c> issue</c><00:36:39.170><c> there</c>

00:36:39.490 --> 00:36:39.500 align:start position:0%
issue there as a semantic issue there
 

00:36:39.500 --> 00:36:43.000 align:start position:0%
issue there as a semantic issue there
where<00:36:40.990><c> if</c><00:36:41.990><c> there's</c><00:36:42.410><c> another</c><00:36:42.560><c> thread</c><00:36:42.890><c> that</c>

00:36:43.000 --> 00:36:43.010 align:start position:0%
where if there's another thread that
 

00:36:43.010 --> 00:36:45.190 align:start position:0%
where if there's another thread that
goes<00:36:43.070><c> and</c><00:36:43.430><c> changes</c><00:36:43.910><c> that</c><00:36:44.240><c> field</c><00:36:44.540><c> or</c><00:36:44.840><c> changes</c>

00:36:45.190 --> 00:36:45.200 align:start position:0%
goes and changes that field or changes
 

00:36:45.200 --> 00:36:47.290 align:start position:0%
goes and changes that field or changes
that<00:36:45.380><c> array</c><00:36:45.680><c> entry</c><00:36:46.010><c> you</c><00:36:46.790><c> don't</c><00:36:47.000><c> know</c><00:36:47.120><c> which</c>

00:36:47.290 --> 00:36:47.300 align:start position:0%
that array entry you don't know which
 

00:36:47.300 --> 00:36:48.640 align:start position:0%
that array entry you don't know which
company<00:36:47.630><c> you're</c><00:36:47.750><c> going</c><00:36:47.900><c> to</c><00:36:47.960><c> get</c><00:36:48.110><c> so</c><00:36:48.470><c> if</c><00:36:48.530><c> you</c>

00:36:48.640 --> 00:36:48.650 align:start position:0%
company you're going to get so if you
 

00:36:48.650 --> 00:36:50.440 align:start position:0%
company you're going to get so if you
extract<00:36:48.920><c> the</c><00:36:49.130><c> coffee</c><00:36:49.340><c> work</c><00:36:49.940><c> with</c><00:36:50.090><c> that</c><00:36:50.240><c> coffee</c>

00:36:50.440 --> 00:36:50.450 align:start position:0%
extract the coffee work with that coffee
 

00:36:50.450 --> 00:36:51.670 align:start position:0%
extract the coffee work with that coffee
and<00:36:50.630><c> stuff</c><00:36:50.780><c> it</c><00:36:50.900><c> back</c><00:36:51.050><c> in</c><00:36:51.230><c> again</c><00:36:51.350><c> you</c><00:36:51.560><c> know</c>

00:36:51.670 --> 00:36:51.680 align:start position:0%
and stuff it back in again you know
 

00:36:51.680 --> 00:36:55.870 align:start position:0%
and stuff it back in again you know
exactly<00:36:52.130><c> which</c><00:36:52.220><c> value</c><00:36:52.580><c> your</c><00:36:53.060><c> business</c><00:36:54.700><c> in</c><00:36:55.700><c> the</c>

00:36:55.870 --> 00:36:55.880 align:start position:0%
exactly which value your business in the
 

00:36:55.880 --> 00:36:56.890 align:start position:0%
exactly which value your business in the
situation<00:36:56.390><c> where</c><00:36:56.480><c> you</c><00:36:56.570><c> have</c><00:36:56.720><c> multiple</c>

00:36:56.890 --> 00:36:56.900 align:start position:0%
situation where you have multiple
 

00:36:56.900 --> 00:36:59.020 align:start position:0%
situation where you have multiple
threads<00:36:57.410><c> that</c><00:36:57.560><c> are</c><00:36:57.620><c> accessing</c><00:36:58.100><c> something</c><00:36:58.640><c> you</c>

00:36:59.020 --> 00:36:59.030 align:start position:0%
threads that are accessing something you
 

00:36:59.030 --> 00:37:01.480 align:start position:0%
threads that are accessing something you
should<00:36:59.300><c> use</c><00:36:59.890><c> volatile</c><00:37:00.890><c> if</c><00:37:01.070><c> you're</c><00:37:01.190><c> not</c><00:37:01.280><c> using</c>

00:37:01.480 --> 00:37:01.490 align:start position:0%
should use volatile if you're not using
 

00:37:01.490 --> 00:37:03.820 align:start position:0%
should use volatile if you're not using
synchronization<00:37:02.270><c> volatiles</c><00:37:03.230><c> a</c><00:37:03.440><c> little</c><00:37:03.710><c> bit</c>

00:37:03.820 --> 00:37:03.830 align:start position:0%
synchronization volatiles a little bit
 

00:37:03.830 --> 00:37:06.100 align:start position:0%
synchronization volatiles a little bit
cheaper<00:37:04.190><c> than</c><00:37:04.490><c> synchronization</c><00:37:05.300><c> because</c><00:37:05.990><c> of</c>

00:37:06.100 --> 00:37:06.110 align:start position:0%
cheaper than synchronization because of
 

00:37:06.110 --> 00:37:09.040 align:start position:0%
cheaper than synchronization because of
what<00:37:06.140><c> it</c><00:37:06.260><c> says</c><00:37:06.680><c> is</c><00:37:06.950><c> you</c><00:37:07.400><c> need</c><00:37:08.300><c> to</c><00:37:08.480><c> reload</c><00:37:09.020><c> that</c>

00:37:09.040 --> 00:37:09.050 align:start position:0%
what it says is you need to reload that
 

00:37:09.050 --> 00:37:12.520 align:start position:0%
what it says is you need to reload that
value<00:37:09.680><c> every</c><00:37:10.670><c> time</c><00:37:10.850><c> you</c><00:37:11.000><c> access</c><00:37:11.390><c> it</c><00:37:11.420><c> and</c><00:37:11.870><c> it</c>

00:37:12.520 --> 00:37:12.530 align:start position:0%
value every time you access it and it
 

00:37:12.530 --> 00:37:14.500 align:start position:0%
value every time you access it and it
volatiles<00:37:12.950><c> not</c><00:37:13.250><c> there</c><00:37:13.580><c> then</c><00:37:14.150><c> what</c><00:37:14.390><c> will</c>

00:37:14.500 --> 00:37:14.510 align:start position:0%
volatiles not there then what will
 

00:37:14.510 --> 00:37:17.410 align:start position:0%
volatiles not there then what will
happen<00:37:14.540><c> is</c><00:37:14.930><c> it'll</c><00:37:15.460><c> highly</c><00:37:16.460><c> optimizing</c><00:37:17.090><c> jit</c>

00:37:17.410 --> 00:37:17.420 align:start position:0%
happen is it'll highly optimizing jit
 

00:37:17.420 --> 00:37:19.390 align:start position:0%
happen is it'll highly optimizing jit
will<00:37:17.630><c> say</c><00:37:17.870><c> oh</c><00:37:18.080><c> well</c><00:37:18.620><c> I've</c><00:37:18.710><c> got</c><00:37:18.740><c> this</c><00:37:19.010><c> value</c><00:37:19.370><c> I</c>

00:37:19.390 --> 00:37:19.400 align:start position:0%
will say oh well I've got this value I
 

00:37:19.400 --> 00:37:21.310 align:start position:0%
will say oh well I've got this value I
don't<00:37:19.640><c> have</c><00:37:19.760><c> to</c><00:37:19.850><c> reload</c><00:37:20.210><c> it</c><00:37:20.360><c> but</c><00:37:21.200><c> then</c>

00:37:21.310 --> 00:37:21.320 align:start position:0%
don't have to reload it but then
 

00:37:21.320 --> 00:37:22.570 align:start position:0%
don't have to reload it but then
meanwhile<00:37:21.620><c> another</c><00:37:21.800><c> thread</c><00:37:22.130><c> changes</c><00:37:22.490><c> the</c>

00:37:22.570 --> 00:37:22.580 align:start position:0%
meanwhile another thread changes the
 

00:37:22.580 --> 00:37:23.950 align:start position:0%
meanwhile another thread changes the
value<00:37:22.730><c> and</c><00:37:23.150><c> you're</c><00:37:23.480><c> sitting</c><00:37:23.630><c> there</c><00:37:23.750><c> in</c><00:37:23.930><c> your</c>

00:37:23.950 --> 00:37:23.960 align:start position:0%
value and you're sitting there in your
 

00:37:23.960 --> 00:37:25.330 align:start position:0%
value and you're sitting there in your
loop<00:37:24.200><c> waiting</c><00:37:24.560><c> for</c><00:37:24.740><c> it</c><00:37:24.800><c> to</c><00:37:24.860><c> change</c><00:37:25.040><c> and</c><00:37:25.280><c> it</c>

00:37:25.330 --> 00:37:25.340 align:start position:0%
loop waiting for it to change and it
 

00:37:25.340 --> 00:37:29.230 align:start position:0%
loop waiting for it to change and it
won't<00:37:25.520><c> change</c><00:37:25.630><c> okay</c><00:37:26.680><c> so</c><00:37:27.970><c> use</c><00:37:28.970><c> the</c><00:37:29.090><c> word</c>

00:37:29.230 --> 00:37:29.240 align:start position:0%
won't change okay so use the word
 

00:37:29.240 --> 00:37:31.030 align:start position:0%
won't change okay so use the word
volatile<00:37:29.720><c> when</c><00:37:29.960><c> you've</c><00:37:30.140><c> got</c><00:37:30.290><c> local</c><00:37:30.680><c> values</c>

00:37:31.030 --> 00:37:31.040 align:start position:0%
volatile when you've got local values
 

00:37:31.040 --> 00:37:36.790 align:start position:0%
volatile when you've got local values
that

00:37:36.790 --> 00:37:36.800 align:start position:0%
 
 

00:37:36.800 --> 00:37:39.370 align:start position:0%
 
final<00:37:37.640><c> we've</c><00:37:38.570><c> had</c><00:37:38.660><c> a</c><00:37:38.780><c> lot</c><00:37:38.870><c> of</c><00:37:38.930><c> discussion</c>

00:37:39.370 --> 00:37:39.380 align:start position:0%
final we've had a lot of discussion
 

00:37:39.380 --> 00:37:44.700 align:start position:0%
final we've had a lot of discussion
internally<00:37:40.040><c> about</c><00:37:40.280><c> these</c><00:37:40.580><c> two</c><00:37:40.700><c> final</c><00:37:41.030><c> but</c><00:37:42.940><c> my</c>

00:37:44.700 --> 00:37:44.710 align:start position:0%
internally about these two final but my
 

00:37:44.710 --> 00:37:47.110 align:start position:0%
internally about these two final but my
it's<00:37:45.710><c> one</c><00:37:45.920><c> of</c><00:37:46.040><c> my</c><00:37:46.130><c> favorite</c><00:37:46.490><c> words</c><00:37:46.640><c> as</c><00:37:46.850><c> far</c><00:37:47.000><c> as</c>

00:37:47.110 --> 00:37:47.120 align:start position:0%
it's one of my favorite words as far as
 

00:37:47.120 --> 00:37:49.270 align:start position:0%
it's one of my favorite words as far as
just<00:37:47.840><c> in</c><00:37:47.930><c> time</c><00:37:48.080><c> compiling</c><00:37:48.380><c> a</c><00:37:48.590><c> concern</c><00:37:48.890><c> because</c>

00:37:49.270 --> 00:37:49.280 align:start position:0%
just in time compiling a concern because
 

00:37:49.280 --> 00:37:50.860 align:start position:0%
just in time compiling a concern because
it<00:37:49.610><c> gives</c><00:37:49.730><c> me</c><00:37:49.910><c> a</c><00:37:49.940><c> lot</c><00:37:50.120><c> of</c><00:37:50.180><c> hints</c><00:37:50.480><c> about</c><00:37:50.690><c> what</c>

00:37:50.860 --> 00:37:50.870 align:start position:0%
it gives me a lot of hints about what
 

00:37:50.870 --> 00:37:53.290 align:start position:0%
it gives me a lot of hints about what
the<00:37:51.140><c> class</c><00:37:51.350><c> can</c><00:37:52.340><c> be</c><00:37:52.370><c> or</c><00:37:52.670><c> what</c><00:37:53.030><c> kinds</c><00:37:53.270><c> of</c>

00:37:53.290 --> 00:37:53.300 align:start position:0%
the class can be or what kinds of
 

00:37:53.300 --> 00:37:54.730 align:start position:0%
the class can be or what kinds of
optimizations<00:37:53.450><c> that</c><00:37:54.020><c> can</c><00:37:54.200><c> do</c><00:37:54.290><c> in</c><00:37:54.410><c> the</c><00:37:54.440><c> class</c>

00:37:54.730 --> 00:37:54.740 align:start position:0%
optimizations that can do in the class
 

00:37:54.740 --> 00:37:56.590 align:start position:0%
optimizations that can do in the class
but<00:37:55.700><c> it's</c><00:37:55.880><c> something</c><00:37:56.030><c> that</c><00:37:56.240><c> you</c><00:37:56.270><c> don't</c><00:37:56.480><c> need</c>

00:37:56.590 --> 00:37:56.600 align:start position:0%
but it's something that you don't need
 

00:37:56.600 --> 00:37:59.140 align:start position:0%
but it's something that you don't need
to<00:37:56.720><c> over</c><00:37:56.990><c> use</c><00:37:57.140><c> okay</c><00:37:57.880><c> write</c><00:37:58.880><c> your</c><00:37:59.000><c> application</c>

00:37:59.140 --> 00:37:59.150 align:start position:0%
to over use okay write your application
 

00:37:59.150 --> 00:38:03.370 align:start position:0%
to over use okay write your application
and<00:38:00.040><c> if</c><00:38:01.040><c> you</c><00:38:01.880><c> feel</c><00:38:02.150><c> that</c><00:38:02.360><c> the</c><00:38:02.450><c> class</c><00:38:02.660><c> is</c><00:38:02.960><c> not</c>

00:38:03.370 --> 00:38:03.380 align:start position:0%
and if you feel that the class is not
 

00:38:03.380 --> 00:38:04.870 align:start position:0%
and if you feel that the class is not
going<00:38:03.650><c> to</c><00:38:03.710><c> ever</c><00:38:03.920><c> be</c><00:38:04.160><c> overwritten</c><00:38:04.580><c> for</c>

00:38:04.870 --> 00:38:04.880 align:start position:0%
going to ever be overwritten for
 

00:38:04.880 --> 00:38:06.310 align:start position:0%
going to ever be overwritten for
specifically<00:38:05.330><c> for</c><00:38:05.480><c> any</c><00:38:05.570><c> you</c><00:38:05.930><c> know</c><00:38:05.960><c> any</c><00:38:06.050><c> reason</c>

00:38:06.310 --> 00:38:06.320 align:start position:0%
specifically for any you know any reason
 

00:38:06.320 --> 00:38:08.830 align:start position:0%
specifically for any you know any reason
for<00:38:06.470><c> instance</c><00:38:06.860><c> your</c><00:38:07.130><c> application</c><00:38:07.700><c> class</c><00:38:08.450><c> or</c>

00:38:08.830 --> 00:38:08.840 align:start position:0%
for instance your application class or
 

00:38:08.840 --> 00:38:10.720 align:start position:0%
for instance your application class or
class<00:38:09.230><c> it</c><00:38:09.830><c> was</c><00:38:09.980><c> not</c><00:38:10.100><c> going</c><00:38:10.190><c> to</c><00:38:10.250><c> be</c><00:38:10.370><c> overridden</c>

00:38:10.720 --> 00:38:10.730 align:start position:0%
class it was not going to be overridden
 

00:38:10.730 --> 00:38:13.180 align:start position:0%
class it was not going to be overridden
declare<00:38:11.630><c> it</c><00:38:11.690><c> as</c><00:38:11.810><c> being</c><00:38:11.990><c> final</c><00:38:12.440><c> and</c><00:38:12.890><c> what</c><00:38:13.070><c> this</c>

00:38:13.180 --> 00:38:13.190 align:start position:0%
declare it as being final and what this
 

00:38:13.190 --> 00:38:15.340 align:start position:0%
declare it as being final and what this
wind<00:38:13.460><c> you</c><00:38:13.550><c> is</c><00:38:13.820><c> the</c><00:38:14.030><c> fact</c><00:38:14.210><c> that</c><00:38:14.390><c> it</c><00:38:14.540><c> says</c><00:38:14.720><c> all</c><00:38:15.050><c> of</c>

00:38:15.340 --> 00:38:15.350 align:start position:0%
wind you is the fact that it says all of
 

00:38:15.350 --> 00:38:17.170 align:start position:0%
wind you is the fact that it says all of
the<00:38:15.440><c> methods</c><00:38:15.590><c> in</c><00:38:15.860><c> this</c><00:38:15.950><c> class</c><00:38:16.190><c> can</c><00:38:16.580><c> now</c><00:38:16.790><c> be</c>

00:38:17.170 --> 00:38:17.180 align:start position:0%
the methods in this class can now be
 

00:38:17.180 --> 00:38:19.300 align:start position:0%
the methods in this class can now be
monomorphic<00:38:17.840><c> still</c><00:38:18.260><c> never</c><00:38:18.440><c> be</c><00:38:18.620><c> overwritten</c><00:38:19.010><c> I</c>

00:38:19.300 --> 00:38:19.310 align:start position:0%
monomorphic still never be overwritten I
 

00:38:19.310 --> 00:38:20.800 align:start position:0%
monomorphic still never be overwritten I
can<00:38:19.640><c> make</c><00:38:19.760><c> direct</c><00:38:19.940><c> calls</c><00:38:20.180><c> so</c><00:38:20.600><c> it</c><00:38:20.720><c> improves</c>

00:38:20.800 --> 00:38:20.810 align:start position:0%
can make direct calls so it improves
 

00:38:20.810 --> 00:38:23.620 align:start position:0%
can make direct calls so it improves
performance<00:38:21.290><c> at</c><00:38:21.770><c> all</c><00:38:21.950><c> it</c><00:38:22.760><c> also</c><00:38:22.970><c> says</c><00:38:23.360><c> that</c><00:38:23.390><c> if</c>

00:38:23.620 --> 00:38:23.630 align:start position:0%
performance at all it also says that if
 

00:38:23.630 --> 00:38:24.970 align:start position:0%
performance at all it also says that if
I<00:38:23.720><c> do</c><00:38:23.780><c> in</c><00:38:23.930><c> the</c><00:38:24.020><c> instance</c><00:38:24.320><c> of</c><00:38:24.440><c> on</c><00:38:24.590><c> that</c><00:38:24.740><c> class</c>

00:38:24.970 --> 00:38:24.980 align:start position:0%
I do in the instance of on that class
 

00:38:24.980 --> 00:38:27.010 align:start position:0%
I do in the instance of on that class
all<00:38:25.550><c> I</c><00:38:25.670><c> have</c><00:38:25.850><c> to</c><00:38:25.880><c> do</c><00:38:26.030><c> is</c><00:38:26.150><c> compare</c><00:38:26.510><c> the</c><00:38:26.720><c> sieve</c><00:38:26.900><c> is</c>

00:38:27.010 --> 00:38:27.020 align:start position:0%
all I have to do is compare the sieve is
 

00:38:27.020 --> 00:38:29.910 align:start position:0%
all I have to do is compare the sieve is
equal<00:38:27.290><c> to</c><00:38:27.350><c> the</c><00:38:27.500><c> class</c><00:38:27.820><c> survive</c><00:38:28.820><c> the</c><00:38:29.000><c> class</c>

00:38:29.910 --> 00:38:29.920 align:start position:0%
equal to the class survive the class
 

00:38:29.920 --> 00:38:32.950 align:start position:0%
equal to the class survive the class
string<00:38:30.920><c> which</c><00:38:31.220><c> is</c><00:38:31.250><c> declared</c><00:38:31.670><c> as</c><00:38:31.760><c> final</c><00:38:32.210><c> then</c>

00:38:32.950 --> 00:38:32.960 align:start position:0%
string which is declared as final then
 

00:38:32.960 --> 00:38:34.870 align:start position:0%
string which is declared as final then
it's<00:38:33.410><c> the</c><00:38:33.650><c> check</c><00:38:33.920><c> to</c><00:38:34.250><c> see</c><00:38:34.430><c> if</c><00:38:34.460><c> that</c><00:38:34.700><c> is</c><00:38:34.850><c> a</c>

00:38:34.870 --> 00:38:34.880 align:start position:0%
it's the check to see if that is a
 

00:38:34.880 --> 00:38:36.790 align:start position:0%
it's the check to see if that is a
string<00:38:35.240><c> is</c><00:38:35.630><c> a</c><00:38:35.690><c> simple</c><00:38:36.110><c> compared</c><00:38:36.470><c> to</c><00:38:36.590><c> see</c><00:38:36.740><c> if</c>

00:38:36.790 --> 00:38:36.800 align:start position:0%
string is a simple compared to see if
 

00:38:36.800 --> 00:38:38.410 align:start position:0%
string is a simple compared to see if
the<00:38:36.890><c> classes</c><00:38:37.250><c> Aretha</c><00:38:37.610><c> I</c><00:38:37.820><c> don't</c><00:38:38.210><c> have</c><00:38:38.330><c> to</c>

00:38:38.410 --> 00:38:38.420 align:start position:0%
the classes Aretha I don't have to
 

00:38:38.420 --> 00:38:40.210 align:start position:0%
the classes Aretha I don't have to
search<00:38:38.630><c> at</c><00:38:38.750><c> the</c><00:38:38.840><c> class</c><00:38:39.050><c> hierarchy</c><00:38:39.260><c> in</c><00:38:39.740><c> order</c>

00:38:40.210 --> 00:38:40.220 align:start position:0%
search at the class hierarchy in order
 

00:38:40.220 --> 00:38:45.460 align:start position:0%
search at the class hierarchy in order
to<00:38:40.340><c> find</c><00:38:41.150><c> out</c><00:38:41.240><c> what's</c><00:38:41.540><c> going</c><00:38:41.630><c> on</c>

00:38:45.460 --> 00:38:45.470 align:start position:0%
 
 

00:38:45.470 --> 00:38:48.520 align:start position:0%
 
the<00:38:46.040><c> other</c><00:38:46.160><c> use</c><00:38:46.369><c> of</c><00:38:46.400><c> final</c><00:38:46.910><c> of</c><00:38:46.970><c> course</c><00:38:47.530><c> the</c>

00:38:48.520 --> 00:38:48.530 align:start position:0%
the other use of final of course the
 

00:38:48.530 --> 00:38:50.349 align:start position:0%
the other use of final of course the
other<00:38:48.650><c> use</c><00:38:48.800><c> of</c><00:38:48.830><c> finals</c><00:38:49.310><c> courses</c><00:38:49.640><c> on</c><00:38:49.910><c> statics</c>

00:38:50.349 --> 00:38:50.359 align:start position:0%
other use of finals courses on statics
 

00:38:50.359 --> 00:38:53.290 align:start position:0%
other use of finals courses on statics
and<00:38:50.680><c> this</c><00:38:51.680><c> says</c><00:38:51.890><c> this</c><00:38:52.580><c> value</c><00:38:52.910><c> is</c><00:38:53.060><c> constant</c>

00:38:53.290 --> 00:38:53.300 align:start position:0%
and this says this value is constant
 

00:38:53.300 --> 00:38:55.960 align:start position:0%
and this says this value is constant
it's<00:38:53.930><c> not</c><00:38:54.140><c> going</c><00:38:54.290><c> to</c><00:38:54.380><c> change</c><00:38:54.410><c> so</c><00:38:54.980><c> once</c><00:38:55.700><c> the</c>

00:38:55.960 --> 00:38:55.970 align:start position:0%
it's not going to change so once the
 

00:38:55.970 --> 00:38:57.339 align:start position:0%
it's not going to change so once the
just-in-time<00:38:56.450><c> compiler</c><00:38:56.960><c> knows</c><00:38:57.020><c> of</c><00:38:57.290><c> this</c>

00:38:57.339 --> 00:38:57.349 align:start position:0%
just-in-time compiler knows of this
 

00:38:57.349 --> 00:38:59.140 align:start position:0%
just-in-time compiler knows of this
constant<00:38:57.890><c> it</c><00:38:58.070><c> will</c><00:38:58.130><c> just</c><00:38:58.280><c> grab</c><00:38:58.520><c> it</c><00:38:58.580><c> and</c><00:38:58.880><c> say</c>

00:38:59.140 --> 00:38:59.150 align:start position:0%
constant it will just grab it and say
 

00:38:59.150 --> 00:39:02.140 align:start position:0%
constant it will just grab it and say
okay<00:38:59.510><c> I've</c><00:38:59.720><c> got</c><00:38:59.990><c> this</c><00:39:00.140><c> I</c><00:39:00.349><c> can</c><00:39:01.130><c> apply</c><00:39:01.430><c> it</c><00:39:01.490><c> to</c>

00:39:02.140 --> 00:39:02.150 align:start position:0%
okay I've got this I can apply it to
 

00:39:02.150 --> 00:39:04.150 align:start position:0%
okay I've got this I can apply it to
optimizations<00:39:02.840><c> in</c><00:39:02.930><c> the</c><00:39:03.050><c> code</c><00:39:03.260><c> and</c><00:39:03.859><c> in</c><00:39:04.070><c> this</c>

00:39:04.150 --> 00:39:04.160 align:start position:0%
optimizations in the code and in this
 

00:39:04.160 --> 00:39:06.190 align:start position:0%
optimizations in the code and in this
code<00:39:04.369><c> sequence</c><00:39:04.760><c> what</c><00:39:05.359><c> I</c><00:39:05.390><c> can</c><00:39:05.599><c> gain</c><00:39:05.780><c> here</c><00:39:06.050><c> is</c>

00:39:06.190 --> 00:39:06.200 align:start position:0%
code sequence what I can gain here is
 

00:39:06.200 --> 00:39:08.109 align:start position:0%
code sequence what I can gain here is
that<00:39:06.380><c> I</c><00:39:06.619><c> know</c><00:39:06.830><c> that</c><00:39:07.040><c> the</c><00:39:07.340><c> allocation</c><00:39:07.849><c> of</c><00:39:07.940><c> that</c>

00:39:08.109 --> 00:39:08.119 align:start position:0%
that I know that the allocation of that
 

00:39:08.119 --> 00:39:10.510 align:start position:0%
that I know that the allocation of that
character<00:39:08.720><c> rate</c><00:39:09.020><c> is</c><00:39:09.230><c> a</c><00:39:09.260><c> fixed</c><00:39:09.650><c> size</c><00:39:09.770><c> so</c><00:39:10.250><c> all</c><00:39:10.490><c> I</c>

00:39:10.510 --> 00:39:10.520 align:start position:0%
character rate is a fixed size so all I
 

00:39:10.520 --> 00:39:12.040 align:start position:0%
character rate is a fixed size so all I
have<00:39:10.640><c> to</c><00:39:10.700><c> do</c><00:39:10.820><c> is</c><00:39:10.940><c> increment</c><00:39:11.480><c> that</c><00:39:11.570><c> pointer</c><00:39:11.930><c> by</c>

00:39:12.040 --> 00:39:12.050 align:start position:0%
have to do is increment that pointer by
 

00:39:12.050 --> 00:39:14.109 align:start position:0%
have to do is increment that pointer by
six<00:39:12.349><c> shots</c><00:39:12.590><c> the</c><00:39:12.800><c> the</c><00:39:13.310><c> allocation</c><00:39:13.760><c> pointed</c><00:39:14.060><c> by</c>

00:39:14.109 --> 00:39:14.119 align:start position:0%
six shots the the allocation pointed by
 

00:39:14.119 --> 00:39:17.260 align:start position:0%
six shots the the allocation pointed by
a<00:39:14.150><c> fixed</c><00:39:14.390><c> size</c><00:39:14.570><c> full</c><00:39:15.500><c> month</c><00:39:15.740><c> don't</c><00:39:15.890><c> like</c><00:39:16.010><c> my</c><00:39:16.310><c> my</c>

00:39:17.260 --> 00:39:17.270 align:start position:0%
a fixed size full month don't like my my
 

00:39:17.270 --> 00:39:21.160 align:start position:0%
a fixed size full month don't like my my
array<00:39:17.599><c> declared</c><00:39:18.320><c> in</c><00:39:19.210><c> the</c><00:39:20.210><c> loop</c><00:39:20.390><c> I</c><00:39:20.660><c> know</c><00:39:20.869><c> that</c>

00:39:21.160 --> 00:39:21.170 align:start position:0%
array declared in the loop I know that
 

00:39:21.170 --> 00:39:22.720 align:start position:0%
array declared in the loop I know that
it's<00:39:21.260><c> a</c><00:39:21.320><c> fixed</c><00:39:21.590><c> size</c><00:39:21.710><c> loop</c><00:39:22.070><c> or</c><00:39:22.280><c> the</c><00:39:22.430><c> loop</c><00:39:22.580><c> is</c>

00:39:22.720 --> 00:39:22.730 align:start position:0%
it's a fixed size loop or the loop is
 

00:39:22.730 --> 00:39:24.760 align:start position:0%
it's a fixed size loop or the loop is
going<00:39:22.760><c> to</c><00:39:22.940><c> go</c><00:39:23.030><c> iterate</c><00:39:23.450><c> a</c><00:39:23.599><c> fixed</c><00:39:23.869><c> number</c><00:39:24.619><c> of</c>

00:39:24.760 --> 00:39:24.770 align:start position:0%
going to go iterate a fixed number of
 

00:39:24.770 --> 00:39:27.370 align:start position:0%
going to go iterate a fixed number of
times<00:39:24.980><c> 5032</c><00:39:25.580><c> so</c><00:39:26.270><c> I</c><00:39:26.300><c> can</c><00:39:26.510><c> actually</c><00:39:27.020><c> get</c><00:39:27.170><c> rid</c><00:39:27.349><c> of</c>

00:39:27.370 --> 00:39:27.380 align:start position:0%
times 5032 so I can actually get rid of
 

00:39:27.380 --> 00:39:28.810 align:start position:0%
times 5032 so I can actually get rid of
the<00:39:27.560><c> loop</c><00:39:27.710><c> and</c><00:39:27.920><c> maybe</c><00:39:28.070><c> do</c><00:39:28.250><c> a</c><00:39:28.280><c> blanket</c>

00:39:28.810 --> 00:39:28.820 align:start position:0%
the loop and maybe do a blanket
 

00:39:28.820 --> 00:39:32.580 align:start position:0%
the loop and maybe do a blanket
initialization<00:39:29.720><c> of</c><00:39:29.810><c> that</c><00:39:29.990><c> array</c><00:39:30.230><c> into</c><00:39:31.180><c> spaces</c>

00:39:32.580 --> 00:39:32.590 align:start position:0%
initialization of that array into spaces
 

00:39:32.590 --> 00:39:37.480 align:start position:0%
initialization of that array into spaces
so<00:39:35.710><c> if</c><00:39:36.710><c> you</c><00:39:36.890><c> have</c><00:39:37.010><c> a</c><00:39:37.040><c> choice</c><00:39:37.250><c> between</c>

00:39:37.480 --> 00:39:37.490 align:start position:0%
so if you have a choice between
 

00:39:37.490 --> 00:39:42.010 align:start position:0%
so if you have a choice between
declaring<00:39:38.270><c> class</c><00:39:39.280><c> hierarchy</c><00:39:40.720><c> virtual</c><00:39:41.720><c> class</c>

00:39:42.010 --> 00:39:42.020 align:start position:0%
declaring class hierarchy virtual class
 

00:39:42.020 --> 00:39:45.670 align:start position:0%
declaring class hierarchy virtual class
hierarchy<00:39:42.440><c> or</c><00:39:42.619><c> using</c><00:39:43.160><c> interfaces</c><00:39:44.530><c> you'll</c><00:39:45.530><c> get</c>

00:39:45.670 --> 00:39:45.680 align:start position:0%
hierarchy or using interfaces you'll get
 

00:39:45.680 --> 00:39:47.410 align:start position:0%
hierarchy or using interfaces you'll get
better<00:39:45.950><c> performance</c><00:39:46.160><c> from</c><00:39:46.700><c> virtual</c><00:39:47.210><c> calls</c>

00:39:47.410 --> 00:39:47.420 align:start position:0%
better performance from virtual calls
 

00:39:47.420 --> 00:39:50.320 align:start position:0%
better performance from virtual calls
than<00:39:47.720><c> you</c><00:39:47.840><c> will</c><00:39:48.050><c> sue</c><00:39:48.560><c> interface</c><00:39:48.950><c> calls</c><00:39:49.330><c> that's</c>

00:39:50.320 --> 00:39:50.330 align:start position:0%
than you will sue interface calls that's
 

00:39:50.330 --> 00:39:52.960 align:start position:0%
than you will sue interface calls that's
because<00:39:50.690><c> a</c><00:39:51.109><c> virtual</c><00:39:51.650><c> call</c><00:39:51.859><c> is</c><00:39:52.190><c> requires</c><00:39:52.820><c> a</c>

00:39:52.960 --> 00:39:52.970 align:start position:0%
because a virtual call is requires a
 

00:39:52.970 --> 00:39:56.260 align:start position:0%
because a virtual call is requires a
simple<00:39:53.420><c> index</c><00:39:53.930><c> into</c><00:39:54.770><c> an</c><00:39:54.859><c> array</c><00:39:55.099><c> to</c><00:39:55.430><c> get</c><00:39:56.119><c> the</c>

00:39:56.260 --> 00:39:56.270 align:start position:0%
simple index into an array to get the
 

00:39:56.270 --> 00:39:58.599 align:start position:0%
simple index into an array to get the
address<00:39:56.599><c> as</c><00:39:56.750><c> a</c><00:39:56.810><c> message</c><00:39:57.170><c> that</c><00:39:57.710><c> you</c><00:39:57.859><c> want</c><00:39:58.520><c> to</c>

00:39:58.599 --> 00:39:58.609 align:start position:0%
address as a message that you want to
 

00:39:58.609 --> 00:40:01.000 align:start position:0%
address as a message that you want to
call<00:39:58.849><c> where</c><00:39:59.780><c> an</c><00:39:59.900><c> interface</c><00:40:00.349><c> requires</c><00:40:00.830><c> that</c>

00:40:01.000 --> 00:40:01.010 align:start position:0%
call where an interface requires that
 

00:40:01.010 --> 00:40:02.530 align:start position:0%
call where an interface requires that
natural<00:40:01.339><c> search</c><00:40:01.580><c> of</c><00:40:01.730><c> the</c><00:40:01.849><c> class</c><00:40:02.060><c> to</c><00:40:02.240><c> make</c><00:40:02.359><c> sure</c>

00:40:02.530 --> 00:40:02.540 align:start position:0%
natural search of the class to make sure
 

00:40:02.540 --> 00:40:04.630 align:start position:0%
natural search of the class to make sure
we<00:40:02.930><c> find</c><00:40:03.200><c> the</c><00:40:03.320><c> implementer</c><00:40:03.859><c> of</c><00:40:03.890><c> the</c><00:40:04.130><c> class</c><00:40:04.339><c> and</c>

00:40:04.630 --> 00:40:04.640 align:start position:0%
we find the implementer of the class and
 

00:40:04.640 --> 00:40:06.670 align:start position:0%
we find the implementer of the class and
then<00:40:05.210><c> it</c><00:40:05.359><c> doesn't</c><00:40:05.390><c> indexing</c><00:40:06.080><c> inventory</c><00:40:06.530><c> so</c>

00:40:06.670 --> 00:40:06.680 align:start position:0%
then it doesn't indexing inventory so
 

00:40:06.680 --> 00:40:08.620 align:start position:0%
then it doesn't indexing inventory so
there's<00:40:06.830><c> a</c><00:40:06.890><c> little</c><00:40:06.950><c> bit</c><00:40:07.099><c> of</c><00:40:07.190><c> overhead</c><00:40:07.580><c> now</c><00:40:08.480><c> in</c>

00:40:08.620 --> 00:40:08.630 align:start position:0%
there's a little bit of overhead now in
 

00:40:08.630 --> 00:40:09.940 align:start position:0%
there's a little bit of overhead now in
Hawks<00:40:08.810><c> bars</c><00:40:09.080><c> are</c><00:40:09.230><c> very</c><00:40:09.380><c> clever</c><00:40:09.589><c> where</c><00:40:09.859><c> they</c>

00:40:09.940 --> 00:40:09.950 align:start position:0%
Hawks bars are very clever where they
 

00:40:09.950 --> 00:40:12.670 align:start position:0%
Hawks bars are very clever where they
actually<00:40:10.190><c> cashed</c><00:40:10.700><c> the</c><00:40:11.420><c> last</c><00:40:11.660><c> instruction</c><00:40:12.410><c> or</c>

00:40:12.670 --> 00:40:12.680 align:start position:0%
actually cashed the last instruction or
 

00:40:12.680 --> 00:40:14.320 align:start position:0%
actually cashed the last instruction or
last<00:40:12.980><c> method</c><00:40:13.280><c> that</c><00:40:13.490><c> you</c><00:40:13.609><c> called</c><00:40:13.880><c> from</c><00:40:14.240><c> a</c>

00:40:14.320 --> 00:40:14.330 align:start position:0%
last method that you called from a
 

00:40:14.330 --> 00:40:17.020 align:start position:0%
last method that you called from a
stickler<00:40:14.630><c> call</c><00:40:14.810><c> point</c><00:40:15.109><c> so</c><00:40:15.859><c> it's</c><00:40:16.700><c> a</c><00:40:16.760><c> little</c><00:40:16.880><c> bit</c>

00:40:17.020 --> 00:40:17.030 align:start position:0%
stickler call point so it's a little bit
 

00:40:17.030 --> 00:40:18.460 align:start position:0%
stickler call point so it's a little bit
better<00:40:17.180><c> in</c><00:40:17.390><c> hot</c><00:40:17.570><c> spots</c><00:40:17.839><c> but</c><00:40:18.020><c> it</c><00:40:18.140><c> still</c><00:40:18.260><c> has</c><00:40:18.349><c> to</c>

00:40:18.460 --> 00:40:18.470 align:start position:0%
better in hot spots but it still has to
 

00:40:18.470 --> 00:40:20.050 align:start position:0%
better in hot spots but it still has to
go<00:40:18.589><c> through</c><00:40:18.890><c> a</c><00:40:18.950><c> verification</c><00:40:18.980><c> to</c><00:40:19.760><c> make</c><00:40:19.910><c> sure</c>

00:40:20.050 --> 00:40:20.060 align:start position:0%
go through a verification to make sure
 

00:40:20.060 --> 00:40:21.820 align:start position:0%
go through a verification to make sure
that<00:40:20.270><c> well</c><00:40:20.660><c> really</c><00:40:21.050><c> is</c><00:40:21.200><c> an</c><00:40:21.380><c> instance</c><00:40:21.680><c> of</c><00:40:21.770><c> that</c>

00:40:21.820 --> 00:40:21.830 align:start position:0%
that well really is an instance of that
 

00:40:21.830 --> 00:40:24.490 align:start position:0%
that well really is an instance of that
class<00:40:21.950><c> that's</c><00:40:22.580><c> a</c><00:40:22.790><c> that</c><00:40:23.570><c> is</c><00:40:23.960><c> being</c><00:40:24.320><c> passed</c>

00:40:24.490 --> 00:40:24.500 align:start position:0%
class that's a that is being passed
 

00:40:24.500 --> 00:40:29.420 align:start position:0%
class that's a that is being passed
through

00:40:29.420 --> 00:40:29.430 align:start position:0%
 
 

00:40:29.430 --> 00:40:31.819 align:start position:0%
 
limit<00:40:30.210><c> the</c><00:40:30.300><c> use</c><00:40:30.329><c> of</c><00:40:30.480><c> J</c><00:40:30.900><c> and</c><00:40:30.930><c> I</c><00:40:31.140><c> and</c><00:40:31.349><c> J</c><00:40:31.470><c> direct</c>

00:40:31.819 --> 00:40:31.829 align:start position:0%
limit the use of J and I and J direct
 

00:40:31.829 --> 00:40:34.040 align:start position:0%
limit the use of J and I and J direct
and<00:40:32.240><c> initially</c><00:40:33.240><c> what</c><00:40:33.359><c> I</c><00:40:33.390><c> wanted</c><00:40:33.660><c> to</c><00:40:33.720><c> do</c><00:40:33.900><c> this</c>

00:40:34.040 --> 00:40:34.050 align:start position:0%
and initially what I wanted to do this
 

00:40:34.050 --> 00:40:38.390 align:start position:0%
and initially what I wanted to do this
 I<00:40:34.710><c> wanted</c><00:40:35.520><c> to</c><00:40:35.869><c> convey</c><00:40:36.869><c> to</c><00:40:36.930><c> you</c><00:40:37.230><c> that</c><00:40:37.400><c> if</c>

00:40:38.390 --> 00:40:38.400 align:start position:0%
 I wanted to convey to you that if
 

00:40:38.400 --> 00:40:40.760 align:start position:0%
 I wanted to convey to you that if
you<00:40:38.730><c> feel</c><00:40:39.329><c> you</c><00:40:39.569><c> can</c><00:40:39.720><c> do</c><00:40:39.809><c> it</c><00:40:39.960><c> get</c><00:40:40.650><c> better</c>

00:40:40.760 --> 00:40:40.770 align:start position:0%
you feel you can do it get better
 

00:40:40.770 --> 00:40:42.859 align:start position:0%
you feel you can do it get better
performance<00:40:40.950><c> out</c><00:40:41.339><c> of</c><00:40:41.400><c> see</c><00:40:41.760><c> you</c><00:40:42.660><c> should</c>

00:40:42.859 --> 00:40:42.869 align:start position:0%
performance out of see you should
 

00:40:42.869 --> 00:40:45.049 align:start position:0%
performance out of see you should
probably<00:40:43.130><c> really</c><00:40:44.130><c> rethink</c><00:40:44.609><c> it</c><00:40:44.700><c> a</c><00:40:44.760><c> little</c><00:40:44.880><c> bit</c>

00:40:45.049 --> 00:40:45.059 align:start position:0%
probably really rethink it a little bit
 

00:40:45.059 --> 00:40:47.180 align:start position:0%
probably really rethink it a little bit
and<00:40:45.210><c> think</c><00:40:45.390><c> that</c><00:40:45.839><c> Java</c><00:40:46.559><c> is</c><00:40:46.829><c> the</c><00:40:46.859><c> way</c><00:40:47.130><c> to</c>

00:40:47.180 --> 00:40:47.190 align:start position:0%
and think that Java is the way to
 

00:40:47.190 --> 00:40:49.400 align:start position:0%
and think that Java is the way to
actually<00:40:47.369><c> write</c><00:40:47.609><c> your</c><00:40:47.760><c> code</c><00:40:48.050><c> now</c><00:40:49.050><c> try</c><00:40:49.349><c> to</c>

00:40:49.400 --> 00:40:49.410 align:start position:0%
actually write your code now try to
 

00:40:49.410 --> 00:40:51.440 align:start position:0%
actually write your code now try to
avoid<00:40:49.589><c> going</c><00:40:50.069><c> off</c><00:40:50.369><c> and</c><00:40:50.670><c> doing</c><00:40:50.760><c> things</c><00:40:51.089><c> as</c><00:40:51.329><c> you</c>

00:40:51.440 --> 00:40:51.450 align:start position:0%
avoid going off and doing things as you
 

00:40:51.450 --> 00:40:54.620 align:start position:0%
avoid going off and doing things as you
can<00:40:52.250><c> because</c><00:40:53.250><c> the</c><00:40:53.460><c> optimization</c><00:40:54.240><c> levels</c><00:40:54.540><c> that</c>

00:40:54.620 --> 00:40:54.630 align:start position:0%
can because the optimization levels that
 

00:40:54.630 --> 00:40:56.450 align:start position:0%
can because the optimization levels that
you're<00:40:54.780><c> going</c><00:40:54.930><c> to</c><00:40:55.020><c> get</c><00:40:55.140><c> in</c><00:40:55.319><c> Java</c><00:40:55.530><c> will</c><00:40:55.950><c> be</c><00:40:56.190><c> free</c>

00:40:56.450 --> 00:40:56.460 align:start position:0%
you're going to get in Java will be free
 

00:40:56.460 --> 00:40:58.250 align:start position:0%
you're going to get in Java will be free
close<00:40:56.730><c> to</c><00:40:57.000><c> see</c><00:40:57.210><c> it's</c><00:40:57.569><c> not</c><00:40:57.750><c> better</c><00:40:57.930><c> depending</c>

00:40:58.250 --> 00:40:58.260 align:start position:0%
close to see it's not better depending
 

00:40:58.260 --> 00:41:00.140 align:start position:0%
close to see it's not better depending
on<00:40:58.470><c> which</c><00:40:58.589><c> kind</c><00:40:59.130><c> of</c><00:40:59.190><c> level</c><00:40:59.430><c> of</c><00:40:59.490><c> optimization</c>

00:41:00.140 --> 00:41:00.150 align:start position:0%
on which kind of level of optimization
 

00:41:00.150 --> 00:41:04.250 align:start position:0%
on which kind of level of optimization
that<00:41:01.140><c> you're</c><00:41:01.319><c> doing</c><00:41:02.450><c> when</c><00:41:03.450><c> you're</c><00:41:03.540><c> using</c><00:41:03.720><c> J&amp;I</c>

00:41:04.250 --> 00:41:04.260 align:start position:0%
that you're doing when you're using J&amp;I
 

00:41:04.260 --> 00:41:06.530 align:start position:0%
that you're doing when you're using J&amp;I
there's<00:41:04.589><c> a</c><00:41:04.670><c> translation</c><00:41:05.670><c> layer</c><00:41:05.910><c> that</c><00:41:06.210><c> has</c><00:41:06.270><c> to</c>

00:41:06.530 --> 00:41:06.540 align:start position:0%
there's a translation layer that has to
 

00:41:06.540 --> 00:41:07.910 align:start position:0%
there's a translation layer that has to
take<00:41:06.569><c> place</c><00:41:06.750><c> you</c><00:41:07.170><c> could</c><00:41:07.319><c> translate</c><00:41:07.650><c> into</c>

00:41:07.910 --> 00:41:07.920 align:start position:0%
take place you could translate into
 

00:41:07.920 --> 00:41:10.460 align:start position:0%
take place you could translate into
these<00:41:08.130><c> visitors</c><00:41:08.819><c> system</c><00:41:09.270><c> and</c><00:41:09.480><c> then</c><00:41:10.170><c> coming</c>

00:41:10.460 --> 00:41:10.470 align:start position:0%
these visitors system and then coming
 

00:41:10.470 --> 00:41:11.569 align:start position:0%
these visitors system and then coming
back<00:41:10.500><c> again</c><00:41:10.770><c> you</c><00:41:11.040><c> have</c><00:41:11.130><c> to</c><00:41:11.280><c> actually</c><00:41:11.369><c> do</c><00:41:11.550><c> a</c>

00:41:11.569 --> 00:41:11.579 align:start position:0%
back again you have to actually do a
 

00:41:11.579 --> 00:41:13.430 align:start position:0%
back again you have to actually do a
lookup<00:41:11.910><c> for</c><00:41:12.059><c> the</c><00:41:12.150><c> methods</c><00:41:12.480><c> in</c><00:41:12.540><c> order</c><00:41:12.630><c> to</c><00:41:12.930><c> find</c>

00:41:13.430 --> 00:41:13.440 align:start position:0%
lookup for the methods in order to find
 

00:41:13.440 --> 00:41:14.569 align:start position:0%
lookup for the methods in order to find
out<00:41:13.530><c> which</c><00:41:13.650><c> method</c><00:41:13.950><c> is</c><00:41:14.010><c> called</c><00:41:14.160><c> back</c><00:41:14.369><c> into</c>

00:41:14.569 --> 00:41:14.579 align:start position:0%
out which method is called back into
 

00:41:14.579 --> 00:41:19.000 align:start position:0%
out which method is called back into
into<00:41:15.390><c> the</c><00:41:15.510><c> vm</c><00:41:15.780><c> so</c><00:41:16.710><c> use</c><00:41:16.920><c> java</c><00:41:17.280><c> as</c><00:41:17.579><c> much</c><00:41:17.819><c> as</c><00:41:17.970><c> fun</c>

00:41:19.000 --> 00:41:19.010 align:start position:0%
into the vm so use java as much as fun
 

00:41:19.010 --> 00:41:22.400 align:start position:0%
into the vm so use java as much as fun
and<00:41:20.089><c> so</c><00:41:21.089><c> in</c><00:41:21.210><c> conclusion</c><00:41:21.390><c> i</c><00:41:21.869><c> just</c><00:41:22.260><c> want</c><00:41:22.380><c> to</c>

00:41:22.400 --> 00:41:22.410 align:start position:0%
and so in conclusion i just want to
 

00:41:22.410 --> 00:41:24.589 align:start position:0%
and so in conclusion i just want to
repeat<00:41:22.680><c> what</c><00:41:22.819><c> Devon</c><00:41:23.819><c> said</c><00:41:24.089><c> earlier</c><00:41:24.390><c> but</c>

00:41:24.589 --> 00:41:24.599 align:start position:0%
repeat what Devon said earlier but
 

00:41:24.599 --> 00:41:26.839 align:start position:0%
repeat what Devon said earlier but
you're<00:41:25.260><c> the</c><00:41:25.710><c> best</c><00:41:25.740><c> thing</c><00:41:26.190><c> first</c><00:41:26.490><c> of</c><00:41:26.609><c> all</c><00:41:26.700><c> is</c>

00:41:26.839 --> 00:41:26.849 align:start position:0%
you're the best thing first of all is
 

00:41:26.849 --> 00:41:28.099 align:start position:0%
you're the best thing first of all is
that<00:41:26.880><c> make</c><00:41:27.089><c> sure</c><00:41:27.210><c> that</c><00:41:27.390><c> your</c><00:41:27.510><c> application</c><00:41:27.660><c> has</c>

00:41:28.099 --> 00:41:28.109 align:start position:0%
that make sure that your application has
 

00:41:28.109 --> 00:41:32.059 align:start position:0%
that make sure that your application has
a<00:41:28.290><c> good</c><00:41:28.530><c> design</c><00:41:29.480><c> okay</c><00:41:30.480><c> and</c><00:41:31.020><c> watch</c><00:41:31.440><c> that</c><00:41:31.680><c> you</c>

00:41:32.059 --> 00:41:32.069 align:start position:0%
a good design okay and watch that you
 

00:41:32.069 --> 00:41:34.010 align:start position:0%
a good design okay and watch that you
have<00:41:32.190><c> a</c><00:41:32.220><c> good</c><00:41:32.430><c> design</c><00:41:32.700><c> then</c><00:41:32.880><c> go</c><00:41:33.119><c> back</c><00:41:33.540><c> and</c><00:41:33.900><c> look</c>

00:41:34.010 --> 00:41:34.020 align:start position:0%
have a good design then go back and look
 

00:41:34.020 --> 00:41:35.900 align:start position:0%
have a good design then go back and look
at<00:41:34.200><c> places</c><00:41:34.380><c> where</c><00:41:34.559><c> your</c><00:41:34.829><c> you</c><00:41:35.220><c> need</c><00:41:35.460><c> to</c><00:41:35.579><c> improve</c>

00:41:35.900 --> 00:41:35.910 align:start position:0%
at places where your you need to improve
 

00:41:35.910 --> 00:41:37.370 align:start position:0%
at places where your you need to improve
performance<00:41:36.299><c> we</c><00:41:37.020><c> didn't</c><00:41:37.230><c> talk</c><00:41:37.319><c> about</c>

00:41:37.370 --> 00:41:37.380 align:start position:0%
performance we didn't talk about
 

00:41:37.380 --> 00:41:40.160 align:start position:0%
performance we didn't talk about
performance<00:41:38.099><c> tools</c><00:41:38.339><c> here</c><00:41:39.270><c> yet</c><00:41:39.450><c> because</c><00:41:39.720><c> we're</c>

00:41:40.160 --> 00:41:40.170 align:start position:0%
performance tools here yet because we're
 

00:41:40.170 --> 00:41:41.630 align:start position:0%
performance tools here yet because we're
not<00:41:40.290><c> really</c><00:41:40.799><c> finished</c><00:41:41.069><c> with</c><00:41:41.280><c> them</c><00:41:41.400><c> yet</c><00:41:41.430><c> but</c>

00:41:41.630 --> 00:41:41.640 align:start position:0%
not really finished with them yet but
 

00:41:41.640 --> 00:41:44.630 align:start position:0%
not really finished with them yet but
watch<00:41:42.630><c> bata</c><00:41:42.869><c> is</c><00:41:43.140><c> actually</c><00:41:43.589><c> releases</c><00:41:44.099><c> its</c>

00:41:44.630 --> 00:41:44.640 align:start position:0%
watch bata is actually releases its
 

00:41:44.640 --> 00:41:49.609 align:start position:0%
watch bata is actually releases its
release<00:41:44.940><c> with</c><00:41:45.750><c> a</c><00:41:46.250><c> pipe</c><00:41:47.250><c> and</c><00:41:47.400><c> x</c><00:41:47.549><c> prof</c><00:41:48.329><c> ok</c><00:41:49.020><c> which</c>

00:41:49.609 --> 00:41:49.619 align:start position:0%
release with a pipe and x prof ok which
 

00:41:49.619 --> 00:41:52.400 align:start position:0%
release with a pipe and x prof ok which
will<00:41:49.799><c> give</c><00:41:49.980><c> you</c><00:41:50.099><c> a</c><00:41:50.160><c> profile</c><00:41:50.700><c> of</c><00:41:51.079><c> the</c><00:41:52.079><c> methods</c>

00:41:52.400 --> 00:41:52.410 align:start position:0%
will give you a profile of the methods
 

00:41:52.410 --> 00:41:53.599 align:start position:0%
will give you a profile of the methods
that<00:41:52.470><c> have</c><00:41:52.710><c> been</c><00:41:52.770><c> executing</c><00:41:53.400><c> and</c><00:41:53.520><c> what</c>

00:41:53.599 --> 00:41:53.609 align:start position:0%
that have been executing and what
 

00:41:53.609 --> 00:41:54.980 align:start position:0%
that have been executing and what
percentage<00:41:53.730><c> of</c><00:41:54.059><c> time</c><00:41:54.240><c> that</c><00:41:54.299><c> you</c><00:41:54.510><c> spend</c><00:41:54.780><c> in</c>

00:41:54.980 --> 00:41:54.990 align:start position:0%
percentage of time that you spend in
 

00:41:54.990 --> 00:41:57.319 align:start position:0%
percentage of time that you spend in
there<00:41:55.200><c> as</c><00:41:56.190><c> we</c><00:41:56.579><c> go</c><00:41:56.730><c> on</c><00:41:56.760><c> we're</c><00:41:57.059><c> going</c><00:41:57.150><c> to</c><00:41:57.240><c> have</c>

00:41:57.319 --> 00:41:57.329 align:start position:0%
there as we go on we're going to have
 

00:41:57.329 --> 00:41:59.990 align:start position:0%
there as we go on we're going to have
better<00:41:57.420><c> tools</c><00:41:57.690><c> as</c><00:41:58.020><c> h</c><00:41:58.319><c> cross</c><00:41:58.619><c> tools</c><00:41:58.920><c> that</c><00:41:59.579><c> will</c>

00:41:59.990 --> 00:42:00.000 align:start position:0%
better tools as h cross tools that will
 

00:42:00.000 --> 00:42:01.940 align:start position:0%
better tools as h cross tools that will
give<00:42:00.210><c> you</c><00:42:00.299><c> much</c><00:42:00.540><c> more</c><00:42:00.930><c> detailed</c><00:42:01.290><c> reports</c><00:42:01.740><c> on</c>

00:42:01.940 --> 00:42:01.950 align:start position:0%
give you much more detailed reports on
 

00:42:01.950 --> 00:42:04.069 align:start position:0%
give you much more detailed reports on
and<00:42:01.980><c> performance</c><00:42:02.700><c> so</c><00:42:03.270><c> get</c><00:42:03.630><c> a</c><00:42:03.660><c> good</c><00:42:03.809><c> design</c>

00:42:04.069 --> 00:42:04.079 align:start position:0%
and performance so get a good design
 

00:42:04.079 --> 00:42:06.799 align:start position:0%
and performance so get a good design
your<00:42:04.230><c> application</c><00:42:05.119><c> then</c><00:42:06.119><c> go</c><00:42:06.270><c> back</c><00:42:06.420><c> and</c><00:42:06.480><c> then</c>

00:42:06.799 --> 00:42:06.809 align:start position:0%
your application then go back and then
 

00:42:06.809 --> 00:42:08.329 align:start position:0%
your application then go back and then
start<00:42:07.020><c> tweaking</c><00:42:07.200><c> it</c><00:42:07.470><c> and</c><00:42:07.589><c> maybe</c><00:42:07.710><c> apply</c><00:42:07.980><c> a</c><00:42:08.069><c> few</c>

00:42:08.329 --> 00:42:08.339 align:start position:0%
start tweaking it and maybe apply a few
 

00:42:08.339 --> 00:42:09.650 align:start position:0%
start tweaking it and maybe apply a few
of<00:42:08.430><c> these</c><00:42:08.520><c> hints</c><00:42:08.760><c> so</c><00:42:08.940><c> that</c><00:42:09.059><c> you</c><00:42:09.180><c> can</c><00:42:09.329><c> get</c><00:42:09.450><c> for</c>

00:42:09.650 --> 00:42:09.660 align:start position:0%
of these hints so that you can get for
 

00:42:09.660 --> 00:42:10.430 align:start position:0%
of these hints so that you can get for
different

00:42:10.430 --> 00:42:10.440 align:start position:0%
different
 

00:42:10.440 --> 00:42:12.680 align:start position:0%
different
I'm<00:42:10.619><c> compiler</c><00:42:11.040><c> to</c><00:42:11.369><c> produce</c><00:42:11.940><c> better</c><00:42:12.240><c> code</c><00:42:12.510><c> for</c>

00:42:12.680 --> 00:42:12.690 align:start position:0%
I'm compiler to produce better code for
 

00:42:12.690 --> 00:42:17.500 align:start position:0%
I'm compiler to produce better code for
you<00:42:12.920><c> ok</c>

00:42:17.500 --> 00:42:17.510 align:start position:0%
 
 

00:42:17.510 --> 00:42:28.660 align:start position:0%
 
[Applause]

00:42:28.660 --> 00:42:28.670 align:start position:0%
 
 

00:42:28.670 --> 00:42:31.510 align:start position:0%
 
so<00:42:29.240><c> hi</c><00:42:29.390><c> I'm</c><00:42:29.540><c> John</c><00:42:29.809><c> berkey</c><00:42:30.109><c> and</c><00:42:30.380><c> I</c><00:42:30.680><c> my</c><00:42:30.799><c> Nativity</c>

00:42:31.510 --> 00:42:31.520 align:start position:0%
so hi I'm John berkey and I my Nativity
 

00:42:31.520 --> 00:42:34.630 align:start position:0%
so hi I'm John berkey and I my Nativity
King<00:42:31.730><c> and</c><00:42:32.799><c> I'm</c><00:42:33.799><c> going</c><00:42:33.980><c> to</c><00:42:34.010><c> talk</c><00:42:34.190><c> about</c><00:42:34.339><c> a</c>

00:42:34.630 --> 00:42:34.640 align:start position:0%
King and I'm going to talk about a
 

00:42:34.640 --> 00:42:36.160 align:start position:0%
King and I'm going to talk about a
little<00:42:34.819><c> bit</c><00:42:34.940><c> different</c><00:42:35.359><c> side</c><00:42:35.569><c> of</c><00:42:35.599><c> performance</c>

00:42:36.160 --> 00:42:36.170 align:start position:0%
little bit different side of performance
 

00:42:36.170 --> 00:42:38.380 align:start position:0%
little bit different side of performance
and<00:42:36.319><c> that's</c><00:42:36.530><c> how</c><00:42:36.799><c> we</c><00:42:37.190><c> can</c><00:42:37.339><c> work</c><00:42:37.369><c> together</c><00:42:37.670><c> to</c>

00:42:38.380 --> 00:42:38.390 align:start position:0%
and that's how we can work together to
 

00:42:38.390 --> 00:42:41.079 align:start position:0%
and that's how we can work together to
group<00:42:39.020><c> performance</c><00:42:39.760><c> specifically</c><00:42:40.760><c> from</c><00:42:40.940><c> the</c>

00:42:41.079 --> 00:42:41.089 align:start position:0%
group performance specifically from the
 

00:42:41.089 --> 00:42:43.450 align:start position:0%
group performance specifically from the
framework<00:42:41.599><c> level</c><00:42:41.900><c> lot</c><00:42:42.650><c> of</c><00:42:42.680><c> a</c><00:42:42.799><c> just</c><00:42:43.069><c> heard</c><00:42:43.250><c> is</c>

00:42:43.450 --> 00:42:43.460 align:start position:0%
framework level lot of a just heard is
 

00:42:43.460 --> 00:42:46.299 align:start position:0%
framework level lot of a just heard is
about<00:42:43.730><c> how</c><00:42:44.660><c> do</c><00:42:44.720><c> I</c><00:42:44.809><c> good</c><00:42:45.020><c> methods</c><00:42:45.380><c> and</c><00:42:45.559><c> good</c>

00:42:46.299 --> 00:42:46.309 align:start position:0%
about how do I good methods and good
 

00:42:46.309 --> 00:42:49.210 align:start position:0%
about how do I good methods and good
class<00:42:46.520><c> yourself</c><00:42:47.079><c> but</c><00:42:48.079><c> from</c><00:42:48.260><c> the</c><00:42:48.380><c> ADA</c><00:42:48.859><c> bikies</c>

00:42:49.210 --> 00:42:49.220 align:start position:0%
class yourself but from the ADA bikies
 

00:42:49.220 --> 00:42:51.190 align:start position:0%
class yourself but from the ADA bikies
perspective<00:42:49.849><c> we're</c><00:42:50.450><c> more</c><00:42:50.690><c> concerned</c><00:42:50.900><c> with</c>

00:42:51.190 --> 00:42:51.200 align:start position:0%
perspective we're more concerned with
 

00:42:51.200 --> 00:42:53.410 align:start position:0%
perspective we're more concerned with
just<00:42:52.160><c> highlighting</c><00:42:52.609><c> a</c><00:42:52.670><c> few</c><00:42:52.849><c> things</c><00:42:53.059><c> that</c><00:42:53.299><c> will</c>

00:42:53.410 --> 00:42:53.420 align:start position:0%
just highlighting a few things that will
 

00:42:53.420 --> 00:42:55.900 align:start position:0%
just highlighting a few things that will
help<00:42:53.569><c> you</c><00:42:53.839><c> use</c><00:42:54.559><c> our</c><00:42:54.740><c> frameworks</c><00:42:55.250><c> actually</c>

00:42:55.900 --> 00:42:55.910 align:start position:0%
help you use our frameworks actually
 

00:42:55.910 --> 00:42:57.700 align:start position:0%
help you use our frameworks actually
traveled<00:42:56.240><c> up</c><00:42:56.359><c> from</c><00:42:56.390><c> the</c><00:42:56.599><c> time</c><00:42:56.839><c> limitations</c><00:42:57.530><c> of</c>

00:42:57.700 --> 00:42:57.710 align:start position:0%
traveled up from the time limitations of
 

00:42:57.710 --> 00:43:01.809 align:start position:0%
traveled up from the time limitations of
funds<00:42:58.670><c> are</c><00:42:58.970><c> friendly</c><00:42:59.359><c> so</c><00:43:00.170><c> anyway</c><00:43:00.640><c> there</c><00:43:01.640><c> are</c>

00:43:01.809 --> 00:43:01.819 align:start position:0%
funds are friendly so anyway there are
 

00:43:01.819 --> 00:43:04.980 align:start position:0%
funds are friendly so anyway there are
five<00:43:02.180><c> major</c><00:43:02.359><c> areas</c><00:43:02.510><c> in</c><00:43:02.900><c> the</c><00:43:02.990><c> cover</c><00:43:03.230><c> are</c><00:43:03.440><c> here</c>

00:43:04.980 --> 00:43:04.990 align:start position:0%
five major areas in the cover are here
 

00:43:04.990 --> 00:43:10.000 align:start position:0%
five major areas in the cover are here
to<00:43:05.990><c> read</c><00:43:06.140><c> them</c><00:43:06.260><c> but</c><00:43:07.809><c> basically</c><00:43:08.829><c> you'll</c><00:43:09.829><c> see</c><00:43:09.980><c> a</c>

00:43:10.000 --> 00:43:10.010 align:start position:0%
to read them but basically you'll see a
 

00:43:10.010 --> 00:43:14.079 align:start position:0%
to read them but basically you'll see a
lot<00:43:10.220><c> of</c><00:43:10.250><c> usage</c><00:43:10.640><c> pattern</c><00:43:10.970><c> kind</c><00:43:11.210><c> of</c><00:43:11.270><c> stuff</c><00:43:13.089><c> so</c>

00:43:14.079 --> 00:43:14.089 align:start position:0%
lot of usage pattern kind of stuff so
 

00:43:14.089 --> 00:43:16.240 align:start position:0%
lot of usage pattern kind of stuff so
for<00:43:14.390><c> image</c><00:43:14.599><c> creation</c><00:43:14.930><c> the</c><00:43:15.770><c> main</c><00:43:15.950><c> thing</c><00:43:15.980><c> is</c>

00:43:16.240 --> 00:43:16.250 align:start position:0%
for image creation the main thing is
 

00:43:16.250 --> 00:43:18.520 align:start position:0%
for image creation the main thing is
there's<00:43:17.119><c> a</c><00:43:17.240><c> new</c><00:43:17.450><c> column</c><00:43:17.750><c> job</c><00:43:17.930><c> of</c><00:43:18.079><c> you</c><00:43:18.230><c> called</c>

00:43:18.520 --> 00:43:18.530 align:start position:0%
there's a new column job of you called
 

00:43:18.530 --> 00:43:21.789 align:start position:0%
there's a new column job of you called
get<00:43:18.799><c> compatible</c><00:43:19.280><c> image</c><00:43:19.609><c> and</c><00:43:19.910><c> for</c><00:43:20.780><c> all</c><00:43:20.960><c> the</c><00:43:21.170><c> 11</c>

00:43:21.789 --> 00:43:21.799 align:start position:0%
get compatible image and for all the 11
 

00:43:21.799 --> 00:43:25.359 align:start position:0%
get compatible image and for all the 11
usage<00:43:22.359><c> specifically</c><00:43:23.359><c> swing</c><00:43:24.069><c> the</c><00:43:25.069><c> kinds</c><00:43:25.309><c> of</c>

00:43:25.359 --> 00:43:25.369 align:start position:0%
usage specifically swing the kinds of
 

00:43:25.369 --> 00:43:26.829 align:start position:0%
usage specifically swing the kinds of
things<00:43:25.460><c> that</c><00:43:25.640><c> are</c><00:43:25.819><c> in</c><00:43:25.940><c> the</c><00:43:26.000><c> toolkit</c><00:43:26.329><c> class</c><00:43:26.569><c> a</c>

00:43:26.829 --> 00:43:26.839 align:start position:0%
things that are in the toolkit class a
 

00:43:26.839 --> 00:43:28.359 align:start position:0%
things that are in the toolkit class a
lot<00:43:27.260><c> of</c><00:43:27.380><c> math</c><00:43:27.500><c> you</c><00:43:27.619><c> take</c><00:43:27.799><c> care</c><00:43:27.950><c> of</c><00:43:28.010><c> this</c><00:43:28.099><c> for</c>

00:43:28.359 --> 00:43:28.369 align:start position:0%
lot of math you take care of this for
 

00:43:28.369 --> 00:43:31.839 align:start position:0%
lot of math you take care of this for
you<00:43:28.599><c> and</c><00:43:29.599><c> what</c><00:43:29.930><c> this</c><00:43:30.049><c> will</c><00:43:30.109><c> do</c><00:43:30.380><c> is</c><00:43:30.849><c> depending</c>

00:43:31.839 --> 00:43:31.849 align:start position:0%
you and what this will do is depending
 

00:43:31.849 --> 00:43:34.150 align:start position:0%
you and what this will do is depending
on the<00:43:31.970><c> decisions</c><00:43:32.329><c> we</c><00:43:32.480><c> make</c><00:43:32.510><c> based</c><00:43:33.470><c> on</c><00:43:33.680><c> device</c>

00:43:34.150 --> 00:43:34.160 align:start position:0%
on the decisions we make based on device
 

00:43:34.160 --> 00:43:35.920 align:start position:0%
on the decisions we make based on device
steps<00:43:34.430><c> and</c><00:43:34.609><c> stuff</c><00:43:34.819><c> we'll</c><00:43:35.390><c> make</c><00:43:35.540><c> sure</c><00:43:35.720><c> that</c>

00:43:35.920 --> 00:43:35.930 align:start position:0%
steps and stuff we'll make sure that
 

00:43:35.930 --> 00:43:39.910 align:start position:0%
steps and stuff we'll make sure that
it's<00:43:36.049><c> the</c><00:43:36.140><c> optimum</c><00:43:36.920><c> image</c><00:43:38.349><c> most</c><00:43:39.349><c> users</c><00:43:39.799><c> of</c>

00:43:39.910 --> 00:43:39.920 align:start position:0%
it's the optimum image most users of
 

00:43:39.920 --> 00:43:41.950 align:start position:0%
it's the optimum image most users of
image<00:43:40.160><c> don't</c><00:43:41.119><c> need</c><00:43:41.270><c> doing</c><00:43:41.540><c> together</c><00:43:41.660><c> than</c>

00:43:41.950 --> 00:43:41.960 align:start position:0%
image don't need doing together than
 

00:43:41.960 --> 00:43:46.690 align:start position:0%
image don't need doing together than
this<00:43:42.109><c> and</c><00:43:42.920><c> if</c><00:43:43.849><c> you</c><00:43:43.940><c> do</c><00:43:44.089><c> need</c><00:43:44.240><c> to</c><00:43:44.390><c> dive</c><00:43:44.569><c> into</c><00:43:45.700><c> bit</c>

00:43:46.690 --> 00:43:46.700 align:start position:0%
this and if you do need to dive into bit
 

00:43:46.700 --> 00:43:48.610 align:start position:0%
this and if you do need to dive into bit
style<00:43:47.450><c> manipulation</c><00:43:48.049><c> of</c><00:43:48.109><c> the</c><00:43:48.140><c> image</c>

00:43:48.610 --> 00:43:48.620 align:start position:0%
style manipulation of the image
 

00:43:48.620 --> 00:43:51.280 align:start position:0%
style manipulation of the image
and<00:43:49.390><c> number</c><00:43:50.390><c> one</c><00:43:50.600><c> check</c><00:43:50.900><c> make</c><00:43:51.080><c> sure</c><00:43:51.110><c> you</c>

00:43:51.280 --> 00:43:51.290 align:start position:0%
and number one check make sure you
 

00:43:51.290 --> 00:43:53.230 align:start position:0%
and number one check make sure you
really<00:43:51.500><c> want</c><00:43:51.530><c> to</c><00:43:51.740><c> do</c><00:43:51.860><c> that</c><00:43:52.010><c> and</c><00:43:52.190><c> then</c><00:43:52.640><c> go</c><00:43:53.060><c> into</c>

00:43:53.230 --> 00:43:53.240 align:start position:0%
really want to do that and then go into
 

00:43:53.240 --> 00:43:54.730 align:start position:0%
really want to do that and then go into
the<00:43:53.390><c> imaging</c><00:43:53.690><c> classes</c><00:43:54.110><c> and</c><00:43:54.320><c> that'd</c><00:43:54.440><c> be</c><00:43:54.470><c> real</c>

00:43:54.730 --> 00:43:54.740 align:start position:0%
the imaging classes and that'd be real
 

00:43:54.740 --> 00:43:57.070 align:start position:0%
the imaging classes and that'd be real
careful<00:43:54.980><c> about</c><00:43:55.190><c> the</c><00:43:55.340><c> ones</c><00:43:55.490><c> you</c><00:43:55.610><c> check</c><00:43:56.050><c> one</c><00:43:57.050><c> of</c>

00:43:57.070 --> 00:43:57.080 align:start position:0%
careful about the ones you check one of
 

00:43:57.080 --> 00:43:58.750 align:start position:0%
careful about the ones you check one of
the<00:43:57.200><c> cases</c><00:43:57.410><c> here</c><00:43:57.800><c> is</c><00:43:57.980><c> that</c><00:43:58.250><c> there</c><00:43:58.430><c> are</c><00:43:58.460><c> some</c>

00:43:58.750 --> 00:43:58.760 align:start position:0%
the cases here is that there are some
 

00:43:58.760 --> 00:44:00.520 align:start position:0%
the cases here is that there are some
image<00:43:59.000><c> types</c><00:43:59.270><c> on</c><00:43:59.450><c> windows</c><00:43:59.840><c> for</c><00:44:00.080><c> example</c><00:44:00.440><c> that</c>

00:44:00.520 --> 00:44:00.530 align:start position:0%
image types on windows for example that
 

00:44:00.530 --> 00:44:04.990 align:start position:0%
image types on windows for example that
aren't<00:44:00.830><c> as</c><00:44:01.460><c> a</c><00:44:01.880><c> common</c><00:44:02.870><c> on</c><00:44:02.990><c> Mac</c><00:44:03.200><c> and</c><00:44:03.530><c> so</c><00:44:04.430><c> they</c>

00:44:04.990 --> 00:44:05.000 align:start position:0%
aren't as a common on Mac and so they
 

00:44:05.000 --> 00:44:08.680 align:start position:0%
aren't as a common on Mac and so they
may<00:44:05.120><c> not</c><00:44:05.240><c> perform</c><00:44:05.450><c> into</c><00:44:05.900><c> expected</c><00:44:07.330><c> and</c><00:44:08.330><c> again</c>

00:44:08.680 --> 00:44:08.690 align:start position:0%
may not perform into expected and again
 

00:44:08.690 --> 00:44:10.570 align:start position:0%
may not perform into expected and again
so<00:44:08.960><c> get</c><00:44:09.470><c> some</c><00:44:09.620><c> credible</c><00:44:09.980><c> image</c><00:44:10.190><c> of</c><00:44:10.310><c> stuff</c><00:44:10.460><c> from</c>

00:44:10.570 --> 00:44:10.580 align:start position:0%
so get some credible image of stuff from
 

00:44:10.580 --> 00:44:15.160 align:start position:0%
so get some credible image of stuff from
the<00:44:10.700><c> first</c><00:44:10.940><c> choice</c><00:44:13.480><c> the</c><00:44:14.480><c> next</c><00:44:14.690><c> thing</c><00:44:14.840><c> is</c><00:44:14.900><c> a</c>

00:44:15.160 --> 00:44:15.170 align:start position:0%
the first choice the next thing is a
 

00:44:15.170 --> 00:44:19.150 align:start position:0%
the first choice the next thing is a
thing<00:44:16.130><c> called</c><00:44:16.160><c> rendering</c><00:44:16.550><c> hints</c><00:44:17.000><c> and</c><00:44:17.890><c> if</c><00:44:18.890><c> you</c>

00:44:19.150 --> 00:44:19.160 align:start position:0%
thing called rendering hints and if you
 

00:44:19.160 --> 00:44:21.220 align:start position:0%
thing called rendering hints and if you
have<00:44:19.400><c> a</c><00:44:19.430><c> graphics</c><00:44:19.820><c> object</c><00:44:20.210><c> you</c><00:44:20.570><c> can</c><00:44:20.630><c> both</c><00:44:20.930><c> get</c>

00:44:21.220 --> 00:44:21.230 align:start position:0%
have a graphics object you can both get
 

00:44:21.230 --> 00:44:24.670 align:start position:0%
have a graphics object you can both get
the<00:44:21.290><c> list</c><00:44:21.950><c> of</c><00:44:22.450><c> default</c><00:44:23.450><c> hands</c><00:44:23.780><c> and</c><00:44:23.960><c> also</c><00:44:24.290><c> set</c>

00:44:24.670 --> 00:44:24.680 align:start position:0%
the list of default hands and also set
 

00:44:24.680 --> 00:44:28.000 align:start position:0%
the list of default hands and also set
your<00:44:24.830><c> own</c><00:44:24.860><c> and</c><00:44:25.250><c> the</c><00:44:25.940><c> basic</c><00:44:26.270><c> idea</c><00:44:26.540><c> is</c><00:44:26.600><c> that</c><00:44:27.010><c> with</c>

00:44:28.000 --> 00:44:28.010 align:start position:0%
your own and the basic idea is that with
 

00:44:28.010 --> 00:44:31.900 align:start position:0%
your own and the basic idea is that with
Java<00:44:28.250><c> too</c><00:44:28.580><c> there's</c><00:44:29.920><c> an</c><00:44:30.920><c> ability</c><00:44:31.220><c> to</c><00:44:31.430><c> do</c><00:44:31.670><c> a</c><00:44:31.700><c> lot</c>

00:44:31.900 --> 00:44:31.910 align:start position:0%
Java too there's an ability to do a lot
 

00:44:31.910 --> 00:44:33.460 align:start position:0%
Java too there's an ability to do a lot
of<00:44:31.970><c> really</c><00:44:32.300><c> nice</c><00:44:32.420><c> graphics</c><00:44:32.960><c> you</c><00:44:33.170><c> can</c><00:44:33.200><c> do</c>

00:44:33.460 --> 00:44:33.470 align:start position:0%
of really nice graphics you can do
 

00:44:33.470 --> 00:44:36.130 align:start position:0%
of really nice graphics you can do
anti-alias<00:44:34.340><c> text</c><00:44:34.730><c> anti-aliased</c><00:44:35.330><c> primitives</c>

00:44:36.130 --> 00:44:36.140 align:start position:0%
anti-alias text anti-aliased primitives
 

00:44:36.140 --> 00:44:39.300 align:start position:0%
anti-alias text anti-aliased primitives
you<00:44:36.830><c> can</c><00:44:37.010><c> do</c><00:44:37.160><c> image</c><00:44:37.970><c> splitting</c><00:44:38.330><c> with</c>

00:44:39.300 --> 00:44:39.310 align:start position:0%
you can do image splitting with
 

00:44:39.310 --> 00:44:42.250 align:start position:0%
you can do image splitting with
different<00:44:40.310><c> kinds</c><00:44:40.400><c> of</c><00:44:40.610><c> convolutions</c><00:44:41.270><c> and</c><00:44:41.600><c> do</c>

00:44:42.250 --> 00:44:42.260 align:start position:0%
different kinds of convolutions and do
 

00:44:42.260 --> 00:44:44.530 align:start position:0%
different kinds of convolutions and do
really<00:44:42.470><c> high</c><00:44:42.830><c> quality</c><00:44:42.860><c> work</c><00:44:43.430><c> but</c><00:44:43.760><c> the</c><00:44:44.150><c> fact</c><00:44:44.390><c> is</c>

00:44:44.530 --> 00:44:44.540 align:start position:0%
really high quality work but the fact is
 

00:44:44.540 --> 00:44:46.870 align:start position:0%
really high quality work but the fact is
for<00:44:44.810><c> a</c><00:44:44.840><c> lot</c><00:44:45.050><c> of</c><00:44:45.170><c> what</c><00:44:45.320><c> we</c><00:44:45.410><c> do</c><00:44:45.590><c> today</c><00:44:45.880><c> including</c>

00:44:46.870 --> 00:44:46.880 align:start position:0%
for a lot of what we do today including
 

00:44:46.880 --> 00:44:48.640 align:start position:0%
for a lot of what we do today including
most<00:44:47.030><c> of</c><00:44:47.330><c> our</c><00:44:47.660><c> normal</c><00:44:48.140><c> GUI</c><00:44:48.260><c> framework</c>

00:44:48.640 --> 00:44:48.650 align:start position:0%
most of our normal GUI framework
 

00:44:48.650 --> 00:44:50.950 align:start position:0%
most of our normal GUI framework
operations<00:44:49.160><c> we</c><00:44:49.280><c> don't</c><00:44:49.430><c> need</c><00:44:49.810><c> quite</c><00:44:50.810><c> the</c>

00:44:50.950 --> 00:44:50.960 align:start position:0%
operations we don't need quite the
 

00:44:50.960 --> 00:44:55.090 align:start position:0%
operations we don't need quite the
quality<00:44:51.380><c> so</c><00:44:51.850><c> that's</c><00:44:52.850><c> why</c><00:44:53.440><c> for</c><00:44:54.440><c> example</c><00:44:54.500><c> a</c><00:44:54.950><c> lot</c>

00:44:55.090 --> 00:44:55.100 align:start position:0%
quality so that's why for example a lot
 

00:44:55.100 --> 00:44:56.620 align:start position:0%
quality so that's why for example a lot
of<00:44:55.220><c> these</c><00:44:55.280><c> will</c><00:44:55.520><c> be</c><00:44:55.640><c> defaulted</c><00:44:56.210><c> to</c><00:44:56.270><c> lower</c>

00:44:56.620 --> 00:44:56.630 align:start position:0%
of these will be defaulted to lower
 

00:44:56.630 --> 00:44:57.980 align:start position:0%
of these will be defaulted to lower
quality

00:44:57.980 --> 00:44:57.990 align:start position:0%
quality
 

00:44:57.990 --> 00:45:02.440 align:start position:0%
quality
fishin<00:44:58.910><c> for</c><00:44:59.910><c> like</c><00:45:00.030><c> one</c><00:45:00.210><c> swing</c><00:45:00.480><c> music</c><00:45:00.650><c> and</c>

00:45:02.440 --> 00:45:02.450 align:start position:0%
fishin for like one swing music and
 

00:45:02.450 --> 00:45:04.670 align:start position:0%
fishin for like one swing music and
that's<00:45:03.450><c> also</c><00:45:03.660><c> because</c><00:45:03.869><c> a</c><00:45:04.050><c> lot</c><00:45:04.230><c> of</c><00:45:04.260><c> times</c><00:45:04.500><c> in</c>

00:45:04.670 --> 00:45:04.680 align:start position:0%
that's also because a lot of times in
 

00:45:04.680 --> 00:45:07.310 align:start position:0%
that's also because a lot of times in
GUI<00:45:04.860><c> framework</c><00:45:05.310><c> building</c><00:45:05.930><c> anti-aliasing</c><00:45:06.930><c> can</c>

00:45:07.310 --> 00:45:07.320 align:start position:0%
GUI framework building anti-aliasing can
 

00:45:07.320 --> 00:45:10.430 align:start position:0%
GUI framework building anti-aliasing can
get<00:45:07.470><c> in</c><00:45:07.560><c> the</c><00:45:07.619><c> way</c><00:45:07.770><c> and</c><00:45:07.980><c> cause</c><00:45:08.940><c> buzzing</c><00:45:09.440><c> other</c>

00:45:10.430 --> 00:45:10.440 align:start position:0%
get in the way and cause buzzing other
 

00:45:10.440 --> 00:45:13.820 align:start position:0%
get in the way and cause buzzing other
cameras<00:45:10.830><c> that</c><00:45:10.980><c> you</c><00:45:11.420><c> experience</c><00:45:12.420><c> so</c><00:45:12.900><c> the</c><00:45:13.650><c> key</c>

00:45:13.820 --> 00:45:13.830 align:start position:0%
cameras that you experience so the key
 

00:45:13.830 --> 00:45:16.960 align:start position:0%
cameras that you experience so the key
here<00:45:13.860><c> is</c><00:45:14.130><c> is</c><00:45:14.520><c> that</c><00:45:14.820><c> we</c><00:45:15.630><c> haven't</c><00:45:15.990><c> actually</c>

00:45:16.960 --> 00:45:16.970 align:start position:0%
here is is that we haven't actually
 

00:45:16.970 --> 00:45:18.859 align:start position:0%
here is is that we haven't actually
fine-tuned<00:45:17.970><c> all</c><00:45:18.090><c> that</c><00:45:18.210><c> stuff</c><00:45:18.390><c> yet</c><00:45:18.720><c> my</c>

00:45:18.859 --> 00:45:18.869 align:start position:0%
fine-tuned all that stuff yet my
 

00:45:18.869 --> 00:45:22.370 align:start position:0%
fine-tuned all that stuff yet my
imitation<00:45:19.650><c> but</c><00:45:20.450><c> what</c><00:45:21.450><c> I</c><00:45:21.480><c> recommend</c><00:45:21.869><c> is</c><00:45:22.320><c> that</c>

00:45:22.370 --> 00:45:22.380 align:start position:0%
imitation but what I recommend is that
 

00:45:22.380 --> 00:45:24.650 align:start position:0%
imitation but what I recommend is that
first<00:45:23.369><c> you</c><00:45:23.550><c> get</c><00:45:23.670><c> familiar</c><00:45:24.030><c> with</c><00:45:24.119><c> these</c><00:45:24.360><c> and</c>

00:45:24.650 --> 00:45:24.660 align:start position:0%
first you get familiar with these and
 

00:45:24.660 --> 00:45:27.230 align:start position:0%
first you get familiar with these and
extreme<00:45:25.440><c> at</c><00:45:25.619><c> with</c><00:45:25.830><c> them</c><00:45:26.150><c> understand</c><00:45:27.150><c> the</c>

00:45:27.230 --> 00:45:27.240 align:start position:0%
extreme at with them understand the
 

00:45:27.240 --> 00:45:28.460 align:start position:0%
extreme at with them understand the
different<00:45:27.510><c> ones</c><00:45:27.660><c> i</c><00:45:27.840><c> will</c><00:45:27.990><c> explain</c><00:45:28.230><c> them</c><00:45:28.410><c> in</c>

00:45:28.460 --> 00:45:28.470 align:start position:0%
different ones i will explain them in
 

00:45:28.470 --> 00:45:31.160 align:start position:0%
different ones i will explain them in
sec<00:45:28.710><c> here</c><00:45:28.890><c> and</c><00:45:29.070><c> then</c><00:45:29.520><c> as</c><00:45:29.790><c> we</c><00:45:29.970><c> moved</c><00:45:30.210><c> excuse</c><00:45:31.020><c> me</c>

00:45:31.160 --> 00:45:31.170 align:start position:0%
sec here and then as we moved excuse me
 

00:45:31.170 --> 00:45:33.800 align:start position:0%
sec here and then as we moved excuse me
towards<00:45:31.500><c> shipping</c><00:45:32.180><c> you</c><00:45:33.180><c> try</c><00:45:33.390><c> these</c><00:45:33.450><c> again</c>

00:45:33.800 --> 00:45:33.810 align:start position:0%
towards shipping you try these again
 

00:45:33.810 --> 00:45:36.140 align:start position:0%
towards shipping you try these again
with<00:45:34.200><c> our</c><00:45:34.410><c> final</c><00:45:34.980><c> candidates</c><00:45:35.430><c> because</c><00:45:35.760><c> then</c>

00:45:36.140 --> 00:45:36.150 align:start position:0%
with our final candidates because then
 

00:45:36.150 --> 00:45:37.910 align:start position:0%
with our final candidates because then
you<00:45:36.360><c> will</c><00:45:36.540><c> start</c><00:45:36.810><c> to</c><00:45:36.869><c> experience</c><00:45:37.290><c> differences</c>

00:45:37.910 --> 00:45:37.920 align:start position:0%
you will start to experience differences
 

00:45:37.920 --> 00:45:39.560 align:start position:0%
you will start to experience differences
this<00:45:38.760><c> is</c><00:45:38.850><c> really</c><00:45:38.970><c> important</c><00:45:39.390><c> for</c><00:45:39.420><c> us</c><00:45:39.510><c> because</c>

00:45:39.560 --> 00:45:39.570 align:start position:0%
this is really important for us because
 

00:45:39.570 --> 00:45:42.170 align:start position:0%
this is really important for us because
we<00:45:40.200><c> can</c><00:45:40.410><c> make</c><00:45:40.650><c> a</c><00:45:40.830><c> serious</c><00:45:41.490><c> changes</c><00:45:41.940><c> in</c><00:45:42.090><c> our</c>

00:45:42.170 --> 00:45:42.180 align:start position:0%
we can make a serious changes in our
 

00:45:42.180 --> 00:45:44.720 align:start position:0%
we can make a serious changes in our
implementation<00:45:42.840><c> Dustin</c><00:45:43.680><c> when</c><00:45:44.220><c> we're</c><00:45:44.400><c> in</c><00:45:44.490><c> fast</c>

00:45:44.720 --> 00:45:44.730 align:start position:0%
implementation Dustin when we're in fast
 

00:45:44.730 --> 00:45:48.400 align:start position:0%
implementation Dustin when we're in fast
mode<00:45:44.970><c> so</c><00:45:45.920><c> rendering</c><00:45:46.920><c> is</c><00:45:47.100><c> a</c><00:45:47.160><c> key</c><00:45:47.520><c> if</c><00:45:47.760><c> actually</c>

00:45:48.400 --> 00:45:48.410 align:start position:0%
mode so rendering is a key if actually
 

00:45:48.410 --> 00:45:51.080 align:start position:0%
mode so rendering is a key if actually
deleted<00:45:49.410><c> off</c><00:45:49.530><c> the</c><00:45:49.740><c> front</c><00:45:49.920><c> of</c><00:45:50.040><c> these</c><00:45:50.160><c> in</c><00:45:50.460><c> key</c>

00:45:51.080 --> 00:45:51.090 align:start position:0%
deleted off the front of these in key
 

00:45:51.090 --> 00:45:53.359 align:start position:0%
deleted off the front of these in key
underscore<00:45:51.780><c> and</c><00:45:51.990><c> there</c><00:45:52.500><c> but</c><00:45:52.740><c> they're</c><00:45:53.100><c> in</c><00:45:53.220><c> this</c>

00:45:53.359 --> 00:45:53.369 align:start position:0%
underscore and there but they're in this
 

00:45:53.369 --> 00:45:56.840 align:start position:0%
underscore and there but they're in this
undoubtedly<00:45:53.940><c> PS</c><00:45:54.570><c> thunderclap</c><00:45:55.170><c> and</c><00:45:55.850><c> so</c>

00:45:56.840 --> 00:45:56.850 align:start position:0%
undoubtedly PS thunderclap and so
 

00:45:56.850 --> 00:45:58.609 align:start position:0%
undoubtedly PS thunderclap and so
rendering<00:45:57.720><c> is</c><00:45:57.810><c> a</c><00:45:57.840><c> key</c><00:45:58.080><c> that</c><00:45:58.230><c> you</c><00:45:58.260><c> can</c><00:45:58.410><c> pass</c>

00:45:58.609 --> 00:45:58.619 align:start position:0%
rendering is a key that you can pass
 

00:45:58.619 --> 00:46:01.280 align:start position:0%
rendering is a key that you can pass
into<00:45:59.040><c> this</c><00:45:59.220><c> little</c><00:45:59.369><c> hash</c><00:45:59.670><c> map</c><00:45:59.940><c> and</c><00:46:00.180><c> you</c><00:46:00.960><c> can</c>

00:46:01.280 --> 00:46:01.290 align:start position:0%
into this little hash map and you can
 

00:46:01.290 --> 00:46:03.609 align:start position:0%
into this little hash map and you can
say<00:46:01.500><c> basically</c><00:46:02.190><c> quality</c><00:46:02.640><c> or</c><00:46:02.730><c> a</c><00:46:02.790><c> fast</c>

00:46:03.609 --> 00:46:03.619 align:start position:0%
say basically quality or a fast
 

00:46:03.619 --> 00:46:05.840 align:start position:0%
say basically quality or a fast
anti-aliasing<00:46:04.619><c> you</c><00:46:05.070><c> can</c><00:46:05.220><c> turn</c><00:46:05.369><c> on</c><00:46:05.640><c> and</c><00:46:05.760><c> off</c>

00:46:05.840 --> 00:46:05.850 align:start position:0%
anti-aliasing you can turn on and off
 

00:46:05.850 --> 00:46:08.060 align:start position:0%
anti-aliasing you can turn on and off
for<00:46:06.270><c> both</c><00:46:06.540><c> primitives</c><00:46:07.050><c> and</c><00:46:07.140><c> text</c><00:46:07.560><c> as</c><00:46:07.770><c> well</c><00:46:07.800><c> as</c>

00:46:08.060 --> 00:46:08.070 align:start position:0%
for both primitives and text as well as
 

00:46:08.070 --> 00:46:11.060 align:start position:0%
for both primitives and text as well as
two<00:46:08.250><c> of</c><00:46:08.280><c> them</c><00:46:08.460><c> in</c><00:46:08.580><c> fractional</c><00:46:09.510><c> metrics</c><00:46:10.070><c> to</c>

00:46:11.060 --> 00:46:11.070 align:start position:0%
two of them in fractional metrics to
 

00:46:11.070 --> 00:46:15.370 align:start position:0%
two of them in fractional metrics to
specify<00:46:12.710><c> sub-pixel</c><00:46:13.710><c> positions</c><00:46:14.100><c> for</c><00:46:14.400><c> context</c>

00:46:15.370 --> 00:46:15.380 align:start position:0%
specify sub-pixel positions for context
 

00:46:15.380 --> 00:46:18.230 align:start position:0%
specify sub-pixel positions for context
one<00:46:16.380><c> thing</c><00:46:16.980><c> I'm</c><00:46:17.100><c> out</c><00:46:17.310><c> here</c><00:46:17.460><c> too</c><00:46:17.730><c> is</c><00:46:17.910><c> there's</c><00:46:18.119><c> a</c>

00:46:18.230 --> 00:46:18.240 align:start position:0%
one thing I'm out here too is there's a
 

00:46:18.240 --> 00:46:20.660 align:start position:0%
one thing I'm out here too is there's a
new<00:46:18.420><c> way</c><00:46:18.630><c> to</c><00:46:18.660><c> do</c><00:46:18.900><c> text</c><00:46:19.290><c> in</c><00:46:19.440><c> Java</c><00:46:19.830><c> to</c><00:46:20.130><c> which</c><00:46:20.520><c> is</c>

00:46:20.660 --> 00:46:20.670 align:start position:0%
new way to do text in Java to which is
 

00:46:20.670 --> 00:46:22.310 align:start position:0%
new way to do text in Java to which is
glyph<00:46:20.910><c> vectors</c><00:46:21.330><c> and</c><00:46:21.450><c> it</c><00:46:21.930><c> is</c><00:46:22.050><c> the</c><00:46:22.170><c> highest</c>

00:46:22.310 --> 00:46:22.320 align:start position:0%
glyph vectors and it is the highest
 

00:46:22.320 --> 00:46:24.500 align:start position:0%
glyph vectors and it is the highest
performance<00:46:22.890><c> way</c><00:46:23.040><c> 2d</c><00:46:23.220><c> text</c><00:46:23.760><c> don't</c><00:46:24.420><c> assume</c>

00:46:24.500 --> 00:46:24.510 align:start position:0%
performance way 2d text don't assume
 

00:46:24.510 --> 00:46:27.440 align:start position:0%
performance way 2d text don't assume
that<00:46:24.869><c> you</c><00:46:24.990><c> can</c><00:46:25.140><c> make</c><00:46:25.290><c> these</c><00:46:25.970><c> do</c><00:46:26.970><c> those</c><00:46:27.150><c> kind</c><00:46:27.390><c> of</c>

00:46:27.440 --> 00:46:27.450 align:start position:0%
that you can make these do those kind of
 

00:46:27.450 --> 00:46:28.970 align:start position:0%
that you can make these do those kind of
things<00:46:27.510><c> yourself</c><00:46:27.720><c> and</c><00:46:28.320><c> if</c><00:46:28.590><c> you</c><00:46:28.619><c> really</c><00:46:28.859><c> are</c>

00:46:28.970 --> 00:46:28.980 align:start position:0%
things yourself and if you really are
 

00:46:28.980 --> 00:46:30.349 align:start position:0%
things yourself and if you really are
doing<00:46:29.310><c> tech</c><00:46:29.520><c> stuff</c><00:46:29.730><c> you</c><00:46:29.880><c> want</c><00:46:30.030><c> to</c><00:46:30.119><c> see</c><00:46:30.210><c> a</c><00:46:30.240><c> high</c>

00:46:30.349 --> 00:46:30.359 align:start position:0%
doing tech stuff you want to see a high
 

00:46:30.359 --> 00:46:33.020 align:start position:0%
doing tech stuff you want to see a high
quality<00:46:30.560><c> and</c><00:46:31.560><c> speed</c><00:46:31.770><c> look</c><00:46:32.220><c> at</c><00:46:32.310><c> the</c><00:46:32.430><c> way</c><00:46:32.580><c> the</c>

00:46:33.020 --> 00:46:33.030 align:start position:0%
quality and speed look at the way the
 

00:46:33.030 --> 00:46:35.030 align:start position:0%
quality and speed look at the way the
swing<00:46:33.330><c> examples</c><00:46:33.869><c> be</c><00:46:34.200><c> the</c><00:46:34.380><c> stuff</c><00:46:34.650><c> before</c><00:46:35.010><c> you</c>

00:46:35.030 --> 00:46:35.040 align:start position:0%
swing examples be the stuff before you
 

00:46:35.040 --> 00:46:36.980 align:start position:0%
swing examples be the stuff before you
go<00:46:35.250><c> and</c><00:46:35.400><c> later</c><00:46:35.609><c> on</c><00:46:35.880><c> because</c><00:46:36.359><c> they're</c><00:46:36.630><c> using</c><00:46:36.960><c> to</c>

00:46:36.980 --> 00:46:36.990 align:start position:0%
go and later on because they're using to
 

00:46:36.990 --> 00:46:38.780 align:start position:0%
go and later on because they're using to
effectors<00:46:37.470><c> and</c><00:46:37.650><c> that</c><00:46:37.740><c> is</c><00:46:37.920><c> the</c><00:46:38.070><c> fastest</c><00:46:38.609><c> way</c><00:46:38.730><c> to</c>

00:46:38.780 --> 00:46:38.790 align:start position:0%
effectors and that is the fastest way to
 

00:46:38.790 --> 00:46:40.940 align:start position:0%
effectors and that is the fastest way to
the<00:46:39.030><c> text</c><00:46:39.359><c> so</c><00:46:39.840><c> fractional</c><00:46:40.230><c> metric</c><00:46:40.260><c> comes</c><00:46:40.770><c> up</c>

00:46:40.940 --> 00:46:40.950 align:start position:0%
the text so fractional metric comes up
 

00:46:40.950 --> 00:46:42.950 align:start position:0%
the text so fractional metric comes up
because<00:46:41.100><c> there's</c><00:46:42.000><c> an</c><00:46:42.090><c> additional</c><00:46:42.420><c> cost</c><00:46:42.630><c> with</c>

00:46:42.950 --> 00:46:42.960 align:start position:0%
because there's an additional cost with
 

00:46:42.960 --> 00:46:45.020 align:start position:0%
because there's an additional cost with
doing<00:46:43.310><c> sub-pixel</c><00:46:44.310><c> positioning</c><00:46:44.850><c> of</c><00:46:44.970><c> your</c>

00:46:45.020 --> 00:46:45.030 align:start position:0%
doing sub-pixel positioning of your
 

00:46:45.030 --> 00:46:48.500 align:start position:0%
doing sub-pixel positioning of your
letters<00:46:45.810><c> on</c><00:46:46.080><c> your</c><00:46:46.670><c> text</c><00:46:47.670><c> rendering</c><00:46:47.790><c> so</c>

00:46:48.500 --> 00:46:48.510 align:start position:0%
letters on your text rendering so
 

00:46:48.510 --> 00:46:50.990 align:start position:0%
letters on your text rendering so
bittering<00:46:49.410><c> there's</c><00:46:49.800><c> a</c><00:46:49.950><c> couple</c><00:46:50.070><c> different</c>

00:46:50.990 --> 00:46:51.000 align:start position:0%
bittering there's a couple different
 

00:46:51.000 --> 00:46:53.830 align:start position:0%
bittering there's a couple different
choices<00:46:51.390><c> there</c><00:46:51.780><c> again</c><00:46:52.260><c> it's</c><00:46:52.380><c> quality</c><00:46:52.590><c> vs</c>

00:46:53.830 --> 00:46:53.840 align:start position:0%
choices there again it's quality vs
 

00:46:53.840 --> 00:46:56.390 align:start position:0%
choices there again it's quality vs
interpolation<00:46:54.840><c> they're</c><00:46:55.350><c> filing</c><00:46:56.070><c> it</c><00:46:56.310><c> by</c>

00:46:56.390 --> 00:46:56.400 align:start position:0%
interpolation they're filing it by
 

00:46:56.400 --> 00:46:57.800 align:start position:0%
interpolation they're filing it by
cubics<00:46:56.850><c> and</c><00:46:57.090><c> that's</c><00:46:57.210><c> for</c><00:46:57.390><c> your</c><00:46:57.510><c> image</c>

00:46:57.800 --> 00:46:57.810 align:start position:0%
cubics and that's for your image
 

00:46:57.810 --> 00:47:00.410 align:start position:0%
cubics and that's for your image
bleeding<00:46:58.760><c> basically</c><00:46:59.760><c> we're</c><00:46:59.910><c> image</c><00:47:00.120><c> world</c><00:47:00.330><c> was</c>

00:47:00.410 --> 00:47:00.420 align:start position:0%
bleeding basically we're image world was
 

00:47:00.420 --> 00:47:01.910 align:start position:0%
bleeding basically we're image world was
a<00:47:00.450><c> little</c><00:47:00.540><c> better</c><00:47:00.750><c> when</c><00:47:01.200><c> scaled</c><00:47:01.530><c> different</c>

00:47:01.910 --> 00:47:01.920 align:start position:0%
a little better when scaled different
 

00:47:01.920 --> 00:47:04.430 align:start position:0%
a little better when scaled different
sizes<00:47:02.310><c> if</c><00:47:02.520><c> you</c><00:47:02.640><c> use</c><00:47:02.760><c> a</c><00:47:03.060><c> higher</c><00:47:03.690><c> quality</c><00:47:03.990><c> ones</c>

00:47:04.430 --> 00:47:04.440 align:start position:0%
sizes if you use a higher quality ones
 

00:47:04.440 --> 00:47:07.550 align:start position:0%
sizes if you use a higher quality ones
but<00:47:04.710><c> it's</c><00:47:04.860><c> slower</c><00:47:05.070><c> so</c><00:47:05.580><c> keep</c><00:47:06.330><c> that</c><00:47:06.360><c> in</c><00:47:06.510><c> mind</c><00:47:06.600><c> elf</c>

00:47:07.550 --> 00:47:07.560 align:start position:0%
but it's slower so keep that in mind elf
 

00:47:07.560 --> 00:47:09.710 align:start position:0%
but it's slower so keep that in mind elf
interpolation<00:47:08.130><c> st.</c><00:47:08.580><c> same</c><00:47:08.790><c> quality</c><00:47:09.180><c> speed</c><00:47:09.480><c> and</c>

00:47:09.710 --> 00:47:09.720 align:start position:0%
interpolation st. same quality speed and
 

00:47:09.720 --> 00:47:16.790 align:start position:0%
interpolation st. same quality speed and
color<00:47:10.470><c> rendering</c><00:47:10.710><c> same</c><00:47:11.010><c> thing</c><00:47:11.190><c> for</c><00:47:11.640><c> speed</c>

00:47:16.790 --> 00:47:16.800 align:start position:0%
 
 

00:47:16.800 --> 00:47:20.450 align:start position:0%
 
so<00:47:17.360><c> bitmap</c><00:47:18.360><c> image</c><00:47:18.540><c> manipulation</c><00:47:19.340><c> this</c><00:47:20.340><c> is</c>

00:47:20.450 --> 00:47:20.460 align:start position:0%
so bitmap image manipulation this is
 

00:47:20.460 --> 00:47:22.850 align:start position:0%
so bitmap image manipulation this is
freaky<00:47:20.940><c> for</c><00:47:21.120><c> our</c><00:47:21.210><c> platform</c><00:47:21.720><c> we're</c><00:47:22.470><c> optimizing</c>

00:47:22.850 --> 00:47:22.860 align:start position:0%
freaky for our platform we're optimizing
 

00:47:22.860 --> 00:47:25.580 align:start position:0%
freaky for our platform we're optimizing
first<00:47:23.490><c> to</c><00:47:23.910><c> make</c><00:47:24.090><c> swing</c><00:47:24.540><c> apps</c><00:47:24.780><c> and</c><00:47:25.050><c> normal</c>

00:47:25.580 --> 00:47:25.590 align:start position:0%
first to make swing apps and normal
 

00:47:25.590 --> 00:47:30.230 align:start position:0%
first to make swing apps and normal
usage<00:47:25.770><c> at</c><00:47:26.130><c> fans</c><00:47:27.110><c> what</c><00:47:28.110><c> that</c><00:47:28.260><c> means</c><00:47:28.500><c> is</c><00:47:29.240><c> we</c>

00:47:30.230 --> 00:47:30.240 align:start position:0%
usage at fans what that means is we
 

00:47:30.240 --> 00:47:31.970 align:start position:0%
usage at fans what that means is we
actually<00:47:30.390><c> are</c><00:47:30.720><c> not</c><00:47:30.930><c> going</c><00:47:31.110><c> to</c><00:47:31.200><c> use</c><00:47:31.230><c> the</c><00:47:31.740><c> same</c>

00:47:31.970 --> 00:47:31.980 align:start position:0%
actually are not going to use the same
 

00:47:31.980 --> 00:47:34.580 align:start position:0%
actually are not going to use the same
data<00:47:32.280><c> buffer</c><00:47:32.640><c> types</c><00:47:33.050><c> internally</c><00:47:34.050><c> that</c><00:47:34.470><c> are</c>

00:47:34.580 --> 00:47:34.590 align:start position:0%
data buffer types internally that are
 

00:47:34.590 --> 00:47:36.110 align:start position:0%
data buffer types internally that are
used<00:47:34.770><c> on</c><00:47:34.920><c> the</c><00:47:34.980><c> windows</c><00:47:35.250><c> implementation</c><00:47:35.970><c> and</c>

00:47:36.110 --> 00:47:36.120 align:start position:0%
used on the windows implementation and
 

00:47:36.120 --> 00:47:37.850 align:start position:0%
used on the windows implementation and
that's<00:47:36.510><c> because</c><00:47:36.690><c> then</c><00:47:36.990><c> we</c><00:47:37.140><c> can</c><00:47:37.230><c> do</c><00:47:37.380><c> hardware</c>

00:47:37.850 --> 00:47:37.860 align:start position:0%
that's because then we can do hardware
 

00:47:37.860 --> 00:47:39.710 align:start position:0%
that's because then we can do hardware
accelerated<00:47:38.280><c> blitz</c><00:47:38.580><c> between</c><00:47:39.480><c> our</c><00:47:39.600><c> off</c>

00:47:39.710 --> 00:47:39.720 align:start position:0%
accelerated blitz between our off
 

00:47:39.720 --> 00:47:42.320 align:start position:0%
accelerated blitz between our off
screens<00:47:40.050><c> and</c><00:47:40.260><c> ice</c><00:47:40.350><c> cream</c><00:47:40.500><c> and</c><00:47:41.000><c> so</c><00:47:42.000><c> in</c><00:47:42.210><c> order</c>

00:47:42.320 --> 00:47:42.330 align:start position:0%
screens and ice cream and so in order
 

00:47:42.330 --> 00:47:44.420 align:start position:0%
screens and ice cream and so in order
for<00:47:42.450><c> us</c><00:47:42.540><c> to</c><00:47:42.600><c> do</c><00:47:42.840><c> that</c><00:47:42.990><c> we</c><00:47:43.830><c> have</c><00:47:44.010><c> a</c><00:47:44.040><c> different</c>

00:47:44.420 --> 00:47:44.430 align:start position:0%
for us to do that we have a different
 

00:47:44.430 --> 00:47:45.770 align:start position:0%
for us to do that we have a different
implementation<00:47:45.030><c> class</c><00:47:45.210><c> under</c><00:47:45.480><c> there</c><00:47:45.600><c> so</c>

00:47:45.770 --> 00:47:45.780 align:start position:0%
implementation class under there so
 

00:47:45.780 --> 00:47:47.840 align:start position:0%
implementation class under there so
don't<00:47:45.930><c> assume</c><00:47:46.080><c> that</c><00:47:46.560><c> you</c><00:47:46.680><c> can</c><00:47:46.860><c> type</c><00:47:47.490><c> and</c><00:47:47.700><c> save</c>

00:47:47.840 --> 00:47:47.850 align:start position:0%
don't assume that you can type and save
 

00:47:47.850 --> 00:47:50.300 align:start position:0%
don't assume that you can type and save
cash<00:47:48.120><c> down</c><00:47:48.390><c> to</c><00:47:48.660><c> specific</c><00:47:49.620><c> data</c><00:47:49.800><c> buffer</c><00:47:50.100><c> types</c>

00:47:50.300 --> 00:47:50.310 align:start position:0%
cash down to specific data buffer types
 

00:47:50.310 --> 00:47:52.550 align:start position:0%
cash down to specific data buffer types
they<00:47:50.460><c> won't</c><00:47:50.610><c> be</c><00:47:50.730><c> down</c><00:47:50.850><c> there</c><00:47:51.090><c> so</c><00:47:51.660><c> at</c><00:47:52.380><c> least</c>

00:47:52.550 --> 00:47:52.560 align:start position:0%
they won't be down there so at least
 

00:47:52.560 --> 00:47:54.530 align:start position:0%
they won't be down there so at least
look<00:47:52.830><c> doing</c><00:47:53.430><c> this</c><00:47:53.520><c> themselves</c><00:47:53.700><c> you</c><00:47:54.390><c> can</c>

00:47:54.530 --> 00:47:54.540 align:start position:0%
look doing this themselves you can
 

00:47:54.540 --> 00:47:56.090 align:start position:0%
look doing this themselves you can
create<00:47:54.750><c> the</c><00:47:54.930><c> other</c><00:47:55.230><c> types</c><00:47:55.560><c> and</c><00:47:55.830><c> they</c><00:47:55.920><c> will</c>

00:47:56.090 --> 00:47:56.100 align:start position:0%
create the other types and they will
 

00:47:56.100 --> 00:47:58.730 align:start position:0%
create the other types and they will
work<00:47:56.280><c> that</c><00:47:56.520><c> they</c><00:47:56.580><c> will</c><00:47:56.730><c> be</c><00:47:56.760><c> slower</c><00:47:57.440><c> so</c><00:47:58.440><c> just</c><00:47:58.620><c> be</c>

00:47:58.730 --> 00:47:58.740 align:start position:0%
work that they will be slower so just be
 

00:47:58.740 --> 00:48:02.840 align:start position:0%
work that they will be slower so just be
careful<00:47:59.810><c> again</c><00:48:01.160><c> this</c><00:48:02.160><c> next</c><00:48:02.340><c> one</c><00:48:02.520><c> is</c><00:48:02.550><c> kind</c><00:48:02.820><c> of</c>

00:48:02.840 --> 00:48:02.850 align:start position:0%
careful again this next one is kind of
 

00:48:02.850 --> 00:48:05.000 align:start position:0%
careful again this next one is kind of
obvious<00:48:03.000><c> but</c><00:48:03.420><c> there's</c><00:48:04.080><c> a</c><00:48:04.200><c> whole</c><00:48:04.350><c> bunch</c><00:48:04.500><c> of</c><00:48:04.710><c> AP</c>

00:48:05.000 --> 00:48:05.010 align:start position:0%
obvious but there's a whole bunch of AP
 

00:48:05.010 --> 00:48:06.980 align:start position:0%
obvious but there's a whole bunch of AP
is<00:48:05.160><c> that</c><00:48:05.520><c> are</c><00:48:05.610><c> in</c><00:48:05.790><c> the</c><00:48:05.910><c> new</c><00:48:06.060><c> imaging</c><00:48:06.660><c> stuff</c>

00:48:06.980 --> 00:48:06.990 align:start position:0%
is that are in the new imaging stuff
 

00:48:06.990 --> 00:48:10.630 align:start position:0%
is that are in the new imaging stuff
that<00:48:07.350><c> are</c><00:48:07.790><c> useful</c><00:48:08.790><c> for</c><00:48:09.000><c> some</c><00:48:09.300><c> high</c><00:48:09.540><c> quality</c>

00:48:10.630 --> 00:48:10.640 align:start position:0%
that are useful for some high quality
 

00:48:10.640 --> 00:48:12.590 align:start position:0%
that are useful for some high quality
advanced<00:48:11.640><c> imaging</c><00:48:11.970><c> stuff</c><00:48:12.240><c> and</c><00:48:12.450><c> they</c><00:48:12.540><c> were</c>

00:48:12.590 --> 00:48:12.600 align:start position:0%
advanced imaging stuff and they were
 

00:48:12.600 --> 00:48:15.590 align:start position:0%
advanced imaging stuff and they were
developed<00:48:13.380><c> this</c><00:48:13.500><c> sentiment</c><00:48:14.450><c> develops</c><00:48:15.450><c> that</c>

00:48:15.590 --> 00:48:15.600 align:start position:0%
developed this sentiment develops that
 

00:48:15.600 --> 00:48:17.990 align:start position:0%
developed this sentiment develops that
in<00:48:15.720><c> mind</c><00:48:15.930><c> but</c><00:48:16.140><c> they're</c><00:48:16.350><c> not</c><00:48:16.470><c> as</c><00:48:16.680><c> useful</c><00:48:17.280><c> for</c><00:48:17.730><c> on</c>

00:48:17.990 --> 00:48:18.000 align:start position:0%
in mind but they're not as useful for on
 

00:48:18.000 --> 00:48:20.990 align:start position:0%
in mind but they're not as useful for on
typical<00:48:18.330><c> case</c><00:48:18.660><c> so</c><00:48:19.250><c> I'm</c><00:48:20.250><c> calling</c><00:48:20.400><c> it</c><00:48:20.610><c> low</c><00:48:20.760><c> call</c>

00:48:20.990 --> 00:48:21.000 align:start position:0%
typical case so I'm calling it low call
 

00:48:21.000 --> 00:48:22.850 align:start position:0%
typical case so I'm calling it low call
frequency<00:48:21.450><c> methods</c><00:48:21.780><c> the</c><00:48:21.990><c> point</c><00:48:22.230><c> is</c><00:48:22.380><c> that</c><00:48:22.680><c> I'm</c>

00:48:22.850 --> 00:48:22.860 align:start position:0%
frequency methods the point is that I'm
 

00:48:22.860 --> 00:48:25.120 align:start position:0%
frequency methods the point is that I'm
read<00:48:23.130><c> about</c><00:48:23.280><c> a</c><00:48:23.400><c> raster</c><00:48:23.910><c> and</c><00:48:23.940><c> bufferedimage</c>

00:48:25.120 --> 00:48:25.130 align:start position:0%
read about a raster and bufferedimage
 

00:48:25.130 --> 00:48:28.250 align:start position:0%
read about a raster and bufferedimage
there's<00:48:26.130><c> two</c><00:48:26.400><c> basic</c><00:48:26.520><c> ways</c><00:48:26.760><c> to</c><00:48:27.090><c> do</c><00:48:27.210><c> things</c><00:48:27.450><c> in</c>

00:48:28.250 --> 00:48:28.260 align:start position:0%
there's two basic ways to do things in
 

00:48:28.260 --> 00:48:31.040 align:start position:0%
there's two basic ways to do things in
that<00:48:28.910><c> this</c><00:48:29.910><c> is</c><00:48:30.060><c> the</c><00:48:30.180><c> ones</c><00:48:30.360><c> that</c><00:48:30.570><c> I</c><00:48:30.750><c> think</c><00:48:30.960><c> are</c>

00:48:31.040 --> 00:48:31.050 align:start position:0%
that this is the ones that I think are
 

00:48:31.050 --> 00:48:33.080 align:start position:0%
that this is the ones that I think are
good<00:48:31.290><c> for</c><00:48:31.620><c> typical</c><00:48:32.430><c> case</c><00:48:32.580><c> and</c><00:48:32.820><c> it's</c><00:48:32.910><c> basically</c>

00:48:33.080 --> 00:48:33.090 align:start position:0%
good for typical case and it's basically
 

00:48:33.090 --> 00:48:34.700 align:start position:0%
good for typical case and it's basically
you<00:48:33.450><c> can</c><00:48:33.660><c> pass</c><00:48:33.840><c> in</c><00:48:34.050><c> a</c><00:48:34.110><c> whole</c><00:48:34.260><c> wreck</c><00:48:34.470><c> to</c>

00:48:34.700 --> 00:48:34.710 align:start position:0%
you can pass in a whole wreck to
 

00:48:34.710 --> 00:48:38.150 align:start position:0%
you can pass in a whole wreck to
whatever<00:48:35.010><c> size</c><00:48:35.160><c> you</c><00:48:35.220><c> want</c><00:48:35.690><c> of</c><00:48:36.690><c> pixels</c><00:48:37.500><c> push</c>

00:48:38.150 --> 00:48:38.160 align:start position:0%
whatever size you want of pixels push
 

00:48:38.160 --> 00:48:40.700 align:start position:0%
whatever size you want of pixels push
between<00:48:38.550><c> your</c><00:48:38.730><c> ear</c><00:48:39.060><c> on</c><00:48:39.140><c> your</c><00:48:40.140><c> bed</c><00:48:40.290><c> max</c><00:48:40.470><c> you're</c>

00:48:40.700 --> 00:48:40.710 align:start position:0%
between your ear on your bed max you're
 

00:48:40.710 --> 00:48:43.130 align:start position:0%
between your ear on your bed max you're
after<00:48:40.890><c> and</c><00:48:41.280><c> this</c><00:48:42.030><c> is</c><00:48:42.210><c> better</c><00:48:42.390><c> because</c><00:48:42.630><c> you</c><00:48:43.110><c> can</c>

00:48:43.130 --> 00:48:43.140 align:start position:0%
after and this is better because you can
 

00:48:43.140 --> 00:48:45.740 align:start position:0%
after and this is better because you can
control<00:48:43.650><c> the</c><00:48:43.890><c> frequency</c><00:48:44.130><c> of</c><00:48:44.550><c> cooperation</c><00:48:45.390><c> for</c>

00:48:45.740 --> 00:48:45.750 align:start position:0%
control the frequency of cooperation for
 

00:48:45.750 --> 00:48:48.170 align:start position:0%
control the frequency of cooperation for
the<00:48:46.110><c> number</c><00:48:46.800><c> of</c><00:48:46.860><c> pixels</c><00:48:46.980><c> you</c><00:48:47.340><c> want</c><00:48:47.520><c> to</c><00:48:47.610><c> do</c><00:48:47.730><c> so</c>

00:48:48.170 --> 00:48:48.180 align:start position:0%
the number of pixels you want to do so
 

00:48:48.180 --> 00:48:50.570 align:start position:0%
the number of pixels you want to do so
for<00:48:48.330><c> example</c><00:48:48.390><c> if</c><00:48:48.810><c> you</c><00:48:48.960><c> want</c><00:48:49.650><c> to</c><00:48:49.740><c> drink</c><00:48:50.280><c> ram</c>

00:48:50.570 --> 00:48:50.580 align:start position:0%
for example if you want to drink ram
 

00:48:50.580 --> 00:48:52.520 align:start position:0%
for example if you want to drink ram
you've<00:48:50.910><c> got</c><00:48:51.090><c> it</c><00:48:51.270><c> you</c><00:48:51.390><c> can</c><00:48:51.570><c> basically</c><00:48:52.110><c> have</c><00:48:52.380><c> a</c>

00:48:52.520 --> 00:48:52.530 align:start position:0%
you've got it you can basically have a
 

00:48:52.530 --> 00:48:54.500 align:start position:0%
you've got it you can basically have a
full<00:48:53.040><c> copy</c><00:48:53.280><c> that</c><00:48:53.580><c> gets</c><00:48:53.730><c> pushed</c><00:48:53.970><c> across</c><00:48:54.090><c> and</c>

00:48:54.500 --> 00:48:54.510 align:start position:0%
full copy that gets pushed across and
 

00:48:54.510 --> 00:48:57.499 align:start position:0%
full copy that gets pushed across and
make<00:48:54.600><c> one</c><00:48:54.810><c> call</c><00:48:55.080><c> to</c><00:48:55.380><c> copy</c><00:48:56.040><c> or</c><00:48:56.430><c> if</c><00:48:56.550><c> you</c><00:48:56.700><c> want</c><00:48:56.880><c> to</c>

00:48:57.499 --> 00:48:57.509 align:start position:0%
make one call to copy or if you want to
 

00:48:57.509 --> 00:49:00.379 align:start position:0%
make one call to copy or if you want to
go<00:48:58.319><c> all</c><00:48:58.829><c> the</c><00:48:58.949><c> way</c><00:48:58.979><c> their</c><00:48:59.219><c> way</c><00:48:59.669><c> I</c><00:48:59.969><c> would</c>

00:49:00.379 --> 00:49:00.389 align:start position:0%
go all the way their way I would
 

00:49:00.389 --> 00:49:03.919 align:start position:0%
go all the way their way I would
recommend<00:49:00.659><c> at</c><00:49:01.079><c> the</c><00:49:01.289><c> lowest</c><00:49:01.589><c> per</c><00:49:02.339><c> scanline</c><00:49:02.929><c> you</c>

00:49:03.919 --> 00:49:03.929 align:start position:0%
recommend at the lowest per scanline you
 

00:49:03.929 --> 00:49:06.169 align:start position:0%
recommend at the lowest per scanline you
can<00:49:04.109><c> say</c><00:49:04.409><c> make</c><00:49:04.679><c> a</c><00:49:04.709><c> medical</c><00:49:05.099><c> person</c><00:49:05.309><c> and</c><00:49:05.489><c> that's</c>

00:49:06.169 --> 00:49:06.179 align:start position:0%
can say make a medical person and that's
 

00:49:06.179 --> 00:49:08.599 align:start position:0%
can say make a medical person and that's
much<00:49:06.389><c> better</c><00:49:06.599><c> than</c><00:49:06.749><c> these</c><00:49:07.079><c> for</c><00:49:07.619><c> speed</c><00:49:07.889><c> which</c>

00:49:08.599 --> 00:49:08.609 align:start position:0%
much better than these for speed which
 

00:49:08.609 --> 00:49:11.569 align:start position:0%
much better than these for speed which
existing<00:49:09.359><c> API</c><00:49:09.719><c> but</c><00:49:10.409><c> you</c><00:49:11.099><c> want</c><00:49:11.249><c> to</c><00:49:11.309><c> be</c><00:49:11.399><c> where</c>

00:49:11.569 --> 00:49:11.579 align:start position:0%
existing API but you want to be where
 

00:49:11.579 --> 00:49:12.829 align:start position:0%
existing API but you want to be where
and<00:49:11.849><c> that's</c><00:49:11.969><c> where</c><00:49:12.149><c> you</c><00:49:12.179><c> basically</c><00:49:12.389><c> make</c><00:49:12.719><c> a</c>

00:49:12.829 --> 00:49:12.839 align:start position:0%
and that's where you basically make a
 

00:49:12.839 --> 00:49:15.319 align:start position:0%
and that's where you basically make a
method<00:49:13.199><c> call</c><00:49:13.319><c> for</c><00:49:13.529><c> pixel</c><00:49:13.889><c> and</c><00:49:14.159><c> it's</c><00:49:14.339><c> shooting</c>

00:49:15.319 --> 00:49:15.329 align:start position:0%
method call for pixel and it's shooting
 

00:49:15.329 --> 00:49:19.129 align:start position:0%
method call for pixel and it's shooting
yourself<00:49:15.419><c> in</c><00:49:15.689><c> the</c><00:49:15.779><c> foot</c><00:49:15.839><c> in</c><00:49:16.139><c> most</c><00:49:16.289><c> cases</c><00:49:18.139><c> so</c>

00:49:19.129 --> 00:49:19.139 align:start position:0%
yourself in the foot in most cases so
 

00:49:19.139 --> 00:49:20.479 align:start position:0%
yourself in the foot in most cases so
double<00:49:19.439><c> buffering</c><00:49:19.679><c> this</c><00:49:20.009><c> is</c><00:49:20.130><c> kind</c><00:49:20.459><c> of</c>

00:49:20.479 --> 00:49:20.489 align:start position:0%
double buffering this is kind of
 

00:49:20.489 --> 00:49:24.559 align:start position:0%
double buffering this is kind of
interesting<00:49:21.619><c> so</c><00:49:22.619><c> I</c><00:49:22.679><c> Mac</c><00:49:22.859><c> os10</c><00:49:23.159><c> we</c><00:49:23.639><c> double</c>

00:49:24.559 --> 00:49:24.569 align:start position:0%
interesting so I Mac os10 we double
 

00:49:24.569 --> 00:49:26.359 align:start position:0%
interesting so I Mac os10 we double
buffer<00:49:24.869><c> all</c><00:49:24.989><c> carbon</c><00:49:25.349><c> windows</c><00:49:25.619><c> right</c><00:49:25.859><c> now</c><00:49:26.009><c> in</c>

00:49:26.359 --> 00:49:26.369 align:start position:0%
buffer all carbon windows right now in
 

00:49:26.369 --> 00:49:28.849 align:start position:0%
buffer all carbon windows right now in
most<00:49:26.519><c> cases</c><00:49:26.639><c> so</c><00:49:27.289><c> what</c><00:49:28.289><c> that</c><00:49:28.319><c> means</c><00:49:28.649><c> is</c>

00:49:28.849 --> 00:49:28.859 align:start position:0%
most cases so what that means is
 

00:49:28.859 --> 00:49:30.949 align:start position:0%
most cases so what that means is
interrupts<00:49:29.789><c> already</c><00:49:30.149><c> double</c><00:49:30.449><c> buffered</c><00:49:30.809><c> and</c>

00:49:30.949 --> 00:49:30.959 align:start position:0%
interrupts already double buffered and
 

00:49:30.959 --> 00:49:32.929 align:start position:0%
interrupts already double buffered and
we'll<00:49:31.679><c> take</c><00:49:31.889><c> care</c><00:49:32.039><c> of</c><00:49:32.099><c> flushing</c><00:49:32.429><c> that</c><00:49:32.639><c> up</c><00:49:32.789><c> of</c>

00:49:32.929 --> 00:49:32.939 align:start position:0%
we'll take care of flushing that up of
 

00:49:32.939 --> 00:49:36.409 align:start position:0%
we'll take care of flushing that up of
efficiently<00:49:33.949><c> if</c><00:49:34.949><c> you</c><00:49:35.189><c> want</c><00:49:35.519><c> to</c><00:49:35.729><c> have</c><00:49:36.239><c> the</c>

00:49:36.409 --> 00:49:36.419 align:start position:0%
efficiently if you want to have the
 

00:49:36.419 --> 00:49:39.439 align:start position:0%
efficiently if you want to have the
effective<00:49:36.839><c> double</c><00:49:37.109><c> buffering</c><00:49:37.939><c> use</c><00:49:38.939><c> the</c><00:49:39.149><c> swing</c>

00:49:39.439 --> 00:49:39.449 align:start position:0%
effective double buffering use the swing
 

00:49:39.449 --> 00:49:41.839 align:start position:0%
effective double buffering use the swing
stuff<00:49:39.809><c> because</c><00:49:40.619><c> on</c><00:49:40.799><c> Windows</c><00:49:41.159><c> that</c><00:49:41.429><c> stuff</c><00:49:41.669><c> will</c>

00:49:41.839 --> 00:49:41.849 align:start position:0%
stuff because on Windows that stuff will
 

00:49:41.849 --> 00:49:43.759 align:start position:0%
stuff because on Windows that stuff will
be<00:49:41.939><c> double</c><00:49:42.179><c> buffering</c><00:49:42.389><c> and</c><00:49:42.630><c> on</c><00:49:42.809><c> our</c><00:49:43.499><c> platform</c>

00:49:43.759 --> 00:49:43.769 align:start position:0%
be double buffering and on our platform
 

00:49:43.769 --> 00:49:45.799 align:start position:0%
be double buffering and on our platform
you'll<00:49:44.249><c> feel</c><00:49:44.489><c> just</c><00:49:44.519><c> you</c><00:49:45.149><c> double</c><00:49:45.509><c> buffers</c>

00:49:45.799 --> 00:49:45.809 align:start position:0%
you'll feel just you double buffers
 

00:49:45.809 --> 00:49:48.019 align:start position:0%
you'll feel just you double buffers
whereas<00:49:46.229><c> if</c><00:49:46.619><c> you</c><00:49:46.769><c> create</c><00:49:47.009><c> your</c><00:49:47.130><c> own</c><00:49:47.189><c> Java</c>

00:49:48.019 --> 00:49:48.029 align:start position:0%
whereas if you create your own Java
 

00:49:48.029 --> 00:49:50.569 align:start position:0%
whereas if you create your own Java
image<00:49:48.449><c> and</c><00:49:48.689><c> drawn</c><00:49:49.589><c> to</c><00:49:49.799><c> that</c><00:49:49.949><c> which</c><00:49:50.219><c> is</c><00:49:50.339><c> really</c>

00:49:50.569 --> 00:49:50.579 align:start position:0%
image and drawn to that which is really
 

00:49:50.579 --> 00:49:52.219 align:start position:0%
image and drawn to that which is really
easily<00:49:50.849><c> doing</c><00:49:51.089><c> Java</c><00:49:51.299><c> is</c><00:49:51.479><c> mostly</c><00:49:51.779><c> now</c><00:49:51.929><c> I'm</c><00:49:52.049><c> sure</c>

00:49:52.219 --> 00:49:52.229 align:start position:0%
easily doing Java is mostly now I'm sure
 

00:49:52.229 --> 00:49:54.469 align:start position:0%
easily doing Java is mostly now I'm sure
and<00:49:52.829><c> then</c><00:49:53.249><c> with</c><00:49:53.549><c> that</c><00:49:53.759><c> image</c><00:49:53.969><c> you'll</c><00:49:54.359><c> actually</c>

00:49:54.469 --> 00:49:54.479 align:start position:0%
and then with that image you'll actually
 

00:49:54.479 --> 00:49:56.239 align:start position:0%
and then with that image you'll actually
be<00:49:54.659><c> triple</c><00:49:55.079><c> buffer</c><00:49:55.349><c> done</c><00:49:55.499><c> that</c><00:49:55.649><c> with</c><00:49:55.829><c> 10</c><00:49:56.069><c> which</c>

00:49:56.239 --> 00:49:56.249 align:start position:0%
be triple buffer done that with 10 which
 

00:49:56.249 --> 00:49:59.959 align:start position:0%
be triple buffer done that with 10 which
is<00:49:56.279><c> kinda</c><00:49:56.999><c> graceful</c><00:49:57.359><c> so</c><00:49:58.549><c> again</c><00:49:59.549><c> we</c><00:49:59.669><c> take</c><00:49:59.849><c> care</c>

00:49:59.959 --> 00:49:59.969 align:start position:0%
is kinda graceful so again we take care
 

00:49:59.969 --> 00:50:04.759 align:start position:0%
is kinda graceful so again we take care
of<00:50:00.029><c> the</c><00:50:00.149><c> swing</c><00:50:00.359><c> so</c><00:50:01.639><c> what</c><00:50:02.639><c> I</c><00:50:02.669><c> do</c><00:50:03.299><c> in</c><00:50:03.959><c> the</c><00:50:04.559><c> case</c>

00:50:04.759 --> 00:50:04.769 align:start position:0%
of the swing so what I do in the case
 

00:50:04.769 --> 00:50:06.169 align:start position:0%
of the swing so what I do in the case
where<00:50:04.979><c> I</c><00:50:05.039><c> want</c><00:50:05.279><c> to</c><00:50:05.309><c> implement</c><00:50:05.519><c> this</c><00:50:05.759><c> is</c><00:50:05.999><c> I</c><00:50:06.119><c> just</c>

00:50:06.169 --> 00:50:06.179 align:start position:0%
where I want to implement this is I just
 

00:50:06.179 --> 00:50:09.409 align:start position:0%
where I want to implement this is I just
again<00:50:06.989><c> you</c><00:50:07.229><c> the</c><00:50:07.769><c> swing</c><00:50:08.039><c> stuff</c><00:50:08.309><c> and</c><00:50:08.579><c> new</c><00:50:09.149><c> jpanel</c>

00:50:09.409 --> 00:50:09.419 align:start position:0%
again you the swing stuff and new jpanel
 

00:50:09.419 --> 00:50:15.849 align:start position:0%
again you the swing stuff and new jpanel
etc<00:50:10.169><c> and</c><00:50:10.349><c> then</c><00:50:10.739><c> it</c><00:50:10.949><c> will</c><00:50:11.039><c> all</c><00:50:11.130><c> just</c><00:50:11.249><c> take</c><00:50:11.549><c> two</c>

00:50:15.849 --> 00:50:15.859 align:start position:0%
 
 

00:50:15.859 --> 00:50:17.859 align:start position:0%
 
so<00:50:16.430><c> that's</c><00:50:16.609><c> another</c><00:50:16.759><c> issue</c><00:50:17.089><c> from</c><00:50:17.390><c> echoes</c><00:50:17.660><c> 10</c>

00:50:17.859 --> 00:50:17.869 align:start position:0%
so that's another issue from echoes 10
 

00:50:17.869 --> 00:50:20.470 align:start position:0%
so that's another issue from echoes 10
its<00:50:18.440><c> performance</c><00:50:18.890><c> related</c><00:50:19.069><c> basically</c><00:50:19.819><c> the</c>

00:50:20.470 --> 00:50:20.480 align:start position:0%
its performance related basically the
 

00:50:20.480 --> 00:50:22.299 align:start position:0%
its performance related basically the
hard<00:50:20.660><c> work</c><00:50:20.809><c> of</c><00:50:20.960><c> doing</c><00:50:21.319><c> live</c><00:50:21.499><c> window</c><00:50:21.799><c> resizing</c>

00:50:22.299 --> 00:50:22.309 align:start position:0%
hard work of doing live window resizing
 

00:50:22.309 --> 00:50:26.349 align:start position:0%
hard work of doing live window resizing
is<00:50:22.489><c> yours</c><00:50:23.440><c> f</c><00:50:24.440><c> developers</c><00:50:25.059><c> will</c><00:50:26.059><c> make</c><00:50:26.239><c> of</c>

00:50:26.349 --> 00:50:26.359 align:start position:0%
is yours f developers will make of
 

00:50:26.359 --> 00:50:29.789 align:start position:0%
is yours f developers will make of
course<00:50:26.630><c> all</c><00:50:26.809><c> the</c><00:50:26.900><c> primitive</c><00:50:27.289><c> stuff</c><00:50:27.559><c> fast</c><00:50:27.950><c> but</c>

00:50:29.789 --> 00:50:29.799 align:start position:0%
course all the primitive stuff fast but
 

00:50:29.799 --> 00:50:32.289 align:start position:0%
course all the primitive stuff fast but
when<00:50:30.799><c> you</c><00:50:30.890><c> do</c><00:50:31.039><c> live</c><00:50:31.220><c> winter</c><00:50:31.400><c> sizing</c><00:50:31.910><c> suddenly</c>

00:50:32.289 --> 00:50:32.299 align:start position:0%
when you do live winter sizing suddenly
 

00:50:32.299 --> 00:50:33.970 align:start position:0%
when you do live winter sizing suddenly
component<00:50:32.749><c> that</c><00:50:32.779><c> pain</c><00:50:33.079><c> action</c><00:50:33.349><c> is</c><00:50:33.470><c> to</c><00:50:33.589><c> be</c><00:50:33.680><c> fast</c>

00:50:33.970 --> 00:50:33.980 align:start position:0%
component that pain action is to be fast
 

00:50:33.980 --> 00:50:35.739 align:start position:0%
component that pain action is to be fast
right<00:50:34.279><c> can</c><00:50:34.789><c> be</c><00:50:34.910><c> called</c><00:50:35.150><c> every</c><00:50:35.329><c> time</c><00:50:35.480><c> you</c><00:50:35.599><c> move</c>

00:50:35.739 --> 00:50:35.749 align:start position:0%
right can be called every time you move
 

00:50:35.749 --> 00:50:38.589 align:start position:0%
right can be called every time you move
a<00:50:35.809><c> little</c><00:50:36.049><c> bottom</c><00:50:36.589><c> of</c><00:50:36.650><c> the</c><00:50:36.739><c> window</c><00:50:36.890><c> so</c><00:50:37.730><c> if</c><00:50:38.390><c> your</c>

00:50:38.589 --> 00:50:38.599 align:start position:0%
a little bottom of the window so if your
 

00:50:38.599 --> 00:50:41.170 align:start position:0%
a little bottom of the window so if your
codes<00:50:38.960><c> can't</c><00:50:39.349><c> handle</c><00:50:39.710><c> that</c><00:50:40.059><c> you'll</c><00:50:41.059><c> either</c>

00:50:41.170 --> 00:50:41.180 align:start position:0%
codes can't handle that you'll either
 

00:50:41.180 --> 00:50:44.109 align:start position:0%
codes can't handle that you'll either
have<00:50:41.480><c> built</c><00:50:42.190><c> chunky</c><00:50:43.190><c> performance</c><00:50:43.819><c> when</c><00:50:44.029><c> you</c>

00:50:44.109 --> 00:50:44.119 align:start position:0%
have built chunky performance when you
 

00:50:44.119 --> 00:50:46.599 align:start position:0%
have built chunky performance when you
move<00:50:44.269><c> in</c><00:50:44.420><c> that</c><00:50:44.599><c> window</c><00:50:45.200><c> your</c><00:50:45.380><c> intellect</c><00:50:46.039><c> funny</c>

00:50:46.599 --> 00:50:46.609 align:start position:0%
move in that window your intellect funny
 

00:50:46.609 --> 00:50:47.739 align:start position:0%
move in that window your intellect funny
you<00:50:46.700><c> know</c><00:50:46.910><c> like</c><00:50:46.940><c> you</c><00:50:47.210><c> have</c><00:50:47.299><c> a</c><00:50:47.359><c> low</c><00:50:47.480><c> frame</c><00:50:47.720><c> rate</c>

00:50:47.739 --> 00:50:47.749 align:start position:0%
you know like you have a low frame rate
 

00:50:47.749 --> 00:50:49.450 align:start position:0%
you know like you have a low frame rate
or<00:50:48.019><c> something</c><00:50:48.319><c> and</c><00:50:48.529><c> just</c><00:50:48.589><c> the</c><00:50:49.249><c> mouse</c><00:50:49.430><c> to</c>

00:50:49.450 --> 00:50:49.460 align:start position:0%
or something and just the mouse to
 

00:50:49.460 --> 00:50:52.029 align:start position:0%
or something and just the mouse to
become<00:50:49.789><c> unresponsive</c><00:50:50.359><c> or</c><00:50:50.960><c> that</c><00:50:51.619><c> you</c><00:50:51.769><c> can</c><00:50:51.920><c> do</c>

00:50:52.029 --> 00:50:52.039 align:start position:0%
become unresponsive or that you can do
 

00:50:52.039 --> 00:50:55.029 align:start position:0%
become unresponsive or that you can do
is<00:50:52.279><c> do</c><00:50:52.460><c> some</c><00:50:52.640><c> kind</c><00:50:52.849><c> of</c><00:50:52.880><c> threaded</c><00:50:53.269><c> rendering</c><00:50:54.039><c> so</c>

00:50:55.029 --> 00:50:55.039 align:start position:0%
is do some kind of threaded rendering so
 

00:50:55.039 --> 00:50:58.029 align:start position:0%
is do some kind of threaded rendering so
you<00:50:55.640><c> know</c><00:50:55.759><c> the</c><00:50:55.789><c> case</c><00:50:56.470><c> total</c><00:50:57.470><c> cases</c><00:50:57.619><c> are</c><00:50:57.859><c> like</c>

00:50:58.029 --> 00:50:58.039 align:start position:0%
you know the case total cases are like
 

00:50:58.039 --> 00:51:00.430 align:start position:0%
you know the case total cases are like
JPEG<00:50:58.400><c> voting</c><00:50:58.759><c> where</c><00:50:59.390><c> you</c><00:50:59.630><c> show</c><00:51:00.019><c> what</c><00:51:00.049><c> you</c><00:51:00.259><c> got</c>

00:51:00.430 --> 00:51:00.440 align:start position:0%
JPEG voting where you show what you got
 

00:51:00.440 --> 00:51:03.009 align:start position:0%
JPEG voting where you show what you got
don't<00:51:00.980><c> wait</c><00:51:01.190><c> or</c><00:51:01.670><c> if</c><00:51:02.359><c> you've</c><00:51:02.539><c> got</c><00:51:02.660><c> just</c><00:51:02.779><c> a</c><00:51:02.900><c> real</c>

00:51:03.009 --> 00:51:03.019 align:start position:0%
don't wait or if you've got just a real
 

00:51:03.019 --> 00:51:04.569 align:start position:0%
don't wait or if you've got just a real
complicated<00:51:03.319><c> image</c><00:51:03.769><c> maybe</c><00:51:04.039><c> we</c><00:51:04.190><c> just</c><00:51:04.339><c> pass</c>

00:51:04.569 --> 00:51:04.579 align:start position:0%
complicated image maybe we just pass
 

00:51:04.579 --> 00:51:07.390 align:start position:0%
complicated image maybe we just pass
over<00:51:04.849><c> and</c><00:51:05.380><c> do</c><00:51:06.380><c> some</c><00:51:06.559><c> kind</c><00:51:06.739><c> of</c><00:51:06.799><c> simple</c><00:51:07.009><c> versions</c>

00:51:07.390 --> 00:51:07.400 align:start position:0%
over and do some kind of simple versions
 

00:51:07.400 --> 00:51:09.519 align:start position:0%
over and do some kind of simple versions
at<00:51:07.549><c> and</c><00:51:07.940><c> cue</c><00:51:08.569><c> up</c><00:51:08.690><c> a</c><00:51:08.779><c> thread</c><00:51:09.079><c> that</c><00:51:09.200><c> does</c><00:51:09.380><c> the</c>

00:51:09.519 --> 00:51:09.529 align:start position:0%
at and cue up a thread that does the
 

00:51:09.529 --> 00:51:11.380 align:start position:0%
at and cue up a thread that does the
rest<00:51:09.680><c> of</c><00:51:09.769><c> the</c><00:51:09.920><c> work</c><00:51:10.099><c> and</c><00:51:10.369><c> then</c><00:51:10.549><c> at</c><00:51:11.089><c> that</c><00:51:11.329><c> point</c>

00:51:11.380 --> 00:51:11.390 align:start position:0%
rest of the work and then at that point
 

00:51:11.390 --> 00:51:12.880 align:start position:0%
rest of the work and then at that point
is<00:51:11.720><c> that</c><00:51:11.839><c> your</c><00:51:11.989><c> con</c><00:51:12.170><c> securely</c><00:51:12.529><c> event</c><00:51:12.710><c> maybe</c>

00:51:12.880 --> 00:51:12.890 align:start position:0%
is that your con securely event maybe
 

00:51:12.890 --> 00:51:15.130 align:start position:0%
is that your con securely event maybe
you<00:51:13.039><c> would</c><00:51:13.249><c> use</c><00:51:13.400><c> double</c><00:51:13.789><c> another</c><00:51:14.480><c> buffer</c><00:51:14.720><c> in</c>

00:51:15.130 --> 00:51:15.140 align:start position:0%
you would use double another buffer in
 

00:51:15.140 --> 00:51:17.380 align:start position:0%
you would use double another buffer in
fact<00:51:15.619><c> we</c><00:51:15.710><c> triple</c><00:51:16.009><c> buffered</c><00:51:16.309><c> but</c><00:51:16.489><c> draw</c><00:51:17.089><c> to</c><00:51:17.299><c> an</c>

00:51:17.380 --> 00:51:17.390 align:start position:0%
fact we triple buffered but draw to an
 

00:51:17.390 --> 00:51:19.749 align:start position:0%
fact we triple buffered but draw to an
image<00:51:17.599><c> and</c><00:51:17.779><c> then</c><00:51:17.900><c> do</c><00:51:18.470><c> it</c><00:51:18.619><c> later</c><00:51:18.799><c> that</c><00:51:19.519><c> gets</c><00:51:19.700><c> a</c>

00:51:19.749 --> 00:51:19.759 align:start position:0%
image and then do it later that gets a
 

00:51:19.759 --> 00:51:21.130 align:start position:0%
image and then do it later that gets a
little<00:51:19.880><c> more</c><00:51:20.089><c> complicated</c><00:51:20.390><c> because</c><00:51:20.690><c> then</c><00:51:21.019><c> if</c>

00:51:21.130 --> 00:51:21.140 align:start position:0%
little more complicated because then if
 

00:51:21.140 --> 00:51:22.809 align:start position:0%
little more complicated because then if
the<00:51:21.259><c> size</c><00:51:21.470><c> changes</c><00:51:21.859><c> maybe</c><00:51:22.099><c> you</c><00:51:22.249><c> want</c><00:51:22.430><c> a</c><00:51:22.489><c> sample</c>

00:51:22.809 --> 00:51:22.819 align:start position:0%
the size changes maybe you want a sample
 

00:51:22.819 --> 00:51:25.359 align:start position:0%
the size changes maybe you want a sample
and<00:51:23.089><c> drama</c><00:51:23.839><c> gym</c><00:51:24.109><c> scale</c><00:51:24.470><c> can</c><00:51:25.039><c> talk</c><00:51:25.220><c> to</c><00:51:25.339><c> people</c>

00:51:25.359 --> 00:51:25.369 align:start position:0%
and drama gym scale can talk to people
 

00:51:25.369 --> 00:51:27.460 align:start position:0%
and drama gym scale can talk to people
afterwards<00:51:25.849><c> if</c><00:51:26.089><c> there's</c><00:51:26.269><c> specific</c><00:51:26.450><c> examples</c>

00:51:27.460 --> 00:51:27.470 align:start position:0%
afterwards if there's specific examples
 

00:51:27.470 --> 00:51:29.140 align:start position:0%
afterwards if there's specific examples
the<00:51:28.070><c> main</c><00:51:28.220><c> thing</c><00:51:28.250><c> I</c><00:51:28.400><c> want</c><00:51:28.550><c> to</c><00:51:28.580><c> point</c><00:51:28.640><c> out</c><00:51:28.910><c> is</c>

00:51:29.140 --> 00:51:29.150 align:start position:0%
the main thing I want to point out is
 

00:51:29.150 --> 00:51:31.540 align:start position:0%
the main thing I want to point out is
that<00:51:29.180><c> with</c><00:51:29.990><c> live</c><00:51:30.200><c> resizing</c><00:51:30.920><c> your</c><00:51:31.040><c> penis</c><00:51:31.369><c> can</c>

00:51:31.540 --> 00:51:31.550 align:start position:0%
that with live resizing your penis can
 

00:51:31.550 --> 00:51:39.390 align:start position:0%
that with live resizing your penis can
we<00:51:31.609><c> call</c><00:51:31.820><c> it</c><00:51:31.910><c> a</c><00:51:31.940><c> lot</c>

00:51:39.390 --> 00:51:39.400 align:start position:0%
 
 

00:51:39.400 --> 00:51:44.570 align:start position:0%
 
so<00:51:40.000><c> if</c><00:51:40.809><c> thats</c><00:51:41.079><c> all</c><00:51:41.260><c> for</c><00:51:41.380><c> my</c><00:51:41.500><c> size</c><00:51:42.029><c> Jen</c>

00:51:44.570 --> 00:51:44.580 align:start position:0%
so if thats all for my size Jen
 

00:51:44.580 --> 00:51:51.890 align:start position:0%
so if thats all for my size Jen
I<00:51:49.640><c> guess</c><00:51:50.640><c> I</c><00:51:50.910><c> really</c><00:51:51.270><c> don't</c><00:51:51.510><c> have</c><00:51:51.540><c> much</c><00:51:51.630><c> to</c><00:51:51.870><c> say</c>

00:51:51.890 --> 00:51:51.900 align:start position:0%
I guess I really don't have much to say
 

00:51:51.900 --> 00:51:54.370 align:start position:0%
I guess I really don't have much to say
as<00:51:52.440><c> far</c><00:51:52.470><c> as</c><00:51:52.680><c> the</c><00:51:52.740><c> summers</c><00:51:53.010><c> concern</c><00:51:53.250><c> but</c><00:51:53.400><c> the</c>

00:51:54.370 --> 00:51:54.380 align:start position:0%
as far as the summers concern but the
 

00:51:54.380 --> 00:51:56.150 align:start position:0%
as far as the summers concern but the
environment<00:51:55.380><c> that</c><00:51:55.440><c> you'll</c><00:51:55.590><c> be</c><00:51:55.680><c> working</c><00:51:55.980><c> in</c><00:51:56.040><c> is</c>

00:51:56.150 --> 00:51:56.160 align:start position:0%
environment that you'll be working in is
 

00:51:56.160 --> 00:51:59.540 align:start position:0%
environment that you'll be working in is
a<00:51:56.400><c> little</c><00:51:56.820><c> bit</c><00:51:56.940><c> different</c><00:51:57.410><c> than</c><00:51:58.410><c> mr</c><00:51:59.070><c> j</c><00:51:59.310><c> and</c>

00:51:59.540 --> 00:51:59.550 align:start position:0%
a little bit different than mr j and
 

00:51:59.550 --> 00:52:00.830 align:start position:0%
a little bit different than mr j and
there<00:51:59.970><c> are</c><00:52:00.060><c> going</c><00:52:00.210><c> to</c><00:52:00.300><c> be</c><00:52:00.360><c> some</c><00:52:00.540><c> different</c>

00:52:00.830 --> 00:52:00.840 align:start position:0%
there are going to be some different
 

00:52:00.840 --> 00:52:02.570 align:start position:0%
there are going to be some different
things<00:52:00.870><c> that</c><00:52:01.140><c> you</c><00:52:01.200><c> may</c><00:52:02.040><c> have</c><00:52:02.070><c> spent</c><00:52:02.400><c> a</c><00:52:02.430><c> lot</c><00:52:02.550><c> of</c>

00:52:02.570 --> 00:52:02.580 align:start position:0%
things that you may have spent a lot of
 

00:52:02.580 --> 00:52:04.100 align:start position:0%
things that you may have spent a lot of
time<00:52:02.700><c> trying</c><00:52:03.030><c> to</c><00:52:03.150><c> get</c><00:52:03.270><c> the</c><00:52:03.360><c> forms</c><00:52:03.630><c> done</c><00:52:03.900><c> it</c><00:52:04.020><c> in</c>

00:52:04.100 --> 00:52:04.110 align:start position:0%
time trying to get the forms done it in
 

00:52:04.110 --> 00:52:05.480 align:start position:0%
time trying to get the forms done it in
my<00:52:04.230><c> day</c><00:52:04.440><c> they're</c><00:52:04.980><c> going</c><00:52:05.070><c> to</c><00:52:05.160><c> be</c><00:52:05.220><c> a</c><00:52:05.250><c> little</c><00:52:05.310><c> bit</c>

00:52:05.480 --> 00:52:05.490 align:start position:0%
my day they're going to be a little bit
 

00:52:05.490 --> 00:52:06.650 align:start position:0%
my day they're going to be a little bit
different<00:52:05.700><c> when</c><00:52:05.790><c> you</c><00:52:05.850><c> get</c><00:52:05.940><c> to</c><00:52:06.030><c> macro</c><00:52:06.330><c> as</c><00:52:06.450><c> Ken</c>

00:52:06.650 --> 00:52:06.660 align:start position:0%
different when you get to macro as Ken
 

00:52:06.660 --> 00:52:08.720 align:start position:0%
different when you get to macro as Ken
so<00:52:07.170><c> hopefully</c><00:52:07.740><c> we've</c><00:52:07.950><c> sort</c><00:52:08.370><c> of</c><00:52:08.400><c> covered</c><00:52:08.640><c> a</c>

00:52:08.720 --> 00:52:08.730 align:start position:0%
so hopefully we've sort of covered a
 

00:52:08.730 --> 00:52:10.940 align:start position:0%
so hopefully we've sort of covered a
broad<00:52:09.270><c> net</c><00:52:09.510><c> area</c><00:52:09.720><c> that</c><00:52:09.930><c> you</c><00:52:09.990><c> get</c><00:52:10.590><c> to</c><00:52:10.620><c> keep</c><00:52:10.800><c> in</c>

00:52:10.940 --> 00:52:10.950 align:start position:0%
broad net area that you get to keep in
 

00:52:10.950 --> 00:52:13.910 align:start position:0%
broad net area that you get to keep in
mind<00:52:11.160><c> in</c><00:52:11.310><c> your</c><00:52:11.460><c> ass</c><00:52:11.610><c> and</c><00:52:11.930><c> you're</c><00:52:12.930><c> working</c><00:52:13.320><c> so</c><00:52:13.890><c> I</c>

00:52:13.910 --> 00:52:13.920 align:start position:0%
mind in your ass and you're working so I
 

00:52:13.920 --> 00:52:15.290 align:start position:0%
mind in your ass and you're working so I
guess<00:52:14.280><c> we're</c><00:52:14.400><c> going</c><00:52:14.490><c> to</c><00:52:14.580><c> get</c><00:52:14.670><c> Alan</c><00:52:14.970><c> to</c><00:52:15.030><c> come</c><00:52:15.150><c> up</c>

00:52:15.290 --> 00:52:15.300 align:start position:0%
guess we're going to get Alan to come up
 

00:52:15.300 --> 00:52:18.740 align:start position:0%
guess we're going to get Alan to come up
and<00:52:15.510><c> coordinate</c><00:52:16.380><c> a</c><00:52:16.410><c> Q&amp;A</c><00:52:17.040><c> session</c><00:52:17.600><c> we</c><00:52:18.600><c> took</c>

00:52:18.740 --> 00:52:18.750 align:start position:0%
and coordinate a Q&amp;A session we took
 

00:52:18.750 --> 00:52:21.020 align:start position:0%
and coordinate a Q&amp;A session we took
time

