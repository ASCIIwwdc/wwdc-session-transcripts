
00:00:00.668 --> 00:00:09.442
[ Silence ]

00:00:09.443 --> 00:00:11.978
[ Silence ]

00:00:11.979 --> 00:00:14.297
>> Hello, good afternoon,

00:00:11.979 --> 00:00:14.297
welcome to session 505,

00:00:14.297 --> 00:00:16.615
[ Silence ]

00:00:16.617 --> 00:00:18.251
"Harnessing Metadata

00:00:16.617 --> 00:00:18.251
in Audiovisual Media".

00:00:18.251 --> 00:00:19.885
[ Silence ]

00:00:19.887 --> 00:00:21.304
I've heard we are competing

00:00:19.887 --> 00:00:21.304
with the "Intro to Swift" talk

00:00:21.304 --> 00:00:22.721
[ Silence ]

00:00:22.723 --> 00:00:24.107
so get intimate with

00:00:22.723 --> 00:00:24.107
your neighbors here.

00:00:24.107 --> 00:00:25.491
[ Silence ]

00:00:25.493 --> 00:00:26.927
My name is Adam Sonnanstine.

00:00:26.927 --> 00:00:28.361
[ Silence ]

00:00:28.362 --> 00:00:29.579
I'm an engineer on

00:00:28.362 --> 00:00:29.579
the AVFoundation team

00:00:29.579 --> 00:00:30.796
[ Silence ]

00:00:30.798 --> 00:00:32.482
and today we are going to talk

00:00:30.798 --> 00:00:32.482
about, of course, metadata.

00:00:32.482 --> 00:00:34.166
[ Silence ]

00:00:34.168 --> 00:00:35.018
So what do I mean by metadata?

00:00:35.018 --> 00:00:35.868
[ Silence ]

00:00:35.870 --> 00:00:37.087
Well, for the purposes

00:00:35.870 --> 00:00:37.087
of this talk we're going

00:00:37.087 --> 00:00:38.304
[ Silence ]

00:00:38.305 --> 00:00:39.539
to define metadata to mean

00:00:38.305 --> 00:00:39.539
any data that is stored

00:00:39.539 --> 00:00:40.773
[ Silence ]

00:00:40.775 --> 00:00:42.476
in movie files, streaming

00:00:40.775 --> 00:00:42.476
presentations, any other sort

00:00:42.476 --> 00:00:44.177
[ Silence ]

00:00:44.178 --> 00:00:46.863
of audiovisual presentation

00:00:44.178 --> 00:00:46.863
that describes the primary data,

00:00:46.863 --> 00:00:49.548
[ Silence ]

00:00:49.550 --> 00:00:50.667
like the audio and video that

00:00:49.550 --> 00:00:50.667
we think about when we think

00:00:50.667 --> 00:00:51.784
[ Silence ]

00:00:51.786 --> 00:00:52.769
of those sorts of presentations.

00:00:52.769 --> 00:00:53.752
[ Silence ]

00:00:53.754 --> 00:00:55.005
Some examples are

00:00:53.754 --> 00:00:55.005
always helpful.

00:00:55.005 --> 00:00:56.256
[ Silence ]

00:00:56.257 --> 00:00:57.774
One you should be familiar

00:00:56.257 --> 00:00:57.774
is iTunes metadata,

00:00:57.774 --> 00:00:59.291
[ Silence ]

00:00:59.293 --> 00:01:00.877
when you have this sort of

00:00:59.293 --> 00:01:00.877
the song names and the artists

00:01:00.877 --> 00:01:02.461
[ Silence ]

00:01:02.463 --> 00:01:04.147
and the album artwork

00:01:02.463 --> 00:01:04.147
in your iTunes library.

00:01:04.147 --> 00:01:05.831
[ Silence ]

00:01:05.833 --> 00:01:07.033
All these things are stored

00:01:05.833 --> 00:01:07.033
as the sort of metadata

00:01:07.033 --> 00:01:08.233
[ Silence ]

00:01:08.235 --> 00:01:09.269
that I'm talking about

00:01:08.235 --> 00:01:09.269
today in the files

00:01:09.269 --> 00:01:10.303
[ Silence ]

00:01:10.304 --> 00:01:11.454
in your iTunes library.

00:01:11.454 --> 00:01:12.604
[ Silence ]

00:01:12.606 --> 00:01:13.940
Besides iTunes metadata,

00:01:12.606 --> 00:01:13.940
we also have things

00:01:13.940 --> 00:01:15.274
[ Silence ]

00:01:15.276 --> 00:01:16.143
like location information.

00:01:16.143 --> 00:01:17.010
[ Silence ]

00:01:17.011 --> 00:01:18.445
If you have a movie that

00:01:17.011 --> 00:01:18.445
you took with your iPhone

00:01:18.445 --> 00:01:19.879
[ Silence ]

00:01:19.880 --> 00:01:21.481
or some other location-enabled

00:01:19.880 --> 00:01:21.481
device and you played it

00:01:21.481 --> 00:01:23.082
[ Silence ]

00:01:23.084 --> 00:01:24.585
in QuickTime player, that will

00:01:23.084 --> 00:01:24.585
show up in the info window

00:01:24.585 --> 00:01:26.086
[ Silence ]

00:01:26.087 --> 00:01:27.654
to tell you where you were

00:01:26.087 --> 00:01:27.654
when you took that movie.

00:01:27.654 --> 00:01:29.221
[ Silence ]

00:01:29.223 --> 00:01:30.157
That's also stored as

00:01:29.223 --> 00:01:30.157
the kind of metadata

00:01:30.157 --> 00:01:31.091
[ Silence ]

00:01:31.092 --> 00:01:32.392
that we are talking about today.

00:01:32.392 --> 00:01:33.692
[ Silence ]

00:01:33.694 --> 00:01:35.262
Some new features, we know that

00:01:33.694 --> 00:01:35.262
you're not always standing still

00:01:35.262 --> 00:01:36.830
[ Silence ]

00:01:36.831 --> 00:01:37.431
when you are taking your videos.

00:01:37.431 --> 00:01:38.031
[ Silence ]

00:01:38.032 --> 00:01:40.517
So new in iOS 8 and OS X

00:01:38.032 --> 00:01:40.517
Yosemite, we have features

00:01:40.517 --> 00:01:43.002
[ Silence ]

00:01:43.003 --> 00:01:44.671
that support things like dynamic

00:01:43.003 --> 00:01:44.671
location, that's a location

00:01:44.671 --> 00:01:46.339
[ Silence ]

00:01:46.340 --> 00:01:47.040
that changes over time.

00:01:47.040 --> 00:01:47.740
[ Silence ]

00:01:47.741 --> 00:01:48.541
So these are some new features

00:01:47.741 --> 00:01:48.541
that we are going to be talking

00:01:48.541 --> 00:01:49.341
[ Silence ]

00:01:49.343 --> 00:01:51.328
about later on that we are

00:01:49.343 --> 00:01:51.328
pretty excited about and,

00:01:51.328 --> 00:01:53.313
[ Silence ]

00:01:53.314 --> 00:01:55.332
in addition to location, this

00:01:53.314 --> 00:01:55.332
really applies to any sort

00:01:55.332 --> 00:01:57.350
[ Silence ]

00:01:57.351 --> 00:01:58.685
of metadata that you might

00:01:57.351 --> 00:01:58.685
want to add that changes

00:01:58.685 --> 00:02:00.019
[ Silence ]

00:02:00.020 --> 00:02:00.954
over time in your movie.

00:02:00.954 --> 00:02:01.888
[ Silence ]

00:02:01.889 --> 00:02:03.290
This is a screen shot of a

00:02:01.889 --> 00:02:03.290
demo app we'll show you later

00:02:03.290 --> 00:02:04.691
[ Silence ]

00:02:04.692 --> 00:02:06.159
but the circle and the

00:02:04.692 --> 00:02:06.159
annotation text that's all

00:02:06.159 --> 00:02:07.626
[ Silence ]

00:02:07.628 --> 00:02:10.313
stored as the same sort of timed

00:02:07.628 --> 00:02:10.313
metadata as a timed location.

00:02:10.313 --> 00:02:12.998
[ Silence ]

00:02:13.000 --> 00:02:14.034
So hopefully that whets

00:02:13.000 --> 00:02:14.034
your appetite a little bit.

00:02:14.034 --> 00:02:15.068
[ Silence ]

00:02:15.069 --> 00:02:16.219
We'll talk about what

00:02:15.069 --> 00:02:16.219
we're going to cover today,

00:02:16.219 --> 00:02:17.369
[ Silence ]

00:02:17.371 --> 00:02:18.471
we're going to start, I'm going

00:02:17.371 --> 00:02:18.471
to give you an intro to metadata

00:02:18.471 --> 00:02:19.571
[ Silence ]

00:02:19.573 --> 00:02:20.707
and AVFoundation, some of

00:02:19.573 --> 00:02:20.707
the classes that have been

00:02:20.707 --> 00:02:21.841
[ Silence ]

00:02:21.842 --> 00:02:23.360
around for a while for

00:02:21.842 --> 00:02:23.360
describing all sorts

00:02:23.360 --> 00:02:24.878
[ Silence ]

00:02:24.879 --> 00:02:26.263
of metadata, how to inspect

00:02:24.879 --> 00:02:26.263
that and how to author it.

00:02:26.263 --> 00:02:27.647
[ Silence ]

00:02:27.648 --> 00:02:28.315
We're going to talk more

00:02:28.315 --> 00:02:28.982
[ Silence ]

00:02:28.983 --> 00:02:29.950
about those new timed

00:02:28.983 --> 00:02:29.950
metadata features

00:02:29.950 --> 00:02:30.917
[ Silence ]

00:02:30.918 --> 00:02:33.019
and then I'll give you some best

00:02:30.918 --> 00:02:33.019
practices including some privacy

00:02:33.019 --> 00:02:35.120
[ Silence ]

00:02:35.122 --> 00:02:36.923
things to keep in mind and

00:02:35.122 --> 00:02:36.923
some other best practices.

00:02:36.923 --> 00:02:38.724
[ Silence ]

00:02:38.726 --> 00:02:40.310
So our first topic: metadata

00:02:38.726 --> 00:02:40.310
in AVFoundation..What kind

00:02:40.310 --> 00:02:41.894
[ Silence ]

00:02:41.896 --> 00:02:43.563
of classes are we going to be

00:02:41.896 --> 00:02:43.563
using to describe our metadata?

00:02:43.563 --> 00:02:45.230
[ Silence ]

00:02:45.232 --> 00:02:46.750
Well our primary model

00:02:45.232 --> 00:02:46.750
objects that we use

00:02:46.750 --> 00:02:48.268
[ Silence ]

00:02:48.269 --> 00:02:51.571
to describe both movie files

00:02:48.269 --> 00:02:51.571
or HLS streams is AVAsset.

00:02:51.571 --> 00:02:54.873
[ Silence ]

00:02:54.875 --> 00:02:57.544
AVAsset can contain any

00:02:54.875 --> 00:02:57.544
number of AV metadata objects

00:02:57.544 --> 00:03:00.213
[ Silence ]

00:03:00.214 --> 00:03:02.849
and each AVMetadataItem instance

00:03:00.214 --> 00:03:02.849
represents a single piece

00:03:02.849 --> 00:03:05.484
[ Silence ]

00:03:05.486 --> 00:03:07.153
of metadata, either your

00:03:05.486 --> 00:03:07.153
track name or your album mark,

00:03:07.153 --> 00:03:08.820
[ Silence ]

00:03:08.822 --> 00:03:10.990
even your location stuff that's

00:03:08.822 --> 00:03:10.990
going to be separate pieces

00:03:10.990 --> 00:03:13.158
[ Silence ]

00:03:13.160 --> 00:03:14.594
of metadata in our

00:03:13.160 --> 00:03:14.594
runtime environment.

00:03:14.594 --> 00:03:16.028
[ Silence ]

00:03:16.030 --> 00:03:18.031
So a closer look at

00:03:16.030 --> 00:03:18.031
AVMetadataItem: at its core,

00:03:18.031 --> 00:03:20.032
[ Silence ]

00:03:20.034 --> 00:03:20.984
it has two properties.

00:03:20.984 --> 00:03:21.934
[ Silence ]

00:03:21.936 --> 00:03:23.353
The first is identifier, which

00:03:21.936 --> 00:03:23.353
is actually a new property

00:03:23.353 --> 00:03:24.770
[ Silence ]

00:03:24.772 --> 00:03:25.639
and that is going

00:03:24.772 --> 00:03:25.639
to describe the kind

00:03:25.639 --> 00:03:26.506
[ Silence ]

00:03:26.507 --> 00:03:27.190
of metadata that you have.

00:03:27.190 --> 00:03:27.873
[ Silence ]

00:03:27.875 --> 00:03:29.676
In this example we have the

00:03:27.875 --> 00:03:29.676
song name and it's represented

00:03:29.676 --> 00:03:31.477
[ Silence ]

00:03:31.478 --> 00:03:32.195
by this long symbol name,

00:03:32.195 --> 00:03:32.912
[ Silence ]

00:03:32.913 --> 00:03:34.898
AVMetadataIdentifieriTunes

00:03:32.913 --> 00:03:34.898
MetadataSongName,

00:03:34.898 --> 00:03:36.883
[ Silence ]

00:03:36.884 --> 00:03:37.517
and then you have the value

00:03:37.517 --> 00:03:38.150
[ Silence ]

00:03:38.152 --> 00:03:39.236
which is the actual payload

00:03:38.152 --> 00:03:39.236
of the metadata item.

00:03:39.236 --> 00:03:40.320
[ Silence ]

00:03:40.321 --> 00:03:42.539
So for song name, it's the

00:03:40.321 --> 00:03:42.539
name of the song as a string.

00:03:42.539 --> 00:03:44.757
[ Silence ]

00:03:44.758 --> 00:03:46.042
As an example for cover art,

00:03:46.042 --> 00:03:47.326
[ Silence ]

00:03:47.328 --> 00:03:48.462
you can see that the

00:03:47.328 --> 00:03:48.462
value doesn't have

00:03:48.462 --> 00:03:49.596
[ Silence ]

00:03:49.597 --> 00:03:51.498
to be a string it can be an

00:03:49.597 --> 00:03:51.498
image or any other object

00:03:51.498 --> 00:03:53.399
[ Silence ]

00:03:53.400 --> 00:03:55.869
that supports both the NSObject

00:03:53.400 --> 00:03:55.869
and NSCopying protocols.

00:03:55.869 --> 00:03:58.338
[ Silence ]

00:03:58.339 --> 00:03:59.422
Now if you've used

00:03:58.339 --> 00:03:59.422
AVMetadataItem

00:03:59.422 --> 00:04:00.505
[ Silence ]

00:04:00.507 --> 00:04:01.841
in the past you might

00:04:00.507 --> 00:04:01.841
be familiar with the key

00:04:01.841 --> 00:04:03.175
[ Silence ]

00:04:03.177 --> 00:04:04.094
and key space properties.

00:04:04.094 --> 00:04:05.011
[ Silence ]

00:04:05.012 --> 00:04:06.229
Well the identifier I

00:04:05.012 --> 00:04:06.229
mentioned that was new,

00:04:06.229 --> 00:04:07.446
[ Silence ]

00:04:07.448 --> 00:04:08.298
it's new because

00:04:07.448 --> 00:04:08.298
it is a combination

00:04:08.298 --> 00:04:09.148
[ Silence ]

00:04:09.149 --> 00:04:10.300
of the old properties,

00:04:09.149 --> 00:04:10.300
key and key space.

00:04:10.300 --> 00:04:11.451
[ Silence ]

00:04:11.452 --> 00:04:12.752
So I'm not going to talking much

00:04:11.452 --> 00:04:12.752
about key and key space today

00:04:12.752 --> 00:04:14.052
[ Silence ]

00:04:14.054 --> 00:04:15.471
but mostly going to be talking

00:04:14.054 --> 00:04:15.471
about identifier going forward

00:04:15.471 --> 00:04:16.888
[ Silence ]

00:04:16.890 --> 00:04:18.591
as the way to describe

00:04:16.890 --> 00:04:18.591
your metadata.

00:04:18.591 --> 00:04:20.292
[ Silence ]

00:04:20.294 --> 00:04:21.745
Take a look at some of the

00:04:20.294 --> 00:04:21.745
built-in identifiers we have;

00:04:21.745 --> 00:04:23.196
[ Silence ]

00:04:23.197 --> 00:04:23.897
this is just a tiny sampling.

00:04:23.897 --> 00:04:24.597
[ Silence ]

00:04:24.598 --> 00:04:25.031
There's a lot of them.

00:04:25.031 --> 00:04:25.464
[ Silence ]

00:04:25.466 --> 00:04:26.149
You can find them

00:04:26.149 --> 00:04:26.832
[ Silence ]

00:04:26.834 --> 00:04:28.268
in AVMetadataIdentifiers.h. I've

00:04:26.834 --> 00:04:28.268
arranged them here according

00:04:28.268 --> 00:04:29.702
[ Silence ]

00:04:29.703 --> 00:04:32.021
roughly to the old notion of

00:04:29.703 --> 00:04:32.021
key space so that's just sort

00:04:32.021 --> 00:04:34.339
[ Silence ]

00:04:34.341 --> 00:04:35.859
of a sampling of the kind of

00:04:34.341 --> 00:04:35.859
metadata that we already know

00:04:35.859 --> 00:04:37.377
[ Silence ]

00:04:37.378 --> 00:04:38.712
that you might want

00:04:37.378 --> 00:04:38.712
to represent.

00:04:38.712 --> 00:04:40.046
[ Silence ]

00:04:40.047 --> 00:04:41.915
Going back to the

00:04:40.047 --> 00:04:41.915
metadata item itself,

00:04:41.915 --> 00:04:43.783
[ Silence ]

00:04:43.784 --> 00:04:45.735
we have a property that's

00:04:43.784 --> 00:04:45.735
also new called dataType,

00:04:45.735 --> 00:04:47.686
[ Silence ]

00:04:47.688 --> 00:04:48.788
which describes the

00:04:47.688 --> 00:04:48.788
native data type

00:04:48.788 --> 00:04:49.888
[ Silence ]

00:04:49.890 --> 00:04:51.007
that your metadata

00:04:49.890 --> 00:04:51.007
is representing.

00:04:51.007 --> 00:04:52.124
[ Silence ]

00:04:52.126 --> 00:04:53.476
So for the case of our song

00:04:52.126 --> 00:04:53.476
name it's stored as a string

00:04:53.476 --> 00:04:54.826
[ Silence ]

00:04:54.828 --> 00:04:56.312
so we see that the data

00:04:54.828 --> 00:04:56.312
type is a UTF8 string;

00:04:56.312 --> 00:04:57.796
[ Silence ]

00:04:57.798 --> 00:04:58.598
and these string constants

00:04:58.598 --> 00:04:59.398
[ Silence ]

00:04:59.400 --> 00:05:00.784
that represent the different

00:04:59.400 --> 00:05:00.784
data types are all defined

00:05:00.784 --> 00:05:02.168
[ Silence ]

00:05:02.169 --> 00:05:04.971
in CMMetadata.h. And besides

00:05:02.169 --> 00:05:04.971
the data type property,

00:05:04.971 --> 00:05:07.773
[ Silence ]

00:05:07.775 --> 00:05:09.476
we also have several

00:05:07.775 --> 00:05:09.476
type coercion properties

00:05:09.476 --> 00:05:11.177
[ Silence ]

00:05:11.178 --> 00:05:12.679
that you can use if you know

00:05:11.178 --> 00:05:12.679
you want to get your payload

00:05:12.679 --> 00:05:14.180
[ Silence ]

00:05:14.181 --> 00:05:15.782
in the form of a certain

00:05:14.181 --> 00:05:15.782
type of Objective C object.

00:05:15.782 --> 00:05:17.383
[ Silence ]

00:05:17.384 --> 00:05:19.385
So you have string value, number

00:05:17.384 --> 00:05:19.385
value, date value and data value

00:05:19.385 --> 00:05:21.386
[ Silence ]

00:05:21.388 --> 00:05:23.106
and those are going to give

00:05:21.388 --> 00:05:23.106
you exactly what you'd expect.

00:05:23.106 --> 00:05:24.824
[ Silence ]

00:05:24.825 --> 00:05:26.810
For the case of where our

00:05:24.825 --> 00:05:26.810
native payload is a string,

00:05:26.810 --> 00:05:28.795
[ Silence ]

00:05:28.796 --> 00:05:30.080
only string value is going to

00:05:28.796 --> 00:05:30.080
give you an interesting answer.

00:05:30.080 --> 00:05:31.364
[ Silence ]

00:05:31.365 --> 00:05:32.215
The rest will give you NULL.

00:05:32.215 --> 00:05:33.065
[ Silence ]

00:05:33.067 --> 00:05:34.951
For our artwork example where

00:05:33.067 --> 00:05:34.951
the payload is a JPEG image,

00:05:34.951 --> 00:05:36.835
[ Silence ]

00:05:36.837 --> 00:05:38.088
the top three are

00:05:36.837 --> 00:05:38.088
going to give you NULL

00:05:38.088 --> 00:05:39.339
[ Silence ]

00:05:39.340 --> 00:05:40.740
and the data value is going

00:05:39.340 --> 00:05:40.740
to give you the NSData

00:05:40.740 --> 00:05:42.140
[ Silence ]

00:05:42.142 --> 00:05:44.260
that you're looking for to grab

00:05:42.142 --> 00:05:44.260
the bytes of the JPEG image.

00:05:44.260 --> 00:05:46.378
[ Silence ]

00:05:46.380 --> 00:05:47.514
There are examples

00:05:46.380 --> 00:05:47.514
where you can have more

00:05:47.514 --> 00:05:48.648
[ Silence ]

00:05:48.649 --> 00:05:50.633
than one non-nil

00:05:48.649 --> 00:05:50.633
tech coercion method.

00:05:50.633 --> 00:05:52.617
[ Silence ]

00:05:52.619 --> 00:05:54.737
And one is creation date if

00:05:52.619 --> 00:05:54.737
you have the date represented

00:05:54.737 --> 00:05:56.855
[ Silence ]

00:05:56.857 --> 00:05:58.191
as a standard string

00:05:56.857 --> 00:05:58.191
format for dates.

00:05:58.191 --> 00:05:59.525
[ Silence ]

00:05:59.526 --> 00:06:02.362
You can either get the actual

00:05:59.526 --> 00:06:02.362
string that was stored that way

00:06:02.362 --> 00:06:05.198
[ Silence ]

00:06:05.199 --> 00:06:06.650
or you can ask the metadata

00:06:05.199 --> 00:06:06.650
item to give you an instance

00:06:06.650 --> 00:06:08.101
[ Silence ]

00:06:08.102 --> 00:06:09.085
of NSDate that describes

00:06:08.102 --> 00:06:09.085
the same thing

00:06:09.085 --> 00:06:10.068
[ Silence ]

00:06:10.070 --> 00:06:11.271
in a more convenient

00:06:10.070 --> 00:06:11.271
representation.

00:06:11.271 --> 00:06:12.472
[ Silence ]

00:06:12.473 --> 00:06:13.924
So that's your brief

00:06:12.473 --> 00:06:13.924
intro to AVMetadataItem,

00:06:13.924 --> 00:06:15.375
[ Silence ]

00:06:15.376 --> 00:06:16.560
we're going to be talking a lot

00:06:15.376 --> 00:06:16.560
about it throughout the talk.

00:06:16.560 --> 00:06:17.744
[ Silence ]

00:06:17.745 --> 00:06:18.461
Let's go back to AVAsset

00:06:18.461 --> 00:06:19.177
[ Silence ]

00:06:19.179 --> 00:06:20.430
so we can see how we actually

00:06:19.179 --> 00:06:20.430
get these metadata items.

00:06:20.430 --> 00:06:21.681
[ Silence ]

00:06:21.682 --> 00:06:23.566
So the easiest way is just to

00:06:21.682 --> 00:06:23.566
ask for all of the metadata

00:06:23.566 --> 00:06:25.450
[ Silence ]

00:06:25.452 --> 00:06:26.452
that applies to the

00:06:25.452 --> 00:06:26.452
entire asset.

00:06:26.452 --> 00:06:27.452
[ Silence ]

00:06:27.454 --> 00:06:29.005
There are types of metadata that

00:06:27.454 --> 00:06:29.005
apply to just parts of the asset

00:06:29.005 --> 00:06:30.556
[ Silence ]

00:06:30.557 --> 00:06:32.041
but this is how you get the

00:06:30.557 --> 00:06:32.041
metadata to, like, the location

00:06:32.041 --> 00:06:33.525
[ Silence ]

00:06:33.527 --> 00:06:35.028
and the song title that

00:06:33.527 --> 00:06:35.028
applies to the entire asset.

00:06:35.028 --> 00:06:36.529
[ Silence ]

00:06:36.530 --> 00:06:38.481
There's also a way to get

00:06:36.530 --> 00:06:38.481
just a subset of the metadata.

00:06:38.481 --> 00:06:40.432
[ Silence ]

00:06:40.434 --> 00:06:41.601
We have this notion of metadata

00:06:40.434 --> 00:06:41.601
format but I'm not going

00:06:41.601 --> 00:06:42.768
[ Silence ]

00:06:42.770 --> 00:06:44.054
to be talking about too much

00:06:42.770 --> 00:06:44.054
today but you can use it

00:06:44.054 --> 00:06:45.338
[ Silence ]

00:06:45.339 --> 00:06:46.623
to get just that

00:06:45.339 --> 00:06:46.623
subset of the metadata.

00:06:46.623 --> 00:06:47.907
[ Silence ]

00:06:47.908 --> 00:06:49.359
So for our example, when we

00:06:47.908 --> 00:06:49.359
are getting iTunes metadata,

00:06:49.359 --> 00:06:50.810
[ Silence ]

00:06:50.811 --> 00:06:52.545
we're going to use that

00:06:50.811 --> 00:06:52.545
AVMetadataFormatiTunesMetadata

00:06:52.545 --> 00:06:54.279
[ Silence ]

00:06:54.281 --> 00:06:56.566
and grab all of that using

00:06:54.281 --> 00:06:56.566
the metadataForFormat method.

00:06:56.566 --> 00:06:58.851
[ Silence ]

00:06:58.852 --> 00:07:00.403
And then from there we can

00:06:58.852 --> 00:07:00.403
use this filtering method,

00:07:00.403 --> 00:07:01.954
[ Silence ]

00:07:01.955 --> 00:07:03.206
metadataItemsFromArray,

00:07:01.955 --> 00:07:03.206
filtered by an identifier

00:07:03.206 --> 00:07:04.457
[ Silence ]

00:07:04.458 --> 00:07:05.809
to get just the items

00:07:04.458 --> 00:07:05.809
that correspond

00:07:05.809 --> 00:07:07.160
[ Silence ]

00:07:07.161 --> 00:07:08.061
to the song name identifier.

00:07:08.061 --> 00:07:08.961
[ Silence ]

00:07:08.962 --> 00:07:09.896
You might be wondering

00:07:08.962 --> 00:07:09.896
why you can have more

00:07:09.896 --> 00:07:10.830
[ Silence ]

00:07:10.831 --> 00:07:11.998
than one song name

00:07:10.831 --> 00:07:11.998
in a single asset?

00:07:11.998 --> 00:07:13.165
[ Silence ]

00:07:13.167 --> 00:07:14.434
We'll get back to that in just

00:07:13.167 --> 00:07:14.434
a little bit but first I want

00:07:14.434 --> 00:07:15.701
[ Silence ]

00:07:15.702 --> 00:07:17.937
to talk about how you load the

00:07:15.702 --> 00:07:17.937
payload of your metadata items.

00:07:17.937 --> 00:07:20.172
[ Silence ]

00:07:20.174 --> 00:07:21.591
AVMetadataItem conforms

00:07:21.591 --> 00:07:23.008
[ Silence ]

00:07:23.010 --> 00:07:24.027
to the

00:07:23.010 --> 00:07:24.027
AVAsynchronousKeyValueLoading.h

00:07:24.027 --> 00:07:25.044
[ Silence ]

00:07:25.045 --> 00:07:25.695
protocol.

00:07:25.695 --> 00:07:26.345
[ Silence ]

00:07:26.346 --> 00:07:27.480
This is a protocol we define

00:07:26.346 --> 00:07:27.480
ourselves in AVFoundation

00:07:27.480 --> 00:07:28.614
[ Silence ]

00:07:28.615 --> 00:07:30.500
and a lot of our core

00:07:28.615 --> 00:07:30.500
model objects conform to it

00:07:30.500 --> 00:07:32.385
[ Silence ]

00:07:32.386 --> 00:07:33.953
because a lot of times

00:07:32.386 --> 00:07:33.953
when you get an AVAsset

00:07:33.953 --> 00:07:35.520
[ Silence ]

00:07:35.522 --> 00:07:37.023
or an AVMetadataItem we haven't

00:07:35.522 --> 00:07:37.023
actually loaded the data behind

00:07:37.023 --> 00:07:38.524
[ Silence ]

00:07:38.525 --> 00:07:39.225
it yet.

00:07:39.225 --> 00:07:39.925
[ Silence ]

00:07:39.927 --> 00:07:41.795
So you can use this method, load

00:07:39.927 --> 00:07:41.795
values asynchronously for keys

00:07:41.795 --> 00:07:43.663
[ Silence ]

00:07:43.664 --> 00:07:44.914
to load the specific values

00:07:43.664 --> 00:07:44.914
you want and they'll do

00:07:44.914 --> 00:07:46.164
[ Silence ]

00:07:46.166 --> 00:07:47.617
that asynchronously so you're

00:07:46.166 --> 00:07:47.617
not blocking your main thread

00:07:47.617 --> 00:07:49.068
[ Silence ]

00:07:49.069 --> 00:07:50.670
with some sort of synchronous

00:07:49.069 --> 00:07:50.670
I/O or something like that.

00:07:50.670 --> 00:07:52.271
[ Silence ]

00:07:52.272 --> 00:07:53.456
So for this case we

00:07:52.272 --> 00:07:53.456
have our metadata item.

00:07:53.456 --> 00:07:54.640
[ Silence ]

00:07:54.641 --> 00:07:56.359
We're looking for the value so

00:07:54.641 --> 00:07:56.359
we just load the key value and,

00:07:56.359 --> 00:07:58.077
[ Silence ]

00:07:58.078 --> 00:07:58.895
when we get our completion

00:07:58.078 --> 00:07:58.895
handler,

00:07:58.895 --> 00:07:59.712
[ Silence ]

00:07:59.713 --> 00:08:00.530
we're going to check

00:07:59.713 --> 00:08:00.530
the status to make sure

00:08:00.530 --> 00:08:01.347
[ Silence ]

00:08:01.348 --> 00:08:02.765
that that loading succeeded

00:08:01.348 --> 00:08:02.765
and, assuming that we did,

00:08:02.765 --> 00:08:04.182
[ Silence ]

00:08:04.184 --> 00:08:05.184
we can then just go

00:08:04.184 --> 00:08:05.184
ahead and grab the value

00:08:05.184 --> 00:08:06.184
[ Silence ]

00:08:06.186 --> 00:08:07.270
and use it however we see fit.

00:08:07.270 --> 00:08:08.354
[ Silence ]

00:08:08.355 --> 00:08:10.506
So back to that whole multiple

00:08:08.355 --> 00:08:10.506
titles in one asset string.

00:08:10.506 --> 00:08:12.657
[ Silence ]

00:08:12.659 --> 00:08:14.460
Well, one reason we

00:08:12.659 --> 00:08:14.460
might have that is

00:08:14.460 --> 00:08:16.261
[ Silence ]

00:08:16.263 --> 00:08:18.047
if we have the asset localized

00:08:16.263 --> 00:08:18.047
in multiple languages.

00:08:18.047 --> 00:08:19.831
[ Silence ]

00:08:19.833 --> 00:08:21.250
So an asset can have

00:08:19.833 --> 00:08:21.250
the same metadata items

00:08:21.250 --> 00:08:22.667
[ Silence ]

00:08:22.669 --> 00:08:23.453
in multiple languages.

00:08:23.453 --> 00:08:24.237
[ Silence ]

00:08:24.238 --> 00:08:24.954
The example that

00:08:24.238 --> 00:08:24.954
we're going to talk

00:08:24.954 --> 00:08:25.670
[ Silence ]

00:08:25.672 --> 00:08:27.140
about is

00:08:25.672 --> 00:08:27.140
QuickTimeUserDataFullName

00:08:27.140 --> 00:08:28.608
[ Silence ]

00:08:28.609 --> 00:08:29.192
dat identifier.

00:08:29.192 --> 00:08:29.775
[ Silence ]

00:08:29.776 --> 00:08:31.010
If you use this identifier

00:08:29.776 --> 00:08:31.010
in your files,

00:08:31.010 --> 00:08:32.244
[ Silence ]

00:08:32.246 --> 00:08:33.813
then QuickTime Player, for

00:08:32.246 --> 00:08:33.813
example, can pick up the title

00:08:33.813 --> 00:08:35.380
[ Silence ]

00:08:35.382 --> 00:08:36.049
and display it in the title bar.

00:08:36.049 --> 00:08:36.716
[ Silence ]

00:08:36.717 --> 00:08:37.884
So this is just yet

00:08:36.717 --> 00:08:37.884
another example

00:08:37.884 --> 00:08:39.051
[ Silence ]

00:08:39.052 --> 00:08:40.703
of how metadata is used

00:08:39.052 --> 00:08:40.703
in our applications.

00:08:40.703 --> 00:08:42.354
[ Silence ]

00:08:42.356 --> 00:08:43.389
This particular example

00:08:43.389 --> 00:08:44.422
[ Silence ]

00:08:44.424 --> 00:08:46.726
of the movie actually has the

00:08:44.424 --> 00:08:46.726
title available in both English

00:08:46.726 --> 00:08:49.028
[ Silence ]

00:08:49.029 --> 00:08:51.164
and Spanish so here we have the

00:08:49.029 --> 00:08:51.164
English as the system language

00:08:51.164 --> 00:08:53.299
[ Silence ]

00:08:53.300 --> 00:08:54.817
so QuickTime Player picks that

00:08:53.300 --> 00:08:54.817
up, picks up the English title

00:08:54.817 --> 00:08:56.334
[ Silence ]

00:08:56.336 --> 00:08:58.004
but if we set our system

00:08:56.336 --> 00:08:58.004
language to Spanish it will pick

00:08:58.004 --> 00:08:59.672
[ Silence ]

00:08:59.673 --> 00:09:01.107
up the Spanish localization

00:08:59.673 --> 00:09:01.107
of that title instead.

00:09:01.107 --> 00:09:02.541
[ Silence ]

00:09:02.543 --> 00:09:04.661
These are represented as two

00:09:02.543 --> 00:09:04.661
distinct pieces of metadata

00:09:04.661 --> 00:09:06.779
[ Silence ]

00:09:06.780 --> 00:09:08.514
within the file and the way that

00:09:06.780 --> 00:09:08.514
you distinguish between them is

00:09:08.514 --> 00:09:10.248
[ Silence ]

00:09:10.250 --> 00:09:10.883
that they'll have

00:09:10.250 --> 00:09:10.883
different values

00:09:10.883 --> 00:09:11.516
[ Silence ]

00:09:11.518 --> 00:09:13.219
for these final two properties

00:09:11.518 --> 00:09:13.219
of AVMetadataItem locale

00:09:13.219 --> 00:09:14.920
[ Silence ]

00:09:14.922 --> 00:09:15.922
and extendedLanguageTag.

00:09:15.922 --> 00:09:16.922
[ Silence ]

00:09:16.924 --> 00:09:18.224
ExtendedLanguageTag is

00:09:16.924 --> 00:09:18.224
new in this release.

00:09:18.224 --> 00:09:19.524
[ Silence ]

00:09:19.526 --> 00:09:21.244
It's a BCP 47 language tag

00:09:19.526 --> 00:09:21.244
and it's particularly useful

00:09:21.244 --> 00:09:22.962
[ Silence ]

00:09:22.963 --> 00:09:24.197
when you want to

00:09:22.963 --> 00:09:24.197
distinguish written languages.

00:09:24.197 --> 00:09:25.431
[ Silence ]

00:09:25.432 --> 00:09:27.417
So that's one reason

00:09:25.432 --> 00:09:27.417
why you might have more

00:09:27.417 --> 00:09:29.402
[ Silence ]

00:09:29.403 --> 00:09:30.770
than one metadata item

00:09:29.403 --> 00:09:30.770
with the same identifier.

00:09:30.770 --> 00:09:32.137
[ Silence ]

00:09:32.139 --> 00:09:34.507
So I mentioned before that

00:09:32.139 --> 00:09:34.507
not all metadata applies

00:09:34.507 --> 00:09:36.875
[ Silence ]

00:09:36.877 --> 00:09:38.711
to the entire asset, well one

00:09:36.877 --> 00:09:38.711
example of that is metadata

00:09:38.711 --> 00:09:40.545
[ Silence ]

00:09:40.547 --> 00:09:41.514
that only applies to

00:09:40.547 --> 00:09:41.514
a particular track,

00:09:41.514 --> 00:09:42.481
[ Silence ]

00:09:42.482 --> 00:09:44.150
so for this example we have

00:09:42.482 --> 00:09:44.150
a special label attached

00:09:44.150 --> 00:09:45.818
[ Silence ]

00:09:45.819 --> 00:09:47.587
to our subtitle track called

00:09:45.819 --> 00:09:47.587
SDH, that stands for Subtitles

00:09:47.587 --> 00:09:49.355
[ Silence ]

00:09:49.356 --> 00:09:50.523
for the Deaf or Hard of Hearing

00:09:50.523 --> 00:09:51.690
[ Silence ]

00:09:51.692 --> 00:09:54.360
and that's basically just a

00:09:51.692 --> 00:09:54.360
more rich form of subtitles

00:09:54.360 --> 00:09:57.028
[ Silence ]

00:09:57.030 --> 00:09:58.531
that includes things like

00:09:57.030 --> 00:09:58.531
labeling who's talking

00:09:58.531 --> 00:10:00.032
[ Silence ]

00:10:00.033 --> 00:10:00.917
and mentioning sound effects

00:10:00.917 --> 00:10:01.801
[ Silence ]

00:10:01.802 --> 00:10:02.852
that are vital to

00:10:01.802 --> 00:10:02.852
the understanding.

00:10:02.852 --> 00:10:03.902
[ Silence ]

00:10:03.904 --> 00:10:06.589
We talked a little bit more

00:10:03.904 --> 00:10:06.589
about SDH and accessibility

00:10:06.589 --> 00:10:09.274
[ Silence ]

00:10:09.276 --> 00:10:10.543
in general last year in our

00:10:09.276 --> 00:10:10.543
"Preparing and Presenting Media

00:10:10.543 --> 00:10:11.810
[ Silence ]

00:10:11.812 --> 00:10:13.213
for Accessibility" talk so check

00:10:11.812 --> 00:10:13.213
that one out for more details.

00:10:13.213 --> 00:10:14.614
[ Silence ]

00:10:14.615 --> 00:10:15.448
For the purposes of this talk,

00:10:15.448 --> 00:10:16.281
[ Silence ]

00:10:16.283 --> 00:10:17.634
just know that to get

00:10:16.283 --> 00:10:17.634
this SDH label here,

00:10:17.634 --> 00:10:18.985
[ Silence ]

00:10:18.986 --> 00:10:20.403
it involves setting

00:10:18.986 --> 00:10:20.403
track-specific metadata.

00:10:20.403 --> 00:10:21.820
[ Silence ]

00:10:21.822 --> 00:10:22.755
So let's talk about

00:10:21.822 --> 00:10:22.755
how you actually find

00:10:22.755 --> 00:10:23.688
[ Silence ]

00:10:23.690 --> 00:10:24.957
out if your track has

00:10:23.690 --> 00:10:24.957
this metadata in it,

00:10:24.957 --> 00:10:26.224
[ Silence ]

00:10:26.226 --> 00:10:27.777
well you're going

00:10:26.226 --> 00:10:27.777
to use AVAsset track

00:10:27.777 --> 00:10:29.328
[ Silence ]

00:10:29.329 --> 00:10:30.396
and it has pretty much

00:10:29.329 --> 00:10:30.396
the exact same API

00:10:30.396 --> 00:10:31.463
[ Silence ]

00:10:31.465 --> 00:10:32.265
as AVAsset for reading metadata.

00:10:32.265 --> 00:10:33.065
[ Silence ]

00:10:33.066 --> 00:10:34.417
You have your metadata property;

00:10:34.417 --> 00:10:35.768
[ Silence ]

00:10:35.769 --> 00:10:37.704
you have your metadataForFormat

00:10:35.769 --> 00:10:37.704
method and so if we want

00:10:37.704 --> 00:10:39.639
[ Silence ]

00:10:39.640 --> 00:10:41.107
to find all the tagged

00:10:39.640 --> 00:10:41.107
characteristics that are

00:10:41.107 --> 00:10:42.574
[ Silence ]

00:10:42.576 --> 00:10:44.494
in an asset track, we're

00:10:42.576 --> 00:10:44.494
going to ask the track

00:10:44.494 --> 00:10:46.412
[ Silence ]

00:10:46.413 --> 00:10:48.081
for its metadata for the

00:10:46.413 --> 00:10:48.081
FormatQuickTimeUserData.

00:10:48.081 --> 00:10:49.749
[ Silence ]

00:10:49.750 --> 00:10:50.450
Once we have that we use

00:10:50.450 --> 00:10:51.150
[ Silence ]

00:10:51.151 --> 00:10:52.802
that same filtering method we

00:10:51.151 --> 00:10:52.802
saw before in order to get all

00:10:52.802 --> 00:10:54.453
[ Silence ]

00:10:54.454 --> 00:10:56.439
of the items that

00:10:54.454 --> 00:10:56.439
have the identifier,

00:10:56.439 --> 00:10:58.424
[ Silence ]

00:10:58.425 --> 00:10:59.592
QuickTimeUserDataTagged

00:10:58.425 --> 00:10:59.592
Characteristic.

00:10:59.592 --> 00:11:00.759
[ Silence ]

00:11:00.761 --> 00:11:02.929
So this is one example of tagged

00:11:00.761 --> 00:11:02.929
characteristics is the SDH

00:11:02.929 --> 00:11:05.097
[ Silence ]

00:11:05.098 --> 00:11:06.332
that I just talked about

00:11:05.098 --> 00:11:06.332
and it's the payload

00:11:06.332 --> 00:11:07.566
[ Silence ]

00:11:07.567 --> 00:11:08.701
of the metadata items

00:11:07.567 --> 00:11:08.701
that tells you what kind

00:11:08.701 --> 00:11:09.835
[ Silence ]

00:11:09.836 --> 00:11:11.203
of tagged characteristic

00:11:09.836 --> 00:11:11.203
you're dealing with.

00:11:11.203 --> 00:11:12.570
[ Silence ]

00:11:12.572 --> 00:11:13.572
We'll talk a little bit

00:11:12.572 --> 00:11:13.572
more detail about SDH

00:11:13.572 --> 00:11:14.572
[ Silence ]

00:11:14.574 --> 00:11:16.509
and how you author it

00:11:14.574 --> 00:11:16.509
in just a little bit.

00:11:16.509 --> 00:11:18.444
[ Silence ]

00:11:18.445 --> 00:11:19.312
So going back to our list

00:11:19.312 --> 00:11:20.179
[ Silence ]

00:11:20.180 --> 00:11:21.781
of identifiers you might

00:11:20.180 --> 00:11:21.781
have noticed some patterns

00:11:21.781 --> 00:11:23.382
[ Silence ]

00:11:23.383 --> 00:11:24.550
if you were looking closely.

00:11:24.550 --> 00:11:25.717
[ Silence ]

00:11:25.719 --> 00:11:27.687
Each of these groups has

00:11:25.719 --> 00:11:27.687
their own version of a title

00:11:27.687 --> 00:11:29.655
[ Silence ]

00:11:29.656 --> 00:11:30.823
or a song name or

00:11:29.656 --> 00:11:30.823
something like that.

00:11:30.823 --> 00:11:31.990
[ Silence ]

00:11:31.992 --> 00:11:33.960
We noticed that and come up

00:11:31.992 --> 00:11:33.960
with our own special kind

00:11:33.960 --> 00:11:35.928
[ Silence ]

00:11:35.929 --> 00:11:37.296
of identifier called

00:11:35.929 --> 00:11:37.296
a CommonIdentifier

00:11:37.296 --> 00:11:38.663
[ Silence ]

00:11:38.665 --> 00:11:39.916
which can be used when

00:11:38.665 --> 00:11:39.916
you want to look up, say,

00:11:39.916 --> 00:11:41.167
[ Silence ]

00:11:41.168 --> 00:11:43.152
for this example a title without

00:11:41.168 --> 00:11:43.152
caring exactly how it's stored

00:11:43.152 --> 00:11:45.136
[ Silence ]

00:11:45.138 --> 00:11:45.821
in your file.

00:11:45.821 --> 00:11:46.504
[ Silence ]

00:11:46.506 --> 00:11:48.174
Same for copyright here; we

00:11:46.506 --> 00:11:48.174
also have a common identifier

00:11:48.174 --> 00:11:49.842
[ Silence ]

00:11:49.843 --> 00:11:50.743
that represents copyright.

00:11:50.743 --> 00:11:51.643
[ Silence ]

00:11:51.645 --> 00:11:52.595
These are not the only

00:11:51.645 --> 00:11:52.595
common identifiers;

00:11:52.595 --> 00:11:53.545
[ Silence ]

00:11:53.547 --> 00:11:55.348
there's a whole list of them

00:11:53.547 --> 00:11:55.348
but these are just two examples.

00:11:55.348 --> 00:11:57.149
[ Silence ]

00:11:57.150 --> 00:11:58.200
So if we go back to our

00:11:57.150 --> 00:11:58.200
example where we're looking

00:11:58.200 --> 00:11:59.250
[ Silence ]

00:11:59.252 --> 00:12:00.803
for our iTunes song name,

00:11:59.252 --> 00:12:00.803
if we don't actually care

00:12:00.803 --> 00:12:02.354
[ Silence ]

00:12:02.355 --> 00:12:04.340
that the title of our asset

00:12:02.355 --> 00:12:04.340
is stored as iTunes metadata

00:12:04.340 --> 00:12:06.325
[ Silence ]

00:12:06.326 --> 00:12:07.910
and we just want a title so

00:12:06.326 --> 00:12:07.910
we can display it somewhere,

00:12:07.910 --> 00:12:09.494
[ Silence ]

00:12:09.496 --> 00:12:10.980
you can ask the asset for

00:12:09.496 --> 00:12:10.980
its array of commonMetadata

00:12:10.980 --> 00:12:12.464
[ Silence ]

00:12:12.466 --> 00:12:13.433
and this is all the

00:12:12.466 --> 00:12:13.433
metadata items

00:12:13.433 --> 00:12:14.400
[ Silence ]

00:12:14.401 --> 00:12:16.769
that can be represented

00:12:14.401 --> 00:12:16.769
using a common identifier.

00:12:16.769 --> 00:12:19.137
[ Silence ]

00:12:19.139 --> 00:12:20.590
Then you use that same filtering

00:12:19.139 --> 00:12:20.590
method we've been using

00:12:20.590 --> 00:12:22.041
[ Silence ]

00:12:22.042 --> 00:12:22.925
to filter down to just the ones

00:12:22.925 --> 00:12:23.808
[ Silence ]

00:12:23.810 --> 00:12:24.877
that have the

00:12:23.810 --> 00:12:24.877
CommonIdentifierTitle

00:12:24.877 --> 00:12:25.944
[ Silence ]

00:12:25.946 --> 00:12:27.397
and you can go from

00:12:25.946 --> 00:12:27.397
there with your title.

00:12:27.397 --> 00:12:28.848
[ Silence ]

00:12:28.849 --> 00:12:29.515
Also worth noting is

00:12:29.515 --> 00:12:30.181
[ Silence ]

00:12:30.183 --> 00:12:32.518
that AVAssetTrack has the

00:12:30.183 --> 00:12:32.518
same property, commonMetadata,

00:12:32.518 --> 00:12:34.853
[ Silence ]

00:12:34.855 --> 00:12:36.072
so you can do the same

00:12:34.855 --> 00:12:36.072
thing over there as well.

00:12:36.072 --> 00:12:37.289
[ Silence ]

00:12:37.290 --> 00:12:39.008
So that is your brief

00:12:37.290 --> 00:12:39.008
introduction

00:12:39.008 --> 00:12:40.726
[ Silence ]

00:12:40.727 --> 00:12:41.961
to inspecting metadata

00:12:40.727 --> 00:12:41.961
with AVFoundation.

00:12:41.961 --> 00:12:43.195
[ Silence ]

00:12:43.196 --> 00:12:44.130
Let's talk a little

00:12:43.196 --> 00:12:44.130
bit about authoring.

00:12:44.130 --> 00:12:45.064
[ Silence ]

00:12:45.065 --> 00:12:46.516
If you want to make your own

00:12:45.065 --> 00:12:46.516
files that have say location

00:12:46.516 --> 00:12:47.967
[ Silence ]

00:12:47.968 --> 00:12:50.002
or iTunes metadata in them, we

00:12:47.968 --> 00:12:50.002
have several different classes

00:12:50.002 --> 00:12:52.036
[ Silence ]

00:12:52.038 --> 00:12:53.839
that can write movie

00:12:52.038 --> 00:12:53.839
files, AVAssetExportSession,

00:12:53.839 --> 00:12:55.640
[ Silence ]

00:12:55.642 --> 00:12:57.493
AVAssetWriter and the capture

00:12:55.642 --> 00:12:57.493
movie and audio files outputs

00:12:57.493 --> 00:12:59.344
[ Silence ]

00:12:59.346 --> 00:13:00.880
and these all have the exact

00:12:59.346 --> 00:13:00.880
same redirect property called

00:13:00.880 --> 00:13:02.414
[ Silence ]

00:13:02.415 --> 00:13:02.982
simply, metadata.

00:13:02.982 --> 00:13:03.549
[ Silence ]

00:13:03.550 --> 00:13:04.750
So you give an array of

00:13:03.550 --> 00:13:04.750
metadata items and then

00:13:04.750 --> 00:13:05.950
[ Silence ]

00:13:05.952 --> 00:13:07.136
that will be written

00:13:05.952 --> 00:13:07.136
out to the file.

00:13:07.136 --> 00:13:08.320
[ Silence ]

00:13:08.321 --> 00:13:09.705
Similarly for track-specific

00:13:08.321 --> 00:13:09.705
metadata

00:13:09.705 --> 00:13:11.089
[ Silence ]

00:13:11.091 --> 00:13:12.058
like those tagged

00:13:11.091 --> 00:13:12.058
characteristics,

00:13:12.058 --> 00:13:13.025
[ Silence ]

00:13:13.026 --> 00:13:14.260
you can use an AVAssetWriter

00:13:13.026 --> 00:13:14.260
input

00:13:14.260 --> 00:13:15.494
[ Silence ]

00:13:15.495 --> 00:13:17.246
which also has the

00:13:15.495 --> 00:13:17.246
exact same property.

00:13:17.246 --> 00:13:18.997
[ Silence ]

00:13:18.999 --> 00:13:21.267
Now you are not limited to

00:13:18.999 --> 00:13:21.267
just writing out metadata

00:13:21.267 --> 00:13:23.535
[ Silence ]

00:13:23.537 --> 00:13:24.520
that you got from somewhere

00:13:23.537 --> 00:13:24.520
else, like another file

00:13:24.520 --> 00:13:25.503
[ Silence ]

00:13:25.505 --> 00:13:26.372
through the APIs

00:13:25.505 --> 00:13:26.372
we've been looking at.

00:13:26.372 --> 00:13:27.239
[ Silence ]

00:13:27.240 --> 00:13:28.224
You can also create

00:13:27.240 --> 00:13:28.224
your own metadata items

00:13:28.224 --> 00:13:29.208
[ Silence ]

00:13:29.209 --> 00:13:30.710
with a mutable subclass

00:13:29.209 --> 00:13:30.710
of metadataItem.

00:13:30.710 --> 00:13:32.211
[ Silence ]

00:13:32.212 --> 00:13:33.529
And as you might expect, this

00:13:32.212 --> 00:13:33.529
just has read/write properties

00:13:33.529 --> 00:13:34.846
[ Silence ]

00:13:34.848 --> 00:13:36.883
for all of the properties

00:13:34.848 --> 00:13:36.883
in AVMetadataItem.

00:13:36.883 --> 00:13:38.918
[ Silence ]

00:13:38.919 --> 00:13:40.670
So if we use an example of

00:13:38.919 --> 00:13:40.670
writing a subtitle track

00:13:40.670 --> 00:13:42.421
[ Silence ]

00:13:42.422 --> 00:13:44.473
that is marked as SDH, well

00:13:42.422 --> 00:13:44.473
it's actually two different tag

00:13:44.473 --> 00:13:46.524
[ Silence ]

00:13:46.526 --> 00:13:47.393
characteristics that

00:13:46.526 --> 00:13:47.393
you have to use

00:13:47.393 --> 00:13:48.260
[ Silence ]

00:13:48.261 --> 00:13:49.545
and so we'll create two

00:13:48.261 --> 00:13:49.545
different metadata items,

00:13:49.545 --> 00:13:50.829
[ Silence ]

00:13:50.831 --> 00:13:53.249
set both of their identifiers

00:13:50.831 --> 00:13:53.249
to the identifier we just saw,

00:13:53.249 --> 00:13:55.667
[ Silence ]

00:13:55.669 --> 00:13:57.086
the QuickTimeUserData

00:13:55.669 --> 00:13:57.086
tag characteristic,

00:13:57.086 --> 00:13:58.503
[ Silence ]

00:13:58.505 --> 00:13:59.272
but one of them will

00:13:58.505 --> 00:13:59.272
set the value

00:13:59.272 --> 00:14:00.039
[ Silence ]

00:14:00.040 --> 00:14:01.340
to TranscribesSpokenDialogue

00:14:00.040 --> 00:14:01.340
ForAccessibility

00:14:01.340 --> 00:14:02.640
[ Silence ]

00:14:02.642 --> 00:14:03.793
and the other will be

00:14:02.642 --> 00:14:03.793
DescribesMusicAndSound

00:14:03.793 --> 00:14:04.944
[ Silence ]

00:14:04.945 --> 00:14:05.628
ForAccessibility.

00:14:05.628 --> 00:14:06.311
[ Silence ]

00:14:06.313 --> 00:14:07.847
Then we get the subtitle

00:14:06.313 --> 00:14:07.847
AssetWriterInputthat's going

00:14:07.847 --> 00:14:09.381
[ Silence ]

00:14:09.382 --> 00:14:11.350
to write our subtitle track and

00:14:09.382 --> 00:14:11.350
set that array of the two items

00:14:11.350 --> 00:14:13.318
[ Silence ]

00:14:13.320 --> 00:14:14.253
on our asset writer input.

00:14:14.253 --> 00:14:15.186
[ Silence ]

00:14:15.188 --> 00:14:16.806
So that's how you would

00:14:15.188 --> 00:14:16.806
author a subtitle track

00:14:16.806 --> 00:14:18.424
[ Silence ]

00:14:18.425 --> 00:14:19.392
that is marked as SDH.

00:14:19.392 --> 00:14:20.359
[ Silence ]

00:14:20.360 --> 00:14:21.994
Just one example of

00:14:20.360 --> 00:14:21.994
using tag characteristics

00:14:21.994 --> 00:14:23.628
[ Silence ]

00:14:23.630 --> 00:14:24.797
in AVMutableMetadataItem.

00:14:24.797 --> 00:14:25.964
[ Silence ]

00:14:25.966 --> 00:14:28.301
Special note about

00:14:25.966 --> 00:14:28.301
AVAssetExportSession:

00:14:28.301 --> 00:14:30.636
[ Silence ]

00:14:30.637 --> 00:14:32.188
by default the ExportSession

00:14:30.637 --> 00:14:32.188
is actually going to take any

00:14:32.188 --> 00:14:33.739
[ Silence ]

00:14:33.740 --> 00:14:35.308
of the metadata that's

00:14:33.740 --> 00:14:35.308
in the source asset

00:14:35.308 --> 00:14:36.876
[ Silence ]

00:14:36.877 --> 00:14:37.493
that you're exporting.

00:14:37.493 --> 00:14:38.109
[ Silence ]

00:14:38.111 --> 00:14:39.645
It's going to copy that

00:14:38.111 --> 00:14:39.645
over to the output file.

00:14:39.645 --> 00:14:41.179
[ Silence ]

00:14:41.181 --> 00:14:42.348
Now that's not the case

00:14:41.181 --> 00:14:42.348
if you set metadata

00:14:42.348 --> 00:14:43.515
[ Silence ]

00:14:43.516 --> 00:14:44.383
on its metadata property.

00:14:44.383 --> 00:14:45.250
[ Silence ]

00:14:45.252 --> 00:14:46.252
That will be the signal

00:14:45.252 --> 00:14:46.252
to tell the ExportSession

00:14:46.252 --> 00:14:47.252
[ Silence ]

00:14:47.254 --> 00:14:48.421
to ignore the metadata

00:14:47.254 --> 00:14:48.421
in the source file

00:14:48.421 --> 00:14:49.588
[ Silence ]

00:14:49.589 --> 00:14:51.207
and instead write just what

00:14:49.589 --> 00:14:51.207
you put on the property.

00:14:51.207 --> 00:14:52.825
[ Silence ]

00:14:52.826 --> 00:14:54.277
So if you want to do

00:14:52.826 --> 00:14:54.277
augmentation of the metadata

00:14:54.277 --> 00:14:55.728
[ Silence ]

00:14:55.729 --> 00:14:57.380
or some other sort of

00:14:55.729 --> 00:14:57.380
modification you'll want to grab

00:14:57.380 --> 00:14:59.031
[ Silence ]

00:14:59.032 --> 00:15:00.383
that array of metadata,

00:14:59.032 --> 00:15:00.383
make a mutable copy

00:15:00.383 --> 00:15:01.734
[ Silence ]

00:15:01.735 --> 00:15:02.885
and do any adjustments

00:15:01.735 --> 00:15:02.885
that you want and then set

00:15:02.885 --> 00:15:04.035
[ Silence ]

00:15:04.037 --> 00:15:04.954
that on the metadata property.

00:15:04.954 --> 00:15:05.871
[ Silence ]

00:15:05.872 --> 00:15:07.189
So that's just a quick

00:15:05.872 --> 00:15:07.189
note about ExportSession.

00:15:07.189 --> 00:15:08.506
[ Silence ]

00:15:08.508 --> 00:15:10.443
The last note about authoring

00:15:08.508 --> 00:15:10.443
metadata is HTTP Live Streaming,

00:15:10.443 --> 00:15:12.378
[ Silence ]

00:15:12.379 --> 00:15:14.147
this is actually a new

00:15:12.379 --> 00:15:14.147
feature in iOS 8, OS X Yosemite

00:15:14.147 --> 00:15:15.915
[ Silence ]

00:15:15.916 --> 00:15:18.117
and you can use a new tag

00:15:15.916 --> 00:15:18.117
called session-data tag

00:15:18.117 --> 00:15:20.318
[ Silence ]

00:15:20.320 --> 00:15:21.787
in your playlist, which

00:15:20.320 --> 00:15:21.787
has two required fields:

00:15:21.787 --> 00:15:23.254
[ Silence ]

00:15:23.256 --> 00:15:24.657
the data ID which is a

00:15:23.256 --> 00:15:24.657
lot like our identifiers

00:15:24.657 --> 00:15:26.058
[ Silence ]

00:15:26.059 --> 00:15:27.910
that we're talking about, a URI

00:15:26.059 --> 00:15:27.910
which can point to the payload

00:15:27.910 --> 00:15:29.761
[ Silence ]

00:15:29.763 --> 00:15:31.581
or a value which directly

00:15:29.763 --> 00:15:31.581
specifies the payload and,

00:15:31.581 --> 00:15:33.399
[ Silence ]

00:15:33.400 --> 00:15:34.267
optionally, some

00:15:33.400 --> 00:15:34.267
language information.

00:15:34.267 --> 00:15:35.134
[ Silence ]

00:15:35.135 --> 00:15:36.152
So here's an example

00:15:35.135 --> 00:15:36.152
that shows very similar

00:15:36.152 --> 00:15:37.169
[ Silence ]

00:15:37.170 --> 00:15:38.003
to what we saw before

00:15:37.170 --> 00:15:38.003
with the titles

00:15:38.003 --> 00:15:38.836
[ Silence ]

00:15:38.838 --> 00:15:40.506
in two different languages but

00:15:38.838 --> 00:15:40.506
this is the markup you'd use

00:15:40.506 --> 00:15:42.174
[ Silence ]

00:15:42.175 --> 00:15:43.459
for HTTP Live Streaming.

00:15:43.459 --> 00:15:44.743
[ Silence ]

00:15:44.744 --> 00:15:46.095
So for more information

00:15:44.744 --> 00:15:46.095
on reading

00:15:46.095 --> 00:15:47.446
[ Silence ]

00:15:47.447 --> 00:15:48.714
and writing metadata we

00:15:47.447 --> 00:15:48.714
do have some sample code,

00:15:48.714 --> 00:15:49.981
[ Silence ]

00:15:49.983 --> 00:15:51.834
it's called AVmetadataeditor

00:15:49.983 --> 00:15:51.834
and for more information

00:15:51.834 --> 00:15:53.685
[ Silence ]

00:15:53.687 --> 00:15:55.988
about the details of writing

00:15:53.687 --> 00:15:55.988
HTTP Live Streaming metadata see

00:15:55.988 --> 00:15:58.289
[ Silence ]

00:15:58.291 --> 00:15:59.275
the documents at this URL.

00:15:59.275 --> 00:16:00.259
[ Silence ]

00:16:00.260 --> 00:16:01.761
All right so that is your

00:16:00.260 --> 00:16:01.761
crash course in metadata

00:16:01.761 --> 00:16:03.262
[ Silence ]

00:16:03.263 --> 00:16:05.564
in AVFoundation, our next

00:16:03.263 --> 00:16:05.564
topic is timed metadata.

00:16:05.564 --> 00:16:07.865
[ Silence ]

00:16:07.867 --> 00:16:09.201
So timed metadata, although I

00:16:07.867 --> 00:16:09.201
mentioned we have new features,

00:16:09.201 --> 00:16:10.535
[ Silence ]

00:16:10.537 --> 00:16:11.587
it is not a new concept.

00:16:11.587 --> 00:16:12.637
[ Silence ]

00:16:12.639 --> 00:16:14.090
We supported the notion of

00:16:12.639 --> 00:16:14.090
chapters for quite some time

00:16:14.090 --> 00:16:15.541
[ Silence ]

00:16:15.542 --> 00:16:16.759
and conceptually chapters

00:16:15.542 --> 00:16:16.759
are just an example

00:16:16.759 --> 00:16:17.976
[ Silence ]

00:16:17.978 --> 00:16:18.661
of times metadata.

00:16:18.661 --> 00:16:19.344
[ Silence ]

00:16:19.346 --> 00:16:21.030
Each of these chapter markers

00:16:19.346 --> 00:16:21.030
is just a piece of metadata

00:16:21.030 --> 00:16:22.714
[ Silence ]

00:16:22.716 --> 00:16:24.500
that is describing

00:16:22.716 --> 00:16:24.500
a particular range

00:16:24.500 --> 00:16:26.284
[ Silence ]

00:16:26.286 --> 00:16:27.303
of the timeline of the movie.

00:16:27.303 --> 00:16:28.320
[ Silence ]

00:16:28.321 --> 00:16:29.655
That's all that timed

00:16:28.321 --> 00:16:29.655
metadata is,

00:16:29.655 --> 00:16:30.989
[ Silence ]

00:16:30.991 --> 00:16:32.859
it's just metadata associated

00:16:30.991 --> 00:16:32.859
with a range of time.

00:16:32.859 --> 00:16:34.727
[ Silence ]

00:16:34.728 --> 00:16:37.580
So similarly, with our

00:16:34.728 --> 00:16:37.580
dynamic location example,

00:16:37.580 --> 00:16:40.432
[ Silence ]

00:16:40.433 --> 00:16:41.817
we have the path that's drawn

00:16:40.433 --> 00:16:41.817
here that's really just composed

00:16:41.817 --> 00:16:43.201
[ Silence ]

00:16:43.203 --> 00:16:44.136
of a number of pieces

00:16:44.136 --> 00:16:45.069
[ Silence ]

00:16:45.071 --> 00:16:46.622
of metadata indicating

00:16:45.071 --> 00:16:46.622
the current location,

00:16:46.622 --> 00:16:48.173
[ Silence ]

00:16:48.174 --> 00:16:49.491
each one of them associated

00:16:48.174 --> 00:16:49.491
with a particular time

00:16:49.491 --> 00:16:50.808
[ Silence ]

00:16:50.810 --> 00:16:51.393
in the movie's timeline.

00:16:51.393 --> 00:16:51.976
[ Silence ]

00:16:51.978 --> 00:16:53.662
So to demonstrate

00:16:51.978 --> 00:16:53.662
QuickTime Player's features

00:16:53.662 --> 00:16:55.346
[ Silence ]

00:16:55.348 --> 00:16:56.549
with dynamic location

00:16:55.348 --> 00:16:56.549
in Yosemite,

00:16:56.549 --> 00:16:57.750
[ Silence ]

00:16:57.751 --> 00:16:58.534
I want to bring my

00:16:57.751 --> 00:16:58.534
colleague, Shalini,

00:16:58.534 --> 00:16:59.317
[ Silence ]

00:16:59.319 --> 00:17:00.336
up to the stage for a demo.

00:17:00.336 --> 00:17:01.353
[ Silence ]

00:17:01.354 --> 00:17:02.705
>> Hi, I'm here to

00:17:01.354 --> 00:17:02.705
demonstrate how to read

00:17:02.705 --> 00:17:04.056
[ Silence ]

00:17:04.057 --> 00:17:05.875
and play back metadata

00:17:04.057 --> 00:17:05.875
using QuickTime Player.

00:17:05.875 --> 00:17:07.693
[ Silence ]

00:17:07.694 --> 00:17:09.578
Here I have a movie file

00:17:07.694 --> 00:17:09.578
which has both audio and video

00:17:09.578 --> 00:17:11.462
[ Silence ]

00:17:11.464 --> 00:17:13.482
and timed locations data

00:17:11.464 --> 00:17:13.482
stored in a different track.

00:17:13.482 --> 00:17:15.500
[ Silence ]

00:17:15.502 --> 00:17:17.236
So now if I bring this

00:17:15.502 --> 00:17:17.236
up in QuickTime Player,

00:17:17.236 --> 00:17:18.970
[ Silence ]

00:17:18.972 --> 00:17:20.506
this is the usual UI

00:17:18.972 --> 00:17:20.506
for audio and video.

00:17:20.506 --> 00:17:22.040
[ Silence ]

00:17:22.042 --> 00:17:23.075
New in OS X Yosemite:

00:17:23.075 --> 00:17:24.108
[ Silence ]

00:17:24.110 --> 00:17:26.428
in the Movie Inspector

00:17:24.110 --> 00:17:26.428
you can see a map view

00:17:26.428 --> 00:17:28.746
[ Silence ]

00:17:28.748 --> 00:17:29.899
if your movie file

00:17:28.748 --> 00:17:29.899
has location data.

00:17:29.899 --> 00:17:31.050
[ Silence ]

00:17:31.051 --> 00:17:32.718
Your map view is presented

00:17:31.051 --> 00:17:32.718
along with the route

00:17:32.718 --> 00:17:34.385
[ Silence ]

00:17:34.387 --> 00:17:35.704
where you have recorded

00:17:34.387 --> 00:17:35.704
this video.

00:17:35.704 --> 00:17:37.021
[ Silence ]

00:17:37.023 --> 00:17:38.290
So here the blue line

00:17:37.023 --> 00:17:38.290
indicates the path

00:17:38.290 --> 00:17:39.557
[ Silence ]

00:17:39.559 --> 00:17:41.477
where we recorded the video and

00:17:39.559 --> 00:17:41.477
the red pin is an indication

00:17:41.477 --> 00:17:43.395
[ Silence ]

00:17:43.396 --> 00:17:44.697
of the current location

00:17:43.396 --> 00:17:44.697
or the location

00:17:44.697 --> 00:17:45.998
[ Silence ]

00:17:45.999 --> 00:17:47.967
on the timeline of the movie.

00:17:47.967 --> 00:17:49.935
[ Silence ]

00:17:49.936 --> 00:17:51.353
So if I zoom in a little

00:17:49.936 --> 00:17:51.353
bit and start play,

00:17:51.353 --> 00:17:52.770
[ Silence ]

00:17:52.772 --> 00:17:55.307
you can see as the movie

00:17:52.772 --> 00:17:55.307
progresses the pin's location is

00:17:55.307 --> 00:17:57.842
[ Silence ]

00:17:57.844 --> 00:17:59.612
being updated to be in

00:17:57.844 --> 00:17:59.612
sync with the video.

00:17:59.612 --> 00:18:01.380
[ Silence ]

00:18:01.381 --> 00:18:03.632
I can drag the scrubber around

00:18:03.632 --> 00:18:05.883
[ Silence ]

00:18:05.885 --> 00:18:07.569
and you can see the pin

00:18:05.885 --> 00:18:07.569
moving back and forth.

00:18:07.569 --> 00:18:09.253
[ Silence ]

00:18:09.255 --> 00:18:12.174
I can also go and click

00:18:09.255 --> 00:18:12.174
at any point in the map

00:18:12.174 --> 00:18:15.093
[ Silence ]

00:18:15.095 --> 00:18:16.679
and you see the video seek

00:18:15.095 --> 00:18:16.679
to that location to present

00:18:16.679 --> 00:18:18.263
[ Silence ]

00:18:18.264 --> 00:18:20.482
where your video was when

00:18:18.264 --> 00:18:20.482
you were at that location.

00:18:20.482 --> 00:18:22.700
[ Silence ]

00:18:22.702 --> 00:18:25.187
This is map view in QuickTime

00:18:22.702 --> 00:18:25.187
Player on OS X Yosemite.

00:18:25.187 --> 00:18:27.672
[ Silence ]

00:18:27.674 --> 00:18:28.374
>> Thank you, Shalini.

00:18:28.374 --> 00:18:29.074
[ Silence ]

00:18:29.075 --> 00:18:30.576
So let's talk about

00:18:29.075 --> 00:18:30.576
what we just saw there.

00:18:30.576 --> 00:18:32.077
[ Silence ]

00:18:32.078 --> 00:18:33.796
So that location information

00:18:32.078 --> 00:18:33.796
was stored as timed metadata

00:18:33.796 --> 00:18:35.514
[ Silence ]

00:18:35.515 --> 00:18:37.099
in the file and in order to

00:18:35.515 --> 00:18:37.099
have QuickTime Player draw

00:18:37.099 --> 00:18:38.683
[ Silence ]

00:18:38.685 --> 00:18:40.986
that information on the map, we

00:18:38.685 --> 00:18:40.986
use AVAssetReader to read all

00:18:40.986 --> 00:18:43.287
[ Silence ]

00:18:43.289 --> 00:18:45.023
of the location information

00:18:43.289 --> 00:18:45.023
from that asset.

00:18:45.023 --> 00:18:46.757
[ Silence ]

00:18:46.759 --> 00:18:48.677
And because timed metadata

00:18:46.759 --> 00:18:48.677
is stored in its own track,

00:18:48.677 --> 00:18:50.595
[ Silence ]

00:18:50.597 --> 00:18:51.947
we use an

00:18:50.597 --> 00:18:51.947
AVAssetReaderTrackOutput to read

00:18:51.947 --> 00:18:53.297
[ Silence ]

00:18:53.299 --> 00:18:55.000
that data and we use a new

00:18:53.299 --> 00:18:55.000
class called AVAssetReaderOutput

00:18:55.000 --> 00:18:56.701
[ Silence ]

00:18:56.703 --> 00:18:58.304
MetadataAdaptor that knows how

00:18:56.703 --> 00:18:58.304
to give us that data in the

00:18:58.304 --> 00:18:59.905
[ Silence ]

00:18:59.906 --> 00:19:01.524
from of a class called

00:18:59.906 --> 00:19:01.524
AVTimedMetadataGroup.

00:19:01.524 --> 00:19:03.142
[ Silence ]

00:19:03.143 --> 00:19:04.293
Then from there we

00:19:03.143 --> 00:19:04.293
can grab each location

00:19:04.293 --> 00:19:05.443
[ Silence ]

00:19:05.445 --> 00:19:06.679
and draw that path on the map.

00:19:06.679 --> 00:19:07.913
[ Silence ]

00:19:07.914 --> 00:19:09.732
So AVTimedMetadataGroup

00:19:07.914 --> 00:19:09.732
is a very simple class.

00:19:09.732 --> 00:19:11.550
[ Silence ]

00:19:11.551 --> 00:19:12.418
It's really just

00:19:11.551 --> 00:19:12.418
these two properties:

00:19:12.418 --> 00:19:13.285
[ Silence ]

00:19:13.286 --> 00:19:14.954
an array of metadata items

00:19:13.286 --> 00:19:14.954
combined with a time range

00:19:14.954 --> 00:19:16.622
[ Silence ]

00:19:16.623 --> 00:19:18.541
that describes where in the

00:19:16.623 --> 00:19:18.541
movie that data applies.

00:19:18.541 --> 00:19:20.459
[ Silence ]

00:19:20.460 --> 00:19:22.645
So to see a little bit of

00:19:20.460 --> 00:19:22.645
code for using AssetReader

00:19:22.645 --> 00:19:24.830
[ Silence ]

00:19:24.831 --> 00:19:25.831
for this purpose, the

00:19:24.831 --> 00:19:25.831
first thing you want

00:19:25.831 --> 00:19:26.831
[ Silence ]

00:19:26.833 --> 00:19:27.516
to do is find the track

00:19:27.516 --> 00:19:28.199
[ Silence ]

00:19:28.201 --> 00:19:29.818
that contains your location

00:19:28.201 --> 00:19:29.818
information and we'll talk more

00:19:29.818 --> 00:19:31.435
[ Silence ]

00:19:31.437 --> 00:19:32.471
about how to do that

00:19:31.437 --> 00:19:32.471
in just a second.

00:19:32.471 --> 00:19:33.505
[ Silence ]

00:19:33.506 --> 00:19:35.741
Then you use that track to

00:19:33.506 --> 00:19:35.741
create an AssetReaderTrackOutput

00:19:35.741 --> 00:19:37.976
[ Silence ]

00:19:37.977 --> 00:19:39.044
and you use nil output settings

00:19:39.044 --> 00:19:40.111
[ Silence ]

00:19:40.113 --> 00:19:41.363
and then you'll create

00:19:40.113 --> 00:19:41.363
your metadataAdaptor

00:19:41.363 --> 00:19:42.613
[ Silence ]

00:19:42.615 --> 00:19:43.532
with that trackOutput.

00:19:43.532 --> 00:19:44.449
[ Silence ]

00:19:44.450 --> 00:19:46.018
And then, in a loop we just

00:19:44.450 --> 00:19:46.018
take your metadataAdaptor

00:19:46.018 --> 00:19:47.586
[ Silence ]

00:19:47.587 --> 00:19:49.288
and call the

00:19:47.587 --> 00:19:49.288
nextTimedMetadataGroup method

00:19:49.288 --> 00:19:50.989
[ Silence ]

00:19:50.990 --> 00:19:52.224
over and over again, doing

00:19:50.990 --> 00:19:52.224
something with each piece

00:19:52.224 --> 00:19:53.458
[ Silence ]

00:19:53.459 --> 00:19:54.476
of data, like drawing

00:19:53.459 --> 00:19:54.476
it on the map

00:19:54.476 --> 00:19:55.493
[ Silence ]

00:19:55.495 --> 00:19:56.395
until that method returns nil.

00:19:56.395 --> 00:19:57.295
[ Silence ]

00:19:57.297 --> 00:19:58.047
Then you know there's

00:19:57.297 --> 00:19:58.047
no more data to draw.

00:19:58.047 --> 00:19:58.797
[ Silence ]

00:19:58.798 --> 00:20:00.866
So in terms of finding

00:19:58.798 --> 00:20:00.866
the right track to read,

00:20:00.866 --> 00:20:02.934
[ Silence ]

00:20:02.936 --> 00:20:04.203
the way you're going to do

00:20:02.936 --> 00:20:04.203
that is by examining the tracks

00:20:04.203 --> 00:20:05.470
[ Silence ]

00:20:05.471 --> 00:20:06.805
in your asset and looking

00:20:05.471 --> 00:20:06.805
through the format description

00:20:06.805 --> 00:20:08.139
[ Silence ]

00:20:08.141 --> 00:20:09.441
of each track to find the

00:20:08.141 --> 00:20:09.441
identifiers you're looking for.

00:20:09.441 --> 00:20:10.741
[ Silence ]

00:20:10.743 --> 00:20:12.110
So you first start

00:20:10.743 --> 00:20:12.110
by getting the tracks

00:20:12.110 --> 00:20:13.477
[ Silence ]

00:20:13.479 --> 00:20:14.580
with the MediaTypeMetadata

00:20:13.479 --> 00:20:14.580
and then for each

00:20:14.580 --> 00:20:15.681
[ Silence ]

00:20:15.682 --> 00:20:16.682
of those tracks you're

00:20:15.682 --> 00:20:16.682
going to loop through all

00:20:16.682 --> 00:20:17.682
[ Silence ]

00:20:17.684 --> 00:20:19.435
of its format descriptions,

00:20:17.684 --> 00:20:19.435
usually there's only one

00:20:19.435 --> 00:20:21.186
[ Silence ]

00:20:21.187 --> 00:20:22.538
and for each format description

00:20:21.187 --> 00:20:22.538
you're going to grab its list

00:20:22.538 --> 00:20:23.889
[ Silence ]

00:20:23.890 --> 00:20:25.341
of identifiers using this

00:20:23.890 --> 00:20:25.341
function and check whether

00:20:25.341 --> 00:20:26.792
[ Silence ]

00:20:26.793 --> 00:20:27.626
that identifier array

00:20:26.793 --> 00:20:27.626
contains the identifier you're

00:20:27.626 --> 00:20:28.459
[ Silence ]

00:20:28.461 --> 00:20:28.844
looking for.

00:20:28.844 --> 00:20:29.227
[ Silence ]

00:20:29.229 --> 00:20:29.712
In this case we're looking

00:20:29.712 --> 00:20:30.195
[ Silence ]

00:20:30.196 --> 00:20:32.514
for the location

00:20:30.196 --> 00:20:32.514
ISO 6709 identifier.

00:20:32.514 --> 00:20:34.832
[ Silence ]

00:20:34.834 --> 00:20:36.118
So once we've found it we're

00:20:34.834 --> 00:20:36.118
good to go and we can resume

00:20:36.118 --> 00:20:37.402
[ Silence ]

00:20:37.403 --> 00:20:38.420
with the code on

00:20:37.403 --> 00:20:38.420
the previous slide.

00:20:38.420 --> 00:20:39.437
[ Silence ]

00:20:39.439 --> 00:20:40.806
So that's how QuickTime

00:20:39.439 --> 00:20:40.806
Player is drawing the map

00:20:40.806 --> 00:20:42.173
[ Silence ]

00:20:42.175 --> 00:20:43.876
or drawing the path on the

00:20:42.175 --> 00:20:43.876
map before you start playback.

00:20:43.876 --> 00:20:45.577
[ Silence ]

00:20:45.578 --> 00:20:46.862
The other thing that QuickTime

00:20:45.578 --> 00:20:46.862
Player does, as you saw,

00:20:46.862 --> 00:20:48.146
[ Silence ]

00:20:48.147 --> 00:20:49.464
is it can update the current

00:20:48.147 --> 00:20:49.464
location while you're doing

00:20:49.464 --> 00:20:50.781
[ Silence ]

00:20:50.783 --> 00:20:52.100
playback or even scrubbing

00:20:50.783 --> 00:20:52.100
around and the way it does

00:20:52.100 --> 00:20:53.417
[ Silence ]

00:20:53.419 --> 00:20:55.437
that while it's already playing

00:20:53.419 --> 00:20:55.437
the asset using an AVPlayerItem

00:20:55.437 --> 00:20:57.455
[ Silence ]

00:20:57.457 --> 00:20:58.457
and we're going to

00:20:57.457 --> 00:20:58.457
use a new class called

00:20:58.457 --> 00:20:59.457
[ Silence ]

00:20:59.459 --> 00:21:01.527
AVPlayerItemMetadataOutput that

00:20:59.459 --> 00:21:01.527
you attach to your PlayerItem,

00:21:01.527 --> 00:21:03.595
[ Silence ]

00:21:03.596 --> 00:21:04.813
which also notes how to

00:21:03.596 --> 00:21:04.813
vend this data in the form

00:21:04.813 --> 00:21:06.030
[ Silence ]

00:21:06.032 --> 00:21:06.799
of TimedMetadataGroups.

00:21:06.799 --> 00:21:07.566
[ Silence ]

00:21:07.567 --> 00:21:08.934
But unlike the asset reader,

00:21:07.567 --> 00:21:08.934
instead of getting all the data

00:21:08.934 --> 00:21:10.301
[ Silence ]

00:21:10.303 --> 00:21:11.170
up front you're going

00:21:10.303 --> 00:21:11.170
to be getting it piece

00:21:11.170 --> 00:21:12.037
[ Silence ]

00:21:12.038 --> 00:21:13.172
by piece as the movie plays.

00:21:13.172 --> 00:21:14.306
[ Silence ]

00:21:14.307 --> 00:21:15.491
So a little bit of code,

00:21:15.491 --> 00:21:16.675
[ Silence ]

00:21:16.676 --> 00:21:17.693
you first create your

00:21:16.676 --> 00:21:17.693
metadata output using the

00:21:17.693 --> 00:21:18.710
[ Silence ]

00:21:18.711 --> 00:21:19.578
initWithIdentifiers method

00:21:19.578 --> 00:21:20.445
[ Silence ]

00:21:20.446 --> 00:21:22.130
and in this case we're only

00:21:20.446 --> 00:21:22.130
interested in metadata that has

00:21:22.130 --> 00:21:23.814
[ Silence ]

00:21:23.816 --> 00:21:25.384
that location identifier so

00:21:23.816 --> 00:21:25.384
that's all we're going to get

00:21:25.384 --> 00:21:26.952
[ Silence ]

00:21:26.953 --> 00:21:27.953
by opting into this way.

00:21:27.953 --> 00:21:28.953
[ Silence ]

00:21:28.955 --> 00:21:30.372
Then you create a

00:21:28.955 --> 00:21:30.372
delegate that you define

00:21:30.372 --> 00:21:31.789
[ Silence ]

00:21:31.791 --> 00:21:32.408
and that's what's going

00:21:32.408 --> 00:21:33.025
[ Silence ]

00:21:33.026 --> 00:21:34.160
to receive the metadata

00:21:33.026 --> 00:21:34.160
during playback and you set

00:21:34.160 --> 00:21:35.294
[ Silence ]

00:21:35.295 --> 00:21:35.911
that delegate on your output

00:21:35.911 --> 00:21:36.527
[ Silence ]

00:21:36.529 --> 00:21:38.947
and tell us what cue you

00:21:36.529 --> 00:21:38.947
want us to send the data on.

00:21:38.947 --> 00:21:41.365
[ Silence ]

00:21:41.367 --> 00:21:43.318
Then you create or grab your

00:21:41.367 --> 00:21:43.318
AVPlayerItem and call addOutput

00:21:43.318 --> 00:21:45.269
[ Silence ]

00:21:45.271 --> 00:21:46.805
to attach your output, to attach

00:21:45.271 --> 00:21:46.805
your output to the playerItem

00:21:46.805 --> 00:21:48.339
[ Silence ]

00:21:48.341 --> 00:21:50.459
and finally make your player

00:21:48.341 --> 00:21:50.459
and associate your item

00:21:50.459 --> 00:21:52.577
[ Silence ]

00:21:52.578 --> 00:21:54.029
with the player as the current

00:21:52.578 --> 00:21:54.029
item and start playback.

00:21:54.029 --> 00:21:55.480
[ Silence ]

00:21:55.481 --> 00:21:56.748
It's important to get the

00:21:55.481 --> 00:21:56.748
smoothest playback experience

00:21:56.748 --> 00:21:58.015
[ Silence ]

00:21:58.017 --> 00:21:59.484
possible, we highly recommend

00:21:58.017 --> 00:21:59.484
that you do all of this sort

00:21:59.484 --> 00:22:00.951
[ Silence ]

00:22:00.953 --> 00:22:02.120
of setup work before

00:22:00.953 --> 00:22:02.120
you start playback

00:22:02.120 --> 00:22:03.287
[ Silence ]

00:22:03.289 --> 00:22:04.656
or even attach the

00:22:03.289 --> 00:22:04.656
item to the player.

00:22:04.656 --> 00:22:06.023
[ Silence ]

00:22:06.025 --> 00:22:09.061
So a little bit of look at

00:22:06.025 --> 00:22:09.061
what your delegate method might

00:22:09.061 --> 00:22:12.097
[ Silence ]

00:22:12.098 --> 00:22:12.765
look like.

00:22:12.765 --> 00:22:13.432
[ Silence ]

00:22:13.433 --> 00:22:14.617
There's only one delegate

00:22:13.433 --> 00:22:14.617
method; it's the metadataOutput,

00:22:14.617 --> 00:22:15.801
[ Silence ]

00:22:15.802 --> 00:22:17.419
didOutputTimedMetadataGroups,

00:22:15.802 --> 00:22:17.419
fromPlayerItemTrack method.

00:22:17.419 --> 00:22:19.036
[ Silence ]

00:22:19.038 --> 00:22:20.222
And the first thing you

00:22:19.038 --> 00:22:20.222
want to do is grab an item

00:22:20.222 --> 00:22:21.406
[ Silence ]

00:22:21.407 --> 00:22:22.457
that you can get your

00:22:21.407 --> 00:22:22.457
payload data from.

00:22:22.457 --> 00:22:23.507
[ Silence ]

00:22:23.509 --> 00:22:24.209
In this case, to

00:22:23.509 --> 00:22:24.209
keep things simple,

00:22:24.209 --> 00:22:24.909
[ Silence ]

00:22:24.911 --> 00:22:26.362
I'm just grabbing the first item

00:22:24.911 --> 00:22:26.362
from the first group but keep

00:22:26.362 --> 00:22:27.813
[ Silence ]

00:22:27.814 --> 00:22:28.664
in mind there could

00:22:27.814 --> 00:22:28.664
be multiple items,

00:22:28.664 --> 00:22:29.514
[ Silence ]

00:22:29.515 --> 00:22:30.399
there could even

00:22:29.515 --> 00:22:30.399
be multiple groups.

00:22:30.399 --> 00:22:31.283
[ Silence ]

00:22:31.284 --> 00:22:32.301
One reason there could

00:22:31.284 --> 00:22:32.301
be multiple groups given

00:22:32.301 --> 00:22:33.318
[ Silence ]

00:22:33.319 --> 00:22:35.821
to this method is that the

00:22:33.319 --> 00:22:35.821
metadata output will keep track

00:22:35.821 --> 00:22:38.323
[ Silence ]

00:22:38.324 --> 00:22:39.708
of whether the metadata

00:22:38.324 --> 00:22:39.708
is coming faster

00:22:39.708 --> 00:22:41.092
[ Silence ]

00:22:41.094 --> 00:22:42.361
than you're processing it and,

00:22:41.094 --> 00:22:42.361
if it is, it will start to batch

00:22:42.361 --> 00:22:43.628
[ Silence ]

00:22:43.629 --> 00:22:45.113
that up and give you

00:22:43.629 --> 00:22:45.113
the metadata in batches

00:22:45.113 --> 00:22:46.597
[ Silence ]

00:22:46.599 --> 00:22:47.900
when you're done with the

00:22:46.599 --> 00:22:47.900
previous batch of metadata.

00:22:47.900 --> 00:22:49.201
[ Silence ]

00:22:49.202 --> 00:22:50.502
So moving on with your

00:22:49.202 --> 00:22:50.502
item; you're going

00:22:50.502 --> 00:22:51.802
[ Silence ]

00:22:51.804 --> 00:22:53.405
to do this

00:22:51.804 --> 00:22:53.405
LoadValueAsynchronouslyForKeys

00:22:53.405 --> 00:22:55.006
[ Silence ]

00:22:55.007 --> 00:22:55.841
dance that we talked

00:22:55.007 --> 00:22:55.841
about before.

00:22:55.841 --> 00:22:56.675
[ Silence ]

00:22:56.676 --> 00:22:58.193
In this case, we're

00:22:56.676 --> 00:22:58.193
interested in the value

00:22:58.193 --> 00:22:59.710
[ Silence ]

00:22:59.712 --> 00:23:00.462
and data type properties

00:22:59.712 --> 00:23:00.462
so we're going

00:23:00.462 --> 00:23:01.212
[ Silence ]

00:23:01.214 --> 00:23:01.880
to load both of those.

00:23:01.880 --> 00:23:02.546
[ Silence ]

00:23:02.548 --> 00:23:03.865
I've admitted the error

00:23:02.548 --> 00:23:03.865
checking for brevity here

00:23:03.865 --> 00:23:05.182
[ Silence ]

00:23:05.184 --> 00:23:06.168
which you'll probably want

00:23:05.184 --> 00:23:06.168
to do that error checking

00:23:06.168 --> 00:23:07.152
[ Silence ]

00:23:07.153 --> 00:23:08.053
like we had in the other slide.

00:23:08.053 --> 00:23:08.953
[ Silence ]

00:23:08.955 --> 00:23:10.873
And once we have the completion

00:23:08.955 --> 00:23:10.873
handler we can ask the item

00:23:10.873 --> 00:23:12.791
[ Silence ]

00:23:12.792 --> 00:23:14.460
for its data type and make

00:23:12.792 --> 00:23:14.460
sure that's the data type we're

00:23:14.460 --> 00:23:16.128
[ Silence ]

00:23:16.129 --> 00:23:17.396
prepared to handle, in this

00:23:16.129 --> 00:23:17.396
case my code only knows how

00:23:17.396 --> 00:23:18.663
[ Silence ]

00:23:18.664 --> 00:23:20.799
to handle location information

00:23:18.664 --> 00:23:20.799
in ISO 6709 format so we got

00:23:20.799 --> 00:23:22.934
[ Silence ]

00:23:22.935 --> 00:23:24.603
to make sure that's the right

00:23:22.935 --> 00:23:24.603
data type and from there we go

00:23:24.603 --> 00:23:26.271
[ Silence ]

00:23:26.272 --> 00:23:27.139
and dispatch our code

00:23:26.272 --> 00:23:27.139
to the main thread

00:23:27.139 --> 00:23:28.006
[ Silence ]

00:23:28.007 --> 00:23:28.857
that will update our UI.

00:23:28.857 --> 00:23:29.707
[ Silence ]

00:23:29.709 --> 00:23:32.478
So that's how QuickTime Player

00:23:29.709 --> 00:23:32.478
is updating the location

00:23:32.478 --> 00:23:35.247
[ Silence ]

00:23:35.248 --> 00:23:36.231
metadata during playback.

00:23:36.231 --> 00:23:37.214
[ Silence ]

00:23:37.216 --> 00:23:38.800
Of course this is not the

00:23:37.216 --> 00:23:38.800
first API that we have offered

00:23:38.800 --> 00:23:40.384
[ Silence ]

00:23:40.386 --> 00:23:41.720
for reading timed

00:23:40.386 --> 00:23:41.720
metadata during playback.

00:23:41.720 --> 00:23:43.054
[ Silence ]

00:23:43.055 --> 00:23:44.506
There is an existing

00:23:43.055 --> 00:23:44.506
property called timedMetadata

00:23:44.506 --> 00:23:45.957
[ Silence ]

00:23:45.958 --> 00:23:47.175
on AVPlayerItem but

00:23:45.958 --> 00:23:47.175
I'm here to say

00:23:47.175 --> 00:23:48.392
[ Silence ]

00:23:48.394 --> 00:23:49.278
that the

00:23:48.394 --> 00:23:49.278
AVPlayerItemMetadataOutput

00:23:49.278 --> 00:23:50.162
[ Silence ]

00:23:50.163 --> 00:23:52.715
replaces that property for

00:23:50.163 --> 00:23:52.715
all of these use cases.

00:23:52.715 --> 00:23:55.267
[ Silence ]

00:23:55.268 --> 00:23:56.552
Now we're not deprecating

00:23:55.268 --> 00:23:56.552
the property yet

00:23:56.552 --> 00:23:57.836
[ Silence ]

00:23:57.837 --> 00:23:59.354
but we do recommend, if

00:23:57.837 --> 00:23:59.354
you're new to timed metadata,

00:23:59.354 --> 00:24:00.871
[ Silence ]

00:24:00.873 --> 00:24:02.024
just adopt the metadataOutput

00:24:02.024 --> 00:24:03.175
[ Silence ]

00:24:03.176 --> 00:24:04.059
and not worry about

00:24:03.176 --> 00:24:04.059
the property.

00:24:04.059 --> 00:24:04.942
[ Silence ]

00:24:04.944 --> 00:24:06.912
If you're already using the

00:24:04.944 --> 00:24:06.912
property version we do recommend

00:24:06.912 --> 00:24:08.880
[ Silence ]

00:24:08.881 --> 00:24:10.716
that you move over but just you

00:24:08.881 --> 00:24:10.716
know that you should make sure

00:24:10.716 --> 00:24:12.551
[ Silence ]

00:24:12.552 --> 00:24:14.420
that your code is working

00:24:12.552 --> 00:24:14.420
properly after that transition,

00:24:14.420 --> 00:24:16.288
[ Silence ]

00:24:16.289 --> 00:24:16.972
in particular I'll point

00:24:16.972 --> 00:24:17.655
[ Silence ]

00:24:17.657 --> 00:24:19.541
out that the metadataOutput

00:24:17.657 --> 00:24:19.541
will give you, for certain kinds

00:24:19.541 --> 00:24:21.425
[ Silence ]

00:24:21.427 --> 00:24:23.812
of HLS content, will give

00:24:21.427 --> 00:24:23.812
more specific identifiers

00:24:23.812 --> 00:24:26.197
[ Silence ]

00:24:26.199 --> 00:24:26.982
than the old property did.

00:24:26.982 --> 00:24:27.765
[ Silence ]

00:24:27.767 --> 00:24:29.501
So just make sure your code

00:24:27.767 --> 00:24:29.501
is prepared to handle that.

00:24:29.501 --> 00:24:31.235
[ Silence ]

00:24:31.237 --> 00:24:33.572
The last topic on reading

00:24:31.237 --> 00:24:33.572
timed metadata is Chapters.

00:24:33.572 --> 00:24:35.907
[ Silence ]

00:24:35.908 --> 00:24:37.075
Chapters, like I said, have

00:24:35.908 --> 00:24:37.075
been supported for some time;

00:24:37.075 --> 00:24:38.242
[ Silence ]

00:24:38.244 --> 00:24:39.228
they even have their own API:

00:24:39.228 --> 00:24:40.212
[ Silence ]

00:24:40.213 --> 00:24:41.613
chapterMetadataGroupsBest

00:24:40.213 --> 00:24:41.613
MatchingPreferredLanguages.

00:24:41.613 --> 00:24:43.013
[ Silence ]

00:24:43.015 --> 00:24:44.266
This is on AVAsset.

00:24:44.266 --> 00:24:45.517
[ Silence ]

00:24:45.518 --> 00:24:47.336
This will give you an array

00:24:45.518 --> 00:24:47.336
of timed metadata groups

00:24:47.336 --> 00:24:49.154
[ Silence ]

00:24:49.155 --> 00:24:50.656
that contain items

00:24:49.155 --> 00:24:50.656
with the identifier,

00:24:50.656 --> 00:24:52.157
[ Silence ]

00:24:52.158 --> 00:24:53.892
QuickTimeUserDataChapter,

00:24:52.158 --> 00:24:53.892
and we've supported this

00:24:53.892 --> 00:24:55.626
[ Silence ]

00:24:55.628 --> 00:24:57.596
for some time for QuickTime

00:24:55.628 --> 00:24:57.596
movie files and M4Vs and,

00:24:57.596 --> 00:24:59.564
[ Silence ]

00:24:59.565 --> 00:25:02.584
new in iOS 8 is the-and OS X

00:24:59.565 --> 00:25:02.584
Yosemite-is support for chapters

00:25:02.584 --> 00:25:05.603
[ Silence ]

00:25:05.605 --> 00:25:07.306
in HTTP Live Streams

00:25:05.605 --> 00:25:07.306
as well as MP3 files.

00:25:07.306 --> 00:25:09.007
[ Silence ]

00:25:09.008 --> 00:25:09.625
And I'll tell you more about how

00:25:09.625 --> 00:25:10.242
[ Silence ]

00:25:10.243 --> 00:25:12.311
to author those HLS chapters

00:25:10.243 --> 00:25:12.311
in just a little bit.

00:25:12.311 --> 00:25:14.379
[ Silence ]

00:25:14.380 --> 00:25:15.864
So for more information,

00:25:14.380 --> 00:25:15.864
we have some sample code

00:25:15.864 --> 00:25:17.348
[ Silence ]

00:25:17.350 --> 00:25:19.301
that does approximately what

00:25:17.350 --> 00:25:19.301
QuickTime Player is doing,

00:25:19.301 --> 00:25:21.252
[ Silence ]

00:25:21.254 --> 00:25:22.921
where it can show your

00:25:21.254 --> 00:25:22.921
location during play back.

00:25:22.921 --> 00:25:24.588
[ Silence ]

00:25:24.590 --> 00:25:26.575
We also have a previous session

00:25:24.590 --> 00:25:26.575
about AssetReader that goes

00:25:26.575 --> 00:25:28.560
[ Silence ]

00:25:28.561 --> 00:25:30.078
into much more detail than I did

00:25:28.561 --> 00:25:30.078
here, called "Working with Media

00:25:30.078 --> 00:25:31.595
[ Silence ]

00:25:31.597 --> 00:25:32.981
in AVFoundation" from 2011.

00:25:32.981 --> 00:25:34.365
[ Silence ]

00:25:34.367 --> 00:25:35.934
So that's how you read and

00:25:34.367 --> 00:25:35.934
play back timed metadata.

00:25:35.934 --> 00:25:37.501
[ Silence ]

00:25:37.503 --> 00:25:39.071
Our next timed metadata topic

00:25:37.503 --> 00:25:39.071
is how you can create your own

00:25:39.071 --> 00:25:40.639
[ Silence ]

00:25:40.640 --> 00:25:41.807
movies that contain

00:25:40.640 --> 00:25:41.807
timed metadata.

00:25:41.807 --> 00:25:42.974
[ Silence ]

00:25:42.975 --> 00:25:43.975
We saw the screenshot

00:25:42.975 --> 00:25:43.975
before and I mentioned

00:25:43.975 --> 00:25:44.975
[ Silence ]

00:25:44.977 --> 00:25:46.862
that these annotations are

00:25:44.977 --> 00:25:46.862
stored as timed metadata and,

00:25:46.862 --> 00:25:48.747
[ Silence ]

00:25:48.748 --> 00:25:50.149
to show you this demo app, I'd

00:25:48.748 --> 00:25:50.149
like to invite Shalini back

00:25:50.149 --> 00:25:51.550
[ Silence ]

00:25:51.551 --> 00:25:52.818
up on stage to demo it.

00:25:52.818 --> 00:25:54.085
[ Silence ]

00:25:54.086 --> 00:25:55.170
>> This time let's

00:25:54.086 --> 00:25:55.170
look at an app on how

00:25:55.170 --> 00:25:56.254
[ Silence ]

00:25:56.255 --> 00:25:58.206
to author your own custom

00:25:56.255 --> 00:25:58.206
metadata movie files.

00:25:58.206 --> 00:26:00.157
[ Silence ]

00:26:00.159 --> 00:26:02.227
Here I have a video and if I

00:26:00.159 --> 00:26:02.227
would like to share some notes

00:26:02.227 --> 00:26:04.295
[ Silence ]

00:26:04.297 --> 00:26:06.031
with my friend, who is good

00:26:04.297 --> 00:26:06.031
at fixing colors in a movie,

00:26:06.031 --> 00:26:07.765
[ Silence ]

00:26:07.767 --> 00:26:09.551
I can now do that

00:26:07.767 --> 00:26:09.551
within the app.

00:26:09.551 --> 00:26:11.335
[ Silence ]

00:26:11.337 --> 00:26:13.238
To add annotations, I

00:26:11.337 --> 00:26:13.238
use a two-finger gesture,

00:26:13.238 --> 00:26:15.139
[ Silence ]

00:26:15.141 --> 00:26:19.061
I can use a pinch gesture to

00:26:15.141 --> 00:26:19.061
resize and then add a comment

00:26:19.061 --> 00:26:22.981
[ Silence ]

00:26:22.982 --> 00:26:24.249
[ Silence ]

00:26:24.250 --> 00:26:26.234
which is enough for my whoever

00:26:24.250 --> 00:26:26.234
looks at the video later

00:26:26.234 --> 00:26:28.218
[ Silence ]

00:26:28.220 --> 00:26:30.672
to fix the colors there

00:26:28.220 --> 00:26:30.672
and then I begin playback.

00:26:30.672 --> 00:26:33.124
[ Silence ]

00:26:33.125 --> 00:26:35.043
And as playback progresses,

00:26:33.125 --> 00:26:35.043
I track the circle

00:26:35.043 --> 00:26:36.961
[ Silence ]

00:26:36.963 --> 00:26:38.363
to where I want this

00:26:36.963 --> 00:26:38.363
to be fixed.

00:26:38.363 --> 00:26:39.763
[ Silence ]

00:26:39.765 --> 00:26:41.416
And now that I have this

00:26:39.765 --> 00:26:41.416
annotation and I can write it

00:26:41.416 --> 00:26:43.067
[ Silence ]

00:26:43.069 --> 00:26:45.454
out along with the audio and

00:26:43.069 --> 00:26:45.454
video to do that, I hit "export"

00:26:45.454 --> 00:26:47.839
[ Silence ]

00:26:47.840 --> 00:26:49.391
and now we see an AV

00:26:47.840 --> 00:26:49.391
player view controller

00:26:49.391 --> 00:26:50.942
[ Silence ]

00:26:50.943 --> 00:26:52.527
which shows the exported

00:26:50.943 --> 00:26:52.527
movie along with the metadata

00:26:52.527 --> 00:26:54.111
[ Silence ]

00:26:54.113 --> 00:26:54.813
which was written to it.

00:26:54.813 --> 00:26:55.513
[ Silence ]

00:26:55.514 --> 00:26:57.933
So if I start playback you see

00:26:55.514 --> 00:26:57.933
the annotation is moving along

00:26:57.933 --> 00:27:00.352
[ Silence ]

00:27:00.353 --> 00:27:02.538
the timeline in the

00:27:00.353 --> 00:27:02.538
part in which I traced.

00:27:02.538 --> 00:27:04.723
[ Silence ]

00:27:04.724 --> 00:27:07.442
So if I scrub back in time you

00:27:04.724 --> 00:27:07.442
can see the annotation moving.

00:27:07.442 --> 00:27:10.160
[ Silence ]

00:27:10.162 --> 00:27:11.313
You might wonder that

00:27:10.162 --> 00:27:11.313
the annotation is baked

00:27:11.313 --> 00:27:12.464
[ Silence ]

00:27:12.465 --> 00:27:13.815
into the video frame; it is not.

00:27:13.815 --> 00:27:15.165
[ Silence ]

00:27:15.167 --> 00:27:17.435
It is being rendered real-time

00:27:15.167 --> 00:27:17.435
using AVPlayerItemMetadataOutput

00:27:17.435 --> 00:27:19.703
[ Silence ]

00:27:19.705 --> 00:27:21.773
and you can change the color

00:27:19.705 --> 00:27:21.773
or the font of the annotation.

00:27:21.773 --> 00:27:23.841
[ Silence ]

00:27:23.843 --> 00:27:25.510
So if I begin playback, you

00:27:23.843 --> 00:27:25.510
see the rendering is happening

00:27:25.510 --> 00:27:27.177
[ Silence ]

00:27:27.179 --> 00:27:29.130
in real time.

00:27:29.130 --> 00:27:31.081
[ Silence ]

00:27:31.083 --> 00:27:32.784
That's AVTimedAnnotationWriter,

00:27:31.083 --> 00:27:32.784
we have this available

00:27:32.784 --> 00:27:34.485
[ Silence ]

00:27:34.487 --> 00:27:35.587
as a sample code

00:27:34.487 --> 00:27:35.587
as well, thank you.

00:27:35.587 --> 00:27:36.687
[ Silence ]

00:27:36.689 --> 00:27:37.739
>> So that was a

00:27:36.689 --> 00:27:37.739
great demonstration

00:27:37.739 --> 00:27:38.789
[ Silence ]

00:27:38.791 --> 00:27:40.742
of not only the playback part

00:27:38.791 --> 00:27:40.742
of it but also how to write

00:27:40.742 --> 00:27:42.693
[ Silence ]

00:27:42.695 --> 00:27:43.879
that data into the file,

00:27:42.695 --> 00:27:43.879
so let's take a look at how

00:27:43.879 --> 00:27:45.063
[ Silence ]

00:27:45.064 --> 00:27:45.697
that was accomplished.

00:27:45.697 --> 00:27:46.330
[ Silence ]

00:27:46.332 --> 00:27:48.400
So we're going to use an

00:27:46.332 --> 00:27:48.400
AVAssetWriter to write the file

00:27:48.400 --> 00:27:50.468
[ Silence ]

00:27:50.469 --> 00:27:51.953
and we're going to use an

00:27:50.469 --> 00:27:51.953
AVAssetWriterInput in order

00:27:51.953 --> 00:27:53.437
[ Silence ]

00:27:53.439 --> 00:27:54.556
to write that metadata

00:27:53.439 --> 00:27:54.556
track to the file.

00:27:54.556 --> 00:27:55.673
[ Silence ]

00:27:55.675 --> 00:27:56.942
Just like the reader side,

00:27:56.942 --> 00:27:58.209
[ Silence ]

00:27:58.210 --> 00:28:00.128
the writer has a new class

00:27:58.210 --> 00:28:00.128
that's a metadataAdaptor

00:28:00.128 --> 00:28:02.046
[ Silence ]

00:28:02.048 --> 00:28:03.415
and that class knows how

00:28:02.048 --> 00:28:03.415
to interpret instances

00:28:03.415 --> 00:28:04.782
[ Silence ]

00:28:04.784 --> 00:28:06.435
of AVTimedMetadataGroup and

00:28:04.784 --> 00:28:06.435
write that into the file.

00:28:06.435 --> 00:28:08.086
[ Silence ]

00:28:08.087 --> 00:28:10.372
See a little bit of code;

00:28:08.087 --> 00:28:10.372
first thing we're going

00:28:10.372 --> 00:28:12.657
[ Silence ]

00:28:12.658 --> 00:28:14.059
to do is create our

00:28:12.658 --> 00:28:14.059
AssetWriter Input.

00:28:14.059 --> 00:28:15.460
[ Silence ]

00:28:15.461 --> 00:28:17.779
We're going to use the media

00:28:15.461 --> 00:28:17.779
type AVMediaTypeMetadata,

00:28:17.779 --> 00:28:20.097
[ Silence ]

00:28:20.099 --> 00:28:21.466
once again nil outputSettings

00:28:20.099 --> 00:28:21.466
and we're going to have

00:28:21.466 --> 00:28:22.833
[ Silence ]

00:28:22.835 --> 00:28:24.519
to provide a clue to

00:28:22.835 --> 00:28:24.519
the source format, well,

00:28:24.519 --> 00:28:26.203
[ Silence ]

00:28:26.205 --> 00:28:27.255
the format of the data that

00:28:26.205 --> 00:28:27.255
we're going to be appending.

00:28:27.255 --> 00:28:28.305
[ Silence ]

00:28:28.307 --> 00:28:29.157
We'll talk more about this

00:28:29.157 --> 00:28:30.007
[ Silence ]

00:28:30.009 --> 00:28:31.293
and why it's required

00:28:30.009 --> 00:28:31.293
on the next slide.

00:28:31.293 --> 00:28:32.577
[ Silence ]

00:28:32.578 --> 00:28:33.545
Then you simply create

00:28:32.578 --> 00:28:33.545
your metadataAdaptor

00:28:33.545 --> 00:28:34.512
[ Silence ]

00:28:34.513 --> 00:28:36.431
with the reference to that

00:28:34.513 --> 00:28:36.431
input and, as you generate

00:28:36.431 --> 00:28:38.349
[ Silence ]

00:28:38.350 --> 00:28:39.551
or receive your timed

00:28:38.350 --> 00:28:39.551
metadata groups,

00:28:39.551 --> 00:28:40.752
[ Silence ]

00:28:40.753 --> 00:28:42.254
you simply use the

00:28:40.753 --> 00:28:42.254
appendTimedMetadataGroup method

00:28:42.254 --> 00:28:43.755
[ Silence ]

00:28:43.756 --> 00:28:45.624
to continue to append those

00:28:43.756 --> 00:28:45.624
and write them to the file.

00:28:45.624 --> 00:28:47.492
[ Silence ]

00:28:47.493 --> 00:28:49.094
So what's the deal with

00:28:47.493 --> 00:28:49.094
that source format thing.

00:28:49.094 --> 00:28:50.695
[ Silence ]

00:28:50.696 --> 00:28:53.014
Well, it turns out in order

00:28:50.696 --> 00:28:53.014
for AVAssetWriter to be able

00:28:53.014 --> 00:28:55.332
[ Silence ]

00:28:55.334 --> 00:28:57.185
to write your metadata in the

00:28:55.334 --> 00:28:57.185
most efficient way possible,

00:28:57.185 --> 00:28:59.036
[ Silence ]

00:28:59.038 --> 00:29:00.188
it needs to know up

00:28:59.038 --> 00:29:00.188
front exactly what kind

00:29:00.188 --> 00:29:01.338
[ Silence ]

00:29:01.340 --> 00:29:02.440
of metadata it is

00:29:01.340 --> 00:29:02.440
going to be writing.

00:29:02.440 --> 00:29:03.540
[ Silence ]

00:29:03.542 --> 00:29:05.944
This will result in the most

00:29:03.542 --> 00:29:05.944
lowest storage overhead in terms

00:29:05.944 --> 00:29:08.346
[ Silence ]

00:29:08.347 --> 00:29:09.164
of the number of bytes

00:29:08.347 --> 00:29:09.164
your file takes up

00:29:09.164 --> 00:29:09.981
[ Silence ]

00:29:09.982 --> 00:29:11.583
and it also has a effect

00:29:09.982 --> 00:29:11.583
on how efficient it is

00:29:11.583 --> 00:29:13.184
[ Silence ]

00:29:13.185 --> 00:29:14.269
to play back this

00:29:13.185 --> 00:29:14.269
kind of contents.

00:29:14.269 --> 00:29:15.353
[ Silence ]

00:29:15.354 --> 00:29:16.288
You don't want to be

00:29:15.354 --> 00:29:16.288
using too much power

00:29:16.288 --> 00:29:17.222
[ Silence ]

00:29:17.223 --> 00:29:18.323
when you're playing this

00:29:17.223 --> 00:29:18.323
kind of content back.

00:29:18.323 --> 00:29:19.423
[ Silence ]

00:29:19.425 --> 00:29:20.358
So you do have some

00:29:19.425 --> 00:29:20.358
options in terms

00:29:20.358 --> 00:29:21.291
[ Silence ]

00:29:21.293 --> 00:29:22.944
of how you actually construct

00:29:21.293 --> 00:29:22.944
one of these format hits.

00:29:22.944 --> 00:29:24.595
[ Silence ]

00:29:24.597 --> 00:29:25.197
If you're reading

00:29:25.197 --> 00:29:25.797
[ Silence ]

00:29:25.798 --> 00:29:27.082
from AVAssetReader you

00:29:25.798 --> 00:29:27.082
can actually ask the track

00:29:27.082 --> 00:29:28.366
[ Silence ]

00:29:28.367 --> 00:29:29.251
that you are reading

00:29:28.367 --> 00:29:29.251
from to give you its list

00:29:29.251 --> 00:29:30.135
[ Silence ]

00:29:30.136 --> 00:29:31.954
of format descriptions

00:29:30.136 --> 00:29:31.954
and use one of those.

00:29:31.954 --> 00:29:33.772
[ Silence ]

00:29:33.773 --> 00:29:35.207
If you're creating the metadata

00:29:33.773 --> 00:29:35.207
group yourself or getting it

00:29:35.207 --> 00:29:36.641
[ Silence ]

00:29:36.642 --> 00:29:38.426
from some other source then

00:29:36.642 --> 00:29:38.426
you can use a new method called

00:29:38.426 --> 00:29:40.210
[ Silence ]

00:29:40.212 --> 00:29:41.746
copyFormatDescription that

00:29:40.212 --> 00:29:41.746
will give you back an instance

00:29:41.746 --> 00:29:43.280
[ Silence ]

00:29:43.282 --> 00:29:44.950
of CM format description that

00:29:43.282 --> 00:29:44.950
will do this job for you.

00:29:44.950 --> 00:29:46.618
[ Silence ]

00:29:46.619 --> 00:29:47.769
It's important to note that

00:29:46.619 --> 00:29:47.769
if you go this route you need

00:29:47.769 --> 00:29:48.919
[ Silence ]

00:29:48.921 --> 00:29:49.571
to make sure that the contents

00:29:49.571 --> 00:29:50.221
[ Silence ]

00:29:50.222 --> 00:29:51.673
of your metadata group

00:29:50.222 --> 00:29:51.673
are comprehensive in terms

00:29:51.673 --> 00:29:53.124
[ Silence ]

00:29:53.125 --> 00:29:54.359
of it containing

00:29:53.125 --> 00:29:54.359
every combination

00:29:54.359 --> 00:29:55.593
[ Silence ]

00:29:55.594 --> 00:29:57.178
of identifier data

00:29:55.594 --> 00:29:57.178
type and language tag

00:29:57.178 --> 00:29:58.762
[ Silence ]

00:29:58.764 --> 00:29:59.681
that you are going

00:29:58.764 --> 00:29:59.681
to be appending.

00:29:59.681 --> 00:30:00.598
[ Silence ]

00:30:00.599 --> 00:30:02.534
That is, it contains an item

00:30:00.599 --> 00:30:02.534
with each of those combinations.

00:30:02.534 --> 00:30:04.469
[ Silence ]

00:30:04.470 --> 00:30:06.288
Of course, since the CM format

00:30:04.470 --> 00:30:06.288
description is a CF type,

00:30:06.288 --> 00:30:08.106
[ Silence ]

00:30:08.107 --> 00:30:09.357
you'll need a CFRelease

00:30:08.107 --> 00:30:09.357
app when you're done.

00:30:09.357 --> 00:30:10.607
[ Silence ]

00:30:10.609 --> 00:30:11.659
Of course, there's one

00:30:10.609 --> 00:30:11.659
more way you can do this:

00:30:11.659 --> 00:30:12.709
[ Silence ]

00:30:12.711 --> 00:30:13.862
you can create the format

00:30:12.711 --> 00:30:13.862
description directly using

00:30:13.862 --> 00:30:15.013
[ Silence ]

00:30:15.014 --> 00:30:15.764
CoreMedia APIs.

00:30:15.764 --> 00:30:16.514
[ Silence ]

00:30:16.515 --> 00:30:18.700
And here you use this long name

00:30:16.515 --> 00:30:18.700
CMMetadataFormatDescription

00:30:18.700 --> 00:30:20.885
[ Silence ]

00:30:20.886 --> 00:30:22.153
CreateWith

00:30:20.886 --> 00:30:22.153
MetadataSpecifications function.

00:30:22.153 --> 00:30:23.420
[ Silence ]

00:30:23.422 --> 00:30:24.839
You're going to pass in

00:30:23.422 --> 00:30:24.839
the metadataType box.

00:30:24.839 --> 00:30:26.256
[ Silence ]

00:30:26.258 --> 00:30:27.108
That's the sort of

00:30:26.258 --> 00:30:27.108
metadata we've been talking

00:30:27.108 --> 00:30:27.958
[ Silence ]

00:30:27.960 --> 00:30:29.444
about this whole time

00:30:27.960 --> 00:30:29.444
with timed metadata.

00:30:29.444 --> 00:30:30.928
[ Silence ]

00:30:30.930 --> 00:30:32.414
And these metadata

00:30:30.930 --> 00:30:32.414
specifications it's just an

00:30:32.414 --> 00:30:33.898
[ Silence ]

00:30:33.899 --> 00:30:34.682
array of dictionaries.

00:30:34.682 --> 00:30:35.465
[ Silence ]

00:30:35.467 --> 00:30:36.985
Each dictionary contains those

00:30:35.467 --> 00:30:36.985
combinations I was talking

00:30:36.985 --> 00:30:38.503
[ Silence ]

00:30:38.504 --> 00:30:39.187
about before.

00:30:39.187 --> 00:30:39.870
[ Silence ]

00:30:39.872 --> 00:30:41.640
The identifier dataType and

00:30:39.872 --> 00:30:41.640
optionally extended language tag

00:30:41.640 --> 00:30:43.408
[ Silence ]

00:30:43.409 --> 00:30:45.026
so you want to make one of

00:30:43.409 --> 00:30:45.026
these metadata specifications

00:30:45.026 --> 00:30:46.643
[ Silence ]

00:30:46.645 --> 00:30:48.546
dictionaries for each

00:30:46.645 --> 00:30:48.546
combination you plan to append.

00:30:48.546 --> 00:30:50.447
[ Silence ]

00:30:50.449 --> 00:30:52.300
So the one thing that was not

00:30:50.449 --> 00:30:52.300
obvious about that demo is

00:30:52.300 --> 00:30:54.151
[ Silence ]

00:30:54.153 --> 00:30:56.037
that we're actually writing

00:30:54.153 --> 00:30:56.037
metadata timed metadata

00:30:56.037 --> 00:30:57.921
[ Silence ]

00:30:57.923 --> 00:30:59.441
that describes one

00:30:57.923 --> 00:30:59.441
particular other track.

00:30:59.441 --> 00:31:00.959
[ Silence ]

00:31:00.960 --> 00:31:01.960
So for the example

00:31:00.960 --> 00:31:01.960
of these annotations,

00:31:01.960 --> 00:31:02.960
[ Silence ]

00:31:02.962 --> 00:31:04.446
we're really just talking about

00:31:02.962 --> 00:31:04.446
the video track of the movie

00:31:04.446 --> 00:31:05.930
[ Silence ]

00:31:05.931 --> 00:31:07.248
and not the sound or

00:31:05.931 --> 00:31:07.248
anything else like that.

00:31:07.248 --> 00:31:08.565
[ Silence ]

00:31:08.567 --> 00:31:11.086
So just like we had a way of

00:31:08.567 --> 00:31:11.086
making track-specific metadata

00:31:11.086 --> 00:31:13.605
[ Silence ]

00:31:13.606 --> 00:31:14.356
that applied to the

00:31:13.606 --> 00:31:14.356
entire track,

00:31:14.356 --> 00:31:15.106
[ Silence ]

00:31:15.107 --> 00:31:15.740
with those tagged

00:31:15.107 --> 00:31:15.740
characteristics

00:31:15.740 --> 00:31:16.373
[ Silence ]

00:31:16.375 --> 00:31:17.525
that we saw before, you

00:31:16.375 --> 00:31:17.525
also have the ability

00:31:17.525 --> 00:31:18.675
[ Silence ]

00:31:18.677 --> 00:31:20.111
to formerly mark

00:31:18.677 --> 00:31:20.111
your metadata track

00:31:20.111 --> 00:31:21.545
[ Silence ]

00:31:21.547 --> 00:31:23.048
as describing one

00:31:21.547 --> 00:31:23.048
particular other track.

00:31:23.048 --> 00:31:24.549
[ Silence ]

00:31:24.550 --> 00:31:25.834
You do that with the

00:31:24.550 --> 00:31:25.834
addTrackAssociationWith

00:31:25.834 --> 00:31:27.118
[ Silence ]

00:31:27.119 --> 00:31:29.154
TrackOfInput method using as the

00:31:27.119 --> 00:31:29.154
parameter the AssetWriterInput

00:31:29.154 --> 00:31:31.189
[ Silence ]

00:31:31.190 --> 00:31:32.140
that you are using to

00:31:31.190 --> 00:31:32.140
write your video track.

00:31:32.140 --> 00:31:33.090
[ Silence ]

00:31:33.092 --> 00:31:34.192
And your receiver is the

00:31:33.092 --> 00:31:34.192
input that you are using

00:31:34.192 --> 00:31:35.292
[ Silence ]

00:31:35.294 --> 00:31:36.061
to write your metadata track.

00:31:36.061 --> 00:31:36.828
[ Silence ]

00:31:36.829 --> 00:31:38.313
You use the

00:31:36.829 --> 00:31:38.313
AssociationTypeMetadataReferent.

00:31:38.313 --> 00:31:39.797
[ Silence ]

00:31:39.798 --> 00:31:41.432
So that's how your create

00:31:39.798 --> 00:31:41.432
metadata that's timed

00:31:41.432 --> 00:31:43.066
[ Silence ]

00:31:43.068 --> 00:31:44.519
but also specific to

00:31:43.068 --> 00:31:44.519
a particular track.

00:31:44.519 --> 00:31:45.970
[ Silence ]

00:31:45.971 --> 00:31:47.589
The next thing we did that was

00:31:45.971 --> 00:31:47.589
interesting in that demo is

00:31:47.589 --> 00:31:49.207
[ Silence ]

00:31:49.208 --> 00:31:50.408
that we actually used our

00:31:49.208 --> 00:31:50.408
own custom identifiers.

00:31:50.408 --> 00:31:51.608
[ Silence ]

00:31:51.610 --> 00:31:52.877
So we had that big list

00:31:51.610 --> 00:31:52.877
of built in identifiers.

00:31:52.877 --> 00:31:54.144
[ Silence ]

00:31:54.146 --> 00:31:54.729
Well, you don't have

00:31:54.146 --> 00:31:54.729
to use those;

00:31:54.729 --> 00:31:55.312
[ Silence ]

00:31:55.314 --> 00:31:56.131
you can actually build your own

00:31:56.131 --> 00:31:56.948
[ Silence ]

00:31:56.949 --> 00:31:58.350
and as I mentioned before an

00:31:56.949 --> 00:31:58.350
identifier is just a combination

00:31:58.350 --> 00:31:59.751
[ Silence ]

00:31:59.752 --> 00:32:01.219
of key space and key and

00:31:59.752 --> 00:32:01.219
it has a particular format:

00:32:01.219 --> 00:32:02.686
[ Silence ]

00:32:02.688 --> 00:32:03.888
it's just a string but it

00:32:02.688 --> 00:32:03.888
is in a particular format

00:32:03.888 --> 00:32:05.088
[ Silence ]

00:32:05.090 --> 00:32:06.140
so to help you make your

00:32:05.090 --> 00:32:06.140
own custom identifiers,

00:32:06.140 --> 00:32:07.190
[ Silence ]

00:32:07.192 --> 00:32:08.676
we have this method,

00:32:07.192 --> 00:32:08.676
identifierFor Key, and keySpace,

00:32:08.676 --> 00:32:10.160
[ Silence ]

00:32:10.162 --> 00:32:12.047
it's a class method

00:32:10.162 --> 00:32:12.047
on AVMetadataItem.

00:32:12.047 --> 00:32:13.932
[ Silence ]

00:32:13.933 --> 00:32:15.634
There are some rules to

00:32:13.933 --> 00:32:15.634
follow: your key space needs

00:32:15.634 --> 00:32:17.335
[ Silence ]

00:32:17.336 --> 00:32:18.253
to be four characters

00:32:17.336 --> 00:32:18.253
long if you want to use it

00:32:18.253 --> 00:32:19.170
[ Silence ]

00:32:19.171 --> 00:32:19.854
for timed metadata

00:32:19.854 --> 00:32:20.537
[ Silence ]

00:32:20.539 --> 00:32:21.756
so we actually recommend you

00:32:20.539 --> 00:32:21.756
use our built-in key space,

00:32:21.756 --> 00:32:22.973
[ Silence ]

00:32:22.975 --> 00:32:24.109
the QuickTimeMetadata keySpace.

00:32:24.109 --> 00:32:25.243
[ Silence ]

00:32:25.244 --> 00:32:26.962
We also highly recommend

00:32:25.244 --> 00:32:26.962
you use reverse DNS notation

00:32:26.962 --> 00:32:28.680
[ Silence ]

00:32:28.681 --> 00:32:29.781
for your custom keys

00:32:28.681 --> 00:32:29.781
to avoid collisions

00:32:29.781 --> 00:32:30.881
[ Silence ]

00:32:30.883 --> 00:32:31.783
with other kinds of metadata.

00:32:31.783 --> 00:32:32.683
[ Silence ]

00:32:32.685 --> 00:32:34.402
So a brief code snippet you

00:32:32.685 --> 00:32:34.402
can see you can simply use this

00:32:34.402 --> 00:32:36.119
[ Silence ]

00:32:36.121 --> 00:32:37.822
method to make your custom

00:32:36.121 --> 00:32:37.822
identifier and then set

00:32:37.822 --> 00:32:39.523
[ Silence ]

00:32:39.525 --> 00:32:41.176
that on the identifier property

00:32:39.525 --> 00:32:41.176
of your mutableMetadataItem.

00:32:41.176 --> 00:32:42.827
[ Silence ]

00:32:42.828 --> 00:32:44.829
So in addition to custom

00:32:42.828 --> 00:32:44.829
identifiers you can also create

00:32:44.829 --> 00:32:46.830
[ Silence ]

00:32:46.832 --> 00:32:48.333
your own custom data types.

00:32:48.333 --> 00:32:49.834
[ Silence ]

00:32:49.835 --> 00:32:51.236
So we're all familiar by now,

00:32:49.835 --> 00:32:51.236
through this presentation,

00:32:51.236 --> 00:32:52.637
[ Silence ]

00:32:52.638 --> 00:32:53.888
with some of the built-in

00:32:52.638 --> 00:32:53.888
data types that we defined;

00:32:53.888 --> 00:32:55.138
[ Silence ]

00:32:55.140 --> 00:32:55.740
there's a lot more than these

00:32:55.740 --> 00:32:56.340
[ Silence ]

00:32:56.342 --> 00:32:57.242
but we've been using these

00:32:56.342 --> 00:32:57.242
quite heavily already.

00:32:57.242 --> 00:32:58.142
[ Silence ]

00:32:58.143 --> 00:32:59.110
These are really useful

00:32:59.110 --> 00:33:00.077
[ Silence ]

00:33:00.079 --> 00:33:01.279
but sometimes you want

00:33:00.079 --> 00:33:01.279
your data type information

00:33:01.279 --> 00:33:02.479
[ Silence ]

00:33:02.481 --> 00:33:04.466
to express more, maybe about

00:33:02.481 --> 00:33:04.466
the domain you're working in,

00:33:04.466 --> 00:33:06.451
[ Silence ]

00:33:06.452 --> 00:33:07.619
so if you are doing a serial

00:33:06.452 --> 00:33:07.619
number or a bar code kind

00:33:07.619 --> 00:33:08.786
[ Silence ]

00:33:08.787 --> 00:33:09.437
of thing you might want

00:33:09.437 --> 00:33:10.087
[ Silence ]

00:33:10.089 --> 00:33:11.590
to define a data type that's

00:33:10.089 --> 00:33:11.590
this sort of serial number

00:33:11.590 --> 00:33:13.091
[ Silence ]

00:33:13.092 --> 00:33:15.126
as string data type or

00:33:13.092 --> 00:33:15.126
barcode image as JPEG data type

00:33:15.126 --> 00:33:17.160
[ Silence ]

00:33:17.162 --> 00:33:18.029
so you have more

00:33:17.162 --> 00:33:18.029
specific information

00:33:18.029 --> 00:33:18.896
[ Silence ]

00:33:18.897 --> 00:33:20.164
about what your metadata

00:33:18.897 --> 00:33:20.164
actually contains.

00:33:20.164 --> 00:33:21.431
[ Silence ]

00:33:21.433 --> 00:33:23.718
The way that this works is,

00:33:21.433 --> 00:33:23.718
you have to tell us exactly how

00:33:23.718 --> 00:33:26.003
[ Silence ]

00:33:26.005 --> 00:33:28.223
to serialize that custom

00:33:26.005 --> 00:33:28.223
data type and the way you do

00:33:28.223 --> 00:33:30.441
[ Silence ]

00:33:30.442 --> 00:33:31.910
that is you tell us that your

00:33:30.442 --> 00:33:31.910
custom data type conforms to one

00:33:31.910 --> 00:33:33.378
[ Silence ]

00:33:33.379 --> 00:33:34.296
of our built-in data types.

00:33:34.296 --> 00:33:35.213
[ Silence ]

00:33:35.214 --> 00:33:36.464
So in this case the

00:33:35.214 --> 00:33:36.464
serial number conforms

00:33:36.464 --> 00:33:37.714
[ Silence ]

00:33:37.716 --> 00:33:39.667
to the UTF8 data type so under

00:33:37.716 --> 00:33:39.667
the hood it's UTF8 string,

00:33:39.667 --> 00:33:41.618
[ Silence ]

00:33:41.620 --> 00:33:43.388
but we know that it really

00:33:41.620 --> 00:33:43.388
represents a serial number

00:33:43.388 --> 00:33:45.156
[ Silence ]

00:33:45.157 --> 00:33:46.074
and the same with

00:33:45.157 --> 00:33:46.074
the barcode image.

00:33:46.074 --> 00:33:46.991
[ Silence ]

00:33:46.992 --> 00:33:48.393
The way that you do this is you

00:33:46.992 --> 00:33:48.393
register your data type using

00:33:48.393 --> 00:33:49.794
[ Silence ]

00:33:49.795 --> 00:33:51.963
the CMMetadataDataTypeRegistry

00:33:49.795 --> 00:33:51.963
RegisterDataType function that's

00:33:51.963 --> 00:33:54.131
[ Silence ]

00:33:54.133 --> 00:33:54.899
defined in Core Media.

00:33:54.899 --> 00:33:55.665
[ Silence ]

00:33:55.667 --> 00:33:57.385
You can't create your

00:33:55.667 --> 00:33:57.385
own custom base types

00:33:57.385 --> 00:33:59.103
[ Silence ]

00:33:59.104 --> 00:34:01.372
but you can create your own

00:33:59.104 --> 00:34:01.372
custom type that conforms

00:34:01.372 --> 00:34:03.640
[ Silence ]

00:34:03.642 --> 00:34:05.009
to our raw data built-in type

00:34:05.009 --> 00:34:06.376
[ Silence ]

00:34:06.378 --> 00:34:08.796
if your data type really is

00:34:06.378 --> 00:34:08.796
just a custom sequence of bytes.

00:34:08.796 --> 00:34:11.214
[ Silence ]

00:34:11.216 --> 00:34:12.717
So there are some rules

00:34:11.216 --> 00:34:12.717
to using AVAssetWriter

00:34:12.717 --> 00:34:14.218
[ Silence ]

00:34:14.219 --> 00:34:15.553
for writing timed metadata.

00:34:15.553 --> 00:34:16.887
[ Silence ]

00:34:16.889 --> 00:34:18.740
Most importantly, every metadata

00:34:16.889 --> 00:34:18.740
item that you append has

00:34:18.740 --> 00:34:20.591
[ Silence ]

00:34:20.592 --> 00:34:22.327
to have non-nil values for

00:34:20.592 --> 00:34:22.327
identifier, data type and value.

00:34:22.327 --> 00:34:24.062
[ Silence ]

00:34:24.063 --> 00:34:26.381
Your identifier has to conform

00:34:24.063 --> 00:34:26.381
to the format that we specify,

00:34:26.381 --> 00:34:28.699
[ Silence ]

00:34:28.700 --> 00:34:29.817
so we highly recommend

00:34:28.700 --> 00:34:29.817
using that utility method

00:34:29.817 --> 00:34:30.934
[ Silence ]

00:34:30.936 --> 00:34:31.719
that we just talked about.

00:34:31.719 --> 00:34:32.502
[ Silence ]

00:34:32.504 --> 00:34:33.705
The value has to be

00:34:32.504 --> 00:34:33.705
compatible with the data type

00:34:33.705 --> 00:34:34.906
[ Silence ]

00:34:34.907 --> 00:34:37.075
so you can tell us that your

00:34:34.907 --> 00:34:37.075
NSString value is an UTF8 string

00:34:37.075 --> 00:34:39.243
[ Silence ]

00:34:39.244 --> 00:34:39.944
but don't try telling us

00:34:39.944 --> 00:34:40.644
[ Silence ]

00:34:40.646 --> 00:34:42.163
that your custom class is a UTF8

00:34:40.646 --> 00:34:42.163
string because we won't know how

00:34:42.163 --> 00:34:43.680
[ Silence ]

00:34:43.682 --> 00:34:45.533
to serialize that properly

00:34:43.682 --> 00:34:45.533
and the AssetWriter will fail.

00:34:45.533 --> 00:34:47.384
[ Silence ]

00:34:47.386 --> 00:34:49.003
As I mentioned before, you have

00:34:47.386 --> 00:34:49.003
to create your AssetWriterInput

00:34:49.003 --> 00:34:50.620
[ Silence ]

00:34:50.622 --> 00:34:51.956
with a format hint and

00:34:50.622 --> 00:34:51.956
that must be comprehensive

00:34:51.956 --> 00:34:53.290
[ Silence ]

00:34:53.292 --> 00:34:53.958
and we described that before.

00:34:53.958 --> 00:34:54.624
[ Silence ]

00:34:54.626 --> 00:34:56.077
So the last topic

00:34:54.626 --> 00:34:56.077
about AssetWriter

00:34:56.077 --> 00:34:57.528
[ Silence ]

00:34:57.529 --> 00:34:59.747
and timed metadata is a recipe

00:34:57.529 --> 00:34:59.747
for creating your own movies

00:34:59.747 --> 00:35:01.965
[ Silence ]

00:35:01.967 --> 00:35:03.001
that have the same sort

00:35:01.967 --> 00:35:03.001
of dynamic location

00:35:03.001 --> 00:35:04.035
[ Silence ]

00:35:04.036 --> 00:35:05.286
that we've seen a

00:35:04.036 --> 00:35:05.286
couple of times already.

00:35:05.286 --> 00:35:06.536
[ Silence ]

00:35:06.538 --> 00:35:08.039
To do this, you can

00:35:06.538 --> 00:35:08.039
use AVCapture audio

00:35:08.039 --> 00:35:09.540
[ Silence ]

00:35:09.541 --> 00:35:10.908
and video data outputs

00:35:09.541 --> 00:35:10.908
and target that data

00:35:10.908 --> 00:35:12.275
[ Silence ]

00:35:12.277 --> 00:35:13.811
at twin instances of

00:35:12.277 --> 00:35:13.811
AssetWriterInput and,

00:35:13.811 --> 00:35:15.345
[ Silence ]

00:35:15.347 --> 00:35:17.465
at the same time, grab

00:35:15.347 --> 00:35:17.465
information from Core Location

00:35:17.465 --> 00:35:19.583
[ Silence ]

00:35:19.585 --> 00:35:20.835
that represents the location

00:35:19.585 --> 00:35:20.835
information and write

00:35:20.835 --> 00:35:22.085
[ Silence ]

00:35:22.087 --> 00:35:23.338
that to its own

00:35:22.087 --> 00:35:23.338
AssetWriterInput.

00:35:23.338 --> 00:35:24.589
[ Silence ]

00:35:24.590 --> 00:35:26.558
For more detail about how to do

00:35:24.590 --> 00:35:26.558
that we've actually implemented

00:35:26.558 --> 00:35:28.526
[ Silence ]

00:35:28.527 --> 00:35:29.611
that and made it

00:35:28.527 --> 00:35:29.611
available as sample code,

00:35:29.611 --> 00:35:30.695
[ Silence ]

00:35:30.696 --> 00:35:32.497
so see AVCaptureLocation if you

00:35:30.696 --> 00:35:32.497
want to make your own movies

00:35:32.497 --> 00:35:34.298
[ Silence ]

00:35:34.299 --> 00:35:35.383
that contain dynamic location.

00:35:35.383 --> 00:35:36.467
[ Silence ]

00:35:36.468 --> 00:35:37.719
We also have sample code

00:35:36.468 --> 00:35:37.719
as Shalini mentioned

00:35:37.719 --> 00:35:38.970
[ Silence ]

00:35:38.971 --> 00:35:39.754
for the demo we just showed you,

00:35:39.754 --> 00:35:40.537
[ Silence ]

00:35:40.539 --> 00:35:41.756
that's called

00:35:40.539 --> 00:35:41.756
AVTimedAnnotationWriter.

00:35:41.756 --> 00:35:42.973
[ Silence ]

00:35:42.975 --> 00:35:44.109
And, of course, for more

00:35:42.975 --> 00:35:44.109
information about AssetWriter

00:35:44.109 --> 00:35:45.243
[ Silence ]

00:35:45.244 --> 00:35:46.628
in general, see that same

00:35:45.244 --> 00:35:46.628
talk I referenced earlier:

00:35:46.628 --> 00:35:48.012
[ Silence ]

00:35:48.013 --> 00:35:49.480
"Working with Media

00:35:48.013 --> 00:35:49.480
in AVFoundation".

00:35:49.480 --> 00:35:50.947
[ Silence ]

00:35:50.949 --> 00:35:53.084
Last two quick topics about

00:35:50.949 --> 00:35:53.084
timed metadata: ExportSession.

00:35:53.084 --> 00:35:55.219
[ Silence ]

00:35:55.220 --> 00:35:56.521
Just like we've said the

00:35:55.220 --> 00:35:56.521
asset ExportSession will

00:35:56.521 --> 00:35:57.822
[ Silence ]

00:35:57.823 --> 00:35:59.541
by default pass through any

00:35:57.823 --> 00:35:59.541
of your metadata that applies

00:35:59.541 --> 00:36:01.259
[ Silence ]

00:36:01.260 --> 00:36:02.777
to the entire asset or

00:36:01.260 --> 00:36:02.777
entire track, it will pass

00:36:02.777 --> 00:36:04.294
[ Silence ]

00:36:04.296 --> 00:36:05.363
that through, copy it

00:36:04.296 --> 00:36:05.363
to the output file.

00:36:05.363 --> 00:36:06.430
[ Silence ]

00:36:06.431 --> 00:36:07.815
It will do the same thing with

00:36:06.431 --> 00:36:07.815
timed metadata that exists

00:36:07.815 --> 00:36:09.199
[ Silence ]

00:36:09.201 --> 00:36:10.068
in the source file provided

00:36:10.068 --> 00:36:10.935
[ Silence ]

00:36:10.936 --> 00:36:12.403
that your destination file

00:36:10.936 --> 00:36:12.403
type is QuickTime Movie.

00:36:12.403 --> 00:36:13.870
[ Silence ]

00:36:13.872 --> 00:36:15.506
We'll talk more about file

00:36:13.872 --> 00:36:15.506
types in just a little bit

00:36:15.506 --> 00:36:17.140
[ Silence ]

00:36:17.142 --> 00:36:18.776
but basically ExportSession

00:36:17.142 --> 00:36:18.776
behaves exactly

00:36:18.776 --> 00:36:20.410
[ Silence ]

00:36:20.412 --> 00:36:21.379
as you would expect.

00:36:21.379 --> 00:36:22.346
[ Silence ]

00:36:22.347 --> 00:36:24.782
In our last timed metadata

00:36:22.347 --> 00:36:24.782
authoring topic is HTTP Live

00:36:24.782 --> 00:36:27.217
[ Silence ]

00:36:27.219 --> 00:36:28.803
Streaming chapters so if

00:36:27.219 --> 00:36:28.803
you want to author chapters

00:36:28.803 --> 00:36:30.387
[ Silence ]

00:36:30.389 --> 00:36:32.390
in your HLS stream, you can use

00:36:30.389 --> 00:36:32.390
the session-data tag we talked

00:36:32.390 --> 00:36:34.391
[ Silence ]

00:36:34.393 --> 00:36:37.529
about earlier and the special

00:36:34.393 --> 00:36:37.529
data ID, com.apple.hls.chapters.

00:36:37.529 --> 00:36:40.665
[ Silence ]

00:36:40.666 --> 00:36:42.000
Your URL should point

00:36:40.666 --> 00:36:42.000
to a JSON file

00:36:42.000 --> 00:36:43.334
[ Silence ]

00:36:43.335 --> 00:36:45.270
that describes the chapter

00:36:43.335 --> 00:36:45.270
information for that stream and,

00:36:45.270 --> 00:36:47.205
[ Silence ]

00:36:47.206 --> 00:36:48.556
of course for more detail

00:36:47.206 --> 00:36:48.556
on this, see that same link

00:36:48.556 --> 00:36:49.906
[ Silence ]

00:36:49.908 --> 00:36:51.609
that I referenced earlier

00:36:49.908 --> 00:36:51.609
for HTTP Live Streaming.

00:36:51.609 --> 00:36:53.310
[ Silence ]

00:36:53.312 --> 00:36:54.446
All right, so that

00:36:53.312 --> 00:36:54.446
is timed metadata,

00:36:54.446 --> 00:36:55.580
[ Silence ]

00:36:55.581 --> 00:36:56.748
our next topic is privacy.

00:36:56.748 --> 00:36:57.915
[ Silence ]

00:36:57.916 --> 00:36:59.133
Why is privacy important

00:36:57.916 --> 00:36:59.133
in this context?

00:36:59.133 --> 00:37:00.350
[ Silence ]

00:37:00.352 --> 00:37:02.303
Well, any time that you

00:37:00.352 --> 00:37:02.303
are writing your users data

00:37:02.303 --> 00:37:04.254
[ Silence ]

00:37:04.256 --> 00:37:05.957
to a file you need to

00:37:04.256 --> 00:37:05.957
be at least considerate

00:37:05.957 --> 00:37:07.658
[ Silence ]

00:37:07.659 --> 00:37:10.011
about their privacy and be aware

00:37:07.659 --> 00:37:10.011
that the metadata that you write

00:37:10.011 --> 00:37:12.363
[ Silence ]

00:37:12.364 --> 00:37:14.048
out to these movie files can

00:37:12.364 --> 00:37:14.048
contain user identifiable

00:37:14.048 --> 00:37:15.732
[ Silence ]

00:37:15.734 --> 00:37:17.702
information, the most obvious

00:37:15.734 --> 00:37:17.702
example of that is location.

00:37:17.702 --> 00:37:19.670
[ Silence ]

00:37:19.671 --> 00:37:21.589
And so because movie files

00:37:19.671 --> 00:37:21.589
can be distributed and we want

00:37:21.589 --> 00:37:23.507
[ Silence ]

00:37:23.508 --> 00:37:24.742
to protect the privacy

00:37:23.508 --> 00:37:24.742
of our users,

00:37:24.742 --> 00:37:25.976
[ Silence ]

00:37:25.978 --> 00:37:27.796
for our built-in sharing

00:37:25.978 --> 00:37:27.796
services, we do our best

00:37:27.796 --> 00:37:29.614
[ Silence ]

00:37:29.615 --> 00:37:31.399
to strip out any potentially

00:37:29.615 --> 00:37:31.399
user identifiable information,

00:37:31.399 --> 00:37:33.183
[ Silence ]

00:37:33.185 --> 00:37:34.852
such as this location and we

00:37:33.185 --> 00:37:34.852
recommend that you do the same.

00:37:34.852 --> 00:37:36.519
[ Silence ]

00:37:36.521 --> 00:37:37.204
So we've given you a utility

00:37:37.204 --> 00:37:37.887
[ Silence ]

00:37:37.889 --> 00:37:40.007
for that called

00:37:37.889 --> 00:37:40.007
AVMetadataItemFilter.

00:37:40.007 --> 00:37:42.125
[ Silence ]

00:37:42.127 --> 00:37:43.344
Right now there is only one

00:37:42.127 --> 00:37:43.344
filter that we make available

00:37:43.344 --> 00:37:44.561
[ Silence ]

00:37:44.563 --> 00:37:45.363
but it is geared

00:37:44.563 --> 00:37:45.363
towards privacy,

00:37:45.363 --> 00:37:46.163
[ Silence ]

00:37:46.164 --> 00:37:47.848
it is the metadata item filter

00:37:46.164 --> 00:37:47.848
for sharing and that will strip

00:37:47.848 --> 00:37:49.532
[ Silence ]

00:37:49.534 --> 00:37:51.052
out any of this sort of

00:37:49.534 --> 00:37:51.052
user identifying information

00:37:51.052 --> 00:37:52.570
[ Silence ]

00:37:52.571 --> 00:37:53.755
that we're talking about;

00:37:52.571 --> 00:37:53.755
location is only one example.

00:37:53.755 --> 00:37:54.939
[ Silence ]

00:37:54.940 --> 00:37:56.407
But it will also strip out

00:37:54.940 --> 00:37:56.407
anything it doesn't recognize,

00:37:56.407 --> 00:37:57.874
[ Silence ]

00:37:57.876 --> 00:37:58.476
because it doesn't know whether

00:37:58.476 --> 00:37:59.076
[ Silence ]

00:37:59.077 --> 00:38:00.494
that might contain user

00:37:59.077 --> 00:38:00.494
identifiable information.

00:38:00.494 --> 00:38:01.911
[ Silence ]

00:38:01.913 --> 00:38:03.531
So that includes any

00:38:01.913 --> 00:38:03.531
metadata that uses identifiers

00:38:03.531 --> 00:38:05.149
[ Silence ]

00:38:05.150 --> 00:38:06.134
that you define yourself.

00:38:06.134 --> 00:38:07.118
[ Silence ]

00:38:07.119 --> 00:38:09.204
It will leave in some things

00:38:07.119 --> 00:38:09.204
like metadata that's important

00:38:09.204 --> 00:38:11.289
[ Silence ]

00:38:11.290 --> 00:38:11.873
to the structure of the movie

00:38:11.873 --> 00:38:12.456
[ Silence ]

00:38:12.457 --> 00:38:13.708
and chapters are the

00:38:12.457 --> 00:38:13.708
best example of that,

00:38:13.708 --> 00:38:14.959
[ Silence ]

00:38:14.960 --> 00:38:17.095
and also any commercial

00:38:14.960 --> 00:38:17.095
related data like your Apple ID.

00:38:17.095 --> 00:38:19.230
[ Silence ]

00:38:19.231 --> 00:38:21.416
So to use the MetadataItemFilter

00:38:19.231 --> 00:38:21.416
you're going to first

00:38:21.416 --> 00:38:23.601
[ Silence ]

00:38:23.602 --> 00:38:25.703
of all create your filter and

00:38:23.602 --> 00:38:25.703
feed it your original array

00:38:25.703 --> 00:38:27.804
[ Silence ]

00:38:27.806 --> 00:38:29.457
of metadata items using

00:38:27.806 --> 00:38:29.457
this metadataItemsFromArray

00:38:29.457 --> 00:38:31.108
[ Silence ]

00:38:31.109 --> 00:38:32.443
filteredByMetadataItemFilter

00:38:31.109 --> 00:38:32.443
method.

00:38:32.443 --> 00:38:33.777
[ Silence ]

00:38:33.779 --> 00:38:35.146
This is a companion to that

00:38:33.779 --> 00:38:35.146
other filtering method based

00:38:35.146 --> 00:38:36.513
[ Silence ]

00:38:36.515 --> 00:38:37.815
on identifiers we've

00:38:36.515 --> 00:38:37.815
been using all day

00:38:37.815 --> 00:38:39.115
[ Silence ]

00:38:39.117 --> 00:38:40.351
and then once you have

00:38:39.117 --> 00:38:40.351
your filtered array

00:38:40.351 --> 00:38:41.585
[ Silence ]

00:38:41.586 --> 00:38:43.554
of metadata items just set

00:38:41.586 --> 00:38:43.554
that on your AssetWriter

00:38:43.554 --> 00:38:45.522
[ Silence ]

00:38:45.524 --> 00:38:46.641
or ExportSession as

00:38:45.524 --> 00:38:46.641
you normally would.

00:38:46.641 --> 00:38:47.758
[ Silence ]

00:38:47.759 --> 00:38:48.793
Well actually I mentioned

00:38:47.759 --> 00:38:48.793
ExportSession

00:38:48.793 --> 00:38:49.827
[ Silence ]

00:38:49.828 --> 00:38:51.345
but things can be simple if

00:38:49.828 --> 00:38:51.345
you're using the ExportSession

00:38:51.345 --> 00:38:52.862
[ Silence ]

00:38:52.864 --> 00:38:54.732
and only want to

00:38:52.864 --> 00:38:54.732
copy the metadata

00:38:54.732 --> 00:38:56.600
[ Silence ]

00:38:56.601 --> 00:38:57.902
from the source asset

00:38:56.601 --> 00:38:57.902
and not add your own.

00:38:57.902 --> 00:38:59.203
[ Silence ]

00:38:59.204 --> 00:39:00.304
You just set the filter

00:38:59.204 --> 00:39:00.304
on the ExportSession

00:39:00.304 --> 00:39:01.404
[ Silence ]

00:39:01.406 --> 00:39:02.590
and it will actually do

00:39:01.406 --> 00:39:02.590
the filtering for you,

00:39:02.590 --> 00:39:03.774
[ Silence ]

00:39:03.775 --> 00:39:05.376
this will filter both

00:39:03.775 --> 00:39:05.376
static and timed metadata

00:39:05.376 --> 00:39:06.977
[ Silence ]

00:39:06.978 --> 00:39:08.746
but it will only filter the

00:39:06.978 --> 00:39:08.746
metadata from the source asset.

00:39:08.746 --> 00:39:10.514
[ Silence ]

00:39:10.515 --> 00:39:11.949
If you set your own metadata

00:39:10.515 --> 00:39:11.949
on the metadata property,

00:39:11.949 --> 00:39:13.383
[ Silence ]

00:39:13.385 --> 00:39:14.669
it won't filter that for you;

00:39:13.385 --> 00:39:14.669
you'll need to do the process

00:39:14.669 --> 00:39:15.953
[ Silence ]

00:39:15.954 --> 00:39:17.505
that I just described of

00:39:15.954 --> 00:39:17.505
doing the filtering yourself.

00:39:17.505 --> 00:39:19.056
[ Silence ]

00:39:19.057 --> 00:39:19.790
The only other thing

00:39:19.057 --> 00:39:19.790
to keep in mind is

00:39:19.790 --> 00:39:20.523
[ Silence ]

00:39:20.525 --> 00:39:21.509
that the export may

00:39:20.525 --> 00:39:21.509
take more time

00:39:21.509 --> 00:39:22.493
[ Silence ]

00:39:22.494 --> 00:39:23.895
when the filter is being used

00:39:22.494 --> 00:39:23.895
because it has to go through

00:39:23.895 --> 00:39:25.296
[ Silence ]

00:39:25.297 --> 00:39:26.497
and examine all of

00:39:25.297 --> 00:39:26.497
the metadata items.

00:39:26.497 --> 00:39:27.697
[ Silence ]

00:39:27.699 --> 00:39:28.849
So that's privacy.

00:39:28.849 --> 00:39:29.999
[ Silence ]

00:39:30.001 --> 00:39:31.919
Our last section of the talk

00:39:30.001 --> 00:39:31.919
today is some assorted best

00:39:31.919 --> 00:39:33.837
[ Silence ]

00:39:33.839 --> 00:39:35.039
practices when you are

00:39:33.839 --> 00:39:35.039
writing your own files

00:39:35.039 --> 00:39:36.239
[ Silence ]

00:39:36.241 --> 00:39:37.809
that contain metadata.

00:39:37.809 --> 00:39:39.377
[ Silence ]

00:39:39.378 --> 00:39:40.945
First up, what if you're

00:39:39.378 --> 00:39:40.945
writing timed metadata

00:39:40.945 --> 00:39:42.512
[ Silence ]

00:39:42.514 --> 00:39:44.248
and you have multiple

00:39:42.514 --> 00:39:44.248
streams of metadata

00:39:44.248 --> 00:39:45.982
[ Silence ]

00:39:45.984 --> 00:39:47.034
that use different identifiers.

00:39:47.034 --> 00:39:48.084
[ Silence ]

00:39:48.086 --> 00:39:49.036
How do you get those

00:39:48.086 --> 00:39:49.036
into the same file?

00:39:49.036 --> 00:39:49.986
[ Silence ]

00:39:49.988 --> 00:39:51.522
Well, we actually have the

00:39:49.988 --> 00:39:51.522
situation in the demo app,

00:39:51.522 --> 00:39:53.056
[ Silence ]

00:39:53.058 --> 00:39:54.575
we have that circle is comprised

00:39:53.058 --> 00:39:54.575
of two different pieces

00:39:54.575 --> 00:39:56.092
[ Silence ]

00:39:56.094 --> 00:39:57.812
of information, the

00:39:56.094 --> 00:39:57.812
position and the radius.

00:39:57.812 --> 00:39:59.530
[ Silence ]

00:39:59.531 --> 00:40:00.898
So we're representing these

00:40:00.898 --> 00:40:02.265
[ Silence ]

00:40:02.267 --> 00:40:03.734
and the demo app is two

00:40:02.267 --> 00:40:03.734
distinct streams of metadata.

00:40:03.734 --> 00:40:05.201
[ Silence ]

00:40:05.203 --> 00:40:06.354
And so the most obvious way

00:40:05.203 --> 00:40:06.354
I can think of to get this

00:40:06.354 --> 00:40:07.505
[ Silence ]

00:40:07.506 --> 00:40:10.274
into a file is to use two

00:40:07.506 --> 00:40:10.274
different AVAssetWriterInputs,

00:40:10.274 --> 00:40:13.042
[ Silence ]

00:40:13.044 --> 00:40:14.145
which result in having

00:40:13.044 --> 00:40:14.145
two metadata tracks

00:40:14.145 --> 00:40:15.246
[ Silence ]

00:40:15.247 --> 00:40:16.280
in the output file,

00:40:15.247 --> 00:40:16.280
pretty simple.

00:40:16.280 --> 00:40:17.313
[ Silence ]

00:40:17.315 --> 00:40:18.766
But there is another

00:40:17.315 --> 00:40:18.766
way you can do it,

00:40:18.766 --> 00:40:20.217
[ Silence ]

00:40:20.218 --> 00:40:22.019
you could instead combine those

00:40:20.218 --> 00:40:22.019
two different types of metadata

00:40:22.019 --> 00:40:23.820
[ Silence ]

00:40:23.822 --> 00:40:25.256
into one timed metadata

00:40:23.822 --> 00:40:25.256
group and write

00:40:25.256 --> 00:40:26.690
[ Silence ]

00:40:26.691 --> 00:40:27.691
that to a single

00:40:26.691 --> 00:40:27.691
AssetWriterInput

00:40:27.691 --> 00:40:28.691
[ Silence ]

00:40:28.693 --> 00:40:30.161
and that will result in

00:40:28.693 --> 00:40:30.161
only one metadata track

00:40:30.161 --> 00:40:31.629
[ Silence ]

00:40:31.630 --> 00:40:33.047
in the output file that contains

00:40:31.630 --> 00:40:33.047
multiple different kinds

00:40:33.047 --> 00:40:34.464
[ Silence ]

00:40:34.466 --> 00:40:35.133
of identifiers.

00:40:35.133 --> 00:40:35.800
[ Silence ]

00:40:35.801 --> 00:40:37.051
There are some advantages to

00:40:35.801 --> 00:40:37.051
this approach, not the least

00:40:37.051 --> 00:40:38.301
[ Silence ]

00:40:38.303 --> 00:40:39.904
of which is it can result

00:40:38.303 --> 00:40:39.904
in lower storage overhead

00:40:39.904 --> 00:40:41.505
[ Silence ]

00:40:41.506 --> 00:40:43.274
and therefore as we always

00:40:41.506 --> 00:40:43.274
see more efficient playback.

00:40:43.274 --> 00:40:45.042
[ Silence ]

00:40:45.043 --> 00:40:46.811
But there are of course

00:40:45.043 --> 00:40:46.811
pros and cons to everything.

00:40:46.811 --> 00:40:48.579
[ Silence ]

00:40:48.580 --> 00:40:49.847
So you'll definitely want

00:40:48.580 --> 00:40:49.847
to consider combining

00:40:49.847 --> 00:40:51.114
[ Silence ]

00:40:51.116 --> 00:40:52.316
into one track your

00:40:51.116 --> 00:40:52.316
different metadata

00:40:52.316 --> 00:40:53.516
[ Silence ]

00:40:53.518 --> 00:40:54.869
if they are used

00:40:53.518 --> 00:40:54.869
together during playback

00:40:54.869 --> 00:40:56.220
[ Silence ]

00:40:56.221 --> 00:40:57.205
and they have identical timing.

00:40:57.205 --> 00:40:58.189
[ Silence ]

00:40:58.190 --> 00:40:59.324
This is definitely the case

00:40:58.190 --> 00:40:59.324
with the example we just saw

00:40:59.324 --> 00:41:00.458
[ Silence ]

00:41:00.459 --> 00:41:02.076
with the circle center

00:41:00.459 --> 00:41:02.076
and the circle radius.

00:41:02.076 --> 00:41:03.693
[ Silence ]

00:41:03.695 --> 00:41:05.313
If these are not true then

00:41:03.695 --> 00:41:05.313
you might not want to combine.

00:41:05.313 --> 00:41:06.931
[ Silence ]

00:41:06.932 --> 00:41:08.066
And in fact one instance where

00:41:06.932 --> 00:41:08.066
you definitely do not want

00:41:08.066 --> 00:41:09.200
[ Silence ]

00:41:09.201 --> 00:41:10.818
to combine, is if

00:41:09.201 --> 00:41:10.818
you have one type

00:41:10.818 --> 00:41:12.435
[ Silence ]

00:41:12.437 --> 00:41:14.071
of metadata that's associated

00:41:12.437 --> 00:41:14.071
with another track in the file,

00:41:14.071 --> 00:41:15.705
[ Silence ]

00:41:15.707 --> 00:41:16.991
so that's like our

00:41:15.707 --> 00:41:16.991
annotations are associated

00:41:16.991 --> 00:41:18.275
[ Silence ]

00:41:18.276 --> 00:41:19.443
with the video track, but

00:41:18.276 --> 00:41:19.443
then you have another type

00:41:19.443 --> 00:41:20.610
[ Silence ]

00:41:20.612 --> 00:41:21.963
of metadata like location

00:41:20.612 --> 00:41:21.963
that is associated

00:41:21.963 --> 00:41:23.314
[ Silence ]

00:41:23.315 --> 00:41:23.965
with the entire asset.

00:41:23.965 --> 00:41:24.615
[ Silence ]

00:41:24.616 --> 00:41:25.900
You don't want to combine

00:41:24.616 --> 00:41:25.900
those into one track,

00:41:25.900 --> 00:41:27.184
[ Silence ]

00:41:27.185 --> 00:41:29.453
otherwise your location in that

00:41:27.185 --> 00:41:29.453
example will become mistakenly

00:41:29.453 --> 00:41:31.721
[ Silence ]

00:41:31.723 --> 00:41:32.506
associated with just

00:41:31.723 --> 00:41:32.506
the video track,

00:41:32.506 --> 00:41:33.289
[ Silence ]

00:41:33.291 --> 00:41:34.091
and that's not what you want.

00:41:34.091 --> 00:41:34.891
[ Silence ]

00:41:34.893 --> 00:41:35.426
So that's how to deal

00:41:35.426 --> 00:41:35.959
[ Silence ]

00:41:35.961 --> 00:41:37.395
with multiple streams

00:41:35.961 --> 00:41:37.395
of timed metadata.

00:41:37.395 --> 00:41:38.829
[ Silence ]

00:41:38.830 --> 00:41:41.465
Next topic is duration of

00:41:38.830 --> 00:41:41.465
your timed metadata groups,

00:41:41.465 --> 00:41:44.100
[ Silence ]

00:41:44.102 --> 00:41:44.869
when you get a timed

00:41:44.102 --> 00:41:44.869
metadata group

00:41:44.869 --> 00:41:45.636
[ Silence ]

00:41:45.637 --> 00:41:46.520
from AVFoundation

00:41:45.637 --> 00:41:46.520
it's always going

00:41:46.520 --> 00:41:47.403
[ Silence ]

00:41:47.405 --> 00:41:49.523
to have a fully formed

00:41:47.405 --> 00:41:49.523
time range.

00:41:49.523 --> 00:41:51.641
[ Silence ]

00:41:51.643 --> 00:41:53.194
So that means it will have

00:41:51.643 --> 00:41:53.194
a start time and a duration.

00:41:53.194 --> 00:41:54.745
[ Silence ]

00:41:54.746 --> 00:41:56.030
We actually recommend when you

00:41:54.746 --> 00:41:56.030
make your own timed metadata

00:41:56.030 --> 00:41:57.314
[ Silence ]

00:41:57.315 --> 00:41:58.666
groups for a pending

00:41:57.315 --> 00:41:58.666
with the AVAssetWriter

00:41:58.666 --> 00:42:00.017
[ Silence ]

00:42:00.018 --> 00:42:01.252
that you don't bother

00:42:00.018 --> 00:42:01.252
giving us a duration.

00:42:01.252 --> 00:42:02.486
[ Silence ]

00:42:02.487 --> 00:42:03.888
And to see how that works,

00:42:02.487 --> 00:42:03.888
here's an example of a group

00:42:03.888 --> 00:42:05.289
[ Silence ]

00:42:05.290 --> 00:42:06.691
that starts at time 0 but

00:42:05.290 --> 00:42:06.691
it doesn't have a duration

00:42:06.691 --> 00:42:08.092
[ Silence ]

00:42:08.093 --> 00:42:09.126
so how do we know when it ends?

00:42:09.126 --> 00:42:10.159
[ Silence ]

00:42:10.161 --> 00:42:11.278
Well, of course we'll wait

00:42:10.161 --> 00:42:11.278
until you append the next one

00:42:11.278 --> 00:42:12.395
[ Silence ]

00:42:12.397 --> 00:42:13.914
and then we'll say that,

00:42:12.397 --> 00:42:13.914
"Okay, the end time

00:42:13.914 --> 00:42:15.431
[ Silence ]

00:42:15.433 --> 00:42:16.484
of the first group is the same

00:42:16.484 --> 00:42:17.535
[ Silence ]

00:42:17.536 --> 00:42:18.653
as the start time

00:42:17.536 --> 00:42:18.653
of the next one."

00:42:18.653 --> 00:42:19.770
[ Silence ]

00:42:19.771 --> 00:42:20.921
So this ensures that your

00:42:19.771 --> 00:42:20.921
metadata track is going

00:42:20.921 --> 00:42:22.071
[ Silence ]

00:42:22.073 --> 00:42:24.792
to have a continuous stream of

00:42:22.073 --> 00:42:24.792
contiguous metadata and we think

00:42:24.792 --> 00:42:27.511
[ Silence ]

00:42:27.512 --> 00:42:29.213
that for most cases this is the

00:42:27.512 --> 00:42:29.213
best way to store your metadata.

00:42:29.213 --> 00:42:30.914
[ Silence ]

00:42:30.916 --> 00:42:31.849
The way you accomplish this is,

00:42:31.849 --> 00:42:32.782
[ Silence ]

00:42:32.784 --> 00:42:33.617
when you're making

00:42:32.784 --> 00:42:33.617
your time range,

00:42:33.617 --> 00:42:34.450
[ Silence ]

00:42:34.452 --> 00:42:36.487
you just use KCMTimeInvalid

00:42:34.452 --> 00:42:36.487
for your duration

00:42:36.487 --> 00:42:38.522
[ Silence ]

00:42:38.523 --> 00:42:39.490
and we'll take care of the rest.

00:42:39.490 --> 00:42:40.457
[ Silence ]

00:42:40.458 --> 00:42:42.092
We do recognize that there are

00:42:40.458 --> 00:42:42.092
cases where you might not want

00:42:42.092 --> 00:42:43.726
[ Silence ]

00:42:43.728 --> 00:42:45.079
to have contiguous

00:42:43.728 --> 00:42:45.079
metadata, you might want

00:42:45.079 --> 00:42:46.430
[ Silence ]

00:42:46.431 --> 00:42:48.282
to author an explicit gap into

00:42:46.431 --> 00:42:48.282
your metadata stream and so,

00:42:48.282 --> 00:42:50.133
[ Silence ]

00:42:50.135 --> 00:42:51.335
for that, our recommendation

00:42:50.135 --> 00:42:51.335
is that you give us

00:42:51.335 --> 00:42:52.535
[ Silence ]

00:42:52.537 --> 00:42:54.088
in the middle there a group

00:42:52.537 --> 00:42:54.088
that contains zero items.

00:42:54.088 --> 00:42:55.639
[ Silence ]

00:42:55.640 --> 00:42:57.024
This is the best way to

00:42:55.640 --> 00:42:57.024
author a gap in the metadata.

00:42:57.024 --> 00:42:58.408
[ Silence ]

00:42:58.410 --> 00:43:00.695
And you can see we just do that

00:42:58.410 --> 00:43:00.695
by presenting an empty array

00:43:00.695 --> 00:43:02.980
[ Silence ]

00:43:02.981 --> 00:43:04.165
when we're creating our

00:43:02.981 --> 00:43:04.165
timed metadata group.

00:43:04.165 --> 00:43:05.349
[ Silence ]

00:43:05.350 --> 00:43:06.917
Notice that we're still

00:43:05.350 --> 00:43:06.917
using KCMTimeInvalid

00:43:06.917 --> 00:43:08.484
[ Silence ]

00:43:08.486 --> 00:43:09.320
for our duration here.

00:43:09.320 --> 00:43:10.154
[ Silence ]

00:43:10.155 --> 00:43:11.706
Just tell us when the beginning

00:43:10.155 --> 00:43:11.706
of the metadata silence,

00:43:11.706 --> 00:43:13.257
[ Silence ]

00:43:13.258 --> 00:43:15.042
so to speak, is and we'll figure

00:43:13.258 --> 00:43:15.042
out how long it lasts based

00:43:15.042 --> 00:43:16.826
[ Silence ]

00:43:16.828 --> 00:43:18.612
on when you append your

00:43:16.828 --> 00:43:18.612
next non-empty group.

00:43:18.612 --> 00:43:20.396
[ Silence ]

00:43:20.398 --> 00:43:21.849
So that's how you write

00:43:20.398 --> 00:43:21.849
gaps in your metadata.

00:43:21.849 --> 00:43:23.300
[ Silence ]

00:43:23.301 --> 00:43:24.335
Our last best practice,

00:43:24.335 --> 00:43:25.369
[ Silence ]

00:43:25.370 --> 00:43:26.437
I mentioned output

00:43:25.370 --> 00:43:26.437
file type before

00:43:26.437 --> 00:43:27.504
[ Silence ]

00:43:27.505 --> 00:43:29.139
and here's the longer

00:43:27.505 --> 00:43:29.139
explanation.

00:43:29.139 --> 00:43:30.773
[ Silence ]

00:43:30.775 --> 00:43:31.492
Well, AssetWriter

00:43:31.492 --> 00:43:32.209
[ Silence ]

00:43:32.210 --> 00:43:33.611
and AssetExportSessions

00:43:32.210 --> 00:43:33.611
support writing

00:43:33.611 --> 00:43:35.012
[ Silence ]

00:43:35.013 --> 00:43:36.747
to a wide variety of file types.

00:43:36.747 --> 00:43:38.481
[ Silence ]

00:43:38.483 --> 00:43:39.683
[ Silence ]

00:43:39.684 --> 00:43:40.968
You've got QuickTime

00:43:39.684 --> 00:43:40.968
movie, MPEG4, and all sorts

00:43:40.968 --> 00:43:42.252
[ Silence ]

00:43:42.253 --> 00:43:43.771
of other kind of file types

00:43:43.771 --> 00:43:45.289
[ Silence ]

00:43:45.290 --> 00:43:47.325
and those file types can carry

00:43:45.290 --> 00:43:47.325
different kinds of metadata;

00:43:47.325 --> 00:43:49.360
[ Silence ]

00:43:49.361 --> 00:43:50.495
some have more restrictions

00:43:49.361 --> 00:43:50.495
than others about what kind

00:43:50.495 --> 00:43:51.629
[ Silence ]

00:43:51.630 --> 00:43:52.513
of metadata can go

00:43:51.630 --> 00:43:52.513
into that file type.

00:43:52.513 --> 00:43:53.396
[ Silence ]

00:43:53.398 --> 00:43:55.383
So the easiest situation, say

00:43:53.398 --> 00:43:55.383
if you have an ExportSession

00:43:55.383 --> 00:43:57.368
[ Silence ]

00:43:57.369 --> 00:43:59.370
and you're going from one,

00:43:57.369 --> 00:43:59.370
from the same file type

00:43:59.370 --> 00:44:01.371
[ Silence ]

00:44:01.373 --> 00:44:02.073
as your source to the output,

00:44:02.073 --> 00:44:02.773
[ Silence ]

00:44:02.774 --> 00:44:04.392
so for this example they're

00:44:02.774 --> 00:44:04.392
both QuickTime movie files.

00:44:04.392 --> 00:44:06.010
[ Silence ]

00:44:06.011 --> 00:44:07.128
This is the easiest

00:44:06.011 --> 00:44:07.128
way to ensure that all

00:44:07.128 --> 00:44:08.245
[ Silence ]

00:44:08.246 --> 00:44:09.897
of that data is actually going

00:44:08.246 --> 00:44:09.897
to make it into the output file.

00:44:09.897 --> 00:44:11.548
[ Silence ]

00:44:11.549 --> 00:44:13.050
If instead you're using a

00:44:11.549 --> 00:44:13.050
different output file type,

00:44:13.050 --> 00:44:14.551
[ Silence ]

00:44:14.552 --> 00:44:15.619
like MPEG4 in this example,

00:44:15.619 --> 00:44:16.686
[ Silence ]

00:44:16.688 --> 00:44:18.239
then some different things

00:44:16.688 --> 00:44:18.239
are going to have to happen.

00:44:18.239 --> 00:44:19.790
[ Silence ]

00:44:19.791 --> 00:44:20.975
You notice those last few

00:44:19.791 --> 00:44:20.975
items didn't quite make it

00:44:20.975 --> 00:44:22.159
[ Silence ]

00:44:22.160 --> 00:44:22.793
into the output file;

00:44:22.793 --> 00:44:23.426
[ Silence ]

00:44:23.428 --> 00:44:24.545
it's because they have no

00:44:23.428 --> 00:44:24.545
equivalent representation

00:44:24.545 --> 00:44:25.662
[ Silence ]

00:44:25.664 --> 00:44:27.048
that works with an MPEG4 file.

00:44:27.048 --> 00:44:28.432
[ Silence ]

00:44:28.433 --> 00:44:29.200
If you're looking

00:44:28.433 --> 00:44:29.200
closely you'll also notice

00:44:29.200 --> 00:44:29.967
[ Silence ]

00:44:29.968 --> 00:44:31.352
that those top two

00:44:29.968 --> 00:44:31.352
items have changed,

00:44:31.352 --> 00:44:32.736
[ Silence ]

00:44:32.737 --> 00:44:34.371
although they sound very similar

00:44:32.737 --> 00:44:34.371
they are slightly different

00:44:34.371 --> 00:44:36.005
[ Silence ]

00:44:36.007 --> 00:44:37.141
identifiers because that's

00:44:36.007 --> 00:44:37.141
the kind of identifier

00:44:37.141 --> 00:44:38.275
[ Silence ]

00:44:38.276 --> 00:44:38.959
that works with MPEG4.

00:44:38.959 --> 00:44:39.642
[ Silence ]

00:44:39.644 --> 00:44:41.679
So both AssetExportSession and

00:44:39.644 --> 00:44:41.679
AssetWriter will do the sort

00:44:41.679 --> 00:44:43.714
[ Silence ]

00:44:43.715 --> 00:44:44.465
of three step process.

00:44:44.465 --> 00:44:45.215
[ Silence ]

00:44:45.216 --> 00:44:47.134
First, they'll try to pass

00:44:45.216 --> 00:44:47.134
that data through directly

00:44:47.134 --> 00:44:49.052
[ Silence ]

00:44:49.054 --> 00:44:50.955
if possible and, if not, they'll

00:44:49.054 --> 00:44:50.955
try to convert the identifier

00:44:50.955 --> 00:44:52.856
[ Silence ]

00:44:52.857 --> 00:44:53.791
into an equivalent

00:44:52.857 --> 00:44:53.791
representation

00:44:53.791 --> 00:44:54.725
[ Silence ]

00:44:54.726 --> 00:44:55.609
in the output file type.

00:44:55.609 --> 00:44:56.492
[ Silence ]

00:44:56.494 --> 00:44:58.095
If neither of those work, we

00:44:56.494 --> 00:44:58.095
have no choice but to just drop

00:44:58.095 --> 00:44:59.696
[ Silence ]

00:44:59.698 --> 00:45:00.581
that piece of metadata

00:44:59.698 --> 00:45:00.581
on the floor.

00:45:00.581 --> 00:45:01.464
[ Silence ]

00:45:01.466 --> 00:45:03.701
So in terms of guidance on how

00:45:01.466 --> 00:45:03.701
to choose an output file type,

00:45:03.701 --> 00:45:05.936
[ Silence ]

00:45:05.937 --> 00:45:07.004
well, my two recommendations

00:45:05.937 --> 00:45:07.004
are,

00:45:07.004 --> 00:45:08.071
[ Silence ]

00:45:08.073 --> 00:45:10.424
if you are using say an

00:45:08.073 --> 00:45:10.424
ExportSession to copy all

00:45:10.424 --> 00:45:12.775
[ Silence ]

00:45:12.777 --> 00:45:15.012
of the metadata, timed or

00:45:12.777 --> 00:45:15.012
otherwise, from the source asset

00:45:15.012 --> 00:45:17.247
[ Silence ]

00:45:17.248 --> 00:45:18.716
to your destination file,

00:45:17.248 --> 00:45:18.716
the best way is to try

00:45:18.716 --> 00:45:20.184
[ Silence ]

00:45:20.185 --> 00:45:21.452
and use the same file type

00:45:20.185 --> 00:45:21.452
that you started with,

00:45:21.452 --> 00:45:22.719
[ Silence ]

00:45:22.721 --> 00:45:24.138
and if you don't know what the

00:45:22.721 --> 00:45:24.138
file type is you can use the

00:45:24.138 --> 00:45:25.555
[ Silence ]

00:45:25.557 --> 00:45:26.841
NSURLTypeIdentifierKey

00:45:25.557 --> 00:45:26.841
to find out.

00:45:26.841 --> 00:45:28.125
[ Silence ]

00:45:28.126 --> 00:45:30.361
You can also always use

00:45:28.126 --> 00:45:30.361
the QuickTime Movie file

00:45:30.361 --> 00:45:32.596
[ Silence ]

00:45:32.597 --> 00:45:34.832
because that is going to

00:45:32.597 --> 00:45:34.832
have the greatest chance

00:45:34.832 --> 00:45:37.067
[ Silence ]

00:45:37.068 --> 00:45:38.435
of supporting your metadata

00:45:37.068 --> 00:45:38.435
no matter where it came from.

00:45:38.435 --> 00:45:39.802
[ Silence ]

00:45:39.804 --> 00:45:41.038
If AVFoundation supports

00:45:39.804 --> 00:45:41.038
it, there's a good chance

00:45:41.038 --> 00:45:42.272
[ Silence ]

00:45:42.273 --> 00:45:43.474
that it will be supported

00:45:42.273 --> 00:45:43.474
by the QuickTime movie file.

00:45:43.474 --> 00:45:44.675
[ Silence ]

00:45:44.676 --> 00:45:45.743
Of course, this is the only way

00:45:45.743 --> 00:45:46.810
[ Silence ]

00:45:46.811 --> 00:45:47.695
if you're writing

00:45:46.811 --> 00:45:47.695
timed metadata,

00:45:47.695 --> 00:45:48.579
[ Silence ]

00:45:48.580 --> 00:45:49.897
to get your timed

00:45:48.580 --> 00:45:49.897
metadata into a file is

00:45:49.897 --> 00:45:51.214
[ Silence ]

00:45:51.216 --> 00:45:52.450
to use QuickTime Movie file;

00:45:51.216 --> 00:45:52.450
it's the only file form

00:45:52.450 --> 00:45:53.684
[ Silence ]

00:45:53.685 --> 00:45:54.702
that supports it right now.

00:45:54.702 --> 00:45:55.719
[ Silence ]

00:45:55.720 --> 00:45:57.087
Of course good advice is always

00:45:57.087 --> 00:45:58.454
[ Silence ]

00:45:58.456 --> 00:45:59.573
to check the results,

00:45:58.456 --> 00:45:59.573
no matter what.

00:45:59.573 --> 00:46:00.690
[ Silence ]

00:46:00.692 --> 00:46:02.376
Check that your output files

00:46:00.692 --> 00:46:02.376
contain the kind of metadata

00:46:02.376 --> 00:46:04.060
[ Silence ]

00:46:04.062 --> 00:46:05.463
that you expect, all the

00:46:04.062 --> 00:46:05.463
metadata that you expect

00:46:05.463 --> 00:46:06.864
[ Silence ]

00:46:06.865 --> 00:46:07.915
and you can choose to

00:46:06.865 --> 00:46:07.915
use some of the APIs

00:46:07.915 --> 00:46:08.965
[ Silence ]

00:46:08.967 --> 00:46:09.717
that we've already

00:46:08.967 --> 00:46:09.717
talked about if you want

00:46:09.717 --> 00:46:10.467
[ Silence ]

00:46:10.468 --> 00:46:11.602
to do that at runtime.

00:46:11.602 --> 00:46:12.736
[ Silence ]

00:46:12.737 --> 00:46:14.371
Some guidance if that

00:46:12.737 --> 00:46:14.371
doesn't end up being the case:

00:46:14.371 --> 00:46:16.005
[ Silence ]

00:46:16.007 --> 00:46:17.157
if you don't get all the

00:46:16.007 --> 00:46:17.157
metadata that you expect, well,

00:46:17.157 --> 00:46:18.307
[ Silence ]

00:46:18.309 --> 00:46:19.343
you can try to do the

00:46:18.309 --> 00:46:19.343
conversion yourself.

00:46:19.343 --> 00:46:20.377
[ Silence ]

00:46:20.378 --> 00:46:21.762
Especially if you have a

00:46:20.378 --> 00:46:21.762
custom identifier and are going

00:46:21.762 --> 00:46:23.146
[ Silence ]

00:46:23.148 --> 00:46:24.715
to a file type that doesn't

00:46:23.148 --> 00:46:24.715
support your custom identifier,

00:46:24.715 --> 00:46:26.282
[ Silence ]

00:46:26.284 --> 00:46:27.868
take a look at that long list

00:46:26.284 --> 00:46:27.868
of built-in identifiers we have

00:46:27.868 --> 00:46:29.452
[ Silence ]

00:46:29.454 --> 00:46:30.521
and see if there is something

00:46:29.454 --> 00:46:30.521
that's roughly equivalent

00:46:30.521 --> 00:46:31.588
[ Silence ]

00:46:31.589 --> 00:46:32.489
to what you're trying

00:46:31.589 --> 00:46:32.489
to store and you can do

00:46:32.489 --> 00:46:33.389
[ Silence ]

00:46:33.391 --> 00:46:34.224
that conversion yourself.

00:46:34.224 --> 00:46:35.057
[ Silence ]

00:46:35.059 --> 00:46:35.926
One particular example

00:46:35.059 --> 00:46:35.926
I want to call

00:46:35.926 --> 00:46:36.793
[ Silence ]

00:46:36.795 --> 00:46:38.262
out that involves only

00:46:36.795 --> 00:46:38.262
built-in identifiers is

00:46:38.262 --> 00:46:39.729
[ Silence ]

00:46:39.731 --> 00:46:41.415
when you're trying to

00:46:39.731 --> 00:46:41.415
go from ID3 to iTunes,

00:46:41.415 --> 00:46:43.099
[ Silence ]

00:46:43.101 --> 00:46:44.218
well AVFoundation

00:46:43.101 --> 00:46:44.218
currently isn't going to do

00:46:44.218 --> 00:46:45.335
[ Silence ]

00:46:45.336 --> 00:46:46.320
that conversion for you.

00:46:46.320 --> 00:46:47.304
[ Silence ]

00:46:47.305 --> 00:46:48.405
But there's no reason you

00:46:47.305 --> 00:46:48.405
couldn't do that yourself,

00:46:48.405 --> 00:46:49.505
[ Silence ]

00:46:49.507 --> 00:46:50.991
so once again just take a look

00:46:49.507 --> 00:46:50.991
at our long list of identifiers

00:46:50.991 --> 00:46:52.475
[ Silence ]

00:46:52.477 --> 00:46:54.645
and match them up and do the

00:46:52.477 --> 00:46:54.645
conversion in your own code.

00:46:54.645 --> 00:46:56.813
[ Silence ]

00:46:56.815 --> 00:46:58.082
So that is the end of the talk.

00:46:58.082 --> 00:46:59.349
[ Silence ]

00:46:59.350 --> 00:47:01.034
See what we covered: we talked

00:46:59.350 --> 00:47:01.034
obviously a lot about metadata

00:47:01.034 --> 00:47:02.718
[ Silence ]

00:47:02.720 --> 00:47:03.754
in AVFoundation,

00:47:02.720 --> 00:47:03.754
we talked about all

00:47:03.754 --> 00:47:04.788
[ Silence ]

00:47:04.789 --> 00:47:06.206
of the different classes

00:47:04.789 --> 00:47:06.206
you can use for inspection,

00:47:06.206 --> 00:47:07.623
[ Silence ]

00:47:07.625 --> 00:47:08.859
we talked about AVAsset

00:47:07.625 --> 00:47:08.859
and AVMetadataItem

00:47:08.859 --> 00:47:10.093
[ Silence ]

00:47:10.094 --> 00:47:11.361
and how those work

00:47:10.094 --> 00:47:11.361
together and also authoring,

00:47:11.361 --> 00:47:12.628
[ Silence ]

00:47:12.630 --> 00:47:13.847
we talked about the AssetWriter,

00:47:13.847 --> 00:47:15.064
[ Silence ]

00:47:15.066 --> 00:47:16.634
the AssetExportSession even

00:47:15.066 --> 00:47:16.634
briefly on the capture audio

00:47:16.634 --> 00:47:18.202
[ Silence ]

00:47:18.203 --> 00:47:19.220
and movie file outputs.

00:47:19.220 --> 00:47:20.237
[ Silence ]

00:47:20.238 --> 00:47:21.689
We dove into timed metadata,

00:47:20.238 --> 00:47:21.689
including all the new features

00:47:21.689 --> 00:47:23.140
[ Silence ]

00:47:23.141 --> 00:47:24.642
that enable things like

00:47:23.141 --> 00:47:24.642
the dynamic location

00:47:24.642 --> 00:47:26.143
[ Silence ]

00:47:26.144 --> 00:47:28.195
and your own timed metadata

00:47:26.144 --> 00:47:28.195
like the annotation demo.

00:47:28.195 --> 00:47:30.246
[ Silence ]

00:47:30.248 --> 00:47:31.665
We also talked about

00:47:30.248 --> 00:47:31.665
privacy considerations

00:47:31.665 --> 00:47:33.082
[ Silence ]

00:47:33.084 --> 00:47:34.735
and some best practices like how

00:47:33.084 --> 00:47:34.735
to choose the right file type.

00:47:34.735 --> 00:47:36.386
[ Silence ]

00:47:36.387 --> 00:47:38.338
So for more information, you

00:47:36.387 --> 00:47:38.338
can contact our evangelism team

00:47:38.338 --> 00:47:40.289
[ Silence ]

00:47:40.291 --> 00:47:41.191
or see our programing guide,

00:47:41.191 --> 00:47:42.091
[ Silence ]

00:47:42.093 --> 00:47:43.260
there are some other

00:47:42.093 --> 00:47:43.260
related sessions you might be

00:47:43.260 --> 00:47:44.427
[ Silence ]

00:47:44.429 --> 00:47:44.962
interested in.

00:47:44.962 --> 00:47:45.495
[ Silence ]

00:47:45.496 --> 00:47:46.280
If you missed this

00:47:45.496 --> 00:47:46.280
morning's presentation

00:47:46.280 --> 00:47:47.064
[ Silence ]

00:47:47.065 --> 00:47:47.948
on "Modern Media

00:47:47.065 --> 00:47:47.948
Playback", you can catch

00:47:47.948 --> 00:47:48.831
[ Silence ]

00:47:48.833 --> 00:47:49.850
that on the video recording.

00:47:49.850 --> 00:47:50.867
[ Silence ]

00:47:50.869 --> 00:47:53.170
Tomorrow there is also a

00:47:50.869 --> 00:47:53.170
camera capture talk focusing

00:47:53.170 --> 00:47:55.471
[ Silence ]

00:47:55.473 --> 00:47:56.290
on manual controls.

00:47:56.290 --> 00:47:57.107
[ Silence ]

00:47:57.108 --> 00:47:58.892
And on Thursday we'll have

00:47:57.108 --> 00:47:58.892
a talk about direct access

00:47:58.892 --> 00:48:00.676
[ Silence ]

00:48:00.678 --> 00:48:02.012
to video encoding and

00:48:00.678 --> 00:48:02.012
decoding, which I'm sure a lot

00:48:02.012 --> 00:48:03.346
[ Silence ]

00:48:03.348 --> 00:48:04.832
of you will be interested in.

00:48:04.832 --> 00:48:06.316
[ Silence ]

00:48:06.317 --> 00:48:09.820
[ Silence ]

00:48:09.820 --> 00:48:13.323
[ Silence ]

00:48:13.324 --> 00:48:13.356
[ Silence ]
