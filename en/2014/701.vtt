WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:13.836 --> 00:00:15.356 A:middle
&gt;&gt; Good morning,
ladies and gentleman.

00:00:15.896 --> 00:00:16.996 A:middle
Thank you for coming today.

00:00:17.226 --> 00:00:18.426 A:middle
My name is Robert Walsh,

00:00:18.426 --> 00:00:20.496 A:middle
and I manage the Platform
Accessories team at Apple.

00:00:20.496 --> 00:00:22.326 A:middle
And today we're going
to be talking

00:00:22.326 --> 00:00:26.206 A:middle
about designing accessories
for iOS and OS X.

00:00:27.816 --> 00:00:29.896 A:middle
So, we've got a packed
session, so let's dive right in.

00:00:31.056 --> 00:00:33.996 A:middle
We're going to start by talking
about accessory interfaces

00:00:33.996 --> 00:00:36.066 A:middle
and the protocols you speak
over those interfaces,

00:00:36.986 --> 00:00:39.526 A:middle
and then the fun bit,
we'll get on to what's new

00:00:39.526 --> 00:00:41.836 A:middle
in iOS 8 and OS X Yosemite.

00:00:42.826 --> 00:00:44.916 A:middle
And finally, we'll wrap
up with some information

00:00:44.916 --> 00:00:46.546 A:middle
on the important
programs that you need

00:00:46.546 --> 00:00:51.066 A:middle
to know about, such as MFI.

00:00:51.396 --> 00:00:54.026 A:middle
Before we start, though, I'd
like to draw your attention

00:00:54.026 --> 00:00:55.856 A:middle
to the accessory
ecosystem as a whole.

00:00:55.856 --> 00:00:59.186 A:middle
I think if we were to describe
the accessory ecosystem

00:00:59.186 --> 00:01:00.826 A:middle
in one word, it would be "huge."


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:59.186 --> 00:01:00.826 A:middle
in one word, it would be "huge."

00:01:01.916 --> 00:01:04.836 A:middle
We couldn't even begin to go
through all of the categories

00:01:04.836 --> 00:01:07.126 A:middle
of devices which you,
you have produced for us.

00:01:08.286 --> 00:01:10.376 A:middle
So, this, this session
we're going to focus

00:01:10.376 --> 00:01:13.936 A:middle
on two particular areas,
health and fitness accessories,

00:01:13.936 --> 00:01:18.116 A:middle
which is the HealthKit framework
which you heard about yesterday,

00:01:18.926 --> 00:01:22.366 A:middle
and home automation
accessories, which is part

00:01:23.226 --> 00:01:26.066 A:middle
of the HomeKit framework.

00:01:26.066 --> 00:01:27.706 A:middle
So, first, let's
recap our interfaces.

00:01:28.706 --> 00:01:31.646 A:middle
All of our products
support Bluetooth and Wi-Fi,

00:01:31.646 --> 00:01:34.666 A:middle
and on iOS devices,
you have the option

00:01:34.666 --> 00:01:36.666 A:middle
of a wire connection via
the Lightning connector.

00:01:37.856 --> 00:01:42.016 A:middle
On OS X, those platforms provide
USB and Thunderbolt support.

00:01:42.016 --> 00:01:44.966 A:middle
And both of our platforms
also provide support

00:01:45.206 --> 00:01:48.206 A:middle
for a 3-and-a-half
mm headphone jack.

00:01:49.006 --> 00:01:51.326 A:middle
Let's start with Bluetooth.

00:01:51.376 --> 00:01:53.516 A:middle
We've got some interesting new
Bluetooth features this year.

00:01:56.766 --> 00:01:58.876 A:middle
First up, Bluetooth Low Energy.

00:01:59.776 --> 00:02:01.966 A:middle
Now, this isn't the new
interface to our device.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:01:59.776 --> 00:02:01.966 A:middle
Now, this isn't the new
interface to our device.

00:02:02.376 --> 00:02:04.226 A:middle
We already support
general communication,

00:02:04.226 --> 00:02:06.306 A:middle
which are applications via
the core Bluetooth framework,

00:02:07.176 --> 00:02:09.476 A:middle
and we support the Apple
Notification Center service,

00:02:09.856 --> 00:02:11.206 A:middle
which allows your accessory

00:02:11.206 --> 00:02:13.596 A:middle
to receive notifications
from the iOS device.

00:02:15.006 --> 00:02:18.916 A:middle
We also support low-energy audio
for producing hearing aids.

00:02:20.156 --> 00:02:21.596 A:middle
And of course we
support iBeacon,

00:02:22.076 --> 00:02:23.566 A:middle
which provides location
services.

00:02:24.496 --> 00:02:26.986 A:middle
This year, we're
adding two new profiles

00:02:26.986 --> 00:02:27.846 A:middle
to Bluetooth Low Energy.

00:02:29.026 --> 00:02:31.146 A:middle
These are support for
HealthKit accessories

00:02:31.146 --> 00:02:34.246 A:middle
and HomeKit accessories,
and we'll go

00:02:34.246 --> 00:02:37.216 A:middle
into a lot more detail
about those shortly.

00:02:37.616 --> 00:02:39.266 A:middle
I also want to draw
your attention

00:02:39.266 --> 00:02:41.146 A:middle
to the Apple Notification
Center service.

00:02:42.516 --> 00:02:44.866 A:middle
We introduced this in iOS 7,

00:02:45.516 --> 00:02:47.996 A:middle
and this year we're adding some
enhancements to the feature.

00:02:50.066 --> 00:02:52.206 A:middle
We are now allowing your
accessory to respond

00:02:52.206 --> 00:02:55.656 A:middle
to notifications with a
positive or a negative response.

00:02:56.676 --> 00:02:57.426 A:middle
So, what does that mean?

00:02:58.226 --> 00:02:59.746 A:middle
Supposing you receive
a notification

00:02:59.746 --> 00:03:00.866 A:middle
of an incoming phone call.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:02:59.746 --> 00:03:00.866 A:middle
of an incoming phone call.

00:03:01.476 --> 00:03:03.606 A:middle
A positive response
might answer the call.

00:03:03.666 --> 00:03:05.256 A:middle
A negative response
might decline it.

00:03:06.416 --> 00:03:09.376 A:middle
Another example might be
a voicemail notification.

00:03:10.126 --> 00:03:12.946 A:middle
A positive response in that case
might call back the originator

00:03:12.946 --> 00:03:13.816 A:middle
of the call.

00:03:14.126 --> 00:03:15.526 A:middle
A negative response
might dismiss it

00:03:15.526 --> 00:03:16.626 A:middle
from the Notification Center.

00:03:16.626 --> 00:03:19.886 A:middle
Now, there's something
I want to point out,

00:03:21.276 --> 00:03:23.736 A:middle
which is that we don't really
set in stone what those positive

00:03:23.736 --> 00:03:28.296 A:middle
and negative responses actually
do, and we, we may change them

00:03:28.296 --> 00:03:30.416 A:middle
in future releases for
any given notification.

00:03:31.416 --> 00:03:33.696 A:middle
So, it's important when you're
presenting this to your user

00:03:33.696 --> 00:03:36.136 A:middle
as an interface that you
present it in the generic manner

00:03:36.136 --> 00:03:38.436 A:middle
and not actually tie it to
what you expect the behavior

00:03:38.436 --> 00:03:38.866 A:middle
might be.

00:03:40.226 --> 00:03:43.616 A:middle
Let's move on to
Bluetooth Classic.

00:03:44.686 --> 00:03:45.676 A:middle
We have an alphabet soup

00:03:45.676 --> 00:03:47.516 A:middle
of Bluetooth Classic
profiles that we support.

00:03:47.866 --> 00:03:49.906 A:middle
I won't go through them
all, but there's the list.

00:03:51.346 --> 00:03:55.266 A:middle
But we do have some
Apple-specific profiles,

00:03:55.266 --> 00:03:56.086 A:middle
which we also support.

00:03:56.946 --> 00:03:59.116 A:middle
If your accessory
has a battery in it,

00:03:59.376 --> 00:04:02.976 A:middle
you can use the headset battery
level indicator to tell us


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:03:59.376 --> 00:04:02.976 A:middle
you can use the headset battery
level indicator to tell us

00:04:02.976 --> 00:04:05.816 A:middle
about the charge state of
your battery, then we can use

00:04:05.816 --> 00:04:08.346 A:middle
that to display on the, on
the iOS device, for example.

00:04:09.736 --> 00:04:11.676 A:middle
We also provide Siri Eyes Free.

00:04:11.676 --> 00:04:14.466 A:middle
This is primarily of interest
to automotive vendors.

00:04:14.586 --> 00:04:18.796 A:middle
It allows them to allow their
drivers to interface with Siri

00:04:18.796 --> 00:04:20.255 A:middle
in a safe manner
while they're driving.

00:04:22.005 --> 00:04:27.626 A:middle
Oh, and one other thing I forgot
to mention, we also provide iAP1

00:04:27.626 --> 00:04:30.266 A:middle
and iAP2 support over
Bluetooth, and that opens

00:04:30.266 --> 00:04:32.706 A:middle
up the entire MFI
ecosystem of functionality.

00:04:35.156 --> 00:04:36.356 A:middle
And moving on to Wi-Fi.

00:04:36.356 --> 00:04:39.566 A:middle
All of our devices support
Wi-Fi up to 802.11ac,

00:04:40.556 --> 00:04:44.026 A:middle
dual band operation, and I
think the primary consumer,

00:04:44.136 --> 00:04:46.946 A:middle
from your perspective of
that so far, has been AirPlay

00:04:46.946 --> 00:04:48.986 A:middle
and Wireless Accessory
Configuration feature.

00:04:49.606 --> 00:04:51.496 A:middle
And this year we're
adding in support

00:04:51.496 --> 00:04:53.656 A:middle
for HomeKit accessories
over Wi, over Wi-Fi.

00:04:55.636 --> 00:04:56.956 A:middle
Again, we'll talk
about that later.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:05:00.636 --> 00:05:03.446 A:middle
Let's move on to wired options.

00:05:03.446 --> 00:05:06.736 A:middle
If you need a wired option,
it's probably because you need

00:05:06.736 --> 00:05:09.646 A:middle
to power your accessory or
provide power to the device,

00:05:11.056 --> 00:05:12.146 A:middle
or you just need the bandwidth,

00:05:12.256 --> 00:05:15.206 A:middle
bandwidth that a wired
connection can offer.

00:05:16.006 --> 00:05:18.176 A:middle
On iOS devices, we offer
the Lightning connector,

00:05:19.836 --> 00:05:22.206 A:middle
and this year we have some new
functionality to offer you.

00:05:23.026 --> 00:05:24.916 A:middle
We're offering a
Lighting headphone module.

00:05:24.916 --> 00:05:28.496 A:middle
Now, this a module that breaks
that analog audio for you,

00:05:28.996 --> 00:05:30.516 A:middle
and it connects straight

00:05:30.516 --> 00:05:32.616 A:middle
into the Lightning
connector on your iOS device.

00:05:33.786 --> 00:05:35.046 A:middle
So, why would you want
to do this instead

00:05:35.046 --> 00:05:37.256 A:middle
of just using the regular
3-and-a-half mm jack?

00:05:38.026 --> 00:05:41.046 A:middle
Well, for one, it also
provides a digital interface

00:05:41.076 --> 00:05:44.856 A:middle
to the device so you can offer
richer controls to your users,

00:05:45.556 --> 00:05:47.166 A:middle
such as integration
with iTunes Radio.

00:05:48.086 --> 00:05:50.066 A:middle
If your headphones, for example,

00:05:50.066 --> 00:05:52.286 A:middle
support let's say
noise cancellation,

00:05:53.086 --> 00:05:55.536 A:middle
you can offer an app on your
device that communicates

00:05:55.536 --> 00:05:57.466 A:middle
with your headphones to
control how that operates.

00:05:58.586 --> 00:05:59.776 A:middle
And there's one big thing

00:05:59.776 --> 00:06:01.956 A:middle
that isn't listed
here, and that's power.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:05:59.776 --> 00:06:01.956 A:middle
that isn't listed
here, and that's power.

00:06:02.866 --> 00:06:04.896 A:middle
The Lightning connector
is capable

00:06:04.896 --> 00:06:08.036 A:middle
of powering your accessory,
so you don't need batteries

00:06:08.036 --> 00:06:09.226 A:middle
in your headphones, for example,

00:06:09.226 --> 00:06:11.806 A:middle
to power your noise-cancellation
functionality.

00:06:13.736 --> 00:06:16.016 A:middle
This year, we're also offering
some new connector modules.

00:06:16.876 --> 00:06:20.306 A:middle
These are targeted at people who
are designing form-fitting cases

00:06:20.996 --> 00:06:24.526 A:middle
and cables, and they're a
small form factor with those,

00:06:24.606 --> 00:06:25.656 A:middle
those products in mind.

00:06:27.236 --> 00:06:29.476 A:middle
You can come and talk to us
at the Accessory Labs later

00:06:29.596 --> 00:06:32.376 A:middle
and we'll be happy to go into
more detail of these for you.

00:06:32.376 --> 00:06:38.676 A:middle
On our OS X platforms,
we support USB 3,

00:06:38.676 --> 00:06:41.936 A:middle
all currently shipping Macs
now support USB 3, which allows

00:06:41.936 --> 00:06:44.796 A:middle
up to 5 Gbps per
port, and you can draw

00:06:44.796 --> 00:06:47.406 A:middle
up to 900 mA per port
for your accessory.

00:06:49.406 --> 00:06:52.586 A:middle
If you design your accessories
with USB-IF certification

00:06:52.586 --> 00:06:56.236 A:middle
in mind, you'll be guaranteed
that they will work flawlessly

00:06:56.236 --> 00:06:57.406 A:middle
with our, with our platforms.

00:06:58.376 --> 00:07:04.326 A:middle
All of our currently shipping
Macs also support Thunderbolt 2.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:06:58.376 --> 00:07:04.326 A:middle
All of our currently shipping
Macs also support Thunderbolt 2.

00:07:05.486 --> 00:07:07.436 A:middle
And Thunderbolt is
an I/O standard

00:07:07.506 --> 00:07:14.336 A:middle
that multiplexes DisplayPort and
PCI Express onto a single cable.

00:07:15.636 --> 00:07:17.666 A:middle
You'll use this if you really
want the performance of,

00:07:17.666 --> 00:07:18.636 A:middle
of the Thunderbolt.

00:07:18.636 --> 00:07:23.176 A:middle
It gives you 20 Gbps per port,
and your accessories can draw

00:07:23.176 --> 00:07:24.866 A:middle
up to 10 amps, or,
10 watts of power.

00:07:26.546 --> 00:07:28.346 A:middle
In many cases, this means
you won't actually have

00:07:28.346 --> 00:07:29.836 A:middle
to provide a power
supply for your accessory,

00:07:30.106 --> 00:07:34.546 A:middle
an external power supply.

00:07:34.596 --> 00:07:36.226 A:middle
If you're interested
in producing USB 3

00:07:36.226 --> 00:07:38.146 A:middle
or Thunderbolt 2 accessories,
please come and talk

00:07:38.146 --> 00:07:39.356 A:middle
to us at the I/O Labs.

00:07:39.506 --> 00:07:43.096 A:middle
There's one going on right now,
but it'll be going until 11:30,

00:07:43.096 --> 00:07:44.156 A:middle
and there's one later
in the week.

00:07:45.656 --> 00:07:47.306 A:middle
And last but not least,

00:07:47.626 --> 00:07:50.466 A:middle
all of our products also support
the standard 3-and-a-half mm

00:07:50.466 --> 00:07:51.166 A:middle
headphone jack.

00:07:51.686 --> 00:07:55.276 A:middle
And we also provide a module
for you to incorporate it

00:07:55.276 --> 00:07:57.706 A:middle
to your products, which
allows you to take advantage

00:07:57.706 --> 00:07:59.076 A:middle
of the remote control
functionality

00:07:59.076 --> 00:08:04.526 A:middle
that we offer over this jack.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:07:59.076 --> 00:08:04.526 A:middle
that we offer over this jack.

00:08:05.036 --> 00:08:05.696 A:middle
So, now the fun bit.

00:08:05.896 --> 00:08:08.186 A:middle
What's new in iOS 8 and
OS X Yosemite this year.

00:08:09.176 --> 00:08:10.326 A:middle
At this stage, I'm going to hand

00:08:10.326 --> 00:08:12.606 A:middle
over to my colleague,
Terry Worley.

00:08:12.986 --> 00:08:14.976 A:middle
He's going to talk to you
about HealthKit accessories.

00:08:16.516 --> 00:08:22.506 A:middle
[ Applause ]

00:08:23.006 --> 00:08:23.556 A:middle
&gt;&gt; Thanks, Robert.

00:08:24.486 --> 00:08:25.936 A:middle
Hello, my name is Terry Worley.

00:08:26.166 --> 00:08:28.676 A:middle
I'm one of the engineers
on the HealthKit team.

00:08:29.036 --> 00:08:31.516 A:middle
So, first thing's first.

00:08:32.586 --> 00:08:33.996 A:middle
What is HealthKit?

00:08:34.836 --> 00:08:36.506 A:middle
Well, if you saw in
the keynote yesterday,

00:08:36.506 --> 00:08:38.086 A:middle
this is a brand-new framework

00:08:38.155 --> 00:08:40.395 A:middle
that we are introducing
in iOS 8.

00:08:41.326 --> 00:08:48.386 A:middle
It provides a rich set of
APIs to save and access health

00:08:48.386 --> 00:08:49.726 A:middle
and fitness-related data.

00:08:50.176 --> 00:08:54.306 A:middle
This data can consist
of weight, step count,

00:08:54.306 --> 00:08:58.076 A:middle
nutritional information,
blood pressure, glucose.

00:08:58.076 --> 00:09:00.886 A:middle
In fact, there are
over 60 types of data


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:08:58.076 --> 00:09:00.886 A:middle
In fact, there are
over 60 types of data

00:09:00.936 --> 00:09:02.476 A:middle
that is supported in HealthKit.

00:09:03.886 --> 00:09:06.476 A:middle
Because security is
vital when we're talking

00:09:06.476 --> 00:09:07.776 A:middle
about our health information,

00:09:08.246 --> 00:09:10.646 A:middle
of course we're using
class A data protection.

00:09:11.686 --> 00:09:14.646 A:middle
But beyond that, we
are providing users

00:09:14.646 --> 00:09:17.526 A:middle
with extensive privacy
settings so that each

00:09:17.526 --> 00:09:21.836 A:middle
of us can control access
to our health data.

00:09:22.536 --> 00:09:25.946 A:middle
We're implementing
sophisticated searches as well

00:09:25.946 --> 00:09:27.386 A:middle
as statistical queries.

00:09:27.686 --> 00:09:30.166 A:middle
Statistical queries
might be something like,

00:09:30.336 --> 00:09:34.846 A:middle
"What has been my total daily
step count every day this month?

00:09:35.056 --> 00:09:36.456 A:middle
Give me a list of those."

00:09:36.456 --> 00:09:37.526 A:middle
Or, "Give me a list

00:09:37.526 --> 00:09:40.996 A:middle
of my average weekly
weight over the past year."

00:09:42.516 --> 00:09:46.446 A:middle
We're doing unit conversions
- Fahrenheit to Celsius,

00:09:47.296 --> 00:09:50.106 A:middle
kilograms to stones to pounds -

00:09:50.436 --> 00:09:53.526 A:middle
all of these are built
right into the APIs.

00:09:54.426 --> 00:09:57.846 A:middle
HealthKit provides
notifications about new data.

00:09:58.106 --> 00:10:01.416 A:middle
So, data can come from
a number of sources.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:09:58.106 --> 00:10:01.416 A:middle
So, data can come from
a number of sources.

00:10:01.706 --> 00:10:04.316 A:middle
A user may have entered
what they had for breakfast

00:10:04.316 --> 00:10:10.066 A:middle
into a diet app, or it may come
through some tight integration

00:10:10.066 --> 00:10:13.036 A:middle
with other OS technologies
on your device.

00:10:13.036 --> 00:10:15.896 A:middle
Or, more importantly for
us right here right now,

00:10:16.436 --> 00:10:19.276 A:middle
it's a seamless integration
with accessories.

00:10:19.276 --> 00:10:21.576 A:middle
So, we're not going
to go any more

00:10:21.576 --> 00:10:24.146 A:middle
into HealthKit beyond
accessories right now,

00:10:24.496 --> 00:10:26.316 A:middle
but HealthKit is
at the conference,

00:10:26.316 --> 00:10:29.526 A:middle
and we'll talk shortly about
what's coming up with that.

00:10:29.526 --> 00:10:31.166 A:middle
So, for the next few minutes,

00:10:31.166 --> 00:10:33.946 A:middle
let's talk about what
HealthKit means to hardware

00:10:33.946 --> 00:10:37.316 A:middle
and software developers
with respect to accessories.

00:10:38.536 --> 00:10:41.306 A:middle
Now, if you saw this
session last year,

00:10:41.306 --> 00:10:44.226 A:middle
Brian Tucker got
onstage and he spoke

00:10:44.226 --> 00:10:49.356 A:middle
of the explosive proliferation
of Bluetooth Low Energy devices

00:10:49.356 --> 00:10:52.186 A:middle
in the market, over
a billion of them

00:10:52.276 --> 00:10:54.406 A:middle
in the marketplace
just last year.

00:10:54.886 --> 00:10:59.176 A:middle
And he also noted that Bluetooth
Low Energy is especially well

00:10:59.176 --> 00:11:04.206 A:middle
suited for health and sports and
fitness-related applications.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:10:59.176 --> 00:11:04.206 A:middle
suited for health and sports and
fitness-related applications.

00:11:05.286 --> 00:11:07.106 A:middle
In fact, if we looked
around the room, it's,

00:11:07.236 --> 00:11:10.186 A:middle
it's likely that we would
find a lot of Nike Fuel Bands,

00:11:10.186 --> 00:11:12.566 A:middle
Fitbits, Withings, et cetera.

00:11:13.126 --> 00:11:14.376 A:middle
I'm even wearing one.

00:11:14.376 --> 00:11:15.876 A:middle
I've been wearing one
for quite a while now.

00:11:16.176 --> 00:11:21.986 A:middle
In fact, HealthKit
is so powerful

00:11:22.646 --> 00:11:27.206 A:middle
that it can transform a
software engineer, like me,

00:11:27.796 --> 00:11:29.376 A:middle
just by working on it.

00:11:30.176 --> 00:11:32.266 A:middle
Someone who shuns the daylight,

00:11:33.286 --> 00:11:38.096 A:middle
who spends years sitting behind
the computer, living my life

00:11:38.096 --> 00:11:39.696 A:middle
by the light of my displays.

00:11:39.806 --> 00:11:42.226 A:middle
Some of you can probably
relate to that.

00:11:43.246 --> 00:11:46.976 A:middle
Now, working on HealthKit, I'm
using a standing workstation.

00:11:47.886 --> 00:11:49.546 A:middle
I am riding my bike to work,

00:11:50.296 --> 00:11:53.046 A:middle
and I'm even wearing a
heart rate chest strap

00:11:53.046 --> 00:11:53.886 A:middle
on my bike rides.

00:11:55.506 --> 00:11:57.116 A:middle
That has been particularly
challenging,

00:11:57.116 --> 00:11:58.396 A:middle
because I've been
keeping that secret

00:11:58.396 --> 00:11:59.766 A:middle
from my family for months now.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:12:00.126 --> 00:12:01.596 A:middle
They're always looking
for clues,

00:12:01.596 --> 00:12:03.186 A:middle
"What are you working
on at work?"

00:12:04.146 --> 00:12:04.956 A:middle
Well, now they know.

00:12:05.626 --> 00:12:07.236 A:middle
That is the power of HealthKit.

00:12:08.516 --> 00:12:14.576 A:middle
And accessories are playing
a vital role in delivering

00:12:14.576 --> 00:12:16.196 A:middle
that data to HealthKit.

00:12:16.846 --> 00:12:18.766 A:middle
HealthKit is now
uniquely positioned

00:12:19.096 --> 00:12:22.986 A:middle
to be the key component to
finally bring together all

00:12:22.986 --> 00:12:26.866 A:middle
of these accessories, all of
these health and fitness apps,

00:12:26.936 --> 00:12:30.766 A:middle
by consolidating the data
into one centralized source,

00:12:30.766 --> 00:12:33.066 A:middle
and this is going to open
up a lot of opportunities

00:12:33.066 --> 00:12:37.136 A:middle
for accessory manufacturers
as well as app developers

00:12:38.146 --> 00:12:41.606 A:middle
by providing this new, rich
environment, and a lot of data.

00:12:42.666 --> 00:12:45.166 A:middle
So, we want to build
accessories.

00:12:45.456 --> 00:12:46.606 A:middle
What is required?

00:12:47.396 --> 00:12:53.356 A:middle
All right, so Bluetooth.org has
provided official specifications

00:12:53.356 --> 00:12:55.796 A:middle
for a number of built-in
or, excuse me,

00:12:55.896 --> 00:12:57.906 A:middle
a number of Bluetooth
Low Energy devices.

00:12:57.906 --> 00:13:02.296 A:middle
So, for HealthKit, we're going
to be supporting these four


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:12:57.906 --> 00:13:02.296 A:middle
So, for HealthKit, we're going
to be supporting these four

00:13:02.676 --> 00:13:04.316 A:middle
as built-in, or native.

00:13:04.856 --> 00:13:07.746 A:middle
That's our heart rate
monitor, our glucose sensor,

00:13:07.996 --> 00:13:10.486 A:middle
the blood pressure monitor
and the health thermometer.

00:13:10.926 --> 00:13:12.526 A:middle
So, built-in.

00:13:12.796 --> 00:13:13.586 A:middle
What does that mean?

00:13:14.346 --> 00:13:20.186 A:middle
Well, once you have paired one
of these devices with HealthKit,

00:13:21.006 --> 00:13:23.186 A:middle
it takes over and it will
control the accessory.

00:13:23.676 --> 00:13:25.946 A:middle
It will connect to it
whenever it's in range.

00:13:25.946 --> 00:13:27.686 A:middle
It will gather data from it.

00:13:27.726 --> 00:13:29.056 A:middle
It'll save it in HealthKit

00:13:29.396 --> 00:13:32.086 A:middle
and then it will notify
all clients interested

00:13:32.086 --> 00:13:33.326 A:middle
in that kind of data.

00:13:34.226 --> 00:13:37.006 A:middle
So, what this means to
hardware manufacturers,

00:13:37.256 --> 00:13:39.346 A:middle
if you're developing one
of these accessories,

00:13:39.896 --> 00:13:41.686 A:middle
you don't have to
ship an app with it

00:13:41.876 --> 00:13:44.006 A:middle
because it will automatically
work with HealthKit.

00:13:44.386 --> 00:13:47.196 A:middle
And all the apps out there
that want to use one of these,

00:13:47.686 --> 00:13:50.566 A:middle
they also benefit because
they no longer have to worry

00:13:50.566 --> 00:13:53.006 A:middle
about the code to
pair the devices.

00:13:53.366 --> 00:13:55.236 A:middle
They don't need to
use Core Bluetooth now

00:13:55.236 --> 00:14:00.266 A:middle
to manage the connections, the
discovery, collecting the data,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:13:55.236 --> 00:14:00.266 A:middle
to manage the connections, the
discovery, collecting the data,

00:14:00.266 --> 00:14:01.686 A:middle
parsing the data, etcetera.

00:14:03.266 --> 00:14:06.886 A:middle
And so this will provide a, a
great opportunity for hardware

00:14:06.886 --> 00:14:08.586 A:middle
and software manufacturers.

00:14:10.866 --> 00:14:15.776 A:middle
So, of these four types,
what is required then?

00:14:16.226 --> 00:14:20.236 A:middle
What do you need to do to
have a native accessory live

00:14:20.236 --> 00:14:21.426 A:middle
in the HealthKit world?

00:14:22.346 --> 00:14:24.826 A:middle
Well, the easy answer
is, simply adhere

00:14:24.826 --> 00:14:27.896 A:middle
to the Bluetooth.org
specifications.

00:14:28.306 --> 00:14:29.276 A:middle
That's what we're doing.

00:14:29.686 --> 00:14:32.346 A:middle
So, if you do that,
then we're just going

00:14:32.346 --> 00:14:33.476 A:middle
to live happily forever.

00:14:33.636 --> 00:14:34.686 A:middle
Live happily ever after.

00:14:36.756 --> 00:14:38.566 A:middle
There are, however,
some best practices

00:14:38.566 --> 00:14:39.576 A:middle
that we would recommend.

00:14:40.626 --> 00:14:43.646 A:middle
First of all, implement
the optional fields

00:14:43.646 --> 00:14:44.606 A:middle
within the service.

00:14:44.606 --> 00:14:48.856 A:middle
For example, the blood pressure
service has an optional heart

00:14:48.856 --> 00:14:50.536 A:middle
rate field, measurement field.

00:14:51.406 --> 00:14:54.866 A:middle
If you implement that, HealthKit
will also extract that data

00:14:55.166 --> 00:14:58.686 A:middle
and save that as a heart rate
data point in the database

00:14:58.726 --> 00:15:01.726 A:middle
and then notify any clients
interested in heart rate.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:14:58.726 --> 00:15:01.726 A:middle
and then notify any clients
interested in heart rate.

00:15:03.636 --> 00:15:05.916 A:middle
And similar to that,
there are some types

00:15:05.916 --> 00:15:08.976 A:middle
of optional measurement fields

00:15:08.976 --> 00:15:11.466 A:middle
that maybe don't
correspond specifically

00:15:11.466 --> 00:15:13.406 A:middle
to a HealthKit data type.

00:15:13.406 --> 00:15:15.726 A:middle
In this example, we're
talking about heart rate,

00:15:15.726 --> 00:15:17.816 A:middle
also has an energy
expended field.

00:15:18.516 --> 00:15:20.356 A:middle
This is still valuable
to implement

00:15:20.776 --> 00:15:23.326 A:middle
because HealthKit will save
these other kinds of data

00:15:23.426 --> 00:15:27.226 A:middle
as metadata along with
the original measurement,

00:15:27.726 --> 00:15:28.816 A:middle
in this case, heart rate.

00:15:28.816 --> 00:15:31.176 A:middle
So, you can still
access that data.

00:15:33.446 --> 00:15:35.426 A:middle
Implement optional
characteristics.

00:15:35.476 --> 00:15:37.966 A:middle
For example, a sensor contact.

00:15:38.226 --> 00:15:41.316 A:middle
If you have a heart rate
chest strap and it indicates

00:15:41.316 --> 00:15:44.336 A:middle
that there is no sensor contact,
then HealthKit will not save

00:15:44.336 --> 00:15:45.666 A:middle
that data to the database.

00:15:45.966 --> 00:15:47.976 A:middle
That helps maintain
integrity of the data.

00:15:48.146 --> 00:15:51.906 A:middle
So, implement optional
characteristics like that.

00:15:53.416 --> 00:15:54.986 A:middle
Implement optional services.

00:15:55.636 --> 00:15:56.386 A:middle
There aren't a lot of them,

00:15:56.386 --> 00:15:58.416 A:middle
but battery services
is a good example.

00:15:58.776 --> 00:16:00.346 A:middle
So, if you're implementing
battery service,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:15:58.776 --> 00:16:00.346 A:middle
So, if you're implementing
battery service,

00:16:00.346 --> 00:16:04.216 A:middle
then HealthKit can look at
that and respond accordingly

00:16:04.286 --> 00:16:05.546 A:middle
when battery levels are low.

00:16:05.736 --> 00:16:09.416 A:middle
All right.

00:16:10.986 --> 00:16:14.866 A:middle
Now, what if you are developing
an accessory that doesn't fall

00:16:14.866 --> 00:16:16.266 A:middle
into one of those
four categories?

00:16:16.896 --> 00:16:17.726 A:middle
That is awesome.

00:16:18.026 --> 00:16:19.296 A:middle
Please continue to do so.

00:16:21.326 --> 00:16:24.346 A:middle
All custom accessories
are very much welcome

00:16:24.526 --> 00:16:27.616 A:middle
in the HealthKit world.

00:16:28.086 --> 00:16:31.346 A:middle
So, what do you need to do?

00:16:31.576 --> 00:16:33.806 A:middle
Go ahead and use the
external accessory framework.

00:16:34.256 --> 00:16:38.366 A:middle
Use Core Bluetooth, whether
Classic, Low Energy, use Wi-Fi,

00:16:38.366 --> 00:16:42.256 A:middle
use USB, whatever
technology makes sense for you

00:16:42.256 --> 00:16:44.196 A:middle
and your device, do it.

00:16:45.026 --> 00:16:48.316 A:middle
Then in your app that's
controlling that device,

00:16:48.586 --> 00:16:52.566 A:middle
simply use the HealthKit APIs to
save that data into HealthKit.

00:16:52.566 --> 00:16:55.946 A:middle
It will then be notified, or
all clients will be notified

00:16:55.946 --> 00:16:57.256 A:middle
about that data as well.

00:16:57.976 --> 00:16:59.266 A:middle
So, we are very hopeful

00:16:59.266 --> 00:17:02.466 A:middle
that custom accessory
manufacturers will join


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:16:59.266 --> 00:17:02.466 A:middle
that custom accessory
manufacturers will join

00:17:02.506 --> 00:17:03.486 A:middle
into the HealthKit party.

00:17:03.916 --> 00:17:06.126 A:middle
It'll make a much richer
environment for everybody.

00:17:07.276 --> 00:17:11.836 A:middle
So, we've been talking about
these devices getting data in.

00:17:12.016 --> 00:17:15.276 A:middle
So, how do you then know

00:17:15.376 --> 00:17:17.556 A:middle
when some heart rate
data has been added

00:17:17.556 --> 00:17:19.886 A:middle
to your, into HealthKit?

00:17:20.356 --> 00:17:22.646 A:middle
Well, let's step through
a quick example here.

00:17:24.006 --> 00:17:26.165 A:middle
All right, this is
HealthKit code.

00:17:26.165 --> 00:17:27.576 A:middle
I think this is the
first HealthKit code

00:17:27.576 --> 00:17:28.226 A:middle
of the conference.

00:17:28.656 --> 00:17:32.876 A:middle
So the first thing you'll want
is you'll want a HealthKit

00:17:32.876 --> 00:17:36.146 A:middle
Health Store, and in this case
I'm just going to define it

00:17:36.146 --> 00:17:41.096 A:middle
as a property and initialize
what, an instance of it.

00:17:41.256 --> 00:17:44.166 A:middle
As you can see, I am
consolidating a bit here

00:17:44.166 --> 00:17:47.216 A:middle
for brevity, so don't expect
this to compile like this,

00:17:47.216 --> 00:17:49.616 A:middle
and we'll leave it an
exercise to the reader as to

00:17:49.826 --> 00:17:51.546 A:middle
where that might
actually go in your code.

00:17:52.446 --> 00:17:53.836 A:middle
And I also apologize.

00:17:53.836 --> 00:17:56.156 A:middle
This is the archaic
Objective-C language.

00:17:56.766 --> 00:17:59.736 A:middle
And so we are, we're still
going to work through that.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:18:00.516 --> 00:18:01.526 A:middle
All right.

00:18:02.566 --> 00:18:03.976 A:middle
So, now that we've done that,

00:18:03.976 --> 00:18:06.566 A:middle
now what's the interesting
part is we're going

00:18:06.566 --> 00:18:09.756 A:middle
to create a HealthKit
data object type.

00:18:10.236 --> 00:18:13.006 A:middle
And in this case, we are
interested in heart rate.

00:18:14.046 --> 00:18:16.086 A:middle
So, once we've created
that heart rate object,

00:18:16.456 --> 00:18:19.836 A:middle
we're now going to create
an observer query using

00:18:19.836 --> 00:18:21.016 A:middle
that heart rate object.

00:18:21.476 --> 00:18:23.586 A:middle
And you see on the line
of code there's also one

00:18:23.586 --> 00:18:24.396 A:middle
called predicate.

00:18:24.816 --> 00:18:28.496 A:middle
The predicate provides a lot
of filtering options for you.

00:18:28.986 --> 00:18:31.986 A:middle
We don't really care, we
just want to be notified

00:18:31.986 --> 00:18:35.266 A:middle
about everything when, and
so we'll just pass nil.

00:18:35.656 --> 00:18:37.576 A:middle
And then we have
an updateHandler.

00:18:37.856 --> 00:18:40.386 A:middle
Now, this updateHandler is
called whenever the database

00:18:40.386 --> 00:18:44.576 A:middle
changes with regard to that
data type, you will be notified.

00:18:44.716 --> 00:18:47.896 A:middle
So, it's inside the handler then
that we want to add the code

00:18:47.976 --> 00:18:48.756 A:middle
that we're interested in

00:18:48.756 --> 00:18:50.296 A:middle
and this is going
to be app-specific.

00:18:50.606 --> 00:18:52.846 A:middle
Maybe you just want
to update some UI.

00:18:53.796 --> 00:18:56.116 A:middle
Maybe you want to trigger
some other kind of event

00:18:56.116 --> 00:18:57.596 A:middle
or do some statistics, whatever.

00:18:58.276 --> 00:19:01.746 A:middle
So, in this case, I'm just
saying fetch new samples,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:18:58.276 --> 00:19:01.746 A:middle
So, in this case, I'm just
saying fetch new samples,

00:19:02.166 --> 00:19:05.446 A:middle
and that would go retrieve
those samples from the database.

00:19:05.446 --> 00:19:08.066 A:middle
That's going to be covered in
the next HealthKit session,

00:19:08.066 --> 00:19:09.396 A:middle
so we won't go any
farther into that.

00:19:09.396 --> 00:19:12.896 A:middle
But now that we've set up
our observer query, next,

00:19:12.896 --> 00:19:15.516 A:middle
the last thing we need to do is
take that Health Store object

00:19:15.856 --> 00:19:17.116 A:middle
and execute the query.

00:19:17.646 --> 00:19:21.966 A:middle
So, this query can live for
the lifetime of your app

00:19:21.966 --> 00:19:23.086 A:middle
or until you say stop.

00:19:23.456 --> 00:19:25.566 A:middle
So, anytime heart
rate is entered

00:19:25.566 --> 00:19:27.416 A:middle
into HealthKit, you
will be notified.

00:19:28.466 --> 00:19:31.026 A:middle
So, let's see some
of this in action.

00:19:31.646 --> 00:19:35.576 A:middle
I'd like to invite my
colleague, Jorge Morinigo

00:19:35.756 --> 00:19:36.916 A:middle
up to the stage with me.

00:19:37.516 --> 00:19:40.806 A:middle
[ Applause ]

00:19:41.306 --> 00:19:42.166 A:middle
&gt;&gt; Good morning, everybody.

00:19:43.006 --> 00:19:44.226 A:middle
Good morning, Terry.

00:19:45.246 --> 00:19:48.146 A:middle
&gt;&gt; Jorge. You didn't get the
dress code memo, did you?

00:19:48.396 --> 00:19:50.316 A:middle
&gt;&gt; Oops. En que vive.

00:19:50.846 --> 00:19:53.386 A:middle
&gt;&gt; For the record, there
was no dress code memo.

00:19:53.756 --> 00:19:54.806 A:middle
It was pretty cool.

00:19:55.896 --> 00:19:58.286 A:middle
Jorge is dressed
up in athletic gear

00:19:59.106 --> 00:20:01.576 A:middle
because he is wearing a
heart rate chest strap.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:19:59.106 --> 00:20:01.576 A:middle
because he is wearing a
heart rate chest strap.

00:20:02.496 --> 00:20:06.666 A:middle
So, we're going to
go to our iOS device.

00:20:07.286 --> 00:20:09.396 A:middle
On the screen, you can see
we have two apps of interest.

00:20:09.396 --> 00:20:11.916 A:middle
One is the "Health" app that
was introduced yesterday.

00:20:12.926 --> 00:20:16.736 A:middle
So, let's launch
"Health," and we will go

00:20:16.736 --> 00:20:18.176 A:middle
to the Health Data tab,

00:20:19.306 --> 00:20:23.246 A:middle
and we'll choose vital
signs and heart rate.

00:20:24.466 --> 00:20:26.576 A:middle
And we see we have
an empty chart.

00:20:28.046 --> 00:20:30.126 A:middle
Go to Show All Data,
we've got nothing.

00:20:30.636 --> 00:20:33.096 A:middle
So, we need to get some
data in here, Jorge.

00:20:33.656 --> 00:20:34.856 A:middle
&gt;&gt; OK, I'm ready.

00:20:35.046 --> 00:20:35.726 A:middle
&gt;&gt; All right.

00:20:36.096 --> 00:20:39.246 A:middle
So, let's go to this,
and there's a heart rate.

00:20:39.936 --> 00:20:42.476 A:middle
And we are now connected.

00:20:42.866 --> 00:20:45.226 A:middle
And I should also point out
that in the seed you received

00:20:45.226 --> 00:20:48.136 A:middle
with the conference, the pairing
is happening here in "Health."

00:20:48.136 --> 00:20:51.076 A:middle
Future seeds may not be here,
so if you don't find it,

00:20:51.076 --> 00:20:55.656 A:middle
then go back to the Settings
app under Bluetooth to try that.

00:20:55.996 --> 00:20:58.476 A:middle
And we go our chart and we
see we already have new data

00:20:58.476 --> 00:20:59.046 A:middle
coming in.

00:20:59.836 --> 00:21:02.776 A:middle
So we go to Show All
Data, and there we go.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:20:59.836 --> 00:21:02.776 A:middle
So we go to Show All
Data, and there we go.

00:21:06.566 --> 00:21:11.606 A:middle
So, now with that running,
let's launch our demo app

00:21:11.676 --> 00:21:13.626 A:middle
that Jorge has provided for us.

00:21:14.926 --> 00:21:17.656 A:middle
Jorge, your heart rate
is elevated [laughter].

00:21:18.596 --> 00:21:23.616 A:middle
We, we tried this, we tested
this a number of times, and -

00:21:23.716 --> 00:21:25.166 A:middle
&gt;&gt; It was in the 60s.

00:21:25.166 --> 00:21:27.126 A:middle
&gt;&gt; Oh, it went.

00:21:27.586 --> 00:21:29.206 A:middle
I'm sure it has nothing
to do with the fact

00:21:29.206 --> 00:21:33.436 A:middle
that you are sitting in front
of millions of people right now.

00:21:33.906 --> 00:21:36.506 A:middle
Well, at this point, you know,
when we ran through this,

00:21:36.506 --> 00:21:38.206 A:middle
it was a, a nice,
resting heart rate,

00:21:38.206 --> 00:21:39.926 A:middle
and that's why we had Jorge
sitting, because we want

00:21:39.926 --> 00:21:42.166 A:middle
to start with a nice,
resting heart rate.

00:21:42.926 --> 00:21:44.126 A:middle
&gt;&gt; I try to relax.

00:21:44.236 --> 00:21:44.966 A:middle
&gt;&gt; OK, relax.

00:21:45.056 --> 00:21:45.586 A:middle
Relax, Jorge.

00:21:45.736 --> 00:21:46.676 A:middle
Let's watch it come down.

00:21:47.006 --> 00:21:47.586 A:middle
Don't be nervous.

00:21:48.536 --> 00:21:51.946 A:middle
So we were thinking what we
would have Jorge do is actually

00:21:51.946 --> 00:21:55.636 A:middle
do some, some pushups for us to,
you know, raise the heart rate,

00:21:55.636 --> 00:21:57.966 A:middle
but I'm not sure we want
to do that, because,

00:21:58.006 --> 00:22:00.846 A:middle
because Jorge's an
engineer also.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:21:58.006 --> 00:22:00.846 A:middle
because Jorge's an
engineer also.

00:22:01.076 --> 00:22:02.526 A:middle
We don't want to go too far.

00:22:02.526 --> 00:22:03.916 A:middle
But let's try it.

00:22:03.916 --> 00:22:04.996 A:middle
&gt;&gt; Let's go for it.

00:22:04.996 --> 00:22:06.596 A:middle
&gt;&gt; Jorge, drop and give me 10.

00:22:06.596 --> 00:22:07.436 A:middle
&gt;&gt; OK. OK.

00:22:07.786 --> 00:22:08.166 A:middle
&gt;&gt; Please.

00:22:08.456 --> 00:22:11.236 A:middle
I'm not his boss so I
still have to say please.

00:22:12.186 --> 00:22:12.796 A:middle
&gt;&gt; 1, 2.

00:22:12.796 --> 00:22:13.356 A:middle
&gt;&gt; 2.

00:22:13.576 --> 00:22:24.006 A:middle
&gt;&gt; 3, 4, 5, 6, 7, 8, 9, 10.

00:22:24.436 --> 00:22:25.946 A:middle
&gt;&gt; All right.

00:22:26.516 --> 00:22:31.016 A:middle
[ Applause ]

00:22:31.516 --> 00:22:35.056 A:middle
&gt;&gt; OK. What was important here
is we did get the delta we were

00:22:35.056 --> 00:22:35.736 A:middle
looking for.

00:22:37.636 --> 00:22:41.386 A:middle
So, Jorge will now relax,
and that heart rate will come

00:22:41.386 --> 00:22:42.696 A:middle
down quickly, I'm sure.

00:22:43.746 --> 00:22:44.646 A:middle
Yeah, there we go.

00:22:44.806 --> 00:22:45.506 A:middle
It's coming down.

00:22:46.356 --> 00:22:49.806 A:middle
So, now we'll go back
to our "Health" app,

00:22:50.486 --> 00:22:51.536 A:middle
and we look at our data,

00:22:52.146 --> 00:22:57.986 A:middle
and we can see all these
are in there now, 160.

00:22:59.456 --> 00:23:01.806 A:middle
So, we got a lot of
heart rate there.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:22:59.456 --> 00:23:01.806 A:middle
So, we got a lot of
heart rate there.

00:23:02.956 --> 00:23:06.356 A:middle
So, in this example, these were
both using those same observer

00:23:06.356 --> 00:23:08.676 A:middle
queries, both of them
running independently.

00:23:09.146 --> 00:23:11.046 A:middle
Heart rate is being
added to HealthKit.

00:23:11.046 --> 00:23:12.256 A:middle
Both are being notified

00:23:12.486 --> 00:23:14.216 A:middle
and so they both have
access to the data.

00:23:14.606 --> 00:23:15.356 A:middle
And that's our demo.

00:23:15.516 --> 00:23:15.996 A:middle
Thanks, Jorge.

00:23:16.496 --> 00:23:16.876 A:middle
&gt;&gt; Thank you.

00:23:18.516 --> 00:23:24.216 A:middle
[ Applause ]

00:23:24.716 --> 00:23:28.956 A:middle
&gt;&gt; So, that's, that's basically
it for HealthKit accessories.

00:23:29.976 --> 00:23:33.656 A:middle
This next hour, next session, we
have our main HealthKit session.

00:23:33.986 --> 00:23:35.366 A:middle
So, we'd encourage you
to go that if you want

00:23:35.366 --> 00:23:36.576 A:middle
to hear more about HealthKit.

00:23:37.176 --> 00:23:40.296 A:middle
At the end of the day, we have a
health and fitness get together.

00:23:40.566 --> 00:23:43.326 A:middle
This will be a more informal
discussion and Q and A

00:23:43.326 --> 00:23:44.296 A:middle
if you're interested in that.

00:23:44.656 --> 00:23:48.676 A:middle
Not on this slide, but we also
have HealthKit Labs starting

00:23:48.676 --> 00:23:50.776 A:middle
today at 11:30 for a
couple of hours, I believe,

00:23:51.126 --> 00:23:52.676 A:middle
and then again on Friday.

00:23:52.676 --> 00:23:54.776 A:middle
So, if you want to play
with around, with some code,

00:23:55.086 --> 00:23:57.906 A:middle
come to the labs and we'll have
a lot of HealthKit engineers

00:23:57.906 --> 00:24:01.286 A:middle
on hand, and Jorge and I
will also be around to help


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:23:57.906 --> 00:24:01.286 A:middle
on hand, and Jorge and I
will also be around to help

00:24:01.326 --> 00:24:03.106 A:middle
with HealthKit and
or accessories.

00:24:03.566 --> 00:24:06.136 A:middle
So with that, we'll turn the
time over to Kevin McLaughlin

00:24:06.136 --> 00:24:08.266 A:middle
to tell us about HomeKit.

00:24:08.926 --> 00:24:09.796 A:middle
&gt;&gt; Hello, everybody.

00:24:10.126 --> 00:24:11.906 A:middle
I'm Kevin McLaughlin,
as Terry said.

00:24:11.906 --> 00:24:13.946 A:middle
I'm here to tell you a little
bit more about HomeKit.

00:24:14.746 --> 00:24:17.666 A:middle
So, you've heard about this
a little bit yesterday,

00:24:17.736 --> 00:24:20.546 A:middle
and you'd like to learn
a little bit more.

00:24:20.546 --> 00:24:27.536 A:middle
So, HomeKit is a new way for you

00:24:27.536 --> 00:24:33.656 A:middle
to bring your exciting new
accessories to our users.

00:24:35.676 --> 00:24:42.246 A:middle
The home automation accessory
situation right now is not

00:24:42.246 --> 00:24:47.886 A:middle
as good as it could be,
and HomeKit is a way for us

00:24:47.886 --> 00:24:51.936 A:middle
to work together to provide a
more consistent user experience

00:24:52.536 --> 00:24:54.896 A:middle
for our customers that are
getting into home automation.

00:24:55.456 --> 00:24:57.566 A:middle
So, today I'm going
to be talking,

00:24:57.566 --> 00:25:01.146 A:middle
or this morning I'm going to be
talking about the accessory side


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:24:57.566 --> 00:25:01.146 A:middle
or this morning I'm going to be
talking about the accessory side

00:25:01.146 --> 00:25:06.096 A:middle
of things a little bit and this
afternoon, we have a session

00:25:06.346 --> 00:25:09.626 A:middle
at 4:30 for you to come and
learn more about the APIs.

00:25:10.686 --> 00:25:12.116 A:middle
So, let's get right
into the protocol.

00:25:13.316 --> 00:25:17.156 A:middle
So, HomeKit Accessory Protocol,
you'll hear me say it a lot

00:25:17.156 --> 00:25:20.196 A:middle
of times, but we do have an
acronym that we like to use,

00:25:21.226 --> 00:25:22.226 A:middle
and that acronym is HAP.

00:25:22.226 --> 00:25:24.526 A:middle
So, you'll hear me say HAP,

00:25:24.526 --> 00:25:26.256 A:middle
that means HomeKit
Accessory Protocol.

00:25:27.596 --> 00:25:36.376 A:middle
So, HomeKit Accessory
Protocol is the way for you

00:25:36.376 --> 00:25:39.536 A:middle
to connect your accessories
to HomeKit.

00:25:41.276 --> 00:25:46.146 A:middle
We support Bluetooth Low
Energy and IP transports.

00:25:46.696 --> 00:25:52.116 A:middle
IP means if your accessory is
able to get onto the same subnet

00:25:52.596 --> 00:25:58.076 A:middle
as an iOS device, then you are
able to connect to HomeKit.

00:25:59.876 --> 00:26:04.096 A:middle
Bluetooth LE, of course,
is direct point-to-point.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:25:59.876 --> 00:26:04.096 A:middle
Bluetooth LE, of course,
is direct point-to-point.

00:26:05.806 --> 00:26:09.716 A:middle
Over those transports, we
have done a lot of work

00:26:09.716 --> 00:26:12.526 A:middle
to create a very
secure connection.

00:26:13.546 --> 00:26:17.066 A:middle
So, we have bidirectional
authentication in the protocol,

00:26:17.066 --> 00:26:22.056 A:middle
so when an iOS device
connects to your accessory,

00:26:22.696 --> 00:26:25.566 A:middle
both the iOS device and the
accessory can authenticate

00:26:25.716 --> 00:26:31.576 A:middle
that the entity on the
other end is trusted.

00:26:32.826 --> 00:26:37.916 A:middle
And we have per-session
encryption, so every time

00:26:37.986 --> 00:26:41.846 A:middle
that we connect, we
have an encryption key

00:26:41.846 --> 00:26:43.276 A:middle
that we use for that session.

00:26:43.626 --> 00:26:45.446 A:middle
I'll talk a little more
about security later.

00:26:46.366 --> 00:26:48.916 A:middle
So, now we have transports
and we have security,

00:26:49.526 --> 00:26:54.316 A:middle
but to really make, as Craig
said, to bring some rationality

00:26:54.316 --> 00:26:57.216 A:middle
to this, we need to start
defining a common language

00:26:57.436 --> 00:27:00.516 A:middle
for us to use to
communicate with all


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:26:57.436 --> 00:27:00.516 A:middle
for us to use to
communicate with all

00:27:00.516 --> 00:27:02.036 A:middle
of these home automation
accessories.

00:27:03.066 --> 00:27:07.566 A:middle
So, we have common functionality
definitions that we use,

00:27:07.736 --> 00:27:09.906 A:middle
and this uses a model
that I'm sure many

00:27:09.906 --> 00:27:11.856 A:middle
of you are familiar
with, will look familiar,

00:27:12.456 --> 00:27:15.216 A:middle
where we have services
and characteristics.

00:27:15.766 --> 00:27:18.086 A:middle
So, services describe
a collection

00:27:18.166 --> 00:27:20.236 A:middle
of related functionality
on an accessory,

00:27:21.006 --> 00:27:24.336 A:middle
and characteristics then
are those individual pieces

00:27:24.336 --> 00:27:25.156 A:middle
of functionality.

00:27:26.406 --> 00:27:30.456 A:middle
To give you an idea of
exactly what that means,

00:27:31.106 --> 00:27:37.446 A:middle
we have defined here, all
right, common services

00:27:37.446 --> 00:27:39.956 A:middle
that describe common types of
functionality that you'll find

00:27:39.956 --> 00:27:42.976 A:middle
on home automation
accessories, and characteristics

00:27:42.976 --> 00:27:44.846 A:middle
that would be contained
in those services.

00:27:46.766 --> 00:27:50.956 A:middle
There are many more than this
defined in our specifications,

00:27:51.486 --> 00:27:55.346 A:middle
but even though we would
like to imagine, you know,

00:27:55.616 --> 00:27:57.576 A:middle
we can define every, everything

00:27:57.576 --> 00:28:01.596 A:middle
to make it all a nice common
language, we know that you and,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:27:57.576 --> 00:28:01.596 A:middle
to make it all a nice common
language, we know that you and,

00:28:01.596 --> 00:28:03.326 A:middle
and other manufacturers are
going to come up with many,

00:28:03.326 --> 00:28:08.516 A:middle
many very clever and interesting
accessories with functionality

00:28:08.516 --> 00:28:09.626 A:middle
that we have not defined.

00:28:10.036 --> 00:28:14.536 A:middle
And so the HomeKit accessory
protocol is fully extensible,

00:28:15.126 --> 00:28:17.356 A:middle
and you can define
any custom service

00:28:17.356 --> 00:28:19.276 A:middle
or any custom characteristic
that you like,

00:28:19.276 --> 00:28:23.636 A:middle
pass that to the iOS
device through HAP,

00:28:23.636 --> 00:28:26.216 A:middle
and that will be then
available to applications

00:28:26.216 --> 00:28:29.036 A:middle
to use through HomeKit APIs.

00:28:29.536 --> 00:28:33.436 A:middle
You can mix and match
Apple-defined services

00:28:33.436 --> 00:28:36.286 A:middle
and custom services,
Apple-defined characteristics

00:28:36.286 --> 00:28:38.906 A:middle
and custom characteristics,
any way that you like.

00:28:38.906 --> 00:28:41.086 A:middle
So, an Apple-defined service
can contain Apple-defined

00:28:41.086 --> 00:28:43.306 A:middle
characteristics and
custom characteristics.

00:28:43.696 --> 00:28:47.576 A:middle
A custom service can contain
Apple-defined characteristics

00:28:47.576 --> 00:28:49.026 A:middle
and custom characteristics.

00:28:49.026 --> 00:28:51.496 A:middle
So, any way that you
like to properly describe

00:28:51.496 --> 00:28:52.246 A:middle
your accessory.

00:28:55.316 --> 00:29:00.396 A:middle
And finally, on this part, all
of the Apple-defined services


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:28:55.316 --> 00:29:00.396 A:middle
And finally, on this part, all
of the Apple-defined services

00:29:00.396 --> 00:29:04.446 A:middle
and characteristics are
recognized natively by Siri,

00:29:05.136 --> 00:29:09.486 A:middle
and so when you use these
services and characteristics,

00:29:09.926 --> 00:29:14.386 A:middle
users can use very natural
language to interact with

00:29:14.386 --> 00:29:18.896 A:middle
and command and control your
accessories through Siri.

00:29:18.896 --> 00:29:22.786 A:middle
Now, let me talk
a little bit more

00:29:22.786 --> 00:29:25.236 A:middle
about the structure
of the protocol.

00:29:26.416 --> 00:29:29.576 A:middle
So, as I mentioned, we
have Bluetooth LE and IP,

00:29:29.786 --> 00:29:33.056 A:middle
and on top of that
we use L2CAP and TCP

00:29:33.156 --> 00:29:36.956 A:middle
for the transmission
management of data.

00:29:37.426 --> 00:29:42.186 A:middle
On top of that, we use the
Attribute Protocol and HTTP

00:29:42.516 --> 00:29:45.186 A:middle
to provide packaging of the
data as we're sending it.

00:29:46.156 --> 00:29:50.186 A:middle
And then Generic
Attribute Profile GATT

00:29:50.646 --> 00:29:54.066 A:middle
and JavaScript object
notation JSON on the IP side.

00:29:55.146 --> 00:29:58.446 A:middle
This provides the serial,
serialization, the description

00:29:59.346 --> 00:30:01.336 A:middle
of the services and
characteristics


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:29:59.346 --> 00:30:01.336 A:middle
of the services and
characteristics

00:30:01.336 --> 00:30:03.916 A:middle
as these messages are
being sent back and forth.

00:30:06.226 --> 00:30:09.716 A:middle
And then we have HomeKit
Accessory Protocol,

00:30:10.176 --> 00:30:12.486 A:middle
where we have defined
the remaining structure.

00:30:12.486 --> 00:30:15.926 A:middle
So, what is the terminology,
the structure of the data

00:30:15.926 --> 00:30:18.816 A:middle
that is being serialized into
GATT and JSON and being sent

00:30:19.376 --> 00:30:21.096 A:middle
between iOS and accessories?

00:30:23.596 --> 00:30:25.686 A:middle
On top of the protocol,
we have HomeKit.

00:30:26.176 --> 00:30:28.016 A:middle
Again, we'll talk more
about this this afternoon,

00:30:28.706 --> 00:30:30.016 A:middle
but that is the mechanism

00:30:30.016 --> 00:30:34.276 A:middle
that makes your accessories
available to applications.

00:30:35.636 --> 00:30:38.316 A:middle
So, while I have this diagram
up here for you to look at,

00:30:38.316 --> 00:30:42.526 A:middle
I want to also take a moment
to point out how our security,

00:30:43.126 --> 00:30:45.186 A:middle
or where, I guess, our
security is applied.

00:30:46.726 --> 00:30:52.746 A:middle
So, on the Bluetooth LE side, we
apply encryption on top of GATT,

00:30:53.626 --> 00:30:55.336 A:middle
and that means that the values

00:30:55.386 --> 00:30:58.136 A:middle
that we're sending
are encrypted.

00:30:59.176 --> 00:31:02.126 A:middle
On the IP side, we apply
encryption on top of TCP.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:30:59.176 --> 00:31:02.126 A:middle
On the IP side, we apply
encryption on top of TCP.

00:31:02.806 --> 00:31:04.876 A:middle
So, there will be a
TCP connection made

00:31:04.876 --> 00:31:07.736 A:middle
between the iOS device
and your accessory,

00:31:09.276 --> 00:31:12.996 A:middle
and we will send
encrypted packets over TCP.

00:31:13.546 --> 00:31:17.266 A:middle
Inside those packets is the
HomeKit Accessory Protocol,

00:31:17.556 --> 00:31:19.396 A:middle
the services and
characteristics described

00:31:19.396 --> 00:31:21.316 A:middle
in JSON, wrapped in HTTP.

00:31:22.696 --> 00:31:25.816 A:middle
So, I'd like to give you just an
example of what that looks like.

00:31:25.816 --> 00:31:30.036 A:middle
So, let's look at a garage
door opener accessory and talk

00:31:30.036 --> 00:31:30.916 A:middle
about the services

00:31:30.916 --> 00:31:32.366 A:middle
and characteristics
that that might have.

00:31:33.426 --> 00:31:35.736 A:middle
So, this is an IP accessory,

00:31:36.056 --> 00:31:40.016 A:middle
so its top-level block
is an accessory block,

00:31:40.886 --> 00:31:43.586 A:middle
and that accessory
block will contain all

00:31:43.586 --> 00:31:45.416 A:middle
of the services for
this accessory.

00:31:45.956 --> 00:31:49.446 A:middle
So, our first service is the
Accessory Information Service.

00:31:50.416 --> 00:31:54.306 A:middle
Every accessory must have an
Accessory Information Service.

00:31:54.916 --> 00:31:59.996 A:middle
This contains information
that is metadata that applies

00:31:59.996 --> 00:32:01.136 A:middle
to the whole accessory.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:31:59.996 --> 00:32:01.136 A:middle
to the whole accessory.

00:32:02.246 --> 00:32:05.086 A:middle
So, in this case, for example,
we have a characteristic

00:32:05.086 --> 00:32:07.276 A:middle
of serial number which will
contain the serial number

00:32:07.276 --> 00:32:08.106 A:middle
for this accessory.

00:32:09.386 --> 00:32:12.536 A:middle
We also have a special
characteristic called Identify,

00:32:13.616 --> 00:32:17.266 A:middle
and this also must be
supported by every accessory.

00:32:18.056 --> 00:32:26.086 A:middle
And this characteristic
defines that the accessory must,

00:32:26.206 --> 00:32:28.126 A:middle
when this characteristic
is written to,

00:32:28.276 --> 00:32:32.266 A:middle
the accessory must do something
that will identify it to a user.

00:32:32.986 --> 00:32:36.296 A:middle
So, for example, a light
bulb could flash on and off

00:32:36.996 --> 00:32:39.906 A:middle
when it receives an Identify
characteristic, right.

00:32:40.676 --> 00:32:44.846 A:middle
Or, a thermostat might blink an
LED, or an IP camera might beep.

00:32:45.726 --> 00:32:47.666 A:middle
Whatever it is, is fine.

00:32:47.906 --> 00:32:50.646 A:middle
This can be defined by
the accessory manufacturer

00:32:50.646 --> 00:32:52.826 A:middle
by the accessory, but
it must do something

00:32:52.826 --> 00:32:54.296 A:middle
that will help a
user identify it.

00:32:55.906 --> 00:32:58.016 A:middle
This is particularly useful
in the case where you imagine

00:32:58.016 --> 00:33:00.866 A:middle
that a user has, say, installed
three light bulbs and they want


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:32:58.016 --> 00:33:00.866 A:middle
that a user has, say, installed
three light bulbs and they want

00:33:00.866 --> 00:33:02.256 A:middle
to set up one of
those light bulbs,

00:33:02.256 --> 00:33:04.266 A:middle
they want to give it a
name, and they want to know

00:33:04.266 --> 00:33:07.936 A:middle
which one is which, all right,
and they can then request

00:33:07.936 --> 00:33:09.736 A:middle
for that accessory
to identify itself.

00:33:11.616 --> 00:33:14.406 A:middle
So, moving on now
to the next service

00:33:14.406 --> 00:33:15.596 A:middle
for this garage door opener.

00:33:15.946 --> 00:33:19.796 A:middle
This is the actual garage
door opener motor that opens

00:33:19.796 --> 00:33:21.416 A:middle
and closes the garage door.

00:33:21.706 --> 00:33:22.776 A:middle
This is the next service.

00:33:23.046 --> 00:33:25.646 A:middle
So, here we have a
characteristic for target state.

00:33:25.986 --> 00:33:27.416 A:middle
So, I would like to
open the garage door,

00:33:27.416 --> 00:33:29.276 A:middle
or I would like to
close the garage door.

00:33:29.906 --> 00:33:32.016 A:middle
Then, we have a characteristic
for current state.

00:33:32.086 --> 00:33:34.296 A:middle
Is the garage door
currently opened or closed,

00:33:34.296 --> 00:33:36.786 A:middle
or maybe it's opening or
closing, or maybe it's stopped.

00:33:37.426 --> 00:33:41.056 A:middle
Something has happened, and
maybe there's an obstruction,

00:33:41.056 --> 00:33:42.896 A:middle
and there's a characteristic
to check

00:33:42.896 --> 00:33:44.396 A:middle
if there is an obstruction
detected.

00:33:47.246 --> 00:33:49.546 A:middle
So, now we've described the
garage door opener motor,

00:33:49.886 --> 00:33:51.756 A:middle
but many garage door openers,

00:33:51.806 --> 00:33:56.366 A:middle
maybe all of them,
also have a light.

00:33:56.866 --> 00:34:00.056 A:middle
So, now there's another
service defined on the accessory


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:33:56.866 --> 00:34:00.056 A:middle
So, now there's another
service defined on the accessory

00:34:00.366 --> 00:34:01.716 A:middle
that represents the light bulb.

00:34:04.096 --> 00:34:06.416 A:middle
Lights are straightforward.

00:34:06.416 --> 00:34:09.226 A:middle
In this case, we have just one
characteristic for this light,

00:34:09.326 --> 00:34:12.806 A:middle
just on, whether the light is
on or off, and also we can write

00:34:12.806 --> 00:34:15.436 A:middle
to that characteristic to
turn the light on or off.

00:34:16.505 --> 00:34:18.216 A:middle
So, this is just an example.

00:34:18.216 --> 00:34:20.446 A:middle
A real garage door opener
accessory I imagine would have

00:34:20.886 --> 00:34:22.446 A:middle
quite a few more
characteristics.

00:34:23.005 --> 00:34:25.315 A:middle
Also, there could be
custom characteristics.

00:34:25.315 --> 00:34:26.656 A:middle
For example, I don't know,

00:34:27.166 --> 00:34:30.076 A:middle
a garage door opener
motor might have a speed,

00:34:30.505 --> 00:34:32.565 A:middle
how fast you want the
garage door to open,

00:34:32.966 --> 00:34:34.866 A:middle
so there could be a
custom characteristic

00:34:34.906 --> 00:34:39.476 A:middle
that says motor speed, and that
would be included in service too

00:34:39.476 --> 00:34:40.775 A:middle
up there for the
garage door opener.

00:34:41.866 --> 00:34:43.956 A:middle
So, let's talk a little bit more

00:34:43.956 --> 00:34:46.406 A:middle
about some particular
details on the IP side.

00:34:47.186 --> 00:34:50.616 A:middle
So, the first thing
I want to tell you is

00:34:50.616 --> 00:34:54.696 A:middle
that when your accessory
supports HomeKit Accessory

00:34:54.696 --> 00:34:58.506 A:middle
Protocol, you get remote
access through HomeKit.

00:34:59.516 --> 00:35:02.726 A:middle
This is provided through
iOS device connectivity,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:34:59.516 --> 00:35:02.726 A:middle
This is provided through
iOS device connectivity,

00:35:03.366 --> 00:35:06.796 A:middle
does not require any special
implementation on your accessory

00:35:06.796 --> 00:35:08.516 A:middle
to take advantage
of this feature.

00:35:09.116 --> 00:35:12.436 A:middle
We use Bonjour for
accessory discovery,

00:35:12.926 --> 00:35:16.366 A:middle
so accessories are just required
to be Bonjour responders.

00:35:18.016 --> 00:35:20.056 A:middle
If you've worked on that before,
you'll be familiar with that.

00:35:21.126 --> 00:35:27.346 A:middle
And then on the IP side,
different from Bluetooth LE,

00:35:27.346 --> 00:35:29.626 A:middle
which I'll talk about in
just a moment, as I mentioned

00:35:29.626 --> 00:35:31.666 A:middle
when I was describing
the garage door opener,

00:35:32.116 --> 00:35:33.896 A:middle
we have a top-level
accessory block.

00:35:34.946 --> 00:35:39.496 A:middle
And that top-level accessory
block enables IP accessories

00:35:39.496 --> 00:35:40.266 A:middle
to be bridges.

00:35:41.206 --> 00:35:46.716 A:middle
So, you can have, for example, a
hub that is a HomeKit accessory

00:35:46.716 --> 00:35:48.846 A:middle
and supports HomeKit
Accessory Protocol,

00:35:49.096 --> 00:35:51.006 A:middle
and you might have
behind that hub,

00:35:51.416 --> 00:35:53.806 A:middle
connected using some
proprietary technology,

00:35:54.046 --> 00:35:55.776 A:middle
some light bulbs, all right.

00:35:55.976 --> 00:35:56.866 A:middle
Simple example.

00:35:57.436 --> 00:36:01.766 A:middle
So, in this case, the hub is
responsible for translating


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:35:57.436 --> 00:36:01.766 A:middle
So, in this case, the hub is
responsible for translating

00:36:01.766 --> 00:36:04.386 A:middle
between the proprietary
connection protocol that it uses

00:36:04.386 --> 00:36:06.956 A:middle
with its light bulbs and
HomeKit Accessory Protocol

00:36:06.956 --> 00:36:07.856 A:middle
that we use with iOS.

00:36:08.946 --> 00:36:13.566 A:middle
In this case, the hub
will present itself

00:36:13.956 --> 00:36:17.276 A:middle
as actually having
three accessory blocks.

00:36:17.276 --> 00:36:19.406 A:middle
So, it will have
one accessory block

00:36:19.406 --> 00:36:21.256 A:middle
that includes an accessory
information service

00:36:21.296 --> 00:36:22.526 A:middle
that represents the hub itself.

00:36:22.526 --> 00:36:25.116 A:middle
It will have another
accessory block

00:36:25.116 --> 00:36:26.846 A:middle
with an accessory
information service

00:36:27.146 --> 00:36:29.676 A:middle
that also has a light bulb
service that represents the,

00:36:29.996 --> 00:36:33.426 A:middle
one of the light bulbs, and then
it would have a third accessory

00:36:33.726 --> 00:36:37.056 A:middle
block, also with an accessory
information service and also

00:36:37.056 --> 00:36:39.326 A:middle
with a light bulb service that
represents the other light bulb.

00:36:39.326 --> 00:36:43.846 A:middle
So, this is how we handle
bridges as IP accessories.

00:36:44.926 --> 00:36:46.016 A:middle
It's not restricted to bridges.

00:36:46.016 --> 00:36:48.396 A:middle
Any accessory could
use that structure,

00:36:48.396 --> 00:36:50.876 A:middle
but it's particularly
necessary for bridges.

00:36:51.786 --> 00:36:56.756 A:middle
And finally, in our protocol
on IP side, we use HTTP.

00:36:56.906 --> 00:37:00.416 A:middle
The URL scheme is a restful
API, so the URL indicates


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:36:56.906 --> 00:37:00.416 A:middle
The URL scheme is a restful
API, so the URL indicates

00:37:00.416 --> 00:37:01.596 A:middle
which services and
characteristics

00:37:01.596 --> 00:37:04.976 A:middle
and accessories are being
addressed with each message.

00:37:05.566 --> 00:37:11.156 A:middle
Now, moving on to talk
about Bluetooth LE.

00:37:11.396 --> 00:37:12.226 A:middle
Some details.

00:37:14.806 --> 00:37:16.866 A:middle
Bluetooth LE accessories

00:37:17.006 --> 00:37:20.476 A:middle
that support HomeKit Accessory
Protocol also get the same

00:37:20.476 --> 00:37:22.686 A:middle
remote access capability
provided

00:37:22.686 --> 00:37:25.336 A:middle
by HomeKit leveraging
iOS device connectivity.

00:37:25.976 --> 00:37:31.726 A:middle
We have Apple-defined
advertisement data

00:37:32.636 --> 00:37:36.286 A:middle
for HomeKit Accessory
Protocol for LE accessories.

00:37:36.856 --> 00:37:39.386 A:middle
So, this is in the
specifications.

00:37:39.386 --> 00:37:40.226 A:middle
You'll want to follow that.

00:37:40.226 --> 00:37:43.086 A:middle
So, your Bluetooth LE
HomeKit accessory is going

00:37:43.086 --> 00:37:45.386 A:middle
to advertise to HomeKit.

00:37:46.346 --> 00:37:49.456 A:middle
It's not going to
advertise to your app.

00:37:49.546 --> 00:37:53.616 A:middle
So, your app will
then use HomeKit APIs

00:37:53.886 --> 00:37:56.106 A:middle
to access your accessory
functionality.

00:37:59.226 --> 00:38:02.306 A:middle
Accessories on LE
are not identifiable


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:37:59.226 --> 00:38:02.306 A:middle
Accessories on LE
are not identifiable

00:38:03.086 --> 00:38:04.306 A:middle
from their advertisement data.

00:38:04.306 --> 00:38:06.886 A:middle
We use randomly generated
service IDs

00:38:07.656 --> 00:38:12.796 A:middle
so that your accessory
will not reveal what it is

00:38:12.796 --> 00:38:15.006 A:middle
if somebody is walking
around a neighborhood looking

00:38:15.006 --> 00:38:16.796 A:middle
for who has what door locks.

00:38:18.396 --> 00:38:21.636 A:middle
They'll have to walk up to the
door rather than just being able

00:38:21.636 --> 00:38:22.616 A:middle
to drive down the street.

00:38:24.086 --> 00:38:30.246 A:middle
And as I mentioned
earlier, we use security

00:38:30.736 --> 00:38:33.446 A:middle
at the application
layer or on top of GATT

00:38:33.916 --> 00:38:37.346 A:middle
so that we have a very
strong security model

00:38:37.346 --> 00:38:40.116 A:middle
that is equivalent on
LE side and on IP side.

00:38:40.116 --> 00:38:42.006 A:middle
So, we don't use
Bluetooth LE pairing.

00:38:42.686 --> 00:38:44.866 A:middle
So, let's talk a little
bit more about security.

00:38:45.646 --> 00:38:49.036 A:middle
So, we have end-to-end
encryption between iOS

00:38:49.036 --> 00:38:52.346 A:middle
and accessories so that it
doesn't matter who's listening

00:38:52.346 --> 00:38:52.776 A:middle
in the middle.

00:38:52.776 --> 00:38:54.826 A:middle
Nobody can intercept, inter,

00:38:55.476 --> 00:38:58.966 A:middle
inject or understand
the messages

00:38:58.966 --> 00:38:59.996 A:middle
that are being sent
back and forth

00:38:59.996 --> 00:39:02.686 A:middle
between an accessory
and iOS device.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:38:59.996 --> 00:39:02.686 A:middle
between an accessory
and iOS device.

00:39:03.576 --> 00:39:07.556 A:middle
The initial setup of the
accessory is secured directly

00:39:07.556 --> 00:39:09.506 A:middle
between the iOS device
and the accessory.

00:39:10.086 --> 00:39:13.846 A:middle
So, we use a setup
code that you will have

00:39:13.846 --> 00:39:15.116 A:middle
to provide on your accessory.

00:39:15.116 --> 00:39:17.756 A:middle
It can be on packaging, it
could be on the accessory,

00:39:18.106 --> 00:39:20.946 A:middle
that could be randomly
generated if you have an LCD.

00:39:21.066 --> 00:39:23.086 A:middle
It could be on a label or
engraved on the accessory.

00:39:23.566 --> 00:39:27.846 A:middle
The user enters that setup code
to perform the initial pairing

00:39:28.076 --> 00:39:29.846 A:middle
of your accessory to HomeKit.

00:39:31.356 --> 00:39:34.396 A:middle
This ensures that we
have a very strong basis

00:39:34.396 --> 00:39:35.856 A:middle
for our cryptographic
relationship

00:39:35.916 --> 00:39:38.286 A:middle
between iOS and the accessory.

00:39:39.456 --> 00:39:42.416 A:middle
Our protocol also has
perfect-forward secrecy.

00:39:43.076 --> 00:39:44.546 A:middle
If you are a security

00:39:44.996 --> 00:39:47.516 A:middle
or encryption guru you
know what this means,

00:39:47.586 --> 00:39:49.026 A:middle
but I'll summarize quickly.

00:39:49.026 --> 00:39:52.046 A:middle
It means that the
encryption key that we use

00:39:52.076 --> 00:39:56.046 A:middle
for sending messages back
and forth cannot be used

00:39:56.046 --> 00:39:58.896 A:middle
to decrypt messages from
any previous session

00:39:58.896 --> 00:39:59.976 A:middle
or any future session.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:40:01.066 --> 00:40:05.406 A:middle
So, every communication session
has a unique encryption key.

00:40:06.036 --> 00:40:12.306 A:middle
To implement all of this, we use
standard encryption algorithms

00:40:13.306 --> 00:40:16.966 A:middle
because it's always best
to have lots of scrutiny

00:40:17.606 --> 00:40:19.036 A:middle
on the encryption
that you're using.

00:40:19.806 --> 00:40:21.706 A:middle
So, we use these algorithms.

00:40:22.646 --> 00:40:25.666 A:middle
There's much more detail about
how these algorithms are used

00:40:25.666 --> 00:40:28.116 A:middle
in implementing HomeKit
Accessory Protocol

00:40:28.476 --> 00:40:32.046 A:middle
in our specifications, and
if you do have questions

00:40:32.046 --> 00:40:35.336 A:middle
about this, you can bring
those questions to our lab

00:40:35.686 --> 00:40:38.466 A:middle
on Thursday, the HomeKit Lab,

00:40:38.466 --> 00:40:40.626 A:middle
and of course there's
support available

00:40:40.626 --> 00:40:46.776 A:middle
through the MFi program for
you to get this security right.

00:40:48.546 --> 00:40:52.826 A:middle
Now, wrapping up,
so, next steps.

00:40:53.186 --> 00:40:54.916 A:middle
So, first of all
and most important,

00:40:54.916 --> 00:40:57.096 A:middle
if you're making accessories,
you need to go become familiar

00:40:57.096 --> 00:40:59.506 A:middle
with the MFi program
if you are not already.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:41:00.556 --> 00:41:02.866 A:middle
Through the MFi program,
you'll get access to all

00:41:02.866 --> 00:41:05.536 A:middle
of our specifications that
define everything I've talked

00:41:05.536 --> 00:41:08.586 A:middle
about here, explain to
you how to implement all

00:41:08.586 --> 00:41:11.736 A:middle
of the security, the
pairing, the protocol

00:41:11.736 --> 00:41:13.636 A:middle
and the profiles
on your accessory.

00:41:14.956 --> 00:41:17.686 A:middle
You also get access
to a great development

00:41:17.686 --> 00:41:18.866 A:middle
and certification tool.

00:41:18.866 --> 00:41:20.296 A:middle
It's an OS X application.

00:41:20.796 --> 00:41:24.076 A:middle
It provides you something
to connect your accessory

00:41:24.076 --> 00:41:25.406 A:middle
to while you're doing
development.

00:41:25.836 --> 00:41:27.246 A:middle
It implements the security.

00:41:27.246 --> 00:41:29.776 A:middle
It implements the protocol,
everything correctly,

00:41:30.146 --> 00:41:32.746 A:middle
and it provides you great debug
information to help you figure

00:41:32.746 --> 00:41:35.476 A:middle
out what's going on to get your
accessory working correctly.

00:41:36.006 --> 00:41:38.306 A:middle
And all of this is available
very soon, so please check

00:41:38.306 --> 00:41:40.206 A:middle
in there and get started.

00:41:40.766 --> 00:41:46.136 A:middle
And then of course, to learn
more about the HomeKit APIs,

00:41:46.466 --> 00:41:49.856 A:middle
come to our session this
afternoon, that's at 4:30,

00:41:50.416 --> 00:41:52.276 A:middle
and you come to our
lab on Thursday,

00:41:52.276 --> 00:41:54.386 A:middle
which I believe is at 12:45.

00:41:54.836 --> 00:41:56.876 A:middle
And with that, I'm
going to wrap up.

00:41:56.876 --> 00:41:59.806 A:middle
I'm going to hand
back to Robert,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:42:00.626 --> 00:42:02.346 A:middle
who's going to tell you
some more about AirPlay.

00:42:03.516 --> 00:42:06.846 A:middle
[ Applause ]

00:42:07.346 --> 00:42:10.366 A:middle
&gt;&gt; Thank you, Kevin, and
thanks also to Terry and Jorge.

00:42:10.976 --> 00:42:12.836 A:middle
That's some fascinating stuff,
and I'm really looking forward

00:42:12.836 --> 00:42:13.586 A:middle
to seeing what kind

00:42:13.586 --> 00:42:16.086 A:middle
of accessories you guys
produce this year with this.

00:42:17.216 --> 00:42:18.216 A:middle
Let's talk about AirPlay.

00:42:18.446 --> 00:42:20.896 A:middle
As you know, AirPlay
is our solution

00:42:20.896 --> 00:42:22.776 A:middle
for streaming high-quality
digital audio

00:42:22.776 --> 00:42:23.636 A:middle
to your accessories.

00:42:24.906 --> 00:42:26.906 A:middle
We provide a reference
platform for this.

00:42:27.056 --> 00:42:28.536 A:middle
It's a source drop
that you can use

00:42:28.536 --> 00:42:29.916 A:middle
and incorporate into
your platforms.

00:42:29.916 --> 00:42:32.756 A:middle
A lot of OEMs are
actually taking this

00:42:32.756 --> 00:42:34.636 A:middle
and producing modules that
you can just drop right

00:42:34.636 --> 00:42:35.726 A:middle
into your speaker solutions.

00:42:37.296 --> 00:42:41.186 A:middle
We've made some changes
to this this year.

00:42:41.996 --> 00:42:44.536 A:middle
We've made changes
around audio handling.

00:42:45.286 --> 00:42:47.516 A:middle
If your accessory can do
this, we're allowing you

00:42:47.516 --> 00:42:50.156 A:middle
to do skew compensation on
the accessory side this year.

00:42:51.306 --> 00:42:53.666 A:middle
We're also changing the way we
do buffer underrun handling,

00:42:54.236 --> 00:42:55.626 A:middle
and we think both of
these are important.

00:42:56.436 --> 00:42:59.316 A:middle
But we should point out that
if you're not comfortable

00:42:59.316 --> 00:43:00.316 A:middle
in actually doing the kind


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:42:59.316 --> 00:43:00.316 A:middle
in actually doing the kind

00:43:00.316 --> 00:43:02.816 A:middle
of qualitative audio testing
you'd need to do in order

00:43:02.816 --> 00:43:04.936 A:middle
to take advantage of
these, just leave them

00:43:04.936 --> 00:43:07.336 A:middle
at the default settings where
we do the accessory-side skew

00:43:07.336 --> 00:43:10.146 A:middle
compensation or the device-side
skew compensation, for example.

00:43:10.726 --> 00:43:14.616 A:middle
This year, we're also
introducing a new

00:43:14.616 --> 00:43:15.506 A:middle
reference platform.

00:43:16.056 --> 00:43:20.006 A:middle
If you take our AirPlay
source drop, it'll compile

00:43:20.006 --> 00:43:22.106 A:middle
out of the box on,
on that BSD running

00:43:22.106 --> 00:43:23.296 A:middle
on a Raspberry Pi platform.

00:43:24.256 --> 00:43:26.756 A:middle
You will need to provide the
authentication co-processor

00:43:26.756 --> 00:43:29.996 A:middle
of course, but it's, it'll
work just right out of the box.

00:43:31.196 --> 00:43:33.506 A:middle
Both of these will be
available with our source drop,

00:43:33.506 --> 00:43:34.606 A:middle
which should happen sometime

00:43:34.606 --> 00:43:41.186 A:middle
around the iOS 8 release
later in the year.

00:43:41.516 --> 00:43:42.896 A:middle
Next up, let's talk about iAP

00:43:42.896 --> 00:43:44.806 A:middle
and the external
accessory framework.

00:43:45.756 --> 00:43:49.286 A:middle
So, this year we've, well,
it's been two years now

00:43:49.286 --> 00:43:50.596 A:middle
since we released iAP2.

00:43:50.646 --> 00:43:52.386 A:middle
We've had a lot of
feedback from developers,

00:43:52.756 --> 00:43:55.526 A:middle
and this year we've made
some changes to both of these

00:43:55.526 --> 00:43:57.136 A:middle
to incorporate your feedback.

00:43:57.916 --> 00:43:59.686 A:middle
So, let's get right into that.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:44:00.736 --> 00:44:04.736 A:middle
For iAP2, we've made a bunch
of media playback enhancements

00:44:04.736 --> 00:44:06.236 A:middle
for your accessories
to take advantage of.

00:44:07.646 --> 00:44:10.396 A:middle
We're now allowing iAP2
accessories to get access

00:44:10.396 --> 00:44:11.606 A:middle
to the media playback queue.

00:44:12.576 --> 00:44:14.276 A:middle
Now, I should point out
that this queue isn't

00:44:14.276 --> 00:44:15.026 A:middle
always available.

00:44:15.506 --> 00:44:17.446 A:middle
For example, if you're
playing back a Genius mix,

00:44:18.046 --> 00:44:20.616 A:middle
we may not have the information
about what's coming up next.

00:44:20.996 --> 00:44:23.246 A:middle
Similarly, third-party
applications may not have

00:44:23.246 --> 00:44:23.946 A:middle
that information.

00:44:24.286 --> 00:44:26.586 A:middle
You don't know what's coming up
next in, for example, Pandora.

00:44:27.246 --> 00:44:30.826 A:middle
But if you design your
accessory with that in mind,

00:44:30.976 --> 00:44:31.886 A:middle
you should be able to get it,

00:44:31.886 --> 00:44:35.216 A:middle
when the playback
queue, when it's there.

00:44:35.726 --> 00:44:38.376 A:middle
We've also added messages for
allowing you to play all tracks,

00:44:38.626 --> 00:44:40.026 A:middle
something that a
lot of people asked.

00:44:40.026 --> 00:44:41.056 A:middle
Just a simple mechanism

00:44:41.056 --> 00:44:42.676 A:middle
that says play everything
on the device.

00:44:43.206 --> 00:44:46.266 A:middle
And we're allowing you to sync

00:44:46.266 --> 00:44:48.106 A:middle
to a specific time
within a track.

00:44:49.426 --> 00:44:54.216 A:middle
This one probably needs a
little bit of explaining.

00:44:54.336 --> 00:44:57.046 A:middle
We're allowing you to get
non-localized bundle identifiers

00:44:57.046 --> 00:44:58.136 A:middle
for the Now Playing app.

00:44:59.626 --> 00:45:02.956 A:middle
So, up to now, we've given you
the name of the Now Playing app,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:44:59.626 --> 00:45:02.956 A:middle
So, up to now, we've given you
the name of the Now Playing app,

00:45:02.956 --> 00:45:06.126 A:middle
but that may have
been localized based

00:45:06.126 --> 00:45:08.066 A:middle
on what language the
device is currently set to.

00:45:09.146 --> 00:45:10.166 A:middle
So, this year we're allowing you

00:45:10.166 --> 00:45:12.446 A:middle
to get the bundle identifier
for the app as well.

00:45:12.966 --> 00:45:15.716 A:middle
That way, if you're tailoring
your accessory's user interface

00:45:16.596 --> 00:45:19.526 A:middle
to mirror some, some
functionality

00:45:19.526 --> 00:45:20.846 A:middle
with the Now Playing
app, for example,

00:45:21.386 --> 00:45:23.886 A:middle
you can actually identify that
Now Playing app without having

00:45:23.886 --> 00:45:25.966 A:middle
to identify it in 50
different languages.

00:45:31.486 --> 00:45:35.336 A:middle
And finally, in media playback,
we're allowing those accessories

00:45:35.336 --> 00:45:37.646 A:middle
that synchronize with
the media library

00:45:38.366 --> 00:45:40.046 A:middle
to get progress information
on the state

00:45:40.046 --> 00:45:40.956 A:middle
of the synchronization.

00:45:42.396 --> 00:45:45.076 A:middle
And you can use this
information to display a spinner

00:45:45.076 --> 00:45:48.876 A:middle
or a progress bar to your user
so that they have some idea

00:45:48.876 --> 00:45:50.906 A:middle
of what's going on and that
media library is still coming

00:45:50.906 --> 00:45:51.896 A:middle
across to the accessory.

00:45:52.466 --> 00:45:55.766 A:middle
We've made some additional
enhancements

00:45:55.766 --> 00:45:59.266 A:middle
that aren't media related.

00:45:59.266 --> 00:46:01.756 A:middle
iAP2 accessories can now
get the time on the device.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:45:59.266 --> 00:46:01.756 A:middle
iAP2 accessories can now
get the time on the device.

00:46:02.756 --> 00:46:04.076 A:middle
You register for a notification,

00:46:04.546 --> 00:46:06.256 A:middle
and when the time changes,
we'll send it to you.

00:46:06.696 --> 00:46:08.746 A:middle
Now, by changes I
mean major changes.

00:46:09.376 --> 00:46:11.376 A:middle
We'll send it to you right
off the bat when you register

00:46:11.376 --> 00:46:14.376 A:middle
for the notification of course,
but we'll also send it to you

00:46:14.376 --> 00:46:17.716 A:middle
when midnight rolls over,
daylight savings time kicks in,

00:46:18.246 --> 00:46:23.916 A:middle
or the user just manually
modifies the time on the device.

00:46:24.096 --> 00:46:25.646 A:middle
For those of you
producing accessories

00:46:25.646 --> 00:46:27.236 A:middle
that charge the iOS device,

00:46:27.586 --> 00:46:30.976 A:middle
we are now providing detailed
charge state information

00:46:30.976 --> 00:46:31.336 A:middle
in iAP2.

00:46:31.336 --> 00:46:35.646 A:middle
So, for example, if you have
a battery case, you may want

00:46:35.646 --> 00:46:38.586 A:middle
to decide that you want to
charge the battery in the case

00:46:38.586 --> 00:46:40.216 A:middle
as opposed to the
battery in the device

00:46:40.766 --> 00:46:42.166 A:middle
from an external power source.

00:46:42.746 --> 00:46:44.886 A:middle
And you can use this detailed
charged state information

00:46:44.886 --> 00:46:49.596 A:middle
on the device to determine
when you should do that.

00:46:49.756 --> 00:46:52.536 A:middle
For those of you who use our
link layer reference platform,

00:46:53.536 --> 00:46:56.226 A:middle
we've added in a bunch of
compile options this year

00:46:56.226 --> 00:46:59.606 A:middle
that allow you to really slim
down the, the bill size of that.

00:46:59.606 --> 00:47:01.076 A:middle
So, if you're trying
to fit the link layer


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:46:59.606 --> 00:47:01.076 A:middle
So, if you're trying
to fit the link layer

00:47:01.076 --> 00:47:02.656 A:middle
into a small micro-controller,

00:47:03.066 --> 00:47:04.416 A:middle
this should make your
life a lot easier.

00:47:05.016 --> 00:47:09.756 A:middle
And finally, for the external
accessory proto, framework,

00:47:11.006 --> 00:47:13.576 A:middle
we are now allowing
multiple apps simultaneously

00:47:13.576 --> 00:47:15.006 A:middle
to communicate with
your accessory.

00:47:15.466 --> 00:47:16.786 A:middle
Now, we'll only do
this if you tell us

00:47:16.786 --> 00:47:18.996 A:middle
that your accessory is
capable of handling that,

00:47:19.516 --> 00:47:20.526 A:middle
but we highly recommend

00:47:20.526 --> 00:47:23.346 A:middle
that your accessories be
capable of doing that.

00:47:25.996 --> 00:47:28.346 A:middle
Next, let's talk about wireless
accessory configuration.

00:47:28.896 --> 00:47:31.386 A:middle
We introduced wireless accessory
configuration last year

00:47:31.906 --> 00:47:34.766 A:middle
as a simple and convenient
way for your users

00:47:34.766 --> 00:47:38.776 A:middle
to put their Wi-Fi
accessories onto their network.

00:47:39.776 --> 00:47:44.606 A:middle
It's been well received, but
we've had one persistent request

00:47:44.606 --> 00:47:48.056 A:middle
from developers, which
is to allow initiation

00:47:48.056 --> 00:47:50.006 A:middle
of the wireless accessory
configuration process

00:47:50.006 --> 00:47:51.196 A:middle
from within their applications.

00:47:52.096 --> 00:47:53.366 A:middle
So, this year we're
allowing this.

00:47:54.736 --> 00:47:56.406 A:middle
This new functionality
is exposed

00:47:56.406 --> 00:47:58.346 A:middle
through the external
accessory framework.

00:47:59.106 --> 00:48:00.166 A:middle
Simply import the framework.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:47:59.106 --> 00:48:00.166 A:middle
Simply import the framework.

00:48:00.406 --> 00:48:03.026 A:middle
You implement an
accessory browser delegate,

00:48:03.426 --> 00:48:05.146 A:middle
and you instantiate
an accessory browser.

00:48:05.726 --> 00:48:10.716 A:middle
You use the browser
to initiate searching

00:48:10.976 --> 00:48:12.546 A:middle
for unconfigured
Wi-Fi accessories.

00:48:13.866 --> 00:48:16.216 A:middle
I'm not going to call that name
out because it's rather long,

00:48:16.216 --> 00:48:19.366 A:middle
but I will say that you can add
a predicate to that to narrow

00:48:19.366 --> 00:48:21.336 A:middle
down the scope of the
accessories that you search,

00:48:21.336 --> 00:48:22.196 A:middle
that you're searching for.

00:48:22.766 --> 00:48:26.226 A:middle
In this example here, we're
only looking for accessories

00:48:26.466 --> 00:48:28.156 A:middle
by a company called
Amalgamated Audio.

00:48:29.296 --> 00:48:31.026 A:middle
You probably want to do this.

00:48:31.026 --> 00:48:32.666 A:middle
I don't think your apps
want find everything

00:48:32.666 --> 00:48:33.886 A:middle
that could potentially
be configured.

00:48:34.606 --> 00:48:35.946 A:middle
They only really want
to find the ones that,

00:48:36.226 --> 00:48:37.166 A:middle
that they know how to handle.

00:48:38.456 --> 00:48:43.646 A:middle
As accessories are found, your
delegate will receive callbacks.

00:48:45.166 --> 00:48:48.026 A:middle
You should keep a set of
the accessories that you,

00:48:48.146 --> 00:48:49.796 A:middle
that you've discovered
and presented to a,

00:48:49.796 --> 00:48:51.876 A:middle
to the user in any
manner you see fit.

00:48:56.286 --> 00:48:58.196 A:middle
If you're representing
a single accessory,

00:48:58.616 --> 00:48:59.856 A:middle
and you're a pressure
speaker dock,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:49:01.456 --> 00:49:04.596 A:middle
your user can select the
accessory, and at that stage,

00:49:04.596 --> 00:49:06.416 A:middle
you would kick off
a configuration

00:49:06.416 --> 00:49:08.506 A:middle
of the accessory using
the browser configure

00:49:08.506 --> 00:49:09.946 A:middle
accessory message.

00:49:10.556 --> 00:49:13.206 A:middle
By the way, notice
that we're passing

00:49:13.206 --> 00:49:15.616 A:middle
in a view controller here.

00:49:15.616 --> 00:49:20.056 A:middle
I'll get onto that in a minute.

00:49:20.596 --> 00:49:23.856 A:middle
OK, so you've just called
configure accessory.

00:49:24.696 --> 00:49:26.066 A:middle
We're now popping our UI

00:49:26.066 --> 00:49:28.126 A:middle
into your app using
that view controller.

00:49:28.816 --> 00:49:33.326 A:middle
The user configures the
accessory at this UI.

00:49:33.466 --> 00:49:37.666 A:middle
At this stage, the configuration
is proceeding in the background

00:49:37.796 --> 00:49:40.496 A:middle
and then the configuration
completes.

00:49:41.206 --> 00:49:44.956 A:middle
Then we drop back to your app.

00:49:45.516 --> 00:49:47.716 A:middle
At this stage, you should
continue your normal app flow.

00:49:47.716 --> 00:49:51.356 A:middle
Here we've searched for
the accessory over Bonjour

00:49:51.616 --> 00:49:53.436 A:middle
and we're showing it in
a list and allowing you

00:49:53.436 --> 00:49:57.506 A:middle
to do whatever your app allows
you to do with that accessory.

00:49:58.306 --> 00:49:59.806 A:middle
So, that's it.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:50:00.176 --> 00:50:01.656 A:middle
That's our new features
this year.

00:50:01.826 --> 00:50:04.826 A:middle
We've introduced some
exciting new functionality

00:50:04.826 --> 00:50:05.936 A:middle
around HealthKit and HomeKit.

00:50:06.726 --> 00:50:10.006 A:middle
We've enhanced the media
playback for IEP accessories

00:50:10.726 --> 00:50:13.856 A:middle
and we've introduced a
new framework for you

00:50:13.856 --> 00:50:16.496 A:middle
to use app-driven wireless
accessory configuration.

00:50:18.236 --> 00:50:22.106 A:middle
We're going to wrap up:

00:50:22.376 --> 00:50:25.646 A:middle
developer.apple.com is your
go-to site and the MFi program

00:50:25.646 --> 00:50:28.746 A:middle
in particular should be your
first port of call if you wanted

00:50:28.746 --> 00:50:30.016 A:middle
to start developing
an accessory.

00:50:31.226 --> 00:50:33.446 A:middle
Also on developer.apple.com,
you'll find a wealth

00:50:33.446 --> 00:50:37.346 A:middle
of information about frameworks,
case design guidelines,

00:50:38.356 --> 00:50:40.066 A:middle
you know, Bluetooth guidelines,

00:50:40.066 --> 00:50:42.526 A:middle
information about
iBeacon and a lot more.

00:50:43.146 --> 00:50:45.876 A:middle
We'd also love to hear from you.

00:50:45.876 --> 00:50:47.936 A:middle
You can contact our
technology evangelists

00:50:48.376 --> 00:50:49.456 A:middle
at the addresses given here.

00:50:49.606 --> 00:50:51.846 A:middle
And we also hang out on
the developer forums.

00:50:51.846 --> 00:50:53.276 A:middle
So, feel free to use those too.

00:50:54.306 --> 00:50:59.876 A:middle
Let's just summarize
some of the sessions

00:50:59.876 --> 00:51:02.166 A:middle
that are coming up later.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:50:59.876 --> 00:51:02.166 A:middle
that are coming up later.

00:51:02.376 --> 00:51:04.236 A:middle
Later today, in fact
right after this,

00:51:04.236 --> 00:51:05.536 A:middle
we have a HealthKit session,

00:51:06.056 --> 00:51:08.596 A:middle
and later in the afternoon
we have a Core Location

00:51:08.596 --> 00:51:09.656 A:middle
and HomeKit sessions.

00:51:10.276 --> 00:51:13.146 A:middle
On Friday, we also have
sessions around AirPrint

00:51:13.286 --> 00:51:14.746 A:middle
and for Game Controllers.

00:51:14.886 --> 00:51:16.896 A:middle
So, if you're interested in
those areas, please go along

00:51:16.896 --> 00:51:17.706 A:middle
and see, check those out.

00:51:17.706 --> 00:51:19.626 A:middle
And that's it.

00:51:19.626 --> 00:51:20.586 A:middle
Thank you all for coming.

00:51:20.686 --> 00:51:22.616 A:middle
I'm looking forward to
seeing you during the week.

