WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:00.506 --> 00:00:11.216 A:middle
[ Silence ]

00:00:11.716 --> 00:00:12.716 A:middle
&gt;&gt; Good morning, everyone.

00:00:13.456 --> 00:00:15.306 A:middle
&gt;&gt; Good morning.

00:00:15.416 --> 00:00:18.216 A:middle
&gt;&gt; Hey, [applause] it's great

00:00:18.356 --> 00:00:22.666 A:middle
to see some hardcore web people
here, especially on, you know,

00:00:22.736 --> 00:00:24.286 A:middle
the morning after the beer bash.

00:00:24.346 --> 00:00:26.136 A:middle
So I know you're all
hardcore if you're here.

00:00:26.786 --> 00:00:28.806 A:middle
And welcome to the
Designing Responsive Web

00:00:28.806 --> 00:00:29.826 A:middle
Experiences session.

00:00:30.476 --> 00:00:31.666 A:middle
My name is Casey.

00:00:31.706 --> 00:00:32.256 A:middle
&gt;&gt; And I'm Ted.

00:00:32.296 --> 00:00:34.906 A:middle
&gt;&gt; And today we're going to
show you how you can build one

00:00:35.056 --> 00:00:37.876 A:middle
website that's going to
look great everywhere.

00:00:38.876 --> 00:00:40.486 A:middle
And by the way, any
time that we say

00:00:40.486 --> 00:00:43.536 A:middle
"website" during this
session, we mean any web media.

00:00:43.936 --> 00:00:45.406 A:middle
I'm on the iBooks team.

00:00:45.606 --> 00:00:46.646 A:middle
&gt;&gt; And I'm on the WebKit team.

00:00:47.036 --> 00:00:50.966 A:middle
&gt;&gt; And we want both your
digital books and your websites

00:00:51.356 --> 00:00:52.246 A:middle
to look great everywhere.

00:00:53.396 --> 00:00:55.006 A:middle
So we don't have to tell you

00:00:55.006 --> 00:00:58.456 A:middle
that your website is being
viewed on a whole variety

00:00:58.456 --> 00:01:00.406 A:middle
of different devices
and screen sizes.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:58.456 --> 00:01:00.406 A:middle
of different devices
and screen sizes.

00:01:00.826 --> 00:01:05.486 A:middle
What we can do, though, is teach
you some really easy techniques

00:01:05.906 --> 00:01:07.286 A:middle
that you can use to ensure

00:01:07.286 --> 00:01:10.966 A:middle
that your website looks
great on all of these.

00:01:11.046 --> 00:01:12.196 A:middle
I want to be very clear, though.

00:01:12.986 --> 00:01:14.506 A:middle
What we are not going to talk

00:01:14.506 --> 00:01:17.316 A:middle
about today is building
multiple versions

00:01:17.636 --> 00:01:18.626 A:middle
for each of these devices.

00:01:19.646 --> 00:01:22.656 A:middle
In fact, today's session,
it is the antithesis

00:01:22.656 --> 00:01:24.516 A:middle
of the mobile-specific site.

00:01:25.286 --> 00:01:28.296 A:middle
There will be no
m.domainname here.

00:01:29.056 --> 00:01:31.246 A:middle
So instead, we're going
to build one website

00:01:31.246 --> 00:01:33.486 A:middle
that looks great
on all of these.

00:01:33.616 --> 00:01:37.466 A:middle
And a site that has a design
that can adapt and adjust

00:01:38.076 --> 00:01:39.576 A:middle
to always look good on all

00:01:39.576 --> 00:01:44.526 A:middle
of these different devices is
usually referred to as a website

00:01:44.526 --> 00:01:46.716 A:middle
that has a responsive design.

00:01:48.196 --> 00:01:51.456 A:middle
A responsive design, it's
just-it's just a buzzword.

00:01:52.116 --> 00:01:55.526 A:middle
It just means that your website
is sensitive to its environment,

00:01:56.016 --> 00:01:58.696 A:middle
which will allow it
to adapt and change

00:01:58.696 --> 00:02:00.246 A:middle
and just simply always
look good.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:01:58.696 --> 00:02:00.246 A:middle
and just simply always
look good.

00:02:00.926 --> 00:02:03.676 A:middle
And so today, Ted
and I are going

00:02:03.676 --> 00:02:07.846 A:middle
to show you not only what a
simple idea a responsive design

00:02:07.846 --> 00:02:10.955 A:middle
is, but really how
simple it is to implement.

00:02:13.156 --> 00:02:15.846 A:middle
We're going to look
at responsive columns.

00:02:16.436 --> 00:02:20.016 A:middle
Columns are a really great way
to both add some visual interest

00:02:20.016 --> 00:02:21.586 A:middle
to your website as well

00:02:21.816 --> 00:02:24.666 A:middle
as improve the legibility
of your site.

00:02:25.996 --> 00:02:28.376 A:middle
We'll also teach you
about font-relative units

00:02:28.376 --> 00:02:31.036 A:middle
and how you can use
them to make sure

00:02:31.036 --> 00:02:34.396 A:middle
that your layout has
fidelity at every font size.

00:02:34.916 --> 00:02:39.616 A:middle
And then Ted's going to show
you how you can use CSS Shapes

00:02:39.776 --> 00:02:43.376 A:middle
to wrap text around
images, and we'll make sure

00:02:43.376 --> 00:02:47.936 A:middle
that those images
are Retina ready.

00:02:47.936 --> 00:02:51.006 A:middle
And for the larger design
changes that we need to make,

00:02:51.006 --> 00:02:52.156 A:middle
we'll use media queries.

00:02:52.936 --> 00:02:55.796 A:middle
And finally, the finishing
touch will be hairlines,

00:02:55.926 --> 00:02:58.336 A:middle
where we can really dive
in deep and make use

00:02:58.336 --> 00:02:59.816 A:middle
of those beautiful
Retina screens.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:03:01.656 --> 00:03:03.526 A:middle
So why are we talking
about this anyway?

00:03:04.736 --> 00:03:07.956 A:middle
You know, WebKit does a really
great job of making sure

00:03:07.956 --> 00:03:11.616 A:middle
that your website looks
just as great on the iPhone

00:03:11.616 --> 00:03:12.756 A:middle
as it does on the desktop.

00:03:13.356 --> 00:03:16.666 A:middle
It just shrinks your site down

00:03:16.836 --> 00:03:18.226 A:middle
and makes it fit on
the phone screen.

00:03:18.226 --> 00:03:22.226 A:middle
And then the user can double tap
or pinch to zoom in to make sure

00:03:22.476 --> 00:03:23.656 A:middle
that they can read that text.

00:03:23.806 --> 00:03:25.466 A:middle
The text becomes
larger that way.

00:03:26.806 --> 00:03:27.946 A:middle
And it looks great.

00:03:28.606 --> 00:03:29.566 A:middle
It's not a lot of work for you.

00:03:30.616 --> 00:03:33.636 A:middle
And WebKit does the same
thing for more complex sites,

00:03:33.636 --> 00:03:34.946 A:middle
like this one that
Ted and I made.

00:03:35.936 --> 00:03:37.596 A:middle
It just shrinks all
that formatting

00:03:37.596 --> 00:03:39.496 A:middle
and layout down into one screen.

00:03:39.496 --> 00:03:41.136 A:middle
And that seems great, right?

00:03:42.316 --> 00:03:43.266 A:middle
Can you read that text?

00:03:43.886 --> 00:03:45.026 A:middle
Barely? At all?

00:03:45.026 --> 00:03:48.286 A:middle
Not really, and many
mobile designers

00:03:48.286 --> 00:03:50.636 A:middle
or website designers have
looked at this and said,

00:03:51.356 --> 00:03:52.326 A:middle
"Pshht, I can't have that.

00:03:52.816 --> 00:03:55.086 A:middle
I'm going to have to make
a mobile-specific site."

00:03:55.086 --> 00:03:57.426 A:middle
You know, we get it.

00:03:57.816 --> 00:04:00.966 A:middle
You want your website to
look great, and you want it


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:03:57.816 --> 00:04:00.966 A:middle
You want your website to
look great, and you want it

00:04:00.966 --> 00:04:03.566 A:middle
to be clear and easy to read
without your users having

00:04:03.566 --> 00:04:08.916 A:middle
to double-tap and pinch
to zoom in and pan around.

00:04:08.916 --> 00:04:10.366 A:middle
And some of you may
be thinking, "Well,

00:04:10.796 --> 00:04:12.586 A:middle
of course it doesn't look great.

00:04:12.586 --> 00:04:14.346 A:middle
You need to add a
meta viewport," right.

00:04:14.346 --> 00:04:17.546 A:middle
And that's a great first step.

00:04:17.546 --> 00:04:19.956 A:middle
A meta viewport's going
to make your text larger

00:04:19.956 --> 00:04:21.326 A:middle
in relation to the screen size.

00:04:22.366 --> 00:04:25.636 A:middle
But the thing is is that
your layout is still all tiny

00:04:25.636 --> 00:04:26.506 A:middle
and shrunk down.

00:04:26.796 --> 00:04:30.886 A:middle
So now you've got these big
words in a shrunk down layout,

00:04:30.886 --> 00:04:33.276 A:middle
and it just -- it
looks awful, right.

00:04:34.866 --> 00:04:38.486 A:middle
So lest you think, "OK, Casey,
no, really, we're going to have

00:04:38.526 --> 00:04:43.396 A:middle
to make a mobile-specific
site now," please keep in mind

00:04:43.756 --> 00:04:47.966 A:middle
that we're not building
websites for just the iPhone,

00:04:47.966 --> 00:04:49.906 A:middle
the iPad, the desktop.

00:04:50.766 --> 00:04:54.766 A:middle
And to prove this, if you
were to look at our website

00:04:54.766 --> 00:04:56.216 A:middle
on the desktop, looks
great, right?

00:04:56.856 --> 00:04:59.946 A:middle
We designed it for this
window size basically.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:05:00.786 --> 00:05:04.516 A:middle
But if I shrink down
the window, ooh,

00:05:04.516 --> 00:05:09.176 A:middle
I've got the same problem
here that I do on the phone.

00:05:10.316 --> 00:05:12.576 A:middle
So we need to make sure
that we're building a site

00:05:12.966 --> 00:05:16.136 A:middle
that looks great no matter
what our window size.

00:05:17.416 --> 00:05:19.996 A:middle
So, so far I've laid out
just a whole lot of no's.

00:05:20.236 --> 00:05:24.176 A:middle
I've said, "Well, you can't
make a mobile-specific site.

00:05:24.176 --> 00:05:26.936 A:middle
Using a meta viewport
isn't going

00:05:26.936 --> 00:05:27.836 A:middle
to get you all the way there.

00:05:28.246 --> 00:05:30.926 A:middle
And you have to build
a website that works

00:05:30.926 --> 00:05:34.746 A:middle
for every single possible
permutation on the desktop."

00:05:34.746 --> 00:05:36.526 A:middle
So what can we do?

00:05:36.526 --> 00:05:38.636 A:middle
&gt;&gt; Well, hold on.

00:05:38.636 --> 00:05:42.066 A:middle
Our goal here is to use
some simple responsive

00:05:42.066 --> 00:05:43.016 A:middle
design techniques.

00:05:43.706 --> 00:05:45.986 A:middle
And it seems like the
best way forward is just

00:05:45.986 --> 00:05:49.496 A:middle
to identify specific problems
that we're seeing right now

00:05:50.016 --> 00:05:51.616 A:middle
and just work through
them one at a time.

00:05:52.006 --> 00:05:52.426 A:middle
&gt;&gt; Sounds good.

00:05:52.606 --> 00:05:56.216 A:middle
&gt;&gt; I mean, the first one that's
obvious to me is that masthead

00:05:56.216 --> 00:05:59.826 A:middle
up top becomes so tall
on the phone that I have

00:05:59.826 --> 00:06:01.026 A:middle
to scroll to see any content.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:05:59.826 --> 00:06:01.026 A:middle
to scroll to see any content.

00:06:01.256 --> 00:06:04.336 A:middle
&gt;&gt; And the other thing is is
those columns are just really

00:06:04.336 --> 00:06:07.456 A:middle
skinny like so it's
completely illegible.

00:06:08.186 --> 00:06:10.426 A:middle
&gt;&gt; And that caption on our
galaxy is blowing right

00:06:10.426 --> 00:06:12.916 A:middle
out of the image and covering
our initial text there.

00:06:13.456 --> 00:06:14.756 A:middle
&gt;&gt; Yeah, that's pretty horrible.

00:06:14.756 --> 00:06:15.826 A:middle
Where do you think
we should start?

00:06:16.916 --> 00:06:18.226 A:middle
&gt;&gt; I think we should
start with the columns.

00:06:18.576 --> 00:06:19.506 A:middle
Those look really terrible.

00:06:20.696 --> 00:06:23.846 A:middle
&gt;&gt; OK, let's start with columns
'cause I personally really

00:06:23.846 --> 00:06:25.906 A:middle
like columns.

00:06:25.906 --> 00:06:29.116 A:middle
I love that they add both a
visual interest to my website

00:06:29.116 --> 00:06:31.446 A:middle
and that they improve
the legibility.

00:06:31.446 --> 00:06:33.196 A:middle
It's really the perfect
combination

00:06:33.196 --> 00:06:33.976 A:middle
of form and function.

00:06:37.206 --> 00:06:42.616 A:middle
And columns are great for this
because they're able to divide

00:06:42.966 --> 00:06:46.446 A:middle
up big blocks of text
into more legible chunks.

00:06:46.856 --> 00:06:49.746 A:middle
So where I might've had a big
block or really long lines

00:06:49.746 --> 00:06:53.686 A:middle
of text, I'm now able to have
very consumable size, right.

00:06:54.086 --> 00:06:57.606 A:middle
Now, the problem we ran
into with our website

00:06:57.606 --> 00:07:00.036 A:middle
and why those columns
weren't looking good is


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:06:57.606 --> 00:07:00.036 A:middle
and why those columns
weren't looking good is

00:07:00.036 --> 00:07:05.416 A:middle
because we defined a set number
of columns that had to be there

00:07:05.416 --> 00:07:07.336 A:middle
for every screen size, right.

00:07:07.776 --> 00:07:10.796 A:middle
So when our windows shrunk
down, those columns had

00:07:10.796 --> 00:07:14.216 A:middle
to become really narrow
and we were only able

00:07:14.216 --> 00:07:15.766 A:middle
to have a few words per line.

00:07:17.266 --> 00:07:20.776 A:middle
So to make your columns
responsive,

00:07:21.306 --> 00:07:24.346 A:middle
all we have to do is instead
of defining a column count

00:07:24.736 --> 00:07:26.896 A:middle
or a set number of
columns on our page,

00:07:27.486 --> 00:07:30.186 A:middle
we just define the column width.

00:07:30.186 --> 00:07:34.616 A:middle
So to give you an example of
this, I have two web pages here,

00:07:34.616 --> 00:07:39.366 A:middle
very simplified, of where
one has the columns defined

00:07:39.366 --> 00:07:42.376 A:middle
in column width, one
has the columns defined

00:07:42.376 --> 00:07:44.796 A:middle
by the column count,
like Ted's and my site.

00:07:45.606 --> 00:07:51.446 A:middle
Now when I resize that window
-- resize that window --

00:07:51.446 --> 00:07:57.266 A:middle
the page that we defined
the column width we have

00:07:57.266 --> 00:07:58.016 A:middle
two columns.

00:07:58.016 --> 00:08:00.436 A:middle
And we've maintained
that legible width,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:07:58.016 --> 00:08:00.436 A:middle
And we've maintained
that legible width,

00:08:01.116 --> 00:08:03.856 A:middle
whereas the column count had to
shrink down like we saw before.

00:08:04.666 --> 00:08:07.356 A:middle
So responsive columns
are really great,

00:08:07.616 --> 00:08:09.596 A:middle
defining the column
width is really great

00:08:09.596 --> 00:08:11.336 A:middle
because WebKit will
automatically add

00:08:12.196 --> 00:08:15.656 A:middle
or eliminate columns as room
becomes available or is removed.

00:08:16.096 --> 00:08:20.636 A:middle
And we recommend when you are
defining your column width

00:08:20.636 --> 00:08:23.886 A:middle
that you use a font-relative
unit.

00:08:24.996 --> 00:08:26.556 A:middle
Font-relative units
are really great

00:08:26.556 --> 00:08:29.286 A:middle
because if your user
resizes their text,

00:08:29.626 --> 00:08:33.525 A:middle
the column's width will
also resize to match that.

00:08:34.285 --> 00:08:36.086 A:middle
So give you a simplified
example.

00:08:37.506 --> 00:08:39.986 A:middle
Here we have the
alphabet, right.

00:08:39.986 --> 00:08:42.996 A:middle
There's five letters
on that first line

00:08:42.996 --> 00:08:46.076 A:middle
of the first column:
A, B, C, D, and E.

00:08:46.076 --> 00:08:48.686 A:middle
Now, because my column's
width is defined

00:08:48.926 --> 00:08:53.286 A:middle
in a font-relative unit,
when I make my text smaller,

00:08:53.876 --> 00:08:56.846 A:middle
I will maintain those five
letters across the top.

00:08:57.146 --> 00:09:00.546 A:middle
And the same thing goes with the
number of words on your column.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:08:57.146 --> 00:09:00.546 A:middle
And the same thing goes with the
number of words on your column.

00:09:00.546 --> 00:09:03.056 A:middle
You'll maintain a
legible link of words.

00:09:04.316 --> 00:09:07.036 A:middle
So all of this great
functionality,

00:09:07.036 --> 00:09:08.306 A:middle
these responsive columns,

00:09:08.306 --> 00:09:10.086 A:middle
it seems like you're
getting a lot here, right?

00:09:11.066 --> 00:09:12.906 A:middle
It's just one CSS property.

00:09:13.726 --> 00:09:16.316 A:middle
You just define column
width and define it

00:09:16.316 --> 00:09:17.386 A:middle
with the font-relative unit.

00:09:17.386 --> 00:09:19.916 A:middle
In this case we're using 15 rem.

00:09:21.206 --> 00:09:24.416 A:middle
So to show you how great
columns are in real time,

00:09:24.636 --> 00:09:25.526 A:middle
here's Ted with a demo.

00:09:26.836 --> 00:09:27.646 A:middle
&gt;&gt; OK, thanks, Casey.

00:09:27.646 --> 00:09:28.196 A:middle
Here we are.

00:09:28.196 --> 00:09:31.126 A:middle
So here's this website
that Casey and I built,

00:09:31.576 --> 00:09:35.196 A:middle
and it's looking pretty
great at this-wow,

00:09:35.196 --> 00:09:38.626 A:middle
that scrolls really
fast-at this window width.

00:09:39.196 --> 00:09:43.876 A:middle
But as you saw, when we
make it more narrower,

00:09:45.276 --> 00:09:49.596 A:middle
the columns start getting harder
and harder to read until a point

00:09:49.596 --> 00:09:52.576 A:middle
where you hit here and
it's just very illegible.

00:09:52.576 --> 00:09:54.996 A:middle
So you can see up in the
corner I have a little bit

00:09:54.996 --> 00:09:58.036 A:middle
of JavaScript showing you
what the window width is

00:09:58.036 --> 00:10:00.326 A:middle
so I can make adjustments
as necessary.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:09:58.036 --> 00:10:00.326 A:middle
so I can make adjustments
as necessary.

00:10:01.576 --> 00:10:06.106 A:middle
So as Casey suggested, let's try
setting our column width instead

00:10:06.106 --> 00:10:06.936 A:middle
of our column count.

00:10:07.196 --> 00:10:10.676 A:middle
So over here in Xcode, you can
see I have the column count

00:10:10.676 --> 00:10:11.036 A:middle
of 3.

00:10:12.426 --> 00:10:21.286 A:middle
Just kill that and replace that
with setting the column width

00:10:21.896 --> 00:10:23.746 A:middle
to 15 rem like Casey suggested.

00:10:24.156 --> 00:10:28.886 A:middle
We'll save that, we'll hit
reload and nothing's changed.

00:10:29.446 --> 00:10:31.056 A:middle
Our window width is
still wide enough

00:10:31.056 --> 00:10:33.256 A:middle
to accommodate three
columns like we had before.

00:10:33.866 --> 00:10:36.256 A:middle
But this time as
we get more narrow,

00:10:37.446 --> 00:10:38.536 A:middle
we'll hit a point-let's see

00:10:38.536 --> 00:10:40.296 A:middle
where it happens-right,
OK, here.

00:10:40.376 --> 00:10:43.386 A:middle
Right around 1100 pixels we
drop down to two columns.

00:10:43.936 --> 00:10:44.926 A:middle
It's still really legible.

00:10:45.756 --> 00:10:50.316 A:middle
And, again, as we get even
smaller, we'll hit a point right

00:10:50.316 --> 00:10:54.026 A:middle
around 700 and some odd pixels
where we go down to one column,

00:10:54.826 --> 00:10:56.316 A:middle
which, even at the
narrowest window width,

00:10:56.316 --> 00:11:00.266 A:middle
is still a very legible
amount of text.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:10:56.316 --> 00:11:00.266 A:middle
is still a very legible
amount of text.

00:11:00.266 --> 00:11:03.376 A:middle
I mean, we're not done; that
sidebar still looks terrible.

00:11:03.376 --> 00:11:07.136 A:middle
But that's really
all you have to do

00:11:07.136 --> 00:11:10.396 A:middle
to get simple responsive columns
with just a single property.

00:11:10.836 --> 00:11:18.496 A:middle
Let's dive a little bit
more into the features

00:11:18.496 --> 00:11:23.926 A:middle
of the CSS columns
column module.

00:11:24.076 --> 00:11:26.906 A:middle
OK, so you've seen
the column count

00:11:27.316 --> 00:11:28.436 A:middle
and column width properties,

00:11:28.816 --> 00:11:30.356 A:middle
which are pretty
straightforward.

00:11:31.246 --> 00:11:33.576 A:middle
When you are laying out
a page with columns,

00:11:33.576 --> 00:11:36.556 A:middle
it's best to have some white
space between the columns.

00:11:36.996 --> 00:11:39.556 A:middle
If you don't, the
lines can run together

00:11:39.556 --> 00:11:40.746 A:middle
and it can be really
hard to read.

00:11:40.746 --> 00:11:43.886 A:middle
And this is controlled with
the column-gap property.

00:11:44.456 --> 00:11:48.316 A:middle
You might want a decorative
line inside that gap.

00:11:48.966 --> 00:11:52.636 A:middle
You can define such a line
with the column-rule property,

00:11:52.636 --> 00:11:54.916 A:middle
whose syntax is just like the
border properties you're used

00:11:54.916 --> 00:11:55.626 A:middle
to using already.

00:11:56.626 --> 00:11:59.896 A:middle
And finally, if you'd
like an element to pop

00:11:59.896 --> 00:12:01.986 A:middle
out of your columns
and span across them,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:11:59.896 --> 00:12:01.986 A:middle
out of your columns
and span across them,

00:12:01.986 --> 00:12:05.176 A:middle
you can easily do this with
the column-span property,

00:12:05.906 --> 00:12:07.896 A:middle
which looks really great.

00:12:08.536 --> 00:12:13.086 A:middle
So to sum up, making
responsive columns that adjust

00:12:13.616 --> 00:12:15.306 A:middle
to a different environment
is super easy.

00:12:15.696 --> 00:12:17.836 A:middle
CSS gets you a lot
of that for free

00:12:18.696 --> 00:12:20.006 A:middle
by using the column
width property.

00:12:21.156 --> 00:12:25.516 A:middle
I want to expand a bit,
though, on why we chose

00:12:25.516 --> 00:12:29.506 A:middle
to use a font-relative
unit there.

00:12:29.686 --> 00:12:32.746 A:middle
Font-relative units are
exactly what they sound like.

00:12:32.806 --> 00:12:35.556 A:middle
They're CSS units that
are defined in terms

00:12:35.556 --> 00:12:36.816 A:middle
of your current font size

00:12:37.126 --> 00:12:40.946 A:middle
or some other text metric
that's related to font size.

00:12:41.656 --> 00:12:43.146 A:middle
And it's very common
to use these

00:12:43.146 --> 00:12:46.956 A:middle
to set the font size itself,
but you could also use them

00:12:46.956 --> 00:12:49.926 A:middle
for any part of your
layout whose size should be

00:12:49.926 --> 00:12:52.756 A:middle
proportional to the
current text size.

00:12:52.756 --> 00:12:56.516 A:middle
An obvious example would be the
margins around your paragraphs.

00:12:57.106 --> 00:13:00.126 A:middle
As font size increases,
you'd like those margins


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:12:57.106 --> 00:13:00.126 A:middle
As font size increases,
you'd like those margins

00:13:00.126 --> 00:13:02.316 A:middle
to also increase in
proportion to that.

00:13:02.816 --> 00:13:08.426 A:middle
And the big benefit here is
that by using these units,

00:13:08.426 --> 00:13:11.736 A:middle
your layout will automatically
adjust to different font sizes.

00:13:12.936 --> 00:13:16.186 A:middle
Now, you set a font size, but
your user might change it.

00:13:16.216 --> 00:13:17.926 A:middle
They could use Cmd+ and Cmd-

00:13:18.816 --> 00:13:23.496 A:middle
or perhaps they've changed
the minimum font size setting,

00:13:23.866 --> 00:13:25.656 A:middle
which is very common
for low-vision users.

00:13:26.196 --> 00:13:29.646 A:middle
So you should always make your
layout adjust to a font size

00:13:29.646 --> 00:13:32.586 A:middle
that you're not expecting.

00:13:32.646 --> 00:13:35.846 A:middle
There are four font-relative
units in CSS.

00:13:36.916 --> 00:13:40.206 A:middle
There's the em, which I'm sure
you're all very familiar with;

00:13:40.206 --> 00:13:42.306 A:middle
it's very popular,
very common on the web.

00:13:42.446 --> 00:13:45.926 A:middle
And an em is defined in
terms of the font size

00:13:46.456 --> 00:13:47.406 A:middle
of the current element,

00:13:48.456 --> 00:13:50.586 A:middle
which may be inherited
from its ancestors.

00:13:51.046 --> 00:13:56.406 A:middle
Less common is the ex, which
is approximately half an em.

00:13:57.016 --> 00:13:59.946 A:middle
It's really supposed to
be basically the height

00:13:59.946 --> 00:14:02.816 A:middle
of a lowercase letter.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:13:59.946 --> 00:14:02.816 A:middle
of a lowercase letter.

00:14:03.316 --> 00:14:04.816 A:middle
This is very useful
when you're trying

00:14:04.816 --> 00:14:07.826 A:middle
to size an element
inside a line of text

00:14:07.826 --> 00:14:10.156 A:middle
so that it looks
natural next to the rest

00:14:10.396 --> 00:14:13.106 A:middle
of the text in the line.

00:14:13.106 --> 00:14:17.556 A:middle
The ch is based on the
width of the numeral 0,

00:14:18.356 --> 00:14:19.306 A:middle
which may seem random.

00:14:20.436 --> 00:14:24.316 A:middle
That is a typical character
width, and so you can use it

00:14:24.316 --> 00:14:25.986 A:middle
for sizing an input element

00:14:26.606 --> 00:14:28.906 A:middle
where you're expecting,
say, 30 characters.

00:14:29.446 --> 00:14:32.316 A:middle
You can say 30 ch and it'll be
approximately the right size.

00:14:33.386 --> 00:14:35.236 A:middle
And finally we come to the rem,

00:14:35.236 --> 00:14:36.906 A:middle
which is the unit
that Casey was using.

00:14:37.446 --> 00:14:40.836 A:middle
The rem is just like the em that
you're already familiar with,

00:14:41.376 --> 00:14:43.786 A:middle
but instead of being
based on the font size

00:14:43.786 --> 00:14:47.166 A:middle
of the current element, it's
always based on the font size

00:14:47.166 --> 00:14:48.556 A:middle
of the body, or the
root element.

00:14:49.076 --> 00:14:52.906 A:middle
So why would you want to
use rems instead of ems?

00:14:53.036 --> 00:14:55.436 A:middle
You're already using ems;
they're great for you.

00:14:55.436 --> 00:14:57.086 A:middle
So here's a simple example.

00:14:57.166 --> 00:15:02.606 A:middle
I've got a simple website
with a header, "Hello,"


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:14:57.166 --> 00:15:02.606 A:middle
I've got a simple website
with a header, "Hello,"

00:15:02.606 --> 00:15:05.006 A:middle
and on the left I've
sized it with ems

00:15:05.556 --> 00:15:09.686 A:middle
and on the right I've
sized it with rems.

00:15:09.756 --> 00:15:14.586 A:middle
OK, so far they're identical,
everything works the same.

00:15:15.056 --> 00:15:16.036 A:middle
Well, a few months from now,

00:15:17.066 --> 00:15:18.776 A:middle
I've made a change
to my website.

00:15:18.776 --> 00:15:21.646 A:middle
I've added a container
element that happens

00:15:21.646 --> 00:15:22.836 A:middle
to have this header
inside of it.

00:15:23.276 --> 00:15:26.116 A:middle
And because someone told me
to use font-relative units,

00:15:26.426 --> 00:15:29.496 A:middle
I went ahead and sized that
font size with ems as well.

00:15:30.076 --> 00:15:33.736 A:middle
So what I expect to happen is
this: I want nothing to change.

00:15:34.746 --> 00:15:40.296 A:middle
But if I had used ems for
my header, what happens?

00:15:40.996 --> 00:15:43.146 A:middle
The browser says, "Oh,
this font size is in ems.

00:15:44.366 --> 00:15:45.736 A:middle
OK, well, what's the
parent font size?

00:15:45.736 --> 00:15:46.566 A:middle
Oh, that's in ems."

00:15:47.196 --> 00:15:50.006 A:middle
And it keeps looking up until
it finds a concrete font size

00:15:50.076 --> 00:15:53.426 A:middle
and then computes this
sort of compound font size.

00:15:54.326 --> 00:15:57.006 A:middle
And so the result is something
way bigger than I intended

00:15:57.146 --> 00:15:58.976 A:middle
when I first sized that
header a few months ago.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:16:00.446 --> 00:16:02.906 A:middle
Unlike that, in the
case of rems,

00:16:03.236 --> 00:16:05.706 A:middle
it's always looking back
to the body element.

00:16:05.706 --> 00:16:07.856 A:middle
It's skipping its
whole ancestor chain,

00:16:07.856 --> 00:16:11.326 A:middle
so I never have a different
font size than I expected.

00:16:11.876 --> 00:16:17.246 A:middle
OK, so we've taken a quick
look at font-relative units

00:16:17.246 --> 00:16:20.626 A:middle
and why I think the
rem is pretty great.

00:16:21.486 --> 00:16:23.346 A:middle
Let's take a look at our
website and see where we are.

00:16:27.156 --> 00:16:28.576 A:middle
OK, it's looking pretty good.

00:16:28.576 --> 00:16:29.776 A:middle
&gt;&gt; Yeah, that's definitely
better.

00:16:30.526 --> 00:16:33.906 A:middle
We definitely still
have the sidebar there

00:16:34.076 --> 00:16:35.576 A:middle
that is a significant issue.

00:16:35.576 --> 00:16:37.906 A:middle
But I think let's
tackle that one later.

00:16:38.056 --> 00:16:38.306 A:middle
&gt;&gt; All right.

00:16:38.306 --> 00:16:39.756 A:middle
What do you want to do next?

00:16:39.756 --> 00:16:41.376 A:middle
&gt;&gt; Well, so what's kind
of bothering me is all

00:16:41.376 --> 00:16:43.566 A:middle
that white text around
the moon, right,

00:16:43.566 --> 00:16:44.666 A:middle
all that extra white space.

00:16:44.786 --> 00:16:47.026 A:middle
I just-I feel like we're
not making a good use

00:16:47.386 --> 00:16:49.706 A:middle
of the screen real estate, and
it just feels kind of clunky.

00:16:50.586 --> 00:16:53.486 A:middle
&gt;&gt; Yeah, I mean, the whole point
of adjusting our column width

00:16:53.486 --> 00:16:57.016 A:middle
in the first place was to
have nice, readable lines.

00:16:57.826 --> 00:16:59.856 A:middle
And our moon is really
interfering with that.

00:16:59.856 --> 00:17:01.806 A:middle
We have these really narrow
lines of text next to it.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:16:59.856 --> 00:17:01.806 A:middle
We have these really narrow
lines of text next to it.

00:17:02.356 --> 00:17:02.836 A:middle
&gt;&gt; Definitely.

00:17:02.956 --> 00:17:04.276 A:middle
&gt;&gt; So let's take a look at that.

00:17:04.776 --> 00:17:07.185 A:middle
So to simplify, here's our moon.

00:17:07.516 --> 00:17:09.256 A:middle
We've floated it in our column.

00:17:09.415 --> 00:17:11.316 A:middle
And those lines next
to it, they're floating

00:17:11.316 --> 00:17:14.136 A:middle
around the image element
and they look really narrow.

00:17:15.205 --> 00:17:19.996 A:middle
Well, I don't have a whole
lot of time to fix this,

00:17:19.996 --> 00:17:21.996 A:middle
so the easiest thing
is, you know,

00:17:21.996 --> 00:17:23.675 A:middle
we could just not float the moon

00:17:23.736 --> 00:17:25.756 A:middle
and that way there's no
narrow lines next to it.

00:17:25.935 --> 00:17:27.976 A:middle
It looks pretty good, right?

00:17:27.976 --> 00:17:30.596 A:middle
&gt;&gt; OK, yeah, Ted,
you could do that.

00:17:30.686 --> 00:17:33.916 A:middle
I have a feeling, though,
that you have a much cleverer,

00:17:33.916 --> 00:17:36.246 A:middle
easy solution to that.

00:17:36.246 --> 00:17:40.626 A:middle
And this just kind of
feels like a copout.

00:17:40.626 --> 00:17:41.826 A:middle
&gt;&gt; OK, fair enough.

00:17:41.886 --> 00:17:47.416 A:middle
So with a new feature called
CSS Shapes, which is available

00:17:47.416 --> 00:17:51.826 A:middle
in Yosemite and iOS 8, we
can actually flow that text

00:17:51.826 --> 00:17:53.146 A:middle
around the curvature
of the moon.

00:17:53.146 --> 00:17:53.936 A:middle
It'll look really great.

00:17:54.786 --> 00:17:57.506 A:middle
So what's going on here?

00:17:57.506 --> 00:18:00.586 A:middle
CSS Shapes, it's a simple
feature that allows you


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:17:57.506 --> 00:18:00.586 A:middle
CSS Shapes, it's a simple
feature that allows you

00:18:00.586 --> 00:18:04.026 A:middle
to flow text around
a floated element

00:18:04.496 --> 00:18:06.806 A:middle
with an interesting
shape or geometry.

00:18:07.156 --> 00:18:11.936 A:middle
So in this case a triangle
or a circle, like our moon,

00:18:12.616 --> 00:18:14.756 A:middle
or Casey's favorite, Mr. Pacman.

00:18:15.746 --> 00:18:16.446 A:middle
&gt;&gt; Go, Mr. Pacman.

00:18:17.766 --> 00:18:19.596 A:middle
&gt;&gt; So how can we use
this for our moon?

00:18:20.076 --> 00:18:23.266 A:middle
So like we saw before,
we have our moon element.

00:18:23.266 --> 00:18:24.886 A:middle
It's just an image
element of course.

00:18:25.616 --> 00:18:27.466 A:middle
And we've floated it
within our column.

00:18:27.966 --> 00:18:32.266 A:middle
Now, it just so happens that
this image of the moon is

00:18:32.266 --> 00:18:33.396 A:middle
on a transparent background.

00:18:33.886 --> 00:18:39.226 A:middle
And CSS Shapes has a great
feature where you can provide it

00:18:39.226 --> 00:18:42.416 A:middle
with an image and it will
use the visible, or opaque,

00:18:42.416 --> 00:18:44.346 A:middle
part of that image
to define the shape.

00:18:45.106 --> 00:18:46.256 A:middle
You do this with one property.

00:18:46.546 --> 00:18:48.696 A:middle
The property is called
shape-outside,

00:18:48.696 --> 00:18:51.976 A:middle
and in this case we're providing
it the image of the moon.

00:18:52.426 --> 00:18:54.566 A:middle
It'll look into the
image data and say, OK,

00:18:54.566 --> 00:18:55.646 A:middle
here's the opaque part.

00:18:55.646 --> 00:18:58.236 A:middle
And as you can see, our
lines of text are now flowing

00:18:58.236 --> 00:18:59.206 A:middle
around the edge of the moon.

00:18:59.756 --> 00:19:02.066 A:middle
It's that easy.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:18:59.756 --> 00:19:02.066 A:middle
It's that easy.

00:19:02.936 --> 00:19:04.056 A:middle
&gt;&gt; Pretty cool, right?

00:19:04.156 --> 00:19:04.546 A:middle
&gt;&gt; Of course.

00:19:04.546 --> 00:19:05.166 A:middle
It's that easy.

00:19:06.281 --> 00:19:08.281 A:middle
[ Applause ]

00:19:08.546 --> 00:19:10.536 A:middle
Of course it's that easy
because I lucked out.

00:19:10.536 --> 00:19:12.466 A:middle
My moon is on a transparent
background already.

00:19:13.226 --> 00:19:15.086 A:middle
But a lot of times it's not.

00:19:15.086 --> 00:19:17.856 A:middle
You have an image
that's entirely opaque

00:19:17.856 --> 00:19:21.226 A:middle
and you don't have the
Photoshop skills to go in

00:19:21.226 --> 00:19:22.556 A:middle
and fix it up; I
certainly don't.

00:19:22.556 --> 00:19:24.166 A:middle
Actually, a lot of
you do, I'm sure.

00:19:24.226 --> 00:19:26.476 A:middle
So what do I do now?

00:19:26.476 --> 00:19:29.036 A:middle
So as you can see, I still have
that shape-outside property,

00:19:29.436 --> 00:19:31.026 A:middle
but this is an opaque moon,

00:19:31.876 --> 00:19:34.636 A:middle
so Shapes doesn't have
anything to go on here.

00:19:37.036 --> 00:19:40.986 A:middle
Fortunately, we can also, in
addition to using an image

00:19:40.986 --> 00:19:42.326 A:middle
of a source of the shape data,

00:19:42.326 --> 00:19:46.256 A:middle
we can simply use some basic
geometric shapes as well.

00:19:46.606 --> 00:19:50.716 A:middle
And of course the moon,
luckily for me, is a circle.

00:19:52.386 --> 00:19:58.086 A:middle
So what I want to do is somehow
tell the CSS Shapes module

00:19:58.086 --> 00:20:01.266 A:middle
to use this circle to
flow the text around.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:19:58.086 --> 00:20:01.266 A:middle
to use this circle to
flow the text around.

00:20:01.396 --> 00:20:04.386 A:middle
And I do that using
the circle() function.

00:20:05.766 --> 00:20:06.526 A:middle
Pretty straightforward.

00:20:06.526 --> 00:20:08.716 A:middle
It takes one argument,
the radius.

00:20:09.356 --> 00:20:12.376 A:middle
In this case, I used 50 percent
because I wanted the diameter

00:20:12.646 --> 00:20:15.876 A:middle
of the circle to be the full
width of the image element.

00:20:16.066 --> 00:20:17.696 A:middle
And that's looking pretty good.

00:20:19.256 --> 00:20:21.106 A:middle
There are other predefined
shapes.

00:20:21.336 --> 00:20:25.016 A:middle
Just to take one example,
you can use an ellipse.

00:20:26.486 --> 00:20:29.646 A:middle
Of course, an ellipse with
the same dimensions in x

00:20:29.646 --> 00:20:32.396 A:middle
and y is just a circle, so I
really haven't changed anything.

00:20:32.896 --> 00:20:34.876 A:middle
But you can get really
interesting with this too.

00:20:34.876 --> 00:20:37.586 A:middle
There is a polygon function

00:20:37.586 --> 00:20:40.706 A:middle
which allows you define
a fairly arbitrary shape.

00:20:41.426 --> 00:20:45.016 A:middle
So as an example, I drew
an octagon around my moon.

00:20:45.806 --> 00:20:48.106 A:middle
The polygon function takes
just a sequence of x,

00:20:48.106 --> 00:20:51.666 A:middle
y coordinates and, hey, that
looks pretty great actually.

00:20:51.666 --> 00:20:54.716 A:middle
And all of this was
still, again,

00:20:54.796 --> 00:20:58.946 A:middle
with just one CSS property.

00:20:59.026 --> 00:21:03.746 A:middle
OK, cool. We see how easy
it is to use CSS Shapes


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:20:59.026 --> 00:21:03.746 A:middle
OK, cool. We see how easy
it is to use CSS Shapes

00:21:04.146 --> 00:21:05.846 A:middle
to get a really great
visual effect

00:21:05.896 --> 00:21:08.046 A:middle
that was basically
impossible to do before.

00:21:08.586 --> 00:21:12.766 A:middle
What do you want to do next?

00:21:12.766 --> 00:21:14.946 A:middle
&gt;&gt; Well, let's take a
look back at our website.

00:21:15.066 --> 00:21:17.666 A:middle
So now we have the text flowing
around our moon really well,

00:21:17.666 --> 00:21:20.286 A:middle
which I think looks much better.

00:21:21.286 --> 00:21:24.826 A:middle
The one thing that
I'm seeing, though,

00:21:24.866 --> 00:21:27.886 A:middle
is those images look
a little fuzzy

00:21:27.886 --> 00:21:30.666 A:middle
on the phone, don't you think?

00:21:31.036 --> 00:21:31.916 A:middle
&gt;&gt; I agree.

00:21:31.966 --> 00:21:33.116 A:middle
I mean, look at that galaxy.

00:21:33.906 --> 00:21:36.136 A:middle
&gt;&gt; Yeah. I definitely
think that we need

00:21:36.136 --> 00:21:38.456 A:middle
to make our site Retina-ready.

00:21:39.116 --> 00:21:40.086 A:middle
&gt;&gt; Yeah. It's all pixelated.

00:21:40.536 --> 00:21:42.516 A:middle
&gt;&gt; Yeah. That's not just
having too many beers

00:21:42.516 --> 00:21:43.496 A:middle
at the beer bash last night.

00:21:43.576 --> 00:21:46.886 A:middle
So let's provide a higher
resolution image for this.

00:21:47.706 --> 00:21:50.916 A:middle
You know, in the past, at
previous WWDCs, we've talked

00:21:51.056 --> 00:21:55.546 A:middle
about how to Retinafy-I think
that's a word, right, Retinafy?

00:21:56.026 --> 00:21:56.206 A:middle
&gt;&gt; Sure.

00:21:56.396 --> 00:21:58.146 A:middle
&gt;&gt; It's a word now;
you can write it down.

00:21:58.176 --> 00:22:00.596 A:middle
We're going to talk about
how to Retinafy your website


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:21:58.176 --> 00:22:00.596 A:middle
We're going to talk about
how to Retinafy your website

00:22:00.656 --> 00:22:04.256 A:middle
so that you have some
brilliant, clear images

00:22:04.556 --> 00:22:05.786 A:middle
on all of your websites.

00:22:06.596 --> 00:22:08.786 A:middle
And in the past when we've
talked about it, we've talked

00:22:08.786 --> 00:22:12.796 A:middle
about how to use kind of
alternatives to images, so,

00:22:13.146 --> 00:22:16.036 A:middle
you know, one example
of that was like instead

00:22:16.036 --> 00:22:20.856 A:middle
of using an image for a gradient
you should use a CSS gradient,

00:22:20.946 --> 00:22:21.286 A:middle
right?

00:22:22.256 --> 00:22:25.926 A:middle
The one thing we haven't
talked about, though, is how --

00:22:25.926 --> 00:22:29.086 A:middle
like what do I do with
just -- just my photos?

00:22:29.086 --> 00:22:31.666 A:middle
Like if I have a website
with all my photography,

00:22:32.416 --> 00:22:33.086 A:middle
what do I do with that?

00:22:33.876 --> 00:22:36.136 A:middle
We haven't tackled
the image element yet.

00:22:36.436 --> 00:22:38.636 A:middle
What the heck, right?

00:22:38.636 --> 00:22:45.956 A:middle
So new to OS X and iOS 8
we have Image Source Sets.

00:22:46.556 --> 00:22:51.276 A:middle
Image Source Sets let you really
easily add both a standard

00:22:51.966 --> 00:22:54.386 A:middle
resolution image and a
Retina resolution image,

00:22:54.626 --> 00:22:57.676 A:middle
and then WebKit will just
magically pick the right one,

00:22:58.216 --> 00:23:02.036 A:middle
depending on what type of screen
your website's being viewed on.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:22:58.216 --> 00:23:02.036 A:middle
depending on what type of screen
your website's being viewed on.

00:23:03.926 --> 00:23:07.226 A:middle
And it looks kind of like this.

00:23:07.876 --> 00:23:10.816 A:middle
So here's my galaxy image
on a standard screen.

00:23:11.736 --> 00:23:16.816 A:middle
It looks pretty good, but
here it is on a Retina screen.

00:23:17.316 --> 00:23:18.656 A:middle
It's pretty pixelated.

00:23:19.296 --> 00:23:24.076 A:middle
So fortunately, it's very,
very easy to fix this.

00:23:24.076 --> 00:23:26.666 A:middle
And all you have to do is just
start with the image element.

00:23:26.666 --> 00:23:29.596 A:middle
So here's my image element.

00:23:30.836 --> 00:23:32.986 A:middle
It should look pretty
familiar to most of you.

00:23:33.046 --> 00:23:36.226 A:middle
It hasn't really changed
since the '90s, right?

00:23:36.226 --> 00:23:39.176 A:middle
But because I'm always look
for an opportunity to text,

00:23:39.176 --> 00:23:41.926 A:middle
I'm going to go ahead
and walk you through it.

00:23:41.926 --> 00:23:44.876 A:middle
So our first attribute in
there is our alt attribute.

00:23:45.436 --> 00:23:48.656 A:middle
Please always include it because
anyone who's using a screen

00:23:48.656 --> 00:23:51.836 A:middle
reader needs to understand
what is going on in this big,

00:23:51.836 --> 00:23:53.166 A:middle
beautiful image you've provided.

00:23:53.166 --> 00:23:56.736 A:middle
And then second, I have
my source attribute,

00:23:57.416 --> 00:23:59.996 A:middle
which is just the
location of the image.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:24:01.006 --> 00:24:03.816 A:middle
So to make this standard
image element

00:24:04.176 --> 00:24:05.646 A:middle
into an Image Source Set,

00:24:06.566 --> 00:24:09.486 A:middle
all we have to do is add the
source set attribute: srcset.

00:24:10.456 --> 00:24:14.956 A:middle
So inside my source set
attribute is literally a set

00:24:14.956 --> 00:24:15.576 A:middle
of images.

00:24:16.296 --> 00:24:21.996 A:middle
I have my standard galaxy.jpeg
and my super-galaxy.jpeg

00:24:21.996 --> 00:24:23.196 A:middle
for my Retina screens.

00:24:23.836 --> 00:24:26.776 A:middle
And the difference between
those is this modifier of 1x

00:24:26.776 --> 00:24:29.676 A:middle
for standard and 2x
for Retina, right.

00:24:29.676 --> 00:24:32.456 A:middle
So then WebKit can then
automatically understand

00:24:32.756 --> 00:24:34.536 A:middle
which image is for which screen.

00:24:35.166 --> 00:24:38.246 A:middle
Now, some of who you
are actually reading

00:24:38.246 --> 00:24:41.716 A:middle
through my syntax might
have noticed some redundancy

00:24:41.716 --> 00:24:42.046 A:middle
in there.

00:24:42.496 --> 00:24:44.666 A:middle
&gt;&gt; Yeah. You're saying
galaxy JPEG twice.

00:24:44.836 --> 00:24:48.576 A:middle
&gt;&gt; Yeah. So galaxy.jpeg, my
standard resolution image,

00:24:48.576 --> 00:24:49.836 A:middle
is in there two times.

00:24:50.406 --> 00:24:51.606 A:middle
And you might think, "Well,

00:24:52.426 --> 00:24:54.886 A:middle
let's just ditch
the source," right.

00:24:55.686 --> 00:25:00.646 A:middle
But browsers that do not
understand srcset are not going


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:24:55.686 --> 00:25:00.646 A:middle
But browsers that do not
understand srcset are not going

00:25:00.646 --> 00:25:01.426 A:middle
to know what to do with that.

00:25:02.026 --> 00:25:04.636 A:middle
So for backwards compatibility,
let's keep the src

00:25:04.636 --> 00:25:08.606 A:middle
and instead we will
back out or remove

00:25:08.606 --> 00:25:11.356 A:middle
that 1x resolution image
from the source set.

00:25:12.486 --> 00:25:16.776 A:middle
So that's like very little
amount of markup, right.

00:25:16.776 --> 00:25:20.716 A:middle
With just this small amount of
markup, we've made our website

00:25:20.716 --> 00:25:22.756 A:middle
and our image element
Retina-ready.

00:25:23.676 --> 00:25:25.106 A:middle
Image source sets
are really great.

00:25:26.086 --> 00:25:28.336 A:middle
They load only the right
image, so you're going

00:25:28.336 --> 00:25:29.996 A:middle
to avoid that double download.

00:25:30.846 --> 00:25:31.836 A:middle
There's no additional CSS.

00:25:31.836 --> 00:25:34.446 A:middle
You don't have to
go in there and muck

00:25:34.446 --> 00:25:36.236 A:middle
around with your dimensions
or anything like that.

00:25:37.056 --> 00:25:40.416 A:middle
And it's backwards compatible
with just this little amount

00:25:40.916 --> 00:25:42.436 A:middle
of syntax, this one attribute.

00:25:42.436 --> 00:25:45.986 A:middle
So, so far I've talked to you

00:25:45.986 --> 00:25:48.716 A:middle
about image source
sets in your HTML.

00:25:49.666 --> 00:25:53.636 A:middle
It just so happens that there is
another feature that we talked

00:25:53.636 --> 00:25:58.396 A:middle
about at WWDC in the past that
has an incredibly similar name

00:25:58.396 --> 00:26:00.376 A:middle
and an incredibly
similar function.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:25:58.396 --> 00:26:00.376 A:middle
and an incredibly
similar function.

00:26:00.376 --> 00:26:02.496 A:middle
So we're going to go over
that real quick, too,

00:26:02.496 --> 00:26:05.466 A:middle
so that you can understand
when you use which and why.

00:26:06.986 --> 00:26:11.006 A:middle
So image source sets, which we
just covered, are in your HTML,

00:26:11.786 --> 00:26:14.156 A:middle
but image sets live in your CSS.

00:26:15.136 --> 00:26:18.046 A:middle
And they are intended
for styling your website,

00:26:18.046 --> 00:26:21.046 A:middle
like borders or background
images.

00:26:21.956 --> 00:26:24.346 A:middle
So image sets, let's
say I do have one

00:26:24.346 --> 00:26:28.886 A:middle
of those background images that
I want to make Retina-ready.

00:26:29.776 --> 00:26:31.696 A:middle
I'll just start with
my background image.

00:26:32.376 --> 00:26:35.106 A:middle
You'll see I have my
URL with my galaxy.jpeg.

00:26:35.196 --> 00:26:38.716 A:middle
And to make it into
an image set,

00:26:39.226 --> 00:26:42.016 A:middle
I add a second background
image property.

00:26:42.416 --> 00:26:45.946 A:middle
And within it is the
image-set() function.

00:26:45.946 --> 00:26:49.936 A:middle
And that function then
contains both of my images.

00:26:49.936 --> 00:26:54.226 A:middle
It contains the galaxy
JPEG modified with 1x

00:26:55.126 --> 00:26:58.026 A:middle
and my super-galaxy
JPEG with 2x.

00:26:58.786 --> 00:27:01.806 A:middle
And then WebKit from here
will automatically select the


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:26:58.786 --> 00:27:01.806 A:middle
And then WebKit from here
will automatically select the

00:27:01.806 --> 00:27:02.356 A:middle
right one.

00:27:02.856 --> 00:27:05.656 A:middle
And I'd like to point out
that you do need to have both

00:27:05.656 --> 00:27:07.446 A:middle
of your background
image properties there

00:27:07.696 --> 00:27:09.026 A:middle
for backwards compatibility.

00:27:10.296 --> 00:27:12.926 A:middle
So image sets, image
source sets.

00:27:14.426 --> 00:27:16.106 A:middle
They're great, they're easy.

00:27:16.176 --> 00:27:17.606 A:middle
They make it super easy

00:27:17.606 --> 00:27:20.076 A:middle
for adding both standard
and Retina images.

00:27:20.296 --> 00:27:21.876 A:middle
WebKit will pick the right one.

00:27:22.306 --> 00:27:27.046 A:middle
Just remember that your
HTML image source sets are

00:27:27.106 --> 00:27:28.506 A:middle
for your content-those big,

00:27:28.506 --> 00:27:32.116 A:middle
beautiful photographs we talked
about-and your CSS image sets

00:27:32.766 --> 00:27:35.986 A:middle
are for your style, so your
background images, your borders.

00:27:38.076 --> 00:27:39.856 A:middle
So I think both are going

00:27:39.856 --> 00:27:42.516 A:middle
to be a really great
solution for your websites.

00:27:42.516 --> 00:27:44.966 A:middle
Should we see where we're at?

00:27:44.966 --> 00:27:49.326 A:middle
&gt;&gt; Yeah. Let's-well,
that looks way better.

00:27:50.606 --> 00:27:51.346 A:middle
Really happy about that.

00:27:51.346 --> 00:27:54.056 A:middle
I was worried that
maybe I had too much fun

00:27:54.056 --> 00:27:54.976 A:middle
at the beer bash last night.

00:27:55.966 --> 00:27:57.416 A:middle
OK, so where are we now?

00:27:58.266 --> 00:27:59.386 A:middle
We've got our Retina image.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:28:00.856 --> 00:28:04.846 A:middle
And we still have a bunch
of basic layout problems

00:28:04.846 --> 00:28:06.836 A:middle
on this page that we
haven't addressed yet.

00:28:07.136 --> 00:28:09.576 A:middle
&gt;&gt; Yeah. Our Retina
image looks nice,

00:28:09.916 --> 00:28:11.616 A:middle
except that you can't
really see it.

00:28:11.616 --> 00:28:11.716 A:middle
&gt;&gt; Right.

00:28:11.716 --> 00:28:13.326 A:middle
&gt;&gt; It's got that
giant caption over it.

00:28:13.326 --> 00:28:13.936 A:middle
&gt;&gt; It's ridiculous.

00:28:14.136 --> 00:28:14.286 A:middle
&gt;&gt; Yeah.

00:28:14.856 --> 00:28:16.986 A:middle
&gt;&gt; So let's fix up some of
our remaining layout problems

00:28:16.986 --> 00:28:18.706 A:middle
by using CSS media queries.

00:28:19.636 --> 00:28:21.596 A:middle
And I'm sure a lot of you
use these all the time.

00:28:22.046 --> 00:28:24.846 A:middle
So let's just jump
right in and take care

00:28:24.846 --> 00:28:25.976 A:middle
of these remaining issues.

00:28:26.316 --> 00:28:33.196 A:middle
OK, here we are again;
this should look familiar.

00:28:33.196 --> 00:28:36.896 A:middle
You can see the text
loading around that moon now.

00:28:37.076 --> 00:28:37.856 A:middle
It's looking pretty good.

00:28:38.956 --> 00:28:40.256 A:middle
I'm a big fan of that.

00:28:40.436 --> 00:28:47.916 A:middle
OK, let's see, and as you know,
as we make our page narrower,

00:28:48.126 --> 00:28:49.836 A:middle
the layout gets more
and more crazy.

00:28:49.836 --> 00:28:54.206 A:middle
In particular, I don't
like how the masthead

00:28:54.206 --> 00:28:57.526 A:middle
of my page here is taking
up so much vertical space.

00:28:57.736 --> 00:29:02.866 A:middle
This caption is really
awkwardly overlapping my image.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:28:57.736 --> 00:29:02.866 A:middle
This caption is really
awkwardly overlapping my image.

00:29:03.286 --> 00:29:04.716 A:middle
In fact, it's blowing
right out of it

00:29:04.716 --> 00:29:06.576 A:middle
and overlapping the
heading below it.

00:29:07.226 --> 00:29:11.566 A:middle
And then the sidebar is really,
really narrow and hard to read.

00:29:11.926 --> 00:29:13.756 A:middle
So let's fix each of these.

00:29:14.806 --> 00:29:17.836 A:middle
I'll start with the header.

00:29:18.126 --> 00:29:20.466 A:middle
So as you can see up in the
corner, like I mentioned,

00:29:20.466 --> 00:29:21.856 A:middle
I have that handy
bit of JavaScript

00:29:21.856 --> 00:29:23.216 A:middle
to show me how wide
my window is.

00:29:23.516 --> 00:29:27.756 A:middle
So where does the
header start to go off?

00:29:28.636 --> 00:29:34.056 A:middle
It seems like between
650 and 700 pixels,

00:29:34.056 --> 00:29:35.846 A:middle
somewhere around there,
we hit multiple lines.

00:29:36.266 --> 00:29:38.716 A:middle
And as you saw earlier on
the phone, we end up with

00:29:38.716 --> 00:29:40.956 A:middle
like four lines of text.

00:29:40.956 --> 00:29:43.856 A:middle
So I want to adjust the size
of my header somewhere around,

00:29:45.216 --> 00:29:47.106 A:middle
what, 690 pixels or something.

00:29:48.386 --> 00:29:49.866 A:middle
OK, so let's do that.

00:29:50.436 --> 00:29:53.176 A:middle
To do this, I'm going
to use the @media rule.

00:29:56.316 --> 00:29:59.046 A:middle
So here I have an @media rule.

00:29:59.626 --> 00:30:03.496 A:middle
This is the part of CSS where
you can provide a media query,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:29:59.626 --> 00:30:03.496 A:middle
This is the part of CSS where
you can provide a media query,

00:30:03.496 --> 00:30:06.856 A:middle
in this case a max-width
of 675 pixels.

00:30:07.696 --> 00:30:11.026 A:middle
And then inside of braces you
basically provide a whole style

00:30:11.026 --> 00:30:12.776 A:middle
sheet of things you'd like
to change at that point.

00:30:13.936 --> 00:30:16.666 A:middle
In this case, I'm finding
that masthead header

00:30:16.736 --> 00:30:18.326 A:middle
and adjusting its
font size down.

00:30:19.966 --> 00:30:22.076 A:middle
OK, so we've made that change.

00:30:22.516 --> 00:30:23.246 A:middle
Let's refresh.

00:30:24.446 --> 00:30:26.996 A:middle
Nothing changed because
this is wider

00:30:26.996 --> 00:30:29.546 A:middle
than that breakpoint
of 675 pixels.

00:30:30.156 --> 00:30:33.386 A:middle
So let's make our site more
narrow, and there we go.

00:30:33.386 --> 00:30:36.956 A:middle
Our header got smaller,
it looks great even here

00:30:36.956 --> 00:30:38.586 A:middle
at this very narrow size.

00:30:40.456 --> 00:30:43.946 A:middle
Well, OK, next I think I'll
take care of this caption.

00:30:44.476 --> 00:30:47.716 A:middle
So just like with the
header, I need to figure

00:30:47.716 --> 00:30:50.186 A:middle
out where it starts looking bad.

00:30:50.186 --> 00:30:52.906 A:middle
It looks great out
here at two lines.

00:30:53.846 --> 00:30:55.186 A:middle
I'm still pretty
happy with it here.

00:30:55.236 --> 00:30:58.806 A:middle
And it seems to be right around
where it goes to four lines

00:30:58.806 --> 00:31:02.876 A:middle
where that bottom right corner
is intruding into my galaxy


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:30:58.806 --> 00:31:02.876 A:middle
where that bottom right corner
is intruding into my galaxy

00:31:02.876 --> 00:31:06.036 A:middle
and really kind of
ruining the mood.

00:31:06.216 --> 00:31:07.456 A:middle
OK, so where was that?

00:31:07.456 --> 00:31:12.256 A:middle
That seems to be between
700 and 750 pixels.

00:31:13.666 --> 00:31:18.036 A:middle
OK, so just like with my
header I'll use an @media rule,

00:31:18.036 --> 00:31:21.986 A:middle
this time with a
max-width of 750 pixels.

00:31:22.106 --> 00:31:26.386 A:middle
And what I'm doing here
is initially my caption is

00:31:26.746 --> 00:31:30.036 A:middle
absolutely positioned so
that it can be an overlay

00:31:30.036 --> 00:31:31.446 A:middle
on top of my image.

00:31:31.796 --> 00:31:35.116 A:middle
And its width is set at 50
percent so that it takes

00:31:35.116 --> 00:31:38.236 A:middle
up about half the size
of the image, like so.

00:31:39.306 --> 00:31:40.946 A:middle
So in my media query here,

00:31:40.946 --> 00:31:44.086 A:middle
I want to override both the
position and width properties

00:31:44.616 --> 00:31:49.126 A:middle
so that it will simply appear
below the image and take

00:31:49.126 --> 00:31:50.316 A:middle
up the full width of the column.

00:31:51.336 --> 00:31:51.916 A:middle
And that's it.

00:31:52.656 --> 00:31:57.856 A:middle
So we'll save and let me come
out a little bit and refresh.

00:31:58.366 --> 00:32:01.496 A:middle
And as you can see, just
like before nothing's changed


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:31:58.366 --> 00:32:01.496 A:middle
And as you can see, just
like before nothing's changed

00:32:01.496 --> 00:32:04.846 A:middle
because I'm still wider than
that media queries test.

00:32:05.856 --> 00:32:07.696 A:middle
But as we get closer
to the bad part,

00:32:09.226 --> 00:32:10.346 A:middle
there it goes; it pops down.

00:32:10.436 --> 00:32:14.226 A:middle
It's quite legible below our
image and doesn't interfere

00:32:14.226 --> 00:32:16.246 A:middle
with it, no matter how narrow
our window screen gets.

00:32:16.756 --> 00:32:20.446 A:middle
OK, cool. Let's take
care of that sidebar.

00:32:20.446 --> 00:32:21.586 A:middle
That's I think the last bit

00:32:21.626 --> 00:32:23.616 A:middle
that looked pretty
bad at a narrow size.

00:32:23.616 --> 00:32:25.766 A:middle
So where does that
get unreadable?

00:32:29.476 --> 00:32:31.986 A:middle
In this case, I feel
like right around here is

00:32:31.986 --> 00:32:36.626 A:middle
where the block quote inside
my sidebar is getting to be,

00:32:36.626 --> 00:32:38.676 A:middle
you know, one or
two words per line.

00:32:38.676 --> 00:32:40.236 A:middle
It's really too narrow.

00:32:40.236 --> 00:32:43.826 A:middle
So let's make an adjustment
around 800, 850 pixels.

00:32:45.316 --> 00:32:46.766 A:middle
By now I think you
know the drill.

00:32:48.026 --> 00:32:50.246 A:middle
This adjustment is exactly
like the other ones.

00:32:50.246 --> 00:32:54.226 A:middle
We have an @media rule
for a width of 800 pixels.

00:32:54.966 --> 00:32:57.416 A:middle
Currently, this sidebar
is floated over,

00:32:57.416 --> 00:33:01.456 A:middle
so I'm disabling the float
just like with my caption.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:32:57.416 --> 00:33:01.456 A:middle
so I'm disabling the float
just like with my caption.

00:33:01.456 --> 00:33:03.126 A:middle
I'm resetting the width

00:33:03.126 --> 00:33:06.596 A:middle
so it will automatically be
the width of its container.

00:33:07.136 --> 00:33:09.316 A:middle
And I'm killing some of the
margins that we had there

00:33:09.756 --> 00:33:11.866 A:middle
so that the sidebar
will be offset

00:33:11.866 --> 00:33:14.526 A:middle
from the columns next to it.

00:33:14.776 --> 00:33:18.786 A:middle
So if we come back and
refresh, still there.

00:33:18.786 --> 00:33:22.046 A:middle
But as we get smaller, there
we go, the sidebar is popped in

00:33:22.046 --> 00:33:24.146 A:middle
and is now in line with
the rest of our document.

00:33:24.586 --> 00:33:27.546 A:middle
And even in the really,

00:33:27.546 --> 00:33:31.366 A:middle
really narrow screen size this
is starting to look pretty good.

00:33:33.156 --> 00:33:42.956 A:middle
OK, so let's talk a little
bit more about media queries.

00:33:43.066 --> 00:33:48.086 A:middle
As you saw, we use media queries
in CSS by using an @media rule,

00:33:48.836 --> 00:33:55.976 A:middle
which takes a media query to
test and then some CSS to apply

00:33:56.136 --> 00:33:58.826 A:middle
when that media query matches.

00:33:59.316 --> 00:34:02.436 A:middle
So here, I'm fixing our
caption like we saw earlier


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:33:59.316 --> 00:34:02.436 A:middle
So here, I'm fixing our
caption like we saw earlier

00:34:02.816 --> 00:34:04.616 A:middle
by using a max-width
media query,

00:34:05.036 --> 00:34:08.045 A:middle
and then I'm overriding the
position and width properties.

00:34:08.585 --> 00:34:11.235 A:middle
This is in general how
you use an @media rule.

00:34:11.596 --> 00:34:13.446 A:middle
You have some rules somewhere
else in your style sheet

00:34:14.246 --> 00:34:15.255 A:middle
and then you say, OK, but

00:34:15.255 --> 00:34:18.966 A:middle
and sometimes I need
to override those.

00:34:20.166 --> 00:34:22.565 A:middle
In all three cases, we used
the max-width media query

00:34:22.565 --> 00:34:25.366 A:middle
because we were adjusting
for when things got narrower.

00:34:25.366 --> 00:34:28.536 A:middle
There are several other media
queries that you'll often want

00:34:28.536 --> 00:34:30.676 A:middle
to use when doing
responsive design.

00:34:31.166 --> 00:34:34.456 A:middle
There's a corresponding
min-width media query

00:34:34.525 --> 00:34:37.636 A:middle
where you can adjust things
as the site gets wider.

00:34:38.386 --> 00:34:43.545 A:middle
And also an exact-width
media query.

00:34:43.706 --> 00:34:47.606 A:middle
When you're adjusting your
site to be Retina-ready,

00:34:47.746 --> 00:34:50.985 A:middle
in addition to using
the features

00:34:50.985 --> 00:34:52.876 A:middle
that Casey showed you
earlier, you might need

00:34:52.876 --> 00:34:54.196 A:middle
to make some layout adjustments.

00:34:54.585 --> 00:34:56.786 A:middle
And you can test
for a Retina device

00:34:57.266 --> 00:35:00.796 A:middle
by using the device-pixel-ratio
media query, which,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:34:57.266 --> 00:35:00.796 A:middle
by using the device-pixel-ratio
media query, which,

00:35:00.826 --> 00:35:07.976 A:middle
just like width, takes
a min and max variance.

00:35:07.976 --> 00:35:10.696 A:middle
When adjusting your
layout with a media query,

00:35:11.306 --> 00:35:12.576 A:middle
there's a few things
you should keep in mind.

00:35:14.046 --> 00:35:17.366 A:middle
First off, the @media
rule is actually a very

00:35:17.366 --> 00:35:18.376 A:middle
blunt instrument.

00:35:19.606 --> 00:35:23.806 A:middle
What you're doing is making an
entire alternate style sheet

00:35:23.806 --> 00:35:25.546 A:middle
that applies in certain
circumstances.

00:35:25.976 --> 00:35:29.666 A:middle
You have to duplicate the
selectors you're using

00:35:29.666 --> 00:35:33.296 A:middle
in your default style sheet to
override particular properties.

00:35:33.726 --> 00:35:36.406 A:middle
And as your site
grows, this can lead

00:35:36.816 --> 00:35:39.636 A:middle
to a really large
maintenance burden.

00:35:39.916 --> 00:35:41.146 A:middle
You might double or triple

00:35:41.146 --> 00:35:45.626 A:middle
or quadruple the size
of your style sheet.

00:35:45.876 --> 00:35:52.096 A:middle
So instead, when possible, you
should try to use CSS features

00:35:52.096 --> 00:35:54.706 A:middle
that naturally adapt
your site without having

00:35:54.706 --> 00:35:56.586 A:middle
to duplicate all your work.

00:35:56.836 --> 00:36:00.506 A:middle
We saw two earlier: The column
width property allowed us


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:35:56.836 --> 00:36:00.506 A:middle
We saw two earlier: The column
width property allowed us

00:36:00.706 --> 00:36:03.216 A:middle
to adjust the number of
columns magically basically

00:36:03.586 --> 00:36:04.986 A:middle
without resorting
to a media query.

00:36:04.986 --> 00:36:08.066 A:middle
And the image set
function allows us

00:36:08.066 --> 00:36:10.916 A:middle
to pick the right image for
our display without having

00:36:10.916 --> 00:36:13.656 A:middle
to use the device-pixel-ratio
property media query.

00:36:13.976 --> 00:36:19.516 A:middle
And secondly, when I was
adjusting our layout there,

00:36:19.586 --> 00:36:21.986 A:middle
I was doing it experimentally.

00:36:23.066 --> 00:36:27.926 A:middle
I loaded my site, fiddled
with my window width and found

00:36:27.926 --> 00:36:30.476 A:middle
where each part of
my layout went bad

00:36:30.566 --> 00:36:32.566 A:middle
and then made adjustments
for that width.

00:36:33.216 --> 00:36:36.256 A:middle
I didn't look up the dimensions

00:36:36.256 --> 00:36:38.116 A:middle
of a particular screen
on Wikipedia.

00:36:39.166 --> 00:36:41.046 A:middle
I let my content
actually tell me

00:36:41.046 --> 00:36:42.486 A:middle
where it needed to be adjusted.

00:36:43.596 --> 00:36:46.336 A:middle
This will make your
content more resilient

00:36:46.336 --> 00:36:50.976 A:middle
to an ever-increasing
range of scenarios

00:36:50.976 --> 00:36:54.206 A:middle
where it might be loaded.

00:36:54.206 --> 00:36:57.576 A:middle
OK, so we've made our
final layout adjustments

00:36:57.576 --> 00:36:58.826 A:middle
with some media queries.

00:36:59.416 --> 00:37:01.206 A:middle
There's just one
little bit I wanted


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:36:59.416 --> 00:37:01.206 A:middle
There's just one
little bit I wanted

00:37:01.256 --> 00:37:06.256 A:middle
to address before we
can call it a day.

00:37:06.256 --> 00:37:10.876 A:middle
And this is some of these
borders on our site.

00:37:10.936 --> 00:37:13.926 A:middle
So you can see up top there
we have this little byline

00:37:13.926 --> 00:37:17.146 A:middle
of "This is the Friday edition
of the Daily Space Digest,"

00:37:17.956 --> 00:37:19.256 A:middle
and we've got some
borders around it.

00:37:19.256 --> 00:37:21.286 A:middle
And they look great
on my laptop,

00:37:21.726 --> 00:37:26.796 A:middle
but they're a little
thick on my phone.

00:37:27.846 --> 00:37:30.036 A:middle
I made a 1 pixel
border and I wanted it

00:37:30.036 --> 00:37:36.496 A:middle
to be a 1 pixel border, but of
course, as you already know,

00:37:36.736 --> 00:37:38.146 A:middle
when I say 1 pixel in CSS,

00:37:38.146 --> 00:37:42.816 A:middle
I don't actually get
1 pixel on my display.

00:37:42.816 --> 00:37:48.676 A:middle
The CSS pixel is defined to be
a sort of abstract measurement

00:37:49.326 --> 00:37:52.926 A:middle
that roughly corresponds
to 1 physical pixel

00:37:52.926 --> 00:37:53.896 A:middle
on a pre-Retina display.

00:37:54.946 --> 00:37:56.366 A:middle
But now, with the Retina device,

00:37:56.946 --> 00:38:00.236 A:middle
a 1 CSS pixel actually
contains 4 device pixels.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:37:56.946 --> 00:38:00.236 A:middle
a 1 CSS pixel actually
contains 4 device pixels.

00:38:00.686 --> 00:38:06.086 A:middle
So what I want to do is sort
of reach into the CSS pixel

00:38:06.086 --> 00:38:09.266 A:middle
and make full use of each
of those device pixels.

00:38:09.556 --> 00:38:12.196 A:middle
I want to draw hairline borders.

00:38:14.196 --> 00:38:21.896 A:middle
OK, so right now I'm drawing
my border with 1 pixel in CSS.

00:38:22.926 --> 00:38:25.716 A:middle
And when that draws
on a standard display,

00:38:25.956 --> 00:38:28.166 A:middle
I get the thinnest line
I could possibly get.

00:38:28.166 --> 00:38:33.286 A:middle
And on a Retina display, I
get this line that's twice

00:38:33.286 --> 00:38:35.186 A:middle
as thick as I actually want.

00:38:36.096 --> 00:38:40.566 A:middle
So what I want to do is really
only use 1 row or column

00:38:40.856 --> 00:38:43.216 A:middle
of device pixels
to get this line.

00:38:43.446 --> 00:38:45.766 A:middle
So how do I do it?

00:38:46.026 --> 00:38:47.706 A:middle
Let's look at our CSS.

00:38:48.206 --> 00:38:50.306 A:middle
Here, I'm setting my
border with 1 pixel.

00:38:50.356 --> 00:38:55.416 A:middle
I'm not the only one who's
wanted hairline borders;

00:38:55.416 --> 00:38:56.366 A:middle
a lot of you have too.

00:38:57.506 --> 00:38:59.966 A:middle
And I've got to say, some of
the solutions people have come

00:38:59.966 --> 00:39:04.246 A:middle
up with are amazing
and horrifying.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:38:59.966 --> 00:39:04.246 A:middle
up with are amazing
and horrifying.

00:39:06.496 --> 00:39:07.256 A:middle
Here's my favorite.

00:39:08.446 --> 00:39:10.276 A:middle
This is pretty brilliant.

00:39:10.276 --> 00:39:14.056 A:middle
It uses an inline SVG
image and a data URL

00:39:14.056 --> 00:39:15.056 A:middle
as your background image.

00:39:15.366 --> 00:39:16.096 A:middle
Everyone got that?

00:39:16.336 --> 00:39:18.256 A:middle
It's really easy to
remember how to type this,

00:39:18.256 --> 00:39:19.436 A:middle
as I'm sure you can see.

00:39:20.006 --> 00:39:21.106 A:middle
All right.

00:39:21.676 --> 00:39:25.766 A:middle
Let's cut this out;
this is ridiculous.

00:39:26.866 --> 00:39:31.376 A:middle
And now, I'm really pleased to
say that in Yosemite and iOS 8,

00:39:32.066 --> 00:39:35.666 A:middle
WebKit has enabled a feature
that we call subpixel layout.

00:39:36.596 --> 00:39:39.776 A:middle
Now, mostly, this won't affect
what you're doing at all.

00:39:39.966 --> 00:39:42.016 A:middle
It's just a magical,
under-the-hood improvement

00:39:42.016 --> 00:39:43.246 A:middle
that just makes things
a little bit better.

00:39:43.246 --> 00:39:46.856 A:middle
But we can take advantage of
it to get the hairlines we want

00:39:47.216 --> 00:39:49.976 A:middle
without having to do
this sort of thing.

00:39:50.106 --> 00:39:51.486 A:middle
OK, how do we do it?

00:39:52.766 --> 00:39:55.116 A:middle
So here we have our 1 pixel
for our standard display.

00:39:56.346 --> 00:39:58.736 A:middle
And now, just like we saw
before with our media queries,

00:39:58.736 --> 00:40:00.976 A:middle
we're going to check
device-pixel-ratio to see,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:39:58.736 --> 00:40:00.976 A:middle
we're going to check
device-pixel-ratio to see,

00:40:00.976 --> 00:40:02.356 A:middle
are we on a Retina screen?

00:40:02.656 --> 00:40:03.676 A:middle
We are? Great.

00:40:03.676 --> 00:40:06.496 A:middle
And all we're doing is saying
we're on a Retina display,

00:40:06.746 --> 00:40:08.766 A:middle
great, just use a half a pixel.

00:40:09.346 --> 00:40:14.516 A:middle
Remember, the CSS pixel is 2
device pixels in each dimension,

00:40:14.516 --> 00:40:16.826 A:middle
so a half a pixel corresponds

00:40:16.866 --> 00:40:19.256 A:middle
to that beautiful,
thin device pixel.

00:40:20.316 --> 00:40:22.596 A:middle
And now I can actually read
this and remember what I meant

00:40:22.656 --> 00:40:26.196 A:middle
when I wrote it,
so that's exciting.

00:40:26.196 --> 00:40:26.946 A:middle
And here we are.

00:40:26.946 --> 00:40:28.836 A:middle
I've got my retina iPad.

00:40:28.896 --> 00:40:32.506 A:middle
And if we use the magic of
Keynote to zoom in on that,

00:40:32.506 --> 00:40:35.546 A:middle
you can see those lines are as
thin as they could possibly get.

00:40:36.226 --> 00:40:37.686 A:middle
&gt;&gt; Ooh, aah.

00:40:38.191 --> 00:40:40.191 A:middle
[ Laughter ]

00:40:40.366 --> 00:40:40.776 A:middle
Thanks Ted.

00:40:41.176 --> 00:40:43.176 A:middle
[ Applause ]

00:40:43.336 --> 00:40:43.806 A:middle
All right.

00:40:44.036 --> 00:40:50.036 A:middle
So our website now looks so much
better minus our sad engineering

00:40:50.036 --> 00:40:50.616 A:middle
design skills.

00:40:50.616 --> 00:40:53.436 A:middle
And it looks great
on every device,

00:40:53.786 --> 00:40:55.346 A:middle
and with very little markup.

00:40:55.406 --> 00:40:57.336 A:middle
Like how many lines
of code did we do?

00:40:57.456 --> 00:40:59.716 A:middle
&gt;&gt; I think we actually only
changed about 20 lines of code.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:41:00.116 --> 00:41:01.696 A:middle
&gt;&gt; That's pretty good, right?

00:41:02.696 --> 00:41:03.896 A:middle
Yes? Thank you.

00:41:04.451 --> 00:41:06.451 A:middle
[ Applause ]

00:41:06.886 --> 00:41:12.136 A:middle
All we had to do was make
our columns responsive.

00:41:12.136 --> 00:41:13.096 A:middle
We defined the width

00:41:13.096 --> 00:41:15.366 A:middle
of our column instead
of a column count.

00:41:15.876 --> 00:41:19.036 A:middle
We also designed our
layout so that it was

00:41:19.036 --> 00:41:20.536 A:middle
in font-relative units,

00:41:20.536 --> 00:41:23.896 A:middle
which means that if our
users change their font size,

00:41:24.306 --> 00:41:26.946 A:middle
we are going to have
fidelity to our layout.

00:41:27.496 --> 00:41:30.096 A:middle
Also, Ted showed you
how to use CSS Shapes

00:41:30.276 --> 00:41:33.756 A:middle
so that now we have the
text flowing beautifully

00:41:33.756 --> 00:41:37.776 A:middle
around the curvature of our
moon, and both our galaxy

00:41:37.776 --> 00:41:40.036 A:middle
and our moon image
are Retina-ready.

00:41:40.916 --> 00:41:43.886 A:middle
Then, we also covered
how to use media queries,

00:41:44.146 --> 00:41:48.366 A:middle
our blunt instrument for
making larger layout changes

00:41:48.366 --> 00:41:49.536 A:middle
when necessary.

00:41:49.736 --> 00:41:54.946 A:middle
And the icing on the cake are
those beautiful hairline borders

00:41:55.596 --> 00:41:57.376 A:middle
that really reach into
the retina screen.

00:41:59.036 --> 00:42:00.496 A:middle
&gt;&gt; So for more information,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:41:59.036 --> 00:42:00.496 A:middle
&gt;&gt; So for more information,

00:42:00.496 --> 00:42:02.736 A:middle
as always you can
contact Apple Evangelism.

00:42:03.236 --> 00:42:06.466 A:middle
And check out our documentation
in the Safari Developer Center

00:42:06.466 --> 00:42:09.946 A:middle
and participate in the
wonderful conversations

00:42:09.946 --> 00:42:12.346 A:middle
over at our Developer Forums.

00:42:12.516 --> 00:42:16.036 A:middle
It's Friday morning, so
our related session was

00:42:16.036 --> 00:42:17.096 A:middle
of course earlier this week.

00:42:17.146 --> 00:42:18.936 A:middle
And if you missed
it, definitely check

00:42:18.936 --> 00:42:20.086 A:middle
out the video; it's
really great.

00:42:20.876 --> 00:42:23.686 A:middle
And we've also talked
about several things

00:42:23.686 --> 00:42:25.256 A:middle
that have come up
in previous WWDCs.

00:42:25.256 --> 00:42:32.586 A:middle
In 2012, we introduced the
image-set function for CSS

00:42:32.586 --> 00:42:37.686 A:middle
in a great talk that goes
in extreme depth into how

00:42:37.776 --> 00:42:39.296 A:middle
to make a content Retina-ready.

00:42:39.776 --> 00:42:41.296 A:middle
It's really, really wonderful.

00:42:41.746 --> 00:42:43.626 A:middle
And then last year,

00:42:43.626 --> 00:42:47.676 A:middle
we introduced several new layout
features, which we didn't go

00:42:47.676 --> 00:42:51.506 A:middle
into here, like CSS
Regions, Flexbox,

00:42:51.656 --> 00:42:54.146 A:middle
and there's some really great
advanced layout you can do

00:42:54.146 --> 00:42:57.166 A:middle
in CSS that will make
your site really great.

00:42:57.766 --> 00:42:59.606 A:middle
And please do check that out.

00:42:59.606 --> 00:43:02.576 A:middle
I know some of you traveled
from quite far to be here.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:42:59.606 --> 00:43:02.576 A:middle
I know some of you traveled
from quite far to be here.

00:43:02.576 --> 00:43:03.656 A:middle
I hope you have a
safe travel home.

00:43:04.306 --> 00:43:04.846 A:middle
&gt;&gt; Thanks, everyone.

00:43:04.846 --> 00:43:05.306 A:middle
&gt;&gt; Thanks, everyone.

