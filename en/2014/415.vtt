WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:11.756 --> 00:00:12.786 A:middle
&gt;&gt; Good afternoon everyone.

00:00:12.786 --> 00:00:14.346 A:middle
Welcome to our session:

00:00:14.346 --> 00:00:16.386 A:middle
Continuous Integration
with Xcode 6.

00:00:16.496 --> 00:00:17.876 A:middle
Thanks for being
here this afternoon.

00:00:18.536 --> 00:00:19.366 A:middle
My name is Brent Shank.

00:00:19.366 --> 00:00:21.556 A:middle
I'm a software engineer
on the Xcode team,

00:00:21.556 --> 00:00:24.056 A:middle
and today we're going to
talk about my favorite topic

00:00:24.166 --> 00:00:25.976 A:middle
which is, of course,
continuous integration.

00:00:26.436 --> 00:00:30.786 A:middle
So just a show of hands, how
many people are using some kind

00:00:30.786 --> 00:00:32.485 A:middle
of continuous integration
system out there?

00:00:32.976 --> 00:00:33.406 A:middle
All right.

00:00:33.626 --> 00:00:35.886 A:middle
Awesome! Okay, next question.

00:00:36.236 --> 00:00:37.846 A:middle
How many people are
using Xcode Server?

00:00:39.086 --> 00:00:39.926 A:middle
Okay. Okay.

00:00:40.066 --> 00:00:43.536 A:middle
Good. Well, we hope next year,
when we ask that question,

00:00:43.536 --> 00:00:44.666 A:middle
it's going to be everyone.

00:00:45.356 --> 00:00:47.216 A:middle
So if you're not familiar
with continuous integration,

00:00:47.216 --> 00:00:49.096 A:middle
we're going to teach
you all about it today.

00:00:49.546 --> 00:00:50.226 A:middle
We're going to talk to you

00:00:50.226 --> 00:00:52.576 A:middle
about our continuous
integration product,

00:00:52.576 --> 00:00:53.936 A:middle
which we call Xcode Server.

00:00:53.936 --> 00:00:55.226 A:middle
We're going to tell you

00:00:55.226 --> 00:00:58.086 A:middle
about all the great new things
we built into Xcode Server.

00:00:58.146 --> 00:01:00.886 A:middle
You probably want
to see that slide.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:58.146 --> 00:01:00.886 A:middle
You probably want
to see that slide.

00:01:01.236 --> 00:01:03.326 A:middle
So we have lots of great new
features in Xcode Server,

00:01:03.326 --> 00:01:05.886 A:middle
in Xcode 6, and we're going
to give you lots of demos,

00:01:06.136 --> 00:01:07.936 A:middle
because it really shows
well on the screen.

00:01:09.306 --> 00:01:11.576 A:middle
So, first, if you're
not familiar

00:01:11.576 --> 00:01:15.256 A:middle
with continuous integration,
what is it all about?

00:01:16.046 --> 00:01:17.436 A:middle
Well, fundamentally it's all

00:01:17.436 --> 00:01:20.606 A:middle
about improving software
quality,

00:01:20.686 --> 00:01:22.436 A:middle
and there are a lot
of ways it does that.

00:01:22.846 --> 00:01:24.016 A:middle
A continuous integration system

00:01:24.016 --> 00:01:26.256 A:middle
that catches problems
quickly and automatically.

00:01:26.686 --> 00:01:29.006 A:middle
So you don't have to worry
that when you make code changes

00:01:29.006 --> 00:01:30.746 A:middle
at the end of the
day and you leave

00:01:30.746 --> 00:01:32.796 A:middle
and you introduce the build
error or warning, you don't have

00:01:32.866 --> 00:01:35.716 A:middle
to worry about that not being
caught until the next morning,

00:01:36.136 --> 00:01:37.606 A:middle
because a system like
this is going to catch it

00:01:37.666 --> 00:01:39.516 A:middle
for you quickly and
automatically,

00:01:39.966 --> 00:01:41.696 A:middle
and for me that really
enhances collaboration

00:01:41.696 --> 00:01:42.796 A:middle
because you don't have to worry

00:01:43.146 --> 00:01:47.306 A:middle
about blocking your team
members, and let's face it,

00:01:47.306 --> 00:01:49.506 A:middle
when you're writing code,
you're taking a lot of risks.

00:01:49.866 --> 00:01:51.416 A:middle
You know, you're doing
interesting and creative things.

00:01:51.796 --> 00:01:54.416 A:middle
You're going to introduce
problems and a system

00:01:54.766 --> 00:01:56.946 A:middle
like this helps catch
those problems quickly.

00:01:58.316 --> 00:02:00.166 A:middle
Another key thing
is that a system


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:01:58.316 --> 00:02:00.166 A:middle
Another key thing
is that a system

00:02:00.166 --> 00:02:02.586 A:middle
like this helps broaden
your test coverage.

00:02:03.056 --> 00:02:04.876 A:middle
Because you have your
code running on a server,

00:02:05.206 --> 00:02:07.686 A:middle
the server can support lots of
different testing configurations

00:02:07.686 --> 00:02:09.376 A:middle
that would be a big
pain to do on a client.

00:02:11.516 --> 00:02:15.036 A:middle
So another great thing about a
server product that's building

00:02:15.036 --> 00:02:17.266 A:middle
your code is that it
can gather histories.

00:02:17.266 --> 00:02:20.286 A:middle
So build history and test
history for your product

00:02:20.286 --> 00:02:22.746 A:middle
over time, and this is
actually really interesting.

00:02:22.996 --> 00:02:25.756 A:middle
Because at the beginning of
a product development cycle,

00:02:25.756 --> 00:02:28.196 A:middle
as I'm sure you know,
there's a lot of change.

00:02:28.256 --> 00:02:29.066 A:middle
There's a lot of churn,

00:02:29.486 --> 00:02:31.726 A:middle
and you're probably
introducing a lot of issues.

00:02:32.206 --> 00:02:34.546 A:middle
You're introducing warnings
and static analysis issues,

00:02:35.086 --> 00:02:36.956 A:middle
and you probably
don't have a whole lot

00:02:36.956 --> 00:02:37.976 A:middle
of tests at the beginning.

00:02:38.096 --> 00:02:41.126 A:middle
Towards the end of that
cycle, you don't want

00:02:41.126 --> 00:02:43.916 A:middle
to have any issues, and you want
a lot of tests, and a system

00:02:43.916 --> 00:02:46.866 A:middle
like this will help gather that
history and show it to you.

00:02:46.866 --> 00:02:48.916 A:middle
So it's a great indication
of where you are kind

00:02:48.916 --> 00:02:52.066 A:middle
of in your product development
cycle, and of course a system

00:02:52.066 --> 00:02:54.196 A:middle
like this makes it
really easy for you

00:02:54.196 --> 00:02:55.956 A:middle
to distribute builds
to your team.

00:02:56.286 --> 00:02:57.436 A:middle
So hopefully you have testers.

00:02:57.886 --> 00:03:00.476 A:middle
I hope everyone does,
and if you do,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:02:57.886 --> 00:03:00.476 A:middle
I hope everyone does,
and if you do,

00:03:00.476 --> 00:03:01.436 A:middle
a system like this makes it easy

00:03:01.436 --> 00:03:04.036 A:middle
to distribute those
kind of builds.

00:03:04.426 --> 00:03:06.996 A:middle
So terminology, bear
with me here.

00:03:06.996 --> 00:03:10.566 A:middle
So there are three terms that
we're going to talk about over

00:03:10.566 --> 00:03:12.836 A:middle
and over again in
relation to Xcode Server.

00:03:13.336 --> 00:03:15.036 A:middle
Term number one is a scheme.

00:03:15.596 --> 00:03:18.426 A:middle
So I won't quiz anyone, but
I'm sure if you've used Xcode

00:03:18.516 --> 00:03:21.946 A:middle
for a while, you've seen this
term, and it's really simple.

00:03:22.776 --> 00:03:24.726 A:middle
All a scheme is it's
just a recipe

00:03:24.726 --> 00:03:25.606 A:middle
for building your project.

00:03:25.886 --> 00:03:29.496 A:middle
It contains the targets that
you want built, and the target

00:03:29.496 --> 00:03:32.026 A:middle
in turn contains the source
files and the resources

00:03:32.026 --> 00:03:33.816 A:middle
and everything else that
make up your product.

00:03:34.126 --> 00:03:36.256 A:middle
So why is this important
for Xcode Server?

00:03:36.686 --> 00:03:39.576 A:middle
It's important because a
scheme needs to be shared.

00:03:40.276 --> 00:03:41.076 A:middle
This is not a big deal.

00:03:41.236 --> 00:03:43.816 A:middle
Xcode makes it really
easy to share schemes,

00:03:44.546 --> 00:03:45.826 A:middle
but when you first
create a scheme,

00:03:46.186 --> 00:03:47.766 A:middle
or when Xcode creates
a scheme for you,

00:03:47.976 --> 00:03:48.836 A:middle
that scheme isn't shared.

00:03:49.106 --> 00:03:49.816 A:middle
We'll show you how to do it.

00:03:49.816 --> 00:03:52.956 A:middle
It's not a big deal; just
something to keep in mind.

00:03:53.066 --> 00:03:54.306 A:middle
So term number two is bot.

00:03:55.116 --> 00:03:58.856 A:middle
And this is our friend the bot,
and it's just a thing that we --

00:03:59.006 --> 00:04:01.146 A:middle
the word we use to
refer to the thing


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:03:59.006 --> 00:04:01.146 A:middle
the word we use to
refer to the thing

00:04:01.146 --> 00:04:03.326 A:middle
that builds your
software on a schedule.

00:04:04.156 --> 00:04:07.516 A:middle
And when the bot runs, we
say that it integrates.

00:04:07.806 --> 00:04:08.706 A:middle
It makes an integration.

00:04:09.166 --> 00:04:10.356 A:middle
So these are the
three key terms:

00:04:10.516 --> 00:04:12.386 A:middle
scheme, bot and integration.

00:04:13.716 --> 00:04:16.606 A:middle
So let's take a look,
in a little more depth,

00:04:17.685 --> 00:04:19.096 A:middle
at our friend the bot.

00:04:20.255 --> 00:04:25.396 A:middle
So what defines a bot?

00:04:26.216 --> 00:04:29.356 A:middle
So fundamentally there are
two key pieces of information.

00:04:29.356 --> 00:04:31.476 A:middle
One is the project you
want the bot to build.

00:04:31.476 --> 00:04:32.376 A:middle
That's pretty basic.

00:04:33.106 --> 00:04:35.086 A:middle
The second is the
SCM information,

00:04:35.086 --> 00:04:36.616 A:middle
or the source control
information.

00:04:36.616 --> 00:04:37.656 A:middle
So where does your project live?

00:04:38.366 --> 00:04:40.586 A:middle
So if your project lives
in a Git repository

00:04:40.896 --> 00:04:44.086 A:middle
or a Subversion repository
and if Xcode can check

00:04:44.086 --> 00:04:46.526 A:middle
out your project, then you can
create a bot for your project.

00:04:46.976 --> 00:04:47.696 A:middle
That's really simple.

00:04:48.246 --> 00:04:51.716 A:middle
The next part about a
bot is the schedule.

00:04:52.046 --> 00:04:53.506 A:middle
So when do you want
the bot to integrate?

00:04:53.536 --> 00:04:55.506 A:middle
There are a lot of
possible options here.

00:04:55.826 --> 00:04:58.346 A:middle
You can choose to schedule
your bot periodically.

00:04:58.416 --> 00:05:01.466 A:middle
So, every hour or once a day or
even once a week if you want.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:04:58.416 --> 00:05:01.466 A:middle
So, every hour or once a day or
even once a week if you want.

00:05:01.466 --> 00:05:06.346 A:middle
There's also on-commit bots,
and that's a very popular option

00:05:06.346 --> 00:05:09.236 A:middle
because it means that when ever
anyone commits source control

00:05:09.236 --> 00:05:12.146 A:middle
to your repository, the bot
will fire off an integration,

00:05:12.766 --> 00:05:15.466 A:middle
and of course there's also
the manual scheduling too.

00:05:17.826 --> 00:05:19.576 A:middle
So, how to build it.

00:05:19.806 --> 00:05:22.006 A:middle
So this is where the shared
scheme comes into place.

00:05:22.006 --> 00:05:24.216 A:middle
The shared scheme tells the
bot how to build your project,

00:05:24.736 --> 00:05:26.716 A:middle
and you can also configure
three other options.

00:05:26.716 --> 00:05:28.916 A:middle
So do you want the bot
to run static analysis?

00:05:29.006 --> 00:05:30.356 A:middle
Do you want it to run tests,

00:05:30.586 --> 00:05:31.716 A:middle
and do you want it
to build archives?

00:05:33.286 --> 00:05:36.276 A:middle
Finally, a bot wouldn't
be a whole lot of good

00:05:36.276 --> 00:05:37.876 A:middle
if it didn't tell you
when something went wrong.

00:05:38.236 --> 00:05:40.496 A:middle
So we have a great
system for notifications,

00:05:40.856 --> 00:05:43.056 A:middle
and you can set these up to
fire before a bot integrates

00:05:43.246 --> 00:05:45.266 A:middle
and after a bot integrates
so that you

00:05:45.266 --> 00:05:47.416 A:middle
and your team know the
results of each integration.

00:05:48.146 --> 00:05:50.956 A:middle
So like I said,

00:05:51.276 --> 00:05:54.506 A:middle
we call our continuous
integration product Xcode

00:05:54.506 --> 00:05:57.716 A:middle
Server, and there are two parts
of Xcode Server, actually.

00:05:57.896 --> 00:06:00.036 A:middle
There's the Xcode part,
the part that lives


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:05:57.896 --> 00:06:00.036 A:middle
There's the Xcode part,
the part that lives

00:06:00.036 --> 00:06:02.566 A:middle
in the Xcode application, and
then there's the part that lives

00:06:02.566 --> 00:06:04.106 A:middle
in the OS X Server application.

00:06:04.646 --> 00:06:05.556 A:middle
This is important to know.

00:06:06.036 --> 00:06:08.066 A:middle
If you try to set this
up with just Xcode,

00:06:08.066 --> 00:06:09.376 A:middle
you're not going
to get very far.

00:06:09.376 --> 00:06:10.716 A:middle
You also need to
get OS X Server.

00:06:11.026 --> 00:06:11.926 A:middle
It's easy to get.

00:06:11.926 --> 00:06:14.526 A:middle
There's a new preview
of that available

00:06:14.526 --> 00:06:17.236 A:middle
on the developer website this
week, and when it gets released

00:06:17.236 --> 00:06:19.726 A:middle
to the public, it's also
available on the App Store.

00:06:20.036 --> 00:06:20.976 A:middle
So there are two parts to it.

00:06:22.116 --> 00:06:24.926 A:middle
Some of its features is that
it integrates very easily

00:06:24.926 --> 00:06:26.246 A:middle
with the Apple Developer
Program,

00:06:26.556 --> 00:06:28.926 A:middle
and this is really important
because in order to run any

00:06:28.926 --> 00:06:32.146 A:middle
of your code on devices, we need
to do all their provisioning

00:06:32.146 --> 00:06:34.576 A:middle
and certificate stuff,
and that needs

00:06:34.576 --> 00:06:36.516 A:middle
to know your Apple
Developer information

00:06:36.516 --> 00:06:37.546 A:middle
in order to do all of that.

00:06:37.596 --> 00:06:38.916 A:middle
That's part of the product.

00:06:38.916 --> 00:06:40.506 A:middle
We make it really easy
to get started with that,

00:06:40.506 --> 00:06:44.356 A:middle
and of course Xcode Server
builds any iOS and Mac projects.

00:06:44.646 --> 00:06:46.806 A:middle
If Xcode can build it,
Xcode Server can build it.

00:06:47.556 --> 00:06:50.166 A:middle
And one of the really great
features about Xcode Server is

00:06:50.166 --> 00:06:53.576 A:middle
that it can run your tests on
multiple devices and simulators.

00:06:53.856 --> 00:06:55.176 A:middle
So think about it.

00:06:55.176 --> 00:06:57.076 A:middle
Before we had this product,
if you wanted to test

00:06:57.306 --> 00:06:59.346 A:middle
on a couple iPhone's
and a couple iPads

00:06:59.346 --> 00:07:02.166 A:middle
and a couple iPod Touches, you
would have to plug each one


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:06:59.346 --> 00:07:02.166 A:middle
and a couple iPod Touches, you
would have to plug each one

00:07:02.166 --> 00:07:05.096 A:middle
of these into your
development system separately

00:07:05.096 --> 00:07:07.026 A:middle
and run the tests on them,
and it was a big pain.

00:07:07.596 --> 00:07:10.006 A:middle
But now you can plug all those
devices into an Xcode Server.

00:07:10.346 --> 00:07:12.106 A:middle
You can configure
your bot to run tests

00:07:12.106 --> 00:07:14.196 A:middle
on all those devices,
and it's great.

00:07:14.616 --> 00:07:16.666 A:middle
You have this really broad
test coverage I was talking

00:07:16.666 --> 00:07:17.216 A:middle
about before.

00:07:18.206 --> 00:07:21.706 A:middle
Of course, Xcode Server can
produce IPA and PKG files

00:07:21.706 --> 00:07:23.976 A:middle
so you can more easily
distribute these products,

00:07:24.256 --> 00:07:26.386 A:middle
and there's great
integration in Xcode.

00:07:26.916 --> 00:07:27.766 A:middle
It looks pretty good too.

00:07:29.836 --> 00:07:33.656 A:middle
So, like I said, OS X Server is
the other part of this equation.

00:07:33.876 --> 00:07:35.306 A:middle
Setup is really easy.

00:07:35.306 --> 00:07:37.326 A:middle
It's got great features
like hosted repositories,

00:07:37.706 --> 00:07:40.876 A:middle
and this is where you configure
the devices that you want

00:07:40.876 --> 00:07:43.166 A:middle
to make available for
testing your software.

00:07:43.556 --> 00:07:45.306 A:middle
We'll show you a demo of
that in just a minute.

00:07:47.016 --> 00:07:49.336 A:middle
So last year in Xcode 5,
we introduced Xcode Server

00:07:49.336 --> 00:07:51.486 A:middle
for the first time,
and we were really,

00:07:51.486 --> 00:07:53.076 A:middle
really proud of its feature set.

00:07:53.206 --> 00:07:56.646 A:middle
When we took a look at the
product and we took a look

00:07:56.646 --> 00:07:59.146 A:middle
at what features we wanted
to build in this release

00:07:59.146 --> 00:08:01.926 A:middle
and future releases, it
was pretty clear to us


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:07:59.146 --> 00:08:01.926 A:middle
and future releases, it
was pretty clear to us

00:08:01.976 --> 00:08:03.396 A:middle
that there were parts
of the foundation

00:08:03.396 --> 00:08:04.726 A:middle
that we really needed
to improve.

00:08:05.256 --> 00:08:07.316 A:middle
So we're happy to say we
have a shiny, new foundation

00:08:07.566 --> 00:08:08.986 A:middle
for Xcode Server and Xcode 6.

00:08:09.526 --> 00:08:10.836 A:middle
It's much better in all ways.

00:08:10.876 --> 00:08:11.546 A:middle
It's faster.

00:08:11.676 --> 00:08:12.766 A:middle
It's more reliable.

00:08:12.766 --> 00:08:16.106 A:middle
It's super scalable, and it's
allowed us to add support

00:08:16.106 --> 00:08:18.446 A:middle
for all these great features
like support for Swift,

00:08:18.776 --> 00:08:21.146 A:middle
support for performance testing,

00:08:21.146 --> 00:08:22.716 A:middle
a new feature we
call issue tracking

00:08:23.266 --> 00:08:25.356 A:middle
and probably the most
requested feature

00:08:25.356 --> 00:08:27.886 A:middle
from the first version
was triggers.

00:08:27.886 --> 00:08:29.426 A:middle
[Applause]

00:08:29.426 --> 00:08:29.916 A:middle
Thank you.

00:08:30.016 --> 00:08:30.376 A:middle
Thank you.

00:08:30.566 --> 00:08:30.996 A:middle
Just wait.

00:08:31.326 --> 00:08:31.766 A:middle
Just wait.

00:08:33.186 --> 00:08:35.426 A:middle
It's like I said, we have
a great new foundation.

00:08:35.736 --> 00:08:38.696 A:middle
Super reliable, and it's
really scalable too.

00:08:39.106 --> 00:08:40.976 A:middle
So I decided to do a
little test a few weeks ago.

00:08:41.145 --> 00:08:43.395 A:middle
I took an old Mac Pro that
was sitting in my office.

00:08:43.395 --> 00:08:44.566 A:middle
It's a five-year-old Mac Pro.

00:08:44.846 --> 00:08:45.776 A:middle
It wasn't doing anything.

00:08:45.776 --> 00:08:49.566 A:middle
It was a nice footrest for
me, and I set up Xcode Server

00:08:49.566 --> 00:08:53.016 A:middle
on Xcode 6 on it, and I
decided to add a few bots.

00:08:53.646 --> 00:08:54.616 A:middle
So I started with a small app.

00:08:54.616 --> 00:08:57.946 A:middle
I started with the WWDC app that
you have today in your devices.

00:08:58.376 --> 00:08:59.906 A:middle
I created a bot for that.

00:08:59.906 --> 00:09:00.856 A:middle
That went pretty well.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:08:59.906 --> 00:09:00.856 A:middle
That went pretty well.

00:09:01.296 --> 00:09:03.226 A:middle
Then I decided to
just keep going.

00:09:03.916 --> 00:09:06.206 A:middle
So I added a bot for Xcode.

00:09:06.206 --> 00:09:07.976 A:middle
That went really well.

00:09:07.976 --> 00:09:09.726 A:middle
I added a bot for Game Center.

00:09:10.346 --> 00:09:10.976 A:middle
That went pretty well.

00:09:11.046 --> 00:09:13.266 A:middle
Again, these are bots all
running on this one old server.

00:09:13.946 --> 00:09:16.256 A:middle
I added a bot for the
maps project, for UIKit,

00:09:16.256 --> 00:09:18.676 A:middle
and that was all going well so
I threw WebKit in there too.

00:09:19.146 --> 00:09:20.896 A:middle
This is a very old
piece of hardware.

00:09:21.116 --> 00:09:23.766 A:middle
It's building bots for all
these projects, both small,

00:09:23.766 --> 00:09:26.046 A:middle
medium and really big,
and it's doing just great.

00:09:26.396 --> 00:09:27.976 A:middle
So this is something
that just wasn't possible

00:09:28.216 --> 00:09:29.576 A:middle
with the first version
of Xcode Server.

00:09:31.036 --> 00:09:33.796 A:middle
Triggers. Okay, so we heard you.

00:09:33.796 --> 00:09:35.136 A:middle
You asked for this
loud and clear,

00:09:35.406 --> 00:09:37.516 A:middle
and we have a really
great story for triggers.

00:09:37.896 --> 00:09:40.956 A:middle
So we support triggers, both
before an integration starts

00:09:41.316 --> 00:09:43.876 A:middle
and after an integration
runs, and there are lots

00:09:43.876 --> 00:09:45.976 A:middle
of interesting reasons for
supporting both of these.

00:09:46.046 --> 00:09:50.066 A:middle
There are a number of conditions
you can specify that determine

00:09:50.066 --> 00:09:52.866 A:middle
when a trigger runs, and there
are two types of triggers.

00:09:53.136 --> 00:09:55.306 A:middle
There's a shell script
trigger and an email trigger.

00:09:55.846 --> 00:09:59.366 A:middle
So what's really cool about
the shell script triggers is

00:09:59.576 --> 00:10:00.826 A:middle
that you can do anything
you want to do.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:09:59.576 --> 00:10:00.826 A:middle
that you can do anything
you want to do.

00:10:01.006 --> 00:10:03.586 A:middle
Right? It's just a shell
script, and we provide a number

00:10:03.586 --> 00:10:05.456 A:middle
of environment variables
that you can leverage

00:10:05.456 --> 00:10:07.516 A:middle
on those shell scripts, and
we'll see a few of those

00:10:07.516 --> 00:10:09.046 A:middle
in the demo in just
a little bit.

00:10:09.826 --> 00:10:12.926 A:middle
The email reports that we
provide, you can configure them

00:10:12.926 --> 00:10:15.416 A:middle
to show you just the minimum
amount of information,

00:10:15.416 --> 00:10:17.146 A:middle
which is just like the
build errors and warnings,

00:10:17.416 --> 00:10:20.436 A:middle
or you can customize those
and make them really rich

00:10:20.496 --> 00:10:22.056 A:middle
and add all the issue
tracking that we do.

00:10:23.836 --> 00:10:25.376 A:middle
So speaking of issue
tracking, what is this?

00:10:25.696 --> 00:10:26.386 A:middle
Well, what's an issue?

00:10:26.386 --> 00:10:29.056 A:middle
An issue is either a build
warning, a build error,

00:10:29.656 --> 00:10:32.596 A:middle
a static analysis issue
or a test failure,

00:10:33.126 --> 00:10:35.036 A:middle
and issues are important.

00:10:35.266 --> 00:10:37.756 A:middle
You don't want to ship
software with issues,

00:10:38.156 --> 00:10:40.306 A:middle
and in fact we have a
policy, a really good policy,

00:10:40.476 --> 00:10:43.526 A:middle
on the Xcode team, which is
if there's a build warning

00:10:43.526 --> 00:10:46.496 A:middle
or static analysis issue in
the source space, that's a P1,

00:10:46.646 --> 00:10:48.386 A:middle
and that's what we work on.

00:10:48.866 --> 00:10:49.456 A:middle
It's important.

00:10:49.616 --> 00:10:51.736 A:middle
We can't ship with these
things, and you shouldn't ship

00:10:51.736 --> 00:10:55.846 A:middle
with them either, and by having
a great issue tracking service

00:10:55.846 --> 00:10:57.946 A:middle
in Xcode Server, it makes
it really easy to know

00:10:57.946 --> 00:11:00.306 A:middle
when those issues
get introduced.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:10:57.946 --> 00:11:00.306 A:middle
when those issues
get introduced.

00:11:00.676 --> 00:11:02.546 A:middle
And we can do really cool
things, like we can track

00:11:02.576 --> 00:11:04.186 A:middle
that issue all throughout
its lifecycle.

00:11:04.186 --> 00:11:05.796 A:middle
So if the issue still exists,

00:11:05.796 --> 00:11:07.526 A:middle
we mark that as an
unresolved issue,

00:11:07.696 --> 00:11:09.846 A:middle
and then when an issue
finally gets resolved,

00:11:10.046 --> 00:11:11.696 A:middle
we service that in
the reports too,

00:11:12.676 --> 00:11:15.116 A:middle
and because Xcode Server tracks
all of this history over time,

00:11:15.396 --> 00:11:19.016 A:middle
it's really great, easy to see
when an issue was introduced

00:11:19.016 --> 00:11:19.916 A:middle
and even who introduced it,

00:11:20.346 --> 00:11:22.686 A:middle
where we can be pretty
smart about that.

00:11:23.286 --> 00:11:25.086 A:middle
So there's a lot of stuff there,

00:11:25.086 --> 00:11:28.386 A:middle
but to really bring
the point home,

00:11:28.496 --> 00:11:29.916 A:middle
I think it's better
to show it in a demo.

00:11:29.916 --> 00:11:32.146 A:middle
So I'd like to bring up Matt
number 1, who's going to talk

00:11:32.146 --> 00:11:32.796 A:middle
about all these things.

00:11:34.516 --> 00:11:39.756 A:middle
[ Applause ]

00:11:40.256 --> 00:11:40.586 A:middle
&gt;&gt; All right.

00:11:40.736 --> 00:11:43.806 A:middle
Thank you so much, Brent and
as you heard, we've got a lot

00:11:43.806 --> 00:11:46.916 A:middle
of really great new features
in Xcode Server and Xcode 6.

00:11:47.276 --> 00:11:49.516 A:middle
But in case you've never used
it before, we're going to start

00:11:49.516 --> 00:11:51.756 A:middle
from the very beginning,
which begins in Server.

00:11:52.406 --> 00:11:55.336 A:middle
So we have OS X Server
installed on this machine,

00:11:55.406 --> 00:11:57.676 A:middle
which you can get from
developer.apple.com.

00:11:57.676 --> 00:12:00.086 A:middle
You need the preview to
work with Xcode 6 beta


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:11:57.676 --> 00:12:00.086 A:middle
You need the preview to
work with Xcode 6 beta

00:12:00.086 --> 00:12:01.006 A:middle
that you all got this week,

00:12:01.006 --> 00:12:03.146 A:middle
and we've already set
it up on this machine.

00:12:03.486 --> 00:12:05.116 A:middle
You can see our server
is called Bobert,

00:12:05.436 --> 00:12:07.146 A:middle
and it's ready to
start integrating.

00:12:07.356 --> 00:12:09.646 A:middle
So what we're going to do
is set up Xcode Server.

00:12:10.316 --> 00:12:12.986 A:middle
So we select Xcode
on the left-hand side

00:12:12.986 --> 00:12:15.626 A:middle
in the Services list, and the
first thing that we ask you

00:12:15.626 --> 00:12:18.556 A:middle
to do is choose which version of
Xcode you're going to be using.

00:12:18.836 --> 00:12:22.016 A:middle
So you do need Xcode installed
on your server machine in order

00:12:22.016 --> 00:12:23.296 A:middle
for Xcode Server to work,

00:12:23.296 --> 00:12:24.756 A:middle
because that's what actually
does all the building.

00:12:25.186 --> 00:12:28.006 A:middle
But we give you the choice
of which Xcode you use

00:12:28.106 --> 00:12:30.416 A:middle
in case you want to try
out a new version of Xcode

00:12:30.416 --> 00:12:33.386 A:middle
or in case you need to support
multiple versions of the iOS SDK

00:12:33.386 --> 00:12:34.146 A:middle
or something like that.

00:12:35.006 --> 00:12:37.466 A:middle
So we're going to select the
Xcode that you all have a copy

00:12:37.466 --> 00:12:40.346 A:middle
of right now, and
when I choose that,

00:12:40.446 --> 00:12:42.026 A:middle
it's going to start
setting up our database.

00:12:42.026 --> 00:12:45.326 A:middle
It's going to generate client
SSL certificates, and it's going

00:12:45.326 --> 00:12:47.616 A:middle
to start all of our
processes so that we're ready

00:12:47.616 --> 00:12:49.556 A:middle
to start doing integrations
with Xcode Server,

00:12:50.216 --> 00:12:53.446 A:middle
and after a few seconds, that
sets up and it's ready to go.

00:12:53.796 --> 00:12:56.016 A:middle
Now, if you're doing
Mac development only,

00:12:56.166 --> 00:12:57.226 A:middle
that's all you need to do.

00:12:57.296 --> 00:12:58.546 A:middle
You can stop right there.

00:12:58.546 --> 00:12:59.616 A:middle
All set. Good to go.

00:12:59.616 --> 00:13:02.096 A:middle
But because we're going
to be testing on devices


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:12:59.616 --> 00:13:02.096 A:middle
But because we're going
to be testing on devices

00:13:02.096 --> 00:13:04.946 A:middle
and everything that we do on
iOS needs to be code signed,

00:13:05.336 --> 00:13:08.116 A:middle
we also need a way for Xcode
Server to be able to do

00:13:08.116 --> 00:13:10.056 A:middle
that code signing, and
for that we're going

00:13:10.056 --> 00:13:11.826 A:middle
to join an Apple
Developer connection team.

00:13:12.476 --> 00:13:14.446 A:middle
So to do that, next

00:13:14.446 --> 00:13:16.946 A:middle
to the developer team's
label there's an Add button.

00:13:17.216 --> 00:13:20.406 A:middle
So we'll choose that, and then
you sign in with your Apple ID.

00:13:29.106 --> 00:13:31.636 A:middle
Once you've signed in, that's
going to give you the option

00:13:31.636 --> 00:13:34.196 A:middle
to become a member of
your developer team.

00:13:34.456 --> 00:13:36.586 A:middle
So when I click Add,
what it's actually going

00:13:36.586 --> 00:13:39.426 A:middle
to do is add your
server as a new person

00:13:39.556 --> 00:13:40.696 A:middle
on your Apple Developer team.

00:13:40.696 --> 00:13:43.396 A:middle
It gets its own set of
certificates, private keys,

00:13:43.716 --> 00:13:46.486 A:middle
signing identities, and it's
also going to download a copy

00:13:46.486 --> 00:13:49.436 A:middle
of all the provisioning
profiles that work with the apps

00:13:49.436 --> 00:13:52.766 A:middle
that you have registered for
app IDs on your developer team,

00:13:52.766 --> 00:13:55.086 A:middle
and this can take a few
seconds because it does go out

00:13:55.086 --> 00:13:56.836 A:middle
and make a bunch of
certificate sign and requests

00:13:57.126 --> 00:13:58.196 A:middle
and then pull those all in.

00:13:58.766 --> 00:14:01.586 A:middle
But once it finishes, you'll
see that you are now a member


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:13:58.766 --> 00:14:01.586 A:middle
But once it finishes, you'll
see that you are now a member

00:14:01.586 --> 00:14:03.776 A:middle
of the developer team
that you signed up for.

00:14:04.386 --> 00:14:06.666 A:middle
Now, since we're going
to test on devices,

00:14:06.666 --> 00:14:08.796 A:middle
I do have an iPad
mini right here.

00:14:08.936 --> 00:14:09.526 A:middle
You can all see it.

00:14:10.066 --> 00:14:14.456 A:middle
It's real, and what I'm going
to do is plug it in right

00:14:14.456 --> 00:14:17.996 A:middle
into my server machine,
and after just a second,

00:14:18.246 --> 00:14:19.986 A:middle
in the Devices list
that shows up.

00:14:19.986 --> 00:14:21.996 A:middle
So you can see it's ready
to use, and it shows

00:14:21.996 --> 00:14:23.306 A:middle
which teams it's enabled for.

00:14:23.586 --> 00:14:25.706 A:middle
If this device had
never been used before,

00:14:25.706 --> 00:14:28.376 A:middle
you also get an option
right here to choose Use

00:14:28.376 --> 00:14:30.806 A:middle
for Development, and that goes
out to the portal and adds it

00:14:30.806 --> 00:14:31.576 A:middle
to your developer team.

00:14:31.666 --> 00:14:32.656 A:middle
So really easy to do.

00:14:33.876 --> 00:14:36.286 A:middle
From this screen you also
have the option of configuring

00:14:36.286 --> 00:14:37.456 A:middle
who can use your server.

00:14:37.746 --> 00:14:40.026 A:middle
So by default, I'll click
this Edit button here.

00:14:40.026 --> 00:14:43.006 A:middle
You can see that bots
can be created by anyone

00:14:43.006 --> 00:14:45.986 A:middle
who can log in, and anyone can
view those bots once they've

00:14:45.986 --> 00:14:47.416 A:middle
been created, and
we want to lock it

00:14:47.416 --> 00:14:48.946 A:middle
down just a little bit more.

00:14:48.946 --> 00:14:52.306 A:middle
So I'm going to choose only
some users can create bots.

00:14:52.306 --> 00:14:53.796 A:middle
Administrators is fine for me,

00:14:54.246 --> 00:14:56.716 A:middle
but I'll turn view only
access for everyone back on.

00:14:56.926 --> 00:14:58.376 A:middle
So that's pretty good for me.

00:14:58.376 --> 00:15:01.566 A:middle
I think that's a good set of
access controls for my server.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:14:58.376 --> 00:15:01.566 A:middle
I think that's a good set of
access controls for my server.

00:15:02.246 --> 00:15:06.016 A:middle
From OS X Server you can also
set up hosted repositories.

00:15:06.016 --> 00:15:08.876 A:middle
If you'd like Xcode Server
to host your repositories

00:15:08.876 --> 00:15:10.126 A:middle
for you, you can do that here.

00:15:10.366 --> 00:15:12.706 A:middle
You can also set that up
directly from within Xcode.

00:15:13.096 --> 00:15:15.876 A:middle
But that's all we need
from Server for right now,

00:15:16.226 --> 00:15:18.446 A:middle
so I'll close Server,
and we'll head back

00:15:18.446 --> 00:15:20.086 A:middle
over into Xcode itself.

00:15:20.876 --> 00:15:23.056 A:middle
So once you've launched Xcode,
the first thing you're going

00:15:23.056 --> 00:15:25.696 A:middle
to need to do is set up an
account for your server,

00:15:26.196 --> 00:15:26.966 A:middle
and that happens

00:15:27.086 --> 00:15:29.456 A:middle
in the preferences window
on the Accounts tab.

00:15:30.376 --> 00:15:32.926 A:middle
You can click the plus button
in the bottom left-hand side

00:15:32.926 --> 00:15:36.356 A:middle
and choose Add Server, and
you can see my server, Bobert,

00:15:36.356 --> 00:15:37.496 A:middle
is going to show up right here.

00:15:37.496 --> 00:15:40.706 A:middle
So I'll select Bobert,
choose Next and log

00:15:40.706 --> 00:15:41.646 A:middle
in with my user name

00:15:42.466 --> 00:15:45.906 A:middle
and super-secret
password, and there we go.

00:15:45.906 --> 00:15:49.036 A:middle
All set. One of the new features
that we've added in Xcode 6,

00:15:49.036 --> 00:15:50.926 A:middle
which we think is pretty
useful, is down at the bottom

00:15:50.926 --> 00:15:54.166 A:middle
of the Accounts window, we do
show you which version of OS X,

00:15:54.366 --> 00:15:57.426 A:middle
OS X Server and Xcode your
server machine is using.

00:15:57.786 --> 00:15:59.096 A:middle
So if you've got
multiple servers

00:15:59.096 --> 00:16:00.846 A:middle
and something starts
going a little funky,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:15:59.096 --> 00:16:00.846 A:middle
and something starts
going a little funky,

00:16:01.136 --> 00:16:02.226 A:middle
you can look right here

00:16:02.226 --> 00:16:04.776 A:middle
and it will tell you what your
server machine is running.

00:16:04.776 --> 00:16:06.486 A:middle
So that's not a bad place
to start when you're trying

00:16:06.486 --> 00:16:08.906 A:middle
to diagnose a problem.

00:16:09.046 --> 00:16:10.106 A:middle
So that's all set,
and we're going

00:16:10.106 --> 00:16:12.806 A:middle
to close the accounts
window, and we're going

00:16:12.806 --> 00:16:15.866 A:middle
to open our project, and it's
a project called CoffeeBoard.

00:16:16.596 --> 00:16:20.196 A:middle
So on our team from time
to time we make mistakes.

00:16:20.286 --> 00:16:20.986 A:middle
We're only human.

00:16:21.346 --> 00:16:24.026 A:middle
I don't make that many mistakes,
but some people on our team do,

00:16:24.596 --> 00:16:26.676 A:middle
and when that happens,
if a mistake happens

00:16:26.676 --> 00:16:28.556 A:middle
that causes someone
to spend more

00:16:28.556 --> 00:16:30.236 A:middle
than half a day fixing
a problem,

00:16:30.706 --> 00:16:32.186 A:middle
we think retribution
is in order.

00:16:32.446 --> 00:16:35.546 A:middle
So we've written an app that
keeps track of when that happens

00:16:35.846 --> 00:16:39.996 A:middle
and assigns debts of coffee
and ice cream to the members

00:16:39.996 --> 00:16:41.476 A:middle
of our team, and we
call it CoffeeBoard.

00:16:41.476 --> 00:16:42.706 A:middle
So that's this app right here.

00:16:42.856 --> 00:16:44.996 A:middle
The other Matt's going to show
it to you a little bit later,

00:16:45.286 --> 00:16:48.066 A:middle
but you can see it's got
a lot of tests all set up.

00:16:48.066 --> 00:16:49.706 A:middle
It is written in Swift,
which is pretty cool.

00:16:49.706 --> 00:16:52.146 A:middle
So we're going to create
a bot for that project.

00:16:52.686 --> 00:16:55.726 A:middle
I'll switch over into the report
navigator, and I'll choose

00:16:55.726 --> 00:16:58.216 A:middle
from the Product
menu Create Bot.

00:16:59.136 --> 00:17:00.786 A:middle
Now, the first choice you get is


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:16:59.136 --> 00:17:00.786 A:middle
Now, the first choice you get is

00:17:00.786 --> 00:17:03.296 A:middle
which scheme your project
is going to integrate with.

00:17:03.656 --> 00:17:04.896 A:middle
I'll use the iOS one.

00:17:05.406 --> 00:17:08.316 A:middle
You get to choose what the
name of your project --

00:17:08.316 --> 00:17:09.646 A:middle
what the name of your
bot is going to be.

00:17:09.646 --> 00:17:10.766 A:middle
So I'll choose CoffeeBoard.

00:17:11.195 --> 00:17:13.806 A:middle
You also choose which server
your bot gets created on

00:17:13.806 --> 00:17:16.346 A:middle
and whether or not it integrates
immediately after creation.

00:17:16.415 --> 00:17:17.665 A:middle
So I'll leave that set.

00:17:18.056 --> 00:17:19.816 A:middle
Now, one of the issues
that some people ran

00:17:19.816 --> 00:17:22.656 A:middle
into in the first
iteration of Xcode Server was

00:17:22.656 --> 00:17:24.536 A:middle
that you would go through the
process of creating a bot,

00:17:24.536 --> 00:17:25.945 A:middle
it would all look
like it was all fine

00:17:26.246 --> 00:17:28.415 A:middle
and then your bot would go
to run its first integration,

00:17:28.976 --> 00:17:30.586 A:middle
and it wouldn't be able
to check out your project,

00:17:30.796 --> 00:17:33.066 A:middle
which wasn't fun because that
wasn't all that easy to fix.

00:17:33.486 --> 00:17:37.046 A:middle
So one of the new features we've
added in Xcode 6 is the concept

00:17:37.046 --> 00:17:38.766 A:middle
of source control preflighting.

00:17:39.306 --> 00:17:41.856 A:middle
So what's going to happen when
I click Next is it's going

00:17:41.856 --> 00:17:43.526 A:middle
to scan your entire workspace,

00:17:43.916 --> 00:17:46.356 A:middle
find all of the source
control working copies

00:17:46.416 --> 00:17:49.596 A:middle
that it knows about, gather up
the credentials that Xcode knows

00:17:49.596 --> 00:17:52.196 A:middle
about that goes with those
repositories, package them

00:17:52.196 --> 00:17:54.406 A:middle
up in a nice, secure,
little bundle and send them

00:17:54.406 --> 00:17:57.436 A:middle
up to the server so that the
server can determine right now

00:17:57.526 --> 00:17:59.226 A:middle
if there's going to be
a problem when it's time

00:17:59.226 --> 00:18:00.486 A:middle
to check out the repository.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:17:59.226 --> 00:18:00.486 A:middle
to check out the repository.

00:18:00.486 --> 00:18:00.976 A:middle
So I'll click Next.

00:18:01.086 --> 00:18:01.976 A:middle
Yeah. It's a cool feature.

00:18:02.516 --> 00:18:04.586 A:middle
[ Applause ]

00:18:05.086 --> 00:18:06.046 A:middle
So I'll click Next.

00:18:06.046 --> 00:18:09.016 A:middle
It tells us that all of the
repositories that it found.

00:18:09.176 --> 00:18:11.686 A:middle
The CoffeeBoard repository
it couldn't authenticate,

00:18:11.686 --> 00:18:13.376 A:middle
and that's because I
was recently a victim

00:18:13.376 --> 00:18:15.416 A:middle
of identity theft so
I changed my password.

00:18:16.096 --> 00:18:18.836 A:middle
So what I can do now is
correct this issue right away.

00:18:18.956 --> 00:18:20.026 A:middle
So I'll click the Change button.

00:18:20.736 --> 00:18:23.006 A:middle
Enter my username
and my new password.

00:18:24.526 --> 00:18:27.336 A:middle
Click Next, and this time
it says my credentials

00:18:27.336 --> 00:18:27.876 A:middle
are verified.

00:18:27.986 --> 00:18:30.106 A:middle
So it knows that when it
goes to check out my bot

00:18:30.106 --> 00:18:31.826 A:middle
for the first time,
it's going to work,

00:18:31.826 --> 00:18:33.076 A:middle
which is a really
comforting feeling.

00:18:34.126 --> 00:18:36.316 A:middle
So now we have an option

00:18:36.316 --> 00:18:39.176 A:middle
to choose how frequently we want
our bot to run, which is great.

00:18:39.876 --> 00:18:43.266 A:middle
By default it's going to be a
periodic bot that runs hourly

00:18:43.386 --> 00:18:45.336 A:middle
on the hour, but
because we want this

00:18:45.336 --> 00:18:47.316 A:middle
to be a little bit more
alive for our demo,

00:18:47.316 --> 00:18:48.716 A:middle
we're going to choose On-Commit

00:18:48.716 --> 00:18:50.676 A:middle
so that every time we
make a change to the bot,

00:18:50.676 --> 00:18:52.226 A:middle
it's going to kick
off a new integration.

00:18:53.376 --> 00:18:55.516 A:middle
You also can choose which
actions your bot will run,

00:18:55.516 --> 00:18:58.206 A:middle
when it integrates and also
how frequently it cleans.

00:18:58.306 --> 00:19:00.476 A:middle
By default we always
do incremental builds,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:18:58.306 --> 00:19:00.476 A:middle
By default we always
do incremental builds,

00:19:00.736 --> 00:19:02.716 A:middle
but because I really
like squeaky clean bots,

00:19:02.716 --> 00:19:04.296 A:middle
I'm going to choose Always.

00:19:05.486 --> 00:19:07.126 A:middle
Now, depending on which
scheme you select,

00:19:07.626 --> 00:19:11.116 A:middle
if your scheme can build targets
that have products that run

00:19:11.116 --> 00:19:13.966 A:middle
on iOS or on Mac,
you have a choice

00:19:13.966 --> 00:19:16.406 A:middle
of where your targets
will run for testing.

00:19:16.896 --> 00:19:21.316 A:middle
So since we're doing an iOS
target, we are going to use iOS.

00:19:21.396 --> 00:19:23.896 A:middle
But we do have an
option of specifically

00:19:23.896 --> 00:19:25.566 A:middle
which devices our
test will run on.

00:19:25.776 --> 00:19:28.406 A:middle
So I'll drill down into
that and choose the iPad

00:19:28.406 --> 00:19:30.826 A:middle
that I connected earlier on.

00:19:32.676 --> 00:19:34.846 A:middle
And then you get to the option
to configure your triggers,

00:19:34.846 --> 00:19:36.806 A:middle
and I'm going to talk more
about that in just a minute.

00:19:36.946 --> 00:19:40.286 A:middle
But we will show you that by
default, we create a trigger

00:19:40.286 --> 00:19:41.806 A:middle
that will send an
email notification

00:19:41.806 --> 00:19:44.936 A:middle
when something goes wrong,
and you can choose if you'd

00:19:44.936 --> 00:19:47.106 A:middle
like that email to be sent
to all of your committers,

00:19:47.176 --> 00:19:50.506 A:middle
and you can also build another
list of email addresses if you'd

00:19:50.506 --> 00:19:51.686 A:middle
like to send it to more people.

00:19:52.766 --> 00:19:55.066 A:middle
You can choose what goes
into that email message,

00:19:55.366 --> 00:19:57.726 A:middle
whether you want Issue and
analysis issue summaries,

00:19:58.136 --> 00:19:59.916 A:middle
the Commit messages, if
you want to hide those

00:19:59.966 --> 00:20:02.066 A:middle
because they might contain
sensitive information.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:19:59.966 --> 00:20:02.066 A:middle
because they might contain
sensitive information.

00:20:02.446 --> 00:20:04.976 A:middle
Or you can turn both off if
you just want people to know

00:20:04.976 --> 00:20:06.276 A:middle
that an integration
is completed,

00:20:06.786 --> 00:20:10.416 A:middle
and you also can choose when
that email will get sent,

00:20:10.416 --> 00:20:12.746 A:middle
whether it's on success,
test failures, build errors

00:20:12.746 --> 00:20:14.086 A:middle
or any combination of the three.

00:20:14.786 --> 00:20:16.406 A:middle
So we'll click Create.

00:20:16.926 --> 00:20:18.406 A:middle
Our bot will get created,

00:20:18.946 --> 00:20:21.386 A:middle
and after a few seconds
it will start integrating,

00:20:22.476 --> 00:20:24.286 A:middle
and you can see another
great new feature we have

00:20:24.286 --> 00:20:27.426 A:middle
in Xcode 6 is live
progress information right

00:20:27.426 --> 00:20:30.196 A:middle
down to the source file that's
being compiled by your bot.

00:20:30.476 --> 00:20:32.086 A:middle
So you can really
keep close tabs

00:20:32.086 --> 00:20:34.246 A:middle
on exactly what's happening
while it's integrating,

00:20:34.386 --> 00:20:35.116 A:middle
which is really cool.

00:20:36.206 --> 00:20:38.246 A:middle
So this will take a
few seconds to compile,

00:20:38.906 --> 00:20:41.236 A:middle
and once that's done it will
start running tests on the iPad

00:20:41.236 --> 00:20:41.976 A:middle
that we have connected
right here.

00:20:48.076 --> 00:20:49.886 A:middle
I know you can't see it,
but it's unlocked the iPad.

00:20:51.376 --> 00:20:55.446 A:middle
The app is launching,
and the tests have run,

00:20:55.736 --> 00:20:59.476 A:middle
and you can see we
have the results

00:20:59.596 --> 00:21:01.156 A:middle
for our integration
that has completed.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:20:59.596 --> 00:21:01.156 A:middle
for our integration
that has completed.

00:21:01.526 --> 00:21:05.396 A:middle
You can see that because
multiple people have committed

00:21:05.486 --> 00:21:07.796 A:middle
to the repository
for this integration,

00:21:08.176 --> 00:21:10.286 A:middle
we have a nice breakdown
of the commits,

00:21:10.286 --> 00:21:14.066 A:middle
and we have these nice little
circles which indicate relative

00:21:14.066 --> 00:21:15.836 A:middle
to each committer how much

00:21:15.836 --> 00:21:18.186 A:middle
of that integration
they own, so to speak.

00:21:18.186 --> 00:21:19.986 A:middle
It's the number of files
that have been changed,

00:21:20.246 --> 00:21:23.946 A:middle
and if I click on a committer, I
can see which commits were made

00:21:23.946 --> 00:21:25.456 A:middle
by those committers,
which is pretty cool.

00:21:26.096 --> 00:21:28.456 A:middle
But because a single
integration isn't that exciting,

00:21:28.576 --> 00:21:30.576 A:middle
we're going to switch
over to our other machine

00:21:31.116 --> 00:21:34.486 A:middle
which has a bot that's
been baking for a few days.

00:21:36.276 --> 00:21:39.666 A:middle
So you can see this bot has
been running for quite a while.

00:21:39.666 --> 00:21:41.186 A:middle
I've gotten taller,
if you've noticed.

00:21:41.306 --> 00:21:43.386 A:middle
This bot has been
running for quite a while,

00:21:43.386 --> 00:21:45.316 A:middle
and it's got a much more
interesting history,

00:21:46.536 --> 00:21:49.416 A:middle
which is a great way for us to
show off another new feature

00:21:49.416 --> 00:21:50.666 A:middle
that we're really excited about,

00:21:50.666 --> 00:21:52.046 A:middle
which is our issue
tracking feature.

00:21:52.766 --> 00:21:54.686 A:middle
So if I select integration 4,

00:21:55.316 --> 00:21:57.806 A:middle
you can see that it shows we
have no errors, one warning,

00:21:57.956 --> 00:22:01.166 A:middle
one analysis issue and six
tests ran successfully.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:21:57.956 --> 00:22:01.166 A:middle
one analysis issue and six
tests ran successfully.

00:22:01.506 --> 00:22:05.186 A:middle
But these warnings and issues
are new in this integration,

00:22:05.456 --> 00:22:07.906 A:middle
and you can see that Xcode
Server's smart enough

00:22:07.906 --> 00:22:10.626 A:middle
to notice that, because it
puts a plus 1 under each

00:22:10.626 --> 00:22:12.396 A:middle
of those circles so that we know

00:22:12.396 --> 00:22:15.306 A:middle
that these were just recently
introduced, and you can see here

00:22:15.306 --> 00:22:17.746 A:middle
in the issue summary it
also says New Issues:

00:22:17.806 --> 00:22:19.386 A:middle
1 warning, 1 analysis issue.

00:22:20.146 --> 00:22:22.336 A:middle
Well, I came along and
fixed that warning.

00:22:23.176 --> 00:22:27.666 A:middle
So in integration 5, you can see
that it says Resolved Issues,

00:22:27.986 --> 00:22:29.946 A:middle
Warning: Unused variable,
and it knows,

00:22:29.946 --> 00:22:33.006 A:middle
based on the file location of
these issues and the message

00:22:33.006 --> 00:22:36.026 A:middle
that the issues generated, that
this is exactly the same issue,

00:22:36.156 --> 00:22:38.556 A:middle
and we can safely say that
this issue has been resolved.

00:22:38.946 --> 00:22:40.726 A:middle
So that's a really
great way to keep an eye

00:22:40.726 --> 00:22:41.966 A:middle
on the health of
your source space.

00:22:42.106 --> 00:22:42.866 A:middle
Really, really cool.

00:22:44.186 --> 00:22:47.396 A:middle
We also have here logs
just like you would see

00:22:47.396 --> 00:22:50.476 A:middle
for local projects integrated
in Xcode, and you can even drill

00:22:50.476 --> 00:22:52.876 A:middle
down into them and see
the same kind of view

00:22:52.876 --> 00:22:54.786 A:middle
that you would expect
from looking at these

00:22:54.956 --> 00:22:57.266 A:middle
from a local product,
which is really cool.

00:22:58.446 --> 00:23:00.976 A:middle
But now I want to show you
probably what was the most


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:22:58.446 --> 00:23:00.976 A:middle
But now I want to show you
probably what was the most

00:23:00.976 --> 00:23:02.976 A:middle
requested feature
from the first version

00:23:02.976 --> 00:23:05.246 A:middle
of Xcode Server,
which is triggers.

00:23:05.746 --> 00:23:07.826 A:middle
Triggers are really cool,
and we're really excited

00:23:07.826 --> 00:23:08.916 A:middle
to show you what they can do.

00:23:09.416 --> 00:23:10.956 A:middle
So we'll start by
talking about how we work

00:23:10.956 --> 00:23:11.756 A:middle
with them on our team.

00:23:12.646 --> 00:23:13.326 A:middle
We have a friend.

00:23:14.326 --> 00:23:16.576 A:middle
His name is Jeeves, and he sits

00:23:16.576 --> 00:23:19.806 A:middle
in our messages chat room
all day long answering useful

00:23:19.806 --> 00:23:23.326 A:middle
questions for us like,
what's the weather like?

00:23:23.816 --> 00:23:24.596 A:middle
For instance, you can see

00:23:24.596 --> 00:23:27.626 A:middle
in Cupertino it's 77
degrees and partly cloudy.

00:23:27.656 --> 00:23:30.566 A:middle
Of course, here in
the beautiful city

00:23:30.566 --> 00:23:33.696 A:middle
of San Francisco it is a
good 12 degrees colder,

00:23:33.726 --> 00:23:34.746 A:middle
which is to be expected.

00:23:35.056 --> 00:23:36.466 A:middle
But Jeeves is really helpful.

00:23:36.466 --> 00:23:39.386 A:middle
We really like having him
around, and it's very helpful

00:23:39.386 --> 00:23:41.196 A:middle
to our team to be able to
get that kind of information

00:23:41.196 --> 00:23:43.516 A:middle
on the fly, but we want
to supercharge this

00:23:43.516 --> 00:23:46.126 A:middle
with information from Xcode
Server, and the best way to do

00:23:46.126 --> 00:23:47.216 A:middle
that is with triggers.

00:23:48.446 --> 00:23:50.586 A:middle
So we'll switch over into
Xcode, and I'll put that up

00:23:50.586 --> 00:23:51.906 A:middle
so you can see it side-by-side.

00:23:52.476 --> 00:23:56.456 A:middle
I'm going to edit the bot, and
most of these settings I'm going

00:23:56.456 --> 00:23:58.516 A:middle
to leave the same, because
we're not really changing much

00:23:58.516 --> 00:24:00.546 A:middle
about the bot, and you'll
see as I click Next,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:23:58.516 --> 00:24:00.546 A:middle
about the bot, and you'll
see as I click Next,

00:24:00.986 --> 00:24:03.356 A:middle
it will revalidate those
credentials that I set

00:24:03.356 --> 00:24:05.776 A:middle
up earlier to make sure nothing
is broken in the meantime.

00:24:06.746 --> 00:24:08.436 A:middle
We'll leave all of that
information the same,

00:24:08.696 --> 00:24:11.926 A:middle
but when we get to the triggers
screen, I'll choose Add Trigger

00:24:12.596 --> 00:24:14.186 A:middle
and select Run Script.

00:24:14.536 --> 00:24:16.456 A:middle
Now, I've already got some
triggers written down here.

00:24:17.326 --> 00:24:18.476 A:middle
This is a ruby script.

00:24:18.616 --> 00:24:20.126 A:middle
They're shell scripts
by default,

00:24:20.226 --> 00:24:23.286 A:middle
but you can put a little
shebang at the front here

00:24:23.346 --> 00:24:25.436 A:middle
and run using whatever
interpreter you'd like,

00:24:26.176 --> 00:24:30.456 A:middle
and all this does is it hits
a http endpoint that we expose

00:24:30.456 --> 00:24:34.516 A:middle
on Jeeves, and it uses things
like the integration number

00:24:34.516 --> 00:24:36.346 A:middle
and the bot name
to build a message

00:24:36.406 --> 00:24:37.466 A:middle
that will show in our chat room.

00:24:38.016 --> 00:24:41.156 A:middle
So I'll select all of that
and paste it into a trigger,

00:24:41.156 --> 00:24:45.166 A:middle
and I'm going to do the same
for a post-integration trigger,

00:24:46.026 --> 00:24:47.536 A:middle
and these are just a
little bit different.

00:24:47.536 --> 00:24:50.166 A:middle
You can see I actually use
the failure count, error count

00:24:50.166 --> 00:24:53.166 A:middle
and warning count so that we can
provide even more information

00:24:53.166 --> 00:24:56.066 A:middle
in our chat room, and for
post-integration triggers you

00:24:56.066 --> 00:24:59.596 A:middle
get a choice of under what
conditions your trigger will

00:24:59.596 --> 00:25:01.076 A:middle
run, whether it's
only on success,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:24:59.596 --> 00:25:01.076 A:middle
run, whether it's
only on success,

00:25:01.456 --> 00:25:04.316 A:middle
only when something goes wrong
or any combination of those.

00:25:05.156 --> 00:25:06.226 A:middle
So I've created the triggers.

00:25:06.616 --> 00:25:09.366 A:middle
I'll choose Update, and that
will kick off a new integration

00:25:09.366 --> 00:25:10.256 A:middle
of our bot.

00:25:11.226 --> 00:25:12.466 A:middle
So we'll pull up
the status here,

00:25:12.466 --> 00:25:16.906 A:middle
and you can see we get a
message in our chat room

00:25:16.906 --> 00:25:19.686 A:middle
that integration 14 on
CoffeeBoard is now starting,

00:25:20.196 --> 00:25:23.706 A:middle
and that message ran after the
source code checkout happened.

00:25:23.926 --> 00:25:25.836 A:middle
So that way if you'd
like to, for instance,

00:25:25.866 --> 00:25:28.596 A:middle
inject versioning information
into your built product,

00:25:28.906 --> 00:25:31.296 A:middle
you can do that right from
a pre-integration trigger,

00:25:31.396 --> 00:25:32.326 A:middle
which we think is really cool.

00:25:32.846 --> 00:25:36.396 A:middle
You can see the integration
completed, and we got

00:25:36.396 --> 00:25:39.646 A:middle
yet another information
message in our chat room,

00:25:39.646 --> 00:25:42.656 A:middle
and because we wanted to take
it just one little step further,

00:25:43.476 --> 00:25:45.836 A:middle
we added another little feature
where we can say, Jeeves --

00:25:45.836 --> 00:25:50.036 A:middle
oh, not weather -- Jeeves,
integrate CoffeeBoard,

00:25:50.586 --> 00:25:53.876 A:middle
and you can see it's kicking off
another integration in Xcode,

00:25:54.446 --> 00:25:55.486 A:middle
which we think is pretty cool.

00:25:56.231 --> 00:25:58.231 A:middle
[ Applause ]

00:25:58.446 --> 00:26:00.146 A:middle
So that's just one
of the many things


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:25:58.446 --> 00:26:00.146 A:middle
So that's just one
of the many things

00:26:00.146 --> 00:26:01.276 A:middle
that you can do with triggers.

00:26:01.276 --> 00:26:03.766 A:middle
We're sure you have ideas about
how you want to integrate them

00:26:03.766 --> 00:26:05.586 A:middle
into your own workflow.

00:26:05.586 --> 00:26:07.136 A:middle
We have a lab right
after this session.

00:26:07.376 --> 00:26:07.976 A:middle
Come see us.

00:26:08.116 --> 00:26:10.536 A:middle
Come talk to us, and we
can help you make sure

00:26:10.536 --> 00:26:13.386 A:middle
that you can make triggers
do whatever you would like.

00:26:13.386 --> 00:26:14.086 A:middle
Thanks so much.

00:26:14.306 --> 00:26:15.596 A:middle
Brent, back to you.

00:26:16.816 --> 00:26:19.166 A:middle
&gt;&gt; So, of course, the big
news this week, Swift support.

00:26:19.616 --> 00:26:21.996 A:middle
So how does Xcode
Server deal with Swift?

00:26:22.576 --> 00:26:25.026 A:middle
Well, it deals with it just
like it deals with Objective-C.

00:26:25.136 --> 00:26:27.796 A:middle
It does complete feature parity
with Objective-C projects.

00:26:28.206 --> 00:26:29.786 A:middle
So whether you have
a pure Swift project,

00:26:30.056 --> 00:26:32.296 A:middle
whether you have a mixed
Swift and Objective-C project,

00:26:32.736 --> 00:26:36.086 A:middle
Xcode Server can integrate bots
of those projects no problem.

00:26:36.316 --> 00:26:37.486 A:middle
All the features work the same.

00:26:37.746 --> 00:26:39.596 A:middle
This is true of testing support.

00:26:39.596 --> 00:26:42.546 A:middle
So whether you write unit tests
in Objective-C or you write them

00:26:42.546 --> 00:26:45.036 A:middle
in Swift, all the testing
supports just works.

00:26:45.206 --> 00:26:46.726 A:middle
The same goes for
performance testing,

00:26:47.626 --> 00:26:50.286 A:middle
and Xcode Server has always
had great Assistant Editor

00:26:50.286 --> 00:26:51.696 A:middle
integration in Xcode.

00:26:51.696 --> 00:26:54.096 A:middle
It still does, and of course
that works just as well

00:26:54.096 --> 00:26:56.676 A:middle
for Swift code as it does
for Objective-C code.

00:26:58.686 --> 00:27:01.716 A:middle
Let's talk about
performance testing.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:26:58.686 --> 00:27:01.716 A:middle
Let's talk about
performance testing.

00:27:02.396 --> 00:27:04.766 A:middle
This is another great new
thing we released this week,

00:27:04.956 --> 00:27:06.726 A:middle
and if you haven't heard
any of the talks yet,

00:27:06.726 --> 00:27:09.306 A:middle
I highly recommend you
go back and watch them.

00:27:09.306 --> 00:27:10.956 A:middle
There was a session this
morning about testing,

00:27:11.566 --> 00:27:13.906 A:middle
and performance testing
is pretty great,

00:27:14.046 --> 00:27:17.866 A:middle
and we've made it really simple.

00:27:18.956 --> 00:27:21.326 A:middle
The great thing about it, in
the context of Xcode Server,

00:27:21.536 --> 00:27:23.066 A:middle
is that when you write
a performance test,

00:27:23.586 --> 00:27:26.736 A:middle
you can have Xcode Server run
that test on multiple devices.

00:27:27.236 --> 00:27:28.266 A:middle
So this is really great.

00:27:28.346 --> 00:27:31.216 A:middle
So you may be surprised to find
that your code runs a lot slower

00:27:31.216 --> 00:27:33.806 A:middle
on one device or on
one operating system

00:27:33.806 --> 00:27:36.266 A:middle
than you expected it
to, and with Server,

00:27:36.266 --> 00:27:38.006 A:middle
it makes it really
easy to see this.

00:27:38.506 --> 00:27:40.386 A:middle
The key thing about
performance testing is

00:27:40.386 --> 00:27:41.616 A:middle
that they work great
out of the box.

00:27:41.616 --> 00:27:43.136 A:middle
You can just write your
code in a measure block.

00:27:43.576 --> 00:27:45.206 A:middle
You don't have to
set a baseline,

00:27:45.206 --> 00:27:47.726 A:middle
but if you set a baseline,
you get a lot more value

00:27:47.726 --> 00:27:49.986 A:middle
out of them, and the thing
with baselines is you have

00:27:49.986 --> 00:27:53.596 A:middle
to set them on a per
test, per device basis.

00:27:54.136 --> 00:27:55.886 A:middle
So that look something
like this.

00:27:56.186 --> 00:27:57.106 A:middle
We have this report.

00:27:57.106 --> 00:27:58.386 A:middle
You can see all the tests here.

00:27:58.716 --> 00:28:00.266 A:middle
You can see I have a
couple of different devices


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:27:58.716 --> 00:28:00.266 A:middle
You can see I have a
couple of different devices

00:28:00.266 --> 00:28:04.406 A:middle
that these tests are running on,
and in order to get more value

00:28:04.406 --> 00:28:06.646 A:middle
out of these, I need to set
a baseline for each test,

00:28:06.786 --> 00:28:08.856 A:middle
for each device, and this
is the UI that does that.

00:28:09.096 --> 00:28:10.526 A:middle
We'll see more of
that in a minute.

00:28:12.056 --> 00:28:13.726 A:middle
So in case this is new for you,

00:28:13.726 --> 00:28:15.206 A:middle
this is what a performance
test looks like.

00:28:15.446 --> 00:28:16.426 A:middle
It's really simple.

00:28:16.426 --> 00:28:18.596 A:middle
This is what it looks
like in Objective-C.

00:28:18.796 --> 00:28:20.316 A:middle
Any code in the measure
block here is going

00:28:20.316 --> 00:28:22.056 A:middle
to get executed 10 times.

00:28:22.056 --> 00:28:29.796 A:middle
It's that easy, and in Swift
we have also a measure block.

00:28:30.486 --> 00:28:34.516 A:middle
It's actually a closure, but
it's still called measure block.

00:28:34.516 --> 00:28:34.956 A:middle
That's the API.

00:28:34.956 --> 00:28:36.426 A:middle
It's the same thing.

00:28:36.696 --> 00:28:38.856 A:middle
So to show you all this in
action, I'm going to bring

00:28:38.856 --> 00:28:40.236 A:middle
up my officemate, Matt number 2,

00:28:40.236 --> 00:28:42.816 A:middle
who has the loudest
keyboard I have ever heard,

00:28:43.096 --> 00:28:43.706 A:middle
to show us a demo.

00:28:43.706 --> 00:28:43.966 A:middle
Come on, Matt.

00:28:44.516 --> 00:28:47.666 A:middle
[ Applause ]

00:28:48.166 --> 00:28:49.026 A:middle
&gt;&gt; Thank you, Brent.

00:28:49.676 --> 00:28:51.366 A:middle
So I'm really excited
to be here today

00:28:51.366 --> 00:28:54.506 A:middle
to share the new Xcode Server
and Xcode 6 with you guys,

00:28:55.286 --> 00:28:58.376 A:middle
with support for Swift, our
brand-new programming language,

00:28:58.576 --> 00:29:00.656 A:middle
and the awesome new
performance testing features.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:28:58.576 --> 00:29:00.656 A:middle
and the awesome new
performance testing features.

00:29:01.326 --> 00:29:01.606 A:middle
All right.

00:29:01.606 --> 00:29:03.106 A:middle
So we have the iOS
simulator open

00:29:03.106 --> 00:29:04.596 A:middle
with our CoffeeBoard
application.

00:29:04.756 --> 00:29:07.536 A:middle
I've got a list here with
me, Matt, Brent and some

00:29:07.536 --> 00:29:10.406 A:middle
of our friends and our balances.

00:29:10.656 --> 00:29:13.256 A:middle
So it looks like I've
got a negative balance.

00:29:13.316 --> 00:29:14.706 A:middle
I guess I owe some
people some coffee.

00:29:16.296 --> 00:29:19.286 A:middle
Here we see a list with exactly
what I owe to each person

00:29:19.286 --> 00:29:20.106 A:middle
or what they owe to me.

00:29:20.716 --> 00:29:24.186 A:middle
I think I remember Brent causing
the issue earlier in the week

00:29:24.656 --> 00:29:26.136 A:middle
that cost me some time.

00:29:26.136 --> 00:29:27.916 A:middle
So I forgot to add
that transaction.

00:29:28.026 --> 00:29:31.456 A:middle
I can do that right here, and
it will get added to the list.

00:29:32.136 --> 00:29:35.406 A:middle
Now, I'm worried that as we
keep adding transactions --

00:29:35.406 --> 00:29:37.786 A:middle
we have some back-and-forth
on our team --

00:29:38.106 --> 00:29:40.856 A:middle
I'm worried that as this
grows, that condensing these

00:29:40.856 --> 00:29:43.366 A:middle
down into a nice list
for the UI is going

00:29:43.366 --> 00:29:44.436 A:middle
to get more time-consuming.

00:29:44.716 --> 00:29:46.196 A:middle
So I want to test the
performance of that

00:29:46.196 --> 00:29:49.246 A:middle
and make sure it stays good as I
keep adding to the application.

00:29:50.046 --> 00:29:51.916 A:middle
And the performance
testing feature

00:29:51.916 --> 00:29:53.876 A:middle
in Xcode 6 makes it
really easy to do that.

00:29:53.936 --> 00:29:56.316 A:middle
So I'm going to quit
the simulator

00:29:56.676 --> 00:29:59.786 A:middle
and switch back to Xcode.

00:29:59.926 --> 00:30:03.036 A:middle
So here I've got an
XCTestCase subclass with a bunch


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:29:59.926 --> 00:30:03.036 A:middle
So here I've got an
XCTestCase subclass with a bunch

00:30:03.036 --> 00:30:05.756 A:middle
of tests making sure that the
function I have for condensing

00:30:05.756 --> 00:30:08.166 A:middle
down these transactions
works correctly,

00:30:08.796 --> 00:30:11.126 A:middle
but I think we all know there's
more to a great application

00:30:11.346 --> 00:30:12.406 A:middle
than just working correctly.

00:30:12.926 --> 00:30:14.436 A:middle
Customers expect
great performance.

00:30:14.436 --> 00:30:16.416 A:middle
They want your apps to be
fast and get out of their way,

00:30:17.106 --> 00:30:19.646 A:middle
and a performance testing
feature will help you make sure

00:30:19.646 --> 00:30:20.516 A:middle
that that's the case.

00:30:21.246 --> 00:30:23.156 A:middle
So I'm going to add a
new performance test

00:30:23.156 --> 00:30:28.046 A:middle
to our application, and then
I'm going to go ahead and commit

00:30:28.076 --> 00:30:30.916 A:middle
that to my repository so
that Xcode Server can start

00:30:30.916 --> 00:30:31.496 A:middle
integrating that.

00:30:38.696 --> 00:30:40.836 A:middle
We'll push that up, and
while it's doing that,

00:30:41.206 --> 00:30:44.696 A:middle
I'll take a closer look at what
this test is actually doing.

00:30:45.216 --> 00:30:46.906 A:middle
So it's just like
any other unit test.

00:30:46.906 --> 00:30:49.936 A:middle
It's just a method on
your XCTestCase subclass.

00:30:50.366 --> 00:30:51.456 A:middle
It starts with the word test.

00:30:51.566 --> 00:30:52.536 A:middle
Takes no arguments.

00:30:52.536 --> 00:30:53.366 A:middle
Returns no value.

00:30:54.226 --> 00:30:57.126 A:middle
The first thing we do is
create a list of transactions

00:30:57.126 --> 00:30:59.836 A:middle
that we're going to merge,
and then I don't want

00:30:59.836 --> 00:31:00.966 A:middle
to waste any time
measuring that,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:30:59.836 --> 00:31:00.966 A:middle
to waste any time
measuring that,

00:31:00.966 --> 00:31:02.836 A:middle
so I do it outside
the measure block,

00:31:03.326 --> 00:31:04.346 A:middle
and that's the next step here.

00:31:04.346 --> 00:31:05.846 A:middle
We call this measureBlock
function,

00:31:06.126 --> 00:31:07.186 A:middle
and pass it at a closure,

00:31:07.746 --> 00:31:10.336 A:middle
and whatever code's inside
there we'll run multiple times

00:31:10.636 --> 00:31:12.486 A:middle
and measure the time,
each iteration,

00:31:12.746 --> 00:31:16.456 A:middle
and average those together
and report that to you.

00:31:16.616 --> 00:31:18.596 A:middle
So I think our integration
has finished completing.

00:31:18.786 --> 00:31:22.066 A:middle
So I'm going to go take
a look at that now.

00:31:22.066 --> 00:31:24.976 A:middle
We have this lovely test
report that's new in Xcode 6.

00:31:24.976 --> 00:31:27.476 A:middle
It breaks down exactly
what happened in each test.

00:31:27.996 --> 00:31:30.326 A:middle
I can see our performance
test is here on the list,

00:31:30.656 --> 00:31:32.356 A:middle
and we've got this
new column for time

00:31:32.666 --> 00:31:34.016 A:middle
that reports the average time

00:31:34.086 --> 00:31:35.786 A:middle
that each iteration
of that test took.

00:31:35.786 --> 00:31:38.956 A:middle
It looks like this took
.15 seconds on average.

00:31:39.566 --> 00:31:40.416 A:middle
That seems pretty good.

00:31:41.496 --> 00:31:44.986 A:middle
If I click that time, then I
can see a breakdown by device.

00:31:45.236 --> 00:31:47.306 A:middle
I've only got the one
device plugged in right now,

00:31:47.306 --> 00:31:48.196 A:middle
but I could have several,

00:31:48.196 --> 00:31:50.146 A:middle
and they would each have
their own time measurements.

00:31:51.836 --> 00:31:53.296 A:middle
Now, Xcode's telling
me something here.

00:31:53.296 --> 00:31:55.426 A:middle
It's telling me that
we have no baseline

00:31:55.606 --> 00:31:57.036 A:middle
for the time performance metric,

00:31:57.806 --> 00:32:00.536 A:middle
and that's because when you
first add a performance test,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:31:57.806 --> 00:32:00.536 A:middle
and that's because when you
first add a performance test,

00:32:01.136 --> 00:32:02.946 A:middle
Xcode's not going to
make any assumptions

00:32:03.036 --> 00:32:04.716 A:middle
about what's good
performance and what's not,

00:32:05.466 --> 00:32:08.376 A:middle
because every test is unique,
and every device is unique,

00:32:08.706 --> 00:32:10.786 A:middle
and we don't want to
make any presumptions.

00:32:11.066 --> 00:32:12.936 A:middle
So we'll report the time
for you, but we won't try

00:32:12.936 --> 00:32:14.796 A:middle
to failure test based
on how it performs.

00:32:14.796 --> 00:32:17.636 A:middle
If you have any assertions in
your test, we'll fail based

00:32:17.636 --> 00:32:19.846 A:middle
on that, but that's it.

00:32:20.096 --> 00:32:23.886 A:middle
But when I keep working on this
application, I want to know

00:32:23.926 --> 00:32:25.516 A:middle
if this performance gets worse.

00:32:25.516 --> 00:32:28.276 A:middle
I want Xcode Server to
notify me when that happens,

00:32:28.276 --> 00:32:32.026 A:middle
by failing my test, and so to
do that I can set a baseline

00:32:32.026 --> 00:32:35.306 A:middle
for this test, and to
do that I click the time

00:32:35.716 --> 00:32:37.086 A:middle
for this particular device,

00:32:37.636 --> 00:32:39.316 A:middle
and I can hit the
Set Baseline button.

00:32:40.836 --> 00:32:43.386 A:middle
What happens when I
click that button is

00:32:43.386 --> 00:32:48.066 A:middle
that Xcode updates its project
file with entries to say

00:32:48.066 --> 00:32:51.486 A:middle
for this particular test and for
this particular kind of device,

00:32:51.836 --> 00:32:54.166 A:middle
like iPhone 5S, iPhone 4S, iPad,

00:32:55.256 --> 00:32:57.636 A:middle
that this is the
performance standard,

00:32:58.076 --> 00:33:00.806 A:middle
that if we significantly
regress and get slower,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:32:58.076 --> 00:33:00.806 A:middle
that if we significantly
regress and get slower,

00:33:00.806 --> 00:33:03.826 A:middle
then this number, that
should fail our test.

00:33:05.286 --> 00:33:07.076 A:middle
The interesting thing
about this getting added

00:33:07.076 --> 00:33:08.826 A:middle
to the project files is

00:33:08.826 --> 00:33:11.056 A:middle
that they get committed
with source control.

00:33:11.056 --> 00:33:14.246 A:middle
So I'm going to go ahead and do
that now because I want our bot

00:33:14.246 --> 00:33:15.116 A:middle
to be able to use them.

00:33:16.316 --> 00:33:18.166 A:middle
You can see these are
just property lists.

00:33:18.166 --> 00:33:19.566 A:middle
You could edit them
by hand if you want,

00:33:19.566 --> 00:33:21.336 A:middle
but we've got a an
[inaudible] on that test report

00:33:21.336 --> 00:33:22.576 A:middle
for managing those baselines.

00:33:27.006 --> 00:33:28.366 A:middle
So I'm going to push that up

00:33:28.726 --> 00:33:31.166 A:middle
and let Xcode Server
start integrating that,

00:33:31.796 --> 00:33:33.326 A:middle
and while it's doing that,

00:33:33.326 --> 00:33:34.736 A:middle
we can look at the
test report here.

00:33:35.266 --> 00:33:37.436 A:middle
We have a lot of
filtering options here.

00:33:37.836 --> 00:33:40.106 A:middle
Like, we can show
only failed tests,

00:33:40.106 --> 00:33:43.776 A:middle
which I don't have any of,
which is great, and if we want,

00:33:43.776 --> 00:33:45.706 A:middle
we can just focus on
the performance test,

00:33:45.706 --> 00:33:46.996 A:middle
like the one I just added.

00:33:48.026 --> 00:33:51.316 A:middle
If there's a particular test
I'm interested in looking at,

00:33:51.316 --> 00:33:52.846 A:middle
I can search by name and filter

00:33:52.846 --> 00:33:56.276 A:middle
to just tests that
match that name.

00:33:56.686 --> 00:34:01.076 A:middle
Or if I'm interested in what
the code is for a specific test,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:33:56.686 --> 00:34:01.076 A:middle
Or if I'm interested in what
the code is for a specific test,

00:34:01.076 --> 00:34:04.156 A:middle
I can click this little
button here and jump right

00:34:04.156 --> 00:34:05.926 A:middle
to the code for that test.

00:34:09.545 --> 00:34:12.585 A:middle
Now let's see what's
happening with their bot.

00:34:14.126 --> 00:34:17.956 A:middle
We can see exactly which test
it's running and there it goes,

00:34:19.025 --> 00:34:21.356 A:middle
and now let's see what
happens when a test runs

00:34:21.406 --> 00:34:23.226 A:middle
when we have a baseline set.

00:34:24.295 --> 00:34:28.406 A:middle
So now I can see that this time
our test ran a little bit worse,

00:34:28.996 --> 00:34:31.696 A:middle
a little bit longer than
the baseline that I set,

00:34:32.216 --> 00:34:33.775 A:middle
but our test still
passes because it's

00:34:33.775 --> 00:34:35.216 A:middle
within a acceptable range.

00:34:35.216 --> 00:34:37.126 A:middle
We understand that there's
going to be fluctuations

00:34:37.456 --> 00:34:39.716 A:middle
between each test
run, and we don't want

00:34:39.716 --> 00:34:41.585 A:middle
to fail overzealously.

00:34:44.456 --> 00:34:45.476 A:middle
So let's see what happens

00:34:45.676 --> 00:34:47.866 A:middle
when I actually do introduce
a significant regression.

00:34:48.485 --> 00:34:50.946 A:middle
So I'm going to switch
back to the code

00:34:51.565 --> 00:34:53.696 A:middle
that handles merging
these transactions.

00:34:55.456 --> 00:34:57.496 A:middle
Now, what I have here
is clearly working.

00:34:57.496 --> 00:34:58.596 A:middle
My tests are all passing.

00:34:58.806 --> 00:35:03.586 A:middle
The performance tests are
succeeding, but I'm worried


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:34:58.806 --> 00:35:03.586 A:middle
The performance tests are
succeeding, but I'm worried

00:35:03.586 --> 00:35:05.636 A:middle
that later on when I come
back to look at this,

00:35:05.636 --> 00:35:07.986 A:middle
I'm not really going to
understand what this was doing.

00:35:07.986 --> 00:35:10.716 A:middle
I think I have an idea for how
I could rewrite this function

00:35:10.716 --> 00:35:13.086 A:middle
in a way that makes
more sense to me

00:35:13.086 --> 00:35:14.376 A:middle
that I'd understand
better later.

00:35:14.376 --> 00:35:17.526 A:middle
Now, I'm just going to
be a little reckless here

00:35:17.526 --> 00:35:18.596 A:middle
and just commit it right away

00:35:18.866 --> 00:35:20.716 A:middle
because I know Xcode
Server has my back,

00:35:20.926 --> 00:35:22.456 A:middle
and if I break the application

00:35:22.716 --> 00:35:24.586 A:middle
or if make it perform
significantly worse,

00:35:24.866 --> 00:35:27.396 A:middle
Xcode Server is going to
tell me and my entire team.

00:35:35.536 --> 00:35:37.926 A:middle
Now I'll push that up and
let that start integrating.

00:35:38.156 --> 00:35:40.396 A:middle
Now, I'm really excited

00:35:40.396 --> 00:35:41.906 A:middle
about this performance
testing feature,

00:35:42.646 --> 00:35:45.616 A:middle
but they can make your
test workflow slower.

00:35:45.916 --> 00:35:48.396 A:middle
So Xcode Server gives
you a great way

00:35:48.396 --> 00:35:52.586 A:middle
to keep your speedy workflow
but still take advantage

00:35:52.586 --> 00:35:53.586 A:middle
of these performance tests.

00:35:54.376 --> 00:35:57.696 A:middle
Now, they'll run slower because
we're running several iterations

00:35:57.696 --> 00:36:00.576 A:middle
of what is ideally
significant work.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:35:57.696 --> 00:36:00.576 A:middle
of what is ideally
significant work.

00:36:01.286 --> 00:36:02.516 A:middle
Otherwise, it wouldn't
need testing.

00:36:02.856 --> 00:36:05.966 A:middle
So you can set up one scheme
that Xcode Server runs

00:36:06.526 --> 00:36:08.896 A:middle
that runs all of your tests
including your performance tests

00:36:09.146 --> 00:36:10.516 A:middle
and another one to run locally

00:36:10.796 --> 00:36:12.026 A:middle
that just runs your
quicker ones.

00:36:12.326 --> 00:36:13.996 A:middle
So you get the best
of both worlds.

00:36:15.586 --> 00:36:18.516 A:middle
I think I saw Jeeves tell me
that my integration was done.

00:36:19.366 --> 00:36:22.176 A:middle
Oh no, it looks like I
have some failing tests.

00:36:22.476 --> 00:36:25.506 A:middle
I guess that new merge function
wasn't as good as the old one.

00:36:25.646 --> 00:36:28.966 A:middle
Looks like it is
performing 137% worse.

00:36:29.806 --> 00:36:30.636 A:middle
That's pretty bad.

00:36:30.636 --> 00:36:33.546 A:middle
I don't want to ship that
when we ship our application,

00:36:34.476 --> 00:36:36.446 A:middle
but I'm a little busy
to fix it right now.

00:36:36.586 --> 00:36:39.016 A:middle
I'm busy giving a
WWDC presentation.

00:36:39.566 --> 00:36:43.146 A:middle
So I'm going to trust that our
notifications let my team know

00:36:43.146 --> 00:36:46.856 A:middle
and that someone else will
take care of fixing that.

00:36:47.586 --> 00:36:48.066 A:middle
All right.

00:36:48.236 --> 00:36:51.146 A:middle
I'm going to go ahead and hide
Xcode, and I have one more thing

00:36:51.446 --> 00:36:52.596 A:middle
that I want to show you guys.

00:36:53.116 --> 00:36:55.776 A:middle
So last year when we
introduced Xcode Server,

00:36:56.136 --> 00:36:59.186 A:middle
we gave a great way to give
high visibility to what all

00:36:59.186 --> 00:37:01.626 A:middle
of your bots were doing
inside your office,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:36:59.186 --> 00:37:01.626 A:middle
of your bots were doing
inside your office,

00:37:02.026 --> 00:37:04.096 A:middle
and we called it Big
Screen, and we have a new,

00:37:04.286 --> 00:37:06.016 A:middle
beautifully updated
version of Big Screen

00:37:06.066 --> 00:37:07.966 A:middle
that I'd like to show you now.

00:37:13.486 --> 00:37:14.966 A:middle
So this is the new Big Screen.

00:37:16.276 --> 00:37:18.776 A:middle
Along the left side you can
see we have a list of bots.

00:37:19.546 --> 00:37:21.456 A:middle
These are all the bots
configured on our server.

00:37:22.466 --> 00:37:26.766 A:middle
We got a little punny on
our team, and we can see

00:37:26.766 --> 00:37:30.286 A:middle
that below each bot name, we
have icons indicating what kinds

00:37:30.286 --> 00:37:32.636 A:middle
of issues we might
have on those bots.

00:37:33.276 --> 00:37:35.996 A:middle
So CoffeeBoard clearly
has test failures

00:37:35.996 --> 00:37:37.146 A:middle
and a performance regression.

00:37:37.836 --> 00:37:41.726 A:middle
Oh, but it looks like someone
started a new integration

00:37:41.726 --> 00:37:41.956 A:middle
on there.

00:37:41.956 --> 00:37:44.196 A:middle
I hope somebody came along
and fixed my mistake.

00:37:45.956 --> 00:37:50.436 A:middle
Now, when we focus on each bot,
we show the counts of errors,

00:37:50.576 --> 00:37:54.196 A:middle
warnings, analysis issues,
tests or test failures

00:37:54.196 --> 00:37:56.806 A:middle
if some are failing, and
we even show the change

00:37:56.806 --> 00:37:59.016 A:middle
in those numbers form
the previous integration.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:38:00.926 --> 00:38:02.936 A:middle
Along the bottom you can
see the list of committers,

00:38:03.666 --> 00:38:05.296 A:middle
and you can see even --

00:38:05.296 --> 00:38:07.226 A:middle
if we have issues that
we've attributed to them,

00:38:07.566 --> 00:38:09.406 A:middle
how many they might have.

00:38:11.226 --> 00:38:13.006 A:middle
Looks like CoffeeBoard
finished integrating.

00:38:13.216 --> 00:38:15.016 A:middle
Our tests are now
passing, which is great.

00:38:15.016 --> 00:38:17.046 A:middle
It looks like somebody came
along and fixed my mistake.

00:38:17.046 --> 00:38:18.326 A:middle
It looks like it
was the other Matt.

00:38:19.326 --> 00:38:20.726 A:middle
So applause for him.

00:38:21.516 --> 00:38:26.156 A:middle
[ Applause ]

00:38:26.656 --> 00:38:29.166 A:middle
That's the new Big Screen, and
that's all I've got to show you.

00:38:29.546 --> 00:38:30.466 A:middle
I'll hand it back to Brent.

00:38:30.936 --> 00:38:31.486 A:middle
Thank you everyone.

00:38:32.116 --> 00:38:34.116 A:middle
[ Applause ]

00:38:34.216 --> 00:38:34.826 A:middle
&gt;&gt; Thanks, Matt.

00:38:35.306 --> 00:38:37.356 A:middle
Those are great demos
by two great guys,

00:38:37.416 --> 00:38:38.476 A:middle
both with the same name.

00:38:39.706 --> 00:38:45.966 A:middle
So in summary, we've got
a great new foundation

00:38:45.966 --> 00:38:47.326 A:middle
in this version of Xcode Server.

00:38:47.326 --> 00:38:49.966 A:middle
Got tons of bug fixes
and other improvements.

00:38:49.996 --> 00:38:51.876 A:middle
Please keep sending
us your feedback.

00:38:51.876 --> 00:38:55.366 A:middle
We are listening, and we've
got great, great new features,

00:38:55.366 --> 00:39:00.776 A:middle
like in-flight progress
notification.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:38:55.366 --> 00:39:00.776 A:middle
like in-flight progress
notification.

00:39:00.776 --> 00:39:02.436 A:middle
So you can see exactly
what your bot is doing

00:39:02.436 --> 00:39:03.226 A:middle
when it's integrating.

00:39:03.696 --> 00:39:04.686 A:middle
We have issue tracking.

00:39:04.866 --> 00:39:07.116 A:middle
So Xcode Server can tell you
when an issue was introduced,

00:39:07.486 --> 00:39:10.286 A:middle
if it still exists, who
introduced the issue and,

00:39:10.286 --> 00:39:11.516 A:middle
finally, when it was resolved.

00:39:11.516 --> 00:39:12.586 A:middle
This gives you a great sense

00:39:12.586 --> 00:39:14.146 A:middle
of the overall health
of your project.

00:39:16.506 --> 00:39:20.786 A:middle
We have a great new test
result UI including support

00:39:20.856 --> 00:39:21.946 A:middle
for performance testing.

00:39:21.946 --> 00:39:25.526 A:middle
We have a really easy way
to set baselines for tests

00:39:25.526 --> 00:39:26.766 A:middle
for individual devices,

00:39:27.976 --> 00:39:31.336 A:middle
and of course we have
awesome support for triggers.

00:39:31.886 --> 00:39:34.166 A:middle
So we've got a lab
right after this.

00:39:34.896 --> 00:39:36.096 A:middle
Here's more information,
if you need it.

00:39:36.136 --> 00:39:38.376 A:middle
Come to the lab, and maybe
you can try to out trigger us

00:39:38.376 --> 00:39:39.836 A:middle
and write something
even more awesome

00:39:39.836 --> 00:39:43.356 A:middle
than our friend Jeeves,
and so that's it.

00:39:43.486 --> 00:39:43.996 A:middle
Thank you.

00:39:43.996 --> 00:39:44.486 A:middle
Have a great week.

00:39:44.743 --> 00:39:46.743 A:middle
[ Applause ]

