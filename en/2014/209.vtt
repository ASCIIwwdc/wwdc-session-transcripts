WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:12.176 --> 00:00:12.916 A:middle
&gt;&gt; Good afternoon.

00:00:13.346 --> 00:00:13.526 A:middle
Welcome.

00:00:15.516 --> 00:00:18.246 A:middle
[ Applause ]

00:00:18.746 --> 00:00:19.796 A:middle
So I'm Patrick Heynen.

00:00:19.796 --> 00:00:21.886 A:middle
I'm a manager in the
Cocoa Frameworks group,

00:00:21.886 --> 00:00:25.406 A:middle
and welcome to Adapting to
the New UI of OS X Yosemite.

00:00:25.866 --> 00:00:26.676 A:middle
Let's get started.

00:00:27.526 --> 00:00:30.576 A:middle
So Yosemite, yeah.

00:00:30.576 --> 00:00:32.766 A:middle
So it brings a pretty
fresh look to the Mac.

00:00:32.826 --> 00:00:35.116 A:middle
The astute observers among you
might have noticed there's been

00:00:35.116 --> 00:00:36.726 A:middle
some changes in the
visual department.

00:00:37.436 --> 00:00:41.336 A:middle
Well, we're here to help you
understand what has changed

00:00:41.336 --> 00:00:44.366 A:middle
and why, sort of break it all
down for you, walk through it

00:00:44.716 --> 00:00:46.206 A:middle
and to get a better
understanding of it,

00:00:46.206 --> 00:00:49.436 A:middle
and then most importantly,
how to get the most

00:00:49.496 --> 00:00:52.386 A:middle
out of this new UI in
your Cocoa applications.

00:00:53.226 --> 00:00:55.536 A:middle
So, how are we going to do this?

00:00:55.686 --> 00:00:57.486 A:middle
Well, first we're going to talk

00:00:57.486 --> 00:00:59.906 A:middle
about some fundamental
design principles that went

00:00:59.906 --> 00:01:02.716 A:middle
into the choices that
resulted in the current design


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:59.906 --> 00:01:02.716 A:middle
into the choices that
resulted in the current design

00:01:02.716 --> 00:01:04.075 A:middle
that you see in OS X Yosemite.

00:01:05.836 --> 00:01:06.836 A:middle
Then we're going to take --

00:01:06.836 --> 00:01:10.486 A:middle
get into the tour bus and
just take a tour of Yosemite

00:01:10.486 --> 00:01:11.946 A:middle
and all the key pieces of --

00:01:12.066 --> 00:01:13.966 A:middle
that have changed
that are relevant

00:01:13.966 --> 00:01:16.256 A:middle
for Cocoa app developers, from
a developer's point of view.

00:01:17.556 --> 00:01:19.856 A:middle
Then we're going to talk
about vibrancy, which is one

00:01:19.856 --> 00:01:22.456 A:middle
of these important elements,
and just deconstruct that

00:01:22.456 --> 00:01:26.026 A:middle
and get a conceptual basis for
understanding what role it plays

00:01:26.026 --> 00:01:27.696 A:middle
and how it works and
what it does for you.

00:01:29.006 --> 00:01:31.606 A:middle
Then talk about some
elements that you might bring

00:01:31.606 --> 00:01:34.016 A:middle
to your applications
fonts, colors or artwork

00:01:34.016 --> 00:01:36.466 A:middle
and how they should -- -- what
their role is and how some

00:01:36.466 --> 00:01:37.866 A:middle
of the things that we've
done to make working

00:01:37.866 --> 00:01:40.656 A:middle
with them easier in Yosemite.

00:01:41.376 --> 00:01:42.746 A:middle
And last, but definitely
not least,

00:01:42.746 --> 00:01:44.706 A:middle
we'll talk about app
compatibility and how

00:01:44.706 --> 00:01:46.206 A:middle
to mitigate the risk

00:01:46.206 --> 00:01:49.076 A:middle
of introducing this big design
change and having your app work

00:01:49.496 --> 00:01:51.726 A:middle
across different scenarios.

00:01:52.316 --> 00:01:54.936 A:middle
Okay, so with that, I'm going
to hand it over to my colleague,

00:01:54.936 --> 00:01:55.586 A:middle
and we're going to get right

00:01:55.586 --> 00:01:58.816 A:middle
into the design portion
of this talk.

00:01:59.726 --> 00:02:00.206 A:middle
Mike?


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:01:59.726 --> 00:02:00.206 A:middle
Mike?

00:02:00.636 --> 00:02:01.356 A:middle
&gt;&gt; Thank you, Patrick.

00:02:02.146 --> 00:02:02.726 A:middle
Hi, everyone.

00:02:03.226 --> 00:02:05.686 A:middle
[Applause]

00:02:06.186 --> 00:02:07.096 A:middle
So I'm Mike Stern.

00:02:07.096 --> 00:02:09.506 A:middle
I'm a User Experience
Evangelist with Apple,

00:02:10.205 --> 00:02:13.096 A:middle
and I am not an engineer.

00:02:13.566 --> 00:02:14.326 A:middle
I'm a designer.

00:02:14.496 --> 00:02:16.946 A:middle
So what am I doing here at
this engineering session?

00:02:17.466 --> 00:02:19.436 A:middle
Well, we're talking about
the new design of OS X,

00:02:19.436 --> 00:02:22.036 A:middle
and I thought I would just come
here for a few minutes and talk

00:02:22.036 --> 00:02:24.816 A:middle
about some of the high-level
principles or design themes

00:02:24.816 --> 00:02:29.146 A:middle
that guided and inspired
the design of OS X Yosemite.

00:02:30.246 --> 00:02:32.806 A:middle
Now, yesterday, we
announced OS X Yosemite,

00:02:34.036 --> 00:02:39.336 A:middle
and OS X Yosemite is the
tenth release to OS X.

00:02:40.356 --> 00:02:45.136 A:middle
And in that time span, there's
been a few really major UI

00:02:45.136 --> 00:02:46.336 A:middle
releases for OS X.

00:02:46.336 --> 00:02:50.016 A:middle
And as with every one
of those releases,

00:02:50.016 --> 00:02:53.446 A:middle
elements like the
menu bar, windows,

00:02:54.316 --> 00:03:00.006 A:middle
the dock have been
refined to be friendlier,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:02:54.316 --> 00:03:00.006 A:middle
the dock have been
refined to be friendlier,

00:03:00.156 --> 00:03:02.306 A:middle
easier to use, more
approachable.

00:03:02.736 --> 00:03:07.166 A:middle
But they've also been redesigned
to have greater utility

00:03:07.166 --> 00:03:09.366 A:middle
and power and support
more sophisticated

00:03:09.366 --> 00:03:11.166 A:middle
and advanced work flows.

00:03:11.496 --> 00:03:14.326 A:middle
Now, Yosemite is
just another step

00:03:14.326 --> 00:03:18.616 A:middle
in a continuous process
of evolving OS X.

00:03:19.236 --> 00:03:21.756 A:middle
So let's dive in and talk
about some of the principles

00:03:21.756 --> 00:03:24.576 A:middle
that were really core to
this particular redesign.

00:03:25.156 --> 00:03:27.026 A:middle
The first one is simplicity.

00:03:27.756 --> 00:03:30.026 A:middle
Now, let's take a look
at these app icons.

00:03:32.356 --> 00:03:35.986 A:middle
In particular, let's look
at the calendar icon.

00:03:36.726 --> 00:03:39.246 A:middle
Now, as before, calendar
was redesigned,

00:03:39.896 --> 00:03:42.806 A:middle
but it still very much
looks like a realistic,

00:03:42.806 --> 00:03:45.636 A:middle
three-dimensional object,
with realistic highlights,

00:03:45.636 --> 00:03:49.246 A:middle
realistic shadows, and even
the texture of the paper.

00:03:50.176 --> 00:03:53.006 A:middle
But some of the elements of
the previous icon were removed,

00:03:53.146 --> 00:03:56.136 A:middle
like the mini-calendar
view or the metal rings.

00:03:56.926 --> 00:03:59.656 A:middle
Those elements weren't
really necessary


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:04:00.126 --> 00:04:03.486 A:middle
to depict a daily desk calendar,
and by removing those elements,

00:04:03.486 --> 00:04:05.716 A:middle
the new icon is more simple.

00:04:05.716 --> 00:04:06.616 A:middle
It's less cluttered.

00:04:06.826 --> 00:04:08.096 A:middle
It's more straightforward.

00:04:08.556 --> 00:04:12.396 A:middle
And simplicity also influenced
the decision to go away

00:04:12.396 --> 00:04:14.836 A:middle
from using Lucida
Grande as the system font

00:04:14.926 --> 00:04:17.116 A:middle
and towards using
Helvetica Neue.

00:04:18.435 --> 00:04:21.495 A:middle
Helvetica Neue is
a simpler typeface.

00:04:21.666 --> 00:04:26.316 A:middle
Lucida Grande is designed to
evoke handwritten letter forms.

00:04:26.876 --> 00:04:30.366 A:middle
Helvetica Neue, on the other
hand, is designed to clearly

00:04:30.366 --> 00:04:34.226 A:middle
and simply depict the
letter forms and numbers,

00:04:34.476 --> 00:04:35.926 A:middle
without any ornamentation.

00:04:36.356 --> 00:04:38.696 A:middle
So it's a more appropriate
typeface to use

00:04:38.696 --> 00:04:40.136 A:middle
for the new design language.

00:04:40.236 --> 00:04:41.496 A:middle
So what does that mean?

00:04:42.066 --> 00:04:43.886 A:middle
Well, here's a comparison.

00:04:44.166 --> 00:04:47.226 A:middle
You can see that the S is a
little bit more geometric.

00:04:47.226 --> 00:04:48.296 A:middle
It's a little simpler.

00:04:49.016 --> 00:04:51.546 A:middle
There's less variation
between the thickness

00:04:51.546 --> 00:04:53.126 A:middle
of the stroke weight,
between the thin

00:04:53.126 --> 00:04:55.196 A:middle
and the thick parts
of the letter.

00:04:56.476 --> 00:05:01.416 A:middle
The shoulder here, for the
n has a smoother form to it.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:04:56.476 --> 00:05:01.416 A:middle
The shoulder here, for the
n has a smoother form to it.

00:05:01.466 --> 00:05:03.076 A:middle
It's less of an abrupt
transition.

00:05:03.776 --> 00:05:07.826 A:middle
And fonts have a more
consistent width to them.

00:05:07.946 --> 00:05:10.786 A:middle
Now, the next theme
is about consistency.

00:05:12.066 --> 00:05:13.886 A:middle
Again, let's go back
to the app icons.

00:05:14.846 --> 00:05:18.776 A:middle
Now, from the beginning of OS X,
app icons were rendered to look

00:05:18.776 --> 00:05:22.116 A:middle
like they were three-dimensional
objects that was sitting

00:05:22.116 --> 00:05:23.526 A:middle
on a table in front of you.

00:05:24.086 --> 00:05:25.436 A:middle
And they were rotated a bit,

00:05:25.636 --> 00:05:28.826 A:middle
so they could be easily
distinguished from documents

00:05:28.826 --> 00:05:31.356 A:middle
or folders, plug-ins
and utilities.

00:05:32.076 --> 00:05:33.706 A:middle
But over time, there
was a little bit

00:05:33.706 --> 00:05:35.986 A:middle
of a divergence going
on, with every app sort

00:05:35.986 --> 00:05:37.066 A:middle
of doing its own thing.

00:05:37.616 --> 00:05:39.256 A:middle
And that lead to some variation,

00:05:39.256 --> 00:05:42.256 A:middle
like icons that have a
really strong perspective

00:05:42.256 --> 00:05:43.416 A:middle
and keystoning effects.

00:05:44.376 --> 00:05:46.736 A:middle
Or instead of looking like they
were lying flat on the table,

00:05:46.736 --> 00:05:51.266 A:middle
they looked to be
sitting upright.

00:05:51.356 --> 00:05:57.226 A:middle
OS X brings a harmonization
of the style of all the icons.

00:05:57.786 --> 00:05:59.836 A:middle
So here, the realistic-looking
icons --

00:05:59.836 --> 00:06:01.756 A:middle
you can see, they all
have the same perspective,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:05:59.836 --> 00:06:01.756 A:middle
you can see, they all
have the same perspective,

00:06:02.126 --> 00:06:04.526 A:middle
same light source,
same rendering.

00:06:05.196 --> 00:06:06.826 A:middle
And the graphical icons,

00:06:06.826 --> 00:06:09.656 A:middle
these round icons are
also internally consistent

00:06:09.656 --> 00:06:10.316 A:middle
with each other.

00:06:11.606 --> 00:06:12.746 A:middle
The symbols at the center

00:06:12.746 --> 00:06:14.626 A:middle
of them have the
same embossed effect.

00:06:15.286 --> 00:06:17.156 A:middle
The shape -- the convex shape

00:06:17.226 --> 00:06:19.906 A:middle
of the form is consistent
across all of them.

00:06:20.226 --> 00:06:22.296 A:middle
And let's go back to type.

00:06:22.976 --> 00:06:25.026 A:middle
Again, Helvetica Neue
is a new system font.

00:06:25.616 --> 00:06:27.076 A:middle
And one of the things
that this solved

00:06:27.076 --> 00:06:29.576 A:middle
for us was an inconsistency
that existed before.

00:06:30.286 --> 00:06:33.246 A:middle
Over time, some apps
like Notes had started

00:06:33.246 --> 00:06:35.546 A:middle
to use Helvetica Neue
as a content font.

00:06:36.116 --> 00:06:41.136 A:middle
And apps like iTunes,
iPhoto, iMovies, Final Cut Pro

00:06:41.136 --> 00:06:43.356 A:middle
and Logic were using
Helvetica Neue

00:06:43.356 --> 00:06:46.056 A:middle
as a content font,
as well as a UI font.

00:06:47.086 --> 00:06:49.676 A:middle
And this lead to a sort
of unfortunate mismatch

00:06:49.676 --> 00:06:53.186 A:middle
between the system and
those individual apps.

00:06:55.956 --> 00:06:57.616 A:middle
So by changing to
Helvetica Neue,

00:06:57.616 --> 00:06:59.086 A:middle
now we have this consistency

00:06:59.086 --> 00:07:01.576 A:middle
across the entire
Mac experience.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:06:59.086 --> 00:07:01.576 A:middle
across the entire
Mac experience.

00:07:02.086 --> 00:07:05.296 A:middle
And another side benefit to
that is there's more consistency

00:07:05.296 --> 00:07:06.976 A:middle
between Mac and iOS.

00:07:07.746 --> 00:07:11.126 A:middle
And the third major
principle or theme

00:07:11.126 --> 00:07:13.036 A:middle
of this redesign is about depth.

00:07:13.906 --> 00:07:16.516 A:middle
We believe that software
interfaces should feel

00:07:16.686 --> 00:07:19.556 A:middle
physically -- to have physical
dimensionality and that

00:07:19.556 --> 00:07:21.126 A:middle
that should be really plausible.

00:07:22.566 --> 00:07:25.346 A:middle
That dimensionality helps you
to focus on the things that are

00:07:25.346 --> 00:07:28.436 A:middle
in the foreground and pay
less attention to those things

00:07:28.436 --> 00:07:29.436 A:middle
which are in the background.

00:07:30.306 --> 00:07:33.896 A:middle
Now, in iOS, depth in conveyed
through using translucency,

00:07:34.616 --> 00:07:37.716 A:middle
for example, the Notification
Center or the control center.

00:07:38.356 --> 00:07:40.016 A:middle
And the elements that are

00:07:40.016 --> 00:07:43.376 A:middle
within those UIs also
have translucency --

00:07:43.376 --> 00:07:45.236 A:middle
meaning some of that
background color is allowed

00:07:45.236 --> 00:07:46.616 A:middle
to come through.

00:07:47.706 --> 00:07:51.076 A:middle
Now, OS X picks up on this
and uses the same kind

00:07:51.076 --> 00:07:54.066 A:middle
of translucent effect for
the Notification Center

00:07:54.846 --> 00:07:55.996 A:middle
and other parts of the UI.

00:07:56.986 --> 00:08:00.246 A:middle
Now, in iOS, of course,
we use motion effects


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:07:56.986 --> 00:08:00.246 A:middle
Now, in iOS, of course,
we use motion effects

00:08:00.246 --> 00:08:01.456 A:middle
to show depth, as well.

00:08:01.456 --> 00:08:03.656 A:middle
So when you move the
device around in your hand,

00:08:03.656 --> 00:08:05.246 A:middle
things have a sense of parallax.

00:08:05.856 --> 00:08:08.756 A:middle
And that's great, for
something that weighs as light

00:08:08.756 --> 00:08:11.256 A:middle
as an iPhone or an
iPad, but we're not

00:08:11.256 --> 00:08:13.246 A:middle
about to encourage people
to pick up their iMac

00:08:13.246 --> 00:08:15.356 A:middle
and start moving it around,
to get the same effect.

00:08:16.256 --> 00:08:19.736 A:middle
So it's still really important
to use things like gradients

00:08:21.166 --> 00:08:24.456 A:middle
or drop shadows to
convey that sense of space

00:08:24.456 --> 00:08:27.336 A:middle
and to correctly order
things in the Z axis.

00:08:31.336 --> 00:08:35.066 A:middle
And the last major principle
for this redesign is around --

00:08:35.066 --> 00:08:37.606 A:middle
designing around content,
to be content-focused.

00:08:38.306 --> 00:08:39.916 A:middle
Content is what's
most important,

00:08:39.916 --> 00:08:41.296 A:middle
not the user interface.

00:08:42.106 --> 00:08:46.476 A:middle
So for example, one way
to be content-focused is

00:08:46.476 --> 00:08:48.656 A:middle
to just allow there to be
more space for content.

00:08:48.656 --> 00:08:50.556 A:middle
So now there's this
unified toolbar

00:08:51.106 --> 00:08:57.296 A:middle
that does what a title bar
and a toolbar had done before.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:09:00.436 --> 00:09:03.566 A:middle
By unifying those elements,
there's now more physical space

00:09:03.786 --> 00:09:05.606 A:middle
for the thing that
you really care about,

00:09:06.076 --> 00:09:07.806 A:middle
which is the webpage itself.

00:09:09.696 --> 00:09:12.766 A:middle
And deferring to content
or allowing content

00:09:12.766 --> 00:09:14.326 A:middle
to be the focus is also

00:09:14.606 --> 00:09:17.846 A:middle
about having a user interface
that's less heavy, less strong.

00:09:17.846 --> 00:09:20.466 A:middle
So we've stripped away a lot of
the textures and the highlights

00:09:20.466 --> 00:09:23.186 A:middle
and the shadows, to have
a simpler appearance.

00:09:23.606 --> 00:09:26.666 A:middle
That, in combination with the
translucent window chrome --

00:09:26.666 --> 00:09:28.056 A:middle
the toolbar, in this case --

00:09:28.346 --> 00:09:30.366 A:middle
allows the content to
really come through

00:09:30.366 --> 00:09:32.946 A:middle
and affect the appearance
of the entire screen.

00:09:33.976 --> 00:09:38.216 A:middle
Again, it allows your content
to be the center of your focus.

00:09:39.106 --> 00:09:43.206 A:middle
So that's all I really
have for you today.

00:09:43.206 --> 00:09:44.816 A:middle
And now I'd like to hand it off

00:09:44.816 --> 00:09:47.326 A:middle
to our tour bus driver,
Rachel Goldeen.

00:09:47.466 --> 00:09:47.976 A:middle
Thank you very much.

00:09:48.041 --> 00:09:50.041 A:middle
[Applause]

00:09:50.066 --> 00:09:50.546 A:middle
&gt;&gt; Thanks.

00:09:52.616 --> 00:09:53.966 A:middle
Thanks, Mike.

00:09:54.066 --> 00:09:55.096 A:middle
Good afternoon.

00:09:55.096 --> 00:09:55.996 A:middle
Thanks for being here.

00:09:56.616 --> 00:09:57.846 A:middle
As they mentioned, I'm going

00:09:57.846 --> 00:09:59.636 A:middle
to give you a little
developer's tour

00:09:59.636 --> 00:10:02.876 A:middle
of the new UI in OS X Yosemite.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:09:59.636 --> 00:10:02.876 A:middle
of the new UI in OS X Yosemite.

00:10:04.026 --> 00:10:08.416 A:middle
Let's start off here by taking
a look at Finder, and I'm going

00:10:08.416 --> 00:10:11.356 A:middle
to give you actually a
mini-tour before the tour

00:10:11.356 --> 00:10:12.456 A:middle
of the things that I'll cover.

00:10:13.186 --> 00:10:16.556 A:middle
We'll take a look at
the toolbars, again;

00:10:16.866 --> 00:10:22.116 A:middle
the window control buttons; the
new kind of segmented control;

00:10:22.666 --> 00:10:26.476 A:middle
the sidebar, which
is translucent now;

00:10:27.136 --> 00:10:32.886 A:middle
and then we'll move over
to Safari to take a look

00:10:32.976 --> 00:10:36.656 A:middle
at what Mike just mentioned: the
combined toolbar and title bar.

00:10:39.086 --> 00:10:41.366 A:middle
And then we'll take a
look at system preferences

00:10:41.366 --> 00:10:46.706 A:middle
to show us an example of our
animated controls: search field,

00:10:48.186 --> 00:10:52.536 A:middle
radio buttons, popup
menus and checkboxes.

00:10:53.066 --> 00:10:59.796 A:middle
And after that, we will go over
to Notification Center and look

00:10:59.796 --> 00:11:03.686 A:middle
at our new vibrant dark
appearance that's used here.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:10:59.796 --> 00:11:03.686 A:middle
at our new vibrant dark
appearance that's used here.

00:11:05.326 --> 00:11:06.876 A:middle
And then the context menu,

00:11:06.876 --> 00:11:11.546 A:middle
which uses the vibrant light
appearance, as do pop-overs.

00:11:12.216 --> 00:11:13.486 A:middle
All right.

00:11:13.686 --> 00:11:14.646 A:middle
Back to the top.

00:11:15.676 --> 00:11:16.756 A:middle
Translucent toolbars.

00:11:18.086 --> 00:11:20.886 A:middle
For anyone who's gone and
installed Yosemite already,

00:11:20.886 --> 00:11:22.666 A:middle
I'm sure you've played
around with this and seen,

00:11:22.666 --> 00:11:26.466 A:middle
as you scroll things up,
you can just see them coming

00:11:26.466 --> 00:11:28.296 A:middle
through the toolbar,
and it gives you a sense

00:11:28.296 --> 00:11:30.396 A:middle
of your content sliding
under the toolbar.

00:11:31.446 --> 00:11:32.846 A:middle
How do you get it?

00:11:33.006 --> 00:11:37.126 A:middle
Well, all you have to
have is an NSScrollView

00:11:37.336 --> 00:11:39.026 A:middle
that is adjacent to the toolbar.

00:11:39.616 --> 00:11:43.676 A:middle
And then it happens
automatically for you.

00:11:43.786 --> 00:11:47.836 A:middle
But if you don't have
that, you can still get it

00:11:47.836 --> 00:11:51.846 A:middle
by using this new window style
mask NSFullSizeContentView

00:11:51.846 --> 00:11:52.686 A:middle
WindowMask.

00:11:54.146 --> 00:11:56.926 A:middle
Simply ore that in with your
existing window style mask,

00:11:57.566 --> 00:12:00.806 A:middle
and you'll get the transparent,
translucent toolbar style.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:11:57.566 --> 00:12:00.806 A:middle
and you'll get the transparent,
translucent toolbar style.

00:12:02.056 --> 00:12:06.286 A:middle
This can be useful for things
such as toolbars or title bars

00:12:06.286 --> 00:12:10.056 A:middle
that show and hide over content
that is not in a scroll view,

00:12:10.056 --> 00:12:14.246 A:middle
or the scroll view's
not right at the top.

00:12:14.246 --> 00:12:17.306 A:middle
Lots more details about this
in tomorrow's advanced session,

00:12:17.306 --> 00:12:20.796 A:middle
Adopting Advanced Features of
the New UI of OS X Yosemite.

00:12:23.516 --> 00:12:24.186 A:middle
All right.

00:12:24.856 --> 00:12:26.286 A:middle
Tinted Sliders, hiding away

00:12:26.286 --> 00:12:28.036 A:middle
in the bottom right
corner of this window.

00:12:29.656 --> 00:12:32.726 A:middle
These are a little
new thing on Yosemite.

00:12:33.106 --> 00:12:35.546 A:middle
And to get those, you just need

00:12:35.546 --> 00:12:39.876 A:middle
to have a non-directional
slider, which is a slider

00:12:39.876 --> 00:12:41.786 A:middle
that has zero tick marks.

00:12:44.676 --> 00:12:45.366 A:middle
All right.

00:12:47.066 --> 00:12:50.556 A:middle
Now, let's take a look at the
new window control buttons.

00:12:52.306 --> 00:12:55.306 A:middle
As well as being flatter,
you'll also notice

00:12:55.306 --> 00:12:58.286 A:middle
that the full-screen button has
moved into the green button.

00:12:58.896 --> 00:13:01.196 A:middle
If you're sad about that,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:12:58.896 --> 00:13:01.196 A:middle
If you're sad about that,

00:13:01.366 --> 00:13:04.506 A:middle
and you'd like the zoom behavior
back, hold the Option key,

00:13:04.506 --> 00:13:05.676 A:middle
and you'll get zoom behavior.

00:13:06.266 --> 00:13:08.496 A:middle
I'd also like to point
out that any window

00:13:08.496 --> 00:13:10.976 A:middle
that can't go full-screen
reverts

00:13:10.976 --> 00:13:12.196 A:middle
to the old zoom behavior.

00:13:12.796 --> 00:13:19.126 A:middle
And then, next, the new kind
of separated segmented control.

00:13:19.926 --> 00:13:23.946 A:middle
These are useful for things like
navigation, like this backwards

00:13:23.946 --> 00:13:26.066 A:middle
and forwards button
here or other kind

00:13:26.066 --> 00:13:28.786 A:middle
of incremental step
operation, such as zooming.

00:13:29.306 --> 00:13:33.336 A:middle
And this is easy to get by
setting the segment style

00:13:33.706 --> 00:13:35.836 A:middle
to NSSegmentStyleSeparated.

00:13:36.756 --> 00:13:40.146 A:middle
And it's nice to know that the
style will automatically adjust,

00:13:40.556 --> 00:13:42.896 A:middle
whether it's in a
toolbar or in a window.

00:13:43.486 --> 00:13:49.396 A:middle
Now, I'm going to bring another
window onto Finder, here.

00:13:49.676 --> 00:13:52.336 A:middle
And we'll take a look at some
of the subtle differences

00:13:52.416 --> 00:13:55.096 A:middle
that happen between active
and inactive windows.

00:13:55.696 --> 00:14:00.276 A:middle
When a window comes
forward and becomes active,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:13:55.696 --> 00:14:00.276 A:middle
When a window comes
forward and becomes active,

00:14:00.826 --> 00:14:02.146 A:middle
the sidebar is translucent.

00:14:03.406 --> 00:14:05.746 A:middle
But when it goes to the
background, and it's inactive,

00:14:06.326 --> 00:14:07.296 A:middle
the sidebar is opaque.

00:14:08.036 --> 00:14:10.746 A:middle
So it's nice to know that
the translucency is only

00:14:10.746 --> 00:14:11.846 A:middle
in the active window.

00:14:12.546 --> 00:14:16.236 A:middle
And let's take a closer
look here, at the toolbar.

00:14:17.046 --> 00:14:18.086 A:middle
A couple of things to note --

00:14:18.346 --> 00:14:21.696 A:middle
it's a good chance to
say that the metrics --

00:14:21.776 --> 00:14:25.276 A:middle
we've tried to keep them as much
the same as possible so that all

00:14:25.276 --> 00:14:27.916 A:middle
of your old controls that
are automatically moved

00:14:27.916 --> 00:14:30.766 A:middle
to the new look, even
without recompiling,

00:14:31.246 --> 00:14:33.006 A:middle
should all fit in
the same space.

00:14:34.026 --> 00:14:36.526 A:middle
And there's also some
subtle things that happen

00:14:36.586 --> 00:14:38.576 A:middle
when you use template images.

00:14:39.206 --> 00:14:41.456 A:middle
These are a great
way to take advantage

00:14:41.456 --> 00:14:44.076 A:middle
of our automatic
adjustment for state changes.

00:14:44.496 --> 00:14:47.066 A:middle
And so I'm going to send
this window to the back,

00:14:47.386 --> 00:14:51.346 A:middle
and you can see the state
changes in the template images,

00:14:51.996 --> 00:14:56.176 A:middle
particularly that selected
part of that segmented control.

00:14:56.176 --> 00:14:56.886 A:middle
Look at the image.

00:14:57.076 --> 00:15:00.076 A:middle
You see it completely
change color.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:14:57.076 --> 00:15:00.076 A:middle
You see it completely
change color.

00:15:00.836 --> 00:15:04.226 A:middle
So you can take advantage of
that by using template images.

00:15:04.816 --> 00:15:09.476 A:middle
And let's take a look again
at the translucent sidebar.

00:15:10.316 --> 00:15:13.306 A:middle
Once again, opaque
here; translucent here.

00:15:14.056 --> 00:15:17.226 A:middle
And how do you get
translucent sidebars?

00:15:17.736 --> 00:15:18.196 A:middle
Guess what?

00:15:19.036 --> 00:15:23.846 A:middle
They're for free, if you've used
an NSOutlineView or NSTableView,

00:15:25.096 --> 00:15:29.186 A:middle
and you set the highlight style
to Source List, which you can do

00:15:29.186 --> 00:15:33.706 A:middle
in Interface Builder or in code.

00:15:33.906 --> 00:15:34.456 A:middle
All right.

00:15:34.456 --> 00:15:38.686 A:middle
And to just show how easy it
was, I downloaded a SidebarDemo,

00:15:38.686 --> 00:15:43.296 A:middle
which was put together for OS X
Lion, 10.7, and out of the box,

00:15:43.296 --> 00:15:44.736 A:middle
it had translucent sidebars.

00:15:47.466 --> 00:15:51.946 A:middle
Now, moving over to Safari to
take a look at the new kind

00:15:51.946 --> 00:15:53.836 A:middle
of toolbar that has
a hidden title bar.

00:15:56.236 --> 00:16:00.606 A:middle
Hidden window titles are
achieved using this new NSWindow


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:15:56.236 --> 00:16:00.606 A:middle
Hidden window titles are
achieved using this new NSWindow

00:16:00.606 --> 00:16:02.236 A:middle
property: titleVisibility.

00:16:02.706 --> 00:16:05.286 A:middle
And you can set the
title visibility

00:16:05.286 --> 00:16:07.806 A:middle
to NSWindowTitleHidden in order

00:16:07.806 --> 00:16:09.596 A:middle
to get the effect
that Safari has.

00:16:10.186 --> 00:16:11.486 A:middle
And I'd like to point out to you

00:16:11.486 --> 00:16:14.196 A:middle
that Safari has some special
things that makes this work,

00:16:14.906 --> 00:16:17.856 A:middle
one of which is that they
have put the window title

00:16:18.136 --> 00:16:20.696 A:middle
into the combined
URL and search field.

00:16:21.246 --> 00:16:23.156 A:middle
And so you could still
see the window title,

00:16:23.186 --> 00:16:24.506 A:middle
even though there's
no title bar.

00:16:25.136 --> 00:16:28.666 A:middle
Also, as Andreas pointed out
yesterday, they've let room

00:16:28.666 --> 00:16:31.366 A:middle
for users to click in
the toolbar in order

00:16:31.366 --> 00:16:32.646 A:middle
to move the window around.

00:16:32.646 --> 00:16:34.366 A:middle
So you want to make sure
you have room for that,

00:16:34.886 --> 00:16:36.256 A:middle
if you're going to
use this new style.

00:16:38.816 --> 00:16:40.666 A:middle
Moving on to animated controls.

00:16:42.136 --> 00:16:47.126 A:middle
Search fields now animate
very much like they do on iOS,

00:16:47.306 --> 00:16:50.476 A:middle
with the magnifying glass and
the placeholder text moving

00:16:50.476 --> 00:16:54.506 A:middle
to the left when you click.

00:16:54.506 --> 00:16:58.096 A:middle
Radio buttons have an animation,
and one of the nice things

00:16:58.096 --> 00:17:00.666 A:middle
about them is, as you
select a radio button,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:16:58.096 --> 00:17:00.666 A:middle
about them is, as you
select a radio button,

00:17:01.506 --> 00:17:04.316 A:middle
the other one deselects and
animates out simultaneously.

00:17:04.915 --> 00:17:06.965 A:middle
It's a nice little touch.

00:17:11.185 --> 00:17:14.006 A:middle
Checkboxes, as well,
are now animated.

00:17:15.236 --> 00:17:17.306 A:middle
And this is a good time
for me to point out that

00:17:17.306 --> 00:17:18.536 A:middle
that first preference there --

00:17:18.536 --> 00:17:20.945 A:middle
double-click a window's
title bar to minimize --

00:17:21.646 --> 00:17:24.965 A:middle
if you leave it unchecked,
which is the default,

00:17:25.356 --> 00:17:28.086 A:middle
double-clicking a window's
title bar will zoom.

00:17:28.086 --> 00:17:30.086 A:middle
So that's a little
hidden feature for you.

00:17:30.746 --> 00:17:34.146 A:middle
And last, popup buttons.

00:17:35.316 --> 00:17:40.716 A:middle
When you select a popup
button and choose an item

00:17:40.716 --> 00:17:42.786 A:middle
from the menu, it
will animate back

00:17:42.786 --> 00:17:44.906 A:middle
into place in the popup button.

00:17:47.976 --> 00:17:48.636 A:middle
All right.

00:17:49.146 --> 00:17:54.256 A:middle
Moving on to Notification Center
and the vibrant dark appearance.

00:17:55.416 --> 00:17:58.346 A:middle
Let's take a little bit of a
closer look as what happens

00:17:58.346 --> 00:17:59.666 A:middle
when the background changes.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:18:00.466 --> 00:18:03.316 A:middle
I want you to pay particular
attention to those tabs

00:18:03.316 --> 00:18:05.506 A:middle
at the top that say
Today and Notifications

00:18:05.956 --> 00:18:08.096 A:middle
and see how they change
as the background changes.

00:18:09.316 --> 00:18:12.326 A:middle
It looks very close to
standard transparency,

00:18:12.916 --> 00:18:14.846 A:middle
but we're actually using
special blend modes

00:18:14.946 --> 00:18:17.056 A:middle
to pull the color
in, a little more

00:18:17.056 --> 00:18:21.966 A:middle
than just plain old
transparency.

00:18:22.266 --> 00:18:23.036 A:middle
How did they get it?

00:18:23.566 --> 00:18:27.706 A:middle
They used this new NS View
subclass -- NSVisualEffectView,

00:18:28.796 --> 00:18:31.776 A:middle
as well as the new
vibrant dark appearance,

00:18:31.776 --> 00:18:33.176 A:middle
which is an NS appearance.

00:18:34.446 --> 00:18:37.276 A:middle
So you can create an
NSVisualEffectView,

00:18:38.756 --> 00:18:41.126 A:middle
get the
NSApperanceNameVibrantDark

00:18:41.126 --> 00:18:44.996 A:middle
appearance and set
that on the effectView

00:18:45.446 --> 00:18:46.746 A:middle
in order to achieve this look.

00:18:48.886 --> 00:18:53.906 A:middle
Similarly, here's an example of
the vibrant light appearance.

00:18:55.176 --> 00:18:58.256 A:middle
Same deal: NSVisualEffectView,

00:18:58.746 --> 00:19:00.936 A:middle
but this time using the
vibrant light appearance,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:18:58.746 --> 00:19:00.936 A:middle
but this time using the
vibrant light appearance,

00:19:01.476 --> 00:19:03.906 A:middle
and you set that
on your effectView,

00:19:03.906 --> 00:19:08.706 A:middle
and you get this new
vibrant light appearance.

00:19:08.706 --> 00:19:10.846 A:middle
Lots more about
NSVisualEffectView

00:19:10.846 --> 00:19:12.936 A:middle
and Vibrancy in tomorrow's talk.

00:19:13.576 --> 00:19:18.406 A:middle
And now, I will hand it back to
Patrick, who will talk to you

00:19:18.406 --> 00:19:20.306 A:middle
in more depth about vibrancy.

00:19:20.566 --> 00:19:21.656 A:middle
Thank you very much.

00:19:21.656 --> 00:19:23.496 A:middle
[Applause]

00:19:23.496 --> 00:19:24.056 A:middle
&gt;&gt; Thank you, Rachel.

00:19:24.376 --> 00:19:24.776 A:middle
Thank you.

00:19:27.636 --> 00:19:29.006 A:middle
Okay, so vibrancy.

00:19:29.356 --> 00:19:32.536 A:middle
So as Rachel mentioned, it's
not just plain old translucency.

00:19:32.536 --> 00:19:33.556 A:middle
What is this vibrancy?

00:19:33.806 --> 00:19:37.556 A:middle
Well, it's a pretty important
visual building block for OS X,

00:19:37.556 --> 00:19:40.746 A:middle
as you -- and it makes its way
into many different applications

00:19:40.746 --> 00:19:43.686 A:middle
and many different areas,
both in light and dark.

00:19:43.686 --> 00:19:45.966 A:middle
Most prominently in
Notification Center,

00:19:45.966 --> 00:19:48.186 A:middle
but also other places in the OS.

00:19:48.716 --> 00:19:50.446 A:middle
So what is it?

00:19:50.576 --> 00:19:51.706 A:middle
What is this vibrancy thing?

00:19:51.776 --> 00:19:54.836 A:middle
Well, I'm going to try
-- and bear with me here.

00:19:54.836 --> 00:19:56.896 A:middle
But I'm going to try to
deconstruct it and break it down

00:19:56.896 --> 00:19:59.476 A:middle
and sort of explain conceptually
what it is and what it's trying

00:19:59.476 --> 00:20:02.156 A:middle
to do, what its goal is, to
help give you a framework


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:19:59.476 --> 00:20:02.156 A:middle
to do, what its goal is, to
help give you a framework

00:20:02.156 --> 00:20:03.866 A:middle
for understanding what
happens technically

00:20:03.976 --> 00:20:04.866 A:middle
with your application.

00:20:05.576 --> 00:20:09.336 A:middle
So vibrancy is advanced
blending on dynamic

00:20:09.336 --> 00:20:10.806 A:middle
or adaptive backgrounds.

00:20:11.476 --> 00:20:14.486 A:middle
So what's advanced about it?

00:20:14.486 --> 00:20:17.366 A:middle
Well, I'm about to -- in
the words -- the words of E.

00:20:17.366 --> 00:20:17.496 A:middle
E.

00:20:17.606 --> 00:20:21.406 A:middle
Cummings, I think -- I'm
going to try to make the case

00:20:21.406 --> 00:20:24.176 A:middle
that with vibrancy, 2 plus
2 can not only equal 4,

00:20:24.176 --> 00:20:26.366 A:middle
but we can actually
make it equal to 5.

00:20:26.966 --> 00:20:29.926 A:middle
In fact, it's all
about making --

00:20:30.016 --> 00:20:32.246 A:middle
vibrancy can actually make
the whole greater than the sum

00:20:32.246 --> 00:20:33.746 A:middle
of the parts and things
that you put into it.

00:20:33.746 --> 00:20:35.516 A:middle
It actually can end up with
something more interesting

00:20:35.516 --> 00:20:37.056 A:middle
than the two things
you put into it.

00:20:37.186 --> 00:20:38.706 A:middle
So what two things
am I talking about?

00:20:38.706 --> 00:20:41.356 A:middle
Well, it's really all
about combining foreground

00:20:41.356 --> 00:20:42.176 A:middle
and background elements.

00:20:42.176 --> 00:20:44.346 A:middle
Most of UI graphics is all

00:20:44.346 --> 00:20:46.816 A:middle
about combining some foreground
content onto a background,

00:20:46.816 --> 00:20:49.496 A:middle
whether it's a button
onto a window background,

00:20:49.496 --> 00:20:52.356 A:middle
whether it's a piece
of text onto a button

00:20:52.356 --> 00:20:53.636 A:middle
or a window content background.

00:20:53.746 --> 00:20:55.786 A:middle
It's all about combining
those individual pixels

00:20:55.786 --> 00:20:56.606 A:middle
in interesting ways.

00:20:57.046 --> 00:20:58.776 A:middle
Well, so let's do that.

00:20:58.776 --> 00:21:00.426 A:middle
We have this beautiful
poppy background.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:20:58.776 --> 00:21:00.426 A:middle
We have this beautiful
poppy background.

00:21:00.826 --> 00:21:02.756 A:middle
And let's do -- and
traditionally, let's --

00:21:02.896 --> 00:21:06.176 A:middle
we have here a gray, a
mid-tone gray circle that we put

00:21:06.176 --> 00:21:07.346 A:middle
on top of this background.

00:21:07.776 --> 00:21:09.146 A:middle
And we can just put it on there.

00:21:09.146 --> 00:21:10.356 A:middle
Now, it's okay, but it kind

00:21:10.356 --> 00:21:11.476 A:middle
of doesn't really
blend well at all.

00:21:11.476 --> 00:21:13.756 A:middle
It kind of sticks out,
in fact, in this image.

00:21:13.926 --> 00:21:16.946 A:middle
Now, traditionally, the tool
we would have at our disposal,

00:21:17.176 --> 00:21:19.916 A:middle
to kind of combine it or blend
it in some interesting way,

00:21:19.916 --> 00:21:23.146 A:middle
would be transparency or
using alpha or opacity.

00:21:23.546 --> 00:21:26.046 A:middle
So here, I faded
this gray circle

00:21:26.046 --> 00:21:28.806 A:middle
by about 25 percent,
maybe a little less.

00:21:28.896 --> 00:21:30.566 A:middle
I'm not a designer.

00:21:31.436 --> 00:21:35.156 A:middle
So -- but you'll notice
there's a problem with this.

00:21:35.156 --> 00:21:38.376 A:middle
And it leaves a little
bit on the table in terms

00:21:38.376 --> 00:21:39.766 A:middle
of the resulting esthetics.

00:21:39.766 --> 00:21:40.596 A:middle
Because what happens

00:21:40.596 --> 00:21:42.236 A:middle
with transparency is all
you're doing is you're taking

00:21:42.236 --> 00:21:43.266 A:middle
that foreground in
the background --

00:21:43.266 --> 00:21:46.086 A:middle
you're just taking a
fractional midpoint

00:21:46.086 --> 00:21:47.766 A:middle
in between and combining those.

00:21:47.946 --> 00:21:49.706 A:middle
And what it really ends
up being like is like --

00:21:49.706 --> 00:21:52.446 A:middle
as if you taking a foreground
element and punching a screen,

00:21:52.676 --> 00:21:54.486 A:middle
like punching and
building little holes in it

00:21:54.486 --> 00:21:55.736 A:middle
and letting the background
seep through.

00:21:56.136 --> 00:21:58.456 A:middle
With the end effect that the
background that does show

00:21:58.456 --> 00:22:00.376 A:middle
through that foreground
element ends up getting kind


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:21:58.456 --> 00:22:00.376 A:middle
through that foreground
element ends up getting kind

00:22:00.376 --> 00:22:01.986 A:middle
of murky and muddy and hazy.

00:22:01.986 --> 00:22:05.056 A:middle
And as you make it more
opaque, it just kind

00:22:05.056 --> 00:22:06.046 A:middle
of gets darker and muddier.

00:22:06.046 --> 00:22:08.386 A:middle
And it really doesn't -- the
background doesn't really get

00:22:08.386 --> 00:22:09.816 A:middle
to combine in an
interesting way.

00:22:10.516 --> 00:22:12.126 A:middle
Well, what if we did
this differently?

00:22:12.456 --> 00:22:14.256 A:middle
What if we -- and the other
thing I want to point out is

00:22:14.256 --> 00:22:16.586 A:middle
that we're not really
doing anything

00:22:16.586 --> 00:22:18.616 A:middle
with the color information
of either the foreground

00:22:18.616 --> 00:22:20.556 A:middle
or the background when
we combine them this way.

00:22:20.946 --> 00:22:24.026 A:middle
Well, what if we approached
the problem differently?

00:22:24.026 --> 00:22:26.566 A:middle
What if we actually took
the color information

00:22:26.566 --> 00:22:28.686 A:middle
of the foreground pixel
and the background element

00:22:29.076 --> 00:22:30.856 A:middle
and combined them in
an interesting way,

00:22:31.256 --> 00:22:32.186 A:middle
where we actually are trying

00:22:32.186 --> 00:22:34.616 A:middle
to preserve the color
tonality of the background?

00:22:35.046 --> 00:22:37.526 A:middle
And just using the actual
foreground color as a hint

00:22:37.526 --> 00:22:39.856 A:middle
as to how much of
that color to preserve

00:22:39.856 --> 00:22:41.526 A:middle
in a general sort
of intensity level?

00:22:41.926 --> 00:22:44.656 A:middle
So that's -- what
I'm illustrating here

00:22:44.656 --> 00:22:47.576 A:middle
in this slide is actually
sort of a burn effect,

00:22:47.886 --> 00:22:50.506 A:middle
a burn blend of a foreground.

00:22:50.506 --> 00:22:53.836 A:middle
Same circle, same
actual gray value here.

00:22:53.836 --> 00:22:55.946 A:middle
I have changed nothing about
the foreground element.

00:22:55.946 --> 00:22:57.976 A:middle
It's still that same
gray circle.

00:22:58.026 --> 00:23:00.196 A:middle
It's just that now I've
combined it with the background


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:22:58.026 --> 00:23:00.196 A:middle
It's just that now I've
combined it with the background

00:23:00.196 --> 00:23:03.336 A:middle
in a more interesting way,
where I'm using the gray value

00:23:03.336 --> 00:23:06.356 A:middle
to actually direct how much of
the color information to keep

00:23:06.356 --> 00:23:10.956 A:middle
from the background, as well
as the general tonality.

00:23:11.486 --> 00:23:13.886 A:middle
What's nice about this is you
really preserve the character

00:23:13.886 --> 00:23:15.086 A:middle
of the background,
as you can see.

00:23:15.656 --> 00:23:18.506 A:middle
And what's also very nice
about this is it kind

00:23:18.506 --> 00:23:20.826 A:middle
of works really well
as things change.

00:23:20.826 --> 00:23:24.036 A:middle
Now, we're changing the
lightness quite a bit,

00:23:24.036 --> 00:23:26.346 A:middle
as we go between the edge of
that poppy and the center,

00:23:26.796 --> 00:23:29.046 A:middle
but get this sort of
general contrast ratio

00:23:29.046 --> 00:23:31.976 A:middle
and general look
of that composite.

00:23:31.976 --> 00:23:34.166 A:middle
It's actually preserved
pretty well by that blend.

00:23:34.486 --> 00:23:38.266 A:middle
And in fact, this
design is very resilient

00:23:38.576 --> 00:23:40.516 A:middle
to completely changing
the background

00:23:40.516 --> 00:23:41.426 A:middle
out for something different.

00:23:41.516 --> 00:23:43.246 A:middle
So once again, I
have changed nothing

00:23:43.246 --> 00:23:44.516 A:middle
about the foreground
element here.

00:23:44.516 --> 00:23:45.336 A:middle
I've just changed it out,

00:23:45.336 --> 00:23:47.066 A:middle
and now we have this
lotus flower background.

00:23:47.666 --> 00:23:50.886 A:middle
And you'll see that the
actual combination is sort

00:23:50.886 --> 00:23:53.856 A:middle
of roughly the same overall
character, as a result.

00:23:54.706 --> 00:23:58.356 A:middle
Well, so okay, so this is a good
illustration of the basic sort

00:23:58.356 --> 00:24:00.296 A:middle
of foreground and
background blending,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:23:58.356 --> 00:24:00.296 A:middle
of foreground and
background blending,

00:24:00.296 --> 00:24:02.106 A:middle
using sort of a more
advanced blend.

00:24:02.716 --> 00:24:04.586 A:middle
But now, how do we build
this up to what we see

00:24:04.586 --> 00:24:08.786 A:middle
in OS X Yosemite today, to get
these translucent materials?

00:24:08.786 --> 00:24:10.416 A:middle
Well, now we need to combine

00:24:10.686 --> 00:24:12.026 A:middle
with a different
kind of background.

00:24:12.026 --> 00:24:14.866 A:middle
So let's build up this
light material here.

00:24:14.866 --> 00:24:16.026 A:middle
Well first, we just want

00:24:16.026 --> 00:24:21.246 A:middle
to put a nice light tint layer
that's transparent over the,

00:24:21.296 --> 00:24:24.346 A:middle
over the background, to give us
a nice sort of light substrate,

00:24:24.346 --> 00:24:25.356 A:middle
onto which to draw our UI.

00:24:25.356 --> 00:24:27.076 A:middle
Because we don't want
to draw our UI directly

00:24:27.076 --> 00:24:28.216 A:middle
onto your desktop
picture, of course.

00:24:28.626 --> 00:24:31.686 A:middle
And then all we need to do

00:24:31.686 --> 00:24:34.806 A:middle
to make it better is
just blur it a little bit

00:24:34.806 --> 00:24:37.706 A:middle
and to keep the overall color
tonality in the rough shape

00:24:37.856 --> 00:24:41.146 A:middle
of your background
but still preserve --

00:24:41.506 --> 00:24:45.266 A:middle
but give a smoother rendering
of the overall result.

00:24:45.636 --> 00:24:47.896 A:middle
Now, you notice, as I went
through and built this up,

00:24:48.026 --> 00:24:49.796 A:middle
I've changed nothing about
the foreground element.

00:24:49.796 --> 00:24:52.206 A:middle
All I've done is I've changed
that background, that it's --

00:24:52.206 --> 00:24:53.336 A:middle
that it's being blended onto.

00:24:53.836 --> 00:24:55.266 A:middle
And the nice thing
about this is,

00:24:55.716 --> 00:24:58.126 A:middle
is it still preserves
that same character.

00:24:58.246 --> 00:25:01.096 A:middle
As I'm going across and as
the background is changing,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:24:58.246 --> 00:25:01.096 A:middle
As I'm going across and as
the background is changing,

00:25:01.656 --> 00:25:05.216 A:middle
the overall composition
really preserves its character

00:25:05.216 --> 00:25:06.806 A:middle
and still gives you
some of that --

00:25:06.806 --> 00:25:09.776 A:middle
the important color
information in the,

00:25:09.776 --> 00:25:11.546 A:middle
of the background
that's underneath

00:25:11.946 --> 00:25:13.336 A:middle
and lets it shine through.

00:25:14.466 --> 00:25:19.156 A:middle
So in fact, I'd like to argue
the whole can be greater

00:25:19.156 --> 00:25:21.236 A:middle
than the sum of the parts
when you're doing --

00:25:21.236 --> 00:25:23.676 A:middle
when you combine using
the right blend modes

00:25:24.386 --> 00:25:28.056 A:middle
and solve some tricky
design problems.

00:25:28.276 --> 00:25:31.426 A:middle
So what are these vibrant
materials of which we speak?

00:25:31.426 --> 00:25:34.096 A:middle
So Rachel enumerated
some of the areas.

00:25:34.096 --> 00:25:37.966 A:middle
So we have built up a
couple of different styles,

00:25:38.326 --> 00:25:40.936 A:middle
one of which can be seen
in menus and popovers.

00:25:41.236 --> 00:25:43.226 A:middle
Then there's the
general light appearance,

00:25:43.226 --> 00:25:45.816 A:middle
which is what you see in the
sidebars and source lists.

00:25:46.306 --> 00:25:48.716 A:middle
Then there's the
translucent title bars.

00:25:48.716 --> 00:25:50.046 A:middle
That's another vibrant material.

00:25:50.906 --> 00:25:54.086 A:middle
And of course, the dark
appearance, which you saw

00:25:54.856 --> 00:25:55.956 A:middle
in Notification Center.

00:25:56.486 --> 00:26:00.916 A:middle
There are a couple of key
new vibrant system behaviors.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:25:56.486 --> 00:26:00.916 A:middle
There are a couple of key
new vibrant system behaviors.

00:26:00.916 --> 00:26:04.166 A:middle
What I mean by this is areas
where your application --

00:26:04.166 --> 00:26:05.466 A:middle
even without taking any steps,

00:26:05.466 --> 00:26:06.856 A:middle
you'll just automatically
benefit

00:26:06.856 --> 00:26:09.676 A:middle
from this new composition
style that we're using.

00:26:10.076 --> 00:26:11.746 A:middle
One of which of course
is source lists.

00:26:12.246 --> 00:26:14.336 A:middle
Then there's the
translucent title bar.

00:26:14.866 --> 00:26:19.416 A:middle
Menus and popovers automatically
get this, as their background.

00:26:20.406 --> 00:26:24.086 A:middle
And of course, menu bar and
status items in menu bars.

00:26:25.396 --> 00:26:29.756 A:middle
So how do you use
vibrancy in your apps?

00:26:29.906 --> 00:26:31.056 A:middle
How do you use it effectively?

00:26:31.606 --> 00:26:35.736 A:middle
Well, once again, it's all
about combining foreground

00:26:35.736 --> 00:26:37.666 A:middle
with background in
an appropriate way,

00:26:37.666 --> 00:26:38.876 A:middle
in an appropriate
and interesting way.

00:26:39.466 --> 00:26:43.626 A:middle
Well, NSVisualEffectView
is the view

00:26:43.626 --> 00:26:45.816 A:middle
that actually is performing
the role of this background.

00:26:45.816 --> 00:26:47.916 A:middle
This is the thing that we
built up in the slides before,

00:26:47.916 --> 00:26:50.596 A:middle
with that white and the
blur and the translucency.

00:26:50.596 --> 00:26:52.636 A:middle
This provides us the
substrate onto the canvas

00:26:52.636 --> 00:26:56.626 A:middle
onto which we are going to draw.

00:26:56.726 --> 00:27:00.156 A:middle
And it's offered in light and
dark basic material flavors.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:26:56.726 --> 00:27:00.156 A:middle
And it's offered in light and
dark basic material flavors.

00:27:00.386 --> 00:27:01.526 A:middle
This is stuff that you've --

00:27:01.706 --> 00:27:05.566 A:middle
that Rachel briefly
demonstrated a moment ago.

00:27:06.116 --> 00:27:09.196 A:middle
And the important thing
about NSVisualEffectView

00:27:09.196 --> 00:27:11.686 A:middle
and what it does to your
applications, it takes care

00:27:11.686 --> 00:27:15.706 A:middle
of all of the steps
needed to make sure that,

00:27:16.196 --> 00:27:18.286 A:middle
as the content -- either
underneath your window

00:27:18.286 --> 00:27:21.746 A:middle
or underneath the view, inside
of the window as it changes --

00:27:21.746 --> 00:27:24.886 A:middle
as you scroll things around,
as you drag windows around,

00:27:24.886 --> 00:27:26.016 A:middle
as your background changes --

00:27:26.266 --> 00:27:27.676 A:middle
it's going to automatically
update

00:27:27.946 --> 00:27:29.486 A:middle
as the content underneath
changes.

00:27:29.786 --> 00:27:30.946 A:middle
You don't have to worry
about any of that;

00:27:30.946 --> 00:27:33.976 A:middle
all of that is handled for you.

00:27:34.376 --> 00:27:36.506 A:middle
So let's move on
to NSAppearance.

00:27:37.146 --> 00:27:39.526 A:middle
So NSAppearance is --
in this equation --

00:27:39.526 --> 00:27:42.066 A:middle
is the one that's taking the
role of the foreground element.

00:27:42.066 --> 00:27:45.206 A:middle
And it's going to drive
both the selection

00:27:45.206 --> 00:27:47.796 A:middle
of the foreground content,
as well as drive some

00:27:47.796 --> 00:27:48.736 A:middle
of the blending behavior.

00:27:49.016 --> 00:27:53.766 A:middle
So it's offered in two
appearance variants:

00:27:53.916 --> 00:27:55.466 A:middle
NSAppearanceNameVibrantLight

00:27:55.776 --> 00:27:57.786 A:middle
and then
NSAppearanceNameVibrantDark.

00:27:59.756 --> 00:28:05.416 A:middle
And what its role in life is,
is to provide sort of a panoply


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:27:59.756 --> 00:28:05.416 A:middle
And what its role in life is,
is to provide sort of a panoply

00:28:05.416 --> 00:28:08.736 A:middle
of colors, controls and
template image treatments

00:28:09.096 --> 00:28:11.816 A:middle
that are appropriate and
suitable for vibrant rendering

00:28:11.816 --> 00:28:14.396 A:middle
when deployed in VisualEffect
using vibrant surfaces.

00:28:15.056 --> 00:28:17.636 A:middle
Now, this is important because,

00:28:17.716 --> 00:28:21.236 A:middle
as you saw in the earlier
section of vibrancy,

00:28:21.776 --> 00:28:23.406 A:middle
selecting the foreground
element --

00:28:23.406 --> 00:28:25.516 A:middle
now the way things
combine is very different

00:28:25.516 --> 00:28:26.096 A:middle
than traditionally.

00:28:26.096 --> 00:28:27.636 A:middle
So selecting something
appropriate

00:28:27.636 --> 00:28:29.426 A:middle
for vibrant rendering
is very critical.

00:28:29.986 --> 00:28:33.056 A:middle
And so we need alternate sets
of these design values --

00:28:33.056 --> 00:28:34.866 A:middle
alternate versions of
these foreground elements,

00:28:35.156 --> 00:28:38.056 A:middle
to get the right result
on these vibrant surfaces.

00:28:38.936 --> 00:28:42.356 A:middle
So as I said, it's really the --

00:28:42.356 --> 00:28:44.046 A:middle
NSAppearance can really
be thought of as the thing

00:28:44.076 --> 00:28:46.836 A:middle
that helps select and identifies
your foreground content source

00:28:46.836 --> 00:28:48.306 A:middle
and makes it appropriate
and locked

00:28:48.306 --> 00:28:51.246 A:middle
in for vibrant rendering
for that material.

00:28:52.296 --> 00:28:56.646 A:middle
And once it's in effect, then
AppKit can automatically pick

00:28:56.646 --> 00:28:57.806 A:middle
up the appropriate colors,

00:28:57.806 --> 00:28:59.486 A:middle
pick up the appropriate
template treatments --

00:28:59.566 --> 00:29:00.836 A:middle
pick them all up and do the --


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:28:59.566 --> 00:29:00.836 A:middle
pick them all up and do the --

00:29:00.836 --> 00:29:02.786 A:middle
and pick up the right
blend modes, especially,

00:29:03.126 --> 00:29:07.516 A:middle
appropriate for the view and the
material you're rendering onto.

00:29:09.236 --> 00:29:10.686 A:middle
Okay. So how do you do this?

00:29:10.686 --> 00:29:12.856 A:middle
Well, let's actually
try to do a demo here.

00:29:13.846 --> 00:29:14.616 A:middle
Little bit exciting.

00:29:19.186 --> 00:29:21.556 A:middle
Demo one. Okay.

00:29:22.206 --> 00:29:26.936 A:middle
So -- so what we're
going to do here is --

00:29:26.936 --> 00:29:32.126 A:middle
we have a very, very simple
application that's basically

00:29:32.126 --> 00:29:34.566 A:middle
just an image editor,
image editor

00:29:34.566 --> 00:29:36.146 A:middle
with some adjustment
sliders here.

00:29:36.146 --> 00:29:38.706 A:middle
And what I'm going to try to
show you is how simple it is

00:29:38.706 --> 00:29:43.136 A:middle
to just add some
vibrancy into your UI

00:29:43.136 --> 00:29:44.936 A:middle
and how little effort it takes.

00:29:44.936 --> 00:29:46.726 A:middle
So all we're going to
do is we're going --

00:29:46.726 --> 00:29:48.056 A:middle
what we're going to try to
do is we're going to try

00:29:48.056 --> 00:29:51.226 A:middle
to take a VisualEffectView
and put it inside

00:29:51.226 --> 00:29:53.896 A:middle
of that little inspector and
re-host the controls inside

00:29:54.406 --> 00:29:56.646 A:middle
of it to give it a
vibrant appearance.

00:29:57.406 --> 00:29:59.116 A:middle
So let me go ahead and do that.

00:29:59.966 --> 00:30:03.826 A:middle
So the first thing I'm
going to do is I'm going


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:29:59.966 --> 00:30:03.826 A:middle
So the first thing I'm
going to do is I'm going

00:30:03.826 --> 00:30:07.286 A:middle
to create a VisualEffectView,
initialize it

00:30:07.286 --> 00:30:09.936 A:middle
with the inspector's
frame, and then I'm going

00:30:09.936 --> 00:30:14.286 A:middle
to set its appearance to be
the vibrant dark appearance.

00:30:14.566 --> 00:30:17.146 A:middle
Now, the next -- and then the
only other thing I really need

00:30:17.146 --> 00:30:18.376 A:middle
to do is I need to
re-host the --

00:30:18.376 --> 00:30:21.996 A:middle
take out the existing
content, the controls

00:30:21.996 --> 00:30:24.316 A:middle
out of the existing
contentView and put them

00:30:24.766 --> 00:30:27.376 A:middle
into this new fxView and then,

00:30:27.376 --> 00:30:30.166 A:middle
place it as the contentView
of the window.

00:30:30.216 --> 00:30:31.386 A:middle
So that's all I'm doing here.

00:30:31.386 --> 00:30:33.696 A:middle
This isn't really directly
relevant to the demo,

00:30:33.696 --> 00:30:36.256 A:middle
but I just put it
here for full honesty

00:30:36.256 --> 00:30:38.236 A:middle
and full disclosure here.

00:30:38.826 --> 00:30:44.516 A:middle
So a key thing to see here
is the appearance being put

00:30:44.516 --> 00:30:48.446 A:middle
on here, and you
see, presto chango,

00:30:48.516 --> 00:30:51.276 A:middle
I have not only some nice,
dark vibrant material,

00:30:51.276 --> 00:30:54.316 A:middle
but I also have, you
know, alternate slider --

00:30:54.316 --> 00:30:57.026 A:middle
alternate controls, that app can
automatically select different

00:30:57.026 --> 00:30:59.536 A:middle
artwork that's appropriate for
vibrant rendering, specifically

00:30:59.536 --> 00:31:00.646 A:middle
for the dark material.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:30:59.536 --> 00:31:00.646 A:middle
for the dark material.

00:31:01.236 --> 00:31:02.976 A:middle
The text colors have inverted,

00:31:03.386 --> 00:31:05.486 A:middle
and everything is
updating dynamically.

00:31:05.866 --> 00:31:08.556 A:middle
And all it took was deploying
that VisualEffectView.

00:31:10.496 --> 00:31:13.356 A:middle
Okay. So back to the podium.

00:31:19.026 --> 00:31:22.316 A:middle
Okay. And that was a very,
very cursory demonstration.

00:31:22.476 --> 00:31:26.816 A:middle
For a lot more details
about all the ins and outs

00:31:26.816 --> 00:31:30.556 A:middle
of VisualEffectView and some
of the more advanced techniques

00:31:30.846 --> 00:31:32.886 A:middle
of using them to
build some of the --

00:31:32.966 --> 00:31:35.256 A:middle
build UI similar to some
of the things that we have

00:31:35.256 --> 00:31:39.566 A:middle
in our system, please go to
the in-depth talk tomorrow,

00:31:39.566 --> 00:31:42.876 A:middle
Adopting Advanced Features of
the New UI in OS X Yosemite.

00:31:44.856 --> 00:31:50.866 A:middle
Okay. So let's move on to
fonts, colors and artwork.

00:31:51.036 --> 00:31:54.676 A:middle
These are the elements that are
typically the things that you

00:31:54.676 --> 00:31:55.956 A:middle
as an app developer
might choose --

00:31:55.956 --> 00:31:57.606 A:middle
make some specific
design choices

00:31:57.606 --> 00:31:58.646 A:middle
and provide material for.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:32:01.076 --> 00:32:03.916 A:middle
So let's talk about fonts first.

00:32:04.356 --> 00:32:06.526 A:middle
So what's new in fonts?

00:32:06.526 --> 00:32:09.296 A:middle
Well, how about the system font?

00:32:09.416 --> 00:32:10.646 A:middle
That's not that big
at all, is it?

00:32:11.356 --> 00:32:12.586 A:middle
It's not a big change at all.

00:32:13.246 --> 00:32:14.556 A:middle
Actually, it is.

00:32:14.556 --> 00:32:17.086 A:middle
So this is -- here's
an illustration

00:32:17.306 --> 00:32:19.626 A:middle
of the Mavericks menu bar,
which is Lucida Grande.

00:32:19.626 --> 00:32:23.446 A:middle
And here's what it looks like
today with Helvetica Neue.

00:32:24.346 --> 00:32:27.366 A:middle
It's actually a pretty
significant difference.

00:32:27.366 --> 00:32:29.216 A:middle
It can be seen even
more dramatically

00:32:29.216 --> 00:32:31.846 A:middle
if you compare the
two side-by-side.

00:32:31.846 --> 00:32:33.466 A:middle
You'll notice it's quite --

00:32:33.466 --> 00:32:36.066 A:middle
the sizing characteristics
are a little bit different,

00:32:36.066 --> 00:32:39.486 A:middle
but in general, it is a
lot crisper typographically

00:32:39.486 --> 00:32:40.966 A:middle
and sort of a cleaner layout.

00:32:42.876 --> 00:32:47.886 A:middle
So let's talk about
this new system font.

00:32:48.346 --> 00:32:53.086 A:middle
So it's Helvetica Neue, but
it is not just plain old,

00:32:53.086 --> 00:32:54.626 A:middle
your mother's Helvetica Neue.

00:32:54.626 --> 00:32:58.036 A:middle
It is especially optimized
version of Helvetica Neue

00:32:58.036 --> 00:33:00.736 A:middle
that has been optimized
for OS X.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:32:58.036 --> 00:33:00.736 A:middle
that has been optimized
for OS X.

00:33:01.066 --> 00:33:02.486 A:middle
And what do I mean by optimized?

00:33:02.486 --> 00:33:06.836 A:middle
Well, any time you put a font
-- for updating a system font,

00:33:06.836 --> 00:33:10.856 A:middle
one of the key two things
to balance are aesthetics

00:33:11.176 --> 00:33:12.466 A:middle
and layout compatibility.

00:33:12.936 --> 00:33:15.216 A:middle
Now, if aesthetics were
all we were concerned with,

00:33:15.256 --> 00:33:18.326 A:middle
we would just render the font
exactly how the type designer

00:33:18.326 --> 00:33:20.596 A:middle
originally envisioned it
and try to do our best job

00:33:20.596 --> 00:33:22.606 A:middle
in rendering the
individual letter forms,

00:33:22.906 --> 00:33:23.696 A:middle
and leave it at that.

00:33:24.226 --> 00:33:26.866 A:middle
Well, the problem is, if we're
switching the system font,

00:33:26.866 --> 00:33:29.436 A:middle
this means we're updating the
typography in applications

00:33:29.436 --> 00:33:31.696 A:middle
that haven't been modified and
may not even be aware of it.

00:33:32.146 --> 00:33:33.706 A:middle
So we have to think about things

00:33:33.706 --> 00:33:35.146 A:middle
where like the layout
may change,

00:33:35.146 --> 00:33:37.006 A:middle
because ultimately these
fonts have different

00:33:37.006 --> 00:33:38.066 A:middle
size characteristics.

00:33:38.906 --> 00:33:41.026 A:middle
So the version of Helvetica Neue

00:33:41.026 --> 00:33:43.136 A:middle
that we've deployed has been
specifically tuned to sort

00:33:43.136 --> 00:33:45.706 A:middle
of balance this tradeoff, to try
to strike a good balance there,

00:33:45.706 --> 00:33:47.686 A:middle
to make sure that we still
get the aesthetic [inaudible]

00:33:47.686 --> 00:33:49.956 A:middle
that we're really looking for
with this clean typography.

00:33:50.406 --> 00:33:53.176 A:middle
But not at the cost of
application compatibility.

00:33:54.226 --> 00:33:57.016 A:middle
So let me go into that with a
little more detail and explain.

00:33:57.796 --> 00:34:01.576 A:middle
So here's -- here's an
emulation of the Finder item --


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:33:57.796 --> 00:34:01.576 A:middle
So here's -- here's an
emulation of the Finder item --

00:34:01.576 --> 00:34:05.036 A:middle
app menu item that you
might see on the menu bar.

00:34:05.366 --> 00:34:07.446 A:middle
And this is it rendered
in Lucida Grande.

00:34:08.335 --> 00:34:12.005 A:middle
And you can see here,
sort of approximations

00:34:12.005 --> 00:34:14.025 A:middle
of the interglyph spacing, here.

00:34:14.766 --> 00:34:17.065 A:middle
And now, as I switch
this to Helvetica Neue,

00:34:17.065 --> 00:34:19.815 A:middle
there are some interesting
things going on here.

00:34:19.946 --> 00:34:24.025 A:middle
Because you notice the overall
thing is shorter, but actually,

00:34:24.326 --> 00:34:27.755 A:middle
if you look carefully, some of
the letters actually got bigger,

00:34:27.755 --> 00:34:28.985 A:middle
and some of them got shorter.

00:34:29.096 --> 00:34:31.136 A:middle
So it's not a straightforward
thing as saying, "Oh, yeah,

00:34:31.136 --> 00:34:33.045 A:middle
Helvetica is -- everything
is just going to get shrunk

00:34:33.045 --> 00:34:33.846 A:middle
by a certain percentage."

00:34:33.846 --> 00:34:35.565 A:middle
No, it's much more
subtle than that.

00:34:35.565 --> 00:34:36.485 A:middle
It can be content-dependent.

00:34:36.485 --> 00:34:37.656 A:middle
Some things are getting winder.

00:34:38.016 --> 00:34:39.216 A:middle
Some things are getting shorter.

00:34:39.436 --> 00:34:40.646 A:middle
Some things are getting
more consistent,

00:34:40.646 --> 00:34:42.416 A:middle
where they were inconsistent
in Lucida Grande

00:34:42.416 --> 00:34:46.746 A:middle
between the capital letter sizes
and the lowercase letter sizes.

00:34:47.156 --> 00:34:48.886 A:middle
So it's a complicated equation.

00:34:48.886 --> 00:34:50.335 A:middle
So that's why it was important

00:34:50.636 --> 00:34:53.916 A:middle
to optimize these
metrics appropriately,

00:34:54.206 --> 00:34:57.806 A:middle
so that they solve this
compatibility problem

00:34:57.916 --> 00:34:58.776 A:middle
in a useful way.

00:34:58.776 --> 00:35:00.456 A:middle
Here, you can see the
two on top of each other,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:34:58.776 --> 00:35:00.456 A:middle
Here, you can see the
two on top of each other,

00:35:00.456 --> 00:35:02.716 A:middle
and you can see more
dramatically this difference.

00:35:02.716 --> 00:35:05.426 A:middle
You see the F, in
particular, is actually shorter

00:35:05.426 --> 00:35:08.036 A:middle
in Lucida Grande, and
it's wider -- sorry.

00:35:08.376 --> 00:35:12.946 A:middle
It's thinner in Lucida Grande
and wider in Helvetica Neue.

00:35:12.946 --> 00:35:15.556 A:middle
But almost all the other letter
forms, except maybe the D,

00:35:15.856 --> 00:35:17.916 A:middle
are actually considerably
shorter.

00:35:18.776 --> 00:35:22.656 A:middle
So layout compatibility
-- that's a big topic.

00:35:22.656 --> 00:35:23.626 A:middle
It's an important topic.

00:35:24.426 --> 00:35:28.886 A:middle
And what do we do about it?

00:35:29.226 --> 00:35:34.086 A:middle
Well, for unmodified
applications, one technique

00:35:34.086 --> 00:35:39.106 A:middle
that we've applied to
apply layout compression

00:35:39.146 --> 00:35:42.216 A:middle
if there's a danger of
the texturing clipping,

00:35:42.636 --> 00:35:43.656 A:middle
given the existing balance.

00:35:43.656 --> 00:35:46.026 A:middle
So for example, if you have a
text field that was sized just

00:35:46.026 --> 00:35:49.876 A:middle
so that it just fit just
perfectly on Mavericks,

00:35:50.276 --> 00:35:53.406 A:middle
you know, there's a chance
that that same text field,

00:35:53.766 --> 00:35:59.626 A:middle
if no measures were taken, would
get clipped with the new font.

00:35:59.836 --> 00:36:01.376 A:middle
Because some string choice


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:35:59.836 --> 00:36:01.376 A:middle
Because some string choice

00:36:01.376 --> 00:36:03.876 A:middle
in there was causing the
overall layout to be longer.

00:36:04.546 --> 00:36:07.776 A:middle
Well, in those circumstances,
we're just going to apply a bit

00:36:07.776 --> 00:36:11.006 A:middle
of an interglyph compression, to
try to make sure that it fits,

00:36:11.006 --> 00:36:12.636 A:middle
so you at least see
all the information,

00:36:12.636 --> 00:36:13.996 A:middle
that there's no information
loss.

00:36:15.706 --> 00:36:19.336 A:middle
And as I'm -- and this
is active for apps built

00:36:19.336 --> 00:36:20.956 A:middle
against 10.9 or earlier only.

00:36:20.956 --> 00:36:22.636 A:middle
So this is an important
takeaway here,

00:36:22.636 --> 00:36:25.496 A:middle
because this compression
mitigation

00:36:25.496 --> 00:36:28.456 A:middle
that we do does not apply if
your app is targeted and built

00:36:28.456 --> 00:36:32.196 A:middle
against the 10.10 SDK.

00:36:32.656 --> 00:36:34.796 A:middle
So what does this mean?

00:36:34.796 --> 00:36:36.266 A:middle
This means that you
don't have to worry

00:36:36.266 --> 00:36:39.556 A:middle
about your existing applications
having problems with your users.

00:36:39.556 --> 00:36:41.846 A:middle
But when you're going
forward, we encourage you

00:36:41.846 --> 00:36:46.186 A:middle
to really look carefully at
your text in your applications

00:36:46.186 --> 00:36:48.096 A:middle
and make sure that you're
using either auto layout

00:36:48.096 --> 00:36:50.446 A:middle
or that you're really sort
of comparing and testing,

00:36:50.446 --> 00:36:51.576 A:middle
making sure that the widths

00:36:51.576 --> 00:36:54.536 A:middle
of all your text elements
is optimized accordingly.

00:36:55.926 --> 00:36:59.616 A:middle
And I also want to mention
that this compression technique

00:36:59.656 --> 00:37:02.316 A:middle
that we apply is not a
silver bullet by any means.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:36:59.656 --> 00:37:02.316 A:middle
that we apply is not a
silver bullet by any means.

00:37:03.036 --> 00:37:05.726 A:middle
And one shouldn't think
of it as the cure-all.

00:37:06.426 --> 00:37:09.336 A:middle
And the reason is, is because
layout compression does not come

00:37:09.336 --> 00:37:10.676 A:middle
without a significant cost,

00:37:10.676 --> 00:37:13.616 A:middle
which is that it can
really affect legibility.

00:37:14.226 --> 00:37:18.676 A:middle
And that's especially true
on 1x non-retina displays,

00:37:18.676 --> 00:37:21.416 A:middle
where there's few pixels to
work with for every glyph.

00:37:21.416 --> 00:37:22.946 A:middle
And every pixel's doing
a heck of a lot of work,

00:37:22.946 --> 00:37:24.366 A:middle
and if you're compressing
things together,

00:37:24.366 --> 00:37:26.276 A:middle
it can really make
things suffer in terms

00:37:26.276 --> 00:37:27.566 A:middle
of the information legibility.

00:37:29.616 --> 00:37:31.496 A:middle
So how do you use
this new system font?

00:37:31.716 --> 00:37:35.626 A:middle
How do you make sure your app
is using the appropriate type?

00:37:36.786 --> 00:37:40.106 A:middle
Well, thankfully, we
have a whole bunch

00:37:40.106 --> 00:37:42.346 A:middle
of system font selectors
to choose from.

00:37:42.696 --> 00:37:44.826 A:middle
And that's what we encourage
you to use, to make sure

00:37:44.826 --> 00:37:46.706 A:middle
that you're using
the right things.

00:37:46.706 --> 00:37:49.466 A:middle
So if you're doing this
in Interface Builder,

00:37:49.836 --> 00:37:51.586 A:middle
rest assured that,
you know, if --

00:37:51.586 --> 00:37:53.946 A:middle
as long as you stick with
the standard font selections

00:37:53.946 --> 00:37:55.556 A:middle
in the font popups that show

00:37:55.556 --> 00:37:56.996 A:middle
up in Interface Builder,
you should be okay.

00:37:57.306 --> 00:37:59.666 A:middle
Otherwise, we encourage you to
use the system font selectors.

00:37:59.666 --> 00:38:01.066 A:middle
These are the ones
that are in NSFont.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:37:59.666 --> 00:38:01.066 A:middle
These are the ones
that are in NSFont.

00:38:01.396 --> 00:38:02.736 A:middle
An example -- there's many more,

00:38:02.736 --> 00:38:04.776 A:middle
but I'm just picking a
few to highlight here.

00:38:04.776 --> 00:38:09.256 A:middle
NSFont systemFontOfSize,
NS boldSystemFontOfSize

00:38:09.566 --> 00:38:11.676 A:middle
and a new one, actually,
labelFontOfSize.

00:38:11.736 --> 00:38:14.146 A:middle
Actually, that's not -- I don't
think that's necessarily new.

00:38:14.146 --> 00:38:16.976 A:middle
There's another label thing
coming that's a little

00:38:16.976 --> 00:38:17.316 A:middle
bit newer.

00:38:18.106 --> 00:38:21.706 A:middle
So all of these selectors
will make sure

00:38:21.706 --> 00:38:24.436 A:middle
that the appropriate UI font
-- the one that's optimized --

00:38:24.686 --> 00:38:26.386 A:middle
has been selected and
is going to be used

00:38:26.386 --> 00:38:28.476 A:middle
as appropriate for UI.

00:38:29.036 --> 00:38:32.036 A:middle
Important takeaway here, and
if you remember nothing else

00:38:32.296 --> 00:38:35.486 A:middle
about this font sections talk
is please do not explicitly set

00:38:35.486 --> 00:38:38.946 A:middle
your font, either in code
or in IB, to Helvetica Neue,

00:38:39.336 --> 00:38:40.516 A:middle
you know, as a literal string.

00:38:40.516 --> 00:38:43.406 A:middle
Because that the actual
document content font.

00:38:43.406 --> 00:38:44.886 A:middle
That's the not-optimized
version.

00:38:44.886 --> 00:38:46.696 A:middle
You'll get very unexpected
results,

00:38:46.816 --> 00:38:50.196 A:middle
and it may make your application
less compatible going forward,

00:38:50.196 --> 00:38:53.666 A:middle
as we continue to improve
upon the typography of OS X.

00:38:56.646 --> 00:38:58.936 A:middle
Okay. So colors.

00:38:59.456 --> 00:39:03.086 A:middle
So colors are an often
underappreciated element of UI,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:38:59.456 --> 00:39:03.086 A:middle
So colors are an often
underappreciated element of UI,

00:39:03.086 --> 00:39:06.826 A:middle
which is a shame, because if you
actually look at most windows

00:39:06.826 --> 00:39:09.586 A:middle
on most applications, about
90 percent of the pixels --

00:39:09.586 --> 00:39:13.056 A:middle
if that, you know, are
actually composed of color fill.

00:39:13.056 --> 00:39:14.726 A:middle
So they're actually a
pretty important part

00:39:14.726 --> 00:39:16.966 A:middle
of building your UI.

00:39:16.966 --> 00:39:18.336 A:middle
And it's especially
important now,

00:39:18.336 --> 00:39:21.256 A:middle
in this day of multiple
appearances

00:39:21.666 --> 00:39:24.486 A:middle
in different sections
of your applications.

00:39:25.986 --> 00:39:29.876 A:middle
So we have system
colors in Cocoa,

00:39:29.876 --> 00:39:34.386 A:middle
and these are what we urge
you to gravitate towards.

00:39:35.196 --> 00:39:37.306 A:middle
And by system colors,
I mean two things.

00:39:37.306 --> 00:39:39.586 A:middle
I mean literally the colors
provided by the system,

00:39:39.856 --> 00:39:42.176 A:middle
in terms of the color selectors
in NS color [inaudible],

00:39:42.176 --> 00:39:45.226 A:middle
but I also would like to
emphasize that you should think

00:39:45.226 --> 00:39:48.806 A:middle
of colors as a system of colors,
not just as a set of numbers

00:39:48.806 --> 00:39:50.956 A:middle
that you might pick out, you
know, from a designer like,

00:39:50.956 --> 00:39:54.706 A:middle
oh, RGB 128, 142, 136.

00:39:54.826 --> 00:39:57.166 A:middle
No. Think of them as a
system, as in like --

00:39:57.436 --> 00:39:58.816 A:middle
what is the semantic color

00:39:58.816 --> 00:40:00.506 A:middle
that would be appropriate
to use here?


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:39:58.816 --> 00:40:00.506 A:middle
that would be appropriate
to use here?

00:40:00.896 --> 00:40:05.236 A:middle
And this is where system colors
can really help, because many

00:40:05.236 --> 00:40:07.056 A:middle
of the standard colors
-- like for example,

00:40:07.056 --> 00:40:08.596 A:middle
NSColor controlTextColor,

00:40:08.826 --> 00:40:13.016 A:middle
NSColor
secondarySelectedControlColor

00:40:13.016 --> 00:40:15.236 A:middle
and, you know, there's a
whole host of others --

00:40:15.416 --> 00:40:18.716 A:middle
have been adapted, have
been optimized to make sure

00:40:18.716 --> 00:40:20.296 A:middle
that they work in all areas

00:40:20.296 --> 00:40:22.256 A:middle
and under all appearances
in the new UI.

00:40:22.256 --> 00:40:25.326 A:middle
And they may also change in the
future, so it's just a good way

00:40:25.326 --> 00:40:26.866 A:middle
to bulletproof yourself.

00:40:28.216 --> 00:40:35.506 A:middle
For textual elements in
your UI, we also would

00:40:35.506 --> 00:40:38.826 A:middle
like to encourage you thinking
of laying out your UI in sort

00:40:38.826 --> 00:40:40.676 A:middle
of an information hierarchy.

00:40:41.576 --> 00:40:46.156 A:middle
And by that, I mean you might
have some sort of primary sort

00:40:46.206 --> 00:40:48.246 A:middle
of information elements
or labels and then,

00:40:48.246 --> 00:40:50.116 A:middle
you have some secondary
supporting information.

00:40:50.116 --> 00:40:52.986 A:middle
You'll see this pattern in
many different applications

00:40:53.476 --> 00:40:54.106 A:middle
in Yosemite.

00:40:54.926 --> 00:40:58.606 A:middle
And we've introduced some new
color selectors specifically

00:40:58.606 --> 00:40:59.556 A:middle
to help with this.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:41:00.136 --> 00:41:02.516 A:middle
The two color selectors
are labelColor

00:41:02.946 --> 00:41:04.316 A:middle
and secondaryLabelColor.

00:41:04.936 --> 00:41:07.866 A:middle
And the nice thing about these
is they've been specifically

00:41:07.866 --> 00:41:10.256 A:middle
designed to work well
on almost any context

00:41:10.256 --> 00:41:12.236 A:middle
that you might put them
on, whether it be menus,

00:41:12.236 --> 00:41:14.526 A:middle
which have that light vibrant
appearance; regular windows;

00:41:15.216 --> 00:41:18.306 A:middle
Notification Center
and its dark UI.

00:41:18.306 --> 00:41:22.136 A:middle
No matter what you do,
it will look correct.

00:41:24.456 --> 00:41:25.786 A:middle
So what about control text?

00:41:25.786 --> 00:41:27.796 A:middle
What about button text,
or other things like that?

00:41:28.746 --> 00:41:33.246 A:middle
Well, the good news there
is the control text --

00:41:33.246 --> 00:41:34.396 A:middle
Cocoa is going to make sure

00:41:34.396 --> 00:41:36.986 A:middle
that control text
automatically adapts

00:41:37.456 --> 00:41:39.306 A:middle
to any particular control state

00:41:40.436 --> 00:41:43.106 A:middle
that your control
may find itself in.

00:41:43.106 --> 00:41:46.346 A:middle
So actually, I would
encourage you to --

00:41:46.456 --> 00:41:49.296 A:middle
unless you have a really
compelling, overriding reason

00:41:49.296 --> 00:41:53.306 A:middle
to do so, please let the
Kit provide the coloring

00:41:53.306 --> 00:41:56.626 A:middle
for any textual elements
on your buttons and images.

00:41:56.626 --> 00:41:57.716 A:middle
I'll get to images in a second.

00:41:57.966 --> 00:42:01.426 A:middle
Because there really are such
a wide range of interaction


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:41:57.966 --> 00:42:01.426 A:middle
Because there really are such
a wide range of interaction

00:42:01.426 --> 00:42:04.546 A:middle
and control states, and our
designers have very carefully

00:42:04.546 --> 00:42:07.326 A:middle
selected colors and stylings
for each one of these

00:42:07.326 --> 00:42:08.986 A:middle
across all the different
appearances.

00:42:09.756 --> 00:42:12.496 A:middle
And doing so, this
will let the --

00:42:12.496 --> 00:42:16.676 A:middle
the Kit provide the optimal
appearance, including adapting

00:42:16.676 --> 00:42:18.016 A:middle
to the vibrant NSAppearances.

00:42:18.016 --> 00:42:21.276 A:middle
Here you can see in the
example of what label color

00:42:21.276 --> 00:42:24.436 A:middle
and secondary label color
look like across the light

00:42:24.436 --> 00:42:26.556 A:middle
and the dark vibrant
appearances.

00:42:26.926 --> 00:42:28.166 A:middle
And you can see that they sort

00:42:28.166 --> 00:42:29.656 A:middle
of preserve their
design intent --

00:42:29.656 --> 00:42:30.876 A:middle
they're being primary
and secondary.

00:42:31.126 --> 00:42:32.116 A:middle
They're both vibrant --

00:42:32.256 --> 00:42:34.736 A:middle
the secondary one is a
little bit more so; that is,

00:42:35.156 --> 00:42:37.006 A:middle
it's letting a little bit more
of the background through.

00:42:37.006 --> 00:42:38.176 A:middle
It's a little more translucent.

00:42:38.176 --> 00:42:39.776 A:middle
It's picking up a little
more color of the background.

00:42:40.426 --> 00:42:44.196 A:middle
But it will preserve -- it will
be a right design choice on any

00:42:44.196 --> 00:42:47.176 A:middle
of these appearances, including
the non-vibrant appearance,

00:42:47.226 --> 00:42:49.196 A:middle
the regular aqua one.

00:42:52.046 --> 00:42:56.956 A:middle
Okay. So the last item here,
in this section: artwork.

00:42:57.996 --> 00:43:00.896 A:middle
So artwork is one of the
other important elements


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:42:57.996 --> 00:43:00.896 A:middle
So artwork is one of the
other important elements

00:43:00.896 --> 00:43:03.826 A:middle
that you might want to
integrate into your application.

00:43:05.136 --> 00:43:06.966 A:middle
And for this -- the thing I want

00:43:07.066 --> 00:43:11.736 A:middle
to mainly highlight
is template images.

00:43:12.546 --> 00:43:14.906 A:middle
Template images can
be an excellent way

00:43:14.906 --> 00:43:17.656 A:middle
to get maximum flexibility
out of your artwork

00:43:18.036 --> 00:43:21.536 A:middle
and have it be resilient
across a wide range

00:43:21.536 --> 00:43:23.356 A:middle
of UI scenarios in
your application.

00:43:24.086 --> 00:43:25.256 A:middle
So what are template images?

00:43:25.626 --> 00:43:26.446 A:middle
A brief review.

00:43:26.716 --> 00:43:28.616 A:middle
Template images are
image resources

00:43:28.616 --> 00:43:32.486 A:middle
where the image content itself
is just providing the shape

00:43:33.396 --> 00:43:36.466 A:middle
of the control, of the element
that you want to depict.

00:43:37.116 --> 00:43:39.086 A:middle
It's providing no
color information.

00:43:39.086 --> 00:43:40.846 A:middle
It's -- I mean, you can put
color in there, but it's going

00:43:40.846 --> 00:43:42.886 A:middle
to get ignored, because it's
basically just the shape

00:43:42.956 --> 00:43:44.216 A:middle
that is critical.

00:43:44.936 --> 00:43:48.396 A:middle
And then what happens is, that
makes it possible for AppKit

00:43:48.396 --> 00:43:51.416 A:middle
to transform it, with a
context specific appearance.

00:43:51.416 --> 00:43:52.986 A:middle
It can take that shape,
and it can render it

00:43:52.986 --> 00:43:55.016 A:middle
in a translucent gray
when it's disabled,

00:43:55.016 --> 00:43:57.096 A:middle
or it can render it bright
blue when it's selected.

00:43:57.546 --> 00:44:00.046 A:middle
And it can make all these
design choices and style it


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:43:57.546 --> 00:44:00.046 A:middle
And it can make all these
design choices and style it

00:44:00.246 --> 00:44:02.336 A:middle
in a way that's appropriate
for a specific appearance

00:44:02.336 --> 00:44:04.906 A:middle
and for a specific
interaction state.

00:44:09.896 --> 00:44:12.646 A:middle
Okay. App compatibility.

00:44:15.106 --> 00:44:19.816 A:middle
So OS X Yosemite does
bring some big changes

00:44:19.816 --> 00:44:20.816 A:middle
to your app's look and feel.

00:44:21.706 --> 00:44:24.076 A:middle
And even for apps that really
haven't made any changes,

00:44:24.656 --> 00:44:28.336 A:middle
the visual differences
can be quite significant.

00:44:29.256 --> 00:44:30.426 A:middle
This is Dictionary here,

00:44:30.426 --> 00:44:32.526 A:middle
and even though this is a pretty
straightforward application,

00:44:32.526 --> 00:44:37.816 A:middle
you can see that the differences
are notable, both in terms

00:44:37.816 --> 00:44:39.686 A:middle
of the general aesthetics,
as well as the layout

00:44:40.466 --> 00:44:41.456 A:middle
of some of the elements.

00:44:42.346 --> 00:44:47.556 A:middle
Well, so what does this mean
for your app, and how to think

00:44:47.556 --> 00:44:52.316 A:middle
about having your
app work on Yosemite?

00:44:52.966 --> 00:44:55.856 A:middle
Well, first and foremost, we'd
really like to encourage you

00:44:55.856 --> 00:44:59.116 A:middle
to make your app as awesome
as it can be on Yosemite

00:44:59.116 --> 00:45:03.466 A:middle
and take advantage of as many
of these new UI experiences


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:44:59.116 --> 00:45:03.466 A:middle
and take advantage of as many
of these new UI experiences

00:45:03.466 --> 00:45:05.616 A:middle
that we've provided the
building blocks for, including

00:45:05.706 --> 00:45:10.436 A:middle
but definitely not limited to
VisualEffectView and vibrancy.

00:45:11.276 --> 00:45:13.466 A:middle
But what about deploying
on Mavericks?

00:45:14.086 --> 00:45:17.816 A:middle
You know, it's quite legitimate
to want to have an application

00:45:17.816 --> 00:45:20.856 A:middle
that works both on
Mavericks and on Yosemite,

00:45:21.306 --> 00:45:26.096 A:middle
so that you can have --
support all of your customers.

00:45:27.106 --> 00:45:31.886 A:middle
Well, having it both ways
can be quite challenging,

00:45:32.596 --> 00:45:38.366 A:middle
given the changes that we've
made in the design of OS X.

00:45:38.366 --> 00:45:41.866 A:middle
As a case study, I'd
like to show Xcode here.

00:45:41.866 --> 00:45:44.556 A:middle
Now, this is Xcode
running on Mavericks.

00:45:45.556 --> 00:45:48.896 A:middle
And notice the tab, which was
carefully designed to blend

00:45:48.896 --> 00:45:50.486 A:middle
in very well with the
title bar material.

00:45:50.486 --> 00:45:54.886 A:middle
Well, here we go in Yosemite and
change the title bar material,

00:45:54.886 --> 00:45:56.466 A:middle
and suddenly, everything
doesn't match.

00:45:57.416 --> 00:45:59.956 A:middle
Well, that -- this is an
illustration of the challenges

00:45:59.956 --> 00:46:01.466 A:middle
that an app can face
if they have


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:45:59.956 --> 00:46:01.466 A:middle
that an app can face
if they have

00:46:01.526 --> 00:46:06.506 A:middle
to support both the old UI
language as well as the new.

00:46:07.016 --> 00:46:09.546 A:middle
Well, we all know this had a
happy ending because this is

00:46:09.546 --> 00:46:12.186 A:middle
in fact what the Xcode that
you're living with right now --

00:46:12.186 --> 00:46:16.586 A:middle
it looks like Yosemite, because
Xcode actually did make an

00:46:16.586 --> 00:46:17.726 A:middle
optimization to make sure

00:46:17.726 --> 00:46:22.076 A:middle
that it looked perfect
for Yosemite release.

00:46:24.296 --> 00:46:29.686 A:middle
So what techniques can you use
to set yourself up for success,

00:46:30.206 --> 00:46:33.256 A:middle
in the face of these
big design changes?

00:46:33.896 --> 00:46:35.976 A:middle
Well, first and foremost,
we encourage you to stick

00:46:35.976 --> 00:46:37.796 A:middle
with the system, and
what we mean by that is,

00:46:38.196 --> 00:46:42.026 A:middle
where possible -- unless you
have an overriding reason to do

00:46:42.026 --> 00:46:44.786 A:middle
so -- stick with
standard controls,

00:46:44.786 --> 00:46:46.226 A:middle
stick with standard
template images,

00:46:46.526 --> 00:46:50.216 A:middle
stick with the system colors,
stick with system fonts.

00:46:50.866 --> 00:46:53.486 A:middle
All of those things will
be automatically managed

00:46:53.486 --> 00:46:57.086 A:middle
and adapted appropriately by
AppKit across both platforms

00:46:57.376 --> 00:46:58.386 A:middle
and will look reasonable.

00:46:58.426 --> 00:47:01.486 A:middle
Like for example, the entire
title bar or all the control --


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:46:58.426 --> 00:47:01.486 A:middle
Like for example, the entire
title bar or all the control --

00:47:01.596 --> 00:47:03.476 A:middle
all the font selectors,
all the colors.

00:47:03.736 --> 00:47:05.166 A:middle
They'll automatically
resolve themselves

00:47:05.166 --> 00:47:07.006 A:middle
to the appropriate
thing on each platform.

00:47:07.436 --> 00:47:10.956 A:middle
Now, there are many cases where
that may not be sufficient,

00:47:11.216 --> 00:47:13.526 A:middle
and when you actually do have
to write different code; like,

00:47:13.526 --> 00:47:17.706 A:middle
for example, the selective
tab change in Xcode.

00:47:18.386 --> 00:47:22.406 A:middle
Well, you can also use runtime
checks to tailor your code

00:47:22.406 --> 00:47:24.056 A:middle
and resources for each design.

00:47:26.406 --> 00:47:28.726 A:middle
So let's go through
two techniques.

00:47:28.726 --> 00:47:31.546 A:middle
There are more, but these
are two primary ones I wanted

00:47:31.546 --> 00:47:34.326 A:middle
to show you for what
you might be able to do.

00:47:34.376 --> 00:47:36.096 A:middle
Well, the first thing
could be a symbol check.

00:47:36.476 --> 00:47:38.496 A:middle
So let's say you have an
application that's actually got

00:47:38.496 --> 00:47:40.516 A:middle
a deployment target of 10.9.

00:47:40.516 --> 00:47:42.966 A:middle
And you want to potentially
introduce some vibrant UI,

00:47:42.966 --> 00:47:45.066 A:middle
but you know you can't
just directly reference

00:47:45.066 --> 00:47:48.036 A:middle
that stuff on, you know, on
10.9, because it doesn't exist.

00:47:48.626 --> 00:47:50.966 A:middle
Well, what you can
do is you can do --

00:47:51.286 --> 00:47:53.686 A:middle
using the standard
weak-linking behavior,

00:47:54.066 --> 00:47:56.376 A:middle
as soon as you have a
deployment target set to 10.9,

00:47:56.376 --> 00:47:59.196 A:middle
you can always just check to
see if an important symbol --

00:47:59.196 --> 00:47:59.826 A:middle
like in this case,

00:47:59.826 --> 00:48:02.436 A:middle
NSAppearanceNameVibrantDark
-- is non-nil.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:47:59.826 --> 00:48:02.436 A:middle
NSAppearanceNameVibrantDark
-- is non-nil.

00:48:02.436 --> 00:48:06.066 A:middle
And only if it's non-nil, then
you go ahead and use that code

00:48:06.066 --> 00:48:08.446 A:middle
and set up a VisualEffectView,
for example,

00:48:08.786 --> 00:48:11.516 A:middle
for a piece of your UI that
can be vibrant in Mavericks.

00:48:11.776 --> 00:48:13.276 A:middle
Now, the nice thing
about this code is

00:48:13.276 --> 00:48:16.686 A:middle
that it automatically
brings in the vibrancy

00:48:16.686 --> 00:48:19.746 A:middle
when that application
is running on Yosemite

00:48:20.456 --> 00:48:24.846 A:middle
but does whatever it needed
to do before on Mavericks.

00:48:25.776 --> 00:48:28.456 A:middle
Another approach is
to do a version check,

00:48:28.546 --> 00:48:31.666 A:middle
to sort of check what
runtime environment am I on?

00:48:31.666 --> 00:48:33.056 A:middle
This is a little
more straightforward,

00:48:33.056 --> 00:48:34.736 A:middle
a little more old-school.

00:48:34.736 --> 00:48:36.746 A:middle
So this is the standard
technique that we recommend

00:48:36.746 --> 00:48:40.136 A:middle
for doing that, at least
for Cocoa applications,

00:48:40.206 --> 00:48:41.866 A:middle
trying to do Cocoa-type work.

00:48:42.386 --> 00:48:44.546 A:middle
Compare the
NSAppKitVersionNumber

00:48:44.926 --> 00:48:46.466 A:middle
against the pre-published
constants.

00:48:46.466 --> 00:48:49.446 A:middle
Make sure you get that
greater-than sign correct.

00:48:49.626 --> 00:48:50.456 A:middle
Don't put it the other way;

00:48:50.456 --> 00:48:52.186 A:middle
you'll end up with
rather surprising results.

00:48:52.686 --> 00:48:55.056 A:middle
And then this would allow
you to, for example,

00:48:55.056 --> 00:48:56.916 A:middle
select different
image resources or go

00:48:56.916 --> 00:49:02.736 A:middle
into totally different code
constructions across one version


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:48:56.916 --> 00:49:02.736 A:middle
into totally different code
constructions across one version

00:49:02.736 --> 00:49:03.976 A:middle
of the OS versus the other.

00:49:07.536 --> 00:49:08.646 A:middle
Oh, I missed that build.

00:49:09.926 --> 00:49:15.296 A:middle
So in general, what we'd
really like to encourage you

00:49:15.296 --> 00:49:21.026 A:middle
to do is look for opportunities
to freshen your design

00:49:21.026 --> 00:49:22.806 A:middle
in as many places as possible

00:49:23.616 --> 00:49:25.236 A:middle
and freshen your
design everywhere.

00:49:26.256 --> 00:49:29.436 A:middle
We really think that a majority
of your customers are going

00:49:29.436 --> 00:49:32.416 A:middle
to a majority of your users,
I should say are going to be

00:49:32.416 --> 00:49:34.316 A:middle
on the Yosemite design,

00:49:34.356 --> 00:49:37.416 A:middle
in Yosemite in the
very near future.

00:49:37.796 --> 00:49:40.906 A:middle
And it's going to be and if
you do have to make a choice

00:49:41.786 --> 00:49:45.606 A:middle
about updating your
design and you're worried

00:49:45.946 --> 00:49:50.556 A:middle
about changing things on
older platforms, I would also

00:49:50.556 --> 00:49:52.726 A:middle
like to encourage you
to, when in doubt,

00:49:52.726 --> 00:49:53.926 A:middle
favor the new visual style.

00:49:53.926 --> 00:49:56.266 A:middle
What I mean by that and
actually, Xcode is an example

00:49:56.266 --> 00:49:58.696 A:middle
of this as a case study.

00:49:59.386 --> 00:50:01.796 A:middle
It's okay to go and bring
some of the elements


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:49:59.386 --> 00:50:01.796 A:middle
It's okay to go and bring
some of the elements

00:50:01.796 --> 00:50:04.556 A:middle
that have been introduced
in elements

00:50:04.556 --> 00:50:07.216 A:middle
that have been introduced into
Yosemite and bring them back

00:50:07.216 --> 00:50:09.896 A:middle
into your Mavericks
App UI design language.

00:50:10.406 --> 00:50:13.166 A:middle
So for example -- and I
don't mean like, obviously,

00:50:13.166 --> 00:50:14.256 A:middle
the whole translucency thing,

00:50:14.256 --> 00:50:16.846 A:middle
because that doesn't
work on Mavericks.

00:50:17.126 --> 00:50:19.906 A:middle
But in terms of button
shapes, button glyphs --

00:50:20.256 --> 00:50:23.986 A:middle
your icon, for example
it is totally okay,

00:50:23.986 --> 00:50:26.426 A:middle
and it actually works out
reasonably well to take some

00:50:26.426 --> 00:50:30.396 A:middle
of these simpler, cleaner
design styles that are featured

00:50:30.396 --> 00:50:33.426 A:middle
in Yosemite and to have
them show up on your buttons

00:50:33.426 --> 00:50:37.496 A:middle
or in your window title bar in
your application on Mavericks.

00:50:37.746 --> 00:50:39.196 A:middle
So that can help
relieve some pressure.

00:50:43.406 --> 00:50:47.036 A:middle
So we're getting close
to wrapping up here.

00:50:47.296 --> 00:50:49.656 A:middle
So I just want to recap
what we talked about today.

00:50:50.326 --> 00:50:52.876 A:middle
So we have this -- there's a
brand new user interface design

00:50:52.876 --> 00:50:53.566 A:middle
for OS X.

00:50:53.566 --> 00:50:54.536 A:middle
We've walked through that.

00:50:55.106 --> 00:50:56.626 A:middle
We've talked a little
bit in trying

00:50:56.626 --> 00:50:59.726 A:middle
to understand the components of
vibrancy and what role it plays

00:50:59.726 --> 00:51:00.696 A:middle
and what it does for you.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:50:59.726 --> 00:51:00.696 A:middle
and what it does for you.

00:51:01.766 --> 00:51:04.216 A:middle
And we talked about
adapting your applications

00:51:04.936 --> 00:51:07.116 A:middle
to these new features.

00:51:08.196 --> 00:51:11.566 A:middle
Please put yet another plug
in for the advanced session,

00:51:11.906 --> 00:51:16.166 A:middle
for more in-depth exploration
of using NSVisualEffectView,

00:51:16.466 --> 00:51:20.866 A:middle
using vibrant materials and
some of the tips and tricks

00:51:20.866 --> 00:51:26.556 A:middle
of getting these UIs
together with alacrity.

00:51:28.896 --> 00:51:31.676 A:middle
So in summary, lots
of excitement lots

00:51:31.676 --> 00:51:34.026 A:middle
of exciting design
changes coming to OS X.

00:51:34.026 --> 00:51:37.356 A:middle
And if there's one message
I'd like to leave with you,

00:51:37.356 --> 00:51:39.536 A:middle
is that the Cocoa
frameworks can help guide you

00:51:39.536 --> 00:51:40.826 A:middle
through all this change,

00:51:40.886 --> 00:51:43.336 A:middle
and please avail
yourselves of their services.

00:51:44.366 --> 00:51:47.406 A:middle
For more information, we
have our excellent developer

00:51:47.446 --> 00:51:48.716 A:middle
evangelist right over here,

00:51:48.716 --> 00:51:50.586 A:middle
with the fancy sneakers,
Jake Behrens.

00:51:51.496 --> 00:51:54.566 A:middle
And I encourage you to email
him, if you have any questions.

00:51:54.606 --> 00:51:56.656 A:middle
And there are many
related sessions,

00:51:57.146 --> 00:51:58.836 A:middle
including the What's
New in Cocoa,

00:51:58.836 --> 00:52:02.566 A:middle
which happened earlier today
actually yeah, earlier today.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:51:58.836 --> 00:52:02.566 A:middle
which happened earlier today
actually yeah, earlier today.

00:52:02.796 --> 00:52:04.666 A:middle
Today is Tuesday.

00:52:04.666 --> 00:52:06.676 A:middle
There's also the
advanced talk tomorrow.

00:52:06.676 --> 00:52:10.266 A:middle
I also want to point out the
Creating extensions for iOS

00:52:10.266 --> 00:52:14.166 A:middle
and OS X, which happened
actually it's concluding it

00:52:14.166 --> 00:52:15.436 A:middle
happened just an hour ago.

00:52:15.736 --> 00:52:17.286 A:middle
And the reason I mention
that is I think they talk

00:52:17.286 --> 00:52:19.266 A:middle
about Notification Center
extensions, which is one

00:52:19.266 --> 00:52:21.606 A:middle
of the places where you use
the dark vibrant appearance.

00:52:22.446 --> 00:52:27.346 A:middle
And there are also some there
are some Xcode sessions,

00:52:27.346 --> 00:52:29.356 A:middle
some Interface Builder sessions
that I encourage you to go to,

00:52:29.356 --> 00:52:32.436 A:middle
where they're not going to touch
directly on some of this stuff,

00:52:32.436 --> 00:52:35.306 A:middle
but it's very important to
see some of the new features

00:52:35.306 --> 00:52:37.456 A:middle
that have been exposed in the
new UI and Interface Builder.

00:52:38.096 --> 00:52:41.846 A:middle
And if you haven't gotten enough
of my not-an-engineer colleague,

00:52:41.846 --> 00:52:45.726 A:middle
Mike Stern, he's having a
talk right following this one,

00:52:45.726 --> 00:52:47.676 A:middle
called Designing
Intuitive User Experiences.

00:52:48.056 --> 00:52:51.476 A:middle
And you can get more
design wisdom.

00:52:52.616 --> 00:52:54.606 A:middle
And with that, I'd like
to wrap up and thank you.

00:52:55.516 --> 00:52:59.500 A:middle
[ Applause ]

