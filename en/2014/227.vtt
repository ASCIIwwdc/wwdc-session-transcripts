WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:00.506 --> 00:00:12.496 A:middle
[ Pause ]

00:00:12.996 --> 00:00:13.656 A:middle
&gt;&gt; Good morning.

00:00:15.176 --> 00:00:16.696 A:middle
Welcome to Creating
Modern Cocoa Apps.

00:00:17.436 --> 00:00:17.746 A:middle
Thank you.

00:00:21.376 --> 00:00:22.406 A:middle
My name is Tony Parker.

00:00:22.406 --> 00:00:24.766 A:middle
I'm a Software Engineer on the
Cocoa Frameworks Team at Apple.

00:00:24.956 --> 00:00:29.376 A:middle
So today I'd like to focus
on this word, modern.

00:00:30.026 --> 00:00:32.956 A:middle
What I mean by modern is an
application that builds on top

00:00:32.956 --> 00:00:35.316 A:middle
of and takes advantage
of the core features

00:00:35.316 --> 00:00:36.356 A:middle
of the Cocoa Frameworks,

00:00:36.826 --> 00:00:40.786 A:middle
and by doing this a modern Cocoa
app is able to feel like it fits

00:00:40.786 --> 00:00:43.476 A:middle
in with the system, both
as your application evolves

00:00:43.796 --> 00:00:47.366 A:middle
and as you've seen with Yosemite
this week how the operating

00:00:47.366 --> 00:00:48.526 A:middle
system evolves, as well.

00:00:48.746 --> 00:00:50.706 A:middle
And today we're going to
talk about six major features

00:00:50.706 --> 00:00:51.416 A:middle
that we want you to think

00:00:51.416 --> 00:00:53.136 A:middle
about when you're building
your Cocoa application,

00:00:53.136 --> 00:00:54.926 A:middle
and we're going to talk
about a few more, as well.

00:00:54.926 --> 00:00:58.876 A:middle
Now it's great to have an
example of a modern Cocoa app,

00:00:58.876 --> 00:01:00.976 A:middle
so I'd like to introduce
to you Lister.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:58.876 --> 00:01:00.976 A:middle
so I'd like to introduce
to you Lister.

00:01:01.426 --> 00:01:03.686 A:middle
Lister is built with
Storyboards, Auto Layout,

00:01:03.686 --> 00:01:05.756 A:middle
and NSDocument, and
we're going to go

00:01:05.756 --> 00:01:07.076 A:middle
over all these features today.

00:01:07.446 --> 00:01:10.696 A:middle
Lister is a cross platform app,
it runs on both OS X and iOS,

00:01:11.296 --> 00:01:13.806 A:middle
and it's available in both
Objective-C and Swift.

00:01:14.406 --> 00:01:16.566 A:middle
So Lister is sample code that
we're making available to you,

00:01:16.806 --> 00:01:18.646 A:middle
and there's links at
the end of this talk

00:01:19.076 --> 00:01:21.676 A:middle
to download all four versions
of it, so I really recommend

00:01:21.676 --> 00:01:23.626 A:middle
that after this talk
you check-out the sample

00:01:24.006 --> 00:01:27.266 A:middle
and see some of what we think
makes a great modern Cocoa app.

00:01:27.746 --> 00:01:29.306 A:middle
Let's do a quick tour.

00:01:30.416 --> 00:01:32.996 A:middle
So Lister is a To
Do application,

00:01:33.846 --> 00:01:38.686 A:middle
so as you can see here I can
mark items as finished or maybe

00:01:38.686 --> 00:01:40.656 A:middle
if I'm not done with my
slides yet I can uncheck that,

00:01:40.656 --> 00:01:41.826 A:middle
I hope I'm done by this point.

00:01:42.316 --> 00:01:43.926 A:middle
Then you can also move items

00:01:43.926 --> 00:01:48.866 A:middle
around inside the
list, as you see here.

00:01:49.086 --> 00:01:51.896 A:middle
Lister is a Document-Based
app, that means I can have more

00:01:51.896 --> 00:01:56.716 A:middle
than one document
open at a time,

00:01:56.936 --> 00:02:00.946 A:middle
and to edit the list Lister
has this popover you see,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:01:56.936 --> 00:02:00.946 A:middle
and to edit the list Lister
has this popover you see,

00:02:00.946 --> 00:02:04.146 A:middle
I can click on the plus
button, type the item

00:02:04.246 --> 00:02:08.045 A:middle
that I'm interested in adding,
and it's inserted into the list.

00:02:09.386 --> 00:02:12.716 A:middle
So here you can see just how
easy it is to use the app,

00:02:12.716 --> 00:02:13.726 A:middle
and that's important, as well.

00:02:13.726 --> 00:02:16.726 A:middle
Now as a Document-Based app you
get a lot of features for free,

00:02:16.726 --> 00:02:20.216 A:middle
including auto saving and this
title bar renaming feature

00:02:20.386 --> 00:02:24.296 A:middle
and tagging, and also Lister
has this feature of allowing you

00:02:24.296 --> 00:02:29.616 A:middle
to choose a color for the
document, as you can see there.

00:02:29.826 --> 00:02:31.896 A:middle
Now, of course, as an OS X
app it's important to think

00:02:31.896 --> 00:02:34.596 A:middle
about how it behaves when
the window is resized,

00:02:35.036 --> 00:02:36.946 A:middle
and here you can see
I'm resizing the window

00:02:36.946 --> 00:02:40.006 A:middle
and it even enforces a minimum
size and also makes sure

00:02:40.056 --> 00:02:44.006 A:middle
that all of the controls are
available for the user to see.

00:02:46.296 --> 00:02:48.546 A:middle
So maybe you've already started
writing your modern Cocoa app,

00:02:49.126 --> 00:02:51.376 A:middle
you went into Xcode,
chose file a new project.

00:02:51.886 --> 00:02:54.756 A:middle
You were presented with
this fantastic sheet,

00:02:55.016 --> 00:02:56.336 A:middle
pick Cocoa application,
of course,

00:02:56.756 --> 00:03:00.376 A:middle
gave your app a great name, and
when you Build and Run you end


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:02:56.756 --> 00:03:00.376 A:middle
gave your app a great name, and
when you Build and Run you end

00:03:00.376 --> 00:03:02.596 A:middle
up with this fantastic
empty window.

00:03:03.726 --> 00:03:06.066 A:middle
And it may seem like there's
a long ways to go to get

00:03:06.066 --> 00:03:07.516 A:middle
from a template, like this,

00:03:07.836 --> 00:03:10.316 A:middle
to a fully featured
modern app, like Lister.

00:03:10.926 --> 00:03:12.976 A:middle
Well, no worries, that's what
we're going to talk about today.

00:03:13.496 --> 00:03:15.596 A:middle
So, first, we're going to go
over getting started and talk

00:03:15.596 --> 00:03:17.656 A:middle
about some of the core features
of the Cocoa Frameworks.

00:03:18.216 --> 00:03:20.446 A:middle
After that, we're going to add
some more interesting features.

00:03:21.216 --> 00:03:26.666 A:middle
And, finally, we are going to
talk about where to go next,

00:03:27.976 --> 00:03:30.346 A:middle
so first up, getting started.

00:03:30.846 --> 00:03:34.306 A:middle
Now before we go any
further it's important

00:03:34.306 --> 00:03:36.076 A:middle
to review this very
common design pattern,

00:03:36.076 --> 00:03:37.806 A:middle
called Model View
Controller, or MVC.

00:03:38.366 --> 00:03:40.896 A:middle
In MVC you architect your
application into three parts.

00:03:41.356 --> 00:03:45.216 A:middle
The first part is the model,
the model is storing the data

00:03:45.216 --> 00:03:47.116 A:middle
that your application
is interested in.

00:03:48.076 --> 00:03:50.976 A:middle
After that you have views,
views are the way your user sees

00:03:50.976 --> 00:03:52.066 A:middle
and interacts with that data.

00:03:52.166 --> 00:03:54.016 A:middle
And, finally, we
have controllers,

00:03:54.016 --> 00:03:56.006 A:middle
controllers connect
views and models.

00:03:56.006 --> 00:03:59.146 A:middle
Now there's no better
example of MVC in action

00:03:59.146 --> 00:04:01.356 A:middle
in Cocoa than Storyboards.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:03:59.146 --> 00:04:01.356 A:middle
in Cocoa than Storyboards.

00:04:01.756 --> 00:04:05.326 A:middle
Storyboards are new in Yosemite,
they've become back to the Mac

00:04:05.326 --> 00:04:08.476 A:middle
from iOS, and Storyboards
perform a great starting point

00:04:08.476 --> 00:04:09.776 A:middle
for creating views
in controllers,

00:04:10.036 --> 00:04:11.786 A:middle
but they're not just a
starting point, they're going

00:04:11.786 --> 00:04:13.206 A:middle
to form the base
of your application

00:04:13.206 --> 00:04:14.446 A:middle
as you add new features.

00:04:16.456 --> 00:04:18.116 A:middle
Storyboards consist
of two parts.

00:04:18.866 --> 00:04:22.926 A:middle
The first is a scene, which is
part of your user interface,

00:04:22.926 --> 00:04:26.346 A:middle
and the second part is a segway,
which lets you transition

00:04:26.346 --> 00:04:28.346 A:middle
from one scene to the next.

00:04:30.016 --> 00:04:31.536 A:middle
So here's an example
of a Storyboard.

00:04:31.966 --> 00:04:33.646 A:middle
This is the template
we just looked at.

00:04:33.646 --> 00:04:35.696 A:middle
You can see I've got
not only a window,

00:04:35.696 --> 00:04:38.766 A:middle
but also a window controller
and a view and a label

00:04:38.766 --> 00:04:40.256 A:middle
that says your document
content is here

00:04:40.616 --> 00:04:42.036 A:middle
and a view controller
for that, as well.

00:04:42.036 --> 00:04:44.706 A:middle
Now, of course, Storyboards
can become much more complex.

00:04:45.246 --> 00:04:48.166 A:middle
Here's a Tab View controller,
a new feature in Yosemite,

00:04:48.456 --> 00:04:52.466 A:middle
and here you can see I'm able
to easily visualize how all

00:04:52.466 --> 00:04:53.676 A:middle
of the tabs look together.

00:04:54.356 --> 00:04:56.476 A:middle
And this means it's a great
way to get an overview

00:04:56.476 --> 00:04:58.876 A:middle
of how your application
behaves and edit things

00:04:58.876 --> 00:05:00.116 A:middle
in coordination with each other.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:04:58.876 --> 00:05:00.116 A:middle
in coordination with each other.

00:05:00.746 --> 00:05:03.836 A:middle
Now it's important to
understand when you're working

00:05:03.836 --> 00:05:05.706 A:middle
with Storyboards that
the thing you're looking

00:05:05.706 --> 00:05:07.856 A:middle
at there is not a
faÃ§ade or just a frontend

00:05:07.996 --> 00:05:11.536 A:middle
to generated code, those
are real live controller

00:05:11.536 --> 00:05:13.566 A:middle
and view objects that
are in that file.

00:05:14.046 --> 00:05:15.586 A:middle
However, Xcode makes
it very easy

00:05:15.586 --> 00:05:18.726 A:middle
to connect those to
your source code.

00:05:19.046 --> 00:05:21.796 A:middle
So here I've done a control
drag in the Assistant Editor

00:05:22.036 --> 00:05:24.706 A:middle
to my source code from
that password field,

00:05:25.026 --> 00:05:26.456 A:middle
and there I can insert
either an outlet

00:05:26.516 --> 00:05:28.996 A:middle
to reference the text
field or an action to take

00:05:28.996 --> 00:05:31.056 A:middle
when the user types
in it or hits return.

00:05:31.476 --> 00:05:36.286 A:middle
The Storyboards, you're going to
find that Storyboards are great

00:05:36.286 --> 00:05:39.336 A:middle
for rapid prototyping and
you can easily edit them,

00:05:39.336 --> 00:05:42.176 A:middle
add new features, try it out in
the Assistant Editor, or Build

00:05:42.176 --> 00:05:44.166 A:middle
and Run, and you get a lot
of functionality for free.

00:05:44.806 --> 00:05:48.196 A:middle
And also you're going
to compose Storyboards

00:05:48.196 --> 00:05:49.806 A:middle
to form more complicated
interfaces,

00:05:49.806 --> 00:05:52.456 A:middle
so your entire application
isn't in just one Storyboard,

00:05:52.786 --> 00:05:54.946 A:middle
you could have a piece that you
reuse across different places

00:05:55.276 --> 00:05:57.106 A:middle
or Storyboards that
are only loaded

00:05:57.106 --> 00:05:59.346 A:middle
with the user chooses certain
actions, like preferences.

00:05:59.906 --> 00:06:03.896 A:middle
Now Storyboards is a very
large topic, of course,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:05:59.906 --> 00:06:03.896 A:middle
Now Storyboards is a very
large topic, of course,

00:06:03.896 --> 00:06:06.686 A:middle
so here's the first of many
references I'm going to give you

00:06:06.686 --> 00:06:09.236 A:middle
in this talk to other sessions
where I think you can find

00:06:09.236 --> 00:06:10.296 A:middle
out a lot more information.

00:06:10.666 --> 00:06:13.336 A:middle
This one is Storyboards
and Controllers for OS X.

00:06:13.336 --> 00:06:15.446 A:middle
If you missed it earlier this
week then check it out on video.

00:06:15.946 --> 00:06:21.446 A:middle
Next up let's talk
about Auto Layout.

00:06:22.426 --> 00:06:25.636 A:middle
So Auto Layout is how views are
placed in your user interface,

00:06:26.896 --> 00:06:29.756 A:middle
and the auto part is that it
automatically changes the size

00:06:29.756 --> 00:06:33.196 A:middle
and placement of views as
content changes or the container

00:06:33.196 --> 00:06:34.366 A:middle
for that content changes.

00:06:34.916 --> 00:06:39.116 A:middle
The way Auto Layout works is
by specifying relationships

00:06:39.116 --> 00:06:41.526 A:middle
between views using what
we call constraints,

00:06:41.526 --> 00:06:43.506 A:middle
so let me give you an example.

00:06:43.826 --> 00:06:45.726 A:middle
Here is an application
called Directions,

00:06:46.216 --> 00:06:48.596 A:middle
and you can see it looks
great just sitting there,

00:06:48.596 --> 00:06:51.096 A:middle
statically on a slide,
but it's important again

00:06:51.096 --> 00:06:53.646 A:middle
to consider how it behaves when
the user resizes the window.

00:06:53.646 --> 00:06:55.376 A:middle
So in this case my
designer came to me

00:06:55.376 --> 00:06:56.626 A:middle
and gave me a bunch of rules.

00:06:56.976 --> 00:06:58.946 A:middle
She said this start
route, or excuse me,

00:06:58.946 --> 00:07:01.986 A:middle
the start route button must
remain a fixed width unless


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:06:58.946 --> 00:07:01.986 A:middle
the start route button must
remain a fixed width unless

00:07:01.986 --> 00:07:03.756 A:middle
you're in a different
language and in

00:07:03.756 --> 00:07:04.736 A:middle
that case it's a
different width.

00:07:05.476 --> 00:07:07.936 A:middle
The map view must remain
fixed to all of the edges,

00:07:08.236 --> 00:07:09.716 A:middle
except it needs to leave
space on the bottom

00:07:09.716 --> 00:07:10.906 A:middle
for the rest of the controls.

00:07:11.716 --> 00:07:14.086 A:middle
The start and end labels
are also fixed width,

00:07:15.036 --> 00:07:18.836 A:middle
but the beginning and finishing
address text fields are variable

00:07:18.836 --> 00:07:21.756 A:middle
width, however, they must always
remain the same width and,

00:07:21.756 --> 00:07:24.916 A:middle
furthermore, the start and
beginning and finishing address

00:07:24.916 --> 00:07:28.176 A:middle
and start route controls must
all take up the full width

00:07:28.176 --> 00:07:29.846 A:middle
of the window as it resizes.

00:07:31.336 --> 00:07:35.076 A:middle
And, finally, the used bike
route check box must remain left

00:07:35.076 --> 00:07:37.206 A:middle
aligned with the beginning
address text field.

00:07:38.666 --> 00:07:40.246 A:middle
So what I've just
described to you in English,

00:07:40.606 --> 00:07:43.626 A:middle
you can actually express very
easily entirely within Xcode

00:07:43.626 --> 00:07:46.276 A:middle
and Interface Builder to
set up your constraints.

00:07:46.906 --> 00:07:49.036 A:middle
So what happens when
you resize the window?

00:07:49.096 --> 00:07:51.266 A:middle
Well, get out your popcorn,
this is going to be fantastic.

00:07:52.646 --> 00:07:55.626 A:middle
You can see that the controls
stay in the same place

00:07:55.626 --> 00:07:57.646 A:middle
or the right place as
the window resizes.

00:07:58.246 --> 00:08:03.926 A:middle
So Auto Layout provides
flexibility as design changes,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:07:58.246 --> 00:08:03.926 A:middle
So Auto Layout provides
flexibility as design changes,

00:08:04.266 --> 00:08:07.226 A:middle
and by design I mean not just
the design of your application,

00:08:07.556 --> 00:08:09.606 A:middle
but also the design of
the operating system.

00:08:09.976 --> 00:08:12.526 A:middle
As you've seen with Yosemite,
we introduced a new system font,

00:08:12.936 --> 00:08:16.666 A:middle
and apps that use Auto Layout
will immediately feel modern

00:08:16.666 --> 00:08:18.816 A:middle
and at home because their
controls can be automatically

00:08:18.816 --> 00:08:21.036 A:middle
resized for potentially
different lengths

00:08:21.036 --> 00:08:22.436 A:middle
of text with the new font.

00:08:22.436 --> 00:08:26.516 A:middle
Auto Layout also greatly
simplifies localization.

00:08:26.516 --> 00:08:27.336 A:middle
This is a feature we're going

00:08:27.336 --> 00:08:28.586 A:middle
to talk a little bit
more about later.

00:08:28.586 --> 00:08:31.916 A:middle
And, again, Xcode is going
to be your primary interface

00:08:31.916 --> 00:08:33.076 A:middle
for working with Auto Layout.

00:08:33.476 --> 00:08:34.616 A:middle
You can add new constraints,

00:08:34.616 --> 00:08:36.905 A:middle
it'll help you understand
how constraints interact

00:08:36.905 --> 00:08:37.456 A:middle
with each other.

00:08:38.006 --> 00:08:40.056 A:middle
You can preview the results
in the Assistant Editor,

00:08:40.546 --> 00:08:43.765 A:middle
and also Xcode provides a
fantastic way to debug issues.

00:08:43.816 --> 00:08:46.906 A:middle
For example, if you have
two constraints that result

00:08:46.906 --> 00:08:49.906 A:middle
in a conflicting rule then
Xcode will tell you about that

00:08:49.906 --> 00:08:51.686 A:middle
and offer you a solution
to fix it.

00:08:52.616 --> 00:08:55.246 A:middle
So, again, here's another
related session, Taking Control

00:08:55.246 --> 00:08:56.796 A:middle
of Auto Layout in Xcode 5.

00:08:57.076 --> 00:08:59.456 A:middle
It's from last year, but
I definitely recommend

00:08:59.456 --> 00:09:00.706 A:middle
that you go check that talk out.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:08:59.456 --> 00:09:00.706 A:middle
that you go check that talk out.

00:09:01.086 --> 00:09:03.936 A:middle
There the Interface Builder
Team showed a lot of ways

00:09:03.936 --> 00:09:05.706 A:middle
in which you can use Xcode

00:09:05.706 --> 00:09:07.396 A:middle
to efficiently handle
those constraints.

00:09:07.456 --> 00:09:09.356 A:middle
And we're also going
to show you Auto Layout

00:09:09.356 --> 00:09:13.756 A:middle
in a demo in a few minutes.

00:09:13.756 --> 00:09:16.556 A:middle
Next, let's talk about
documents and data.

00:09:17.056 --> 00:09:20.546 A:middle
So for many applications this
is the reason to use your app.

00:09:20.756 --> 00:09:23.706 A:middle
So it's really important to
decide early on how you're going

00:09:23.706 --> 00:09:25.286 A:middle
to store that data
because it's going

00:09:25.316 --> 00:09:27.166 A:middle
to drive the design
of your application.

00:09:27.696 --> 00:09:29.876 A:middle
That's not just the
architecture of your app,

00:09:30.196 --> 00:09:32.926 A:middle
but also how users use your app.

00:09:33.616 --> 00:09:37.666 A:middle
In Cocoa we generally divide
data driven applications

00:09:37.666 --> 00:09:38.796 A:middle
into two major categories.

00:09:39.116 --> 00:09:41.206 A:middle
The first are Shoebox apps

00:09:41.296 --> 00:09:43.376 A:middle
and the second is a
Document-Based app.

00:09:43.376 --> 00:09:44.866 A:middle
Let's talk about
Shoebox apps first.

00:09:45.086 --> 00:09:48.966 A:middle
Now a great example of
a Shoebox app is iTunes.

00:09:49.226 --> 00:09:52.026 A:middle
Also, you might think
about iBooks or Photos.

00:09:52.936 --> 00:09:56.146 A:middle
So in a Shoebox app we typically
store the data in a library

00:09:56.146 --> 00:09:58.716 A:middle
or a container, and
usually that library

00:09:58.716 --> 00:10:00.306 A:middle
or container is hidden
from the user.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:09:58.716 --> 00:10:00.306 A:middle
or container is hidden
from the user.

00:10:00.796 --> 00:10:04.556 A:middle
For example, with Photos app
the library will contain all

00:10:04.596 --> 00:10:07.156 A:middle
of the photos, but it appears to
the user as just a single file.

00:10:08.286 --> 00:10:11.626 A:middle
Shoebox apps typically present
their data in a single window,

00:10:11.626 --> 00:10:12.956 A:middle
now that's not a restriction,

00:10:13.076 --> 00:10:14.836 A:middle
but it is the most
common workflow.

00:10:15.086 --> 00:10:19.326 A:middle
Shoebox apps are also great
for mix and match of data.

00:10:19.676 --> 00:10:21.376 A:middle
Again, using iTunes
as an example,

00:10:21.646 --> 00:10:23.946 A:middle
you want to create a playlist
from several different songs

00:10:23.946 --> 00:10:26.466 A:middle
from different albums,
that's a great --

00:10:26.556 --> 00:10:30.206 A:middle
that's a typical
workflow in a Shoebox app.

00:10:32.216 --> 00:10:34.996 A:middle
Now to support Shoebox apps
Cocoa provides a framework

00:10:34.996 --> 00:10:35.986 A:middle
called Core Data.

00:10:36.866 --> 00:10:40.306 A:middle
Core Data is a generalized
object,

00:10:40.306 --> 00:10:41.406 A:middle
graph and persistence framework.

00:10:41.756 --> 00:10:44.366 A:middle
So it may seem like a mouthful,
but really all it means is,

00:10:44.366 --> 00:10:45.956 A:middle
of course, in a Shoebox
app you're going

00:10:45.956 --> 00:10:47.756 A:middle
to have some representation
of the user's data

00:10:47.756 --> 00:10:49.086 A:middle
in memory, that model data.

00:10:49.536 --> 00:10:52.736 A:middle
Core Data lets you manage
that graph and provides a way

00:10:52.736 --> 00:10:55.216 A:middle
to help you persist it to
disk, although Core Data,

00:10:55.216 --> 00:10:56.386 A:middle
itself, is not a database.

00:10:56.806 --> 00:10:58.526 A:middle
Core Data provides
many features, though,

00:10:58.686 --> 00:11:02.126 A:middle
including efficient performance,
support for chains tracking


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:10:58.686 --> 00:11:02.126 A:middle
including efficient performance,
support for chains tracking

00:11:02.236 --> 00:11:05.346 A:middle
and undo, it helps you
maintain the relationship

00:11:05.346 --> 00:11:06.916 A:middle
between those objects,
for example,

00:11:06.916 --> 00:11:08.706 A:middle
when one object is
deleted what happens

00:11:08.736 --> 00:11:10.096 A:middle
to the other related objects.

00:11:11.936 --> 00:11:14.216 A:middle
Also, as your application
evolves you're, of course,

00:11:14.216 --> 00:11:16.986 A:middle
going to add new features,
those probably require new data.

00:11:17.406 --> 00:11:18.956 A:middle
Core Data will help
you migrate that data

00:11:18.956 --> 00:11:21.906 A:middle
from one version to the next.

00:11:21.906 --> 00:11:25.886 A:middle
And support for sophisticated
queries, again, using iTunes,

00:11:26.286 --> 00:11:28.346 A:middle
for example, searching
for a particular artist,

00:11:28.346 --> 00:11:30.196 A:middle
searching for a particular
song, and so forth.

00:11:30.786 --> 00:11:33.786 A:middle
Now Core Data is, again,
another large topic.

00:11:34.076 --> 00:11:36.116 A:middle
One place to get started
is this year's What's New

00:11:36.116 --> 00:11:38.256 A:middle
in Core Data Session, also,

00:11:38.256 --> 00:11:39.716 A:middle
plenty of documentation
available

00:11:39.716 --> 00:11:40.886 A:middle
on the Developer website.

00:11:41.366 --> 00:11:45.806 A:middle
Next let's talk about
Document-Based apps.

00:11:46.146 --> 00:11:48.616 A:middle
A good example of a
Document-Based app is pages

00:11:48.776 --> 00:11:50.236 A:middle
or keynote or numbers.

00:11:50.866 --> 00:11:53.576 A:middle
So in a Document-Based
app we store user data

00:11:53.576 --> 00:11:55.216 A:middle
in a named file container.

00:11:55.686 --> 00:11:57.116 A:middle
Now notice I didn't
just say file,

00:11:57.436 --> 00:11:58.876 A:middle
that's because Cocoa
provides support

00:11:58.876 --> 00:12:00.476 A:middle
for what we call file wrappers.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:11:58.876 --> 00:12:00.476 A:middle
for what we call file wrappers.

00:12:00.836 --> 00:12:03.396 A:middle
A file wrapper allows you
to store large attachments,

00:12:03.396 --> 00:12:06.756 A:middle
for example movies, in a file
container and still appears

00:12:06.756 --> 00:12:09.666 A:middle
to the user as one file
that they can easily manage,

00:12:09.936 --> 00:12:12.306 A:middle
but it's a much more
efficient way of storing it.

00:12:13.356 --> 00:12:16.076 A:middle
Now with Document-Based apps
the documents may be local

00:12:16.076 --> 00:12:22.966 A:middle
or in iCloud, and the documents
are not generally related

00:12:22.966 --> 00:12:25.776 A:middle
to each other, in
contrast to a Shoebox app.

00:12:25.776 --> 00:12:30.736 A:middle
However, a user may be
interested in a few at a time.

00:12:30.886 --> 00:12:33.616 A:middle
Now to provide support for this
Cocoa provides what we call the

00:12:33.616 --> 00:12:34.986 A:middle
document architecture.

00:12:36.316 --> 00:12:40.266 A:middle
The document architecture
provides core features

00:12:40.346 --> 00:12:41.966 A:middle
with little or no
additional code,

00:12:42.026 --> 00:12:45.636 A:middle
and this is a fantastic
example of how building on top

00:12:45.636 --> 00:12:47.506 A:middle
of the Cocoa Frameworks
provides a way

00:12:47.506 --> 00:12:48.666 A:middle
for your app to feel modern.

00:12:48.666 --> 00:12:51.456 A:middle
For example, Auto Save and
Versions, a feature we added

00:12:51.456 --> 00:12:55.286 A:middle
in 10.7, is able to be
enabled in Document-Based apps

00:12:55.536 --> 00:12:57.336 A:middle
with very little effort,
and again we're going to see

00:12:57.336 --> 00:12:58.116 A:middle
that in a few minutes.

00:12:58.756 --> 00:13:01.636 A:middle
Also, support for iCloud,
support for asynchronous reading


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:12:58.756 --> 00:13:01.636 A:middle
Also, support for iCloud,
support for asynchronous reading

00:13:01.636 --> 00:13:04.906 A:middle
and writing, and support
for undo, among many others.

00:13:05.406 --> 00:13:07.646 A:middle
Another interesting thing

00:13:07.646 --> 00:13:10.816 A:middle
about the document architecture
is that, like much of Cocoa,

00:13:10.816 --> 00:13:12.586 A:middle
it's customizable
to your app's needs.

00:13:13.116 --> 00:13:14.226 A:middle
That means that you can choose

00:13:14.226 --> 00:13:18.686 A:middle
where in the document stack you
choose to interact with the code

00:13:18.686 --> 00:13:22.096 A:middle
with the framework and picking
a higher level lets you get more

00:13:22.096 --> 00:13:25.446 A:middle
features for free, picking a
lower level lets it be more

00:13:25.446 --> 00:13:26.996 A:middle
customizable to your
app's needs.

00:13:27.746 --> 00:13:28.726 A:middle
So, again, that's up to you,

00:13:28.996 --> 00:13:30.966 A:middle
but it's a very common pattern
you'll see across Cocoa.

00:13:31.606 --> 00:13:35.086 A:middle
Now with the document
architecture you start

00:13:35.086 --> 00:13:38.566 A:middle
by subclassing in this document,
and the job of that subclass is

00:13:38.566 --> 00:13:41.506 A:middle
to create, present and
store the document data.

00:13:41.506 --> 00:13:43.266 A:middle
Let's look at some sample code.

00:13:44.956 --> 00:13:48.076 A:middle
So here is the core
of the list document,

00:13:48.126 --> 00:13:50.106 A:middle
the class for the Lister sample,

00:13:50.106 --> 00:13:51.556 A:middle
and we're going to
write it in Swift.

00:13:52.236 --> 00:13:54.576 A:middle
So here I have subclass
NSDocument,

00:13:54.786 --> 00:13:56.496 A:middle
and my class is called
list document.

00:13:57.176 --> 00:13:58.896 A:middle
Now we need a place to
store that model data,

00:13:59.036 --> 00:14:00.916 A:middle
so here's a property I've
introduced called list,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:13:59.036 --> 00:14:00.916 A:middle
so here's a property I've
introduced called list,

00:14:00.916 --> 00:14:05.236 A:middle
that's with a lower case l, I
initialize it to an instance

00:14:05.236 --> 00:14:07.536 A:middle
of the List class,
with a capital L,

00:14:07.536 --> 00:14:08.856 A:middle
and we're passing new arguments

00:14:08.856 --> 00:14:11.296 A:middle
because that creates
a default empty list.

00:14:12.566 --> 00:14:15.276 A:middle
Now to enable Auto Save,
iCloud and Versions,

00:14:15.716 --> 00:14:19.086 A:middle
plus other features, like
title bar renaming and more,

00:14:19.216 --> 00:14:21.666 A:middle
all we need to do is
write three lines of code.

00:14:22.106 --> 00:14:24.606 A:middle
And here they are, for
overwriting a class method,

00:14:24.606 --> 00:14:27.376 A:middle
called Auto Saves In
Place, it returns a Boolean,

00:14:27.496 --> 00:14:29.666 A:middle
as you can see from the
signature, and all I need

00:14:29.666 --> 00:14:31.636 A:middle
to do is opt in by
returning true.

00:14:32.326 --> 00:14:35.336 A:middle
So, again, if you had used
NSDocument before 10.7,

00:14:35.666 --> 00:14:37.936 A:middle
when 10.7 was released
with support for Auto Save

00:14:37.936 --> 00:14:40.896 A:middle
and Versions all it would
require was just a few changes

00:14:41.116 --> 00:14:45.386 A:middle
to continue to feel modern
and fit in with the system.

00:14:45.496 --> 00:14:47.076 A:middle
Now I mentioned documents
have to be able

00:14:47.156 --> 00:14:49.486 A:middle
to handle the user's data,
as well, and we're going

00:14:49.486 --> 00:14:50.506 A:middle
to do that in two methods.

00:14:50.826 --> 00:14:52.146 A:middle
The first is called
Data of Type.

00:14:52.726 --> 00:14:53.636 A:middle
There's two arguments.

00:14:53.716 --> 00:14:56.916 A:middle
The first is a typed name, so
documents can provide support

00:14:56.916 --> 00:14:59.816 A:middle
for many kinds of documents, and
it's identified by that string,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:15:00.206 --> 00:15:02.326 A:middle
and a second is an
Out Error parameter,

00:15:02.326 --> 00:15:04.366 A:middle
so if something goes
wrong we can set that

00:15:04.366 --> 00:15:06.346 A:middle
and NSDocument will
take care of presenting

00:15:06.346 --> 00:15:07.556 A:middle
that correctly to the user.

00:15:08.536 --> 00:15:11.166 A:middle
Now the result of
this method is a data,

00:15:11.166 --> 00:15:14.956 A:middle
something if it succeeded or
nil if something went wrong.

00:15:14.956 --> 00:15:17.916 A:middle
So here's how we do it, this
is a pattern you're going

00:15:17.916 --> 00:15:20.806 A:middle
to see a lot in Swift,
the if-let pattern.

00:15:21.226 --> 00:15:23.436 A:middle
So here we're going
to use a great example

00:15:23.436 --> 00:15:27.116 A:middle
of the composability of Cocoa
classes by handing off most

00:15:27.116 --> 00:15:29.326 A:middle
of the work to a class
called Keyed Archiver.

00:15:29.756 --> 00:15:32.476 A:middle
Keyed Archiver's job is to take
a graph of objects in memory

00:15:32.746 --> 00:15:36.426 A:middle
and convert them into data
that you can then pass back

00:15:36.426 --> 00:15:38.166 A:middle
to document to serialize
to disk.

00:15:38.606 --> 00:15:40.746 A:middle
The method is called Archived
to Data with Root Object.

00:15:40.836 --> 00:15:43.666 A:middle
You can see we're passing in
our property, the list property,

00:15:44.276 --> 00:15:47.886 A:middle
and if that works we return a
data object and we assign it

00:15:47.926 --> 00:15:49.686 A:middle
to that data object
and then return it.

00:15:50.316 --> 00:15:53.046 A:middle
If not, we set the
error and return nil.

00:15:53.346 --> 00:15:55.266 A:middle
And for the full example
of how you set that out,

00:15:55.266 --> 00:15:56.916 A:middle
error parameter, I
want you to go check

00:15:56.916 --> 00:15:58.126 A:middle
out the Lister sample code,

00:15:58.126 --> 00:16:01.506 A:middle
so there's a little
bit of an incentive.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:15:58.126 --> 00:16:01.506 A:middle
so there's a little
bit of an incentive.

00:16:01.506 --> 00:16:03.586 A:middle
Now we also have to be
able to create the document

00:16:03.586 --> 00:16:06.506 A:middle
from data that's received from
the user, so again NSDocument

00:16:06.506 --> 00:16:09.506 A:middle
and app kit will take care of
presenting open panels for you

00:16:09.506 --> 00:16:10.946 A:middle
and letting the user
pick their documents,

00:16:11.206 --> 00:16:13.596 A:middle
all we need to do is convert
that data into our property.

00:16:13.886 --> 00:16:15.856 A:middle
And we do it in this
method, read from data,

00:16:15.916 --> 00:16:18.016 A:middle
and you can see we
have a data argument.

00:16:18.366 --> 00:16:20.816 A:middle
Of type, again, multiple
types is supported,

00:16:21.096 --> 00:16:22.726 A:middle
and another out error parameter.

00:16:23.566 --> 00:16:25.556 A:middle
And we return a Boolean
indicating success.

00:16:26.146 --> 00:16:29.976 A:middle
So here, again, the
companion to Keyed Archiver,

00:16:30.046 --> 00:16:32.146 A:middle
unsurprisingly called
Keyed Unarchiver,

00:16:32.636 --> 00:16:35.356 A:middle
we pass in the data using
unarchived object with data,

00:16:35.706 --> 00:16:39.996 A:middle
and we assign that result to
the de-serialized list variable,

00:16:40.166 --> 00:16:42.906 A:middle
if there's a success, and
we cast it to a list type.

00:16:42.906 --> 00:16:45.416 A:middle
And once that's done we can
assign it to our property,

00:16:45.766 --> 00:16:48.466 A:middle
remember with the lower case
l, list, and return true,

00:16:48.836 --> 00:16:50.266 A:middle
and if something
goes wrong, again,

00:16:50.346 --> 00:16:52.716 A:middle
I refer you to the sample
code to see the full method

00:16:52.716 --> 00:16:55.446 A:middle
of setting out error parameter,
and then we return false.

00:16:56.026 --> 00:17:01.126 A:middle
Now, the NSDocument architecture
has a lot more interesting


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:16:56.026 --> 00:17:01.126 A:middle
Now, the NSDocument architecture
has a lot more interesting

00:17:01.126 --> 00:17:03.156 A:middle
features that I want you
to learn about and to do

00:17:03.156 --> 00:17:06.746 A:middle
that you should check out
this session from WWDC 2011,

00:17:07.086 --> 00:17:09.096 A:middle
Auto Save and Versions
in Mac OS X Lion.

00:17:09.455 --> 00:17:12.336 A:middle
That may seem like a long time
ago, but again we keep building

00:17:12.336 --> 00:17:14.326 A:middle
on top of these features,
so by understanding

00:17:14.326 --> 00:17:16.636 A:middle
that session you'll
definitely be well prepared

00:17:16.636 --> 00:17:18.356 A:middle
for the future of
using NSDocument.

00:17:18.356 --> 00:17:22.366 A:middle
Now in the course of writing
your modern Cocoa app you're

00:17:22.366 --> 00:17:24.356 A:middle
going to encounter
plenty of other user data.

00:17:24.816 --> 00:17:27.396 A:middle
Some examples, preferences,
this is handled

00:17:27.396 --> 00:17:30.746 A:middle
in Cocoa via a class
called NS user defaults.

00:17:31.286 --> 00:17:32.296 A:middle
These can come in many forms,

00:17:32.296 --> 00:17:34.736 A:middle
but the two most common are
application preferences.

00:17:35.086 --> 00:17:37.376 A:middle
For example, in my
directions app I had a use bike

00:17:37.376 --> 00:17:38.236 A:middle
route checkbox.

00:17:38.546 --> 00:17:40.326 A:middle
If I want to preserve
that between launches

00:17:40.326 --> 00:17:42.216 A:middle
of the application then
that might be something

00:17:42.216 --> 00:17:44.766 A:middle
that I can store there and
then retrieve at a later time.

00:17:45.776 --> 00:17:47.026 A:middle
And also system preferences,

00:17:47.246 --> 00:17:49.086 A:middle
this includes the
user's preferred language

00:17:49.366 --> 00:17:50.536 A:middle
and their preferred locale.

00:17:51.106 --> 00:17:53.746 A:middle
Locale controls things like
how dates, times, numbers

00:17:53.746 --> 00:17:57.376 A:middle
and currencies are formatted,
and again in another example

00:17:57.376 --> 00:17:58.196 A:middle
of the composability

00:17:58.196 --> 00:18:00.786 A:middle
of the Cocoa classes we
provide great support


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:17:58.196 --> 00:18:00.786 A:middle
of the Cocoa classes we
provide great support

00:18:00.786 --> 00:18:03.636 A:middle
for these via a set of
classes called formatters.

00:18:04.216 --> 00:18:07.716 A:middle
If you interact with the
network, of course, you're going

00:18:07.716 --> 00:18:10.366 A:middle
to use NS URL session
and a suite

00:18:10.366 --> 00:18:11.476 A:middle
of classes related to that.

00:18:13.116 --> 00:18:15.026 A:middle
There's also the
iCloud key value store.

00:18:15.346 --> 00:18:17.636 A:middle
This is handled via NS
ubiquitous key value store.

00:18:18.146 --> 00:18:21.176 A:middle
Now in contrast to
the local preferences,

00:18:21.176 --> 00:18:23.856 A:middle
these ones are available
on all iCloud devices,

00:18:24.066 --> 00:18:25.836 A:middle
and it's appropriate for
small amounts of data.

00:18:26.256 --> 00:18:28.796 A:middle
So when you're deciding where
to store that preference think

00:18:28.796 --> 00:18:30.336 A:middle
about where you want
it to be available

00:18:30.476 --> 00:18:32.416 A:middle
and that's how you can
decide between those two.

00:18:32.966 --> 00:18:37.116 A:middle
And, of course, new in
Yosemite and iOS8 is Cloud Kit,

00:18:37.276 --> 00:18:38.676 A:middle
another large topic
that we've had lots

00:18:38.676 --> 00:18:42.296 A:middle
of good sessions
about this week.

00:18:42.516 --> 00:18:45.826 A:middle
So now we've seen a lot
of the basic functionality

00:18:45.826 --> 00:18:47.086 A:middle
of the Cocoa Frameworks.

00:18:47.416 --> 00:18:48.916 A:middle
I'd like to invite
my colleague, Alex,

00:18:48.916 --> 00:18:51.226 A:middle
up on stage to show us
how we can get started

00:18:51.226 --> 00:18:52.996 A:middle
with these in our Lister sample.

00:18:53.396 --> 00:18:53.766 A:middle
Alex?

00:18:59.796 --> 00:19:00.266 A:middle
&gt;&gt; Good morning.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:18:59.796 --> 00:19:00.266 A:middle
&gt;&gt; Good morning.

00:19:01.356 --> 00:19:04.526 A:middle
Developing Cocoa apps is easier
than ever with our modern tools

00:19:04.526 --> 00:19:06.346 A:middle
and great APIs, so what I'd

00:19:06.346 --> 00:19:09.046 A:middle
like to do now is implement
a few features of Lister

00:19:09.046 --> 00:19:11.806 A:middle
to show you how you
can leverage tools,

00:19:11.806 --> 00:19:13.746 A:middle
like Interface Builder,
in your own apps.

00:19:15.036 --> 00:19:17.726 A:middle
So I already have Lister
open, and I've opened it

00:19:17.726 --> 00:19:19.156 A:middle
up right to the Storyboard.

00:19:19.496 --> 00:19:21.936 A:middle
And you can see two main
controllers in the scene.

00:19:22.436 --> 00:19:25.686 A:middle
The first is this window
controller on the left,

00:19:26.536 --> 00:19:29.326 A:middle
and you can also see
this view controller

00:19:29.436 --> 00:19:30.466 A:middle
at the bottom right, here.

00:19:31.176 --> 00:19:33.186 A:middle
Now the view controller
on the right is going

00:19:33.186 --> 00:19:35.026 A:middle
to manage both the list's color,

00:19:35.026 --> 00:19:37.606 A:middle
as well as the items
within the list.

00:19:38.216 --> 00:19:40.506 A:middle
So let's take a look
and see what this looks

00:19:40.506 --> 00:19:41.976 A:middle
like when we run the app.

00:19:43.986 --> 00:19:50.416 A:middle
So you can see the same sample
that Tony showed you earlier.

00:19:50.766 --> 00:19:52.516 A:middle
We have this plus
button at the top left,

00:19:52.516 --> 00:19:54.336 A:middle
but we haven't implemented
that yet,

00:19:54.376 --> 00:19:56.546 A:middle
and we'll get back
to that in a minute.

00:19:56.926 --> 00:19:58.316 A:middle
You can also see the list here.

00:19:59.906 --> 00:20:01.606 A:middle
We also give the
user the ability


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:19:59.906 --> 00:20:01.606 A:middle
We also give the
user the ability

00:20:01.606 --> 00:20:04.036 A:middle
to select a color for the list.

00:20:04.036 --> 00:20:06.426 A:middle
Now it's really nice
now, but what happens

00:20:06.426 --> 00:20:08.946 A:middle
when we scale the window?

00:20:08.946 --> 00:20:13.296 A:middle
You'll notice that the
buttons aren't sitting flush

00:20:13.296 --> 00:20:14.446 A:middle
on the right side of the window.

00:20:15.376 --> 00:20:18.056 A:middle
Don't worry, we're going to
fix that with Auto Layout,

00:20:18.266 --> 00:20:20.066 A:middle
so let's see how we can do that.

00:20:21.296 --> 00:20:25.716 A:middle
So we'll quit Lister,
we'll go back into Xcode.

00:20:26.816 --> 00:20:29.846 A:middle
Now the first thing that I want
to do is set-up a constraint

00:20:30.146 --> 00:20:33.246 A:middle
between this far left button
and the custom view on the left.

00:20:33.906 --> 00:20:36.176 A:middle
Now, to do that I'm
going to click the button

00:20:36.176 --> 00:20:39.566 A:middle
and then control drag from
the button to the view.

00:20:39.956 --> 00:20:43.216 A:middle
And you'll see Xcode gives
me a few different options

00:20:43.216 --> 00:20:45.006 A:middle
of different constraints
that I can set.

00:20:45.136 --> 00:20:47.226 A:middle
So the first constraint
that I want

00:20:47.226 --> 00:20:50.626 A:middle
to set is a horizontal spacing
constraint, that makes sure

00:20:50.626 --> 00:20:54.516 A:middle
that the distance between
these two views are consistent.

00:20:55.986 --> 00:20:58.516 A:middle
Now I want to do the same
thing for the other views

00:20:58.516 --> 00:21:01.026 A:middle
on the right, but I'm going to
take a short cut, so I'm going


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:20:58.516 --> 00:21:01.026 A:middle
on the right, but I'm going to
take a short cut, so I'm going

00:21:01.026 --> 00:21:05.976 A:middle
to click all of these buttons,
and then I'm going to go

00:21:05.976 --> 00:21:07.116 A:middle
down to the bottom right,

00:21:07.116 --> 00:21:10.116 A:middle
and we'll click this
button down there.

00:21:10.726 --> 00:21:13.386 A:middle
And you'll notice that
I can pin the width

00:21:13.636 --> 00:21:17.506 A:middle
between these different
views all together

00:21:17.506 --> 00:21:21.566 A:middle
at the same time based on
the neighbor for these views.

00:21:21.966 --> 00:21:24.576 A:middle
So I want to pin the
distance between each view

00:21:24.576 --> 00:21:26.636 A:middle
and its closest neighbor
to the left.

00:21:27.886 --> 00:21:31.496 A:middle
Now all I have to do is click
the Add Five constraints button

00:21:31.496 --> 00:21:36.286 A:middle
at the bottom, and all of
these constraints are set.

00:21:36.796 --> 00:21:38.746 A:middle
Now another constraint
that I want to set is

00:21:38.746 --> 00:21:41.156 A:middle
between the right button
here and its super view.

00:21:41.306 --> 00:21:43.746 A:middle
I want to make sure that the
space here is consistent.

00:21:43.746 --> 00:21:48.876 A:middle
Now sometimes it's
actually easier

00:21:48.876 --> 00:21:51.766 A:middle
to use the document
editor here, so what I want

00:21:51.766 --> 00:21:55.716 A:middle
to do is select this right
button and then control drag

00:21:55.716 --> 00:21:57.506 A:middle
from the button to
its super view,

00:21:57.846 --> 00:22:00.356 A:middle
which you could see is the
color palette view here.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:21:57.846 --> 00:22:00.356 A:middle
which you could see is the
color palette view here.

00:22:01.046 --> 00:22:02.736 A:middle
And the constraint that I want

00:22:02.736 --> 00:22:05.246 A:middle
to set here is the
trailing space to make sure

00:22:05.246 --> 00:22:08.566 A:middle
that the space after the
right edge of the view

00:22:08.946 --> 00:22:10.606 A:middle
to its super view is consistent.

00:22:13.436 --> 00:22:15.916 A:middle
The final constraint
that I want to set on all

00:22:15.916 --> 00:22:18.996 A:middle
of these views is a vertical
alignment constraint.

00:22:18.996 --> 00:22:20.156 A:middle
I want to make sure that all

00:22:20.156 --> 00:22:22.616 A:middle
of these buttons are vertically
aligned within its container.

00:22:23.616 --> 00:22:26.526 A:middle
Now to do that all I
have to do is click all

00:22:26.526 --> 00:22:34.106 A:middle
of these buttons again, and
then go to the editor menu item,

00:22:34.836 --> 00:22:38.866 A:middle
I'll click align, and then
vertical center and container.

00:22:39.116 --> 00:22:41.996 A:middle
So it's that easy to
center all those buttons

00:22:42.116 --> 00:22:44.716 A:middle
within its super view.

00:22:45.536 --> 00:22:47.096 A:middle
Now the final constraint
that I want

00:22:47.096 --> 00:22:48.876 A:middle
to set here is on
the custom view.

00:22:49.716 --> 00:22:52.356 A:middle
Now I want to make sure
that the custom view takes

00:22:52.356 --> 00:22:54.906 A:middle
up the full amount of
space on the left side.

00:22:55.396 --> 00:22:57.666 A:middle
Now, to do that I'm going
to set up three constraints.

00:22:58.206 --> 00:23:04.316 A:middle
The first constraint is the top
space between, in its container,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:22:58.206 --> 00:23:04.316 A:middle
The first constraint is the top
space between, in its container,

00:23:04.796 --> 00:23:07.296 A:middle
the bottom space and
the leading space.

00:23:08.046 --> 00:23:10.846 A:middle
Now to do that I'm going to
control drag from the view

00:23:11.616 --> 00:23:15.516 A:middle
to its superview, which is
the color palette view again,

00:23:15.516 --> 00:23:16.416 A:middle
you see here.

00:23:17.166 --> 00:23:21.436 A:middle
Now Xcode lets me easily
select more than one constraint

00:23:21.666 --> 00:23:24.236 A:middle
by just holding shift when
I click these constraints,

00:23:24.696 --> 00:23:26.516 A:middle
so I'm going to set
the leading space,

00:23:26.866 --> 00:23:29.926 A:middle
the top space, and
the bottom space.

00:23:30.556 --> 00:23:34.116 A:middle
And when I click away all of
these constraints will be set.

00:23:35.246 --> 00:23:36.786 A:middle
So now that we've set
up our constraints,

00:23:36.856 --> 00:23:43.886 A:middle
let's run the app
and see what we have.

00:23:44.076 --> 00:23:47.026 A:middle
So you'll notice now that when
I resized the window we have

00:23:47.026 --> 00:23:48.126 A:middle
exactly what we want.

00:23:48.186 --> 00:23:51.366 A:middle
The buttons at the top right
are pinned to the right side

00:23:51.366 --> 00:23:54.856 A:middle
of the window, but what happens
when we make the window narrow?

00:23:56.116 --> 00:23:58.426 A:middle
You'll notice two interesting
things going on here.

00:23:58.956 --> 00:24:01.096 A:middle
The first is that
the window is taking


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:23:58.956 --> 00:24:01.096 A:middle
The first is that
the window is taking

00:24:01.096 --> 00:24:03.936 A:middle
on the minimum window size
based on the constraints

00:24:03.936 --> 00:24:05.596 A:middle
that we've set in the view.

00:24:06.176 --> 00:24:08.446 A:middle
Because we've set each
button to be a fixed width

00:24:08.446 --> 00:24:11.076 A:middle
and we've set each
distance between the button

00:24:11.076 --> 00:24:15.996 A:middle
to be a fixed width the minimum
size of the window is the sum

00:24:15.996 --> 00:24:16.976 A:middle
of all of those widths.

00:24:18.146 --> 00:24:20.716 A:middle
But we actually want
the color of the list

00:24:20.756 --> 00:24:21.816 A:middle
to always be displayed.

00:24:21.816 --> 00:24:25.506 A:middle
Now to do that we want to set
up a new type of constraint,

00:24:25.946 --> 00:24:28.066 A:middle
so let's go back into
Interface Builder

00:24:28.326 --> 00:24:29.806 A:middle
and see how to implement that.

00:24:29.806 --> 00:24:35.526 A:middle
So I'm going to close
Lister, open Xcode back up.

00:24:36.496 --> 00:24:38.376 A:middle
Now I want to set
another constraint

00:24:38.376 --> 00:24:39.916 A:middle
on this custom view here.

00:24:40.996 --> 00:24:42.196 A:middle
The first thing that I'm going

00:24:42.196 --> 00:24:46.026 A:middle
to do is create a
pinned width constraint.

00:24:46.026 --> 00:24:50.336 A:middle
So I'm going to go to editor,
pin, and then select width,

00:24:50.816 --> 00:24:56.156 A:middle
and you'll see now the width
constraint is right here

00:24:56.156 --> 00:24:57.116 A:middle
in the document editor.

00:24:58.006 --> 00:25:01.646 A:middle
Well, we don't want the width
to be fixed for the color


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:24:58.006 --> 00:25:01.646 A:middle
Well, we don't want the width
to be fixed for the color

00:25:01.646 --> 00:25:03.916 A:middle
of the list, we want it
to be, we want it to grow

00:25:03.916 --> 00:25:05.936 A:middle
as you resize the window.

00:25:06.616 --> 00:25:09.256 A:middle
And to do that let's modify
some of the attributes

00:25:09.476 --> 00:25:12.256 A:middle
of this constraint
in the utility area.

00:25:15.916 --> 00:25:18.956 A:middle
So you'll see that we
have the item that we want

00:25:18.956 --> 00:25:21.806 A:middle
to have the constraint on and we
also have this relation option.

00:25:22.226 --> 00:25:25.096 A:middle
Now we want to make the relation
greater than or equal to,

00:25:25.096 --> 00:25:29.286 A:middle
to make sure that the width
of that view is greater than

00:25:29.286 --> 00:25:33.786 A:middle
or equal to a certain number of
points, which is the constant.

00:25:33.976 --> 00:25:36.636 A:middle
And I already know that
the constant that I want

00:25:36.636 --> 00:25:40.346 A:middle
for this app is around
125 points.

00:25:40.926 --> 00:25:50.756 A:middle
So now when we run the app and
we shrink the window you'll see

00:25:50.756 --> 00:25:53.286 A:middle
that you can still
see the list color

00:25:53.676 --> 00:25:57.946 A:middle
and the window still takes
the size of the window based

00:25:57.946 --> 00:25:59.756 A:middle
on the constraints that
are set within the view,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:26:00.266 --> 00:26:03.726 A:middle
so it's that easy to
set up these constraints

00:26:03.846 --> 00:26:05.956 A:middle
in Interface Builder,
to make sure

00:26:05.956 --> 00:26:08.696 A:middle
that your views respond
accordingly

00:26:08.696 --> 00:26:10.166 A:middle
when the window size changes.

00:26:10.936 --> 00:26:13.406 A:middle
Now let's take a look at another
feature of Interface Builder,

00:26:13.856 --> 00:26:16.756 A:middle
called Storyboards, to
implement that plus button

00:26:16.756 --> 00:26:17.786 A:middle
that we talked about earlier.

00:26:18.586 --> 00:26:23.006 A:middle
So I'm going to close Lister,
and go back right into Xcode.

00:26:23.616 --> 00:26:25.576 A:middle
Now the first thing that I want

00:26:25.576 --> 00:26:28.206 A:middle
to do here is create a view
controller that's going

00:26:28.206 --> 00:26:30.566 A:middle
to be presented when I
click the plus button.

00:26:31.046 --> 00:26:33.876 A:middle
Now to do that I'm going to
go into the object library

00:26:34.436 --> 00:26:36.976 A:middle
and you'll notice the
view controller here.

00:26:37.226 --> 00:26:40.326 A:middle
And all I have to do is
drag the view controller

00:26:40.366 --> 00:26:41.526 A:middle
out into the scene.

00:26:43.226 --> 00:26:46.346 A:middle
Now I know that -- I already
know the size of the view

00:26:46.346 --> 00:26:48.146 A:middle
that I want to present,
so I'm going to go back

00:26:48.146 --> 00:26:50.916 A:middle
into the document
editor, select the view,

00:26:51.256 --> 00:26:55.416 A:middle
and then modify its
width and height.

00:26:55.486 --> 00:27:01.516 A:middle
And I know I want it to be 275
points wide by 75 points tall.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:26:55.486 --> 00:27:01.516 A:middle
And I know I want it to be 275
points wide by 75 points tall.

00:27:02.436 --> 00:27:05.116 A:middle
Now we need to have some
content in this view,

00:27:05.506 --> 00:27:08.936 A:middle
so let's add a text field to let
the user enter in what they want

00:27:08.936 --> 00:27:10.176 A:middle
to include for this item.

00:27:10.176 --> 00:27:14.396 A:middle
So I'm going to go back
into the object library

00:27:15.126 --> 00:27:22.156 A:middle
and drag a text field into the
view controller, into the view.

00:27:22.356 --> 00:27:26.356 A:middle
Now I want this text field
to be the size of the view.

00:27:26.936 --> 00:27:30.456 A:middle
And, finally, I'll
add a label, as well,

00:27:30.456 --> 00:27:34.856 A:middle
to tell the user what kind of
information they're entering.

00:27:35.426 --> 00:27:39.236 A:middle
So we want to make sure
that this label is centered,

00:27:39.826 --> 00:27:44.106 A:middle
and we'll give it a title
of create list item,

00:27:45.226 --> 00:27:51.826 A:middle
and we'll also add a
placeholder to the text field,

00:27:52.076 --> 00:27:55.936 A:middle
which is pizza for Joe.

00:27:55.936 --> 00:28:00.836 A:middle
All right, so I've already
implemented a subclass


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:27:55.936 --> 00:28:00.836 A:middle
All right, so I've already
implemented a subclass

00:28:00.836 --> 00:28:05.306 A:middle
of NS view controller
that handles the event

00:28:05.306 --> 00:28:06.666 A:middle
when the text field changes

00:28:06.666 --> 00:28:09.756 A:middle
and it's only implementing
one method, but what I want

00:28:09.756 --> 00:28:11.846 A:middle
to do is make sure
that we set the class

00:28:11.846 --> 00:28:13.576 A:middle
for this view controller
that we just created.

00:28:13.576 --> 00:28:16.486 A:middle
And to do that I'm going to
go back into the utility area

00:28:17.416 --> 00:28:19.966 A:middle
and set the class for
this view controller,

00:28:20.306 --> 00:28:23.296 A:middle
and it's an add item
view controller.

00:28:24.826 --> 00:28:27.766 A:middle
Now we want to make sure the
text field sends the right event

00:28:28.166 --> 00:28:31.026 A:middle
to the view controller,
so to do that I'm going

00:28:31.026 --> 00:28:35.226 A:middle
to click the text field and then
control drag from the text field

00:28:35.636 --> 00:28:36.546 A:middle
to the view controller.

00:28:37.156 --> 00:28:41.896 A:middle
And you'll notice that there's
a received actions list here,

00:28:42.236 --> 00:28:44.236 A:middle
so the method that I've
implemented is called

00:28:44.236 --> 00:28:45.016 A:middle
text changed.

00:28:45.716 --> 00:28:49.116 A:middle
This is going to fire when the
user finishes entering text

00:28:49.496 --> 00:28:52.466 A:middle
within the text field, and so
that's the action that I want.

00:28:52.466 --> 00:29:00.056 A:middle
So now that we've hooked up this
view controller and the content


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:28:52.466 --> 00:29:00.056 A:middle
So now that we've hooked up this
view controller and the content

00:29:00.056 --> 00:29:02.236 A:middle
within this view
controller we want

00:29:02.236 --> 00:29:03.936 A:middle
to actually present
this view controller

00:29:03.936 --> 00:29:06.766 A:middle
when we click the plus button,
so to do that we're going

00:29:06.766 --> 00:29:09.286 A:middle
to use Storyboards and a segway.

00:29:10.456 --> 00:29:12.766 A:middle
So what I want to do
is go into the toolbar

00:29:13.606 --> 00:29:15.946 A:middle
and find the add item,
which is the plus button,

00:29:17.246 --> 00:29:21.576 A:middle
which you'll see here, and
I want to drag from the --

00:29:21.576 --> 00:29:23.356 A:middle
control drag from
the plus button

00:29:23.936 --> 00:29:26.126 A:middle
to this view controller
that we just created.

00:29:26.126 --> 00:29:29.816 A:middle
And you'll notice that we
get a few different options

00:29:29.816 --> 00:29:31.806 A:middle
for the types of segways
that we want to perform,

00:29:31.806 --> 00:29:34.926 A:middle
and in this case we want to
perform a popover segway.

00:29:35.576 --> 00:29:40.016 A:middle
And you'll see that when you
create the popover segway Xcode

00:29:40.016 --> 00:29:42.296 A:middle
lets you know that
it's a popover

00:29:42.356 --> 00:29:42.976 A:middle
with this nice icon here.

00:29:43.076 --> 00:29:47.566 A:middle
So now that we've
set up the segway,

00:29:47.566 --> 00:29:49.636 A:middle
we've set up the view
controller, let's run the app

00:29:49.716 --> 00:29:50.936 A:middle
and see how this works.

00:29:56.576 --> 00:29:58.976 A:middle
So I already know the
type of list I want,

00:29:58.976 --> 00:30:00.936 A:middle
I'm going to have a
party later and I want


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:29:58.976 --> 00:30:00.936 A:middle
I'm going to have a
party later and I want

00:30:00.936 --> 00:30:01.846 A:middle
to invite some people.

00:30:01.976 --> 00:30:04.846 A:middle
So the first person that
I'm going to invite is Tony,

00:30:05.526 --> 00:30:10.106 A:middle
so the popover showed
which is great.

00:30:10.296 --> 00:30:13.936 A:middle
And I think Craig is going to
be a little bit more relaxed now

00:30:13.936 --> 00:30:15.986 A:middle
after the keynote, so
I'll also invite Craig.

00:30:16.786 --> 00:30:23.786 A:middle
And Tim is finished, as well,
so we'll invite Tim, too.

00:30:24.896 --> 00:30:26.596 A:middle
So now that we've seen
how Storyboards work

00:30:27.626 --> 00:30:30.426 A:middle
and Auto Layout, I want to
hand it back to Tony to talk

00:30:30.426 --> 00:30:32.766 A:middle
about some more advanced
features of Cocoa.

00:30:36.736 --> 00:30:37.216 A:middle
&gt;&gt; Thanks, Alex.

00:30:37.436 --> 00:30:42.466 A:middle
Okay, let's talk about some
more features of Cocoa,

00:30:42.666 --> 00:30:44.296 A:middle
and we're going to put
a particular emphasis

00:30:44.296 --> 00:30:47.276 A:middle
on how they can, how adopting
these can make your app feel

00:30:47.276 --> 00:30:47.866 A:middle
more modern.

00:30:48.876 --> 00:30:50.946 A:middle
So first up is Auto
Localization.

00:30:51.306 --> 00:30:54.196 A:middle
Now if the auto part sounds
familiar that's because,

00:30:54.196 --> 00:30:56.686 A:middle
of course, it is built
on top of Auto Layout.

00:30:57.346 --> 00:31:00.956 A:middle
Auto Localization lets you share
the same UI design of your app,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:30:57.346 --> 00:31:00.956 A:middle
Auto Localization lets you share
the same UI design of your app,

00:31:01.366 --> 00:31:05.066 A:middle
but simply replace the strings
when the content changes due

00:31:05.066 --> 00:31:06.276 A:middle
to having a new language.

00:31:07.686 --> 00:31:09.386 A:middle
And the job of Auto
Localization is

00:31:09.386 --> 00:31:11.506 A:middle
to resize the views
appropriately

00:31:11.816 --> 00:31:13.516 A:middle
when words are of
different lengths.

00:31:14.426 --> 00:31:16.966 A:middle
And another great feature
about Auto Localization is

00:31:16.966 --> 00:31:18.536 A:middle
that it supports
both left to right

00:31:18.886 --> 00:31:20.406 A:middle
and right to left languages.

00:31:21.446 --> 00:31:23.816 A:middle
So here, again, is our
directions application,

00:31:24.146 --> 00:31:26.066 A:middle
and let's imagine that
you're responsible for this,

00:31:26.066 --> 00:31:28.676 A:middle
and you're sitting in your
office one day just minding your

00:31:28.676 --> 00:31:31.546 A:middle
own business when your Marketing
person just runs in and says,

00:31:31.866 --> 00:31:34.186 A:middle
hey, we absolutely need
to support a new language,

00:31:34.186 --> 00:31:36.536 A:middle
it's the next hot thing,
and it's Pig Latin.

00:31:36.646 --> 00:31:40.536 A:middle
And, of course, in Pig Latin
all of the words get longer,

00:31:40.666 --> 00:31:43.636 A:middle
so you may think that you
have to go into your UI

00:31:43.636 --> 00:31:45.406 A:middle
and resize all of
these controls manually

00:31:45.406 --> 00:31:48.286 A:middle
to accommodate the new
lengths and also the rules

00:31:48.286 --> 00:31:49.486 A:middle
that we were provided earlier.

00:31:49.986 --> 00:31:51.706 A:middle
But with Auto Localization
all we need

00:31:51.706 --> 00:31:55.556 A:middle
to do is provide the new strings
and Auto Localization takes care

00:31:55.556 --> 00:32:00.156 A:middle
of resizing the controls
as you would expect.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:31:55.556 --> 00:32:00.156 A:middle
of resizing the controls
as you would expect.

00:32:00.156 --> 00:32:03.056 A:middle
Now after you pat yourself
on the back for accomplishing

00:32:03.086 --> 00:32:06.356 A:middle
that pretty easily, that person
runs back into your office

00:32:06.356 --> 00:32:08.836 A:middle
and says the next big language

00:32:08.836 --> 00:32:10.886 A:middle
after Pig Latin is
right to left Pig Latin.

00:32:10.886 --> 00:32:15.436 A:middle
Now that one seems even more
complicated because, of course,

00:32:15.436 --> 00:32:18.346 A:middle
in right to left the actual
location of those controls

00:32:18.346 --> 00:32:20.176 A:middle
in the window is
going to change.

00:32:20.516 --> 00:32:22.926 A:middle
But, again, Auto Localization
can handle that for you,

00:32:23.146 --> 00:32:25.626 A:middle
so you insert the new
strings and here you go,

00:32:25.846 --> 00:32:26.976 A:middle
right to left Pig Latin.

00:32:27.546 --> 00:32:29.096 A:middle
Now you'll notice that
even system controls,

00:32:29.096 --> 00:32:32.556 A:middle
like the map view there,
knew to reverse the direction

00:32:32.556 --> 00:32:36.136 A:middle
or the location of controls,
like the 3D button and the plus

00:32:36.136 --> 00:32:38.126 A:middle
and minus, and also
we've taken care

00:32:38.126 --> 00:32:42.206 A:middle
of putting the use bike route
checkbox on the same control,

00:32:42.206 --> 00:32:44.256 A:middle
but now it's on the other side.

00:32:45.166 --> 00:32:47.446 A:middle
So Auto Localization can
save you a lot of time

00:32:47.746 --> 00:32:49.396 A:middle
when localizing your
application.

00:32:49.976 --> 00:32:52.446 A:middle
Now to understand how it
works let's take a look

00:32:52.446 --> 00:32:54.406 A:middle
at what an application
bundle layout looks like.

00:32:55.226 --> 00:32:58.286 A:middle
So here is Lister.app, inside
there you'll find contents

00:32:58.286 --> 00:33:01.956 A:middle
and resources, and there a
set of directors called lprojs


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:32:58.286 --> 00:33:01.956 A:middle
and resources, and there a
set of directors called lprojs

00:33:01.956 --> 00:33:03.296 A:middle
or localized project content.

00:33:04.056 --> 00:33:07.706 A:middle
One of them is called
base.lproj, this is the UI

00:33:08.206 --> 00:33:10.446 A:middle
and the development
language of your application,

00:33:10.446 --> 00:33:13.526 A:middle
so Lister is developed
in English, so this file,

00:33:13.526 --> 00:33:15.996 A:middle
main.Storyboardc is
the compiled Storyboard

00:33:15.996 --> 00:33:17.436 A:middle
that contains not only the views

00:33:17.436 --> 00:33:18.896 A:middle
and controllers we've
already talked about,

00:33:18.896 --> 00:33:20.116 A:middle
but the English strings.

00:33:21.426 --> 00:33:23.636 A:middle
Now if we localize
Lister into, for example,

00:33:23.636 --> 00:33:28.356 A:middle
Spanish then we provide
another lproj, called es.lproj

00:33:28.666 --> 00:33:30.336 A:middle
and a main.strings file

00:33:30.606 --> 00:33:33.016 A:middle
that just contains a
mapping to Spanish strings.

00:33:33.406 --> 00:33:35.846 A:middle
Now Xcode takes care of actually
creating these lproj directories

00:33:35.846 --> 00:33:38.156 A:middle
for you when you build your
project, so really we just need

00:33:38.156 --> 00:33:39.526 A:middle
to focus on the strings file.

00:33:40.206 --> 00:33:41.766 A:middle
The content of these
files is really simple,

00:33:42.156 --> 00:33:43.816 A:middle
it's a simple key value pairing.

00:33:44.286 --> 00:33:48.616 A:middle
So in the case of the directions
app you can see here we're

00:33:48.616 --> 00:33:51.396 A:middle
pairing an identifier
with the new label,

00:33:51.396 --> 00:33:54.836 A:middle
and the identifier comes from
Xcode, so you can find it here

00:33:55.316 --> 00:33:59.786 A:middle
in the Interface Builder user
interface, and the identifier

00:33:59.846 --> 00:34:02.806 A:middle
and the title is what we're
specifically referring to,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:33:59.846 --> 00:34:02.806 A:middle
and the title is what we're
specifically referring to,

00:34:03.256 --> 00:34:06.426 A:middle
and then we provide the
localized string and then repeat

00:34:06.426 --> 00:34:08.795 A:middle
that for the other strings
that are in your application.

00:34:09.266 --> 00:34:14.505 A:middle
Let's move on to a new
topic, and that is Handoff.

00:34:14.696 --> 00:34:17.846 A:middle
So this is, of course, another
new feature in Yosemite in iOS 8

00:34:17.846 --> 00:34:20.146 A:middle
that allows a user to
start working on one device

00:34:20.146 --> 00:34:21.696 A:middle
and continue it on another.

00:34:21.786 --> 00:34:24.235 A:middle
And the reason I'm talking
about it today is, again,

00:34:24.235 --> 00:34:26.636 A:middle
because it's another great
example of how building on top

00:34:26.636 --> 00:34:30.666 A:middle
of Cocoa features allows you to
easily adopt the new features

00:34:30.666 --> 00:34:31.876 A:middle
that come along in the OS.

00:34:32.446 --> 00:34:34.766 A:middle
For Handoff, if you've built
your application on top

00:34:34.766 --> 00:34:38.536 A:middle
of NSDocument then it requires
very little work on your part

00:34:38.536 --> 00:34:39.716 A:middle
to enable the feature.

00:34:39.746 --> 00:34:41.436 A:middle
In fact, it's really
only a small amount

00:34:41.436 --> 00:34:42.406 A:middle
of code in those cases.

00:34:43.136 --> 00:34:46.936 A:middle
And, in fact, for NSDocument all
it really requires is editing a

00:34:46.936 --> 00:34:48.146 A:middle
file called InfoPlist.

00:34:48.146 --> 00:34:50.826 A:middle
If you're not familiar with
it, the InfoPlist is a file

00:34:50.826 --> 00:34:52.755 A:middle
in the contents of
your application

00:34:53.016 --> 00:34:55.416 A:middle
that tells the system a lot
of the critical information

00:34:55.416 --> 00:34:57.406 A:middle
about your app, like
your app's name

00:34:57.406 --> 00:34:58.696 A:middle
and its version number
and so forth.

00:34:59.056 --> 00:35:01.536 A:middle
It also contains an
array of document types.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:34:59.056 --> 00:35:01.536 A:middle
It also contains an
array of document types.

00:35:01.686 --> 00:35:04.396 A:middle
I mentioned earlier the
Document-Based apps can support

00:35:04.396 --> 00:35:05.566 A:middle
multiple kinds of documents.

00:35:06.346 --> 00:35:08.496 A:middle
This array of dictionaries
is where you specify that,

00:35:08.496 --> 00:35:12.136 A:middle
and inside there there's a new
key called NSUbiquitousDocument

00:35:12.136 --> 00:35:16.096 A:middle
UserActivityType, it's a
string, and that identifier

00:35:16.096 --> 00:35:20.056 A:middle
on the right is how Handoff
uniquely identifies this

00:35:20.056 --> 00:35:22.576 A:middle
document type in coordination
with your application.

00:35:23.456 --> 00:35:26.986 A:middle
So if a user has a
document in iCloud

00:35:27.216 --> 00:35:29.476 A:middle
and you've entered this
key in the InfoPlist

00:35:29.476 --> 00:35:32.056 A:middle
and your document-based Handoff
support is already enabled

00:35:32.056 --> 00:35:33.076 A:middle
for you.

00:35:34.276 --> 00:35:36.426 A:middle
Now, again, like
NSDocument, itself,

00:35:36.656 --> 00:35:39.246 A:middle
Handoff provides a lower
level API, so you can choose

00:35:39.246 --> 00:35:42.026 A:middle
where to customize the
behavior of the Cocoa Frameworks

00:35:42.026 --> 00:35:43.486 A:middle
when you build your Cocoa app.

00:35:44.026 --> 00:35:46.926 A:middle
That lower level API is
called NSUserActivity,

00:35:47.156 --> 00:35:49.666 A:middle
and it allows you to do things,
like Handoff from a native app

00:35:49.666 --> 00:35:51.506 A:middle
to a web app or vice-versa,

00:35:51.646 --> 00:35:54.296 A:middle
you can provide additional
state beyond just the content

00:35:54.336 --> 00:35:57.006 A:middle
of the document, for
example, maybe the location

00:35:57.006 --> 00:35:58.636 A:middle
that the user was looking
at in that document,

00:35:58.816 --> 00:36:00.476 A:middle
although if you do that
you should be aware


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:35:58.816 --> 00:36:00.476 A:middle
although if you do that
you should be aware

00:36:00.476 --> 00:36:03.936 A:middle
that on different devices the
document may be differently

00:36:03.936 --> 00:36:05.306 A:middle
sized on screen, so
you want to think

00:36:05.306 --> 00:36:06.436 A:middle
about the logical location,

00:36:06.436 --> 00:36:09.026 A:middle
not like a scroll
position in points.

00:36:09.886 --> 00:36:11.386 A:middle
And you can also
even do something

00:36:11.386 --> 00:36:13.486 A:middle
like send custom
data using streams.

00:36:13.486 --> 00:36:15.506 A:middle
So there's a lot more
information about Handoff,

00:36:15.506 --> 00:36:20.866 A:middle
and it was in a session earlier
this week, Adopting Handoff

00:36:20.866 --> 00:36:23.266 A:middle
on iOS and OS X, and if
you missed that, again,

00:36:23.536 --> 00:36:24.496 A:middle
check that out on video.

00:36:25.726 --> 00:36:30.046 A:middle
Now let's move on to another
topic, and that's Sharing.

00:36:30.496 --> 00:36:33.186 A:middle
So Sharing provides a way to
share with social networks,

00:36:33.186 --> 00:36:35.006 A:middle
for example Twitter, Facebook,

00:36:35.206 --> 00:36:37.036 A:middle
and more that maybe
you don't know about

00:36:37.036 --> 00:36:38.096 A:middle
or are coming in the future.

00:36:38.296 --> 00:36:40.536 A:middle
And one of the greatest
things about this feature is

00:36:40.536 --> 00:36:42.376 A:middle
that it provides single
sign-on support for you,

00:36:42.496 --> 00:36:43.896 A:middle
so you don't have to worry
about authentication,

00:36:44.216 --> 00:36:48.966 A:middle
storing user password securely,
changing APIs of services or,

00:36:48.966 --> 00:36:50.966 A:middle
again, new ones that
come along or old ones

00:36:50.966 --> 00:36:51.826 A:middle
that fall out of favor.

00:36:52.116 --> 00:36:53.396 A:middle
We can handle all that for you.

00:36:53.396 --> 00:36:56.186 A:middle
And, again, I'm going to sound
like a broken record here,

00:36:56.446 --> 00:36:58.426 A:middle
but the reason I'm
talking about it today is

00:36:58.426 --> 00:37:00.856 A:middle
that by adopting these
features then you're prepared


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:36:58.426 --> 00:37:00.856 A:middle
that by adopting these
features then you're prepared

00:37:00.856 --> 00:37:04.416 A:middle
for new features that come along
like integration in Yosemite,

00:37:04.416 --> 00:37:06.986 A:middle
integration with extensions
from other applications.

00:37:08.086 --> 00:37:11.196 A:middle
So, for example, in Lister you
may have noticed we have this

00:37:11.236 --> 00:37:13.596 A:middle
button in the upper right
corner, that's the share button,

00:37:14.176 --> 00:37:16.806 A:middle
and let's say I want to share
this document with someone,

00:37:16.806 --> 00:37:19.256 A:middle
I can just click on that
document, take an item

00:37:19.256 --> 00:37:23.196 A:middle
from the list, and the system
takes care of presenting all

00:37:23.196 --> 00:37:28.056 A:middle
of the UI for that, integrating
with mail servers or Twitter

00:37:28.056 --> 00:37:29.876 A:middle
or whatever, you don't have
to do any of that stuff,

00:37:29.956 --> 00:37:31.916 A:middle
all you have to do is
provide a few simple things.

00:37:32.916 --> 00:37:34.486 A:middle
So that class that you interact

00:37:34.486 --> 00:37:36.456 A:middle
with is called
NSSharingServicePicker,

00:37:36.456 --> 00:37:41.066 A:middle
it allows you to share
images, URLs, strings

00:37:41.066 --> 00:37:42.186 A:middle
and attributed strings.

00:37:42.486 --> 00:37:44.096 A:middle
And there are just
two steps to sharing.

00:37:44.646 --> 00:37:46.476 A:middle
The first is that you need to
put a share button in your app,

00:37:47.096 --> 00:37:48.896 A:middle
obviously, and Lister,
we chose to put it

00:37:48.896 --> 00:37:51.706 A:middle
in the upper right corner,
and once the user clicks

00:37:51.706 --> 00:37:54.746 A:middle
that button we need to present
the picker and specify the data

00:37:54.746 --> 00:37:55.576 A:middle
that we want to share.

00:37:56.506 --> 00:37:59.506 A:middle
So let's look at some more
code, this time in Objective-C.

00:37:59.856 --> 00:38:02.516 A:middle
You can see here I've got an IB
action, so this is what happens


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:37:59.856 --> 00:38:02.516 A:middle
You can see here I've got an IB
action, so this is what happens

00:38:02.516 --> 00:38:03.986 A:middle
when the user clicks
on the share button,

00:38:04.416 --> 00:38:05.406 A:middle
and you can see the sender

00:38:05.406 --> 00:38:07.116 A:middle
of this action is
the button, itself.

00:38:07.866 --> 00:38:11.446 A:middle
So we first gather the
content that we want to share.

00:38:11.816 --> 00:38:13.066 A:middle
Here I've just used
a constant string.

00:38:13.366 --> 00:38:17.196 A:middle
In the Lister sample app you can
see how we gathered the actual

00:38:17.196 --> 00:38:19.456 A:middle
contents of the To Do list,
as you saw on my little video,

00:38:19.876 --> 00:38:21.526 A:middle
and it's actually pretty
straightforward, as well,

00:38:21.526 --> 00:38:24.626 A:middle
so another pitch to go check out
the sample app after this talk.

00:38:25.646 --> 00:38:28.576 A:middle
Once we have our content we
create the Sharing Service

00:38:28.576 --> 00:38:30.466 A:middle
Picker using alloc
initWithItems.

00:38:30.826 --> 00:38:32.446 A:middle
The argument is an
array of items,

00:38:32.666 --> 00:38:35.286 A:middle
and in this case we only have
one and it's our greeting.

00:38:35.566 --> 00:38:38.336 A:middle
And then, finally,
we ask the Picker

00:38:38.336 --> 00:38:41.076 A:middle
to show itself using
ShowRelativetoRect,

00:38:41.116 --> 00:38:42.426 A:middle
ofView, PreferredEdge.

00:38:42.626 --> 00:38:45.476 A:middle
So the idea here is that, of
course, the Sharing Picker,

00:38:45.476 --> 00:38:48.846 A:middle
as you saw, looks like a
menu, so we want to show it

00:38:48.846 --> 00:38:51.016 A:middle
like a menu relative to the
button that was clicked,

00:38:51.016 --> 00:38:53.046 A:middle
and we have that very
handily in the sender,

00:38:53.406 --> 00:38:54.646 A:middle
and by choosing inYEdge,

00:38:54.916 --> 00:38:56.656 A:middle
we put the sharing Picker
underneath the button.

00:38:57.206 --> 00:39:01.896 A:middle
Now there's a lot more
to learn about Sharing,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:38:57.206 --> 00:39:01.896 A:middle
Now there's a lot more
to learn about Sharing,

00:39:02.286 --> 00:39:03.906 A:middle
including new features
in Yosemite,

00:39:04.276 --> 00:39:07.416 A:middle
your app can provide
extensions for actions,

00:39:07.676 --> 00:39:10.186 A:middle
finder sync extensions,
sharing extensions,

00:39:10.186 --> 00:39:12.726 A:middle
so if you want your app or
your social network to appear

00:39:12.726 --> 00:39:15.346 A:middle
in the Sharing menu in other
applications you can do

00:39:15.346 --> 00:39:18.226 A:middle
that now, and also
today extensions,

00:39:18.516 --> 00:39:20.786 A:middle
which is another thing that the
Lister sample will show you how

00:39:20.786 --> 00:39:21.136 A:middle
to do.

00:39:21.556 --> 00:39:27.046 A:middle
The Lister sample can put
a To Do app or To Do list

00:39:27.046 --> 00:39:29.636 A:middle
in the today view, so
definitely check out the sample

00:39:29.636 --> 00:39:30.536 A:middle
for more information on that.

00:39:32.026 --> 00:39:33.446 A:middle
We have a lot of
related sessions here --

00:39:33.916 --> 00:39:36.996 A:middle
Creating Extensions for iOS
and OS X, Parts One and Two,

00:39:37.026 --> 00:39:38.146 A:middle
which you can check
out on video,

00:39:38.666 --> 00:39:41.176 A:middle
and also again an older session,
Integrating with Facebook,

00:39:41.176 --> 00:39:42.226 A:middle
Twitter, and Sina Weibo.

00:39:42.226 --> 00:39:45.446 A:middle
So, again, this Sharing Service
Picker was introduced a few

00:39:45.446 --> 00:39:46.676 A:middle
releases ago, so apps

00:39:46.676 --> 00:39:49.796 A:middle
that already adopted this API
will continue to feel modern

00:39:50.126 --> 00:39:50.976 A:middle
when we added new
features to it.

00:39:51.966 --> 00:39:55.386 A:middle
Now one more time I'd
like to bring up Alex

00:39:55.386 --> 00:39:58.046 A:middle
to show us how we will hook-up
Sharing in the Lister sample.

00:39:58.876 --> 00:40:03.236 A:middle
&gt;&gt; Thanks, Tony.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:39:58.876 --> 00:40:03.236 A:middle
&gt;&gt; Thanks, Tony.

00:40:03.536 --> 00:40:05.766 A:middle
Now that we've implemented
a few features of Lister,

00:40:05.866 --> 00:40:10.116 A:middle
let's implement Sharing, which
is our remaining feature.

00:40:10.966 --> 00:40:12.896 A:middle
I'm going to open
up Xcode again.

00:40:14.006 --> 00:40:15.366 A:middle
Now the first thing that I want

00:40:15.366 --> 00:40:17.866 A:middle
to do is show you
the current list item

00:40:17.866 --> 00:40:21.206 A:middle
or the current toolbar items
in the toolbar, and all I have

00:40:21.206 --> 00:40:24.526 A:middle
to do is double click the
toolbar in the Storyboard.

00:40:24.526 --> 00:40:29.196 A:middle
Now I want to add a new button,
which is the share button

00:40:29.196 --> 00:40:32.146 A:middle
on the right side here, so what
I'm going to do is I'm going

00:40:32.146 --> 00:40:37.126 A:middle
to grab a new button, a bevel
button, and just drag it

00:40:37.126 --> 00:40:39.186 A:middle
into the allowed
toolbar items area.

00:40:39.896 --> 00:40:43.406 A:middle
And I'll add this item to the
actual toolbar by dragging

00:40:43.406 --> 00:40:44.846 A:middle
into the default toolbar items.

00:40:45.566 --> 00:40:50.066 A:middle
Now it's a little big right
now, so let's modify some

00:40:50.066 --> 00:40:52.786 A:middle
of the attributes of
this button to make sure

00:40:52.786 --> 00:40:53.946 A:middle
that it's the size that we want.

00:40:54.626 --> 00:41:00.096 A:middle
So the first thing that I want
to do is provide an image name


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:40:54.626 --> 00:41:00.096 A:middle
So the first thing that I want
to do is provide an image name

00:41:00.096 --> 00:41:01.076 A:middle
for this toolbar item.

00:41:01.126 --> 00:41:03.996 A:middle
Now Cocoa provides a lot of
image names based on the types

00:41:03.996 --> 00:41:07.106 A:middle
of actions that you're going
to perform, so for this I want

00:41:07.106 --> 00:41:10.096 A:middle
to add an NS share action
or NS share template,

00:41:10.956 --> 00:41:13.546 A:middle
and you can see the
nice icon right here.

00:41:14.996 --> 00:41:18.756 A:middle
This allows you to have
the right icon regardless

00:41:18.756 --> 00:41:25.926 A:middle
of what the current
icon is in the OS.

00:41:26.176 --> 00:41:29.826 A:middle
Now we also have these labels
here, these labels show

00:41:29.826 --> 00:41:33.106 A:middle
up if the user wants to show
the label for their toolbar.

00:41:33.596 --> 00:41:36.186 A:middle
In this case we want
to change the label

00:41:36.246 --> 00:41:37.926 A:middle
to share for both of these.

00:41:38.486 --> 00:41:42.706 A:middle
Now that we've done
that we can set the size

00:41:42.706 --> 00:41:44.056 A:middle
for these toolbar items.

00:41:44.106 --> 00:41:47.666 A:middle
Now we're going to have
to do this in two places.

00:41:47.806 --> 00:41:51.356 A:middle
Once we've set it on the
toolbar item we'll go and set it

00:41:51.356 --> 00:41:53.656 A:middle
on the button, itself,
and we can do

00:41:53.656 --> 00:41:55.716 A:middle
that by selecting the button
in the document editor.

00:41:56.496 --> 00:41:59.156 A:middle
Now we'll go back
to the utility area

00:41:59.966 --> 00:42:02.876 A:middle
and just change the width
again to be 28 points


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:41:59.966 --> 00:42:02.876 A:middle
and just change the width
again to be 28 points

00:42:02.876 --> 00:42:04.526 A:middle
and the height to be 28 points.

00:42:05.056 --> 00:42:08.646 A:middle
And you'll see we
have this nice icon,

00:42:08.686 --> 00:42:09.946 A:middle
the right size, right here.

00:42:11.216 --> 00:42:14.436 A:middle
Now the final thing that we want
to do is hook up this button

00:42:14.436 --> 00:42:15.466 A:middle
to the window controller.

00:42:15.886 --> 00:42:19.256 A:middle
Now we've already implemented
a method that does the sharing

00:42:19.256 --> 00:42:22.796 A:middle
that you saw earlier with
those few lines of code,

00:42:22.796 --> 00:42:26.166 A:middle
so to do that I'm going
to go down to the button,

00:42:26.216 --> 00:42:29.526 A:middle
and I'm going to control
drag from the button

00:42:29.646 --> 00:42:30.666 A:middle
to the window controller,

00:42:30.786 --> 00:42:34.426 A:middle
which is where we've implemented
this method, and the action

00:42:34.426 --> 00:42:36.526 A:middle
that we've implemented
is called Share Document.

00:42:36.656 --> 00:42:38.946 A:middle
So all I have to do
is click this action,

00:42:39.626 --> 00:42:42.276 A:middle
and we should be good to go.

00:42:42.526 --> 00:42:47.106 A:middle
So now let's run the app
and see what we have.

00:42:47.106 --> 00:42:50.986 A:middle
All right, so we've already made
this party list, now actually

00:42:50.986 --> 00:42:53.466 A:middle
if I wanted to send this
to Craig all I would have

00:42:53.466 --> 00:42:58.286 A:middle
to do is click the share
action and I get this nice list

00:42:58.286 --> 00:43:00.216 A:middle
of the different
actions that I can do.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:42:58.286 --> 00:43:00.216 A:middle
of the different
actions that I can do.

00:43:01.056 --> 00:43:03.926 A:middle
And here we can send
a message and we have

00:43:03.926 --> 00:43:07.796 A:middle
in this list we've
implemented the ability

00:43:07.796 --> 00:43:10.986 A:middle
to just append all the
items into a message,

00:43:11.256 --> 00:43:12.396 A:middle
pretty straightforward.

00:43:12.506 --> 00:43:15.876 A:middle
And so if we wanted to send this
message now it would be really

00:43:15.876 --> 00:43:18.876 A:middle
easy all within the app because
we've implemented sharing.

00:43:19.896 --> 00:43:22.436 A:middle
So now I'd like to hand
it back to Tony to talk

00:43:22.436 --> 00:43:24.316 A:middle
about some more features
of Cocoa.

00:43:28.926 --> 00:43:30.476 A:middle
&gt;&gt; Okay, thanks, Alex.

00:43:32.706 --> 00:43:36.086 A:middle
So there's a lot more
that you can do next,

00:43:36.316 --> 00:43:39.736 A:middle
once you've learned how to
adopt the basic features

00:43:39.736 --> 00:43:41.206 A:middle
of the Cocoa Frameworks.

00:43:42.176 --> 00:43:43.396 A:middle
Let's talk about a few of them.

00:43:44.126 --> 00:43:48.236 A:middle
First is Undo, Cocoa
provides support

00:43:48.236 --> 00:43:50.406 A:middle
for this via the
NSUndoManager class.

00:43:50.986 --> 00:43:54.616 A:middle
This is, of course, also support
for this is provided to you

00:43:54.616 --> 00:43:57.306 A:middle
by Document and Core Data,
but you're going to want

00:43:57.306 --> 00:43:59.796 A:middle
to add further support for
it in your model objects.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:44:00.356 --> 00:44:02.606 A:middle
We also have Drag &amp; Drop

00:44:02.606 --> 00:44:04.886 A:middle
and Copy &amp; Paste via
the NSPasteboard class.

00:44:05.336 --> 00:44:08.866 A:middle
Again, the Lister sample
allows a user to drag some text

00:44:08.866 --> 00:44:11.896 A:middle
from someplace on the system
into a Lister document,

00:44:11.896 --> 00:44:13.816 A:middle
and it will create To
Do items out of it.

00:44:14.146 --> 00:44:15.806 A:middle
So you can see, again,
there examples on how

00:44:15.806 --> 00:44:18.566 A:middle
to implement this, and it also
lets you copy and paste items

00:44:18.566 --> 00:44:22.526 A:middle
within the To Do list, so
a great resource for that.

00:44:23.876 --> 00:44:26.916 A:middle
You might also want to consider
adding support for printing.

00:44:27.466 --> 00:44:30.296 A:middle
And here I'd like to
take an aside to talk

00:44:30.296 --> 00:44:32.966 A:middle
about another feature,
called Energy Efficiency.

00:44:33.306 --> 00:44:36.946 A:middle
Now this is not something
that users will see in the UI

00:44:36.946 --> 00:44:39.576 A:middle
of your app, but it is
definitely something

00:44:39.576 --> 00:44:40.736 A:middle
that users will notice.

00:44:41.166 --> 00:44:42.446 A:middle
In Mavericks we spent a lot

00:44:42.446 --> 00:44:45.196 A:middle
of time optimizing the energy
efficiency of the system

00:44:45.436 --> 00:44:48.596 A:middle
in order to provide better
battery life for our customers,

00:44:49.126 --> 00:44:51.546 A:middle
and we also added features
to allow users to find

00:44:51.546 --> 00:44:53.976 A:middle
out if applications
are using more

00:44:53.976 --> 00:44:55.216 A:middle
than their fair share of energy.

00:44:55.746 --> 00:44:57.786 A:middle
There's two ways, the first
is in the battery menu,

00:44:57.986 --> 00:45:00.026 A:middle
on a laptop if you click
on that you'll see a list


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:44:57.986 --> 00:45:00.026 A:middle
on a laptop if you click
on that you'll see a list

00:45:00.026 --> 00:45:02.006 A:middle
of applications using
significant energy,

00:45:02.006 --> 00:45:05.346 A:middle
and the second is an activity
monitor, which displays a score

00:45:05.346 --> 00:45:08.426 A:middle
for applications running in the
past or running now in terms

00:45:08.426 --> 00:45:09.876 A:middle
of how energy efficient
they've been.

00:45:10.616 --> 00:45:13.076 A:middle
So it's really important to
think about energy efficiency

00:45:13.076 --> 00:45:15.556 A:middle
and performance as you
develop your application.

00:45:16.636 --> 00:45:18.016 A:middle
So there are three
things I want you to think

00:45:18.016 --> 00:45:19.626 A:middle
about when you're doing this.

00:45:19.986 --> 00:45:22.366 A:middle
The first is to stay
idle as long as possible,

00:45:23.146 --> 00:45:25.386 A:middle
that's because the
Intel processors used

00:45:25.386 --> 00:45:28.306 A:middle
in our Mac books
are most efficient

00:45:28.566 --> 00:45:30.266 A:middle
when they're doing
absolutely nothing,

00:45:30.676 --> 00:45:31.966 A:middle
so if there's even a
small amount of work

00:45:31.966 --> 00:45:34.416 A:middle
to do there's a large amount
of overhead associated

00:45:34.416 --> 00:45:37.736 A:middle
with spinning up the processor
to get ready to do that work,

00:45:37.736 --> 00:45:40.476 A:middle
and if it's really only a small
amount of work that can add

00:45:40.476 --> 00:45:41.796 A:middle
up over a long period of time.

00:45:41.906 --> 00:45:44.686 A:middle
So you want to stay at
that lowest power energy,

00:45:44.856 --> 00:45:46.926 A:middle
lowest power state
as long as possible.

00:45:47.546 --> 00:45:50.336 A:middle
Now it's also important to
think about doing only the work

00:45:50.336 --> 00:45:53.426 A:middle
that the user asks you
to do because, of course,

00:45:53.566 --> 00:45:57.136 A:middle
that helps reduce the
overhead of doing that work.

00:45:57.746 --> 00:45:59.996 A:middle
And when you do work, which
is okay from time to time,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:46:00.236 --> 00:46:02.916 A:middle
if the user has requested it,
then it's important to do it

00:46:02.916 --> 00:46:06.936 A:middle
as fast as you can and then
return to idle to return us

00:46:06.936 --> 00:46:10.076 A:middle
to that lowest energy state and
provide a longer battery life.

00:46:11.086 --> 00:46:13.706 A:middle
There's a whole another
session about this,

00:46:14.076 --> 00:46:16.956 A:middle
it's Writing Energy Efficient
Code, Part One from this year,

00:46:17.366 --> 00:46:19.836 A:middle
and also last year's WWDC
we had several sessions

00:46:19.896 --> 00:46:22.946 A:middle
on Energy Efficiency and App
Nap, which I encourage you

00:46:22.946 --> 00:46:26.226 A:middle
to check out, as well.

00:46:26.366 --> 00:46:29.996 A:middle
And now even more features,
for example, Full Screen,

00:46:30.496 --> 00:46:33.106 A:middle
this is another feature
that was added in 10.7

00:46:33.106 --> 00:46:34.426 A:middle
that users have come to expect.

00:46:34.426 --> 00:46:36.056 A:middle
You can find support
for that on NSWindow.

00:46:37.586 --> 00:46:40.656 A:middle
Resume, again, NSWindow
Restoration is the protocol

00:46:40.656 --> 00:46:41.456 A:middle
that you're looking at.

00:46:42.626 --> 00:46:43.856 A:middle
Support for progress reporting,

00:46:44.076 --> 00:46:47.246 A:middle
so if your application performs
long operations and you want

00:46:47.246 --> 00:46:49.396 A:middle
to provide a way to not
only show the progress

00:46:49.396 --> 00:46:52.316 A:middle
for that operation, but
allow the user to cancel it,

00:46:52.596 --> 00:46:55.316 A:middle
we have support for that via
a class called NSProgress.

00:46:55.916 --> 00:47:00.086 A:middle
New in Yosemite is
NSGestureRecognizer


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:46:55.916 --> 00:47:00.086 A:middle
New in Yosemite is
NSGestureRecognizer

00:47:00.286 --> 00:47:03.326 A:middle
to provide support for all
kinds of different gestures,

00:47:04.016 --> 00:47:05.666 A:middle
and we talked about that
again in the Storyboards

00:47:05.666 --> 00:47:07.496 A:middle
and view controller talk
from earlier this week.

00:47:08.706 --> 00:47:10.356 A:middle
And, finally, Accessibility.

00:47:10.836 --> 00:47:13.356 A:middle
Accessibility not only
expands the audience available

00:47:13.356 --> 00:47:17.186 A:middle
to buy your app, but it also
makes it easier for you to use

00:47:17.186 --> 00:47:21.276 A:middle
as a developer, that's because
accessible apps are able

00:47:21.276 --> 00:47:25.506 A:middle
to be automated and automated
apps are more easily tested.

00:47:25.986 --> 00:47:28.136 A:middle
So you should definitely look
into supporting accessibility

00:47:28.356 --> 00:47:29.716 A:middle
as you develop your application.

00:47:30.286 --> 00:47:35.096 A:middle
So, in summary, when
you get started

00:47:35.096 --> 00:47:37.656 A:middle
with a great foundation
using the Cocoa Frameworks,

00:47:37.976 --> 00:47:39.856 A:middle
and you take advantage
of the core features

00:47:39.856 --> 00:47:43.146 A:middle
that the Frameworks provide,
like Storyboards, Auto Layout,

00:47:43.206 --> 00:47:45.346 A:middle
NSDocument, Auto
Localization and so forth,

00:47:46.076 --> 00:47:48.896 A:middle
then your application will be
in great shape for the future,

00:47:49.286 --> 00:47:51.246 A:middle
both the future of your
application as you evolve

00:47:51.246 --> 00:47:53.756 A:middle
over time and also the
future of the platform

00:47:53.756 --> 00:47:54.896 A:middle
as we add new features.

00:47:55.466 --> 00:47:59.566 A:middle
So for more information you have
our Frameworks Evangelist, Jake,

00:47:59.876 --> 00:48:03.126 A:middle
or check out the great
Developer documentation.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:47:59.876 --> 00:48:03.126 A:middle
or check out the great
Developer documentation.

00:48:03.426 --> 00:48:05.446 A:middle
And here, as I promised,
are the four links

00:48:05.536 --> 00:48:07.956 A:middle
to the Lister sample
code, that I encourage you

00:48:07.956 --> 00:48:11.196 A:middle
to definitely go check out and,
of course the Developer Forums.

00:48:12.006 --> 00:48:14.206 A:middle
A few more related
sessions, Accessibility

00:48:14.206 --> 00:48:16.756 A:middle
in OS X describes the brand-new
accessibility API we have

00:48:16.756 --> 00:48:20.476 A:middle
in Yosemite, and some sessions
from past years, Full Screen

00:48:20.566 --> 00:48:22.196 A:middle
and Resume and Automatic
Termination.

00:48:23.016 --> 00:48:24.366 A:middle
So thank you for your
time, and I look forward

00:48:24.366 --> 00:48:24.976 A:middle
to seeing what you can do.

00:48:25.516 --> 00:48:31.500 A:middle
[ Applause ]

