WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:11.216 --> 00:00:12.616 A:middle
&gt;&gt; Okay, good morning,
everybody.

00:00:13.956 --> 00:00:17.396 A:middle
Welcome to the WWDC
2014 Printing session.

00:00:17.396 --> 00:00:19.676 A:middle
I'm Howard Miller, I'm
the Engineering Manager

00:00:19.676 --> 00:00:21.176 A:middle
for everything printing
at Apple.

00:00:21.176 --> 00:00:24.946 A:middle
Today we've got a pretty
straightforward agenda,

00:00:25.076 --> 00:00:27.676 A:middle
we're going to give a little
bit of an update on AirPrint.

00:00:27.676 --> 00:00:29.506 A:middle
We're going to spend
the majority

00:00:29.506 --> 00:00:31.376 A:middle
of our session on iOS printing.

00:00:32.106 --> 00:00:35.346 A:middle
We're going to show you the new
iOS printing technology that's

00:00:35.346 --> 00:00:37.306 A:middle
in iOS 8 and we're going
to give you a demo of that.

00:00:37.726 --> 00:00:40.126 A:middle
So I know everybody probably
went to the parties last night,

00:00:40.126 --> 00:00:41.346 A:middle
so we've got to wake
everybody up.

00:00:41.606 --> 00:00:44.376 A:middle
How many people here have
applications that already print?

00:00:45.556 --> 00:00:47.196 A:middle
All right, we've
got a good number.

00:00:47.196 --> 00:00:50.176 A:middle
How many here have applications
that you want to have print?

00:00:50.886 --> 00:00:51.376 A:middle
All right.

00:00:51.376 --> 00:00:53.526 A:middle
By the time you guys
leave today,

00:00:53.526 --> 00:00:55.426 A:middle
your applications
will be able to print.

00:00:55.856 --> 00:00:58.026 A:middle
I know you can write the code
while sitting right there

00:00:58.026 --> 00:00:59.406 A:middle
because it's going
to be that easy.

00:00:59.406 --> 00:01:02.236 A:middle
But if you don't get it done,
we have a lab that follows this,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:59.406 --> 00:01:02.236 A:middle
But if you don't get it done,
we have a lab that follows this,

00:01:02.236 --> 00:01:05.366 A:middle
you can come down, and we will
get your code printing today.

00:01:06.036 --> 00:01:07.736 A:middle
So let me give you an
update about AirPrint.

00:01:08.266 --> 00:01:09.506 A:middle
What is AirPrint?

00:01:10.476 --> 00:01:12.196 A:middle
You know this technology
was released

00:01:12.196 --> 00:01:17.076 A:middle
with iOS 4.2 several years
ago, and our primary goal was

00:01:17.076 --> 00:01:20.206 A:middle
to provide a great,
outstanding user experience.

00:01:21.266 --> 00:01:23.956 A:middle
Printing was a pain,
really was painful.

00:01:24.496 --> 00:01:26.756 A:middle
And we worked on the
Mac to make it simpler

00:01:26.756 --> 00:01:28.726 A:middle
but it still wasn't
super simple.

00:01:28.726 --> 00:01:29.736 A:middle
And we got to iOS.

00:01:30.226 --> 00:01:32.346 A:middle
We had to have no drivers,

00:01:32.346 --> 00:01:34.736 A:middle
no software to install,
no configuration.

00:01:34.736 --> 00:01:36.926 A:middle
The user just wants
to put their printer,

00:01:37.436 --> 00:01:39.486 A:middle
connect it to the network and
then when they go to print,

00:01:40.246 --> 00:01:41.596 A:middle
there's their printer
and they print.

00:01:42.676 --> 00:01:44.276 A:middle
You don't need 50
million options.

00:01:44.276 --> 00:01:45.476 A:middle
The printer should be smarter.

00:01:45.476 --> 00:01:47.316 A:middle
The printing system
should be smarter.

00:01:47.316 --> 00:01:48.236 A:middle
And that's what we did.

00:01:48.236 --> 00:01:51.226 A:middle
But we didn't sacrifice
output quality.

00:01:51.956 --> 00:01:55.516 A:middle
With AirPrint you get
the full print quality

00:01:55.516 --> 00:01:58.186 A:middle
that Apple's become
known to deliver

00:01:58.186 --> 00:01:59.966 A:middle
for the last couple decades.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:02:00.326 --> 00:02:02.336 A:middle
It is as good or in
some cases better

00:02:02.336 --> 00:02:03.926 A:middle
than what you can
get from the desktop.

00:02:03.926 --> 00:02:05.316 A:middle
No compromises were made.

00:02:05.586 --> 00:02:07.826 A:middle
Your printer manufacturer?

00:02:07.826 --> 00:02:10.226 A:middle
AirPrint's a protocol,
standards-based,

00:02:10.366 --> 00:02:12.616 A:middle
plus a little Apple
secret sauce on the side.

00:02:12.916 --> 00:02:16.716 A:middle
And if you're a technology
provider, a server vendor,

00:02:16.716 --> 00:02:22.396 A:middle
we will license you all this
technology at zero cost.

00:02:23.256 --> 00:02:25.696 A:middle
Printers, you know we
introduced with a dozen

00:02:25.696 --> 00:02:27.276 A:middle
or so printers from HP.

00:02:27.276 --> 00:02:31.596 A:middle
I'm proud to report that we have
100 times as many printers now.

00:02:32.166 --> 00:02:34.646 A:middle
If you go into any
Staples or Fry's

00:02:34.646 --> 00:02:37.076 A:middle
or pick your favorite
electronic store,

00:02:37.276 --> 00:02:40.216 A:middle
virtually every network printer
they sell now has AirPrint

00:02:40.216 --> 00:02:40.546 A:middle
in it.

00:02:40.986 --> 00:02:44.366 A:middle
By my read, about half of
the world's installed base

00:02:44.366 --> 00:02:46.426 A:middle
of printers have AirPrint in it.

00:02:48.026 --> 00:02:53.356 A:middle
You almost cannot find a
printer that your mom would want

00:02:53.436 --> 00:02:54.546 A:middle
that doesn't have AirPrint.

00:02:54.546 --> 00:02:57.066 A:middle
Last year, all the
enterprise vendors came on.

00:02:57.336 --> 00:03:02.036 A:middle
Kyocera, Sharp, Toshiba all
have AirPrint throughout their


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:02:57.336 --> 00:03:02.036 A:middle
Kyocera, Sharp, Toshiba all
have AirPrint throughout their

00:03:02.036 --> 00:03:02.766 A:middle
product line.

00:03:03.316 --> 00:03:05.716 A:middle
As I mentioned, AirPrint
is available

00:03:05.716 --> 00:03:08.656 A:middle
as a printing system
in iOS 4.2 and later.

00:03:08.746 --> 00:03:11.066 A:middle
For those who have done the
math, that means there are more

00:03:11.066 --> 00:03:16.616 A:middle
than 700 million users that have
the same printing system on it.

00:03:16.996 --> 00:03:19.366 A:middle
That's more than any other
printing system in the history

00:03:19.366 --> 00:03:20.486 A:middle
of the computing industry.

00:03:20.486 --> 00:03:23.816 A:middle
So AirPrint's printing system
is the most prevalent printing

00:03:23.816 --> 00:03:24.716 A:middle
platform out there.

00:03:25.226 --> 00:03:27.406 A:middle
Then, of course, the most
important thing is your app.

00:03:28.466 --> 00:03:30.006 A:middle
And you just got
to believe this,

00:03:30.006 --> 00:03:32.656 A:middle
the Microsoft guys released
a beautiful product,

00:03:33.286 --> 00:03:35.416 A:middle
they left one small feature out.

00:03:35.976 --> 00:03:38.266 A:middle
And they heard about it
right away on day one.

00:03:38.816 --> 00:03:41.666 A:middle
And by the end of that
week I was on the phone

00:03:41.666 --> 00:03:43.356 A:middle
with their engineers
telling them to check

00:03:43.356 --> 00:03:45.776 A:middle
out the last WWDC presentation.

00:03:46.046 --> 00:03:48.546 A:middle
And within a couple days,
their app was then printing.

00:03:48.546 --> 00:03:50.396 A:middle
Of course, it took
them the better part

00:03:50.396 --> 00:03:51.496 A:middle
of a month to release it.

00:03:52.496 --> 00:03:54.416 A:middle
We're going to get
you out of that.

00:03:54.416 --> 00:03:55.236 A:middle
What you need to know

00:03:55.236 --> 00:03:57.946 A:middle
about AirPrint is it's
super, super easy.

00:03:58.716 --> 00:04:00.536 A:middle
The user interface is easy.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:03:58.716 --> 00:04:00.536 A:middle
The user interface is easy.

00:04:00.536 --> 00:04:02.576 A:middle
The user interaction is easy.

00:04:03.196 --> 00:04:05.726 A:middle
But equally important, and
probably more important for you,

00:04:06.006 --> 00:04:10.086 A:middle
is that the API set that we
have is not some random walk

00:04:10.086 --> 00:04:11.196 A:middle
through 100 different things.

00:04:11.376 --> 00:04:15.126 A:middle
We have a very, very focused set
of APIs that are very efficient

00:04:15.126 --> 00:04:17.326 A:middle
to get you right down to
what you need to know.

00:04:18.136 --> 00:04:20.016 A:middle
And with little work
and a little help

00:04:20.016 --> 00:04:22.816 A:middle
from your application,
print system's smart enough

00:04:22.816 --> 00:04:24.306 A:middle
to know what to do
with your output,

00:04:24.416 --> 00:04:26.386 A:middle
and we can get super
high-quality output

00:04:26.386 --> 00:04:28.526 A:middle
without having to have a
bunch of user interaction.

00:04:29.056 --> 00:04:33.316 A:middle
So let's talk about what's
gone on with AirPrint.

00:04:33.926 --> 00:04:36.626 A:middle
We started with consumer ink
jets, we got consumer laser,

00:04:36.626 --> 00:04:40.226 A:middle
we've got enterprise lasers,
we've got some servers.

00:04:40.506 --> 00:04:44.596 A:middle
Last year we talked about
Brothers first roll-fed printer.

00:04:44.996 --> 00:04:48.666 A:middle
And as things go there
are always new classes

00:04:48.666 --> 00:04:49.756 A:middle
of printers coming.

00:04:50.106 --> 00:04:52.786 A:middle
And we're getting into some
of the specialty printers.

00:04:52.786 --> 00:04:54.766 A:middle
So we're going to start with
one of my new favorites.

00:04:54.766 --> 00:04:57.946 A:middle
This is probably not what your
mom's going to get at home.

00:04:57.946 --> 00:05:00.036 A:middle
This is the AstroMed
ToughWriter 5.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:04:57.946 --> 00:05:00.036 A:middle
This is the AstroMed
ToughWriter 5.

00:05:00.036 --> 00:05:05.426 A:middle
The reason I like this is
because its native spot is

00:05:05.426 --> 00:05:06.996 A:middle
on the cockpit of an airplane.

00:05:07.236 --> 00:05:10.746 A:middle
There it is, set in its
native 747 environment.

00:05:11.116 --> 00:05:14.356 A:middle
But this will end up in
C-17s with the military,

00:05:14.356 --> 00:05:15.876 A:middle
will end up in commercial.

00:05:16.216 --> 00:05:20.026 A:middle
But what's interesting is iPads
and iPhones are everyplace.

00:05:20.886 --> 00:05:22.446 A:middle
Applications need to print.

00:05:22.576 --> 00:05:26.656 A:middle
And the printer manufacturers
of all types are responding.

00:05:27.166 --> 00:05:30.366 A:middle
This is a curiosity and there
probably won't be millions

00:05:30.366 --> 00:05:32.296 A:middle
of these printers
sold, but it shows

00:05:32.296 --> 00:05:34.506 A:middle
that AirPrint is pretty much
every corner of the world now.

00:05:35.626 --> 00:05:37.366 A:middle
Another printer that
I'm really happy to talk

00:05:37.366 --> 00:05:40.666 A:middle
about is the Brother
RuggedJet 4040.

00:05:41.106 --> 00:05:43.736 A:middle
This is a very small
battery-powered receipt

00:05:43.736 --> 00:05:44.586 A:middle
and label printer.

00:05:44.586 --> 00:05:47.386 A:middle
It will support AirPrint soon.

00:05:47.776 --> 00:05:49.776 A:middle
And we'll have a demo
of that later today.

00:05:51.136 --> 00:05:53.096 A:middle
So let's talk about
what we've added.

00:05:53.566 --> 00:05:56.916 A:middle
We have added some
new APIs in iOS 8.

00:05:56.916 --> 00:06:01.946 A:middle
These are to support specialty
printers and applications.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:05:56.916 --> 00:06:01.946 A:middle
These are to support specialty
printers and applications.

00:06:03.506 --> 00:06:06.696 A:middle
If you look at what we
did in AirPrint so far,

00:06:06.696 --> 00:06:10.086 A:middle
every time you print, the user
has to see our print dialog,

00:06:10.086 --> 00:06:11.576 A:middle
which means they get
to pick a printer.

00:06:12.346 --> 00:06:14.026 A:middle
Now, if you're doing
an application

00:06:14.306 --> 00:06:18.996 A:middle
for the Lucky's store
checkout counter,

00:06:19.216 --> 00:06:22.376 A:middle
you certainly don't want the
clerk everyday picking their

00:06:22.376 --> 00:06:25.196 A:middle
printer every time they print
every receipt for the customer.

00:06:25.666 --> 00:06:28.046 A:middle
If you're at Lucky's,
at least my Lucky's,

00:06:29.326 --> 00:06:31.696 A:middle
they have two printers there.

00:06:32.256 --> 00:06:33.536 A:middle
One printer prints the receipt,

00:06:33.536 --> 00:06:35.796 A:middle
the other one prints those
coupons, and they tear them off

00:06:35.796 --> 00:06:36.736 A:middle
and they give you both.

00:06:36.866 --> 00:06:40.056 A:middle
This set of APIs will allow
you to have multiple sets

00:06:40.056 --> 00:06:46.976 A:middle
of printers preconfigured by an
administrator that at runtime,

00:06:47.566 --> 00:06:50.566 A:middle
the user, the application
can select which printer

00:06:51.166 --> 00:06:53.436 A:middle
without the user
having to get involved.

00:06:53.976 --> 00:06:58.796 A:middle
So we'll have a bunch to
talk about that in a minute.

00:06:58.986 --> 00:07:00.906 A:middle
So let's talk about some hints.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:06:58.986 --> 00:07:00.906 A:middle
So let's talk about some hints.

00:07:01.696 --> 00:07:04.036 A:middle
First off, everybody's
designing their applications

00:07:04.036 --> 00:07:04.696 A:middle
for the screen.

00:07:04.696 --> 00:07:07.536 A:middle
We've got some beautiful
iPads with Retina displays.

00:07:07.936 --> 00:07:09.296 A:middle
But for those of us
in the printing world,

00:07:09.296 --> 00:07:11.056 A:middle
that's pretty low-resolution
output.

00:07:11.126 --> 00:07:13.436 A:middle
It's also output
that is backlit.

00:07:14.536 --> 00:07:16.616 A:middle
When we start talking
about paper,

00:07:16.616 --> 00:07:22.316 A:middle
you have a much larger canvas,
a much larger space to utilize.

00:07:22.816 --> 00:07:25.676 A:middle
And that means that you
want to lay out your stuff

00:07:25.676 --> 00:07:27.996 A:middle
to make effective
use of the space.

00:07:28.596 --> 00:07:31.366 A:middle
You want to provide
higher quality graphics.

00:07:31.366 --> 00:07:33.456 A:middle
You're going to need
higher resolution graphics

00:07:33.456 --> 00:07:36.276 A:middle
than what you're showing on
screen if you want the output

00:07:36.276 --> 00:07:37.646 A:middle
to be truly spectacular.

00:07:38.416 --> 00:07:40.156 A:middle
Then I want you to
think about readability.

00:07:41.226 --> 00:07:45.386 A:middle
You know, they don't print books
that people are going to sit

00:07:45.386 --> 00:07:48.496 A:middle
on their couch and
read with no margins.

00:07:49.606 --> 00:07:52.576 A:middle
There's always a big margin so
your big, fat thumb can be there

00:07:52.576 --> 00:07:54.056 A:middle
and you can still
read the words.

00:07:55.736 --> 00:07:57.366 A:middle
Consider what paper is.

00:07:57.916 --> 00:08:00.916 A:middle
It's going to be reflective,
light's going to come off of it.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:07:57.916 --> 00:08:00.916 A:middle
It's going to be reflective,
light's going to come off of it.

00:08:01.356 --> 00:08:04.736 A:middle
Gray looks awesome on screen,
gray looks awful when it comes

00:08:04.736 --> 00:08:06.156 A:middle
to print, it's hard to read.

00:08:06.156 --> 00:08:08.666 A:middle
Consider the contrast,
consider the margin,

00:08:08.666 --> 00:08:10.836 A:middle
consider the fonts,
consider the spacing.

00:08:11.286 --> 00:08:13.216 A:middle
Paper's a little
different than screen,

00:08:13.576 --> 00:08:15.506 A:middle
and with just a little
bit of forethought,

00:08:15.506 --> 00:08:19.176 A:middle
you can get spectacular
printed output.

00:08:19.176 --> 00:08:20.476 A:middle
With respect to the
printing system,

00:08:20.476 --> 00:08:21.966 A:middle
it's a smart printing system.

00:08:21.966 --> 00:08:25.076 A:middle
We do a huge amount of
stuff to help your app.

00:08:25.486 --> 00:08:27.776 A:middle
If you tell us that it's
a photo, for example,

00:08:28.146 --> 00:08:30.956 A:middle
we will automatically
pick the photo tray,

00:08:31.766 --> 00:08:34.836 A:middle
pick photo print mode, pick
the highest quality print mode,

00:08:35.086 --> 00:08:37.956 A:middle
scale the item to fit on
the page centered and print.

00:08:39.476 --> 00:08:41.686 A:middle
You're going to tell us
what you're trying to print,

00:08:41.686 --> 00:08:43.976 A:middle
we're going to work all
the magic behind the scenes

00:08:43.976 --> 00:08:45.956 A:middle
in the printing system to
make sure the user gets the

00:08:45.956 --> 00:08:46.686 A:middle
best output.

00:08:47.876 --> 00:08:50.326 A:middle
Okay, there are a few data
objects that we're going

00:08:50.326 --> 00:08:51.936 A:middle
to hand you, you're
going to hand us back.

00:08:51.936 --> 00:08:56.496 A:middle
And I just you know the caveat,
don't troll around in those

00:08:56.496 --> 00:08:59.556 A:middle
and try and tweak stuff, don't
introspect these opaque objects,

00:08:59.556 --> 00:09:01.746 A:middle
we may change something,
in fact we probably will,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:08:59.556 --> 00:09:01.746 A:middle
we may change something,
in fact we probably will,

00:09:01.746 --> 00:09:03.466 A:middle
and I don't want to break
your app in the future.

00:09:03.816 --> 00:09:06.226 A:middle
And then the last thing,
if there's anybody here

00:09:06.226 --> 00:09:08.006 A:middle
who tests their app - does
anybody tests their app?

00:09:08.676 --> 00:09:10.026 A:middle
Okay, at least a few of you do.

00:09:10.616 --> 00:09:14.776 A:middle
You don't have to go buy all
1,200 AirPrint printer models

00:09:14.776 --> 00:09:15.906 A:middle
that are available in the world.

00:09:16.186 --> 00:09:20.046 A:middle
Go back to the 2012
WWDC session.

00:09:20.046 --> 00:09:21.226 A:middle
We spent about 15 minutes

00:09:21.226 --> 00:09:23.736 A:middle
on something called the
Printer Simulator, which is part

00:09:23.736 --> 00:09:25.426 A:middle
of your Xcode release.

00:09:26.246 --> 00:09:29.266 A:middle
It allows you to simulate
every common type of printer,

00:09:29.266 --> 00:09:32.016 A:middle
including changing some
of their parameters.

00:09:32.296 --> 00:09:34.966 A:middle
So ink jet printers, laser
printers, roll-fed printers,

00:09:35.346 --> 00:09:36.496 A:middle
you don't have to buy them all.

00:09:36.496 --> 00:09:40.556 A:middle
Buy one and use the printer
simulator to do your work.

00:09:41.256 --> 00:09:43.866 A:middle
Okay, let's get to the
focus of today's meeting.

00:09:43.866 --> 00:09:46.396 A:middle
Again, our goal is by the
time you leave here today,

00:09:46.396 --> 00:09:48.056 A:middle
you can create an
app that prints.

00:09:48.636 --> 00:09:50.376 A:middle
And for the meat of
this presentation,

00:09:50.376 --> 00:09:53.406 A:middle
I am going to bring up one of
my engineers, Todd Ritland,

00:09:53.996 --> 00:09:58.686 A:middle
and he is going to take you
through everything you need

00:09:58.746 --> 00:10:00.846 A:middle
to know to make your app print.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:09:58.746 --> 00:10:00.846 A:middle
to know to make your app print.

00:10:01.516 --> 00:10:05.546 A:middle
[ Applause ]

00:10:06.046 --> 00:10:07.476 A:middle
&gt;&gt; Thanks, Howard.

00:10:07.476 --> 00:10:09.416 A:middle
I'm Todd Ritland, I'm
an AirPrint Engineer.

00:10:09.456 --> 00:10:11.486 A:middle
I'm the lead on the
iOS printing system.

00:10:11.486 --> 00:10:15.016 A:middle
So we're going to talk
about iOS printing here.

00:10:15.016 --> 00:10:16.776 A:middle
First we'll talk about
picking what to print.

00:10:17.786 --> 00:10:21.416 A:middle
Next we'll go over the APIs
and how to actually get output.

00:10:21.416 --> 00:10:22.956 A:middle
Then we'll talk about some

00:10:22.956 --> 00:10:24.546 A:middle
of the different
printing UI options.

00:10:24.546 --> 00:10:29.086 A:middle
So first, this is our motto,
I think we've made this clear,

00:10:29.086 --> 00:10:32.186 A:middle
but iOS printing is
easy but powerful.

00:10:32.516 --> 00:10:35.916 A:middle
We designed the AirPrint
protocol to scale from,

00:10:35.916 --> 00:10:39.486 A:middle
you know, small consumer
printers all the way

00:10:39.486 --> 00:10:41.576 A:middle
up to big enterprise-class
printers,

00:10:41.866 --> 00:10:42.966 A:middle
and everything in-between.

00:10:43.376 --> 00:10:45.586 A:middle
And with every iOS
release, we've been adding

00:10:45.626 --> 00:10:48.436 A:middle
and expanding the types of
things you can do from iOS.

00:10:49.986 --> 00:10:53.066 A:middle
But we kept it real easy; so
we want the user interaction

00:10:53.066 --> 00:10:54.836 A:middle
to be really, really
simple and basic.

00:10:55.136 --> 00:10:58.066 A:middle
We haven't added and added
and added, and really try

00:10:58.066 --> 00:10:59.716 A:middle
to keep feature creep down.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:11:01.996 --> 00:11:04.036 A:middle
So providing good
content for printing,

00:11:04.036 --> 00:11:05.726 A:middle
this is really the
most important part.

00:11:06.096 --> 00:11:09.756 A:middle
What we're looking for is
printed output that's useful,

00:11:09.906 --> 00:11:11.706 A:middle
attractive and high quality.

00:11:12.226 --> 00:11:15.816 A:middle
We like to think of this
like high-end graphic design.

00:11:16.016 --> 00:11:19.546 A:middle
It's best to design your output
like a graphic designer would,

00:11:20.086 --> 00:11:23.136 A:middle
and then use our classes
to make that happen instead

00:11:23.226 --> 00:11:24.716 A:middle
of approaching it
the other way around,

00:11:24.716 --> 00:11:26.566 A:middle
where you're just looking
at all the classes and kind

00:11:26.566 --> 00:11:28.476 A:middle
of tweaking what you want to do.

00:11:28.726 --> 00:11:30.576 A:middle
First, design it and
then use our classes.

00:11:31.226 --> 00:11:34.296 A:middle
As Howard said, what looks good
onscreen doesn't always look

00:11:34.326 --> 00:11:35.346 A:middle
good on paper.

00:11:37.336 --> 00:11:39.926 A:middle
We also want you to make use
of the dynamic printing system.

00:11:39.926 --> 00:11:43.446 A:middle
So paper size can be
anything, and we actually talk

00:11:43.446 --> 00:11:45.246 A:middle
to the AirPrint printer,

00:11:45.286 --> 00:11:47.976 A:middle
we figure out what size
papers are available.

00:11:48.716 --> 00:11:51.616 A:middle
Some printers actually
have paper size sensors

00:11:51.616 --> 00:11:54.796 A:middle
that can tell what papers in
it or the user can enter it

00:11:54.796 --> 00:11:56.346 A:middle
on the front panel
what paper is loaded.

00:11:57.066 --> 00:11:59.356 A:middle
And so the printing system
was designed to be dynamic,

00:11:59.696 --> 00:12:01.476 A:middle
it sends that all the
way up to your app.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:11:59.696 --> 00:12:01.476 A:middle
it sends that all the
way up to your app.

00:12:01.806 --> 00:12:04.386 A:middle
If your app is dynamic about
its content, laying it out,

00:12:04.566 --> 00:12:05.926 A:middle
then you get the
full benefit of that.

00:12:07.466 --> 00:12:09.446 A:middle
Printer hardware margins
also vary quite a bit.

00:12:09.536 --> 00:12:11.656 A:middle
Sometimes the bottom
margin might be large.

00:12:11.706 --> 00:12:15.946 A:middle
The margins on other sides
might be really, really small.

00:12:17.176 --> 00:12:18.836 A:middle
So for all these reasons,
it's really best not

00:12:18.836 --> 00:12:22.886 A:middle
to produce a thick-size PDF and
send it to the printing system.

00:12:22.886 --> 00:12:24.346 A:middle
Also, another thing
to keep in mind is,

00:12:24.816 --> 00:12:27.796 A:middle
there's really two major
document sizes for paper

00:12:27.796 --> 00:12:30.486 A:middle
in the world, U.S. letter, which
is what we use in the U.S.,

00:12:31.156 --> 00:12:33.086 A:middle
and then there's A4
which is used in a lot

00:12:33.086 --> 00:12:34.616 A:middle
of other regions in the world.

00:12:35.036 --> 00:12:38.236 A:middle
So if you design your output
based only on the paper size

00:12:38.276 --> 00:12:40.346 A:middle
that your region uses,
you might be missing

00:12:40.346 --> 00:12:42.366 A:middle
out on a whole other
market, so it's good to think

00:12:42.366 --> 00:12:43.916 A:middle
about all these different
paper sizes.

00:12:44.316 --> 00:12:46.586 A:middle
And like we said, the
printing simulator you can use

00:12:46.586 --> 00:12:48.166 A:middle
to simulate these
different conditions.

00:12:48.686 --> 00:12:53.346 A:middle
So a good example of printing is
this math dictionary for kids.

00:12:54.216 --> 00:12:56.636 A:middle
This is an app that
lets you look

00:12:56.636 --> 00:12:58.716 A:middle
at different definitions
of math terms.

00:12:58.746 --> 00:13:00.736 A:middle
In this case, we're looking
at the laws of arithmetic.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:12:58.746 --> 00:13:00.736 A:middle
In this case, we're looking
at the laws of arithmetic.

00:13:01.266 --> 00:13:03.186 A:middle
And if you were a teacher
and you wanted to make

00:13:03.186 --> 00:13:05.656 A:middle
like a handout of this,
you can print it out

00:13:06.386 --> 00:13:07.386 A:middle
and this is the output
you'd get.

00:13:07.436 --> 00:13:08.616 A:middle
It looks really nice.

00:13:08.666 --> 00:13:10.206 A:middle
This would be suitable to hand

00:13:10.206 --> 00:13:12.146 A:middle
out to all the students
in a classroom.

00:13:12.766 --> 00:13:14.276 A:middle
It has a nice header and footer.

00:13:14.776 --> 00:13:16.466 A:middle
There's the page
number at the bottom.

00:13:16.896 --> 00:13:19.316 A:middle
The examples are in
nice callout boxes

00:13:19.316 --> 00:13:20.246 A:middle
that are a different color.

00:13:20.806 --> 00:13:22.676 A:middle
And this output would
actually even look really good

00:13:22.676 --> 00:13:23.696 A:middle
on a black and white printer.

00:13:24.996 --> 00:13:29.026 A:middle
And if whoever was printing
had U.S. legal loaded

00:13:29.026 --> 00:13:32.526 A:middle
in their printer, and the
printer reported that back

00:13:32.526 --> 00:13:35.506 A:middle
to the printing system,
this app is dynamic

00:13:35.656 --> 00:13:38.496 A:middle
and it fits all the
content on one page,

00:13:38.496 --> 00:13:39.946 A:middle
it stretches it out,
it looks good.

00:13:40.006 --> 00:13:45.966 A:middle
So this is a good example of
being dynamic about the content.

00:13:45.966 --> 00:13:48.146 A:middle
Okay, so let's step
right into the APIs here.

00:13:49.746 --> 00:13:52.706 A:middle
The basic steps of printing with
a UI, this is standard printing,

00:13:53.276 --> 00:13:55.196 A:middle
first your app will get
the print controller

00:13:55.196 --> 00:13:57.076 A:middle
or the activity controller,
the share sheet.

00:13:58.206 --> 00:13:59.876 A:middle
You'll set up the
attributes for the job,

00:13:59.876 --> 00:14:01.566 A:middle
like job name and
the type of job.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:13:59.876 --> 00:14:01.566 A:middle
like job name and
the type of job.

00:14:02.566 --> 00:14:04.316 A:middle
Then you'll provide the
content for printing,

00:14:04.466 --> 00:14:06.126 A:middle
and we'll go over that later.

00:14:07.026 --> 00:14:09.586 A:middle
And then you'll present the UI.

00:14:09.686 --> 00:14:12.836 A:middle
At this point iOS takes
over, it communicates

00:14:12.836 --> 00:14:13.686 A:middle
with the AirPrint printer,

00:14:13.686 --> 00:14:15.516 A:middle
figures out all the
relevant information.

00:14:16.096 --> 00:14:18.006 A:middle
The Daemon takes over
managing the job.

00:14:18.466 --> 00:14:22.286 A:middle
If the job needs a
username and password,

00:14:22.286 --> 00:14:23.876 A:middle
the printing system
takes care of that.

00:14:23.876 --> 00:14:26.756 A:middle
If paper runs out or ink runs
out, any of that kind of stuff,

00:14:26.986 --> 00:14:28.456 A:middle
that's all managed
by the Daemon.

00:14:28.456 --> 00:14:32.406 A:middle
So your app doesn't need to
deal with any of that stuff.

00:14:32.516 --> 00:14:35.256 A:middle
So here's the classes we're
going to be focusing on.

00:14:35.976 --> 00:14:40.196 A:middle
First, UIPrintInfo, just
the general sort of metadata

00:14:40.196 --> 00:14:42.466 A:middle
about the print job, the job
name, and the type of job.

00:14:43.816 --> 00:14:45.936 A:middle
UIPrintPaper which just
represents the sheet

00:14:45.936 --> 00:14:46.876 A:middle
of paper at the printer.

00:14:47.586 --> 00:14:52.756 A:middle
A PrintFormatter which knows how
to format content for a sheet.

00:14:54.736 --> 00:14:57.636 A:middle
UIPrintPageRenderer which
lets you take full control

00:14:57.636 --> 00:14:58.136 A:middle
over drawing.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:15:00.496 --> 00:15:03.236 A:middle
Then for showing UI
and managing the job,

00:15:03.236 --> 00:15:04.966 A:middle
we have
UIPrintInteractionController,

00:15:05.916 --> 00:15:08.436 A:middle
or UIActivityViewController
which is the share sheet.

00:15:09.946 --> 00:15:12.606 A:middle
So first let's go
over UIPrintInfo.

00:15:13.316 --> 00:15:17.496 A:middle
Every print job should have
a UIPrintInfo set up for it.

00:15:17.666 --> 00:15:19.426 A:middle
First thing you'll do
is set the job name.

00:15:20.356 --> 00:15:22.756 A:middle
Now, this job name
appears on the front panel

00:15:22.816 --> 00:15:23.926 A:middle
when the user prints
to printer -

00:15:24.696 --> 00:15:26.016 A:middle
when the user prints their job.

00:15:26.016 --> 00:15:28.736 A:middle
But also appears
in print center,

00:15:29.016 --> 00:15:30.716 A:middle
if the user wants
to cancel their job.

00:15:31.436 --> 00:15:33.486 A:middle
If they're printing to a
server, for like a print

00:15:33.486 --> 00:15:36.276 A:middle
and release server,
this is how user's going

00:15:36.276 --> 00:15:38.136 A:middle
to be identifying their job.

00:15:38.416 --> 00:15:40.246 A:middle
So it needs to be
really specific.

00:15:40.486 --> 00:15:42.616 A:middle
If it's something generic
like just "print job",

00:15:42.816 --> 00:15:45.626 A:middle
that doesn't really help users
identify which job is theirs.

00:15:45.626 --> 00:15:47.216 A:middle
So it's really important
to make sure this is

00:15:47.336 --> 00:15:48.756 A:middle
as specific as possible.

00:15:49.186 --> 00:15:51.146 A:middle
Next we have output type.

00:15:52.566 --> 00:15:54.256 A:middle
This just tells the printing
system about the type

00:15:54.256 --> 00:15:55.736 A:middle
of content that you're printing.

00:15:56.436 --> 00:15:59.676 A:middle
It allows the printing system
to make appropriate choices

00:15:59.676 --> 00:16:02.316 A:middle
for paper size, the
print quality mode,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:15:59.676 --> 00:16:02.316 A:middle
for paper size, the
print quality mode,

00:16:02.756 --> 00:16:05.246 A:middle
and we also make UI
decisions about what to show

00:16:05.246 --> 00:16:06.736 A:middle
for the UI based on output type.

00:16:07.116 --> 00:16:08.186 A:middle
We have four of these.

00:16:09.046 --> 00:16:12.946 A:middle
First one, just a general
UIPrintInfoOutputGeneral.

00:16:13.806 --> 00:16:16.366 A:middle
This is like, you know,
mixed text and graphics,

00:16:16.366 --> 00:16:18.006 A:middle
like a webpage that
we're showing here.

00:16:18.866 --> 00:16:21.996 A:middle
We'll tell the printer to
print at normal quality,

00:16:21.996 --> 00:16:23.406 A:middle
so it's not going
to do high quality

00:16:23.406 --> 00:16:25.286 A:middle
and take a really long time.

00:16:25.286 --> 00:16:27.586 A:middle
It'll by default choose
a document paper size,

00:16:27.586 --> 00:16:29.096 A:middle
so like A4 or letter.

00:16:30.036 --> 00:16:33.286 A:middle
The UI allows duplex to be
shown and page range too.

00:16:34.126 --> 00:16:36.826 A:middle
Next one we have is
document grayscale.

00:16:36.936 --> 00:16:38.786 A:middle
This is very similar
to the previous one,

00:16:38.786 --> 00:16:41.996 A:middle
but this is optimized
for monochrome like text

00:16:41.996 --> 00:16:43.486 A:middle
and monochrome graphics.

00:16:43.706 --> 00:16:46.266 A:middle
In this case, you'll
get improved print speed

00:16:46.266 --> 00:16:48.686 A:middle
because we can tell the printer
this is just black and white.

00:16:49.076 --> 00:16:51.476 A:middle
The data over the
network can be less.

00:16:52.066 --> 00:16:56.526 A:middle
It will in many cases reduce
the amount of ink that gets used

00:16:56.526 --> 00:16:58.516 A:middle
because the printer will
go into a black-only mode.

00:16:59.336 --> 00:17:03.246 A:middle
And like the previous
example, duplex allowed


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:16:59.336 --> 00:17:03.246 A:middle
And like the previous
example, duplex allowed

00:17:03.246 --> 00:17:05.796 A:middle
and page range controls
will be allowed in the UI.

00:17:06.906 --> 00:17:08.415 A:middle
The next one is photo.

00:17:08.415 --> 00:17:10.496 A:middle
Like Howard mentioned, you can
tell us you're printing a photo.

00:17:11.576 --> 00:17:13.736 A:middle
We'll choose high quality,
we'll tell the printer,

00:17:13.826 --> 00:17:15.776 A:middle
this is a photo, print
it at highest quality.

00:17:16.455 --> 00:17:19.136 A:middle
We'll choose a photo paper
size based on the region.

00:17:20.496 --> 00:17:22.136 A:middle
If the printer allows
borderless printing,

00:17:22.136 --> 00:17:23.445 A:middle
we'll choose borderless
printing.

00:17:24.705 --> 00:17:26.856 A:middle
And because duplex and
page range don't make sense

00:17:26.856 --> 00:17:28.706 A:middle
for a photo, we don't
show those in UI.

00:17:28.846 --> 00:17:30.436 A:middle
So you get a really,
really simple UI.

00:17:31.056 --> 00:17:35.546 A:middle
And then similarly, we have
high quality grayscale photo,

00:17:35.546 --> 00:17:40.026 A:middle
which is in most ways it's
the same as the previous one.

00:17:40.966 --> 00:17:43.686 A:middle
But some printers have a
high-quality grayscale mode.

00:17:43.686 --> 00:17:47.686 A:middle
Some have gray inks
and can print a photo

00:17:47.686 --> 00:17:49.246 A:middle
in grayscale really,
really nicely.

00:17:49.626 --> 00:17:50.966 A:middle
So we'll tell the
printer to do that.

00:17:50.966 --> 00:17:53.636 A:middle
So choose this if you
want your photo to come

00:17:53.636 --> 00:17:56.146 A:middle
out in a really high-end
grayscale way.

00:17:56.676 --> 00:17:59.636 A:middle
Okay, so that's UIPrintInfo.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:18:00.546 --> 00:18:02.356 A:middle
Next we'll talk about
UIPrintPaper.

00:18:02.356 --> 00:18:04.456 A:middle
This is a really simple class,

00:18:04.456 --> 00:18:06.366 A:middle
it just basically
has a paperRect

00:18:06.366 --> 00:18:11.206 A:middle
that represents the full
sheet of paper, at (0,0),

00:18:11.206 --> 00:18:13.196 A:middle
and just the rectangle
is the size of the sheet.

00:18:13.766 --> 00:18:15.556 A:middle
Then inside of that we
have the printableRect,

00:18:16.366 --> 00:18:17.616 A:middle
this is the imageable area.

00:18:18.686 --> 00:18:22.496 A:middle
It's where the printer can
actually image content.

00:18:22.496 --> 00:18:26.086 A:middle
So it's basically the full page
minus the hardware margins.

00:18:27.316 --> 00:18:31.726 A:middle
Okay, next we'll talk
about providing content,

00:18:31.806 --> 00:18:34.446 A:middle
so this is really the meat
of the presentation here.

00:18:35.216 --> 00:18:37.486 A:middle
There's three levels here.

00:18:37.486 --> 00:18:39.806 A:middle
We have the easiest way,

00:18:39.806 --> 00:18:42.156 A:middle
then there's a little bit
more it's still simple

00:18:42.156 --> 00:18:43.176 A:middle
but a little bit more involved,

00:18:43.176 --> 00:18:45.156 A:middle
and then the fully
custom drawn pages.

00:18:45.726 --> 00:18:49.536 A:middle
So first, the easy is
PDF files, image files,

00:18:49.536 --> 00:18:51.646 A:middle
things that are already
basically ready to print.

00:18:52.576 --> 00:18:56.156 A:middle
To print these, it
could be a single item

00:18:56.196 --> 00:18:58.396 A:middle
or it can be an array of
items, like if you have a bunch

00:18:58.396 --> 00:19:00.476 A:middle
of photos you wanted to print,
you could provide an array.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:18:58.396 --> 00:19:00.476 A:middle
of photos you wanted to print,
you could provide an array.

00:19:00.976 --> 00:19:03.866 A:middle
It could be, like I
said, PDFs, JPEGs,

00:19:03.866 --> 00:19:05.866 A:middle
any image type that
iOS understands.

00:19:06.686 --> 00:19:10.646 A:middle
It can be in the form of an
NSURL to like a file on disk,

00:19:11.106 --> 00:19:12.836 A:middle
or they could be in
memory in the form

00:19:12.836 --> 00:19:16.216 A:middle
of an NSData, UIImage, CIImage.

00:19:16.256 --> 00:19:19.866 A:middle
It can even be something in the
photo library like an ALAsset

00:19:19.866 --> 00:19:24.006 A:middle
or an ALAssetURL, and the
printing system knows how to go

00:19:24.006 --> 00:19:25.626 A:middle
into the photo library
and grab that.

00:19:26.966 --> 00:19:28.426 A:middle
If you provide an
array of items,

00:19:28.426 --> 00:19:30.416 A:middle
each one of those items
will be a separate job.

00:19:34.516 --> 00:19:37.866 A:middle
So here's all the code that it
would take to print a PDF file.

00:19:37.996 --> 00:19:38.666 A:middle
It's pretty simple.

00:19:39.476 --> 00:19:42.636 A:middle
This method just takes in the
URL to a PDF file on disk.

00:19:43.876 --> 00:19:46.316 A:middle
First we ask the
UIPrintInteractionController

00:19:46.996 --> 00:19:48.936 A:middle
if it can print this URL.

00:19:49.506 --> 00:19:51.666 A:middle
Some examples of when it
wouldn't be able to print it are

00:19:51.666 --> 00:19:53.746 A:middle
if the PDF was
password-protected

00:19:53.746 --> 00:19:55.356 A:middle
or if it was malformed
in some way.

00:19:57.426 --> 00:20:00.726 A:middle
Next we grab the
UIPrintInteractionControllers.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:19:57.426 --> 00:20:00.726 A:middle
Next we grab the
UIPrintInteractionControllers.

00:20:01.096 --> 00:20:03.656 A:middle
It's a shared object, so we just
grab the sharedPrintController.

00:20:04.126 --> 00:20:07.296 A:middle
We set the printing
item property

00:20:07.356 --> 00:20:08.796 A:middle
to be this URL to our PDF.

00:20:08.796 --> 00:20:11.296 A:middle
If it was an array of items,

00:20:11.756 --> 00:20:13.796 A:middle
there's a different
property called printingItems

00:20:14.096 --> 00:20:15.296 A:middle
that you'd set to be the array.

00:20:15.986 --> 00:20:19.966 A:middle
And then we set up our
UIPrintInfo, like I said,

00:20:19.966 --> 00:20:21.136 A:middle
we'll do this for every job.

00:20:21.336 --> 00:20:26.366 A:middle
We'll set the output type to
be UIPrintInfoOutputGeneral,

00:20:26.546 --> 00:20:29.686 A:middle
because PDFs typically have
mixed text and graphics.

00:20:30.116 --> 00:20:33.076 A:middle
The job name will be just
the filename of the PDF.

00:20:33.076 --> 00:20:35.906 A:middle
And then we'll set the
print info property

00:20:35.956 --> 00:20:37.576 A:middle
of the
UIPrintInteractionController

00:20:37.616 --> 00:20:39.116 A:middle
to be the print info
that we just created.

00:20:39.546 --> 00:20:45.046 A:middle
Next we'll set the show as
page range property to be yes.

00:20:45.306 --> 00:20:48.966 A:middle
By default it's no, but for a
PDF, usually users are going

00:20:48.966 --> 00:20:50.866 A:middle
to want to be able
to specify page range

00:20:50.866 --> 00:20:51.946 A:middle
within the PDF to print.

00:20:52.456 --> 00:20:57.276 A:middle
And then we'll just
call presentAnimated:YES

00:20:57.456 --> 00:20:59.456 A:middle
completionHandler with
no completion handler.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:21:00.196 --> 00:21:03.326 A:middle
And at this point iOS
takes over, you don't have

00:21:03.326 --> 00:21:04.426 A:middle
to do anything else in your app.

00:21:04.546 --> 00:21:08.516 A:middle
Like I said, if there's issues,
you know, like out of paper,

00:21:08.516 --> 00:21:09.826 A:middle
any of that kind of
stuff, that's all managed

00:21:09.826 --> 00:21:11.366 A:middle
by the system, you
don't have to handle any

00:21:11.366 --> 00:21:12.356 A:middle
of those errors or anything.

00:21:12.756 --> 00:21:16.256 A:middle
Okay, so that's the easy level.

00:21:17.866 --> 00:21:20.486 A:middle
Next is basic: printing
simple content.

00:21:20.486 --> 00:21:22.486 A:middle
If you have just text

00:21:22.486 --> 00:21:25.976 A:middle
or if you've written your
whole print layout in HTML,

00:21:26.846 --> 00:21:29.296 A:middle
you'll just use one of these
provided formatter classes.

00:21:31.256 --> 00:21:34.526 A:middle
So formatters is
what we'll be using.

00:21:35.066 --> 00:21:36.016 A:middle
Now, what is a formatter?

00:21:36.676 --> 00:21:38.956 A:middle
It's pretty basic, it
just basically takes

00:21:38.956 --> 00:21:41.206 A:middle
in the abstract sense, it
takes some data in your app

00:21:42.426 --> 00:21:45.066 A:middle
and some rectangle on the
outputted sheet of paper,

00:21:45.966 --> 00:21:47.336 A:middle
and it knows how to format it.

00:21:47.336 --> 00:21:48.646 A:middle
So it's pretty basic.

00:21:48.676 --> 00:21:52.746 A:middle
So in this case, like
a string of texts,

00:21:53.506 --> 00:21:55.886 A:middle
say we have the Gettysburg
Address in an NSString,

00:21:56.886 --> 00:21:58.746 A:middle
we can use a
UISimpleTextFormatter

00:21:59.016 --> 00:22:01.966 A:middle
and it knows how to take
that string and to lay it


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:21:59.016 --> 00:22:01.966 A:middle
and it knows how to take
that string and to lay it

00:22:01.966 --> 00:22:03.776 A:middle
out onto a page into
this rectangle.

00:22:03.776 --> 00:22:06.566 A:middle
Now, the whole string
doesn't fit on this one page,

00:22:06.566 --> 00:22:12.116 A:middle
so formatter knows to just keep
going until all the content -

00:22:12.116 --> 00:22:14.286 A:middle
all the data gets used up.

00:22:16.776 --> 00:22:18.666 A:middle
So you can use formatters
directly

00:22:18.666 --> 00:22:20.246 A:middle
with
UIPrinterInteractionController

00:22:20.246 --> 00:22:23.566 A:middle
or the UIActivityController,
the share sheet

00:22:23.566 --> 00:22:24.856 A:middle
to format for a whole page.

00:22:25.706 --> 00:22:28.596 A:middle
You can also use formatters as
a helper and a full renderer,

00:22:28.666 --> 00:22:29.836 A:middle
and we'll talk about that later.

00:22:30.796 --> 00:22:34.196 A:middle
For plain text, use this
UISimpleTextFormatter.

00:22:34.606 --> 00:22:37.906 A:middle
This allows you to specify font,
color, alignment, you know,

00:22:37.906 --> 00:22:40.336 A:middle
kind of control the text, how
you want it to look on the page.

00:22:40.846 --> 00:22:45.096 A:middle
For HTML markup, you'll use
the UIMarkupTextFormatter.

00:22:45.246 --> 00:22:47.396 A:middle
And it knows how to
format, you know,

00:22:47.396 --> 00:22:49.396 A:middle
based on HTML rules,
using WebKit.

00:22:50.006 --> 00:22:55.336 A:middle
So the layout, by
default, here's our paper,

00:22:55.336 --> 00:22:56.306 A:middle
like we shared before,

00:22:56.626 --> 00:22:58.326 A:middle
by default it uses
the printableRect,

00:22:59.006 --> 00:23:00.046 A:middle
which is the imageable area.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:22:59.006 --> 00:23:00.046 A:middle
which is the imageable area.

00:23:00.836 --> 00:23:03.106 A:middle
But that might be really, really
close to the edge of the page.

00:23:03.106 --> 00:23:05.756 A:middle
Some printers, you know, only
have like 1/10 of an inch

00:23:05.756 --> 00:23:07.836 A:middle
on the edge that
they can't print.

00:23:07.926 --> 00:23:09.746 A:middle
So like Howard mentioned,
that's not a good thing.

00:23:09.746 --> 00:23:12.186 A:middle
We don't want our
content to be that close

00:23:12.186 --> 00:23:13.096 A:middle
to the edge of the page.

00:23:14.606 --> 00:23:18.536 A:middle
So we've provided a property on
the formatter that you can use.

00:23:18.576 --> 00:23:21.726 A:middle
And new this year, we
have perPageContentInsets.

00:23:22.276 --> 00:23:27.246 A:middle
This lets you specify left, top,
right and bottom on every page.

00:23:28.236 --> 00:23:33.356 A:middle
So it'll keep going until
all the content's used up

00:23:33.356 --> 00:23:35.686 A:middle
and it'll honor those
margins on every single page.

00:23:36.186 --> 00:23:37.766 A:middle
Previously we had
a content inset,

00:23:38.206 --> 00:23:39.926 A:middle
which has behaved a
little bit differently,

00:23:39.926 --> 00:23:42.516 A:middle
and we think this is a little
better, it'll allow you

00:23:42.516 --> 00:23:44.616 A:middle
to get nice top and
bottom margins

00:23:44.756 --> 00:23:46.656 A:middle
that are consistent
on every single page.

00:23:49.606 --> 00:23:52.526 A:middle
So here's a quick code
sample of using a formatter.

00:23:53.216 --> 00:23:54.616 A:middle
And this is all the
code you would need

00:23:54.616 --> 00:23:57.476 A:middle
if you had your print
layout design in HTML,

00:23:57.726 --> 00:24:00.686 A:middle
this is really all you'd need
to do is this method here.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:23:57.726 --> 00:24:00.686 A:middle
this is really all you'd need
to do is this method here.

00:24:01.336 --> 00:24:04.456 A:middle
And so the method takes the
HTML text as a parameter.

00:24:05.516 --> 00:24:07.576 A:middle
We create our
UIMarkupTextFormatter,

00:24:08.446 --> 00:24:11.316 A:middle
initialize it with the
text that was passed in.

00:24:12.376 --> 00:24:15.606 A:middle
Next we set up our per
page content insets,

00:24:16.066 --> 00:24:17.306 A:middle
which is a UIEdgeInset.

00:24:17.306 --> 00:24:19.276 A:middle
So we'll call UIEdgeInsetsMake.

00:24:20.186 --> 00:24:24.486 A:middle
We'll put 3/4 inch top
left, bottom and right.

00:24:25.446 --> 00:24:29.386 A:middle
And then we'll just set the
print formatter property

00:24:29.386 --> 00:24:31.586 A:middle
on the controller to be the
formatter we just created.

00:24:32.076 --> 00:24:35.366 A:middle
Then we'll set up our
UIPrintInfo like we always do.

00:24:35.756 --> 00:24:38.176 A:middle
We'll just set output general.

00:24:38.176 --> 00:24:41.976 A:middle
The job name will be
the webpage's URL field.

00:24:42.686 --> 00:24:44.846 A:middle
And you present.

00:24:44.996 --> 00:24:48.736 A:middle
So that's all that
you need to do.

00:24:48.976 --> 00:24:53.026 A:middle
Now, view formatters, every view
in iOS has a print formatter

00:24:53.026 --> 00:24:55.206 A:middle
that knows how to
get the content

00:24:55.206 --> 00:24:56.096 A:middle
in the view onto the page.

00:24:56.096 --> 00:25:01.476 A:middle
iOS wasn't really designed to
be view-based printing though,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:24:56.096 --> 00:25:01.476 A:middle
iOS wasn't really designed to
be view-based printing though,

00:25:01.616 --> 00:25:03.656 A:middle
but some views are
really useful for this.

00:25:03.926 --> 00:25:06.766 A:middle
So this example, a map view, if
you want to get that content,

00:25:06.836 --> 00:25:09.946 A:middle
the map that's in a
map view, all you need

00:25:09.946 --> 00:25:12.386 A:middle
to do is call the
ViewPrintFormatter

00:25:12.386 --> 00:25:14.956 A:middle
on your map view, and then
you can add this right

00:25:14.956 --> 00:25:17.296 A:middle
to your print controller
and print with it.

00:25:17.946 --> 00:25:19.706 A:middle
Another view that's
really useful

00:25:19.946 --> 00:25:23.046 A:middle
to use the view print
formatter is a web view.

00:25:23.176 --> 00:25:25.076 A:middle
If you have a web view in
your app and you want to get

00:25:25.076 --> 00:25:26.986 A:middle
that content to print,
all you need

00:25:26.986 --> 00:25:28.456 A:middle
to call is the
ViewPrintFormatter.

00:25:28.566 --> 00:25:30.116 A:middle
So you don't need to
initialize it on your own,

00:25:30.116 --> 00:25:33.456 A:middle
you just grab it from the view.

00:25:33.656 --> 00:25:35.506 A:middle
Okay, so that's our
print formatters.

00:25:35.506 --> 00:25:41.926 A:middle
So that's the intermediate
level, the basic level.

00:25:42.326 --> 00:25:44.386 A:middle
Next is, you know, a
little bit more advanced,

00:25:44.386 --> 00:25:46.046 A:middle
it's fully custom drawn pages.

00:25:46.046 --> 00:25:47.426 A:middle
This is for if you want

00:25:47.426 --> 00:25:49.916 A:middle
to really take total
control over the drawing.

00:25:50.556 --> 00:25:52.286 A:middle
And we'll be rendering the pages

00:25:52.286 --> 00:25:54.886 A:middle
with content using
renders mostly

00:25:54.886 --> 00:25:56.526 A:middle
but you can also
use the formatters,

00:25:56.526 --> 00:25:59.446 A:middle
like we just went
over, in renderer.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:26:02.916 --> 00:26:05.526 A:middle
So renders, what is a renderer?

00:26:06.416 --> 00:26:08.866 A:middle
Well, here's our renderer object
and it's really responsible

00:26:08.866 --> 00:26:10.636 A:middle
for at least two things.

00:26:11.096 --> 00:26:13.866 A:middle
First of which is
responding to number of pages,

00:26:13.866 --> 00:26:16.726 A:middle
so it has to know how many pages
total is going to be printing.

00:26:16.966 --> 00:26:19.556 A:middle
In this case, two,
it responds two.

00:26:20.206 --> 00:26:22.416 A:middle
The next thing it has to do is

00:26:22.556 --> 00:26:26.346 A:middle
when it's called drawContentFor
PageAtIndex:inRect.

00:26:26.796 --> 00:26:29.266 A:middle
So the printing system tells
it draw the first page.

00:26:30.566 --> 00:26:32.886 A:middle
And it gets to use
any drawing methods

00:26:32.946 --> 00:26:34.216 A:middle
that are at its disposal.

00:26:34.216 --> 00:26:37.736 A:middle
So any screen drawing methods,
Core graphics, Core texts,

00:26:38.606 --> 00:26:39.796 A:middle
UIKit drawing methods.

00:26:40.096 --> 00:26:42.576 A:middle
And then it's told,
draw the second page,

00:26:42.576 --> 00:26:44.446 A:middle
because we said two
pages, and so it just gets

00:26:44.446 --> 00:26:46.286 A:middle
to do however it wants to draw.

00:26:47.486 --> 00:26:48.996 A:middle
So this is what you'd
do for, you know,

00:26:49.146 --> 00:26:51.846 A:middle
elaborate printed output.

00:26:53.816 --> 00:26:56.216 A:middle
So you'll subclass
UIPrintPageRenderer.

00:26:56.656 --> 00:26:59.746 A:middle
And like I said, at a minimum
you'll override number of pages,

00:26:59.996 --> 00:27:01.846 A:middle
and drawContentForPageAtIndex.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:26:59.996 --> 00:27:01.846 A:middle
and drawContentForPageAtIndex.

00:27:02.496 --> 00:27:05.686 A:middle
It also has a few other
methods you can override,

00:27:05.686 --> 00:27:07.756 A:middle
like draw header, draw
footer, things like that,

00:27:08.286 --> 00:27:09.356 A:middle
and those are documented.

00:27:11.156 --> 00:27:13.106 A:middle
You'll set the
UIPrintInteraction Controllers

00:27:13.106 --> 00:27:16.856 A:middle
printPageRenderer property to
be your instantiated object

00:27:16.856 --> 00:27:19.526 A:middle
or your custom
UIPrintPageRenderer class.

00:27:20.536 --> 00:27:23.246 A:middle
Or you can add that object to
the array of activity items,

00:27:23.356 --> 00:27:24.666 A:middle
if you're using a share sheet.

00:27:25.196 --> 00:27:29.166 A:middle
You can also add formatters
by calling addPrintFormatter:

00:27:29.166 --> 00:27:32.106 A:middle
startingAtPageIndex, because
a print formatter can start

00:27:32.106 --> 00:27:32.906 A:middle
at any page.

00:27:33.706 --> 00:27:36.006 A:middle
Now, how would you use a
formatter with a renderer?

00:27:36.106 --> 00:27:40.066 A:middle
Kind of maybe a little bit
complicated to think about,

00:27:40.066 --> 00:27:41.576 A:middle
but it's really pretty basic.

00:27:41.816 --> 00:27:44.576 A:middle
So here's our renderer, and
when it's told to draw page,

00:27:44.956 --> 00:27:47.346 A:middle
all it's doing is it's going
to draw some flourishes

00:27:47.346 --> 00:27:48.336 A:middle
on the top and the bottom.

00:27:48.936 --> 00:27:51.006 A:middle
But in the middle we
want to draw text.

00:27:51.806 --> 00:27:54.366 A:middle
So the renderer has a
UISimpleTextFormatter.

00:27:55.556 --> 00:27:56.896 A:middle
Here's our rectangle
that we've set

00:27:56.896 --> 00:27:58.296 A:middle
up where we want
that text to go.

00:27:58.726 --> 00:28:00.886 A:middle
And our Gettysburg
Address again.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:27:58.726 --> 00:28:00.886 A:middle
And our Gettysburg
Address again.

00:28:00.886 --> 00:28:03.376 A:middle
The UISimpleTextFormatter
just formats it in the middle.

00:28:03.576 --> 00:28:08.566 A:middle
So if you want to use formatter
to, you know, do HTML on a part

00:28:08.566 --> 00:28:10.706 A:middle
of your page but then
you want full control

00:28:10.706 --> 00:28:15.516 A:middle
over drawing the rest
of it, you can do that.

00:28:15.516 --> 00:28:18.426 A:middle
Okay, so showing the UI, there's
a couple different options.

00:28:19.736 --> 00:28:21.816 A:middle
Printing from the
share sheet is probably

00:28:22.136 --> 00:28:23.726 A:middle
where most people
expect printing

00:28:23.836 --> 00:28:25.706 A:middle
if it's sharing some
general content

00:28:25.706 --> 00:28:27.046 A:middle
and printing is one
of the options.

00:28:27.736 --> 00:28:30.266 A:middle
This is where printing appears
in most of the built-in apps

00:28:30.266 --> 00:28:32.936 A:middle
in iOS, like here in Safari.

00:28:33.596 --> 00:28:36.936 A:middle
To do that is really
basic, we'll just,

00:28:37.876 --> 00:28:39.486 A:middle
when we set up our
activityItems,

00:28:41.096 --> 00:28:44.266 A:middle
we'll just add a printInfo
which has job name and job type

00:28:44.266 --> 00:28:47.326 A:middle
and all that, you can add then
a renderer like this case.

00:28:48.096 --> 00:28:51.316 A:middle
And for this example we're
like sharing a webpage,

00:28:51.316 --> 00:28:54.086 A:middle
and most the time when you share
a webpage you're sharing the

00:28:54.086 --> 00:28:54.996 A:middle
actual URL.

00:28:55.346 --> 00:28:57.576 A:middle
But in the case of printing,
you want to actually render

00:28:57.576 --> 00:28:58.476 A:middle
out the whole web page.

00:28:58.476 --> 00:28:59.916 A:middle
So that's what this
example's showing.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:29:01.176 --> 00:29:04.656 A:middle
Now we'll just initialize
our UIActivityViewController

00:29:05.216 --> 00:29:07.096 A:middle
with activity items
that we just created,

00:29:07.416 --> 00:29:09.616 A:middle
and nil application activities.

00:29:09.616 --> 00:29:11.836 A:middle
So printing is always
an activity item,

00:29:11.836 --> 00:29:13.236 A:middle
not an application activity.

00:29:13.296 --> 00:29:17.066 A:middle
And then we'll just present
using the standard view

00:29:17.066 --> 00:29:18.126 A:middle
controller present methods.

00:29:18.656 --> 00:29:23.526 A:middle
So in the other case, printing
with like a Print button,

00:29:23.526 --> 00:29:25.976 A:middle
you'll create and set up the
UIPrintInteractionController,

00:29:26.106 --> 00:29:27.636 A:middle
like we did in our examples.

00:29:28.536 --> 00:29:30.096 A:middle
For a standard presentation,

00:29:30.346 --> 00:29:32.386 A:middle
you'll call presentAnimated
CompletionHandler.

00:29:33.316 --> 00:29:37.296 A:middle
And for a popover presentation,
presentFromRect inView

00:29:37.626 --> 00:29:40.536 A:middle
or presentFromBarButton item,
animated completionHandler.

00:29:43.856 --> 00:29:45.576 A:middle
So now printing as a menu item,

00:29:45.576 --> 00:29:48.096 A:middle
if you want to embed the
printing UI in your own UI,

00:29:48.386 --> 00:29:51.226 A:middle
like in this case's pages where
you select the Print button

00:29:51.926 --> 00:29:54.236 A:middle
and it slides over and
gets pushed into it

00:29:54.236 --> 00:29:55.136 A:middle
like a NAV controller.

00:29:56.286 --> 00:29:58.316 A:middle
You'll set your class
as a delegate

00:29:58.376 --> 00:30:00.326 A:middle
for the shared UI
printInteractionController.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:29:58.376 --> 00:30:00.326 A:middle
for the shared UI
printInteractionController.

00:30:01.246 --> 00:30:03.036 A:middle
You'll implement
printInteractionController

00:30:03.166 --> 00:30:04.206 A:middle
ParentViewController.

00:30:04.416 --> 00:30:06.986 A:middle
So you'll tell the
printInteractionController

00:30:06.986 --> 00:30:08.876 A:middle
which view should be a parent.

00:30:09.396 --> 00:30:11.906 A:middle
Then when the user
taps print in your UI,

00:30:12.876 --> 00:30:14.336 A:middle
you'll just call
presentAnimated:

00:30:14.336 --> 00:30:16.806 A:middle
CompletionHandler on the
UIPrintInteractionController.

00:30:17.616 --> 00:30:19.516 A:middle
And then if your class

00:30:19.566 --> 00:30:20.896 A:middle
that you've told it
is the parent is a

00:30:20.896 --> 00:30:22.916 A:middle
UINavigationController,
it'll get a push.

00:30:23.046 --> 00:30:25.936 A:middle
And if it's some other
UIViewController,

00:30:25.936 --> 00:30:27.456 A:middle
it'll just get a
modal presentation.

00:30:28.176 --> 00:30:29.986 A:middle
But really the
NavigationController is

00:30:29.986 --> 00:30:30.996 A:middle
where this is most useful.

00:30:33.176 --> 00:30:37.676 A:middle
Now, controlling paper size,
if your app is designed

00:30:37.676 --> 00:30:39.206 A:middle
with specific paper
size in mind,

00:30:39.206 --> 00:30:41.006 A:middle
like a document center gap,

00:30:41.006 --> 00:30:43.596 A:middle
like pages where the
user's actually laying

00:30:43.596 --> 00:30:46.246 A:middle
out their content,
your app will have

00:30:46.246 --> 00:30:47.826 A:middle
to provide its own
paper selection UI.

00:30:48.176 --> 00:30:50.566 A:middle
This is the example for
pages here where you get

00:30:50.566 --> 00:30:52.066 A:middle
to choose a couple
different paper sizes.

00:30:52.916 --> 00:30:54.986 A:middle
Then you'll use the delegate
method printInteraction

00:30:54.986 --> 00:30:56.346 A:middle
Controller:choosePaper.

00:30:57.336 --> 00:30:59.896 A:middle
This is called after the
user selects a printer.

00:30:59.976 --> 00:31:01.416 A:middle
We've communicated
with the printer.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:30:59.976 --> 00:31:01.416 A:middle
We've communicated
with the printer.

00:31:01.586 --> 00:31:03.346 A:middle
We figured out the
papers that are available.

00:31:04.836 --> 00:31:07.766 A:middle
And you then will ask for a
paper size that's a good match

00:31:07.766 --> 00:31:09.206 A:middle
to the one that the
user selected.

00:31:09.816 --> 00:31:13.426 A:middle
If the printer has paper sensors

00:31:13.426 --> 00:31:15.876 A:middle
or if the user inputted exactly
what paper they're loading,

00:31:16.266 --> 00:31:18.516 A:middle
the array that gets returned
will only be the ones

00:31:18.516 --> 00:31:21.036 A:middle
that are detected, because those
are the only options available.

00:31:22.846 --> 00:31:28.266 A:middle
So here's a quick example of our
delegate method for choosePaper.

00:31:28.676 --> 00:31:32.896 A:middle
In this case we're looking for
8 1/2 by 11 sheet of paper,

00:31:32.896 --> 00:31:35.996 A:middle
so we'll just create
a CGSize pageSize.

00:31:36.946 --> 00:31:41.876 A:middle
And then we'll use UIPrintPaper
bestPaperForPageSize

00:31:42.276 --> 00:31:43.776 A:middle
withPapersFromArray method.

00:31:44.516 --> 00:31:46.896 A:middle
So we've provided this method
for you on UIPrintPaper

00:31:46.896 --> 00:31:49.866 A:middle
because it's actually
pretty complicated to match

00:31:50.536 --> 00:31:54.236 A:middle
for a target paper size
from a list of papers,

00:31:54.236 --> 00:31:58.016 A:middle
it's kind of complicated and
we've made it easy for you.

00:31:58.016 --> 00:31:59.686 A:middle
So we just recommend
that you just call this.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:32:00.746 --> 00:32:03.246 A:middle
Next up is roll paper.

00:32:03.436 --> 00:32:04.946 A:middle
This was new in iOS 7.

00:32:06.676 --> 00:32:08.436 A:middle
It's similar to choose paper

00:32:08.436 --> 00:32:11.996 A:middle
in that you can have a delegate
method called cutLengthForPaper.

00:32:13.646 --> 00:32:16.646 A:middle
This method will only be called
after the user selects a printer

00:32:16.646 --> 00:32:20.526 A:middle
that actually has a
roll loaded in it.

00:32:20.526 --> 00:32:23.836 A:middle
It'll have a UIPrintPaper
passed into it with the width

00:32:23.836 --> 00:32:25.646 A:middle
of the roll, and the height

00:32:25.646 --> 00:32:29.446 A:middle
of the paper will be the maximum
height that the printer allows.

00:32:31.016 --> 00:32:33.966 A:middle
By default, if you don't
have this delegate method,

00:32:33.966 --> 00:32:37.606 A:middle
which most apps won't, and
if the user chooses a printer

00:32:37.606 --> 00:32:40.826 A:middle
that has a roll loaded, the cut
length will just be proportional

00:32:40.826 --> 00:32:43.156 A:middle
to whatever default paper
would be used for that job.

00:32:43.156 --> 00:32:50.336 A:middle
Okay, next up this is
the new thing in iOS 8

00:32:50.336 --> 00:32:51.696 A:middle
that we're very happy

00:32:51.766 --> 00:32:53.796 A:middle
to announce is printing
without showing UI.

00:32:56.076 --> 00:33:00.046 A:middle
Now this opens up the
opportunity for new types


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:32:56.076 --> 00:33:00.046 A:middle
Now this opens up the
opportunity for new types

00:33:00.046 --> 00:33:02.396 A:middle
of printing applications, so
we're really excited about that.

00:33:02.856 --> 00:33:07.506 A:middle
WWDC this year is all about
enabling developers to do new,

00:33:07.506 --> 00:33:09.616 A:middle
interesting things that you
weren't able to do before.

00:33:09.616 --> 00:33:10.806 A:middle
So we're excited to have this.

00:33:11.426 --> 00:33:13.576 A:middle
But what this is
not for is for apps

00:33:13.576 --> 00:33:15.916 A:middle
that provide their own
custom print panel.

00:33:15.916 --> 00:33:18.446 A:middle
It wasn't designed for that, and
in some ways you're not going

00:33:18.446 --> 00:33:21.086 A:middle
to be able to do that.

00:33:21.426 --> 00:33:22.886 A:middle
So here's our standard
printing UI,

00:33:23.506 --> 00:33:25.546 A:middle
let's just break it
down into some steps.

00:33:26.136 --> 00:33:28.356 A:middle
First what the user
uses this UI to do is

00:33:28.356 --> 00:33:32.116 A:middle
to select their printer,
then they set some options

00:33:32.116 --> 00:33:34.966 A:middle
like copies or duplex,
things like that.

00:33:34.966 --> 00:33:39.086 A:middle
And then they tap Print when
they actually want to print.

00:33:39.336 --> 00:33:40.826 A:middle
So what we've really
done is separated this

00:33:40.826 --> 00:33:41.906 A:middle
out into two things.

00:33:42.286 --> 00:33:45.266 A:middle
The user's still going to
need to select a printer,

00:33:46.246 --> 00:33:47.396 A:middle
but that's done up front.

00:33:47.666 --> 00:33:49.556 A:middle
And so for that we
have a printer picker.

00:33:50.846 --> 00:33:54.136 A:middle
And then to replace the settings
that they would be using,

00:33:54.136 --> 00:33:55.896 A:middle
we have App Controlled
Settings in API.

00:33:55.896 --> 00:33:59.966 A:middle
And then we have
a new print method

00:33:59.966 --> 00:34:02.496 A:middle
on UIPrintInteractionController
that you'll be calling.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:33:59.966 --> 00:34:02.496 A:middle
on UIPrintInteractionController
that you'll be calling.

00:34:02.766 --> 00:34:05.346 A:middle
So it's kind of separated
into two things, initial setup

00:34:05.346 --> 00:34:07.746 A:middle
and then when you
actually print.

00:34:08.706 --> 00:34:10.556 A:middle
So the basic steps for
printing without a UI,

00:34:11.255 --> 00:34:13.716 A:middle
first your app will include a
setting for setting the printer,

00:34:13.916 --> 00:34:15.826 A:middle
this is in the app
setting somewhere

00:34:15.826 --> 00:34:17.315 A:middle
or in a settings
button somewhere.

00:34:18.266 --> 00:34:20.226 A:middle
So to do that you'll first
get the printer selector,

00:34:20.226 --> 00:34:21.686 A:middle
this new class.

00:34:22.496 --> 00:34:23.335 A:middle
You'll present that UI.

00:34:24.896 --> 00:34:27.065 A:middle
Then you'll save the
printer chosen by the user.

00:34:27.065 --> 00:34:28.906 A:middle
So the user will be
choosing a printer.

00:34:28.906 --> 00:34:30.496 A:middle
It's the app's responsibility
to save that.

00:34:31.446 --> 00:34:34.846 A:middle
Then whenever appropriate,
when your app decides to print,

00:34:35.806 --> 00:34:37.485 A:middle
the app will then get
the print controller,

00:34:37.485 --> 00:34:38.936 A:middle
the
UIPrintInteractionController.

00:34:39.516 --> 00:34:42.156 A:middle
It'll set up the attributes for
the job and provide content,

00:34:42.156 --> 00:34:43.275 A:middle
just like we did before.

00:34:43.456 --> 00:34:47.045 A:middle
Then they'll send the job with
this new print controller method

00:34:47.045 --> 00:34:48.505 A:middle
that just sends without
showing UI.

00:34:48.505 --> 00:34:52.505 A:middle
At this point, like before, iOS
communicates with the printer,

00:34:52.505 --> 00:34:54.286 A:middle
the Daemon takes over,
your app doesn't have

00:34:54.286 --> 00:34:55.766 A:middle
to deal with any of that.

00:34:57.356 --> 00:35:00.786 A:middle
So here's the classes we'll be
using for background printing.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:34:57.356 --> 00:35:00.786 A:middle
So here's the classes we'll be
using for background printing.

00:35:01.956 --> 00:35:04.086 A:middle
First, the new class,
UIPrinterPickerController,

00:35:04.086 --> 00:35:05.116 A:middle
that you'll be presenting.

00:35:06.246 --> 00:35:09.346 A:middle
Then a UIPrinter object
that your app will be saving

00:35:09.346 --> 00:35:13.056 A:middle
or instantiating between
runs, and providing

00:35:13.056 --> 00:35:14.896 A:middle
that to the
UIPrintInteractionController.

00:35:15.166 --> 00:35:17.366 A:middle
So everything that we've talked

00:35:17.366 --> 00:35:20.286 A:middle
about with the
UIPrinterInteractionController

00:35:20.686 --> 00:35:21.396 A:middle
still applies.

00:35:22.316 --> 00:35:24.356 A:middle
So your app is required

00:35:24.356 --> 00:35:26.196 A:middle
to use this
UIPrinterPickerController

00:35:26.196 --> 00:35:26.916 A:middle
to pick the printer.

00:35:28.126 --> 00:35:31.166 A:middle
It's complicated to show
all the different printers

00:35:31.166 --> 00:35:33.766 A:middle
and sometimes, you know, your
users need to unlock a printer

00:35:33.766 --> 00:35:36.126 A:middle
if it has a username and
password, all that kind

00:35:36.126 --> 00:35:37.396 A:middle
of stuff is handled
by the system.

00:35:37.396 --> 00:35:39.646 A:middle
So you'll use the
UIPrinterPickerController.

00:35:39.926 --> 00:35:41.776 A:middle
It has the same presentation
options

00:35:41.776 --> 00:35:43.156 A:middle
as the print interaction
controller.

00:35:43.156 --> 00:35:45.996 A:middle
So you can present it
as a popover or a sheet

00:35:45.996 --> 00:35:47.806 A:middle
or you can embed it
in a NAV controller.

00:35:49.066 --> 00:35:50.796 A:middle
Then, like I said, your
app will be responsible

00:35:50.796 --> 00:35:51.866 A:middle
for saving that printer.

00:35:52.276 --> 00:35:54.146 A:middle
Between runs you'll
save the URL,

00:35:54.146 --> 00:35:56.246 A:middle
and then you'll instantiate
a new UIPrinter

00:35:56.486 --> 00:35:59.556 A:middle
with just this URL
that you've saved.

00:35:59.806 --> 00:36:00.106 A:middle
Also,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:35:59.806 --> 00:36:00.106 A:middle
Also,

00:36:00.106 --> 00:36:02.346 A:middle
this UIPrinterPickerController
allows you to filter

00:36:02.346 --> 00:36:04.136 A:middle
out printers if your
app is designed

00:36:04.456 --> 00:36:06.146 A:middle
for just a specific
type of printer,

00:36:06.146 --> 00:36:07.436 A:middle
and we'll talk about that later.

00:36:10.046 --> 00:36:11.396 A:middle
So like I said, you'll
create and set

00:36:11.396 --> 00:36:12.926 A:middle
up the
UIPrinterPickerController,

00:36:13.646 --> 00:36:17.056 A:middle
you can present with standard
presentation, presentAnimated,

00:36:17.056 --> 00:36:20.206 A:middle
or pop-over presentation
with presentFromRect

00:36:20.206 --> 00:36:22.356 A:middle
or presentFromBarButton Item.

00:36:22.356 --> 00:36:23.416 A:middle
The completion handler though

00:36:23.416 --> 00:36:27.996 A:middle
for these methods will tell you
whether the user actually did

00:36:27.996 --> 00:36:28.746 A:middle
select a printer.

00:36:29.286 --> 00:36:32.096 A:middle
If they didn't, you know,
they could've just cancel it,

00:36:32.096 --> 00:36:33.726 A:middle
so then it'll say that they
didn't select a printer.

00:36:34.246 --> 00:36:36.056 A:middle
But then your app is
responsible for saving

00:36:36.056 --> 00:36:37.706 A:middle
that printer that was selected.

00:36:39.616 --> 00:36:41.526 A:middle
So when your app is
ready to print then,

00:36:41.856 --> 00:36:43.376 A:middle
at the appropriate moment,

00:36:43.376 --> 00:36:45.076 A:middle
you'll use the
UIPrinterInteractionController

00:36:45.076 --> 00:36:47.516 A:middle
and you'll call the new
method printToPrinter

00:36:47.806 --> 00:36:50.696 A:middle
with this UIPrinter
object completion handler.

00:36:51.586 --> 00:36:54.456 A:middle
The UIPrinter passed in,
like I said, can be obtained

00:36:54.456 --> 00:36:55.976 A:middle
from the
UIPrinterPickerController

00:36:55.976 --> 00:36:58.236 A:middle
directly or you could
have instantiated it

00:36:58.236 --> 00:36:59.406 A:middle
with the saved URL.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:37:00.316 --> 00:37:03.666 A:middle
Okay, so that's
UIPrinterPickerController.

00:37:05.446 --> 00:37:07.566 A:middle
UIPrinter, new class in iOS 8,

00:37:08.626 --> 00:37:10.786 A:middle
first it has a contactPrinter
method.

00:37:11.526 --> 00:37:13.676 A:middle
So this is used if
you're instantiating it,

00:37:13.676 --> 00:37:15.426 A:middle
you want to make sure
this printer is there,

00:37:15.426 --> 00:37:18.686 A:middle
and to fill out the rest of
the properties for the printer,

00:37:18.926 --> 00:37:19.996 A:middle
you have to contact it.

00:37:21.156 --> 00:37:23.046 A:middle
You'll pass in a block
that's a result block

00:37:23.046 --> 00:37:25.006 A:middle
that will tell you whether the
printer's available or not,

00:37:25.006 --> 00:37:30.816 A:middle
it might not be on anymore, so
it'll return no in that case.

00:37:31.456 --> 00:37:33.756 A:middle
Next is the URL which
is a read-only property.

00:37:33.966 --> 00:37:35.326 A:middle
This is what you'll be saving

00:37:35.326 --> 00:37:37.706 A:middle
out once you get your
initial UIPrinter,

00:37:37.706 --> 00:37:38.536 A:middle
you'll be saving this.

00:37:39.046 --> 00:37:41.726 A:middle
Next we have displayName,

00:37:42.046 --> 00:37:45.096 A:middle
which this is our standard
printing UI, the displayName is,

00:37:45.236 --> 00:37:47.206 A:middle
you know, this, the name of
the printer, it's appropriate

00:37:47.206 --> 00:37:50.006 A:middle
for you to show in your UI.

00:37:50.196 --> 00:37:52.676 A:middle
displayLocation which is
the smaller text underneath

00:37:52.726 --> 00:37:53.256 A:middle
the name.

00:37:53.816 --> 00:37:55.936 A:middle
You can use this for
display in your UI as well.

00:37:57.086 --> 00:38:00.186 A:middle
And then some various
things about the printer,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:37:57.086 --> 00:38:00.186 A:middle
And then some various
things about the printer,

00:38:00.186 --> 00:38:02.396 A:middle
like supportedJobTypes,
which is a bit field.

00:38:02.796 --> 00:38:05.516 A:middle
It'll say like whether it
supports photo printing

00:38:05.516 --> 00:38:08.516 A:middle
or receipt printing or envelope
printing, different types

00:38:08.516 --> 00:38:11.156 A:middle
of jobs it supports,
and makeAndModel

00:38:11.156 --> 00:38:12.336 A:middle
and some other capabilities.

00:38:12.336 --> 00:38:18.876 A:middle
So here's a quick code example
of using UIPrinter to show

00:38:18.876 --> 00:38:21.646 A:middle
like the printer name and
the location in your UI.

00:38:23.156 --> 00:38:25.906 A:middle
So first let's grab
the savedPrinterURL

00:38:25.906 --> 00:38:28.036 A:middle
from a previous run
of the application.

00:38:28.036 --> 00:38:30.396 A:middle
Here we're just getting
it from the UserDefaults.

00:38:30.906 --> 00:38:37.326 A:middle
If we got one back from
UserDefaults, we'll initialize

00:38:37.396 --> 00:38:41.166 A:middle
with UIPrinter printerWithURL
with the savedPrinterURL.

00:38:41.886 --> 00:38:44.796 A:middle
And then it'll actually
contact the printer.

00:38:45.856 --> 00:38:49.356 A:middle
The block that we will pass in
we'll see if it's available,

00:38:50.226 --> 00:38:53.986 A:middle
then we'll set our printer name
label to be the display name

00:38:53.986 --> 00:38:56.496 A:middle
of the printer, and the
printer location label

00:38:56.536 --> 00:38:57.706 A:middle
to be the display location.

00:38:57.706 --> 00:39:00.776 A:middle
So the printer name and
location aren't available


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:38:57.706 --> 00:39:00.776 A:middle
So the printer name and
location aren't available

00:39:00.776 --> 00:39:02.216 A:middle
until it's actually
been contacted,

00:39:02.216 --> 00:39:04.886 A:middle
so that's why we do
that in this block.

00:39:05.866 --> 00:39:07.476 A:middle
If the printer's not available,

00:39:09.176 --> 00:39:10.936 A:middle
we'll have some
ConnectionGoneIndicator

00:39:10.936 --> 00:39:11.576 A:middle
in our app.

00:39:11.816 --> 00:39:14.336 A:middle
If you want to have this,
this is how you do it.

00:39:14.336 --> 00:39:17.256 A:middle
So if it was like a little
red indicator to tell users

00:39:17.256 --> 00:39:18.396 A:middle
that their printer's
not available,

00:39:18.396 --> 00:39:23.106 A:middle
this is how you'd do that.

00:39:23.226 --> 00:39:26.546 A:middle
Okay, so like I said, you
can use - you can filter

00:39:26.546 --> 00:39:27.886 A:middle
out printers in the
printer picker.

00:39:28.306 --> 00:39:31.086 A:middle
For that, this is, you
know, for apps designed

00:39:31.086 --> 00:39:33.516 A:middle
with specific printers in mind,
if you really only want your app

00:39:33.516 --> 00:39:37.526 A:middle
to be used with receipt printers
or with, you know, specific type

00:39:37.596 --> 00:39:39.936 A:middle
of printer, this
is what you'd do.

00:39:41.286 --> 00:39:42.706 A:middle
Any one of those properties

00:39:42.866 --> 00:39:45.326 A:middle
on the UIPrinter you
can use to filter.

00:39:46.086 --> 00:39:48.086 A:middle
When you present the
UIPrinterPickerController,

00:39:48.316 --> 00:39:50.616 A:middle
you'll just use the delegate
method, shouldShowPrinter.

00:39:52.046 --> 00:39:54.006 A:middle
You'll return yes or no
whether it should be shown.

00:39:54.216 --> 00:39:56.966 A:middle
So this is called for every
printer as it gets discovered,

00:39:57.666 --> 00:40:00.146 A:middle
and you can choose whether
it gets shown in UI or not.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:39:57.666 --> 00:40:00.146 A:middle
and you can choose whether
it gets shown in UI or not.

00:40:01.406 --> 00:40:02.976 A:middle
So we're really excited
about this.

00:40:03.366 --> 00:40:05.226 A:middle
We really do think this
will enable a new class

00:40:05.226 --> 00:40:06.966 A:middle
of printing applications
that weren't possible.

00:40:07.506 --> 00:40:10.256 A:middle
And to talk about some of
those new types of apps,

00:40:10.256 --> 00:40:12.876 A:middle
I'd like to bring
up Claudia Roberts,

00:40:12.876 --> 00:40:13.876 A:middle
our Printing System Engineer.

00:40:15.516 --> 00:40:20.866 A:middle
[ Applause ]

00:40:21.366 --> 00:40:22.046 A:middle
&gt;&gt; Hello, everyone.

00:40:22.046 --> 00:40:23.336 A:middle
My name is Claudia Roberts

00:40:23.336 --> 00:40:25.086 A:middle
and this is my colleague,
Charles Duyk.

00:40:25.526 --> 00:40:29.096 A:middle
The exciting thing about UI-less
printing is that it opens

00:40:29.096 --> 00:40:31.896 A:middle
up the door to a wide range
of printing applications.

00:40:32.606 --> 00:40:35.326 A:middle
One of our most requested
features for iOS 8 was

00:40:35.326 --> 00:40:37.296 A:middle
to allow apps the
ability to print receipts

00:40:37.296 --> 00:40:38.646 A:middle
without showing the
print dialog.

00:40:39.506 --> 00:40:42.276 A:middle
In a few minutes, Charles will
demonstrate how to do just that,

00:40:42.276 --> 00:40:44.006 A:middle
using a cash register app.

00:40:44.566 --> 00:40:46.946 A:middle
But we encourage you
to think more broadly.

00:40:47.226 --> 00:40:49.266 A:middle
Think of a photo booth app
that automatically prints

00:40:49.266 --> 00:40:50.346 A:middle
out your burst of photos.

00:40:50.346 --> 00:40:54.086 A:middle
Or a label printout to be used
at conference sign-in tables.

00:40:55.086 --> 00:40:57.056 A:middle
The fact that we're letting
you save printers means

00:40:57.056 --> 00:40:58.986 A:middle
that you can now
preconfigure an app to print

00:40:58.986 --> 00:41:00.066 A:middle
to more than one printer.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:40:58.986 --> 00:41:00.066 A:middle
to more than one printer.

00:41:00.606 --> 00:41:02.866 A:middle
This is a great feature that
can be used when setting

00:41:02.866 --> 00:41:04.916 A:middle
up multiple printers
where each might serve a

00:41:04.916 --> 00:41:05.746 A:middle
different function.

00:41:06.296 --> 00:41:07.836 A:middle
Think airline kiosk app.

00:41:08.326 --> 00:41:10.846 A:middle
The person traveling
checks in, enters the number

00:41:10.846 --> 00:41:12.756 A:middle
of bags they're traveling with,

00:41:12.756 --> 00:41:14.946 A:middle
and after finalizing
their information,

00:41:15.156 --> 00:41:17.556 A:middle
one designated printer prints
out their baggage labels

00:41:17.776 --> 00:41:19.946 A:middle
and another prints out
their boarding pass,

00:41:20.476 --> 00:41:22.056 A:middle
all without ever
having to traverse

00:41:22.056 --> 00:41:24.556 A:middle
or even see the print UI.

00:41:25.536 --> 00:41:28.336 A:middle
Today to illustrate the
power of this new feature,

00:41:28.336 --> 00:41:31.886 A:middle
and to demonstrate just how easy
it is to add UI list printing

00:41:31.886 --> 00:41:35.746 A:middle
to your app, we've created a
hypothetical cash register app.

00:41:36.696 --> 00:41:39.366 A:middle
A cash register app is
something you'd find

00:41:39.366 --> 00:41:40.606 A:middle
in most any retail store.

00:41:41.136 --> 00:41:43.976 A:middle
In using the printing
paradigm in iOS 7,

00:41:44.336 --> 00:41:45.866 A:middle
printing a receipt
used to mean a lot

00:41:45.866 --> 00:41:47.886 A:middle
of unnecessary interaction
with the print UI.

00:41:47.956 --> 00:41:50.716 A:middle
And there was really no
way of getting around this.

00:41:51.416 --> 00:41:56.346 A:middle
After finalizing a sale in
this demo app, it takes 1, 2,

00:41:56.986 --> 00:42:01.076 A:middle
3 steps to print out a receipt
each time the clerk goes


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:41:56.986 --> 00:42:01.076 A:middle
3 steps to print out a receipt
each time the clerk goes

00:42:01.076 --> 00:42:01.866 A:middle
to finish the sale.

00:42:02.726 --> 00:42:04.466 A:middle
Add a queue of 5 to 6 people,

00:42:04.526 --> 00:42:06.836 A:middle
and you have yourself a
less than ideal situation.

00:42:07.536 --> 00:42:09.286 A:middle
So what do we know to be true?

00:42:09.286 --> 00:42:11.406 A:middle
For the most part, in a
given day at the shop,

00:42:11.556 --> 00:42:13.066 A:middle
the clerk will almost
always print

00:42:13.066 --> 00:42:14.106 A:middle
to the same receipt printer.

00:42:14.836 --> 00:42:16.576 A:middle
Thus, this leads to
our desired behavior,

00:42:16.916 --> 00:42:19.566 A:middle
the ability to simply tap
on the Finish Sale button

00:42:19.686 --> 00:42:22.316 A:middle
and have our dedicated receipt
printer print out the receipt

00:42:22.586 --> 00:42:24.956 A:middle
so that a customer can
quickly be on his or her way.

00:42:25.546 --> 00:42:29.106 A:middle
I will now hand it over to
Charles who will demonstrate how

00:42:29.106 --> 00:42:32.356 A:middle
to update this cash register app
with the necessary code changes

00:42:32.356 --> 00:42:33.666 A:middle
to achieve the desired behavior.

00:42:34.096 --> 00:42:35.166 A:middle
&gt;&gt; Thanks, Claudia.

00:42:36.146 --> 00:42:40.206 A:middle
So what I have here is the
code for the cash register app

00:42:40.206 --> 00:42:41.466 A:middle
that Claudia just showed you.

00:42:42.016 --> 00:42:45.506 A:middle
And I want to update this
to use these new APIs.

00:42:46.666 --> 00:42:50.246 A:middle
So like Todd said, there's
really two basic steps

00:42:50.416 --> 00:42:51.596 A:middle
to printing without the UI.

00:42:52.106 --> 00:42:54.086 A:middle
The first is selecting
and saving a printer,

00:42:54.086 --> 00:42:56.406 A:middle
and the second is telling iOS

00:42:56.666 --> 00:42:58.236 A:middle
which printer we'd
like to save to.

00:42:58.666 --> 00:43:01.216 A:middle
So in order to do this,
I'm first going to want


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:42:58.666 --> 00:43:01.216 A:middle
So in order to do this,
I'm first going to want

00:43:01.216 --> 00:43:05.096 A:middle
to create a place to
save the UIPrinter object

00:43:05.096 --> 00:43:06.016 A:middle
that I'm going to get.

00:43:06.546 --> 00:43:09.416 A:middle
I'm going to add a property here
to my ReceiptViewController,

00:43:10.416 --> 00:43:12.076 A:middle
using the new UIPrinter class.

00:43:12.766 --> 00:43:14.236 A:middle
This is what iOS uses

00:43:14.566 --> 00:43:19.806 A:middle
to represent the printer
throughout the printing system.

00:43:19.806 --> 00:43:23.116 A:middle
Next I'm going to add a place
where an administrator can go

00:43:23.366 --> 00:43:25.706 A:middle
and set up the cash
register in order

00:43:25.706 --> 00:43:29.246 A:middle
to let the app know this
is the printer I'm going

00:43:29.246 --> 00:43:29.876 A:middle
to be printing to.

00:43:30.516 --> 00:43:32.386 A:middle
So we'll do that in
the Settings button.

00:43:32.456 --> 00:43:35.726 A:middle
So I'm going to go to my
settingsButtonPressed method,

00:43:35.756 --> 00:43:40.316 A:middle
which is a - sorry, which
is the target action

00:43:40.316 --> 00:43:42.456 A:middle
of a Settings button in the app.

00:43:42.746 --> 00:43:43.866 A:middle
And I'm going to go ahead

00:43:44.016 --> 00:43:47.736 A:middle
and create a
UIPrinterPickerController.

00:43:50.906 --> 00:43:53.656 A:middle
We'll create the
UIPrinterPickerController using

00:43:53.806 --> 00:43:56.806 A:middle
printerPickerController
WithInitiallySelectedPrinter,

00:43:57.156 --> 00:43:59.296 A:middle
to scroll the controller
to maybe a printer

00:43:59.296 --> 00:44:01.516 A:middle
that we've already set up.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:43:59.296 --> 00:44:01.516 A:middle
that we've already set up.

00:44:01.936 --> 00:44:06.196 A:middle
Next I'm going to use the
UIPrinterPickerController method

00:44:06.196 --> 00:44:09.326 A:middle
presentFromRect inView
animated in completionHandler.

00:44:09.866 --> 00:44:11.966 A:middle
And when the user goes
and selects a printer,

00:44:12.296 --> 00:44:15.316 A:middle
we'll go ahead and check to
see that they did select it,

00:44:15.566 --> 00:44:18.526 A:middle
and if they didn't cancel the
operation, save the printer

00:44:18.526 --> 00:44:21.666 A:middle
that they selected in the
property that we just created.

00:44:23.366 --> 00:44:25.696 A:middle
Now I'm going to go
ahead and update my app

00:44:25.696 --> 00:44:27.076 A:middle
to use these new APIs.

00:44:29.746 --> 00:44:35.826 A:middle
So here you can see our print
method as it exists in iOS 7.

00:44:36.076 --> 00:44:38.296 A:middle
We do all the standard
printing things,

00:44:38.296 --> 00:44:41.736 A:middle
we create a PrintPageRenderer,
we create a UIPrintInfo,

00:44:41.886 --> 00:44:45.466 A:middle
set some job options, and get
the sharedPrintController,

00:44:46.176 --> 00:44:47.606 A:middle
set the options on the job,

00:44:48.116 --> 00:44:51.346 A:middle
and then present it
using the present APIs,

00:44:51.346 --> 00:44:55.076 A:middle
which you'll notice, look almost
exactly the same as the methods

00:44:55.076 --> 00:44:56.556 A:middle
on UIPrinterPickerController.

00:44:57.156 --> 00:45:00.146 A:middle
So what we can actually do now,
and this is what's kind of neat


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:44:57.156 --> 00:45:00.146 A:middle
So what we can actually do now,
and this is what's kind of neat

00:45:00.146 --> 00:45:02.636 A:middle
about this API, is
delete some of this code,

00:45:02.636 --> 00:45:04.726 A:middle
because we don't need it, we're
no longer presenting anything,

00:45:04.726 --> 00:45:07.346 A:middle
we're just going to
print to printer.

00:45:07.456 --> 00:45:07.886 A:middle
There we go.

00:45:10.006 --> 00:45:12.156 A:middle
Then we can go ahead and
delete that little bit

00:45:12.156 --> 00:45:14.656 A:middle
of auto-generated code.

00:45:14.656 --> 00:45:16.016 A:middle
And it's really just that easy.

00:45:16.546 --> 00:45:18.646 A:middle
All of a sudden, the
completion handler's the same

00:45:18.646 --> 00:45:20.856 A:middle
and we're now going to be
able to print without the UI.

00:45:22.026 --> 00:45:26.946 A:middle
So I'm going to go ahead and
fire up the simulator here

00:45:26.946 --> 00:45:29.076 A:middle
so we can show this to you.

00:45:29.186 --> 00:45:33.286 A:middle
And something that I didn't
get a chance to talk about here

00:45:33.286 --> 00:45:36.326 A:middle
but that could be a logical
extension is maybe filtering

00:45:37.066 --> 00:45:40.526 A:middle
based on the type of printer
that we're going to use.

00:45:41.006 --> 00:45:43.396 A:middle
We want to use only receipt
printers with this app.

00:45:43.436 --> 00:45:47.326 A:middle
But, you know, maybe your
shop also has a photo printer

00:45:47.326 --> 00:45:52.056 A:middle
and you wouldn't want to print
to that - or you wouldn't want

00:45:52.056 --> 00:45:53.276 A:middle
to show that to the
administrator

00:45:53.276 --> 00:45:54.596 A:middle
when they were setting
up the printer.

00:45:54.596 --> 00:45:56.446 A:middle
All right, so now
we have our app.

00:45:57.176 --> 00:45:59.766 A:middle
And let's go ahead, let's say
maybe we're in a coffee shop.

00:45:59.766 --> 00:46:04.306 A:middle
So let's get, you know, the
San Francisco coffee and,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:45:59.766 --> 00:46:04.306 A:middle
So let's get, you know, the
San Francisco coffee and,

00:46:05.326 --> 00:46:06.596 A:middle
you know, maybe a bagel.

00:46:07.176 --> 00:46:10.366 A:middle
Yeah, okay, why not.

00:46:10.366 --> 00:46:14.146 A:middle
All right, so that looks good,
you know, we're splurging

00:46:14.146 --> 00:46:16.636 A:middle
on the bagel, so maybe we
won't get cream cheese.

00:46:16.636 --> 00:46:19.736 A:middle
So let's go ahead
and say finish sale.

00:46:19.926 --> 00:46:21.636 A:middle
Oops, I didn't select a printer.

00:46:22.656 --> 00:46:24.386 A:middle
So let's go ahead
and look for this.

00:46:24.386 --> 00:46:26.546 A:middle
Notice we're going to
pick this Brother printer

00:46:26.546 --> 00:46:28.666 A:middle
that we have here,
it's a Wi-Fi-enabled,

00:46:28.666 --> 00:46:29.996 A:middle
battery-powered receipt printer.

00:46:30.726 --> 00:46:32.626 A:middle
Now we'll go ahead
and click Finish Sale.

00:46:33.406 --> 00:46:36.866 A:middle
And now iOS will take
over the job communicating

00:46:36.866 --> 00:46:38.386 A:middle
with the printer, you know,

00:46:38.506 --> 00:46:40.376 A:middle
getting all the options,
et cetera.

00:46:41.296 --> 00:46:44.836 A:middle
And in a moment should
be seeing the paper come

00:46:44.836 --> 00:46:47.456 A:middle
out of the printer.

00:46:47.456 --> 00:46:49.146 A:middle
And with that, I
will hand it back

00:46:49.146 --> 00:46:52.296 A:middle
to Howard who will take us out.

00:46:52.906 --> 00:46:56.306 A:middle
&gt;&gt; Today, what I hope you have
learned is adding printing

00:46:56.306 --> 00:46:58.566 A:middle
to your application
regardless of style

00:46:58.566 --> 00:47:00.686 A:middle
of application is really easy.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:46:58.566 --> 00:47:00.686 A:middle
of application is really easy.

00:47:00.866 --> 00:47:03.836 A:middle
For a lot of the
content, 10 lines of code.

00:47:03.836 --> 00:47:08.896 A:middle
If you have pictures, HTML,
web views, maps, you're set.

00:47:08.956 --> 00:47:11.036 A:middle
10 lines of code, it's
really 9 if you count,

00:47:11.036 --> 00:47:13.316 A:middle
depending on how you
look at the wraps.

00:47:13.316 --> 00:47:14.546 A:middle
Super, super easy.

00:47:14.546 --> 00:47:19.326 A:middle
If you need more control, a
lot of stuff you can now do

00:47:19.326 --> 00:47:22.126 A:middle
with formatters now that we
have the per-page insets.

00:47:22.446 --> 00:47:25.256 A:middle
We think web viewing
apps or a lot of apps

00:47:25.256 --> 00:47:28.756 A:middle
that are HTML-based will only
need those 10 lines of code

00:47:28.756 --> 00:47:29.966 A:middle
to print and print well.

00:47:30.426 --> 00:47:33.226 A:middle
But if you do need the
full power, full control

00:47:33.226 --> 00:47:35.636 A:middle
of what you're doing, you
can always use a renderer

00:47:35.636 --> 00:47:39.706 A:middle
which can use any of the
common 2D printing APIs

00:47:39.706 --> 00:47:42.276 A:middle
or graphics APIs to do print.

00:47:42.776 --> 00:47:45.806 A:middle
And then you can combine
formatters with renderers

00:47:45.806 --> 00:47:46.876 A:middle
to make it super easy.

00:47:46.876 --> 00:47:50.796 A:middle
And then new in iOS
8, as we demonstrated,

00:47:50.796 --> 00:47:53.656 A:middle
you can now separate the
picking of the printer

00:47:53.656 --> 00:47:55.256 A:middle
from the actual act of printing.

00:47:56.926 --> 00:47:59.036 A:middle
So more information,

00:47:59.036 --> 00:48:01.956 A:middle
our technology evangelist
is Paul Danbold.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:47:59.036 --> 00:48:01.956 A:middle
our technology evangelist
is Paul Danbold.

00:48:02.356 --> 00:48:05.546 A:middle
For those who don't know the
name, Paul has been in printing

00:48:05.546 --> 00:48:08.076 A:middle
for longer than I have,
which makes it 23 years.

00:48:08.586 --> 00:48:11.886 A:middle
And he is readily available
and can answer many questions.

00:48:12.456 --> 00:48:15.096 A:middle
We put up a new website
this week,

00:48:15.096 --> 00:48:18.906 A:middle
developer.apple.com/airprint,
this is your source

00:48:18.906 --> 00:48:22.136 A:middle
for all iOS printing-related
stuff.

00:48:22.136 --> 00:48:24.266 A:middle
There are a handful
of sample apps there.

00:48:24.456 --> 00:48:27.126 A:middle
All the documentation, all
the reference document stuff

00:48:27.126 --> 00:48:28.006 A:middle
that you're going to need.

00:48:28.306 --> 00:48:32.106 A:middle
There's also a link to the
list of every AirPrint printer

00:48:32.106 --> 00:48:34.756 A:middle
in the world, every model of
AirPrint printer in the world,

00:48:35.116 --> 00:48:37.686 A:middle
as well as information
on licensing

00:48:37.686 --> 00:48:39.066 A:middle
of the AirPrint technology.

00:48:39.066 --> 00:48:42.526 A:middle
So developer.apple.com/airprint
will get you everything.

00:48:42.526 --> 00:48:45.756 A:middle
And then of course, if you've
got some ongoing questions,

00:48:45.756 --> 00:48:49.066 A:middle
you're always welcome to use
Apple's Developer forums.

00:48:49.596 --> 00:48:52.346 A:middle
And then there's another
plug for AirPrint Basics,

00:48:52.346 --> 00:48:53.796 A:middle
which lists all the printers.

00:48:54.616 --> 00:48:59.396 A:middle
I know you guys are all probably
pretty experienced application

00:48:59.396 --> 00:49:02.156 A:middle
writers already, but if you
still got a few details,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:48:59.396 --> 00:49:02.156 A:middle
writers already, but if you
still got a few details,

00:49:02.156 --> 00:49:05.066 A:middle
I do strongly encourage you
to go back and watch the video

00:49:05.066 --> 00:49:08.256 A:middle
for the "What's New
in Cocoa Touch".

00:49:09.636 --> 00:49:10.786 A:middle
So that's it.

00:49:11.046 --> 00:49:11.886 A:middle
Thank you very much.

00:49:13.516 --> 00:49:21.470 A:middle
[ Applause ]

