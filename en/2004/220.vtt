WEBVTT
Kind: captions
Language: en

00:00:11.860 --> 00:00:14.820 align:start position:0%
 
session<00:00:12.580><c> 2</c><00:00:12.759><c> 220</c><00:00:13.660><c> which</c><00:00:13.900><c> is</c><00:00:14.080><c> OpenGL</c><00:00:14.679><c> shading</c>

00:00:14.820 --> 00:00:14.830 align:start position:0%
session 2 220 which is OpenGL shading
 

00:00:14.830 --> 00:00:17.760 align:start position:0%
session 2 220 which is OpenGL shading
language<00:00:15.219><c> and</c><00:00:15.960><c> we're</c><00:00:16.960><c> pretty</c><00:00:17.110><c> excited</c><00:00:17.260><c> about</c>

00:00:17.760 --> 00:00:17.770 align:start position:0%
language and we're pretty excited about
 

00:00:17.770 --> 00:00:20.550 align:start position:0%
language and we're pretty excited about
being<00:00:18.039><c> able</c><00:00:18.189><c> to</c><00:00:18.460><c> have</c><00:00:18.820><c> for</c><00:00:19.090><c> Tiger</c><00:00:19.509><c> the</c><00:00:20.200><c> OpenGL</c>

00:00:20.550 --> 00:00:20.560 align:start position:0%
being able to have for Tiger the OpenGL
 

00:00:20.560 --> 00:00:22.440 align:start position:0%
being able to have for Tiger the OpenGL
shading<00:00:20.619><c> language</c><00:00:21.180><c> available</c><00:00:22.180><c> to</c><00:00:22.419><c> our</c>

00:00:22.440 --> 00:00:22.450 align:start position:0%
shading language available to our
 

00:00:22.450 --> 00:00:25.350 align:start position:0%
shading language available to our
developers<00:00:23.020><c> because</c><00:00:24.009><c> apples</c><00:00:24.789><c> extremely</c>

00:00:25.350 --> 00:00:25.360 align:start position:0%
developers because apples extremely
 

00:00:25.360 --> 00:00:27.240 align:start position:0%
developers because apples extremely
excited<00:00:25.869><c> about</c><00:00:26.050><c> the</c><00:00:26.500><c> fact</c><00:00:26.770><c> that</c><00:00:26.890><c> we</c><00:00:27.070><c> have</c>

00:00:27.240 --> 00:00:27.250 align:start position:0%
excited about the fact that we have
 

00:00:27.250 --> 00:00:29.519 align:start position:0%
excited about the fact that we have
programmable<00:00:28.029><c> hardware</c><00:00:28.450><c> these</c><00:00:28.719><c> fantastic</c>

00:00:29.519 --> 00:00:29.529 align:start position:0%
programmable hardware these fantastic
 

00:00:29.529 --> 00:00:31.260 align:start position:0%
programmable hardware these fantastic
GPUs<00:00:30.009><c> that</c><00:00:30.309><c> we</c><00:00:30.460><c> can</c><00:00:30.640><c> do</c><00:00:30.759><c> incredible</c><00:00:30.910><c> things</c>

00:00:31.260 --> 00:00:31.270 align:start position:0%
GPUs that we can do incredible things
 

00:00:31.270 --> 00:00:32.970 align:start position:0%
GPUs that we can do incredible things
with<00:00:31.570><c> many</c><00:00:32.320><c> of</c><00:00:32.439><c> which</c><00:00:32.559><c> you've</c><00:00:32.739><c> seen</c>

00:00:32.970 --> 00:00:32.980 align:start position:0%
with many of which you've seen
 

00:00:32.980 --> 00:00:35.160 align:start position:0%
with many of which you've seen
particularly<00:00:33.820><c> this</c><00:00:34.090><c> year</c><00:00:34.329><c> and</c><00:00:34.480><c> even</c><00:00:34.570><c> starting</c>

00:00:35.160 --> 00:00:35.170 align:start position:0%
particularly this year and even starting
 

00:00:35.170 --> 00:00:36.569 align:start position:0%
particularly this year and even starting
last<00:00:35.350><c> year</c><00:00:35.710><c> with</c><00:00:36.280><c> some</c><00:00:36.430><c> of</c><00:00:36.520><c> our</c>

00:00:36.569 --> 00:00:36.579 align:start position:0%
last year with some of our
 

00:00:36.579 --> 00:00:39.420 align:start position:0%
last year with some of our
demonstrations<00:00:37.329><c> and</c><00:00:37.629><c> also</c><00:00:38.250><c> sessions</c><00:00:39.250><c> on</c>

00:00:39.420 --> 00:00:39.430 align:start position:0%
demonstrations and also sessions on
 

00:00:39.430 --> 00:00:42.389 align:start position:0%
demonstrations and also sessions on
programmability<00:00:40.149><c> with</c><00:00:40.480><c> GPUs</c><00:00:41.399><c> the</c>

00:00:42.389 --> 00:00:42.399 align:start position:0%
programmability with GPUs the
 

00:00:42.399 --> 00:00:45.330 align:start position:0%
programmability with GPUs the
interesting<00:00:42.940><c> thing</c><00:00:43.149><c> is</c><00:00:43.450><c> that</c><00:00:44.340><c> previously</c>

00:00:45.330 --> 00:00:45.340 align:start position:0%
interesting thing is that previously
 

00:00:45.340 --> 00:00:48.270 align:start position:0%
interesting thing is that previously
working<00:00:45.850><c> with</c><00:00:46.060><c> these</c><00:00:46.120><c> gpus</c><00:00:46.480><c> has</c><00:00:46.750><c> been</c><00:00:47.280><c> you</c>

00:00:48.270 --> 00:00:48.280 align:start position:0%
working with these gpus has been you
 

00:00:48.280 --> 00:00:50.640 align:start position:0%
working with these gpus has been you
know<00:00:48.340><c> basically</c><00:00:48.490><c> almost</c><00:00:48.790><c> a</c><00:00:49.170><c> step</c><00:00:50.170><c> back</c><00:00:50.380><c> to</c><00:00:50.560><c> the</c>

00:00:50.640 --> 00:00:50.650 align:start position:0%
know basically almost a step back to the
 

00:00:50.650 --> 00:00:52.650 align:start position:0%
know basically almost a step back to the
past<00:00:50.860><c> in</c><00:00:51.190><c> terms</c><00:00:51.220><c> of</c><00:00:51.550><c> the</c><00:00:52.150><c> way</c><00:00:52.270><c> you</c><00:00:52.329><c> program</c>

00:00:52.650 --> 00:00:52.660 align:start position:0%
past in terms of the way you program
 

00:00:52.660 --> 00:00:54.840 align:start position:0%
past in terms of the way you program
these<00:00:52.810><c> gpus</c><00:00:53.170><c> was</c><00:00:53.620><c> often</c><00:00:54.190><c> and</c><00:00:54.370><c> sort</c><00:00:54.700><c> of</c><00:00:54.760><c> like</c>

00:00:54.840 --> 00:00:54.850 align:start position:0%
these gpus was often and sort of like
 

00:00:54.850 --> 00:00:56.760 align:start position:0%
these gpus was often and sort of like
the<00:00:54.940><c> assembly</c><00:00:55.329><c> language</c><00:00:55.660><c> level</c><00:00:55.870><c> which</c><00:00:56.470><c> isn't</c>

00:00:56.760 --> 00:00:56.770 align:start position:0%
the assembly language level which isn't
 

00:00:56.770 --> 00:00:59.729 align:start position:0%
the assembly language level which isn't
approachable<00:00:57.280><c> to</c><00:00:57.340><c> a</c><00:00:57.730><c> lot</c><00:00:57.910><c> of</c><00:00:58.000><c> developers</c><00:00:58.739><c> so</c>

00:00:59.729 --> 00:00:59.739 align:start position:0%
approachable to a lot of developers so
 

00:00:59.739 --> 00:01:02.400 align:start position:0%
approachable to a lot of developers so
what's<00:01:00.550><c> been</c><00:01:00.730><c> happening</c><00:01:01.180><c> in</c><00:01:01.360><c> both</c><00:01:01.989><c> GPU</c>

00:01:02.400 --> 00:01:02.410 align:start position:0%
what's been happening in both GPU
 

00:01:02.410 --> 00:01:04.319 align:start position:0%
what's been happening in both GPU
development<00:01:02.920><c> that's</c><00:01:03.040><c> also</c><00:01:03.340><c> been</c><00:01:03.460><c> driving</c><00:01:03.940><c> how</c>

00:01:04.319 --> 00:01:04.329 align:start position:0%
development that's also been driving how
 

00:01:04.329 --> 00:01:07.530 align:start position:0%
development that's also been driving how
these<00:01:05.079><c> functionalities</c><00:01:05.590><c> are</c><00:01:05.829><c> exposed</c><00:01:06.610><c> to</c><00:01:07.119><c> the</c>

00:01:07.530 --> 00:01:07.540 align:start position:0%
these functionalities are exposed to the
 

00:01:07.540 --> 00:01:09.179 align:start position:0%
these functionalities are exposed to the
developer<00:01:07.990><c> is</c><00:01:08.020><c> the</c><00:01:08.439><c> evolution</c><00:01:08.920><c> of</c><00:01:08.979><c> higher</c>

00:01:09.179 --> 00:01:09.189 align:start position:0%
developer is the evolution of higher
 

00:01:09.189 --> 00:01:11.100 align:start position:0%
developer is the evolution of higher
level<00:01:09.490><c> shading</c><00:01:09.790><c> languages</c><00:01:10.210><c> that's</c><00:01:10.930><c> exactly</c>

00:01:11.100 --> 00:01:11.110 align:start position:0%
level shading languages that's exactly
 

00:01:11.110 --> 00:01:13.080 align:start position:0%
level shading languages that's exactly
what<00:01:11.469><c> OpenGL</c><00:01:11.920><c> shading</c><00:01:11.950><c> language</c><00:01:12.369><c> is</c><00:01:12.759><c> and</c><00:01:13.000><c> it's</c>

00:01:13.080 --> 00:01:13.090 align:start position:0%
what OpenGL shading language is and it's
 

00:01:13.090 --> 00:01:14.940 align:start position:0%
what OpenGL shading language is and it's
an<00:01:13.210><c> approachable</c><00:01:13.689><c> way</c><00:01:13.990><c> for</c><00:01:14.829><c> developers</c>

00:01:14.940 --> 00:01:14.950 align:start position:0%
an approachable way for developers
 

00:01:14.950 --> 00:01:18.270 align:start position:0%
an approachable way for developers
experience<00:01:15.909><c> with</c><00:01:16.750><c> languages</c><00:01:17.140><c> such</c><00:01:17.320><c> as</c><00:01:17.350><c> C</c><00:01:17.680><c> to</c>

00:01:18.270 --> 00:01:18.280 align:start position:0%
experience with languages such as C to
 

00:01:18.280 --> 00:01:19.800 align:start position:0%
experience with languages such as C to
be<00:01:18.400><c> able</c><00:01:18.490><c> to</c><00:01:18.670><c> really</c><00:01:19.000><c> look</c><00:01:19.150><c> at</c><00:01:19.270><c> leveraging</c><00:01:19.600><c> the</c>

00:01:19.800 --> 00:01:19.810 align:start position:0%
be able to really look at leveraging the
 

00:01:19.810 --> 00:01:20.820 align:start position:0%
be able to really look at leveraging the
power<00:01:19.960><c> of</c><00:01:20.049><c> the</c><00:01:20.140><c> GPU</c><00:01:20.500><c> in</c><00:01:20.560><c> their</c><00:01:20.680><c> application</c>

00:01:20.820 --> 00:01:20.830 align:start position:0%
power of the GPU in their application
 

00:01:20.830 --> 00:01:23.130 align:start position:0%
power of the GPU in their application
and<00:01:21.520><c> it's</c><00:01:22.180><c> also</c><00:01:22.299><c> important</c><00:01:22.900><c> for</c><00:01:22.930><c> you</c><00:01:23.110><c> to</c>

00:01:23.130 --> 00:01:23.140 align:start position:0%
and it's also important for you to
 

00:01:23.140 --> 00:01:24.960 align:start position:0%
and it's also important for you to
realize<00:01:23.320><c> that</c><00:01:23.770><c> there's</c><00:01:24.100><c> been</c><00:01:24.370><c> some</c><00:01:24.640><c> confusion</c>

00:01:24.960 --> 00:01:24.970 align:start position:0%
realize that there's been some confusion
 

00:01:24.970 --> 00:01:27.120 align:start position:0%
realize that there's been some confusion
that<00:01:25.450><c> we've</c><00:01:25.570><c> had</c><00:01:25.750><c> at</c><00:01:25.930><c> this</c><00:01:26.080><c> wwc</c><00:01:26.740><c> because</c><00:01:27.010><c> we've</c>

00:01:27.120 --> 00:01:27.130 align:start position:0%
that we've had at this wwc because we've
 

00:01:27.130 --> 00:01:28.740 align:start position:0%
that we've had at this wwc because we've
talked<00:01:27.369><c> about</c><00:01:27.520><c> OpenGL</c><00:01:27.909><c> shading</c><00:01:28.090><c> language</c><00:01:28.479><c> in</c>

00:01:28.740 --> 00:01:28.750 align:start position:0%
talked about OpenGL shading language in
 

00:01:28.750 --> 00:01:31.770 align:start position:0%
talked about OpenGL shading language in
two<00:01:28.900><c> contexts</c><00:01:29.610><c> one</c><00:01:30.610><c> is</c><00:01:30.790><c> obviously</c><00:01:31.270><c> in</c><00:01:31.690><c> its</c>

00:01:31.770 --> 00:01:31.780 align:start position:0%
two contexts one is obviously in its
 

00:01:31.780 --> 00:01:33.539 align:start position:0%
two contexts one is obviously in its
relationship<00:01:32.260><c> to</c><00:01:32.290><c> core</c><00:01:32.590><c> image</c><00:01:32.860><c> where</c><00:01:33.220><c> core</c>

00:01:33.539 --> 00:01:33.549 align:start position:0%
relationship to core image where core
 

00:01:33.549 --> 00:01:35.250 align:start position:0%
relationship to core image where core
image<00:01:33.760><c> has</c><00:01:33.940><c> sort</c><00:01:34.270><c> of</c><00:01:34.299><c> a</c><00:01:34.390><c> subset</c><00:01:34.780><c> of</c><00:01:34.810><c> OpenGL</c>

00:01:35.250 --> 00:01:35.260 align:start position:0%
image has sort of a subset of OpenGL
 

00:01:35.260 --> 00:01:37.410 align:start position:0%
image has sort of a subset of OpenGL
shading<00:01:35.320><c> languages</c><00:01:35.920><c> it</c><00:01:36.010><c> supports</c><00:01:36.420><c> enables</c>

00:01:37.410 --> 00:01:37.420 align:start position:0%
shading languages it supports enables
 

00:01:37.420 --> 00:01:38.940 align:start position:0%
shading languages it supports enables
you<00:01:37.510><c> to</c><00:01:37.540><c> do</c><00:01:37.690><c> all</c><00:01:37.840><c> the</c><00:01:37.990><c> interesting</c><00:01:38.619><c> effects</c>

00:01:38.940 --> 00:01:38.950 align:start position:0%
you to do all the interesting effects
 

00:01:38.950 --> 00:01:40.770 align:start position:0%
you to do all the interesting effects
that<00:01:39.070><c> core</c><00:01:39.310><c> image</c><00:01:39.490><c> supports</c><00:01:39.909><c> but</c><00:01:40.420><c> I</c><00:01:40.450><c> also</c><00:01:40.540><c> want</c>

00:01:40.770 --> 00:01:40.780 align:start position:0%
that core image supports but I also want
 

00:01:40.780 --> 00:01:42.030 align:start position:0%
that core image supports but I also want
to<00:01:40.810><c> be</c><00:01:40.930><c> clear</c><00:01:41.260><c> that</c><00:01:41.500><c> the</c><00:01:41.590><c> purpose</c><00:01:41.830><c> of</c><00:01:41.920><c> this</c>

00:01:42.030 --> 00:01:42.040 align:start position:0%
to be clear that the purpose of this
 

00:01:42.040 --> 00:01:43.800 align:start position:0%
to be clear that the purpose of this
session<00:01:42.250><c> is</c><00:01:42.490><c> to</c><00:01:42.610><c> communicate</c><00:01:42.790><c> about</c><00:01:43.210><c> the</c><00:01:43.510><c> full</c>

00:01:43.800 --> 00:01:43.810 align:start position:0%
session is to communicate about the full
 

00:01:43.810 --> 00:01:45.660 align:start position:0%
session is to communicate about the full
OpenGL<00:01:44.500><c> shading</c><00:01:44.530><c> language</c><00:01:44.979><c> which</c><00:01:45.340><c> will</c><00:01:45.520><c> be</c>

00:01:45.660 --> 00:01:45.670 align:start position:0%
OpenGL shading language which will be
 

00:01:45.670 --> 00:01:50.700 align:start position:0%
OpenGL shading language which will be
part<00:01:46.000><c> of</c><00:01:46.920><c> OpenGL</c><00:01:47.920><c> and</c><00:01:48.310><c> tiger</c><00:01:49.049><c> so</c><00:01:50.049><c> that's</c><00:01:50.530><c> going</c>

00:01:50.700 --> 00:01:50.710 align:start position:0%
part of OpenGL and tiger so that's going
 

00:01:50.710 --> 00:01:53.219 align:start position:0%
part of OpenGL and tiger so that's going
to<00:01:50.799><c> give</c><00:01:50.920><c> you</c><00:01:51.130><c> all</c><00:01:51.369><c> the</c><00:01:51.670><c> capabilities</c><00:01:51.880><c> of</c><00:01:52.600><c> the</c>

00:01:53.219 --> 00:01:53.229 align:start position:0%
to give you all the capabilities of the
 

00:01:53.229 --> 00:01:55.620 align:start position:0%
to give you all the capabilities of the
language<00:01:53.619><c> and</c><00:01:53.860><c> it</c><00:01:54.850><c> will</c><00:01:54.970><c> expose</c><00:01:55.270><c> all</c><00:01:55.540><c> the</c>

00:01:55.620 --> 00:01:55.630 align:start position:0%
language and it will expose all the
 

00:01:55.630 --> 00:01:57.960 align:start position:0%
language and it will expose all the
capabilities<00:01:55.840><c> of</c><00:01:56.729><c> current</c><00:01:57.729><c> and</c><00:01:57.790><c> future</c>

00:01:57.960 --> 00:01:57.970 align:start position:0%
capabilities of current and future
 

00:01:57.970 --> 00:01:59.999 align:start position:0%
capabilities of current and future
hardware<00:01:58.720><c> GPU</c><00:01:59.140><c> hardware</c><00:01:59.290><c> that</c><00:01:59.590><c> supports</c>

00:01:59.999 --> 00:02:00.009 align:start position:0%
hardware GPU hardware that supports
 

00:02:00.009 --> 00:02:02.789 align:start position:0%
hardware GPU hardware that supports
programmability<00:02:00.970><c> so</c><00:02:01.930><c> on</c><00:02:02.290><c> that</c><00:02:02.350><c> note</c><00:02:02.500><c> I'd</c><00:02:02.770><c> like</c>

00:02:02.789 --> 00:02:02.799 align:start position:0%
programmability so on that note I'd like
 

00:02:02.799 --> 00:02:04.380 align:start position:0%
programmability so on that note I'd like
to<00:02:03.070><c> actually</c><00:02:03.189><c> might</c><00:02:03.549><c> our</c><00:02:03.670><c> speaker</c><00:02:04.060><c> James</c>

00:02:04.380 --> 00:02:04.390 align:start position:0%
to actually might our speaker James
 

00:02:04.390 --> 00:02:05.789 align:start position:0%
to actually might our speaker James
McComb<00:02:04.750><c> the</c><00:02:04.900><c> stage</c><00:02:05.110><c> to</c><00:02:05.350><c> take</c><00:02:05.500><c> you</c><00:02:05.619><c> through</c><00:02:05.770><c> the</c>

00:02:05.789 --> 00:02:05.799 align:start position:0%
McComb the stage to take you through the
 

00:02:05.799 --> 00:02:09.590 align:start position:0%
McComb the stage to take you through the
session<00:02:06.009><c> thank</c><00:02:06.460><c> you</c>

00:02:09.590 --> 00:02:09.600 align:start position:0%
 
 

00:02:09.600 --> 00:02:13.380 align:start position:0%
 
[Applause]

00:02:13.380 --> 00:02:13.390 align:start position:0%
 
 

00:02:13.390 --> 00:02:17.290 align:start position:0%
 
morning<00:02:14.390><c> and</c><00:02:15.790><c> thanks</c><00:02:16.790><c> for</c><00:02:16.910><c> coming</c><00:02:17.150><c> to</c><00:02:17.180><c> this</c>

00:02:17.290 --> 00:02:17.300 align:start position:0%
morning and thanks for coming to this
 

00:02:17.300 --> 00:02:19.000 align:start position:0%
morning and thanks for coming to this
session<00:02:17.480><c> I</c><00:02:17.930><c> guess</c><00:02:18.350><c> that's</c><00:02:18.500><c> quite</c><00:02:18.740><c> a</c><00:02:18.800><c> lot</c><00:02:18.920><c> of</c>

00:02:19.000 --> 00:02:19.010 align:start position:0%
session I guess that's quite a lot of
 

00:02:19.010 --> 00:02:21.970 align:start position:0%
session I guess that's quite a lot of
people<00:02:19.270><c> make</c><00:02:20.270><c> it</c><00:02:20.420><c> back</c><00:02:21.110><c> from</c><00:02:21.260><c> cupertino</c><00:02:21.710><c> last</c>

00:02:21.970 --> 00:02:21.980 align:start position:0%
people make it back from cupertino last
 

00:02:21.980 --> 00:02:24.150 align:start position:0%
people make it back from cupertino last
night<00:02:22.130><c> but</c><00:02:22.430><c> uh</c><00:02:22.460><c> thanks</c><00:02:23.210><c> for</c><00:02:23.330><c> coming</c><00:02:23.570><c> along</c>

00:02:24.150 --> 00:02:24.160 align:start position:0%
night but uh thanks for coming along
 

00:02:24.160 --> 00:02:27.040 align:start position:0%
night but uh thanks for coming along
yeah<00:02:25.160><c> we're</c><00:02:25.370><c> pretty</c><00:02:25.460><c> excited</c><00:02:25.670><c> about</c><00:02:26.090><c> this</c><00:02:26.420><c> the</c>

00:02:27.040 --> 00:02:27.050 align:start position:0%
yeah we're pretty excited about this the
 

00:02:27.050 --> 00:02:28.660 align:start position:0%
yeah we're pretty excited about this the
shading<00:02:27.380><c> language</c><00:02:27.500><c> stuff</c><00:02:28.280><c> that</c><00:02:28.430><c> we've</c><00:02:28.550><c> been</c>

00:02:28.660 --> 00:02:28.670 align:start position:0%
shading language stuff that we've been
 

00:02:28.670 --> 00:02:31.480 align:start position:0%
shading language stuff that we've been
working<00:02:28.730><c> on</c><00:02:29.210><c> I</c><00:02:29.750><c> guess</c><00:02:30.200><c> I</c><00:02:30.320><c> want</c><00:02:30.500><c> to</c><00:02:30.620><c> sort</c><00:02:31.430><c> of</c>

00:02:31.480 --> 00:02:31.490 align:start position:0%
working on I guess I want to sort of
 

00:02:31.490 --> 00:02:34.830 align:start position:0%
working on I guess I want to sort of
start<00:02:32.060><c> off</c><00:02:32.330><c> with</c><00:02:32.840><c> looking</c><00:02:33.230><c> at</c><00:02:33.380><c> where</c><00:02:33.860><c> we</c><00:02:34.010><c> were</c>

00:02:34.830 --> 00:02:34.840 align:start position:0%
start off with looking at where we were
 

00:02:34.840 --> 00:02:38.490 align:start position:0%
start off with looking at where we were
two<00:02:35.840><c> years</c><00:02:35.870><c> ago</c><00:02:36.230><c> we</c><00:02:37.190><c> came</c><00:02:37.370><c> here</c><00:02:37.580><c> and</c><00:02:37.640><c> we</c>

00:02:38.490 --> 00:02:38.500 align:start position:0%
two years ago we came here and we
 

00:02:38.500 --> 00:02:40.690 align:start position:0%
two years ago we came here and we
hardware<00:02:39.500><c> with</c><00:02:39.620><c> coming</c><00:02:39.920><c> out</c><00:02:40.040><c> that</c><00:02:40.520><c> had</c><00:02:40.670><c> a</c>

00:02:40.690 --> 00:02:40.700 align:start position:0%
hardware with coming out that had a
 

00:02:40.700 --> 00:02:43.480 align:start position:0%
hardware with coming out that had a
programmable<00:02:41.360><c> vertex</c><00:02:41.840><c> unit</c><00:02:42.200><c> and</c><00:02:42.350><c> we</c><00:02:43.250><c> talked</c>

00:02:43.480 --> 00:02:43.490 align:start position:0%
programmable vertex unit and we talked
 

00:02:43.490 --> 00:02:45.970 align:start position:0%
programmable vertex unit and we talked
about<00:02:43.640><c> our</c><00:02:43.880><c> vertex</c><00:02:44.300><c> program</c><00:02:44.770><c> which</c><00:02:45.770><c> was</c><00:02:45.920><c> a</c>

00:02:45.970 --> 00:02:45.980 align:start position:0%
about our vertex program which was a
 

00:02:45.980 --> 00:02:49.120 align:start position:0%
about our vertex program which was a
language<00:02:46.400><c> to</c><00:02:46.640><c> a</c><00:02:46.670><c> life</c><00:02:47.050><c> well</c><00:02:48.050><c> reprogramming</c><00:02:48.920><c> is</c>

00:02:49.120 --> 00:02:49.130 align:start position:0%
language to a life well reprogramming is
 

00:02:49.130 --> 00:02:53.110 align:start position:0%
language to a life well reprogramming is
the<00:02:49.280><c> vertex</c><00:02:49.970><c> unit</c><00:02:50.330><c> and</c><00:02:51.340><c> last</c><00:02:52.340><c> year</c><00:02:52.520><c> we</c><00:02:52.820><c> talked</c>

00:02:53.110 --> 00:02:53.120 align:start position:0%
the vertex unit and last year we talked
 

00:02:53.120 --> 00:02:54.760 align:start position:0%
the vertex unit and last year we talked
about<00:02:53.240><c> our</c><00:02:53.510><c> fragment</c><00:02:54.050><c> program</c><00:02:54.410><c> which</c><00:02:54.620><c> allows</c>

00:02:54.760 --> 00:02:54.770 align:start position:0%
about our fragment program which allows
 

00:02:54.770 --> 00:02:57.640 align:start position:0%
about our fragment program which allows
allowed<00:02:55.550><c> you</c><00:02:55.730><c> to</c><00:02:56.110><c> reprogram</c><00:02:57.110><c> the</c><00:02:57.350><c> sort</c><00:02:57.590><c> of</c>

00:02:57.640 --> 00:02:57.650 align:start position:0%
allowed you to reprogram the sort of
 

00:02:57.650 --> 00:02:59.530 align:start position:0%
allowed you to reprogram the sort of
fragment<00:02:58.100><c> look</c><00:02:58.250><c> up</c><00:02:58.430><c> the</c><00:02:58.700><c> fragment</c><00:02:59.240><c> look</c><00:02:59.360><c> up</c>

00:02:59.530 --> 00:02:59.540 align:start position:0%
fragment look up the fragment look up
 

00:02:59.540 --> 00:03:02.620 align:start position:0%
fragment look up the fragment look up
and<00:03:00.430><c> some</c><00:03:01.430><c> of</c><00:03:01.550><c> the</c><00:03:01.640><c> visual</c><00:03:02.150><c> effects</c><00:03:02.510><c> that</c><00:03:02.570><c> you</c>

00:03:02.620 --> 00:03:02.630 align:start position:0%
and some of the visual effects that you
 

00:03:02.630 --> 00:03:04.030 align:start position:0%
and some of the visual effects that you
can<00:03:02.870><c> do</c><00:03:02.990><c> with</c><00:03:03.170><c> this</c><00:03:03.320><c> really</c><00:03:03.770><c> are</c><00:03:03.860><c> very</c>

00:03:04.030 --> 00:03:04.040 align:start position:0%
can do with this really are very
 

00:03:04.040 --> 00:03:06.130 align:start position:0%
can do with this really are very
powerful<00:03:04.220><c> and</c><00:03:04.700><c> increasingly</c><00:03:05.420><c> more</c><00:03:05.810><c> and</c><00:03:05.870><c> more</c>

00:03:06.130 --> 00:03:06.140 align:start position:0%
powerful and increasingly more and more
 

00:03:06.140 --> 00:03:08.380 align:start position:0%
powerful and increasingly more and more
your<00:03:06.980><c> games</c><00:03:07.220><c> are</c><00:03:07.459><c> showing</c><00:03:07.760><c> up</c><00:03:07.910><c> and</c><00:03:08.060><c> various</c>

00:03:08.380 --> 00:03:08.390 align:start position:0%
your games are showing up and various
 

00:03:08.390 --> 00:03:10.390 align:start position:0%
your games are showing up and various
things<00:03:08.600><c> are</c><00:03:08.720><c> using</c><00:03:09.080><c> this</c><00:03:09.230><c> becoming</c><00:03:10.010><c> clear</c>

00:03:10.390 --> 00:03:10.400 align:start position:0%
things are using this becoming clear
 

00:03:10.400 --> 00:03:12.130 align:start position:0%
things are using this becoming clear
that<00:03:10.430><c> you</c><00:03:11.300><c> can</c><00:03:11.480><c> do</c><00:03:11.570><c> some</c><00:03:11.750><c> very</c><00:03:11.930><c> powerful</c>

00:03:12.130 --> 00:03:12.140 align:start position:0%
that you can do some very powerful
 

00:03:12.140 --> 00:03:17.320 align:start position:0%
that you can do some very powerful
real-time<00:03:12.830><c> effect</c><00:03:13.220><c> with</c><00:03:14.090><c> that</c><00:03:15.040><c> however</c><00:03:16.330><c> those</c>

00:03:17.320 --> 00:03:17.330 align:start position:0%
real-time effect with that however those
 

00:03:17.330 --> 00:03:19.750 align:start position:0%
real-time effect with that however those
languages<00:03:17.810><c> were</c><00:03:18.110><c> designed</c><00:03:18.550><c> suddenly</c><00:03:19.550><c> you</c>

00:03:19.750 --> 00:03:19.760 align:start position:0%
languages were designed suddenly you
 

00:03:19.760 --> 00:03:21.340 align:start position:0%
languages were designed suddenly you
know<00:03:19.820><c> we</c><00:03:19.940><c> were</c><00:03:20.060><c> handed</c><00:03:20.390><c> with</c><00:03:20.510><c> this</c><00:03:20.660><c> this</c><00:03:20.959><c> fancy</c>

00:03:21.340 --> 00:03:21.350 align:start position:0%
know we were handed with this this fancy
 

00:03:21.350 --> 00:03:22.720 align:start position:0%
know we were handed with this this fancy
new<00:03:21.380><c> hardware</c><00:03:21.860><c> we</c><00:03:22.040><c> needed</c><00:03:22.280><c> to</c><00:03:22.340><c> come</c><00:03:22.370><c> up</c><00:03:22.550><c> with</c><00:03:22.610><c> a</c>

00:03:22.720 --> 00:03:22.730 align:start position:0%
new hardware we needed to come up with a
 

00:03:22.730 --> 00:03:25.420 align:start position:0%
new hardware we needed to come up with a
language<00:03:23.120><c> to</c><00:03:23.209><c> program</c><00:03:23.630><c> it</c><00:03:24.010><c> the</c><00:03:25.010><c> languages</c>

00:03:25.420 --> 00:03:25.430 align:start position:0%
language to program it the languages
 

00:03:25.430 --> 00:03:29.259 align:start position:0%
language to program it the languages
that<00:03:25.459><c> were</c><00:03:25.700><c> created</c><00:03:26.269><c> were</c><00:03:27.110><c> very</c><00:03:28.100><c> quite</c><00:03:28.820><c> close</c>

00:03:29.259 --> 00:03:29.269 align:start position:0%
that were created were very quite close
 

00:03:29.269 --> 00:03:31.000 align:start position:0%
that were created were very quite close
to<00:03:29.480><c> the</c><00:03:29.570><c> hardware</c><00:03:29.840><c> they</c><00:03:30.230><c> were</c><00:03:30.290><c> assembly</c><00:03:30.830><c> like</c>

00:03:31.000 --> 00:03:31.010 align:start position:0%
to the hardware they were assembly like
 

00:03:31.010 --> 00:03:35.110 align:start position:0%
to the hardware they were assembly like
in<00:03:31.820><c> nature</c><00:03:32.330><c> well</c><00:03:33.290><c> now</c><00:03:34.250><c> we've</c><00:03:34.430><c> had</c><00:03:34.610><c> some</c><00:03:34.850><c> time</c>

00:03:35.110 --> 00:03:35.120 align:start position:0%
in nature well now we've had some time
 

00:03:35.120 --> 00:03:39.870 align:start position:0%
in nature well now we've had some time
in<00:03:35.330><c> the</c><00:03:35.420><c> OpenGL</c><00:03:35.810><c> community</c><00:03:36.260><c> to</c><00:03:36.500><c> sit</c><00:03:37.220><c> down</c><00:03:37.870><c> and</c>

00:03:39.870 --> 00:03:39.880 align:start position:0%
in the OpenGL community to sit down and
 

00:03:39.880 --> 00:03:43.780 align:start position:0%
in the OpenGL community to sit down and
discuss<00:03:40.880><c> a</c><00:03:41.030><c> way</c><00:03:41.360><c> to</c><00:03:42.080><c> expose</c><00:03:42.560><c> that</c><00:03:42.980><c> hardware</c>

00:03:43.780 --> 00:03:43.790 align:start position:0%
discuss a way to expose that hardware
 

00:03:43.790 --> 00:03:46.060 align:start position:0%
discuss a way to expose that hardware
and<00:03:43.970><c> also</c><00:03:44.299><c> future</c><00:03:44.750><c> hardware</c><00:03:45.200><c> as</c><00:03:45.380><c> new</c>

00:03:46.060 --> 00:03:46.070 align:start position:0%
and also future hardware as new
 

00:03:46.070 --> 00:03:49.150 align:start position:0%
and also future hardware as new
capability<00:03:47.000><c> appear</c><00:03:47.690><c> we</c><00:03:48.530><c> want</c><00:03:48.709><c> a</c><00:03:48.799><c> language</c>

00:03:49.150 --> 00:03:49.160 align:start position:0%
capability appear we want a language
 

00:03:49.160 --> 00:03:52.449 align:start position:0%
capability appear we want a language
that<00:03:49.190><c> can</c><00:03:49.519><c> expose</c><00:03:49.910><c> that</c><00:03:49.970><c> be</c><00:03:50.769><c> as</c><00:03:51.769><c> portable</c><00:03:52.280><c> as</c>

00:03:52.449 --> 00:03:52.459 align:start position:0%
that can expose that be as portable as
 

00:03:52.459 --> 00:03:54.130 align:start position:0%
that can expose that be as portable as
possible<00:03:52.970><c> in</c><00:03:53.060><c> the</c><00:03:53.150><c> sense</c><00:03:53.360><c> of</c><00:03:53.480><c> the</c><00:03:53.540><c> same</c>

00:03:54.130 --> 00:03:54.140 align:start position:0%
possible in the sense of the same
 

00:03:54.140 --> 00:03:55.660 align:start position:0%
possible in the sense of the same
program<00:03:54.530><c> can</c><00:03:54.709><c> run</c><00:03:54.890><c> on</c><00:03:55.010><c> various</c><00:03:55.370><c> pieces</c><00:03:55.549><c> of</c>

00:03:55.660 --> 00:03:55.670 align:start position:0%
program can run on various pieces of
 

00:03:55.670 --> 00:03:58.000 align:start position:0%
program can run on various pieces of
hardware<00:03:56.500><c> hardware</c><00:03:57.500><c> supports</c><00:03:57.860><c> new</c>

00:03:58.000 --> 00:03:58.010 align:start position:0%
hardware hardware supports new
 

00:03:58.010 --> 00:03:59.680 align:start position:0%
hardware hardware supports new
operations<00:03:58.610><c> the</c><00:03:58.790><c> language</c><00:03:59.120><c> will</c><00:03:59.269><c> expose</c><00:03:59.630><c> that</c>

00:03:59.680 --> 00:03:59.690 align:start position:0%
operations the language will expose that
 

00:03:59.690 --> 00:04:01.300 align:start position:0%
operations the language will expose that
and<00:04:00.140><c> we</c><00:04:00.200><c> don't</c><00:04:00.320><c> want</c><00:04:00.530><c> to</c><00:04:00.590><c> be</c><00:04:00.650><c> revising</c><00:04:01.010><c> the</c>

00:04:01.300 --> 00:04:01.310 align:start position:0%
and we don't want to be revising the
 

00:04:01.310 --> 00:04:02.740 align:start position:0%
and we don't want to be revising the
language<00:04:01.670><c> every</c><00:04:01.940><c> year</c><00:04:02.120><c> we</c><00:04:02.239><c> want</c><00:04:02.390><c> something</c>

00:04:02.740 --> 00:04:02.750 align:start position:0%
language every year we want something
 

00:04:02.750 --> 00:04:06.220 align:start position:0%
language every year we want something
that<00:04:02.870><c> we</c><00:04:02.959><c> can</c><00:04:03.110><c> kneeled</c><00:04:03.380><c> on</c><00:04:03.560><c> and</c><00:04:05.019><c> there's</c><00:04:06.019><c> been</c>

00:04:06.220 --> 00:04:06.230 align:start position:0%
that we can kneeled on and there's been
 

00:04:06.230 --> 00:04:07.509 align:start position:0%
that we can kneeled on and there's been
a<00:04:06.260><c> language</c><00:04:06.709><c> now</c><00:04:06.860><c> for</c><00:04:07.070><c> a</c><00:04:07.130><c> very</c><00:04:07.280><c> long</c><00:04:07.459><c> time</c>

00:04:07.509 --> 00:04:07.519 align:start position:0%
a language now for a very long time
 

00:04:07.519 --> 00:04:09.370 align:start position:0%
a language now for a very long time
that's<00:04:08.000><c> proven</c><00:04:08.390><c> itself</c><00:04:08.600><c> to</c><00:04:08.720><c> be</c><00:04:08.810><c> very</c><00:04:09.049><c> good</c><00:04:09.230><c> at</c>

00:04:09.370 --> 00:04:09.380 align:start position:0%
that's proven itself to be very good at
 

00:04:09.380 --> 00:04:10.270 align:start position:0%
that's proven itself to be very good at
this<00:04:09.470><c> and</c><00:04:09.680><c> that's</c><00:04:09.830><c> the</c><00:04:09.920><c> c</c><00:04:10.070><c> programming</c>

00:04:10.270 --> 00:04:10.280 align:start position:0%
this and that's the c programming
 

00:04:10.280 --> 00:04:13.120 align:start position:0%
this and that's the c programming
language<00:04:10.989><c> for</c><00:04:11.989><c> the</c><00:04:12.440><c> general</c><00:04:12.799><c> purpose</c>

00:04:13.120 --> 00:04:13.130 align:start position:0%
language for the general purpose
 

00:04:13.130 --> 00:04:16.030 align:start position:0%
language for the general purpose
processor<00:04:13.959><c> see</c><00:04:14.959><c> got</c><00:04:15.470><c> people</c><00:04:15.769><c> away</c><00:04:16.010><c> from</c>

00:04:16.030 --> 00:04:16.040 align:start position:0%
processor see got people away from
 

00:04:16.040 --> 00:04:17.770 align:start position:0%
processor see got people away from
programming<00:04:16.669><c> and</c><00:04:16.880><c> assembly</c><00:04:17.299><c> all</c><00:04:17.450><c> the</c><00:04:17.570><c> time</c>

00:04:17.770 --> 00:04:17.780 align:start position:0%
programming and assembly all the time
 

00:04:17.780 --> 00:04:20.229 align:start position:0%
programming and assembly all the time
and<00:04:18.039><c> i</c><00:04:19.039><c> guess</c><00:04:19.520><c> the</c><00:04:19.549><c> fact</c><00:04:19.789><c> that</c><00:04:19.910><c> we're</c><00:04:20.090><c> still</c>

00:04:20.229 --> 00:04:20.239 align:start position:0%
and i guess the fact that we're still
 

00:04:20.239 --> 00:04:22.000 align:start position:0%
and i guess the fact that we're still
programming<00:04:20.750><c> in</c><00:04:20.840><c> c</c><00:04:20.989><c> today</c><00:04:21.140><c> is</c><00:04:21.440><c> a</c><00:04:21.470><c> good</c><00:04:21.709><c> sign</c>

00:04:22.000 --> 00:04:22.010 align:start position:0%
programming in c today is a good sign
 

00:04:22.010 --> 00:04:23.170 align:start position:0%
programming in c today is a good sign
that<00:04:22.250><c> it</c><00:04:22.490><c> is</c>

00:04:23.170 --> 00:04:23.180 align:start position:0%
that it is
 

00:04:23.180 --> 00:04:26.920 align:start position:0%
that it is
pretty<00:04:23.330><c> well</c><00:04:23.479><c> designed</c><00:04:23.780><c> language</c><00:04:24.199><c> so</c><00:04:25.930><c> the</c>

00:04:26.920 --> 00:04:26.930 align:start position:0%
pretty well designed language so the
 

00:04:26.930 --> 00:04:29.740 align:start position:0%
pretty well designed language so the
Open<00:04:27.169><c> GL</c><00:04:27.199><c> ARB</c><00:04:27.650><c> got</c><00:04:27.889><c> together</c><00:04:28.070><c> and</c><00:04:28.550><c> pretty</c><00:04:29.539><c> much</c>

00:04:29.740 --> 00:04:29.750 align:start position:0%
Open GL ARB got together and pretty much
 

00:04:29.750 --> 00:04:31.240 align:start position:0%
Open GL ARB got together and pretty much
took<00:04:29.960><c> the</c><00:04:30.080><c> C</c><00:04:30.229><c> programming</c><00:04:30.259><c> language</c><00:04:30.770><c> and</c>

00:04:31.240 --> 00:04:31.250 align:start position:0%
took the C programming language and
 

00:04:31.250 --> 00:04:34.150 align:start position:0%
took the C programming language and
added<00:04:31.610><c> some</c><00:04:31.789><c> new</c><00:04:32.470><c> some</c><00:04:33.470><c> flooding</c><00:04:33.710><c> you</c><00:04:33.889><c> sign</c>

00:04:34.150 --> 00:04:34.160 align:start position:0%
added some new some flooding you sign
 

00:04:34.160 --> 00:04:36.490 align:start position:0%
added some new some flooding you sign
tax<00:04:34.430><c> to</c><00:04:34.669><c> it</c><00:04:34.820><c> that</c><00:04:34.970><c> that's</c><00:04:35.240><c> required</c><00:04:35.539><c> to</c><00:04:36.110><c> I</c>

00:04:36.490 --> 00:04:36.500 align:start position:0%
tax to it that that's required to I
 

00:04:36.500 --> 00:04:38.469 align:start position:0%
tax to it that that's required to I
guess<00:04:36.680><c> make</c><00:04:37.340><c> it</c><00:04:37.460><c> appropriate</c><00:04:37.639><c> for</c><00:04:38.000><c> pre</c>

00:04:38.469 --> 00:04:38.479 align:start position:0%
guess make it appropriate for pre
 

00:04:38.479 --> 00:04:42.879 align:start position:0%
guess make it appropriate for pre
shading<00:04:39.910><c> so</c><00:04:40.960><c> let's</c><00:04:41.960><c> take</c><00:04:42.080><c> a</c><00:04:42.139><c> look</c><00:04:42.380><c> at</c><00:04:42.470><c> the</c>

00:04:42.879 --> 00:04:42.889 align:start position:0%
shading so let's take a look at the
 

00:04:42.889 --> 00:04:46.629 align:start position:0%
shading so let's take a look at the
support<00:04:43.580><c> for</c><00:04:43.789><c> this</c><00:04:43.880><c> if</c><00:04:44.120><c> you</c><00:04:44.960><c> want</c><00:04:45.169><c> to</c><00:04:45.380><c> if</c><00:04:46.100><c> you</c>

00:04:46.629 --> 00:04:46.639 align:start position:0%
support for this if you want to if you
 

00:04:46.639 --> 00:04:48.100 align:start position:0%
support for this if you want to if you
want<00:04:46.850><c> to</c><00:04:46.940><c> check</c><00:04:47.150><c> in</c><00:04:47.300><c> your</c><00:04:47.419><c> application</c><00:04:48.020><c> if</c>

00:04:48.100 --> 00:04:48.110 align:start position:0%
want to check in your application if
 

00:04:48.110 --> 00:04:50.290 align:start position:0%
want to check in your application if
it's<00:04:48.259><c> there</c><00:04:48.500><c> these</c><00:04:49.190><c> are</c><00:04:49.370><c> the</c><00:04:49.460><c> four</c><00:04:49.669><c> extensions</c>

00:04:50.290 --> 00:04:50.300 align:start position:0%
it's there these are the four extensions
 

00:04:50.300 --> 00:04:52.240 align:start position:0%
it's there these are the four extensions
that<00:04:50.479><c> are</c><00:04:50.539><c> going</c><00:04:50.750><c> to</c><00:04:50.840><c> be</c><00:04:51.110><c> on</c><00:04:51.410><c> an</c><00:04:51.740><c> OpenGL</c>

00:04:52.240 --> 00:04:52.250 align:start position:0%
that are going to be on an OpenGL
 

00:04:52.250 --> 00:04:55.930 align:start position:0%
that are going to be on an OpenGL
implementation<00:04:53.030><c> that</c><00:04:53.060><c> support</c><00:04:53.479><c> this</c><00:04:54.669><c> as</c><00:04:55.669><c> I</c><00:04:55.849><c> go</c>

00:04:55.930 --> 00:04:55.940 align:start position:0%
implementation that support this as I go
 

00:04:55.940 --> 00:04:57.010 align:start position:0%
implementation that support this as I go
through<00:04:55.970><c> the</c><00:04:56.120><c> presentation</c><00:04:56.270><c> you'll</c><00:04:56.750><c> see</c><00:04:56.870><c> why</c>

00:04:57.010 --> 00:04:57.020 align:start position:0%
through the presentation you'll see why
 

00:04:57.020 --> 00:04:58.240 align:start position:0%
through the presentation you'll see why
you<00:04:57.050><c> really</c><00:04:57.259><c> there</c><00:04:57.440><c> are</c><00:04:57.530><c> four</c><00:04:57.740><c> of</c><00:04:57.770><c> them</c><00:04:57.919><c> but</c>

00:04:58.240 --> 00:04:58.250 align:start position:0%
you really there are four of them but
 

00:04:58.250 --> 00:05:00.310 align:start position:0%
you really there are four of them but
the<00:04:58.729><c> most</c><00:04:58.880><c> important</c><00:04:59.419><c> one</c><00:04:59.449><c> relief</c><00:04:59.840><c> to</c><00:05:00.110><c> check</c>

00:05:00.310 --> 00:05:00.320 align:start position:0%
the most important one relief to check
 

00:05:00.320 --> 00:05:01.900 align:start position:0%
the most important one relief to check
for<00:05:00.560><c> is</c><00:05:00.800><c> the</c><00:05:01.039><c> one</c><00:05:01.160><c> that's</c><00:05:01.280><c> highlighted</c><00:05:01.610><c> there</c>

00:05:01.900 --> 00:05:01.910 align:start position:0%
for is the one that's highlighted there
 

00:05:01.910 --> 00:05:05.050 align:start position:0%
for is the one that's highlighted there
are<00:05:02.150><c> shading</c><00:05:02.810><c> language</c><00:05:03.340><c> 100</c><00:05:04.340><c> if</c><00:05:04.759><c> you</c><00:05:04.880><c> check</c>

00:05:05.050 --> 00:05:05.060 align:start position:0%
are shading language 100 if you check
 

00:05:05.060 --> 00:05:07.060 align:start position:0%
are shading language 100 if you check
for<00:05:05.300><c> that</c><00:05:05.330><c> and</c><00:05:05.599><c> that's</c><00:05:05.720><c> there</c><00:05:05.990><c> you</c><00:05:06.800><c> should</c>

00:05:07.060 --> 00:05:07.070 align:start position:0%
for that and that's there you should
 

00:05:07.070 --> 00:05:08.860 align:start position:0%
for that and that's there you should
have<00:05:07.370><c> at</c><00:05:07.580><c> least</c><00:05:07.610><c> some</c><00:05:07.940><c> level</c><00:05:08.000><c> support</c><00:05:08.509><c> for</c><00:05:08.810><c> the</c>

00:05:08.860 --> 00:05:08.870 align:start position:0%
have at least some level support for the
 

00:05:08.870 --> 00:05:13.379 align:start position:0%
have at least some level support for the
shading<00:05:09.199><c> language</c><00:05:09.320><c> on</c><00:05:09.710><c> your</c><00:05:09.820><c> implementation</c>

00:05:13.379 --> 00:05:13.389 align:start position:0%
 
 

00:05:13.389 --> 00:05:19.950 align:start position:0%
 
hmm<00:05:14.650><c> also</c><00:05:15.650><c> a</c><00:05:16.990><c> hardware</c><00:05:17.990><c> support</c><00:05:18.400><c> for</c><00:05:19.400><c> this</c>

00:05:19.950 --> 00:05:19.960 align:start position:0%
hmm also a hardware support for this
 

00:05:19.960 --> 00:05:23.350 align:start position:0%
hmm also a hardware support for this
really<00:05:20.960><c> any</c><00:05:21.229><c> any</c><00:05:21.560><c> hardware</c><00:05:21.949><c> that</c><00:05:22.669><c> has</c><00:05:22.880><c> support</c>

00:05:23.350 --> 00:05:23.360 align:start position:0%
really any any hardware that has support
 

00:05:23.360 --> 00:05:26.080 align:start position:0%
really any any hardware that has support
for<00:05:23.690><c> armed</c><00:05:24.560><c> fragment</c><00:05:25.009><c> program</c><00:05:25.340><c> and</c><00:05:25.550><c> our</c>

00:05:26.080 --> 00:05:26.090 align:start position:0%
for armed fragment program and our
 

00:05:26.090 --> 00:05:30.570 align:start position:0%
for armed fragment program and our
vertex<00:05:26.509><c> program</c><00:05:27.760><c> that</c><00:05:28.760><c> hardware</c><00:05:29.150><c> can</c><00:05:29.449><c> support</c>

00:05:30.570 --> 00:05:30.580 align:start position:0%
vertex program that hardware can support
 

00:05:30.580 --> 00:05:33.600 align:start position:0%
vertex program that hardware can support
the<00:05:31.580><c> OpenGL</c><00:05:32.000><c> shading</c><00:05:32.030><c> language</c><00:05:32.510><c> or</c><00:05:32.960><c> at</c><00:05:33.080><c> least</c>

00:05:33.600 --> 00:05:33.610 align:start position:0%
the OpenGL shading language or at least
 

00:05:33.610 --> 00:05:37.089 align:start position:0%
the OpenGL shading language or at least
varying<00:05:34.610><c> amounts</c><00:05:35.030><c> of</c><00:05:35.180><c> it</c><00:05:35.770><c> the</c><00:05:36.770><c> shading</c>

00:05:37.089 --> 00:05:37.099 align:start position:0%
varying amounts of it the shading
 

00:05:37.099 --> 00:05:39.219 align:start position:0%
varying amounts of it the shading
language<00:05:37.220><c> being</c><00:05:37.909><c> see</c><00:05:38.210><c> it</c><00:05:38.419><c> has</c><00:05:38.570><c> looping</c>

00:05:39.219 --> 00:05:39.229 align:start position:0%
language being see it has looping
 

00:05:39.229 --> 00:05:43.060 align:start position:0%
language being see it has looping
branching<00:05:39.800><c> function</c><00:05:40.370><c> calls</c><00:05:40.639><c> and</c><00:05:40.940><c> also</c><00:05:41.599><c> a</c><00:05:42.070><c> lot</c>

00:05:43.060 --> 00:05:43.070 align:start position:0%
branching function calls and also a lot
 

00:05:43.070 --> 00:05:44.860 align:start position:0%
branching function calls and also a lot
of<00:05:43.099><c> built-in</c><00:05:43.520><c> functions</c><00:05:44.030><c> like</c><00:05:44.210><c> you</c><00:05:44.780><c> know</c><00:05:44.840><c> like</c>

00:05:44.860 --> 00:05:44.870 align:start position:0%
of built-in functions like you know like
 

00:05:44.870 --> 00:05:46.629 align:start position:0%
of built-in functions like you know like
an<00:05:45.080><c> adult</c><00:05:45.260><c> for</c><00:05:45.590><c> generating</c><00:05:46.010><c> noise</c><00:05:46.280><c> and</c>

00:05:46.629 --> 00:05:46.639 align:start position:0%
an adult for generating noise and
 

00:05:46.639 --> 00:05:49.629 align:start position:0%
an adult for generating noise and
various<00:05:46.909><c> things</c><00:05:47.150><c> well</c><00:05:47.419><c> it</c><00:05:48.199><c> turns</c><00:05:48.770><c> out</c><00:05:48.979><c> that</c><00:05:49.039><c> a</c>

00:05:49.629 --> 00:05:49.639 align:start position:0%
various things well it turns out that a
 

00:05:49.639 --> 00:05:52.360 align:start position:0%
various things well it turns out that a
lot<00:05:50.449><c> of</c><00:05:50.570><c> current</c><00:05:50.870><c> hardware</c><00:05:51.320><c> will</c><00:05:51.889><c> simply</c>

00:05:52.360 --> 00:05:52.370 align:start position:0%
lot of current hardware will simply
 

00:05:52.370 --> 00:05:53.980 align:start position:0%
lot of current hardware will simply
doesn't<00:05:52.580><c> have</c><00:05:52.759><c> the</c><00:05:52.909><c> actual</c><00:05:53.270><c> machine</c><00:05:53.960><c> code</c>

00:05:53.980 --> 00:05:53.990 align:start position:0%
doesn't have the actual machine code
 

00:05:53.990 --> 00:05:56.649 align:start position:0%
doesn't have the actual machine code
instructions<00:05:54.409><c> that</c><00:05:54.770><c> will</c><00:05:54.830><c> do</c><00:05:55.039><c> that</c><00:05:55.280><c> so</c><00:05:56.000><c> there</c>

00:05:56.649 --> 00:05:56.659 align:start position:0%
instructions that will do that so there
 

00:05:56.659 --> 00:05:57.879 align:start position:0%
instructions that will do that so there
could<00:05:56.870><c> be</c><00:05:56.900><c> programs</c><00:05:57.409><c> that</c><00:05:57.560><c> you'll</c><00:05:57.680><c> submit</c>

00:05:57.879 --> 00:05:57.889 align:start position:0%
could be programs that you'll submit
 

00:05:57.889 --> 00:05:59.740 align:start position:0%
could be programs that you'll submit
that<00:05:58.159><c> simply</c><00:05:58.550><c> won't</c><00:05:58.639><c> run</c><00:05:58.909><c> on</c><00:05:58.940><c> the</c><00:05:59.150><c> hardware</c><00:05:59.509><c> at</c>

00:05:59.740 --> 00:05:59.750 align:start position:0%
that simply won't run on the hardware at
 

00:05:59.750 --> 00:06:01.390 align:start position:0%
that simply won't run on the hardware at
this<00:05:59.900><c> time</c><00:06:00.169><c> however</c><00:06:00.860><c> this</c><00:06:01.190><c> is</c><00:06:01.370><c> a</c>

00:06:01.390 --> 00:06:01.400 align:start position:0%
this time however this is a
 

00:06:01.400 --> 00:06:03.610 align:start position:0%
this time however this is a
forward-thinking<00:06:01.849><c> language</c><00:06:02.599><c> and</c><00:06:02.870><c> you</c><00:06:03.530><c> know</c>

00:06:03.610 --> 00:06:03.620 align:start position:0%
forward-thinking language and you know
 

00:06:03.620 --> 00:06:06.219 align:start position:0%
forward-thinking language and you know
as<00:06:04.220><c> Hardware</c><00:06:04.940><c> keeps</c><00:06:05.090><c> coming</c><00:06:05.419><c> out</c><00:06:05.509><c> soon</c><00:06:05.870><c> it</c>

00:06:06.219 --> 00:06:06.229 align:start position:0%
as Hardware keeps coming out soon it
 

00:06:06.229 --> 00:06:10.570 align:start position:0%
as Hardware keeps coming out soon it
will<00:06:06.320><c> be</c><00:06:06.470><c> fully</c><00:06:06.680><c> supported</c><00:06:08.979><c> but</c><00:06:09.979><c> that</c><00:06:10.340><c> leads</c>

00:06:10.570 --> 00:06:10.580 align:start position:0%
will be fully supported but that leads
 

00:06:10.580 --> 00:06:13.390 align:start position:0%
will be fully supported but that leads
me<00:06:10.699><c> to</c><00:06:10.909><c> my</c><00:06:10.940><c> next</c><00:06:11.060><c> point</c><00:06:11.710><c> which</c><00:06:12.710><c> is</c><00:06:12.740><c> that</c><00:06:12.919><c> you</c>

00:06:13.390 --> 00:06:13.400 align:start position:0%
me to my next point which is that you
 

00:06:13.400 --> 00:06:15.279 align:start position:0%
me to my next point which is that you
know<00:06:13.490><c> current</c><00:06:13.909><c> hardware</c><00:06:14.330><c> resources</c><00:06:14.720><c> are</c>

00:06:15.279 --> 00:06:15.289 align:start position:0%
know current hardware resources are
 

00:06:15.289 --> 00:06:16.990 align:start position:0%
know current hardware resources are
limited<00:06:15.440><c> either</c><00:06:15.800><c> in</c><00:06:16.039><c> terms</c><00:06:16.370><c> of</c><00:06:16.550><c> the</c><00:06:16.669><c> range</c><00:06:16.880><c> of</c>

00:06:16.990 --> 00:06:17.000 align:start position:0%
limited either in terms of the range of
 

00:06:17.000 --> 00:06:22.480 align:start position:0%
limited either in terms of the range of
instructions<00:06:17.630><c> that</c><00:06:17.720><c> are</c><00:06:17.930><c> available</c><00:06:19.690><c> or</c><00:06:21.220><c> or</c><00:06:22.220><c> in</c>

00:06:22.480 --> 00:06:22.490 align:start position:0%
instructions that are available or or in
 

00:06:22.490 --> 00:06:23.920 align:start position:0%
instructions that are available or or in
terms<00:06:22.699><c> of</c><00:06:22.820><c> how</c><00:06:22.940><c> many</c><00:06:23.000><c> registers</c><00:06:23.630><c> it</c><00:06:23.750><c> has</c>

00:06:23.920 --> 00:06:23.930 align:start position:0%
terms of how many registers it has
 

00:06:23.930 --> 00:06:26.589 align:start position:0%
terms of how many registers it has
therefore<00:06:25.120><c> I'm</c><00:06:26.120><c> going</c><00:06:26.180><c> to</c><00:06:26.330><c> talk</c><00:06:26.419><c> about</c>

00:06:26.589 --> 00:06:26.599 align:start position:0%
therefore I'm going to talk about
 

00:06:26.599 --> 00:06:29.170 align:start position:0%
therefore I'm going to talk about
software<00:06:27.110><c> rendering</c><00:06:27.530><c> now</c><00:06:28.190><c> here</c><00:06:28.699><c> we</c><00:06:28.820><c> are</c><00:06:28.849><c> at</c>

00:06:29.170 --> 00:06:29.180 align:start position:0%
software rendering now here we are at
 

00:06:29.180 --> 00:06:30.670 align:start position:0%
software rendering now here we are at
the<00:06:29.270><c> cutting</c><00:06:29.479><c> edge</c><00:06:29.659><c> of</c><00:06:29.810><c> technology</c><00:06:30.050><c> that</c>

00:06:30.670 --> 00:06:30.680 align:start position:0%
the cutting edge of technology that
 

00:06:30.680 --> 00:06:32.379 align:start position:0%
the cutting edge of technology that
spawns<00:06:31.219><c> a</c><00:06:31.370><c> new</c><00:06:31.460><c> hardware</c><00:06:31.820><c> and</c><00:06:32.029><c> well</c><00:06:32.210><c> we're</c>

00:06:32.379 --> 00:06:32.389 align:start position:0%
spawns a new hardware and well we're
 

00:06:32.389 --> 00:06:34.649 align:start position:0%
spawns a new hardware and well we're
back<00:06:32.539><c> to</c><00:06:32.719><c> software</c><00:06:33.050><c> rendering</c><00:06:33.409><c> again</c><00:06:33.710><c> well</c>

00:06:34.649 --> 00:06:34.659 align:start position:0%
back to software rendering again well
 

00:06:34.659 --> 00:06:37.149 align:start position:0%
back to software rendering again well
let's<00:06:35.659><c> think</c><00:06:36.169><c> about</c><00:06:36.229><c> really</c><00:06:36.499><c> why</c><00:06:36.680><c> that</c><00:06:36.919><c> that</c>

00:06:37.149 --> 00:06:37.159 align:start position:0%
let's think about really why that that
 

00:06:37.159 --> 00:06:42.040 align:start position:0%
let's think about really why that that
is<00:06:37.419><c> in</c><00:06:38.419><c> the</c><00:06:38.719><c> past</c><00:06:39.550><c> opengl</c><00:06:40.550><c> really</c><00:06:40.969><c> has</c><00:06:41.719><c> sort</c><00:06:41.990><c> of</c>

00:06:42.040 --> 00:06:42.050 align:start position:0%
is in the past opengl really has sort of
 

00:06:42.050 --> 00:06:43.540 align:start position:0%
is in the past opengl really has sort of
been<00:06:42.199><c> used</c><00:06:42.710><c> mainly</c><00:06:43.039><c> for</c><00:06:43.189><c> sort</c><00:06:43.490><c> of</c>

00:06:43.540 --> 00:06:43.550 align:start position:0%
been used mainly for sort of
 

00:06:43.550 --> 00:06:45.309 align:start position:0%
been used mainly for sort of
non-photorealistic<00:06:44.150><c> rendering</c><00:06:44.240><c> it's</c><00:06:45.139><c> being</c>

00:06:45.309 --> 00:06:45.319 align:start position:0%
non-photorealistic rendering it's being
 

00:06:45.319 --> 00:06:47.140 align:start position:0%
non-photorealistic rendering it's being
used<00:06:45.349><c> for</c><00:06:45.860><c> either</c><00:06:46.099><c> previews</c><00:06:46.789><c> in</c><00:06:46.819><c> an</c>

00:06:47.140 --> 00:06:47.150 align:start position:0%
used for either previews in an
 

00:06:47.150 --> 00:06:48.909 align:start position:0%
used for either previews in an
application<00:06:47.749><c> like</c><00:06:47.779><c> a</c><00:06:47.900><c> CAD</c><00:06:48.169><c> application</c><00:06:48.830><c> it's</c>

00:06:48.909 --> 00:06:48.919 align:start position:0%
application like a CAD application it's
 

00:06:48.919 --> 00:06:50.320 align:start position:0%
application like a CAD application it's
been<00:06:49.039><c> use</c><00:06:49.129><c> of</c><00:06:49.249><c> the</c><00:06:49.340><c> preview</c><00:06:49.669><c> but</c><00:06:49.789><c> for</c><00:06:50.270><c> the</c>

00:06:50.320 --> 00:06:50.330 align:start position:0%
been use of the preview but for the
 

00:06:50.330 --> 00:06:52.360 align:start position:0%
been use of the preview but for the
actual<00:06:50.629><c> final</c><00:06:50.930><c> rendering</c><00:06:51.620><c> typically</c>

00:06:52.360 --> 00:06:52.370 align:start position:0%
actual final rendering typically
 

00:06:52.370 --> 00:06:53.920 align:start position:0%
actual final rendering typically
applications<00:06:53.060><c> have</c><00:06:53.270><c> had</c><00:06:53.419><c> to</c><00:06:53.569><c> use</c><00:06:53.749><c> their</c><00:06:53.900><c> own</c>

00:06:53.920 --> 00:06:53.930 align:start position:0%
applications have had to use their own
 

00:06:53.930 --> 00:06:55.869 align:start position:0%
applications have had to use their own
software<00:06:54.319><c> renderer</c><00:06:54.889><c> or</c><00:06:55.490><c> in</c><00:06:55.639><c> the</c><00:06:55.729><c> movies</c>

00:06:55.869 --> 00:06:55.879 align:start position:0%
software renderer or in the movies
 

00:06:55.879 --> 00:06:58.510 align:start position:0%
software renderer or in the movies
people<00:06:56.479><c> have</c><00:06:56.599><c> used</c><00:06:56.779><c> render</c><00:06:57.169><c> man</c><00:06:57.319><c> and</c><00:06:58.249><c> various</c>

00:06:58.510 --> 00:06:58.520 align:start position:0%
people have used render man and various
 

00:06:58.520 --> 00:07:00.939 align:start position:0%
people have used render man and various
things<00:06:58.550><c> for</c><00:06:58.879><c> that</c><00:06:59.029><c> well</c><00:06:59.930><c> OpenGL</c><00:07:00.710><c> is</c>

00:07:00.939 --> 00:07:00.949 align:start position:0%
things for that well OpenGL is
 

00:07:00.949 --> 00:07:02.589 align:start position:0%
things for that well OpenGL is
developing<00:07:01.520><c> and</c><00:07:01.699><c> now</c><00:07:01.819><c> with</c><00:07:02.060><c> the</c><00:07:02.090><c> shading</c>

00:07:02.589 --> 00:07:02.599 align:start position:0%
developing and now with the shading
 

00:07:02.599 --> 00:07:06.129 align:start position:0%
developing and now with the shading
languages<00:07:03.110><c> photorealistic</c><00:07:04.039><c> rendering</c><00:07:04.249><c> is</c><00:07:05.139><c> is</c>

00:07:06.129 --> 00:07:06.139 align:start position:0%
languages photorealistic rendering is is
 

00:07:06.139 --> 00:07:10.300 align:start position:0%
languages photorealistic rendering is is
becoming<00:07:06.620><c> a</c><00:07:06.710><c> possibility</c><00:07:07.340><c> so</c><00:07:08.300><c> a</c><00:07:09.310><c> software</c>

00:07:10.300 --> 00:07:10.310 align:start position:0%
becoming a possibility so a software
 

00:07:10.310 --> 00:07:12.670 align:start position:0%
becoming a possibility so a software
renderer<00:07:10.639><c> becomes</c><00:07:11.090><c> necessary</c><00:07:11.300><c> because</c><00:07:11.930><c> we</c>

00:07:12.670 --> 00:07:12.680 align:start position:0%
renderer becomes necessary because we
 

00:07:12.680 --> 00:07:18.149 align:start position:0%
renderer becomes necessary because we
want<00:07:13.069><c> something</c><00:07:13.550><c> that</c><00:07:14.300><c> is</c><00:07:14.770><c> high</c><00:07:15.770><c> precision</c>

00:07:18.149 --> 00:07:18.159 align:start position:0%
want something that is high precision
 

00:07:18.159 --> 00:07:23.070 align:start position:0%
want something that is high precision
has<00:07:19.159><c> real</c><00:07:19.490><c> 32</c><00:07:20.029><c> real</c><00:07:20.539><c> 32-bit</c><00:07:21.110><c> float</c><00:07:21.439><c> and</c>

00:07:23.070 --> 00:07:23.080 align:start position:0%
has real 32 real 32-bit float and
 

00:07:23.080 --> 00:07:25.269 align:start position:0%
has real 32 real 32-bit float and
current<00:07:24.080><c> graphics</c><00:07:24.469><c> hardware</c><00:07:24.590><c> if</c><00:07:24.919><c> you</c><00:07:25.039><c> take</c>

00:07:25.269 --> 00:07:25.279 align:start position:0%
current graphics hardware if you take
 

00:07:25.279 --> 00:07:26.890 align:start position:0%
current graphics hardware if you take
the<00:07:25.400><c> same</c><00:07:25.580><c> thing</c><00:07:25.879><c> and</c><00:07:26.060><c> render</c><00:07:26.389><c> it</c><00:07:26.419><c> on</c><00:07:26.659><c> to</c>

00:07:26.890 --> 00:07:26.900 align:start position:0%
the same thing and render it on to
 

00:07:26.900 --> 00:07:28.300 align:start position:0%
the same thing and render it on to
vendors<00:07:27.319><c> graphics</c><00:07:27.710><c> cards</c><00:07:28.009><c> and</c><00:07:28.159><c> do</c><00:07:28.279><c> a</c>

00:07:28.300 --> 00:07:28.310 align:start position:0%
vendors graphics cards and do a
 

00:07:28.310 --> 00:07:29.709 align:start position:0%
vendors graphics cards and do a
comparison<00:07:28.819><c> the</c><00:07:29.060><c> colors</c><00:07:29.360><c> are</c><00:07:29.509><c> slightly</c>

00:07:29.709 --> 00:07:29.719 align:start position:0%
comparison the colors are slightly
 

00:07:29.719 --> 00:07:31.300 align:start position:0%
comparison the colors are slightly
different<00:07:30.199><c> the</c><00:07:30.589><c> gentleman</c><00:07:30.919><c> who</c><00:07:31.009><c> looks</c><00:07:31.159><c> ever</c>

00:07:31.300 --> 00:07:31.310 align:start position:0%
different the gentleman who looks ever
 

00:07:31.310 --> 00:07:32.589 align:start position:0%
different the gentleman who looks ever
so<00:07:31.400><c> slightly</c><00:07:31.669><c> different</c><00:07:32.089><c> you</c><00:07:32.180><c> don't</c><00:07:32.210><c> get</c><00:07:32.479><c> the</c>

00:07:32.589 --> 00:07:32.599 align:start position:0%
so slightly different you don't get the
 

00:07:32.599 --> 00:07:34.749 align:start position:0%
so slightly different you don't get the
exact<00:07:32.900><c> same</c><00:07:33.139><c> rendering</c><00:07:33.620><c> so</c><00:07:33.830><c> we</c><00:07:34.339><c> want</c><00:07:34.610><c> a</c>

00:07:34.749 --> 00:07:34.759 align:start position:0%
exact same rendering so we want a
 

00:07:34.759 --> 00:07:36.219 align:start position:0%
exact same rendering so we want a
software<00:07:35.300><c> renderer</c><00:07:35.599><c> that</c><00:07:35.779><c> can</c><00:07:35.930><c> provide</c>

00:07:36.219 --> 00:07:36.229 align:start position:0%
software renderer that can provide
 

00:07:36.229 --> 00:07:39.519 align:start position:0%
software renderer that can provide
consistent<00:07:36.919><c> final</c><00:07:37.279><c> renders</c><00:07:37.669><c> and</c><00:07:38.379><c> the</c><00:07:39.379><c> other</c>

00:07:39.519 --> 00:07:39.529 align:start position:0%
consistent final renders and the other
 

00:07:39.529 --> 00:07:41.890 align:start position:0%
consistent final renders and the other
thing<00:07:39.620><c> is</c><00:07:40.039><c> massive</c><00:07:40.729><c> frame</c><00:07:41.180><c> buffers</c><00:07:41.599><c> if</c><00:07:41.750><c> this</c>

00:07:41.890 --> 00:07:41.900 align:start position:0%
thing is massive frame buffers if this
 

00:07:41.900 --> 00:07:44.649 align:start position:0%
thing is massive frame buffers if this
is<00:07:42.050><c> for</c><00:07:42.289><c> for</c><00:07:42.860><c> the</c><00:07:42.949><c> movies</c><00:07:43.279><c> or</c><00:07:43.490><c> even</c><00:07:44.240><c> for</c><00:07:44.389><c> print</c>

00:07:44.649 --> 00:07:44.659 align:start position:0%
is for for the movies or even for print
 

00:07:44.659 --> 00:07:46.240 align:start position:0%
is for for the movies or even for print
of<00:07:44.810><c> some</c><00:07:44.990><c> sort</c><00:07:45.259><c> you</c><00:07:45.650><c> might</c><00:07:45.830><c> want</c><00:07:46.009><c> to</c><00:07:46.069><c> have</c><00:07:46.189><c> a</c>

00:07:46.240 --> 00:07:46.250 align:start position:0%
of some sort you might want to have a
 

00:07:46.250 --> 00:07:47.980 align:start position:0%
of some sort you might want to have a
huge<00:07:46.550><c> frame</c><00:07:46.759><c> buffer</c><00:07:47.120><c> so</c><00:07:47.300><c> we</c><00:07:47.389><c> want</c><00:07:47.569><c> a</c><00:07:47.629><c> software</c>

00:07:47.980 --> 00:07:47.990 align:start position:0%
huge frame buffer so we want a software
 

00:07:47.990 --> 00:07:50.249 align:start position:0%
huge frame buffer so we want a software
renderer<00:07:48.259><c> that</c><00:07:48.439><c> can</c><00:07:48.589><c> really</c><00:07:48.770><c> do</c><00:07:48.949><c> that</c><00:07:48.979><c> and</c>

00:07:50.249 --> 00:07:50.259 align:start position:0%
renderer that can really do that and
 

00:07:50.259 --> 00:07:53.079 align:start position:0%
renderer that can really do that and
also<00:07:51.259><c> our</c><00:07:51.860><c> new</c><00:07:52.159><c> software</c><00:07:52.490><c> render</c><00:07:52.789><c> we</c><00:07:52.879><c> wanted</c>

00:07:53.079 --> 00:07:53.089 align:start position:0%
also our new software render we wanted
 

00:07:53.089 --> 00:07:55.510 align:start position:0%
also our new software render we wanted
to<00:07:53.180><c> support</c><00:07:53.710><c> vertex</c><00:07:54.710><c> and</c><00:07:54.830><c> fragment</c><00:07:54.889><c> program</c>

00:07:55.510 --> 00:07:55.520 align:start position:0%
to support vertex and fragment program
 

00:07:55.520 --> 00:07:58.029 align:start position:0%
to support vertex and fragment program
and<00:07:55.699><c> it</c><00:07:55.789><c> using</c><00:07:56.330><c> using</c><00:07:56.659><c> a</c><00:07:56.930><c> runtime</c><00:07:57.680><c> compiled</c>

00:07:58.029 --> 00:07:58.039 align:start position:0%
and it using using a runtime compiled
 

00:07:58.039 --> 00:07:59.860 align:start position:0%
and it using using a runtime compiled
technology<00:07:58.939><c> we've</c><00:07:59.060><c> been</c><00:07:59.180><c> working</c><00:07:59.360><c> on</c><00:07:59.629><c> we're</c>

00:07:59.860 --> 00:07:59.870 align:start position:0%
technology we've been working on we're
 

00:07:59.870 --> 00:08:01.510 align:start position:0%
technology we've been working on we're
able<00:08:00.050><c> to</c><00:08:00.259><c> actually</c><00:08:00.289><c> generate</c><00:08:00.800><c> efficient</c>

00:08:01.510 --> 00:08:01.520 align:start position:0%
able to actually generate efficient
 

00:08:01.520 --> 00:08:04.389 align:start position:0%
able to actually generate efficient
altivec<00:08:01.969><c> code</c><00:08:02.270><c> that</c><00:08:02.960><c> will</c><00:08:03.139><c> run</c><00:08:03.770><c> any</c><00:08:04.099><c> of</c><00:08:04.279><c> these</c>

00:08:04.389 --> 00:08:04.399 align:start position:0%
altivec code that will run any of these
 

00:08:04.399 --> 00:08:08.019 align:start position:0%
altivec code that will run any of these
fragment<00:08:04.909><c> programs</c><00:08:06.550><c> which</c><00:08:07.550><c> is</c><00:08:07.669><c> really</c><00:08:07.849><c> pretty</c>

00:08:08.019 --> 00:08:08.029 align:start position:0%
fragment programs which is really pretty
 

00:08:08.029 --> 00:08:10.600 align:start position:0%
fragment programs which is really pretty
powerful<00:08:08.419><c> and</c><00:08:08.830><c> you</c><00:08:09.830><c> know</c><00:08:09.919><c> it's</c><00:08:10.099><c> not</c><00:08:10.279><c> as</c><00:08:10.430><c> fast</c>

00:08:10.600 --> 00:08:10.610 align:start position:0%
powerful and you know it's not as fast
 

00:08:10.610 --> 00:08:13.420 align:start position:0%
powerful and you know it's not as fast
as<00:08:10.849><c> hardware</c><00:08:11.240><c> but</c><00:08:11.569><c> this</c><00:08:12.379><c> is</c><00:08:12.560><c> the</c><00:08:12.710><c> fallback</c><00:08:13.159><c> if</c>

00:08:13.420 --> 00:08:13.430 align:start position:0%
as hardware but this is the fallback if
 

00:08:13.430 --> 00:08:15.550 align:start position:0%
as hardware but this is the fallback if
you<00:08:13.699><c> submit</c><00:08:14.089><c> a</c><00:08:14.270><c> shading</c><00:08:14.750><c> language</c><00:08:14.870><c> programs</c>

00:08:15.550 --> 00:08:15.560 align:start position:0%
you submit a shading language programs
 

00:08:15.560 --> 00:08:17.529 align:start position:0%
you submit a shading language programs
that<00:08:15.770><c> will</c><00:08:15.979><c> not</c><00:08:16.219><c> run</c><00:08:16.399><c> on</c><00:08:16.430><c> hardware</c><00:08:16.909><c> it</c><00:08:17.120><c> will</c>

00:08:17.529 --> 00:08:17.539 align:start position:0%
that will not run on hardware it will
 

00:08:17.539 --> 00:08:19.029 align:start position:0%
that will not run on hardware it will
run<00:08:17.810><c> it'll</c><00:08:18.139><c> fall</c><00:08:18.319><c> back</c><00:08:18.500><c> to</c><00:08:18.529><c> the</c><00:08:18.680><c> software</c>

00:08:19.029 --> 00:08:19.039 align:start position:0%
run it'll fall back to the software
 

00:08:19.039 --> 00:08:20.649 align:start position:0%
run it'll fall back to the software
renderer<00:08:19.430><c> and</c><00:08:19.580><c> it</c><00:08:19.669><c> will</c><00:08:19.789><c> run</c><00:08:20.029><c> just</c><00:08:20.419><c> not</c><00:08:20.539><c> as</c>

00:08:20.649 --> 00:08:20.659 align:start position:0%
renderer and it will run just not as
 

00:08:20.659 --> 00:08:27.850 align:start position:0%
renderer and it will run just not as
fast<00:08:22.539><c> so</c><00:08:24.550><c> let's</c><00:08:25.550><c> uh</c><00:08:25.759><c> let's</c><00:08:26.089><c> have</c><00:08:27.020><c> a</c><00:08:27.050><c> demo</c><00:08:27.589><c> here</c>

00:08:27.850 --> 00:08:27.860 align:start position:0%
fast so let's uh let's have a demo here
 

00:08:27.860 --> 00:08:29.409 align:start position:0%
fast so let's uh let's have a demo here
of<00:08:27.979><c> the</c><00:08:28.099><c> software</c><00:08:28.399><c> renderer</c><00:08:28.729><c> in</c><00:08:28.879><c> action</c><00:08:29.240><c> just</c>

00:08:29.409 --> 00:08:29.419 align:start position:0%
of the software renderer in action just
 

00:08:29.419 --> 00:08:32.469 align:start position:0%
of the software renderer in action just
to<00:08:29.629><c> show</c><00:08:30.050><c> you</c><00:08:30.080><c> sort</c><00:08:30.529><c> of</c><00:08:30.620><c> a</c><00:08:31.149><c> what</c><00:08:32.149><c> we've</c><00:08:32.269><c> got</c>

00:08:32.469 --> 00:08:32.479 align:start position:0%
to show you sort of a what we've got
 

00:08:32.479 --> 00:08:37.300 align:start position:0%
to show you sort of a what we've got
here<00:08:34.180><c> so</c><00:08:35.289><c> for</c><00:08:36.289><c> any</c><00:08:36.409><c> of</c><00:08:36.500><c> you</c><00:08:36.620><c> who</c><00:08:36.649><c> are</c><00:08:36.890><c> here</c><00:08:36.919><c> last</c>

00:08:37.300 --> 00:08:37.310 align:start position:0%
here so for any of you who are here last
 

00:08:37.310 --> 00:08:39.069 align:start position:0%
here so for any of you who are here last
year<00:08:37.490><c> you</c><00:08:37.909><c> might</c><00:08:38.060><c> recall</c><00:08:38.390><c> this</c><00:08:38.630><c> this</c>

00:08:39.069 --> 00:08:39.079 align:start position:0%
year you might recall this this
 

00:08:39.079 --> 00:08:42.699 align:start position:0%
year you might recall this this
particular<00:08:39.620><c> image</c><00:08:40.519><c> here</c><00:08:41.140><c> this</c><00:08:42.140><c> is</c><00:08:42.289><c> actually</c>

00:08:42.699 --> 00:08:42.709 align:start position:0%
particular image here this is actually
 

00:08:42.709 --> 00:08:44.050 align:start position:0%
particular image here this is actually
just<00:08:42.890><c> an</c><00:08:43.099><c> ARB</c><00:08:43.339><c> vertex</c><00:08:43.430><c> and</c><00:08:44.000><c> fragment</c>

00:08:44.050 --> 00:08:44.060 align:start position:0%
just an ARB vertex and fragment
 

00:08:44.060 --> 00:08:45.790 align:start position:0%
just an ARB vertex and fragment
programming<00:08:44.870><c> shader</c><00:08:45.079><c> builder</c><00:08:45.410><c> this</c><00:08:45.560><c> isn't</c>

00:08:45.790 --> 00:08:45.800 align:start position:0%
programming shader builder this isn't
 

00:08:45.800 --> 00:08:46.630 align:start position:0%
programming shader builder this isn't
even<00:08:45.980><c> the</c><00:08:46.040><c> high-level</c><00:08:46.279><c> sheet</c>

00:08:46.630 --> 00:08:46.640 align:start position:0%
even the high-level sheet
 

00:08:46.640 --> 00:08:49.090 align:start position:0%
even the high-level sheet
language<00:08:46.970><c> I'm</c><00:08:47.090><c> showing</c><00:08:47.330><c> right</c><00:08:47.510><c> now</c><00:08:47.540><c> but</c><00:08:48.530><c> this</c>

00:08:49.090 --> 00:08:49.100 align:start position:0%
language I'm showing right now but this
 

00:08:49.100 --> 00:08:50.980 align:start position:0%
language I'm showing right now but this
is<00:08:49.250><c> really</c><00:08:49.400><c> merely</c><00:08:49.760><c> just</c><00:08:49.880><c> to</c><00:08:50.000><c> prove</c><00:08:50.210><c> approve</c>

00:08:50.980 --> 00:08:50.990 align:start position:0%
is really merely just to prove approve
 

00:08:50.990 --> 00:08:52.840 align:start position:0%
is really merely just to prove approve
the<00:08:51.140><c> point</c><00:08:51.380><c> that</c><00:08:51.530><c> our</c><00:08:52.160><c> software</c><00:08:52.490><c> renderer</c>

00:08:52.840 --> 00:08:52.850 align:start position:0%
the point that our software renderer
 

00:08:52.850 --> 00:08:57.340 align:start position:0%
the point that our software renderer
here<00:08:53.570><c> you</c><00:08:53.720><c> can</c><00:08:53.900><c> hear</c><00:08:54.800><c> you</c><00:08:54.920><c> can</c><00:08:54.950><c> see</c><00:08:55.310><c> the</c><00:08:56.350><c> scene</c>

00:08:57.340 --> 00:08:57.350 align:start position:0%
here you can hear you can see the scene
 

00:08:57.350 --> 00:08:59.380 align:start position:0%
here you can hear you can see the scene
being<00:08:57.560><c> rendered</c><00:08:57.830><c> this</c><00:08:58.760><c> is</c><00:08:58.910><c> running</c><00:08:59.210><c> on</c><00:08:59.330><c> a</c>

00:08:59.380 --> 00:08:59.390 align:start position:0%
being rendered this is running on a
 

00:08:59.390 --> 00:09:03.190 align:start position:0%
being rendered this is running on a
radeon<00:09:00.290><c> 9800</c><00:09:00.940><c> in</c><00:09:01.940><c> hardware</c><00:09:02.420><c> so</c><00:09:03.050><c> it's</c>

00:09:03.190 --> 00:09:03.200 align:start position:0%
radeon 9800 in hardware so it's
 

00:09:03.200 --> 00:09:04.720 align:start position:0%
radeon 9800 in hardware so it's
obviously<00:09:03.560><c> you</c><00:09:03.800><c> know</c><00:09:03.890><c> it's</c><00:09:04.280><c> pretty</c><00:09:04.430><c> quick</c>

00:09:04.720 --> 00:09:04.730 align:start position:0%
obviously you know it's pretty quick
 

00:09:04.730 --> 00:09:09.060 align:start position:0%
obviously you know it's pretty quick
here<00:09:05.000><c> and</c><00:09:05.690><c> if</c><00:09:05.900><c> i</c><00:09:05.990><c> can</c><00:09:06.260><c> move</c><00:09:06.530><c> the</c><00:09:06.680><c> light</c><00:09:06.830><c> around</c>

00:09:09.060 --> 00:09:09.070 align:start position:0%
here and if i can move the light around
 

00:09:09.070 --> 00:09:13.450 align:start position:0%
here and if i can move the light around
like<00:09:10.070><c> this</c><00:09:11.530><c> now</c><00:09:12.530><c> if</c><00:09:12.860><c> we</c><00:09:12.890><c> click</c><00:09:13.160><c> this</c><00:09:13.280><c> button</c>

00:09:13.450 --> 00:09:13.460 align:start position:0%
like this now if we click this button
 

00:09:13.460 --> 00:09:16.720 align:start position:0%
like this now if we click this button
here<00:09:13.640><c> you</c><00:09:14.450><c> can</c><00:09:14.660><c> see</c><00:09:15.190><c> now</c><00:09:16.190><c> we're</c><00:09:16.430><c> running</c><00:09:16.520><c> in</c>

00:09:16.720 --> 00:09:16.730 align:start position:0%
here you can see now we're running in
 

00:09:16.730 --> 00:09:19.390 align:start position:0%
here you can see now we're running in
software<00:09:17.530><c> this</c><00:09:18.530><c> is</c><00:09:18.680><c> a</c><00:09:18.710><c> fragment</c><00:09:19.130><c> program</c>

00:09:19.390 --> 00:09:19.400 align:start position:0%
software this is a fragment program
 

00:09:19.400 --> 00:09:20.920 align:start position:0%
software this is a fragment program
running<00:09:19.610><c> in</c><00:09:19.730><c> software</c><00:09:20.060><c> not</c><00:09:20.300><c> yet</c><00:09:20.540><c> it's</c>

00:09:20.920 --> 00:09:20.930 align:start position:0%
running in software not yet it's
 

00:09:20.930 --> 00:09:26.920 align:start position:0%
running in software not yet it's
obviously<00:09:21.260><c> slower</c><00:09:21.590><c> but</c><00:09:22.250><c> it's</c><00:09:22.430><c> not</c><00:09:22.550><c> bad</c><00:09:25.930><c> so</c>

00:09:26.920 --> 00:09:26.930 align:start position:0%
obviously slower but it's not bad so
 

00:09:26.930 --> 00:09:28.990 align:start position:0%
obviously slower but it's not bad so
that's<00:09:27.920><c> an</c><00:09:28.040><c> example</c><00:09:28.130><c> of</c><00:09:28.520><c> our</c><00:09:28.670><c> software</c>

00:09:28.990 --> 00:09:29.000 align:start position:0%
that's an example of our software
 

00:09:29.000 --> 00:09:33.970 align:start position:0%
that's an example of our software
renderer<00:09:29.360><c> right</c><00:09:29.660><c> there</c><00:09:32.470><c> so</c><00:09:33.470><c> let's</c><00:09:33.680><c> just</c><00:09:33.860><c> take</c>

00:09:33.970 --> 00:09:33.980 align:start position:0%
renderer right there so let's just take
 

00:09:33.980 --> 00:09:36.550 align:start position:0%
renderer right there so let's just take
another<00:09:34.220><c> look</c><00:09:34.400><c> at</c><00:09:34.550><c> another</c><00:09:34.820><c> example</c><00:09:34.940><c> of</c><00:09:35.930><c> this</c>

00:09:36.550 --> 00:09:36.560 align:start position:0%
another look at another example of this
 

00:09:36.560 --> 00:09:49.440 align:start position:0%
another look at another example of this
in<00:09:36.740><c> action</c><00:09:39.580><c> see</c><00:09:40.580><c> here</c>

00:09:49.440 --> 00:09:49.450 align:start position:0%
 
 

00:09:49.450 --> 00:09:51.850 align:start position:0%
 
this<00:09:50.450><c> is</c><00:09:50.600><c> another</c><00:09:50.810><c> one</c><00:09:50.900><c> that</c><00:09:51.080><c> if</c><00:09:51.320><c> there's</c><00:09:51.740><c> any</c>

00:09:51.850 --> 00:09:51.860 align:start position:0%
this is another one that if there's any
 

00:09:51.860 --> 00:09:53.410 align:start position:0%
this is another one that if there's any
medical<00:09:52.550><c> imaging</c><00:09:52.910><c> folks</c><00:09:53.150><c> in</c><00:09:53.300><c> the</c><00:09:53.390><c> audience</c>

00:09:53.410 --> 00:09:53.420 align:start position:0%
medical imaging folks in the audience
 

00:09:53.420 --> 00:09:55.150 align:start position:0%
medical imaging folks in the audience
they<00:09:53.900><c> might</c><00:09:54.080><c> find</c><00:09:54.320><c> this</c><00:09:54.470><c> somewhat</c>

00:09:55.150 --> 00:09:55.160 align:start position:0%
they might find this somewhat
 

00:09:55.160 --> 00:10:01.240 align:start position:0%
they might find this somewhat
interesting<00:09:56.740><c> it's</c><00:09:57.740><c> a</c><00:09:58.270><c> it's</c><00:09:59.270><c> a</c><00:09:59.950><c> shader</c><00:10:00.950><c> that's</c>

00:10:01.240 --> 00:10:01.250 align:start position:0%
interesting it's a it's a shader that's
 

00:10:01.250 --> 00:10:04.210 align:start position:0%
interesting it's a it's a shader that's
basically<00:10:01.610><c> I</c><00:10:01.940><c> have</c><00:10:02.360><c> a</c><00:10:02.540><c> 2d</c><00:10:03.380><c> texture</c><00:10:03.830><c> which</c><00:10:04.010><c> is</c>

00:10:04.210 --> 00:10:04.220 align:start position:0%
basically I have a 2d texture which is
 

00:10:04.220 --> 00:10:08.560 align:start position:0%
basically I have a 2d texture which is
just<00:10:04.850><c> a</c><00:10:05.110><c> slice</c><00:10:06.110><c> of</c><00:10:06.140><c> an</c><00:10:06.440><c> MRI</c><00:10:06.710><c> scan</c><00:10:07.160><c> and</c><00:10:07.570><c> one</c>

00:10:08.560 --> 00:10:08.570 align:start position:0%
just a slice of an MRI scan and one
 

00:10:08.570 --> 00:10:09.550 align:start position:0%
just a slice of an MRI scan and one
thing<00:10:08.750><c> that</c><00:10:08.780><c> I</c><00:10:08.930><c> thought</c><00:10:09.080><c> would</c><00:10:09.200><c> be</c><00:10:09.260><c> kind</c><00:10:09.530><c> of</c>

00:10:09.550 --> 00:10:09.560 align:start position:0%
thing that I thought would be kind of
 

00:10:09.560 --> 00:10:12.850 align:start position:0%
thing that I thought would be kind of
fun<00:10:09.770><c> to</c><00:10:09.800><c> do</c><00:10:10.010><c> with</c><00:10:10.190><c> that</c><00:10:10.370><c> is</c><00:10:11.440><c> if</c><00:10:12.440><c> we</c><00:10:12.530><c> take</c><00:10:12.650><c> a</c><00:10:12.710><c> look</c>

00:10:12.850 --> 00:10:12.860 align:start position:0%
fun to do with that is if we take a look
 

00:10:12.860 --> 00:10:15.490 align:start position:0%
fun to do with that is if we take a look
at<00:10:12.950><c> the</c><00:10:13.070><c> texture</c><00:10:13.370><c> units</c><00:10:13.580><c> here</c><00:10:14.000><c> in</c><00:10:14.350><c> one</c><00:10:15.350><c> of</c><00:10:15.380><c> the</c>

00:10:15.490 --> 00:10:15.500 align:start position:0%
at the texture units here in one of the
 

00:10:15.500 --> 00:10:17.140 align:start position:0%
at the texture units here in one of the
text<00:10:15.770><c> units</c><00:10:16.010><c> I've</c><00:10:16.100><c> got</c><00:10:16.250><c> the</c><00:10:16.370><c> slice</c><00:10:16.610><c> of</c><00:10:16.790><c> the</c><00:10:16.910><c> MRI</c>

00:10:17.140 --> 00:10:17.150 align:start position:0%
text units I've got the slice of the MRI
 

00:10:17.150 --> 00:10:19.270 align:start position:0%
text units I've got the slice of the MRI
scan<00:10:17.570><c> and</c><00:10:17.870><c> in</c><00:10:18.020><c> another</c><00:10:18.260><c> one</c><00:10:18.530><c> I</c><00:10:18.770><c> have</c><00:10:19.250><c> a</c>

00:10:19.270 --> 00:10:19.280 align:start position:0%
scan and in another one I have a
 

00:10:19.280 --> 00:10:21.700 align:start position:0%
scan and in another one I have a
one-dimensional<00:10:20.270><c> texture</c><00:10:20.720><c> it</c><00:10:20.930><c> it</c><00:10:21.230><c> pixels</c>

00:10:21.700 --> 00:10:21.710 align:start position:0%
one-dimensional texture it it pixels
 

00:10:21.710 --> 00:10:24.580 align:start position:0%
one-dimensional texture it it pixels
wide<00:10:21.890><c> and</c><00:10:21.950><c> one</c><00:10:22.370><c> tall</c><00:10:22.700><c> and</c><00:10:23.240><c> it's</c><00:10:23.450><c> just</c><00:10:23.660><c> a</c><00:10:23.810><c> color</c>

00:10:24.580 --> 00:10:24.590 align:start position:0%
wide and one tall and it's just a color
 

00:10:24.590 --> 00:10:26.410 align:start position:0%
wide and one tall and it's just a color
spectrum<00:10:24.890><c> and</c><00:10:25.700><c> I</c><00:10:25.850><c> thought</c><00:10:26.000><c> it'd</c><00:10:26.120><c> be</c><00:10:26.150><c> kind</c><00:10:26.360><c> of</c>

00:10:26.410 --> 00:10:26.420 align:start position:0%
spectrum and I thought it'd be kind of
 

00:10:26.420 --> 00:10:28.240 align:start position:0%
spectrum and I thought it'd be kind of
interesting<00:10:26.600><c> to</c><00:10:26.840><c> write</c><00:10:27.110><c> a</c><00:10:27.170><c> shader</c><00:10:27.500><c> that</c>

00:10:28.240 --> 00:10:28.250 align:start position:0%
interesting to write a shader that
 

00:10:28.250 --> 00:10:32.590 align:start position:0%
interesting to write a shader that
allows<00:10:29.210><c> you</c><00:10:29.480><c> to</c><00:10:29.600><c> basically</c><00:10:30.850><c> do</c><00:10:31.850><c> a</c><00:10:31.880><c> skill</c><00:10:32.390><c> and</c>

00:10:32.590 --> 00:10:32.600 align:start position:0%
allows you to basically do a skill and
 

00:10:32.600 --> 00:10:34.690 align:start position:0%
allows you to basically do a skill and
bias<00:10:32.810><c> on</c><00:10:33.140><c> a</c><00:10:33.200><c> minimum</c><00:10:33.590><c> maximum</c><00:10:33.830><c> clamp</c><00:10:34.430><c> on</c><00:10:34.640><c> the</c>

00:10:34.690 --> 00:10:34.700 align:start position:0%
bias on a minimum maximum clamp on the
 

00:10:34.700 --> 00:10:39.000 align:start position:0%
bias on a minimum maximum clamp on the
luminance<00:10:35.180><c> values</c><00:10:35.600><c> here</c><00:10:35.870><c> and</c><00:10:36.020><c> then</c><00:10:36.680><c> basically</c>

00:10:39.000 --> 00:10:39.010 align:start position:0%
luminance values here and then basically
 

00:10:39.010 --> 00:10:41.800 align:start position:0%
luminance values here and then basically
quantize<00:10:40.010><c> it</c><00:10:40.040><c> and</c><00:10:40.370><c> pick</c><00:10:40.520><c> out</c><00:10:40.640><c> bands</c><00:10:41.180><c> from</c><00:10:41.570><c> the</c>

00:10:41.800 --> 00:10:41.810 align:start position:0%
quantize it and pick out bands from the
 

00:10:41.810 --> 00:10:45.940 align:start position:0%
quantize it and pick out bands from the
from<00:10:42.110><c> the</c><00:10:42.140><c> spectrum</c><00:10:42.710><c> so</c><00:10:43.580><c> I</c><00:10:44.290><c> just</c><00:10:45.290><c> I</c><00:10:45.500><c> guess</c><00:10:45.800><c> I've</c>

00:10:45.940 --> 00:10:45.950 align:start position:0%
from the spectrum so I just I guess I've
 

00:10:45.950 --> 00:10:47.770 align:start position:0%
from the spectrum so I just I guess I've
commented<00:10:46.370><c> out</c><00:10:46.700><c> some</c><00:10:46.970><c> lines</c><00:10:47.120><c> of</c><00:10:47.420><c> this</c><00:10:47.570><c> shader</c>

00:10:47.770 --> 00:10:47.780 align:start position:0%
commented out some lines of this shader
 

00:10:47.780 --> 00:10:50.160 align:start position:0%
commented out some lines of this shader
code<00:10:48.020><c> here</c><00:10:48.320><c> but</c><00:10:48.470><c> if</c><00:10:48.560><c> I</c><00:10:48.680><c> start</c><00:10:49.100><c> to</c><00:10:49.250><c> bring</c><00:10:49.430><c> it</c><00:10:49.550><c> in</c>

00:10:50.160 --> 00:10:50.170 align:start position:0%
code here but if I start to bring it in
 

00:10:50.170 --> 00:10:52.660 align:start position:0%
code here but if I start to bring it in
you<00:10:51.170><c> can</c><00:10:51.320><c> see</c><00:10:51.500><c> there</c><00:10:51.710><c> it's</c><00:10:51.860><c> it's</c><00:10:52.160><c> it's</c>

00:10:52.660 --> 00:10:52.670 align:start position:0%
you can see there it's it's it's
 

00:10:52.670 --> 00:10:54.520 align:start position:0%
you can see there it's it's it's
basically<00:10:53.240><c> it's</c><00:10:53.450><c> mapped</c><00:10:53.660><c> the</c><00:10:53.810><c> spectrum</c><00:10:54.290><c> onto</c>

00:10:54.520 --> 00:10:54.530 align:start position:0%
basically it's mapped the spectrum onto
 

00:10:54.530 --> 00:10:56.410 align:start position:0%
basically it's mapped the spectrum onto
that<00:10:54.680><c> and</c><00:10:54.920><c> that's</c><00:10:55.370><c> I</c><00:10:55.520><c> I'm</c><00:10:55.850><c> calm</c><00:10:56.090><c> at</c><00:10:56.120><c> these</c>

00:10:56.410 --> 00:10:56.420 align:start position:0%
that and that's I I'm calm at these
 

00:10:56.420 --> 00:10:59.710 align:start position:0%
that and that's I I'm calm at these
lines<00:10:57.100><c> I've</c><00:10:58.100><c> basically</c><00:10:58.370><c> got</c><00:10:58.760><c> control</c><00:10:59.540><c> of</c>

00:10:59.710 --> 00:10:59.720 align:start position:0%
lines I've basically got control of
 

00:10:59.720 --> 00:11:02.860 align:start position:0%
lines I've basically got control of
these<00:10:59.840><c> parameters</c><00:11:00.760><c> so</c><00:11:01.760><c> I</c><00:11:02.150><c> can</c><00:11:02.420><c> do</c><00:11:02.480><c> this</c><00:11:02.600><c> kind</c>

00:11:02.860 --> 00:11:02.870 align:start position:0%
these parameters so I can do this kind
 

00:11:02.870 --> 00:11:06.150 align:start position:0%
these parameters so I can do this kind
of<00:11:02.930><c> thing</c><00:11:02.990><c> and</c><00:11:03.320><c> you</c><00:11:03.950><c> know</c><00:11:04.010><c> it's</c><00:11:04.310><c> pretty</c><00:11:04.490><c> quick</c>

00:11:06.150 --> 00:11:06.160 align:start position:0%
of thing and you know it's pretty quick
 

00:11:06.160 --> 00:11:09.130 align:start position:0%
of thing and you know it's pretty quick
kind<00:11:07.160><c> of</c><00:11:07.220><c> neat</c><00:11:07.570><c> but</c><00:11:08.570><c> if</c><00:11:08.660><c> I</c><00:11:08.750><c> switch</c><00:11:08.960><c> the</c>

00:11:09.130 --> 00:11:09.140 align:start position:0%
kind of neat but if I switch the
 

00:11:09.140 --> 00:11:10.660 align:start position:0%
kind of neat but if I switch the
software<00:11:09.530><c> renderer</c><00:11:09.830><c> is</c><00:11:10.040><c> just</c><00:11:10.490><c> another</c>

00:11:10.660 --> 00:11:10.670 align:start position:0%
software renderer is just another
 

00:11:10.670 --> 00:11:12.370 align:start position:0%
software renderer is just another
example<00:11:10.760><c> of</c><00:11:11.300><c> it</c><00:11:11.450><c> you</c><00:11:11.750><c> can</c><00:11:11.900><c> see</c><00:11:12.050><c> that</c><00:11:12.080><c> you</c><00:11:12.350><c> know</c>

00:11:12.370 --> 00:11:12.380 align:start position:0%
example of it you can see that you know
 

00:11:12.380 --> 00:11:16.800 align:start position:0%
example of it you can see that you know
it's<00:11:12.770><c> still</c><00:11:13.010><c> it</c><00:11:13.370><c> still</c><00:11:13.670><c> runs</c><00:11:13.880><c> pretty</c><00:11:14.000><c> well</c><00:11:15.670><c> so</c>

00:11:16.800 --> 00:11:16.810 align:start position:0%
it's still it still runs pretty well so
 

00:11:16.810 --> 00:11:19.030 align:start position:0%
it's still it still runs pretty well so
that's<00:11:17.810><c> just</c><00:11:17.960><c> an</c><00:11:18.110><c> example</c><00:11:18.170><c> of</c><00:11:18.530><c> our</c><00:11:18.710><c> software</c>

00:11:19.030 --> 00:11:19.040 align:start position:0%
that's just an example of our software
 

00:11:19.040 --> 00:11:21.940 align:start position:0%
that's just an example of our software
renderer<00:11:19.690><c> that's</c><00:11:20.690><c> in</c><00:11:20.870><c> there</c><00:11:21.050><c> right</c><00:11:21.230><c> now</c><00:11:21.410><c> so</c>

00:11:21.940 --> 00:11:21.950 align:start position:0%
renderer that's in there right now so
 

00:11:21.950 --> 00:11:23.770 align:start position:0%
renderer that's in there right now so
this<00:11:22.610><c> will</c><00:11:22.790><c> become</c><00:11:22.880><c> increasingly</c><00:11:23.330><c> more</c>

00:11:23.770 --> 00:11:23.780 align:start position:0%
this will become increasingly more
 

00:11:23.780 --> 00:11:25.210 align:start position:0%
this will become increasingly more
useful<00:11:24.200><c> as</c><00:11:24.380><c> people</c><00:11:24.710><c> start</c><00:11:24.920><c> to</c><00:11:24.980><c> use</c><00:11:25.070><c> the</c>

00:11:25.210 --> 00:11:25.220 align:start position:0%
useful as people start to use the
 

00:11:25.220 --> 00:11:26.710 align:start position:0%
useful as people start to use the
shading<00:11:25.520><c> language</c><00:11:25.640><c> and</c><00:11:26.000><c> as</c><00:11:26.090><c> we</c><00:11:26.240><c> start</c><00:11:26.480><c> to</c><00:11:26.510><c> get</c>

00:11:26.710 --> 00:11:26.720 align:start position:0%
shading language and as we start to get
 

00:11:26.720 --> 00:11:30.400 align:start position:0%
shading language and as we start to get
the<00:11:26.900><c> get</c><00:11:27.290><c> the</c><00:11:27.320><c> whole</c><00:11:27.530><c> thing</c><00:11:27.560><c> tied</c><00:11:27.860><c> up</c><00:11:29.200><c> so</c><00:11:30.200><c> let's</c>

00:11:30.400 --> 00:11:30.410 align:start position:0%
the get the whole thing tied up so let's
 

00:11:30.410 --> 00:11:31.510 align:start position:0%
the get the whole thing tied up so let's
just<00:11:30.590><c> really</c><00:11:30.770><c> go</c><00:11:30.860><c> through</c><00:11:30.980><c> what</c><00:11:31.340><c> you're</c><00:11:31.460><c> going</c>

00:11:31.510 --> 00:11:31.520 align:start position:0%
just really go through what you're going
 

00:11:31.520 --> 00:11:37.750 align:start position:0%
just really go through what you're going
to<00:11:31.760><c> learn</c><00:11:31.790><c> today</c><00:11:34.510><c> what</c><00:11:35.510><c> is</c><00:11:35.630><c> a</c><00:11:35.660><c> shader</c><00:11:36.760><c> we'll</c>

00:11:37.750 --> 00:11:37.760 align:start position:0%
to learn today what is a shader we'll
 

00:11:37.760 --> 00:11:39.160 align:start position:0%
to learn today what is a shader we'll
talk<00:11:37.970><c> about</c><00:11:38.120><c> specifically</c><00:11:38.870><c> what</c><00:11:39.050><c> the</c>

00:11:39.160 --> 00:11:39.170 align:start position:0%
talk about specifically what the
 

00:11:39.170 --> 00:11:41.260 align:start position:0%
talk about specifically what the
definition<00:11:39.320><c> of</c><00:11:39.740><c> that</c><00:11:39.920><c> is</c><00:11:40.130><c> we'll</c><00:11:40.910><c> look</c><00:11:41.090><c> at</c>

00:11:41.260 --> 00:11:41.270 align:start position:0%
definition of that is we'll look at
 

00:11:41.270 --> 00:11:43.110 align:start position:0%
definition of that is we'll look at
where<00:11:41.720><c> they</c><00:11:41.870><c> fit</c><00:11:42.080><c> in</c><00:11:42.110><c> the</c><00:11:42.230><c> OpenGL</c><00:11:42.710><c> pipeline</c>

00:11:43.110 --> 00:11:43.120 align:start position:0%
where they fit in the OpenGL pipeline
 

00:11:43.120 --> 00:11:45.670 align:start position:0%
where they fit in the OpenGL pipeline
and<00:11:44.120><c> I'll</c><00:11:44.510><c> go</c><00:11:44.630><c> through</c><00:11:44.810><c> some</c><00:11:44.990><c> terminology</c>

00:11:45.670 --> 00:11:45.680 align:start position:0%
and I'll go through some terminology
 

00:11:45.680 --> 00:11:47.860 align:start position:0%
and I'll go through some terminology
which<00:11:45.830><c> will</c><00:11:46.100><c> help</c><00:11:46.550><c> as</c><00:11:46.820><c> I</c><00:11:47.120><c> continue</c><00:11:47.690><c> through</c>

00:11:47.860 --> 00:11:47.870 align:start position:0%
which will help as I continue through
 

00:11:47.870 --> 00:11:50.920 align:start position:0%
which will help as I continue through
the<00:11:47.900><c> presentation</c><00:11:49.630><c> we'll</c><00:11:50.630><c> look</c><00:11:50.780><c> at</c><00:11:50.900><c> how</c>

00:11:50.920 --> 00:11:50.930 align:start position:0%
the presentation we'll look at how
 

00:11:50.930 --> 00:11:52.510 align:start position:0%
the presentation we'll look at how
shaders<00:11:51.380><c> are</c><00:11:51.410><c> currently</c><00:11:51.830><c> expressed</c><00:11:52.340><c> the</c>

00:11:52.510 --> 00:11:52.520 align:start position:0%
shaders are currently expressed the
 

00:11:52.520 --> 00:11:54.490 align:start position:0%
shaders are currently expressed the
current<00:11:52.850><c> languages</c><00:11:53.330><c> lots</c><00:11:53.810><c> been</c><00:11:53.990><c> too</c><00:11:54.140><c> long</c><00:11:54.290><c> on</c>

00:11:54.490 --> 00:11:54.500 align:start position:0%
current languages lots been too long on
 

00:11:54.500 --> 00:11:57.760 align:start position:0%
current languages lots been too long on
that<00:11:54.530><c> and</c><00:11:54.890><c> then</c><00:11:55.730><c> discussed</c><00:11:56.720><c> it</c><00:11:56.870><c> again</c><00:11:57.410><c> why</c><00:11:57.740><c> a</c>

00:11:57.760 --> 00:11:57.770 align:start position:0%
that and then discussed it again why a
 

00:11:57.770 --> 00:12:01.120 align:start position:0%
that and then discussed it again why a
high<00:11:57.980><c> level</c><00:11:58.310><c> language</c><00:11:58.640><c> is</c><00:11:58.760><c> needed</c><00:11:59.089><c> and</c><00:12:00.130><c> then</c>

00:12:01.120 --> 00:12:01.130 align:start position:0%
high level language is needed and then
 

00:12:01.130 --> 00:12:02.770 align:start position:0%
high level language is needed and then
we'll<00:12:01.310><c> go</c><00:12:01.430><c> into</c><00:12:01.490><c> the</c><00:12:01.880><c> language</c><00:12:02.030><c> itself</c>

00:12:02.770 --> 00:12:02.780 align:start position:0%
we'll go into the language itself
 

00:12:02.780 --> 00:12:04.300 align:start position:0%
we'll go into the language itself
get<00:12:02.870><c> the</c><00:12:02.960><c> specifics</c><00:12:03.170><c> what</c><00:12:03.680><c> you</c><00:12:03.830><c> can</c><00:12:03.980><c> expect</c>

00:12:04.300 --> 00:12:04.310 align:start position:0%
get the specifics what you can expect
 

00:12:04.310 --> 00:12:06.450 align:start position:0%
get the specifics what you can expect
when<00:12:04.430><c> you</c><00:12:04.610><c> start</c><00:12:04.850><c> to</c><00:12:04.940><c> program</c><00:12:05.300><c> this</c><00:12:05.480><c> language</c>

00:12:06.450 --> 00:12:06.460 align:start position:0%
when you start to program this language
 

00:12:06.460 --> 00:12:10.360 align:start position:0%
when you start to program this language
so<00:12:07.460><c> first</c><00:12:08.270><c> of</c><00:12:08.420><c> all</c><00:12:08.570><c> what</c><00:12:09.410><c> is</c><00:12:09.560><c> the</c><00:12:09.650><c> shader</c><00:12:09.890><c> well</c>

00:12:10.360 --> 00:12:10.370 align:start position:0%
so first of all what is the shader well
 

00:12:10.370 --> 00:12:12.360 align:start position:0%
so first of all what is the shader well
there's<00:12:11.120><c> a</c><00:12:11.180><c> couple</c><00:12:11.300><c> of</c><00:12:11.450><c> things</c><00:12:11.510><c> really</c>

00:12:12.360 --> 00:12:12.370 align:start position:0%
there's a couple of things really
 

00:12:12.370 --> 00:12:14.950 align:start position:0%
there's a couple of things really
there's<00:12:13.370><c> a</c><00:12:13.460><c> program</c><00:12:13.790><c> and</c><00:12:14.540><c> this</c><00:12:14.600><c> is</c><00:12:14.750><c> in</c><00:12:14.870><c> the</c>

00:12:14.950 --> 00:12:14.960 align:start position:0%
there's a program and this is in the
 

00:12:14.960 --> 00:12:16.630 align:start position:0%
there's a program and this is in the
terminology<00:12:15.590><c> of</c><00:12:15.620><c> the</c><00:12:15.830><c> high-level</c><00:12:16.220><c> shading</c>

00:12:16.630 --> 00:12:16.640 align:start position:0%
terminology of the high-level shading
 

00:12:16.640 --> 00:12:19.930 align:start position:0%
terminology of the high-level shading
language<00:12:17.770><c> there's</c><00:12:18.770><c> a</c><00:12:18.830><c> program</c><00:12:19.040><c> object</c><00:12:19.700><c> and</c>

00:12:19.930 --> 00:12:19.940 align:start position:0%
language there's a program object and
 

00:12:19.940 --> 00:12:22.210 align:start position:0%
language there's a program object and
inside<00:12:20.600><c> a</c><00:12:20.630><c> program</c><00:12:21.110><c> object</c><00:12:21.560><c> you</c><00:12:21.830><c> have</c><00:12:21.860><c> a</c>

00:12:22.210 --> 00:12:22.220 align:start position:0%
inside a program object you have a
 

00:12:22.220 --> 00:12:26.760 align:start position:0%
inside a program object you have a
vertex<00:12:22.580><c> shader</c><00:12:22.880><c> and</c><00:12:23.210><c> a</c><00:12:23.420><c> fragment</c><00:12:23.840><c> shader</c><00:12:25.390><c> the</c>

00:12:26.760 --> 00:12:26.770 align:start position:0%
vertex shader and a fragment shader the
 

00:12:26.770 --> 00:12:31.150 align:start position:0%
vertex shader and a fragment shader the
the<00:12:27.770><c> intent</c><00:12:28.610><c> of</c><00:12:28.670><c> a</c><00:12:29.090><c> vertex</c><00:12:29.390><c> shader</c><00:12:29.690><c> is</c><00:12:30.040><c> that</c><00:12:31.040><c> it</c>

00:12:31.150 --> 00:12:31.160 align:start position:0%
the intent of a vertex shader is that it
 

00:12:31.160 --> 00:12:33.460 align:start position:0%
the intent of a vertex shader is that it
generates<00:12:31.700><c> a</c><00:12:31.910><c> transform</c><00:12:32.480><c> vertex</c><00:12:32.870><c> with</c><00:12:33.260><c> an</c>

00:12:33.460 --> 00:12:33.470 align:start position:0%
generates a transform vertex with an
 

00:12:33.470 --> 00:12:35.920 align:start position:0%
generates a transform vertex with an
untransformed<00:12:34.340><c> vertex</c><00:12:34.820><c> and</c><00:12:34.970><c> opengl</c><00:12:35.450><c> state</c><00:12:35.720><c> as</c>

00:12:35.920 --> 00:12:35.930 align:start position:0%
untransformed vertex and opengl state as
 

00:12:35.930 --> 00:12:38.560 align:start position:0%
untransformed vertex and opengl state as
inputs<00:12:36.440><c> that's</c><00:12:36.920><c> its</c><00:12:37.130><c> goal</c><00:12:37.370><c> takes</c><00:12:38.090><c> vertices</c>

00:12:38.560 --> 00:12:38.570 align:start position:0%
inputs that's its goal takes vertices
 

00:12:38.570 --> 00:12:39.490 align:start position:0%
inputs that's its goal takes vertices
have<00:12:38.750><c> been</c><00:12:38.870><c> submitted</c><00:12:39.260><c> from</c><00:12:39.350><c> your</c>

00:12:39.490 --> 00:12:39.500 align:start position:0%
have been submitted from your
 

00:12:39.500 --> 00:12:42.130 align:start position:0%
have been submitted from your
application<00:12:40.070><c> and</c><00:12:40.270><c> perform</c><00:12:41.270><c> some</c><00:12:41.510><c> operation</c>

00:12:42.130 --> 00:12:42.140 align:start position:0%
application and perform some operation
 

00:12:42.140 --> 00:12:44.020 align:start position:0%
application and perform some operation
to<00:12:42.620><c> put</c><00:12:42.830><c> them</c><00:12:43.010><c> into</c><00:12:43.160><c> wind</c><00:12:43.430><c> into</c><00:12:43.790><c> winter</c>

00:12:44.020 --> 00:12:44.030 align:start position:0%
to put them into wind into winter
 

00:12:44.030 --> 00:12:49.360 align:start position:0%
to put them into wind into winter
coordinate<00:12:44.830><c> a</c><00:12:46.240><c> fragment</c><00:12:47.240><c> shader</c><00:12:47.480><c> eda</c><00:12:48.410><c> it's</c>

00:12:49.360 --> 00:12:49.370 align:start position:0%
coordinate a fragment shader eda it's
 

00:12:49.370 --> 00:12:51.490 align:start position:0%
coordinate a fragment shader eda it's
kind<00:12:49.850><c> of</c><00:12:49.910><c> similar</c><00:12:50.210><c> except</c><00:12:50.930><c> it's</c><00:12:51.110><c> dealing</c><00:12:51.290><c> with</c>

00:12:51.490 --> 00:12:51.500 align:start position:0%
kind of similar except it's dealing with
 

00:12:51.500 --> 00:12:54.520 align:start position:0%
kind of similar except it's dealing with
with<00:12:51.830><c> pixels</c><00:12:52.280><c> it</c><00:12:53.270><c> generates</c><00:12:53.810><c> a</c><00:12:53.960><c> pixel</c><00:12:54.320><c> on</c><00:12:54.500><c> the</c>

00:12:54.520 --> 00:12:54.530 align:start position:0%
with pixels it generates a pixel on the
 

00:12:54.530 --> 00:12:58.300 align:start position:0%
with pixels it generates a pixel on the
frame<00:12:54.890><c> buffer</c><00:12:55.690><c> with</c><00:12:56.690><c> the</c><00:12:57.470><c> vertex</c><00:12:57.830><c> attribute</c>

00:12:58.300 --> 00:12:58.310 align:start position:0%
frame buffer with the vertex attribute
 

00:12:58.310 --> 00:13:01.240 align:start position:0%
frame buffer with the vertex attribute
interpolated<00:12:59.150><c> across</c><00:12:59.540><c> the</c><00:12:59.720><c> scanline</c><00:13:00.250><c> passed</c>

00:13:01.240 --> 00:13:01.250 align:start position:0%
interpolated across the scanline passed
 

00:13:01.250 --> 00:13:03.640 align:start position:0%
interpolated across the scanline passed
into<00:13:01.490><c> it</c><00:13:01.700><c> and</c><00:13:01.880><c> also</c><00:13:02.390><c> it</c><00:13:02.600><c> has</c><00:13:02.720><c> access</c><00:13:03.080><c> to</c><00:13:03.200><c> opengl</c>

00:13:03.640 --> 00:13:03.650 align:start position:0%
into it and also it has access to opengl
 

00:13:03.650 --> 00:13:05.860 align:start position:0%
into it and also it has access to opengl
state<00:13:03.890><c> and</c><00:13:04.160><c> obviously</c><00:13:05.090><c> it</c><00:13:05.270><c> can</c><00:13:05.420><c> sample</c><00:13:05.630><c> from</c>

00:13:05.860 --> 00:13:05.870 align:start position:0%
state and obviously it can sample from
 

00:13:05.870 --> 00:13:09.460 align:start position:0%
state and obviously it can sample from
the<00:13:05.960><c> texture</c><00:13:06.320><c> unit</c><00:13:07.930><c> where</c><00:13:08.930><c> do</c><00:13:09.020><c> they</c><00:13:09.140><c> fit</c><00:13:09.350><c> in</c>

00:13:09.460 --> 00:13:09.470 align:start position:0%
the texture unit where do they fit in
 

00:13:09.470 --> 00:13:13.780 align:start position:0%
the texture unit where do they fit in
the<00:13:09.560><c> pipeline</c><00:13:09.770><c> so</c><00:13:11.020><c> let's</c><00:13:12.020><c> look</c><00:13:12.170><c> at</c><00:13:12.320><c> that</c><00:13:12.790><c> you</c>

00:13:13.780 --> 00:13:13.790 align:start position:0%
the pipeline so let's look at that you
 

00:13:13.790 --> 00:13:15.340 align:start position:0%
the pipeline so let's look at that you
have<00:13:13.940><c> your</c><00:13:14.060><c> vertex</c><00:13:14.420><c> data</c><00:13:14.690><c> coming</c><00:13:15.050><c> from</c><00:13:15.170><c> your</c>

00:13:15.340 --> 00:13:15.350 align:start position:0%
have your vertex data coming from your
 

00:13:15.350 --> 00:13:16.780 align:start position:0%
have your vertex data coming from your
application<00:13:15.980><c> and</c><00:13:16.100><c> then</c><00:13:16.160><c> you</c><00:13:16.280><c> have</c><00:13:16.430><c> pick</c><00:13:16.640><c> em</c>

00:13:16.780 --> 00:13:16.790 align:start position:0%
application and then you have pick em
 

00:13:16.790 --> 00:13:18.640 align:start position:0%
application and then you have pick em
the<00:13:17.030><c> pixel</c><00:13:17.390><c> data</c><00:13:17.540><c> handed</c><00:13:17.990><c> in</c><00:13:18.110><c> through</c><00:13:18.560><c> your</c>

00:13:18.640 --> 00:13:18.650 align:start position:0%
the pixel data handed in through your
 

00:13:18.650 --> 00:13:21.220 align:start position:0%
the pixel data handed in through your
text<00:13:18.920><c> image</c><00:13:19.160><c> called</c><00:13:19.430><c> or</c><00:13:20.060><c> whatever</c><00:13:20.420><c> and</c><00:13:20.750><c> also</c>

00:13:21.220 --> 00:13:21.230 align:start position:0%
text image called or whatever and also
 

00:13:21.230 --> 00:13:22.390 align:start position:0%
text image called or whatever and also
this<00:13:21.440><c> cano</c><00:13:21.740><c> loves</c><00:13:21.920><c> he</c><00:13:22.040><c> comes</c><00:13:22.250><c> from</c>

00:13:22.390 --> 00:13:22.400 align:start position:0%
this cano loves he comes from
 

00:13:22.400 --> 00:13:25.360 align:start position:0%
this cano loves he comes from
displaylist<00:13:23.770><c> normally</c><00:13:24.770><c> the</c><00:13:24.890><c> vertex</c><00:13:25.220><c> data</c>

00:13:25.360 --> 00:13:25.370 align:start position:0%
displaylist normally the vertex data
 

00:13:25.370 --> 00:13:27.610 align:start position:0%
displaylist normally the vertex data
gets<00:13:25.700><c> transport</c><00:13:26.330><c> get</c><00:13:26.540><c> through</c><00:13:27.290><c> a</c><00:13:27.350><c> fixed</c>

00:13:27.610 --> 00:13:27.620 align:start position:0%
gets transport get through a fixed
 

00:13:27.620 --> 00:13:30.760 align:start position:0%
gets transport get through a fixed
function<00:13:27.800><c> get</c><00:13:28.250><c> x</c><00:13:29.120><c> a</c><00:13:29.300><c> model</c><00:13:29.660><c> view</c><00:13:29.810><c> matrix</c><00:13:30.200><c> you</c>

00:13:30.760 --> 00:13:30.770 align:start position:0%
function get x a model view matrix you
 

00:13:30.770 --> 00:13:33.610 align:start position:0%
function get x a model view matrix you
get<00:13:31.040><c> transformed</c><00:13:31.490><c> and</c><00:13:31.930><c> it</c><00:13:32.930><c> gets</c><00:13:33.080><c> clipped</c><00:13:33.380><c> by</c>

00:13:33.610 --> 00:13:33.620 align:start position:0%
get transformed and it gets clipped by
 

00:13:33.620 --> 00:13:35.050 align:start position:0%
get transformed and it gets clipped by
the<00:13:33.680><c> clipping</c><00:13:34.100><c> plans</c><00:13:34.340><c> on</c><00:13:34.520><c> the</c><00:13:34.640><c> sides</c><00:13:34.850><c> of</c><00:13:35.000><c> the</c>

00:13:35.050 --> 00:13:35.060 align:start position:0%
the clipping plans on the sides of the
 

00:13:35.060 --> 00:13:36.790 align:start position:0%
the clipping plans on the sides of the
screen<00:13:35.240><c> or</c><00:13:35.450><c> even</c><00:13:35.690><c> user</c><00:13:35.990><c> clipping</c><00:13:36.380><c> plans</c><00:13:36.620><c> if</c>

00:13:36.790 --> 00:13:36.800 align:start position:0%
screen or even user clipping plans if
 

00:13:36.800 --> 00:13:39.370 align:start position:0%
screen or even user clipping plans if
you<00:13:36.890><c> have</c><00:13:37.070><c> any</c><00:13:37.280><c> and</c><00:13:38.000><c> also</c><00:13:38.480><c> the</c><00:13:38.720><c> vertex</c><00:13:39.080><c> color</c>

00:13:39.370 --> 00:13:39.380 align:start position:0%
you have any and also the vertex color
 

00:13:39.380 --> 00:13:43.270 align:start position:0%
you have any and also the vertex color
get<00:13:40.010><c> step</c><00:13:40.870><c> by</c><00:13:41.870><c> a</c><00:13:41.900><c> very</c><00:13:42.200><c> basic</c><00:13:42.410><c> lighting</c><00:13:42.800><c> model</c>

00:13:43.270 --> 00:13:43.280 align:start position:0%
get step by a very basic lighting model
 

00:13:43.280 --> 00:13:47.430 align:start position:0%
get step by a very basic lighting model
that's<00:13:43.490><c> built</c><00:13:43.730><c> into</c><00:13:43.880><c> opengl</c><00:13:45.310><c> and</c><00:13:46.420><c> then</c>

00:13:47.430 --> 00:13:47.440 align:start position:0%
that's built into opengl and then
 

00:13:47.440 --> 00:13:50.200 align:start position:0%
that's built into opengl and then
basically<00:13:48.440><c> you</c><00:13:48.980><c> end</c><00:13:49.460><c> up</c><00:13:49.640><c> with</c><00:13:49.790><c> a</c><00:13:49.850><c> bunch</c><00:13:50.060><c> of</c>

00:13:50.200 --> 00:13:50.210 align:start position:0%
basically you end up with a bunch of
 

00:13:50.210 --> 00:13:52.450 align:start position:0%
basically you end up with a bunch of
triangles<00:13:50.510><c> and</c><00:13:50.900><c> then</c><00:13:51.320><c> it</c><00:13:51.770><c> goes</c><00:13:51.950><c> down</c><00:13:52.010><c> to</c><00:13:52.340><c> the</c>

00:13:52.450 --> 00:13:52.460 align:start position:0%
triangles and then it goes down to the
 

00:13:52.460 --> 00:13:54.130 align:start position:0%
triangles and then it goes down to the
graphics<00:13:52.850><c> driver</c><00:13:53.120><c> or</c><00:13:53.360><c> the</c><00:13:53.390><c> software</c><00:13:53.660><c> renderer</c>

00:13:54.130 --> 00:13:54.140 align:start position:0%
graphics driver or the software renderer
 

00:13:54.140 --> 00:13:57.820 align:start position:0%
graphics driver or the software renderer
which<00:13:54.380><c> takes</c><00:13:54.650><c> those</c><00:13:54.800><c> triangles</c><00:13:55.250><c> and</c><00:13:56.830><c> breaks</c>

00:13:57.820 --> 00:13:57.830 align:start position:0%
which takes those triangles and breaks
 

00:13:57.830 --> 00:14:01.000 align:start position:0%
which takes those triangles and breaks
them<00:13:58.070><c> up</c><00:13:58.220><c> into</c><00:13:58.970><c> an</c><00:13:59.870><c> structure</c><00:14:00.380><c> p</c><00:14:00.530><c> zoids</c><00:14:00.770><c> for</c>

00:14:01.000 --> 00:14:01.010 align:start position:0%
them up into an structure p zoids for
 

00:14:01.010 --> 00:14:02.800 align:start position:0%
them up into an structure p zoids for
the<00:14:01.070><c> flat</c><00:14:01.310><c> top</c><00:14:01.550><c> and</c><00:14:01.790><c> bottom</c><00:14:02.090><c> and</c><00:14:02.240><c> go</c><00:14:02.570><c> through</c>

00:14:02.800 --> 00:14:02.810 align:start position:0%
the flat top and bottom and go through
 

00:14:02.810 --> 00:14:05.950 align:start position:0%
the flat top and bottom and go through
them<00:14:02.960><c> scanline</c><00:14:03.440><c> risk</c><00:14:03.650><c> online</c><00:14:03.860><c> and</c><00:14:04.960><c> basically</c>

00:14:05.950 --> 00:14:05.960 align:start position:0%
them scanline risk online and basically
 

00:14:05.960 --> 00:14:07.510 align:start position:0%
them scanline risk online and basically
stamps<00:14:06.590><c> these</c><00:14:06.710><c> pixels</c><00:14:06.980><c> into</c><00:14:07.190><c> the</c><00:14:07.340><c> frame</c>

00:14:07.510 --> 00:14:07.520 align:start position:0%
stamps these pixels into the frame
 

00:14:07.520 --> 00:14:09.910 align:start position:0%
stamps these pixels into the frame
buffer<00:14:07.550><c> and</c><00:14:08.030><c> it's</c><00:14:08.210><c> a</c><00:14:08.300><c> very</c><00:14:08.330><c> fixed</c><00:14:08.920><c> operation</c>

00:14:09.910 --> 00:14:09.920 align:start position:0%
buffer and it's a very fixed operation
 

00:14:09.920 --> 00:14:11.890 align:start position:0%
buffer and it's a very fixed operation
if<00:14:10.100><c> you've</c><00:14:10.520><c> got</c><00:14:10.670><c> multi</c><00:14:10.970><c> texturing</c><00:14:11.450><c> turned</c><00:14:11.720><c> on</c>

00:14:11.890 --> 00:14:11.900 align:start position:0%
if you've got multi texturing turned on
 

00:14:11.900 --> 00:14:14.020 align:start position:0%
if you've got multi texturing turned on
it<00:14:12.110><c> will</c><00:14:12.140><c> you</c><00:14:12.410><c> know</c><00:14:12.710><c> pick</c><00:14:12.920><c> a</c><00:14:12.950><c> text</c><00:14:13.310><c> or</c><00:14:13.400><c> from</c><00:14:13.610><c> one</c>

00:14:14.020 --> 00:14:14.030 align:start position:0%
it will you know pick a text or from one
 

00:14:14.030 --> 00:14:15.730 align:start position:0%
it will you know pick a text or from one
text<00:14:14.360><c> unit</c><00:14:14.600><c> then</c><00:14:14.720><c> another</c><00:14:14.960><c> if</c><00:14:15.200><c> they</c><00:14:15.320><c> be</c><00:14:15.410><c> module</c>

00:14:15.730 --> 00:14:15.740 align:start position:0%
text unit then another if they be module
 

00:14:15.740 --> 00:14:16.300 align:start position:0%
text unit then another if they be module
listen<00:14:16.010><c> to</c><00:14:16.100><c> get</c>

00:14:16.300 --> 00:14:16.310 align:start position:0%
listen to get
 

00:14:16.310 --> 00:14:21.310 align:start position:0%
listen to get
or<00:14:16.400><c> something</c><00:14:16.730><c> like</c><00:14:16.850><c> that</c><00:14:19.300><c> well</c><00:14:20.320><c> the</c>

00:14:21.310 --> 00:14:21.320 align:start position:0%
or something like that well the
 

00:14:21.320 --> 00:14:23.800 align:start position:0%
or something like that well the
programmability<00:14:21.890><c> part</c><00:14:22.370><c> comes</c><00:14:22.610><c> in</c><00:14:22.820><c> whenever</c>

00:14:23.800 --> 00:14:23.810 align:start position:0%
programmability part comes in whenever
 

00:14:23.810 --> 00:14:26.410 align:start position:0%
programmability part comes in whenever
you<00:14:23.990><c> start</c><00:14:24.170><c> to</c><00:14:24.290><c> pull</c><00:14:24.440><c> those</c><00:14:24.590><c> out</c><00:14:24.770><c> and</c><00:14:25.420><c> you're</c>

00:14:26.410 --> 00:14:26.420 align:start position:0%
you start to pull those out and you're
 

00:14:26.420 --> 00:14:27.730 align:start position:0%
you start to pull those out and you're
going<00:14:26.600><c> to</c><00:14:26.690><c> then</c><00:14:26.840><c> have</c><00:14:27.020><c> the</c><00:14:27.170><c> ability</c><00:14:27.560><c> to</c>

00:14:27.730 --> 00:14:27.740 align:start position:0%
going to then have the ability to
 

00:14:27.740 --> 00:14:30.010 align:start position:0%
going to then have the ability to
replace<00:14:28.730><c> these</c><00:14:28.940><c> two</c><00:14:29.150><c> parts</c><00:14:29.450><c> of</c><00:14:29.540><c> the</c><00:14:29.600><c> pipeline</c>

00:14:30.010 --> 00:14:30.020 align:start position:0%
replace these two parts of the pipeline
 

00:14:30.020 --> 00:14:33.900 align:start position:0%
replace these two parts of the pipeline
that's<00:14:30.529><c> what</c><00:14:30.710><c> you're</c><00:14:30.800><c> doing</c><00:14:31.070><c> essentially</c><00:14:32.740><c> so</c>

00:14:33.900 --> 00:14:33.910 align:start position:0%
that's what you're doing essentially so
 

00:14:33.910 --> 00:14:37.110 align:start position:0%
that's what you're doing essentially so
take<00:14:34.910><c> a</c><00:14:34.940><c> look</c><00:14:35.089><c> at</c><00:14:35.180><c> some</c><00:14:35.300><c> terminology</c><00:14:35.990><c> here</c><00:14:36.230><c> a</c>

00:14:37.110 --> 00:14:37.120 align:start position:0%
take a look at some terminology here a
 

00:14:37.120 --> 00:14:40.390 align:start position:0%
take a look at some terminology here a
primitive<00:14:38.140><c> is</c><00:14:39.140><c> is</c><00:14:39.589><c> really</c><00:14:39.740><c> a</c><00:14:39.890><c> series</c><00:14:40.370><c> of</c>

00:14:40.390 --> 00:14:40.400 align:start position:0%
primitive is is really a series of
 

00:14:40.400 --> 00:14:43.210 align:start position:0%
primitive is is really a series of
vertices<00:14:40.910><c> with</c><00:14:41.150><c> a</c><00:14:41.210><c> connection</c><00:14:41.690><c> rule</c><00:14:41.870><c> so</c><00:14:42.440><c> in</c><00:14:42.890><c> a</c>

00:14:43.210 --> 00:14:43.220 align:start position:0%
vertices with a connection rule so in a
 

00:14:43.220 --> 00:14:44.740 align:start position:0%
vertices with a connection rule so in a
sense<00:14:43.250><c> ever</c><00:14:43.700><c> if</c><00:14:43.880><c> you're</c><00:14:44.029><c> an</c><00:14:44.180><c> immediate</c><00:14:44.570><c> mode</c>

00:14:44.740 --> 00:14:44.750 align:start position:0%
sense ever if you're an immediate mode
 

00:14:44.750 --> 00:14:46.540 align:start position:0%
sense ever if you're an immediate mode
everything<00:14:45.170><c> between</c><00:14:45.320><c> your</c><00:14:45.680><c> GL</c><00:14:45.950><c> begin</c><00:14:46.279><c> and</c><00:14:46.430><c> end</c>

00:14:46.540 --> 00:14:46.550 align:start position:0%
everything between your GL begin and end
 

00:14:46.550 --> 00:14:48.579 align:start position:0%
everything between your GL begin and end
in<00:14:46.790><c> the</c><00:14:47.270><c> begin</c><00:14:47.540><c> call</c><00:14:47.810><c> you</c><00:14:47.990><c> specify</c><00:14:48.529><c> the</c>

00:14:48.579 --> 00:14:48.589 align:start position:0%
in the begin call you specify the
 

00:14:48.589 --> 00:14:50.230 align:start position:0%
in the begin call you specify the
connection<00:14:49.160><c> rule</c><00:14:49.339><c> and</c><00:14:49.700><c> everything</c><00:14:50.120><c> in</c>

00:14:50.230 --> 00:14:50.240 align:start position:0%
connection rule and everything in
 

00:14:50.240 --> 00:14:52.060 align:start position:0%
connection rule and everything in
between<00:14:50.330><c> that</c><00:14:50.720><c> is</c><00:14:50.960><c> your</c><00:14:51.200><c> is</c><00:14:51.410><c> your</c><00:14:51.440><c> vertices</c>

00:14:52.060 --> 00:14:52.070 align:start position:0%
between that is your is your vertices
 

00:14:52.070 --> 00:14:54.579 align:start position:0%
between that is your is your vertices
and<00:14:52.250><c> you</c><00:14:52.910><c> can</c><00:14:53.089><c> specify</c><00:14:53.330><c> vertex</c><00:14:53.990><c> attributes</c>

00:14:54.579 --> 00:14:54.589 align:start position:0%
and you can specify vertex attributes
 

00:14:54.589 --> 00:14:59.800 align:start position:0%
and you can specify vertex attributes
there<00:14:54.770><c> too</c><00:14:57.940><c> shaders</c><00:14:58.940><c> are</c><00:14:59.120><c> applied</c><00:14:59.570><c> on</c><00:14:59.779><c> a</c>

00:14:59.800 --> 00:14:59.810 align:start position:0%
there too shaders are applied on a
 

00:14:59.810 --> 00:15:01.690 align:start position:0%
there too shaders are applied on a
primitive<00:15:00.230><c> basis</c><00:15:00.800><c> you</c><00:15:00.920><c> can't</c><00:15:01.160><c> switch</c><00:15:01.430><c> shader</c>

00:15:01.690 --> 00:15:01.700 align:start position:0%
primitive basis you can't switch shader
 

00:15:01.700 --> 00:15:05.380 align:start position:0%
primitive basis you can't switch shader
halfway<00:15:02.210><c> through</c><00:15:02.450><c> a</c><00:15:02.480><c> primitive</c><00:15:02.900><c> so</c><00:15:04.390><c> it's</c>

00:15:05.380 --> 00:15:05.390 align:start position:0%
halfway through a primitive so it's
 

00:15:05.390 --> 00:15:08.019 align:start position:0%
halfway through a primitive so it's
important<00:15:05.900><c> to</c><00:15:05.990><c> note</c><00:15:06.170><c> that</c><00:15:06.200><c> that</c><00:15:06.790><c> the</c><00:15:07.790><c> shader</c>

00:15:08.019 --> 00:15:08.029 align:start position:0%
important to note that that the shader
 

00:15:08.029 --> 00:15:10.740 align:start position:0%
important to note that that the shader
remains<00:15:08.510><c> sort</c><00:15:08.810><c> of</c><00:15:08.870><c> constant</c><00:15:09.589><c> throughout</c><00:15:09.830><c> that</c>

00:15:10.740 --> 00:15:10.750 align:start position:0%
remains sort of constant throughout that
 

00:15:10.750 --> 00:15:14.950 align:start position:0%
remains sort of constant throughout that
also<00:15:11.750><c> opengl</c><00:15:12.410><c> state</c><00:15:12.770><c> it</c><00:15:13.670><c> can</c><00:15:14.270><c> only</c><00:15:14.420><c> change</c><00:15:14.750><c> on</c>

00:15:14.950 --> 00:15:14.960 align:start position:0%
also opengl state it can only change on
 

00:15:14.960 --> 00:15:18.550 align:start position:0%
also opengl state it can only change on
a<00:15:15.050><c> primitive</c><00:15:15.680><c> basis</c><00:15:16.630><c> you</c><00:15:17.630><c> know</c><00:15:17.660><c> you</c><00:15:17.779><c> can</c><00:15:18.410><c> only</c>

00:15:18.550 --> 00:15:18.560 align:start position:0%
a primitive basis you know you can only
 

00:15:18.560 --> 00:15:20.740 align:start position:0%
a primitive basis you know you can only
enable<00:15:19.339><c> or</c><00:15:19.430><c> disable</c><00:15:19.520><c> something</c><00:15:20.120><c> outside</c><00:15:20.510><c> of</c><00:15:20.690><c> a</c>

00:15:20.740 --> 00:15:20.750 align:start position:0%
enable or disable something outside of a
 

00:15:20.750 --> 00:15:23.020 align:start position:0%
enable or disable something outside of a
begin<00:15:21.050><c> aunt</c><00:15:21.260><c> so</c><00:15:21.920><c> that's</c><00:15:22.100><c> going</c><00:15:22.280><c> to</c><00:15:22.339><c> be</c><00:15:22.400><c> the</c>

00:15:23.020 --> 00:15:23.030 align:start position:0%
begin aunt so that's going to be the
 

00:15:23.030 --> 00:15:24.520 align:start position:0%
begin aunt so that's going to be the
state<00:15:23.330><c> is</c><00:15:23.480><c> going</c><00:15:23.510><c> to</c><00:15:23.720><c> be</c><00:15:23.839><c> uniform</c><00:15:24.470><c> throughout</c>

00:15:24.520 --> 00:15:24.530 align:start position:0%
state is going to be uniform throughout
 

00:15:24.530 --> 00:15:26.980 align:start position:0%
state is going to be uniform throughout
the<00:15:25.010><c> execution</c><00:15:25.610><c> of</c><00:15:25.700><c> that</c><00:15:25.760><c> shader</c><00:15:26.180><c> and</c><00:15:26.450><c> that</c><00:15:26.839><c> up</c>

00:15:26.980 --> 00:15:26.990 align:start position:0%
the execution of that shader and that up
 

00:15:26.990 --> 00:15:28.750 align:start position:0%
the execution of that shader and that up
turn<00:15:27.140><c> uniform</c><00:15:27.710><c> is</c><00:15:27.830><c> important</c><00:15:28.280><c> because</c><00:15:28.520><c> it's</c>

00:15:28.750 --> 00:15:28.760 align:start position:0%
turn uniform is important because it's
 

00:15:28.760 --> 00:15:30.820 align:start position:0%
turn uniform is important because it's
actually<00:15:29.030><c> going</c><00:15:29.270><c> to</c><00:15:29.360><c> be</c><00:15:29.390><c> a</c><00:15:29.480><c> keyword</c><00:15:29.839><c> in</c><00:15:30.080><c> this</c>

00:15:30.820 --> 00:15:30.830 align:start position:0%
actually going to be a keyword in this
 

00:15:30.830 --> 00:15:32.650 align:start position:0%
actually going to be a keyword in this
in<00:15:31.310><c> this</c><00:15:31.490><c> shading</c><00:15:31.880><c> language</c><00:15:31.970><c> and</c><00:15:32.360><c> I'm</c><00:15:32.450><c> just</c>

00:15:32.650 --> 00:15:32.660 align:start position:0%
in this shading language and I'm just
 

00:15:32.660 --> 00:15:36.030 align:start position:0%
in this shading language and I'm just
trying<00:15:32.810><c> to</c><00:15:32.870><c> explain</c><00:15:33.110><c> where</c><00:15:33.920><c> they</c><00:15:34.070><c> come</c><00:15:34.280><c> from</c>

00:15:36.030 --> 00:15:36.040 align:start position:0%
trying to explain where they come from
 

00:15:36.040 --> 00:15:38.560 align:start position:0%
trying to explain where they come from
also<00:15:37.040><c> looking</c><00:15:37.370><c> at</c><00:15:37.460><c> a</c><00:15:37.520><c> vertex</c><00:15:37.700><c> obviously</c><00:15:38.450><c> it's</c>

00:15:38.560 --> 00:15:38.570 align:start position:0%
also looking at a vertex obviously it's
 

00:15:38.570 --> 00:15:41.800 align:start position:0%
also looking at a vertex obviously it's
a<00:15:38.660><c> 3d</c><00:15:38.900><c> point</c><00:15:39.170><c> comprising</c><00:15:39.770><c> primitive</c><00:15:40.810><c> the</c>

00:15:41.800 --> 00:15:41.810 align:start position:0%
a 3d point comprising primitive the
 

00:15:41.810 --> 00:15:44.260 align:start position:0%
a 3d point comprising primitive the
vertex<00:15:42.200><c> shaders</c><00:15:42.589><c> are</c><00:15:42.710><c> around</c><00:15:43.310><c> once</c><00:15:43.880><c> for</c><00:15:44.240><c> every</c>

00:15:44.260 --> 00:15:44.270 align:start position:0%
vertex shaders are around once for every
 

00:15:44.270 --> 00:15:46.420 align:start position:0%
vertex shaders are around once for every
vertex<00:15:44.630><c> now</c><00:15:45.140><c> in</c><00:15:45.470><c> hardware</c><00:15:45.920><c> they</c><00:15:46.040><c> could</c><00:15:46.160><c> be</c><00:15:46.250><c> ran</c>

00:15:46.420 --> 00:15:46.430 align:start position:0%
vertex now in hardware they could be ran
 

00:15:46.430 --> 00:15:48.520 align:start position:0%
vertex now in hardware they could be ran
in<00:15:46.610><c> parallel</c><00:15:47.120><c> but</c><00:15:47.330><c> still</c><00:15:47.720><c> is</c><00:15:47.900><c> one</c><00:15:48.080><c> execution</c>

00:15:48.520 --> 00:15:48.530 align:start position:0%
in parallel but still is one execution
 

00:15:48.530 --> 00:15:51.790 align:start position:0%
in parallel but still is one execution
for<00:15:48.830><c> every</c><00:15:49.040><c> one</c><00:15:49.190><c> of</c><00:15:49.280><c> those</c><00:15:49.370><c> vertices</c><00:15:50.800><c> they're</c>

00:15:51.790 --> 00:15:51.800 align:start position:0%
for every one of those vertices they're
 

00:15:51.800 --> 00:15:54.880 align:start position:0%
for every one of those vertices they're
independent<00:15:52.100><c> from</c><00:15:52.640><c> one</c><00:15:52.790><c> another</c><00:15:53.740><c> for</c><00:15:54.740><c> that</c>

00:15:54.880 --> 00:15:54.890 align:start position:0%
independent from one another for that
 

00:15:54.890 --> 00:15:56.980 align:start position:0%
independent from one another for that
for<00:15:55.130><c> the</c><00:15:55.220><c> purpose</c><00:15:55.670><c> of</c><00:15:55.760><c> parallelism</c><00:15:56.150><c> so</c>

00:15:56.980 --> 00:15:56.990 align:start position:0%
for the purpose of parallelism so
 

00:15:56.990 --> 00:15:59.470 align:start position:0%
for the purpose of parallelism so
therefore<00:15:57.380><c> you</c><00:15:57.890><c> cannot</c><00:15:58.160><c> have</c><00:15:58.480><c> communication</c>

00:15:59.470 --> 00:15:59.480 align:start position:0%
therefore you cannot have communication
 

00:15:59.480 --> 00:16:02.620 align:start position:0%
therefore you cannot have communication
between<00:16:00.820><c> subsequent</c><00:16:01.820><c> executions</c><00:16:02.420><c> of</c><00:16:02.570><c> a</c>

00:16:02.620 --> 00:16:02.630 align:start position:0%
between subsequent executions of a
 

00:16:02.630 --> 00:16:06.600 align:start position:0%
between subsequent executions of a
shader<00:16:03.220><c> they're</c><00:16:04.220><c> discrete</c><00:16:04.580><c> from</c><00:16:04.760><c> one</c><00:16:04.880><c> another</c>

00:16:06.600 --> 00:16:06.610 align:start position:0%
shader they're discrete from one another
 

00:16:06.610 --> 00:16:09.699 align:start position:0%
shader they're discrete from one another
also<00:16:07.610><c> AM</c><00:16:07.820><c> vertices</c><00:16:08.450><c> they</c><00:16:08.720><c> have</c><00:16:09.110><c> attributes</c>

00:16:09.699 --> 00:16:09.709 align:start position:0%
also AM vertices they have attributes
 

00:16:09.709 --> 00:16:12.250 align:start position:0%
also AM vertices they have attributes
associated<00:16:10.220><c> with</c><00:16:10.730><c> them</c><00:16:10.970><c> you</c><00:16:11.360><c> know</c><00:16:11.480><c> mainly</c>

00:16:12.250 --> 00:16:12.260 align:start position:0%
associated with them you know mainly
 

00:16:12.260 --> 00:16:14.380 align:start position:0%
associated with them you know mainly
their<00:16:12.589><c> position</c><00:16:13.070><c> the</c><00:16:13.459><c> color</c><00:16:13.700><c> they</c><00:16:14.150><c> can</c><00:16:14.270><c> have</c><00:16:14.360><c> a</c>

00:16:14.380 --> 00:16:14.390 align:start position:0%
their position the color they can have a
 

00:16:14.390 --> 00:16:16.540 align:start position:0%
their position the color they can have a
normal<00:16:14.600><c> texture</c><00:16:15.140><c> coordinate</c><00:16:15.529><c> on</c><00:16:15.920><c> a</c><00:16:15.980><c> bunch</c><00:16:16.370><c> of</c>

00:16:16.540 --> 00:16:16.550 align:start position:0%
normal texture coordinate on a bunch of
 

00:16:16.550 --> 00:16:18.460 align:start position:0%
normal texture coordinate on a bunch of
other<00:16:16.730><c> user-defined</c><00:16:17.660><c> attributes</c><00:16:18.260><c> that</c><00:16:18.320><c> you</c>

00:16:18.460 --> 00:16:18.470 align:start position:0%
other user-defined attributes that you
 

00:16:18.470 --> 00:16:20.470 align:start position:0%
other user-defined attributes that you
might<00:16:18.650><c> want</c><00:16:18.920><c> it</c><00:16:19.160><c> weights</c><00:16:19.760><c> or</c><00:16:20.000><c> whatever</c><00:16:20.240><c> else</c>

00:16:20.470 --> 00:16:20.480 align:start position:0%
might want it weights or whatever else
 

00:16:20.480 --> 00:16:24.540 align:start position:0%
might want it weights or whatever else
you<00:16:20.630><c> might</c><00:16:20.750><c> be</c><00:16:20.810><c> using</c><00:16:21.520><c> and</c><00:16:22.520><c> then</c><00:16:23.390><c> a</c><00:16:23.420><c> fragment</c>

00:16:24.540 --> 00:16:24.550 align:start position:0%
you might be using and then a fragment
 

00:16:24.550 --> 00:16:27.760 align:start position:0%
you might be using and then a fragment
is<00:16:25.550><c> really</c><00:16:26.180><c> it's</c><00:16:26.480><c> a</c><00:16:26.570><c> pixel</c><00:16:26.930><c> on</c><00:16:27.020><c> your</c><00:16:27.170><c> on</c><00:16:27.709><c> your</c>

00:16:27.760 --> 00:16:27.770 align:start position:0%
is really it's a pixel on your on your
 

00:16:27.770 --> 00:16:29.920 align:start position:0%
is really it's a pixel on your on your
frame<00:16:28.100><c> buffer</c><00:16:28.750><c> the</c>

00:16:29.920 --> 00:16:29.930 align:start position:0%
frame buffer the
 

00:16:29.930 --> 00:16:32.139 align:start position:0%
frame buffer the
that<00:16:30.080><c> comprises</c><00:16:30.830><c> the</c><00:16:31.010><c> scanline</c><00:16:31.610><c> during</c><00:16:32.060><c> the</c>

00:16:32.139 --> 00:16:32.149 align:start position:0%
that comprises the scanline during the
 

00:16:32.149 --> 00:16:35.590 align:start position:0%
that comprises the scanline during the
triangle<00:16:32.540><c> rasterization</c><00:16:34.240><c> the</c><00:16:35.240><c> fragment</c>

00:16:35.590 --> 00:16:35.600 align:start position:0%
triangle rasterization the fragment
 

00:16:35.600 --> 00:16:38.800 align:start position:0%
triangle rasterization the fragment
shader<00:16:35.630><c> determines</c><00:16:36.260><c> its</c><00:16:36.380><c> color</c><00:16:36.560><c> and</c><00:16:37.810><c> the</c>

00:16:38.800 --> 00:16:38.810 align:start position:0%
shader determines its color and the
 

00:16:38.810 --> 00:16:42.579 align:start position:0%
shader determines its color and the
fragment<00:16:39.200><c> shader</c><00:16:39.230><c> has</c><00:16:39.589><c> access</c><00:16:40.240><c> to</c><00:16:41.589><c> data</c>

00:16:42.579 --> 00:16:42.589 align:start position:0%
fragment shader has access to data
 

00:16:42.589 --> 00:16:44.889 align:start position:0%
fragment shader has access to data
that's<00:16:42.830><c> varying</c><00:16:43.490><c> coming</c><00:16:44.480><c> from</c><00:16:44.600><c> the</c><00:16:44.720><c> vertex</c>

00:16:44.889 --> 00:16:44.899 align:start position:0%
that's varying coming from the vertex
 

00:16:44.899 --> 00:16:46.600 align:start position:0%
that's varying coming from the vertex
shader<00:16:45.320><c> and</c><00:16:45.410><c> its</c><00:16:45.649><c> varying</c><00:16:46.070><c> because</c><00:16:46.370><c> for</c><00:16:46.580><c> every</c>

00:16:46.600 --> 00:16:46.610 align:start position:0%
shader and its varying because for every
 

00:16:46.610 --> 00:16:49.360 align:start position:0%
shader and its varying because for every
execution<00:16:47.120><c> that</c><00:16:47.540><c> fragment</c><00:16:47.930><c> shader</c><00:16:48.370><c> those</c>

00:16:49.360 --> 00:16:49.370 align:start position:0%
execution that fragment shader those
 

00:16:49.370 --> 00:16:53.410 align:start position:0%
execution that fragment shader those
attributes<00:16:50.000><c> are</c><00:16:51.190><c> there</c><00:16:52.190><c> interpolated</c><00:16:52.820><c> them</c>

00:16:53.410 --> 00:16:53.420 align:start position:0%
attributes are there interpolated them
 

00:16:53.420 --> 00:16:57.699 align:start position:0%
attributes are there interpolated them
across<00:16:53.690><c> that</c><00:16:54.050><c> scan</c><00:16:54.320><c> line</c><00:16:56.050><c> so</c><00:16:57.050><c> let's</c><00:16:57.560><c> take</c><00:16:57.649><c> a</c>

00:16:57.699 --> 00:16:57.709 align:start position:0%
across that scan line so let's take a
 

00:16:57.709 --> 00:16:58.960 align:start position:0%
across that scan line so let's take a
look<00:16:57.890><c> at</c><00:16:57.920><c> the</c><00:16:58.040><c> current</c><00:16:58.220><c> languages</c><00:16:58.790><c> that</c><00:16:58.850><c> are</c>

00:16:58.960 --> 00:16:58.970 align:start position:0%
look at the current languages that are
 

00:16:58.970 --> 00:17:01.780 align:start position:0%
look at the current languages that are
available<00:16:59.089><c> today</c><00:17:00.279><c> the</c><00:17:01.279><c> ARB</c><00:17:01.430><c> approved</c>

00:17:01.780 --> 00:17:01.790 align:start position:0%
available today the ARB approved
 

00:17:01.790 --> 00:17:03.040 align:start position:0%
available today the ARB approved
languages<00:17:02.330><c> are</c><00:17:02.480><c> vertex</c><00:17:02.870><c> and</c><00:17:02.990><c> fragment</c>

00:17:03.040 --> 00:17:03.050 align:start position:0%
languages are vertex and fragment
 

00:17:03.050 --> 00:17:05.770 align:start position:0%
languages are vertex and fragment
program<00:17:03.800><c> again</c><00:17:04.730><c> there</c><00:17:05.209><c> other</c><00:17:05.390><c> said</c><00:17:05.630><c> their</c>

00:17:05.770 --> 00:17:05.780 align:start position:0%
program again there other said their
 

00:17:05.780 --> 00:17:08.110 align:start position:0%
program again there other said their
assembly<00:17:06.470><c> like</c><00:17:06.760><c> except</c><00:17:07.760><c> they</c><00:17:07.910><c> have</c><00:17:08.000><c> no</c>

00:17:08.110 --> 00:17:08.120 align:start position:0%
assembly like except they have no
 

00:17:08.120 --> 00:17:09.730 align:start position:0%
assembly like except they have no
bitwise<00:17:08.510><c> operations</c><00:17:09.199><c> they're</c><00:17:09.350><c> all</c><00:17:09.470><c> kind</c><00:17:09.679><c> of</c>

00:17:09.730 --> 00:17:09.740 align:start position:0%
bitwise operations they're all kind of
 

00:17:09.740 --> 00:17:11.679 align:start position:0%
bitwise operations they're all kind of
high-level<00:17:09.920><c> instructions</c><00:17:10.730><c> somewhat</c><00:17:11.540><c> high</c>

00:17:11.679 --> 00:17:11.689 align:start position:0%
high-level instructions somewhat high
 

00:17:11.689 --> 00:17:14.590 align:start position:0%
high-level instructions somewhat high
level<00:17:13.030><c> meeting</c><00:17:14.030><c> any</c><00:17:14.240><c> sort</c><00:17:14.420><c> of</c><00:17:14.480><c> mathematical</c>

00:17:14.590 --> 00:17:14.600 align:start position:0%
level meeting any sort of mathematical
 

00:17:14.600 --> 00:17:18.100 align:start position:0%
level meeting any sort of mathematical
operation<00:17:16.329><c> they</c><00:17:17.329><c> all</c><00:17:17.480><c> deal</c><00:17:17.720><c> in</c><00:17:17.870><c> floating</c>

00:17:18.100 --> 00:17:18.110 align:start position:0%
operation they all deal in floating
 

00:17:18.110 --> 00:17:20.890 align:start position:0%
operation they all deal in floating
point<00:17:18.470><c> and</c><00:17:18.730><c> it's</c><00:17:19.730><c> a</c><00:17:19.790><c> sim</c><00:17:20.000><c> d</c><00:17:20.179><c> instruction</c><00:17:20.689><c> set</c>

00:17:20.890 --> 00:17:20.900 align:start position:0%
point and it's a sim d instruction set
 

00:17:20.900 --> 00:17:22.870 align:start position:0%
point and it's a sim d instruction set
and<00:17:21.319><c> add</c><00:17:21.589><c> is</c><00:17:21.860><c> going</c><00:17:22.010><c> to</c><00:17:22.069><c> do</c><00:17:22.160><c> an</c><00:17:22.250><c> add-on</c><00:17:22.429><c> for</c>

00:17:22.870 --> 00:17:22.880 align:start position:0%
and add is going to do an add-on for
 

00:17:22.880 --> 00:17:25.809 align:start position:0%
and add is going to do an add-on for
components<00:17:23.390><c> in</c><00:17:23.449><c> a</c><00:17:23.540><c> register</c><00:17:24.670><c> all</c><00:17:25.670><c> the</c>

00:17:25.809 --> 00:17:25.819 align:start position:0%
components in a register all the
 

00:17:25.819 --> 00:17:28.329 align:start position:0%
components in a register all the
registers<00:17:26.209><c> or</c><00:17:26.300><c> four</c><00:17:26.480><c> component</c><00:17:26.929><c> float</c><00:17:27.339><c> and</c>

00:17:28.329 --> 00:17:28.339 align:start position:0%
registers or four component float and
 

00:17:28.339 --> 00:17:29.860 align:start position:0%
registers or four component float and
also<00:17:28.610><c> the</c><00:17:28.700><c> instructions</c><00:17:29.210><c> are</c><00:17:29.330><c> a</c><00:17:29.360><c> fairly</c><00:17:29.630><c> close</c>

00:17:29.860 --> 00:17:29.870 align:start position:0%
also the instructions are a fairly close
 

00:17:29.870 --> 00:17:31.540 align:start position:0%
also the instructions are a fairly close
mapping<00:17:30.440><c> of</c><00:17:30.559><c> the</c><00:17:30.650><c> hardware</c><00:17:30.890><c> instructions</c>

00:17:31.540 --> 00:17:31.550 align:start position:0%
mapping of the hardware instructions
 

00:17:31.550 --> 00:17:33.370 align:start position:0%
mapping of the hardware instructions
which<00:17:31.910><c> is</c><00:17:32.090><c> actually</c><00:17:32.390><c> the</c><00:17:32.720><c> very</c><00:17:32.809><c> thing</c><00:17:33.110><c> that</c><00:17:33.140><c> we</c>

00:17:33.370 --> 00:17:33.380 align:start position:0%
which is actually the very thing that we
 

00:17:33.380 --> 00:17:36.760 align:start position:0%
which is actually the very thing that we
are<00:17:34.340><c> trying</c><00:17:34.580><c> to</c><00:17:34.670><c> get</c><00:17:34.730><c> away</c><00:17:34.850><c> from</c><00:17:35.030><c> nye</c><00:17:35.420><c> and</c><00:17:36.230><c> the</c>

00:17:36.760 --> 00:17:36.770 align:start position:0%
are trying to get away from nye and the
 

00:17:36.770 --> 00:17:38.980 align:start position:0%
are trying to get away from nye and the
language<00:17:37.130><c> has</c><00:17:37.340><c> enforced</c><00:17:38.270><c> resource</c>

00:17:38.980 --> 00:17:38.990 align:start position:0%
language has enforced resource
 

00:17:38.990 --> 00:17:41.860 align:start position:0%
language has enforced resource
limitations<00:17:39.460><c> which</c><00:17:40.460><c> can</c><00:17:41.210><c> be</c><00:17:41.330><c> annoying</c><00:17:41.630><c> but</c>

00:17:41.860 --> 00:17:41.870 align:start position:0%
limitations which can be annoying but
 

00:17:41.870 --> 00:17:43.780 align:start position:0%
limitations which can be annoying but
the<00:17:42.440><c> upside</c><00:17:42.800><c> of</c><00:17:43.040><c> that</c><00:17:43.250><c> the</c><00:17:43.370><c> good</c><00:17:43.550><c> side</c><00:17:43.760><c> of</c>

00:17:43.780 --> 00:17:43.790 align:start position:0%
the upside of that the good side of
 

00:17:43.790 --> 00:17:45.549 align:start position:0%
the upside of that the good side of
enforced<00:17:44.300><c> resource</c><00:17:44.660><c> limitations</c><00:17:45.080><c> is</c><00:17:45.410><c> that</c>

00:17:45.549 --> 00:17:45.559 align:start position:0%
enforced resource limitations is that
 

00:17:45.559 --> 00:17:46.900 align:start position:0%
enforced resource limitations is that
you<00:17:45.650><c> have</c><00:17:45.740><c> a</c><00:17:45.800><c> clear</c><00:17:46.040><c> you</c><00:17:46.280><c> know</c><00:17:46.460><c> if</c><00:17:46.640><c> it's</c><00:17:46.760><c> going</c>

00:17:46.900 --> 00:17:46.910 align:start position:0%
you have a clear you know if it's going
 

00:17:46.910 --> 00:17:48.940 align:start position:0%
you have a clear you know if it's going
to<00:17:46.970><c> run</c><00:17:47.150><c> on</c><00:17:47.240><c> hardware</c><00:17:47.630><c> or</c><00:17:47.720><c> not</c><00:17:47.900><c> you</c><00:17:48.350><c> know</c><00:17:48.740><c> that</c>

00:17:48.940 --> 00:17:48.950 align:start position:0%
to run on hardware or not you know that
 

00:17:48.950 --> 00:17:50.380 align:start position:0%
to run on hardware or not you know that
you<00:17:49.160><c> can</c><00:17:49.309><c> query</c><00:17:49.580><c> it</c><00:17:49.730><c> and</c><00:17:49.910><c> as</c><00:17:50.000><c> long</c><00:17:50.090><c> as</c><00:17:50.270><c> your</c>

00:17:50.380 --> 00:17:50.390 align:start position:0%
you can query it and as long as your
 

00:17:50.390 --> 00:17:52.210 align:start position:0%
you can query it and as long as your
program<00:17:50.750><c> is</c><00:17:50.900><c> within</c><00:17:51.050><c> those</c><00:17:51.350><c> well-defined</c>

00:17:52.210 --> 00:17:52.220 align:start position:0%
program is within those well-defined
 

00:17:52.220 --> 00:17:54.310 align:start position:0%
program is within those well-defined
bonds<00:17:52.730><c> it</c><00:17:52.910><c> will</c><00:17:53.240><c> run</c><00:17:53.510><c> on</c><00:17:53.720><c> the</c><00:17:53.990><c> graphics</c>

00:17:54.310 --> 00:17:54.320 align:start position:0%
bonds it will run on the graphics
 

00:17:54.320 --> 00:17:57.130 align:start position:0%
bonds it will run on the graphics
hardware<00:17:55.030><c> this</c><00:17:56.030><c> is</c><00:17:56.150><c> just</c><00:17:56.270><c> a</c><00:17:56.420><c> look</c><00:17:56.600><c> at</c><00:17:56.720><c> the</c><00:17:56.870><c> the</c>

00:17:57.130 --> 00:17:57.140 align:start position:0%
hardware this is just a look at the the
 

00:17:57.140 --> 00:17:59.230 align:start position:0%
hardware this is just a look at the the
instruction<00:17:57.830><c> set</c><00:17:58.070><c> that</c><00:17:58.460><c> was</c><00:17:58.580><c> available</c><00:17:58.700><c> I</c>

00:17:59.230 --> 00:17:59.240 align:start position:0%
instruction set that was available I
 

00:17:59.240 --> 00:18:01.020 align:start position:0%
instruction set that was available I
broke<00:17:59.540><c> it</c><00:17:59.660><c> into</c><00:17:59.780><c> four</c><00:18:00.050><c> sections</c><00:18:00.290><c> this</c><00:18:00.770><c> is</c><00:18:00.920><c> a</c>

00:18:01.020 --> 00:18:01.030 align:start position:0%
broke it into four sections this is a
 

00:18:01.030 --> 00:18:03.640 align:start position:0%
broke it into four sections this is a
the<00:18:02.030><c> ARB</c><00:18:02.210><c> fragment</c><00:18:02.630><c> program</c><00:18:02.929><c> instruction</c><00:18:03.440><c> set</c>

00:18:03.640 --> 00:18:03.650 align:start position:0%
the ARB fragment program instruction set
 

00:18:03.650 --> 00:18:07.410 align:start position:0%
the ARB fragment program instruction set
you<00:18:04.460><c> can</c><00:18:04.640><c> see</c><00:18:05.200><c> you</c><00:18:06.200><c> know</c><00:18:06.260><c> assembly</c><00:18:06.890><c> like</c><00:18:06.980><c> names</c>

00:18:07.410 --> 00:18:07.420 align:start position:0%
you can see you know assembly like names
 

00:18:07.420 --> 00:18:09.850 align:start position:0%
you can see you know assembly like names
this<00:18:08.420><c> is</c><00:18:08.510><c> an</c><00:18:08.630><c> example</c><00:18:08.929><c> of</c><00:18:09.200><c> an</c><00:18:09.350><c> ARB</c><00:18:09.500><c> vertex</c>

00:18:09.850 --> 00:18:09.860 align:start position:0%
this is an example of an ARB vertex
 

00:18:09.860 --> 00:18:13.060 align:start position:0%
this is an example of an ARB vertex
program<00:18:10.730><c> a</c><00:18:11.210><c> very</c><00:18:12.050><c> simple</c><00:18:12.470><c> one</c><00:18:12.650><c> that</c><00:18:12.830><c> merely</c>

00:18:13.060 --> 00:18:13.070 align:start position:0%
program a very simple one that merely
 

00:18:13.070 --> 00:18:17.010 align:start position:0%
program a very simple one that merely
transforms<00:18:14.000><c> the</c><00:18:14.090><c> vertex</c><00:18:14.510><c> and</c><00:18:15.640><c> moves</c><00:18:16.640><c> a</c>

00:18:17.010 --> 00:18:17.020 align:start position:0%
transforms the vertex and moves a
 

00:18:17.020 --> 00:18:19.419 align:start position:0%
transforms the vertex and moves a
texture<00:18:18.020><c> coordinate</c><00:18:18.350><c> through</c><00:18:18.500><c> pretty</c>

00:18:19.419 --> 00:18:19.429 align:start position:0%
texture coordinate through pretty
 

00:18:19.429 --> 00:18:22.840 align:start position:0%
texture coordinate through pretty
straightforward<00:18:20.470><c> and</c><00:18:21.470><c> this</c><00:18:21.679><c> is</c><00:18:21.830><c> a</c><00:18:21.860><c> fragment</c>

00:18:22.840 --> 00:18:22.850 align:start position:0%
straightforward and this is a fragment
 

00:18:22.850 --> 00:18:25.350 align:start position:0%
straightforward and this is a fragment
program<00:18:23.210><c> that</c><00:18:23.390><c> basically</c><00:18:24.100><c> samples</c><00:18:25.100><c> at</c>

00:18:25.350 --> 00:18:25.360 align:start position:0%
program that basically samples at
 

00:18:25.360 --> 00:18:29.140 align:start position:0%
program that basically samples at
samples<00:18:26.360><c> of</c><00:18:26.480><c> texel</c><00:18:26.870><c> from</c><00:18:27.380><c> texture</c><00:18:27.830><c> unit</c><00:18:28.100><c> 0</c><00:18:28.910><c> on</c>

00:18:29.140 --> 00:18:29.150 align:start position:0%
samples of texel from texture unit 0 on
 

00:18:29.150 --> 00:18:31.330 align:start position:0%
samples of texel from texture unit 0 on
texture<00:18:29.510><c> unit</c><00:18:29.750><c> 1</c><00:18:29.929><c> and</c><00:18:30.200><c> then</c><00:18:30.740><c> it</c><00:18:30.860><c> multiplies</c>

00:18:31.330 --> 00:18:31.340 align:start position:0%
texture unit 1 and then it multiplies
 

00:18:31.340 --> 00:18:32.680 align:start position:0%
texture unit 1 and then it multiplies
them<00:18:31.550><c> together</c><00:18:31.850><c> and</c><00:18:32.059><c> writes</c><00:18:32.300><c> it</c><00:18:32.480><c> to</c><00:18:32.570><c> the</c>

00:18:32.680 --> 00:18:32.690 align:start position:0%
them together and writes it to the
 

00:18:32.690 --> 00:18:34.750 align:start position:0%
them together and writes it to the
output<00:18:33.080><c> fragment</c><00:18:33.830><c> that's</c><00:18:34.490><c> what</c><00:18:34.670><c> those</c>

00:18:34.750 --> 00:18:34.760 align:start position:0%
output fragment that's what those
 

00:18:34.760 --> 00:18:36.580 align:start position:0%
output fragment that's what those
languages<00:18:35.150><c> look</c><00:18:35.420><c> like</c><00:18:35.630><c> this</c><00:18:35.840><c> point</c><00:18:36.140><c> pretty</c>

00:18:36.580 --> 00:18:36.590 align:start position:0%
languages look like this point pretty
 

00:18:36.590 --> 00:18:38.650 align:start position:0%
languages look like this point pretty
straightforward<00:18:36.830><c> but</c><00:18:37.790><c> it</c><00:18:38.179><c> can</c><00:18:38.450><c> get</c><00:18:38.600><c> pretty</c>

00:18:38.650 --> 00:18:38.660 align:start position:0%
straightforward but it can get pretty
 

00:18:38.660 --> 00:18:40.810 align:start position:0%
straightforward but it can get pretty
complicated<00:18:39.110><c> if</c><00:18:39.679><c> you</c><00:18:39.800><c> want</c><00:18:39.980><c> to</c><00:18:40.100><c> express</c><00:18:40.400><c> large</c>

00:18:40.810 --> 00:18:40.820 align:start position:0%
complicated if you want to express large
 

00:18:40.820 --> 00:18:44.350 align:start position:0%
complicated if you want to express large
programs<00:18:41.300><c> and</c><00:18:41.540><c> the</c><00:18:42.320><c> complex</c><00:18:42.800><c> effect</c>

00:18:44.350 --> 00:18:44.360 align:start position:0%
programs and the complex effect
 

00:18:44.360 --> 00:18:47.600 align:start position:0%
programs and the complex effect
so<00:18:45.360><c> let's</c><00:18:45.779><c> take</c><00:18:45.899><c> a</c><00:18:45.929><c> look</c><00:18:46.169><c> at</c><00:18:46.230><c> the</c><00:18:46.580><c> high</c><00:18:47.580><c> level</c>

00:18:47.600 --> 00:18:47.610 align:start position:0%
so let's take a look at the high level
 

00:18:47.610 --> 00:18:51.830 align:start position:0%
so let's take a look at the high level
shading<00:18:48.090><c> language</c><00:18:48.409><c> at</c><00:18:49.409><c> this</c><00:18:49.529><c> point</c><00:18:50.779><c> why</c><00:18:51.779><c> do</c>

00:18:51.830 --> 00:18:51.840 align:start position:0%
shading language at this point why do
 

00:18:51.840 --> 00:18:55.070 align:start position:0%
shading language at this point why do
you<00:18:51.990><c> want</c><00:18:52.200><c> to</c><00:18:52.259><c> use</c><00:18:52.440><c> this</c><00:18:53.240><c> potentially</c><00:18:54.240><c> left</c>

00:18:55.070 --> 00:18:55.080 align:start position:0%
you want to use this potentially left
 

00:18:55.080 --> 00:18:56.779 align:start position:0%
you want to use this potentially left
code<00:18:55.409><c> to</c><00:18:55.590><c> write</c><00:18:55.740><c> you</c><00:18:55.980><c> can</c><00:18:56.159><c> express</c><00:18:56.460><c> it</c><00:18:56.730><c> in</c>

00:18:56.779 --> 00:18:56.789 align:start position:0%
code to write you can express it in
 

00:18:56.789 --> 00:18:59.269 align:start position:0%
code to write you can express it in
terms<00:18:56.850><c> that</c><00:18:57.179><c> you're</c><00:18:57.419><c> more</c><00:18:57.570><c> familiar</c><00:18:57.720><c> with</c><00:18:58.279><c> I'm</c>

00:18:59.269 --> 00:18:59.279 align:start position:0%
terms that you're more familiar with I'm
 

00:18:59.279 --> 00:19:00.440 align:start position:0%
terms that you're more familiar with I'm
sure<00:18:59.460><c> some</c><00:18:59.639><c> of</c><00:18:59.730><c> you</c><00:18:59.759><c> are</c><00:19:00.000><c> familiar</c><00:19:00.179><c> with</c>

00:19:00.440 --> 00:19:00.450 align:start position:0%
sure some of you are familiar with
 

00:19:00.450 --> 00:19:02.840 align:start position:0%
sure some of you are familiar with
writing<00:19:00.779><c> assembly</c><00:19:01.200><c> code</c><00:19:01.409><c> but</c><00:19:01.710><c> you</c><00:19:02.309><c> know</c><00:19:02.429><c> no</c>

00:19:02.840 --> 00:19:02.850 align:start position:0%
writing assembly code but you know no
 

00:19:02.850 --> 00:19:04.669 align:start position:0%
writing assembly code but you know no
matter<00:19:02.879><c> wat</c><00:19:03.269><c> you're</c><00:19:03.750><c> really</c><00:19:04.019><c> only</c><00:19:04.169><c> writing</c><00:19:04.590><c> at</c>

00:19:04.669 --> 00:19:04.679 align:start position:0%
matter wat you're really only writing at
 

00:19:04.679 --> 00:19:06.049 align:start position:0%
matter wat you're really only writing at
your<00:19:04.799><c> inner</c><00:19:04.919><c> loops</c><00:19:05.190><c> you're</c><00:19:05.399><c> not</c><00:19:05.549><c> writing</c><00:19:05.879><c> it</c>

00:19:06.049 --> 00:19:06.059 align:start position:0%
your inner loops you're not writing it
 

00:19:06.059 --> 00:19:07.669 align:start position:0%
your inner loops you're not writing it
every<00:19:06.450><c> day</c><00:19:06.480><c> with</c><00:19:06.809><c> your</c><00:19:06.960><c> code</c><00:19:07.110><c> so</c><00:19:07.350><c> being</c><00:19:07.590><c> able</c>

00:19:07.669 --> 00:19:07.679 align:start position:0%
every day with your code so being able
 

00:19:07.679 --> 00:19:09.909 align:start position:0%
every day with your code so being able
to<00:19:07.830><c> write</c><00:19:07.950><c> and</c><00:19:08.100><c> see</c><00:19:08.250><c> it</c><00:19:08.309><c> could</c><00:19:08.490><c> be</c><00:19:08.610><c> convenient</c>

00:19:09.909 --> 00:19:09.919 align:start position:0%
to write and see it could be convenient
 

00:19:09.919 --> 00:19:12.379 align:start position:0%
to write and see it could be convenient
you<00:19:10.919><c> no</c><00:19:11.070><c> longer</c><00:19:11.220><c> need</c><00:19:11.519><c> to</c><00:19:11.639><c> deal</c><00:19:11.669><c> with</c><00:19:12.120><c> specific</c>

00:19:12.379 --> 00:19:12.389 align:start position:0%
you no longer need to deal with specific
 

00:19:12.389 --> 00:19:14.990 align:start position:0%
you no longer need to deal with specific
registers<00:19:13.230><c> anymore</c><00:19:13.679><c> that's</c><00:19:14.039><c> all</c><00:19:14.220><c> virtualized</c>

00:19:14.990 --> 00:19:15.000 align:start position:0%
registers anymore that's all virtualized
 

00:19:15.000 --> 00:19:16.759 align:start position:0%
registers anymore that's all virtualized
just<00:19:15.299><c> declare</c><00:19:15.659><c> variables</c><00:19:16.139><c> and</c><00:19:16.289><c> use</c><00:19:16.440><c> them</c><00:19:16.649><c> as</c>

00:19:16.759 --> 00:19:16.769 align:start position:0%
just declare variables and use them as
 

00:19:16.769 --> 00:19:19.220 align:start position:0%
just declare variables and use them as
you<00:19:16.889><c> please</c><00:19:17.029><c> you</c><00:19:18.029><c> can</c><00:19:18.240><c> depend</c><00:19:18.990><c> on</c><00:19:19.139><c> the</c>

00:19:19.220 --> 00:19:19.230 align:start position:0%
you please you can depend on the
 

00:19:19.230 --> 00:19:21.110 align:start position:0%
you please you can depend on the
compiler<00:19:19.559><c> to</c><00:19:19.950><c> some</c><00:19:20.159><c> extent</c><00:19:20.519><c> to</c><00:19:20.669><c> take</c><00:19:20.820><c> care</c><00:19:21.000><c> of</c>

00:19:21.110 --> 00:19:21.120 align:start position:0%
compiler to some extent to take care of
 

00:19:21.120 --> 00:19:25.909 align:start position:0%
compiler to some extent to take care of
that<00:19:21.240><c> for</c><00:19:21.450><c> you</c><00:19:23.090><c> also</c><00:19:24.090><c> is</c><00:19:24.659><c> a</c><00:19:24.690><c> the</c><00:19:25.470><c> goal</c><00:19:25.799><c> of</c>

00:19:25.909 --> 00:19:25.919 align:start position:0%
that for you also is a the goal of
 

00:19:25.919 --> 00:19:29.090 align:start position:0%
that for you also is a the goal of
Hardware<00:19:26.309><c> independence</c><00:19:27.649><c> this</c><00:19:28.649><c> language</c>

00:19:29.090 --> 00:19:29.100 align:start position:0%
Hardware independence this language
 

00:19:29.100 --> 00:19:30.830 align:start position:0%
Hardware independence this language
doesn't<00:19:29.370><c> tie</c><00:19:29.610><c> itself</c><00:19:29.940><c> to</c><00:19:30.120><c> any</c><00:19:30.240><c> one</c><00:19:30.480><c> piece</c><00:19:30.690><c> of</c>

00:19:30.830 --> 00:19:30.840 align:start position:0%
doesn't tie itself to any one piece of
 

00:19:30.840 --> 00:19:32.779 align:start position:0%
doesn't tie itself to any one piece of
hardware<00:19:31.200><c> which</c><00:19:31.529><c> i</c><00:19:31.679><c> think</c><00:19:31.740><c> is</c><00:19:31.950><c> I</c><00:19:32.159><c> think</c><00:19:32.279><c> is</c><00:19:32.519><c> a</c>

00:19:32.779 --> 00:19:32.789 align:start position:0%
hardware which i think is I think is a
 

00:19:32.789 --> 00:19:37.129 align:start position:0%
hardware which i think is I think is a
good<00:19:33.029><c> thing</c><00:19:33.379><c> in</c><00:19:34.379><c> the</c><00:19:34.679><c> long</c><00:19:34.710><c> run</c><00:19:34.889><c> and</c><00:19:35.990><c> also</c><00:19:36.990><c> is</c><00:19:37.110><c> a</c>

00:19:37.129 --> 00:19:37.139 align:start position:0%
good thing in the long run and also is a
 

00:19:37.139 --> 00:19:39.470 align:start position:0%
good thing in the long run and also is a
nice<00:19:37.379><c> the</c><00:19:37.830><c> nice</c><00:19:38.059><c> intent</c><00:19:39.059><c> of</c><00:19:39.149><c> being</c><00:19:39.210><c> able</c><00:19:39.419><c> to</c>

00:19:39.470 --> 00:19:39.480 align:start position:0%
nice the nice intent of being able to
 

00:19:39.480 --> 00:19:42.830 align:start position:0%
nice the nice intent of being able to
have<00:19:39.539><c> code</c><00:19:39.840><c> reuse</c><00:19:41.269><c> the</c><00:19:42.269><c> ability</c><00:19:42.629><c> to</c><00:19:42.720><c> have</c>

00:19:42.830 --> 00:19:42.840 align:start position:0%
have code reuse the ability to have
 

00:19:42.840 --> 00:19:44.749 align:start position:0%
have code reuse the ability to have
function<00:19:43.289><c> calls</c><00:19:43.559><c> and</c><00:19:43.860><c> also</c><00:19:44.250><c> to</c><00:19:44.309><c> be</c><00:19:44.490><c> able</c><00:19:44.519><c> to</c>

00:19:44.749 --> 00:19:44.759 align:start position:0%
function calls and also to be able to
 

00:19:44.759 --> 00:19:47.090 align:start position:0%
function calls and also to be able to
draw<00:19:44.970><c> in</c><00:19:45.240><c> multiple</c><00:19:45.899><c> files</c><00:19:46.169><c> comprising</c><00:19:46.919><c> one</c>

00:19:47.090 --> 00:19:47.100 align:start position:0%
draw in multiple files comprising one
 

00:19:47.100 --> 00:19:49.399 align:start position:0%
draw in multiple files comprising one
shader<00:19:47.399><c> is</c><00:19:47.610><c> very</c><00:19:47.820><c> useful</c><00:19:48.269><c> you</c><00:19:49.139><c> could</c><00:19:49.289><c> have</c>

00:19:49.399 --> 00:19:49.409 align:start position:0%
shader is very useful you could have
 

00:19:49.409 --> 00:19:51.980 align:start position:0%
shader is very useful you could have
like<00:19:49.559><c> a</c><00:19:49.590><c> files</c><00:19:49.889><c> like</c><00:19:50.490><c> I</c><00:19:50.759><c> got</c><00:19:50.970><c> a</c><00:19:51.120><c> library</c><00:19:51.330><c> almost</c>

00:19:51.980 --> 00:19:51.990 align:start position:0%
like a files like I got a library almost
 

00:19:51.990 --> 00:19:53.600 align:start position:0%
like a files like I got a library almost
full<00:19:52.230><c> of</c><00:19:52.379><c> like</c><00:19:52.529><c> useful</c><00:19:52.919><c> chunks</c><00:19:53.220><c> of</c><00:19:53.490><c> or</c>

00:19:53.600 --> 00:19:53.610 align:start position:0%
full of like useful chunks of or
 

00:19:53.610 --> 00:19:55.490 align:start position:0%
full of like useful chunks of or
code<00:19:53.789><c> the</c><00:19:53.879><c> ears</c><00:19:54.210><c> and</c><00:19:54.299><c> you</c><00:19:54.720><c> can</c><00:19:54.899><c> function</c><00:19:55.289><c> call</c>

00:19:55.490 --> 00:19:55.500 align:start position:0%
code the ears and you can function call
 

00:19:55.500 --> 00:19:57.440 align:start position:0%
code the ears and you can function call
into<00:19:55.980><c> that</c><00:19:56.190><c> from</c><00:19:56.460><c> the</c><00:19:56.549><c> shading</c><00:19:56.850><c> language</c><00:19:56.970><c> so</c>

00:19:57.440 --> 00:19:57.450 align:start position:0%
into that from the shading language so
 

00:19:57.450 --> 00:20:01.580 align:start position:0%
into that from the shading language so
that<00:19:57.659><c> code</c><00:19:58.620><c> reuse</c><00:19:58.799><c> is</c><00:19:59.100><c> pretty</c><00:19:59.309><c> nice</c><00:20:00.590><c> here's</c>

00:20:01.580 --> 00:20:01.590 align:start position:0%
that code reuse is pretty nice here's
 

00:20:01.590 --> 00:20:04.730 align:start position:0%
that code reuse is pretty nice here's
just<00:20:01.769><c> a</c><00:20:01.830><c> comparison</c><00:20:02.549><c> of</c><00:20:03.200><c> sort</c><00:20:04.200><c> of</c><00:20:04.259><c> what</c><00:20:04.620><c> the</c>

00:20:04.730 --> 00:20:04.740 align:start position:0%
just a comparison of sort of what the
 

00:20:04.740 --> 00:20:07.970 align:start position:0%
just a comparison of sort of what the
two<00:20:04.889><c> things</c><00:20:05.100><c> look</c><00:20:05.279><c> like</c><00:20:05.309><c> side</c><00:20:05.730><c> by</c><00:20:05.759><c> side</c><00:20:06.980><c> you</c>

00:20:07.970 --> 00:20:07.980 align:start position:0%
two things look like side by side you
 

00:20:07.980 --> 00:20:09.289 align:start position:0%
two things look like side by side you
can<00:20:08.159><c> see</c><00:20:08.190><c> there's</c><00:20:08.580><c> the</c><00:20:08.789><c> the</c><00:20:09.059><c> ARB</c><00:20:09.240><c> vertex</c>

00:20:09.289 --> 00:20:09.299 align:start position:0%
can see there's the the ARB vertex
 

00:20:09.299 --> 00:20:11.389 align:start position:0%
can see there's the the ARB vertex
program<00:20:09.809><c> that</c><00:20:10.230><c> transforms</c><00:20:10.740><c> a</c><00:20:10.830><c> vertex</c><00:20:11.129><c> and</c>

00:20:11.389 --> 00:20:11.399 align:start position:0%
program that transforms a vertex and
 

00:20:11.399 --> 00:20:13.519 align:start position:0%
program that transforms a vertex and
passes<00:20:12.090><c> its</c><00:20:12.210><c> color</c><00:20:12.450><c> through</c><00:20:12.750><c> and</c><00:20:13.320><c> then</c><00:20:13.409><c> you</c>

00:20:13.519 --> 00:20:13.529 align:start position:0%
passes its color through and then you
 

00:20:13.529 --> 00:20:15.639 align:start position:0%
passes its color through and then you
can<00:20:13.710><c> see</c><00:20:13.889><c> the</c><00:20:14.070><c> GL</c><00:20:14.549><c> shading</c><00:20:14.970><c> language</c><00:20:15.090><c> a</c>

00:20:15.639 --> 00:20:15.649 align:start position:0%
can see the GL shading language a
 

00:20:15.649 --> 00:20:18.379 align:start position:0%
can see the GL shading language a
version<00:20:16.649><c> of</c><00:20:16.710><c> the</c><00:20:16.830><c> same</c><00:20:16.980><c> thing</c><00:20:17.279><c> it's</c><00:20:18.090><c> a</c><00:20:18.179><c> more</c>

00:20:18.379 --> 00:20:18.389 align:start position:0%
version of the same thing it's a more
 

00:20:18.389 --> 00:20:20.389 align:start position:0%
version of the same thing it's a more
natural<00:20:18.929><c> form</c><00:20:19.440><c> of</c><00:20:19.529><c> expressing</c><00:20:20.070><c> it</c><00:20:20.159><c> really</c>

00:20:20.389 --> 00:20:20.399 align:start position:0%
natural form of expressing it really
 

00:20:20.399 --> 00:20:24.200 align:start position:0%
natural form of expressing it really
look<00:20:21.080><c> it</c><00:20:22.080><c> just</c><00:20:22.289><c> looks</c><00:20:22.440><c> like</c><00:20:22.529><c> see</c><00:20:22.799><c> really</c><00:20:23.179><c> has</c><00:20:24.179><c> a</c>

00:20:24.200 --> 00:20:24.210 align:start position:0%
look it just looks like see really has a
 

00:20:24.210 --> 00:20:30.560 align:start position:0%
look it just looks like see really has a
main<00:20:24.509><c> entry</c><00:20:25.110><c> point</c><00:20:25.350><c> and</c><00:20:25.409><c> so</c><00:20:25.590><c> forth</c><00:20:27.379><c> so</c><00:20:29.330><c> the</c><00:20:30.330><c> the</c>

00:20:30.560 --> 00:20:30.570 align:start position:0%
main entry point and so forth so the the
 

00:20:30.570 --> 00:20:32.899 align:start position:0%
main entry point and so forth so the the
object<00:20:31.019><c> model</c><00:20:31.379><c> here</c><00:20:31.620><c> the</c><00:20:31.769><c> way</c><00:20:32.370><c> the</c><00:20:32.610><c> against</c>

00:20:32.899 --> 00:20:32.909 align:start position:0%
object model here the way the against
 

00:20:32.909 --> 00:20:36.470 align:start position:0%
object model here the way the against
the<00:20:33.000><c> API</c><00:20:33.269><c> kind</c><00:20:33.690><c> of</c><00:20:33.750><c> works</c><00:20:33.960><c> is</c><00:20:35.240><c> to</c><00:20:36.240><c> make</c><00:20:36.450><c> a</c>

00:20:36.470 --> 00:20:36.480 align:start position:0%
the API kind of works is to make a
 

00:20:36.480 --> 00:20:39.139 align:start position:0%
the API kind of works is to make a
vertex<00:20:36.929><c> shader</c><00:20:37.230><c> object</c><00:20:37.799><c> you</c><00:20:38.580><c> basically</c><00:20:38.909><c> need</c>

00:20:39.139 --> 00:20:39.149 align:start position:0%
vertex shader object you basically need
 

00:20:39.149 --> 00:20:41.570 align:start position:0%
vertex shader object you basically need
a<00:20:39.210><c> about</c><00:20:39.659><c> you</c><00:20:39.840><c> can</c><00:20:40.019><c> have</c><00:20:40.169><c> one</c><00:20:40.740><c> or</c><00:20:40.769><c> more</c><00:20:40.980><c> strings</c>

00:20:41.570 --> 00:20:41.580 align:start position:0%
a about you can have one or more strings
 

00:20:41.580 --> 00:20:43.639 align:start position:0%
a about you can have one or more strings
which<00:20:42.299><c> are</c><00:20:42.419><c> the</c><00:20:42.539><c> strings</c><00:20:42.779><c> of</c><00:20:42.990><c> the</c><00:20:43.019><c> C</c><00:20:43.230><c> code</c><00:20:43.440><c> that</c>

00:20:43.639 --> 00:20:43.649 align:start position:0%
which are the strings of the C code that
 

00:20:43.649 --> 00:20:45.980 align:start position:0%
which are the strings of the C code that
you<00:20:43.740><c> basically</c><00:20:43.889><c> want</c><00:20:44.250><c> to</c><00:20:44.309><c> put</c><00:20:44.460><c> in</c><00:20:44.779><c> there</c><00:20:45.779><c> can</c>

00:20:45.980 --> 00:20:45.990 align:start position:0%
you basically want to put in there can
 

00:20:45.990 --> 00:20:47.570 align:start position:0%
you basically want to put in there can
be<00:20:46.019><c> more</c><00:20:46.500><c> than</c><00:20:46.559><c> one</c><00:20:46.799><c> of</c><00:20:46.919><c> these</c><00:20:47.039><c> strings</c><00:20:47.370><c> and</c>

00:20:47.570 --> 00:20:47.580 align:start position:0%
be more than one of these strings and
 

00:20:47.580 --> 00:20:50.629 align:start position:0%
be more than one of these strings and
they're<00:20:47.669><c> concatenated</c><00:20:48.240><c> together</c><00:20:48.950><c> and</c><00:20:49.950><c> you</c>

00:20:50.629 --> 00:20:50.639 align:start position:0%
they're concatenated together and you
 

00:20:50.639 --> 00:20:52.850 align:start position:0%
they're concatenated together and you
can<00:20:50.879><c> function</c><00:20:51.389><c> call</c><00:20:51.570><c> in</c><00:20:51.720><c> between</c><00:20:51.990><c> them</c><00:20:52.200><c> you</c>

00:20:52.850 --> 00:20:52.860 align:start position:0%
can function call in between them you
 

00:20:52.860 --> 00:20:55.129 align:start position:0%
can function call in between them you
need<00:20:53.009><c> a</c><00:20:53.039><c> vertex</c><00:20:53.340><c> shader</c><00:20:53.639><c> object</c><00:20:54.090><c> and</c><00:20:54.299><c> then</c>

00:20:55.129 --> 00:20:55.139 align:start position:0%
need a vertex shader object and then
 

00:20:55.139 --> 00:20:56.720 align:start position:0%
need a vertex shader object and then
also<00:20:55.320><c> it's</c><00:20:55.559><c> the</c><00:20:55.649><c> exact</c><00:20:55.889><c> same</c><00:20:55.919><c> thing</c><00:20:56.399><c> except</c>

00:20:56.720 --> 00:20:56.730 align:start position:0%
also it's the exact same thing except
 

00:20:56.730 --> 00:20:57.210 align:start position:0%
also it's the exact same thing except
for<00:20:56.759><c> the</c><00:20:56.940><c> fry</c>

00:20:57.210 --> 00:20:57.220 align:start position:0%
for the fry
 

00:20:57.220 --> 00:21:00.090 align:start position:0%
for the fry
and<00:20:57.340><c> shader</c><00:20:58.140><c> when</c><00:20:59.140><c> you</c><00:20:59.230><c> have</c><00:20:59.380><c> these</c><00:20:59.559><c> two</c><00:20:59.799><c> these</c>

00:21:00.090 --> 00:21:00.100 align:start position:0%
and shader when you have these two these
 

00:21:00.100 --> 00:21:02.940 align:start position:0%
and shader when you have these two these
two<00:21:00.159><c> objects</c><00:21:00.850><c> created</c><00:21:01.230><c> you</c><00:21:02.230><c> you</c><00:21:02.770><c> basically</c>

00:21:02.940 --> 00:21:02.950 align:start position:0%
two objects created you you basically
 

00:21:02.950 --> 00:21:05.370 align:start position:0%
two objects created you you basically
pass<00:21:03.669><c> each</c><00:21:04.090><c> of</c><00:21:04.330><c> those</c><00:21:04.510><c> through</c><00:21:04.870><c> a</c><00:21:04.900><c> compile</c>

00:21:05.370 --> 00:21:05.380 align:start position:0%
pass each of those through a compile
 

00:21:05.380 --> 00:21:07.860 align:start position:0%
pass each of those through a compile
stage<00:21:05.740><c> which</c><00:21:06.549><c> compiles</c><00:21:07.090><c> it</c><00:21:07.179><c> onto</c><00:21:07.570><c> the</c><00:21:07.600><c> machine</c>

00:21:07.860 --> 00:21:07.870 align:start position:0%
stage which compiles it onto the machine
 

00:21:07.870 --> 00:21:10.560 align:start position:0%
stage which compiles it onto the machine
code<00:21:08.289><c> which</c><00:21:08.530><c> then</c><00:21:08.909><c> gets</c><00:21:09.909><c> passed</c><00:21:10.210><c> into</c><00:21:10.450><c> a</c>

00:21:10.560 --> 00:21:10.570 align:start position:0%
code which then gets passed into a
 

00:21:10.570 --> 00:21:15.779 align:start position:0%
code which then gets passed into a
linker<00:21:12.030><c> which</c><00:21:13.030><c> is</c><00:21:13.270><c> a</c><00:21:14.100><c> interesting</c><00:21:15.100><c> regardless</c>

00:21:15.779 --> 00:21:15.789 align:start position:0%
linker which is a interesting regardless
 

00:21:15.789 --> 00:21:17.880 align:start position:0%
linker which is a interesting regardless
these<00:21:16.059><c> things</c><00:21:16.330><c> now</c><00:21:16.480><c> with</c><00:21:16.720><c> four</c><00:21:17.289><c> shaders</c><00:21:17.620><c> but</c>

00:21:17.880 --> 00:21:17.890 align:start position:0%
these things now with four shaders but
 

00:21:17.890 --> 00:21:19.950 align:start position:0%
these things now with four shaders but
it<00:21:18.340><c> goes</c><00:21:18.789><c> into</c><00:21:19.000><c> a</c><00:21:19.120><c> linker</c><00:21:19.480><c> and</c><00:21:19.630><c> then</c><00:21:19.720><c> it</c><00:21:19.809><c> builds</c>

00:21:19.950 --> 00:21:19.960 align:start position:0%
it goes into a linker and then it builds
 

00:21:19.960 --> 00:21:22.409 align:start position:0%
it goes into a linker and then it builds
a<00:21:20.260><c> final</c><00:21:20.740><c> program</c><00:21:21.130><c> object</c><00:21:21.549><c> and</c><00:21:21.730><c> that</c><00:21:21.760><c> is</c><00:21:22.179><c> what</c>

00:21:22.409 --> 00:21:22.419 align:start position:0%
a final program object and that is what
 

00:21:22.419 --> 00:21:25.320 align:start position:0%
a final program object and that is what
you<00:21:23.049><c> then</c><00:21:23.320><c> you</c><00:21:23.650><c> use</c><00:21:23.980><c> that</c><00:21:24.010><c> program</c><00:21:24.549><c> object</c><00:21:25.150><c> and</c>

00:21:25.320 --> 00:21:25.330 align:start position:0%
you then you use that program object and
 

00:21:25.330 --> 00:21:26.970 align:start position:0%
you then you use that program object and
start<00:21:25.630><c> drawing</c><00:21:25.900><c> primitives</c><00:21:26.140><c> and</c><00:21:26.470><c> that</c><00:21:26.830><c> the</c>

00:21:26.970 --> 00:21:26.980 align:start position:0%
start drawing primitives and that the
 

00:21:26.980 --> 00:21:31.169 align:start position:0%
start drawing primitives and that the
shader<00:21:27.220><c> will</c><00:21:27.400><c> be</c><00:21:27.490><c> applied</c><00:21:27.760><c> to</c><00:21:28.000><c> those</c><00:21:30.179><c> the</c>

00:21:31.169 --> 00:21:31.179 align:start position:0%
shader will be applied to those the
 

00:21:31.179 --> 00:21:34.200 align:start position:0%
shader will be applied to those the
language<00:21:31.360><c> is</c><00:21:31.720><c> he</c><00:21:32.260><c> inspired</c><00:21:32.970><c> it's</c><00:21:33.970><c> got</c><00:21:34.120><c> the</c>

00:21:34.200 --> 00:21:34.210 align:start position:0%
language is he inspired it's got the
 

00:21:34.210 --> 00:21:37.529 align:start position:0%
language is he inspired it's got the
usual<00:21:34.419><c> main</c><00:21:35.200><c> entry</c><00:21:35.530><c> point</c><00:21:36.179><c> the</c><00:21:37.179><c> language</c>

00:21:37.529 --> 00:21:37.539 align:start position:0%
usual main entry point the language
 

00:21:37.539 --> 00:21:40.620 align:start position:0%
usual main entry point the language
supports<00:21:38.490><c> looping</c><00:21:39.490><c> and</c><00:21:39.669><c> branching</c><00:21:40.419><c> and</c><00:21:40.480><c> all</c>

00:21:40.620 --> 00:21:40.630 align:start position:0%
supports looping and branching and all
 

00:21:40.630 --> 00:21:41.820 align:start position:0%
supports looping and branching and all
those<00:21:40.750><c> other</c><00:21:40.960><c> things</c><00:21:41.020><c> just</c><00:21:41.559><c> like</c><00:21:41.679><c> you'd</c>

00:21:41.820 --> 00:21:41.830 align:start position:0%
those other things just like you'd
 

00:21:41.830 --> 00:21:48.390 align:start position:0%
those other things just like you'd
expect<00:21:44.159><c> there</c><00:21:45.159><c> are</c><00:21:45.280><c> no</c><00:21:45.429><c> pointers</c><00:21:47.130><c> since</c><00:21:48.130><c> uh</c>

00:21:48.390 --> 00:21:48.400 align:start position:0%
expect there are no pointers since uh
 

00:21:48.400 --> 00:21:50.669 align:start position:0%
expect there are no pointers since uh
since<00:21:48.730><c> really</c><00:21:49.270><c> you're</c><00:21:49.600><c> not</c><00:21:49.650><c> you're</c><00:21:50.650><c> not</c>

00:21:50.669 --> 00:21:50.679 align:start position:0%
since really you're not you're not
 

00:21:50.679 --> 00:21:52.500 align:start position:0%
since really you're not you're not
accessing<00:21:51.190><c> memory</c><00:21:51.520><c> directly</c><00:21:52.030><c> there's</c><00:21:52.390><c> no</c>

00:21:52.500 --> 00:21:52.510 align:start position:0%
accessing memory directly there's no
 

00:21:52.510 --> 00:21:54.360 align:start position:0%
accessing memory directly there's no
real<00:21:52.690><c> concept</c><00:21:52.900><c> of</c><00:21:53.260><c> accessing</c><00:21:53.740><c> memory</c><00:21:53.890><c> in</c><00:21:54.190><c> this</c>

00:21:54.360 --> 00:21:54.370 align:start position:0%
real concept of accessing memory in this
 

00:21:54.370 --> 00:21:56.370 align:start position:0%
real concept of accessing memory in this
the<00:21:55.000><c> idea</c><00:21:55.240><c> of</c><00:21:55.330><c> having</c><00:21:55.480><c> pointers</c><00:21:56.020><c> doesn't</c>

00:21:56.370 --> 00:21:56.380 align:start position:0%
the idea of having pointers doesn't
 

00:21:56.380 --> 00:21:57.960 align:start position:0%
the idea of having pointers doesn't
really<00:21:56.650><c> make</c><00:21:56.830><c> sense</c><00:21:56.890><c> in</c><00:21:57.280><c> this</c><00:21:57.340><c> language</c><00:21:57.549><c> so</c>

00:21:57.960 --> 00:21:57.970 align:start position:0%
really make sense in this language so
 

00:21:57.970 --> 00:22:03.570 align:start position:0%
really make sense in this language so
that<00:21:58.179><c> sign</c><00:21:58.809><c> tax</c><00:21:59.049><c> you</c><00:21:59.409><c> will</c><00:21:59.559><c> not</c><00:21:59.650><c> see</c><00:22:02.460><c> there</c><00:22:03.460><c> are</c>

00:22:03.570 --> 00:22:03.580 align:start position:0%
that sign tax you will not see there are
 

00:22:03.580 --> 00:22:05.789 align:start position:0%
that sign tax you will not see there are
new<00:22:03.730><c> data</c><00:22:03.970><c> types</c><00:22:04.260><c> since</c><00:22:05.260><c> the</c><00:22:05.470><c> hardware</c>

00:22:05.789 --> 00:22:05.799 align:start position:0%
new data types since the hardware
 

00:22:05.799 --> 00:22:10.169 align:start position:0%
new data types since the hardware
registers<00:22:05.980><c> are</c><00:22:06.580><c> all</c><00:22:06.850><c> up</c><00:22:07.120><c> our</c><00:22:07.990><c> vectors</c><00:22:09.179><c> there</c>

00:22:10.169 --> 00:22:10.179 align:start position:0%
registers are all up our vectors there
 

00:22:10.179 --> 00:22:12.620 align:start position:0%
registers are all up our vectors there
are<00:22:10.270><c> new</c><00:22:10.390><c> data</c><00:22:10.570><c> types</c><00:22:10.809><c> to</c><00:22:10.990><c> support</c><00:22:11.380><c> that</c><00:22:11.620><c> and</c>

00:22:12.620 --> 00:22:12.630 align:start position:0%
are new data types to support that and
 

00:22:12.630 --> 00:22:17.419 align:start position:0%
are new data types to support that and
also<00:22:13.630><c> there's</c><00:22:13.990><c> a</c><00:22:14.049><c> matrix</c><00:22:14.440><c> data</c><00:22:14.679><c> type</c><00:22:14.890><c> as</c><00:22:15.039><c> well</c>

00:22:17.419 --> 00:22:17.429 align:start position:0%
 
 

00:22:17.429 --> 00:22:19.770 align:start position:0%
 
since<00:22:18.429><c> we're</c><00:22:18.669><c> introducing</c><00:22:19.150><c> vector</c><00:22:19.600><c> data</c>

00:22:19.770 --> 00:22:19.780 align:start position:0%
since we're introducing vector data
 

00:22:19.780 --> 00:22:22.200 align:start position:0%
since we're introducing vector data
types<00:22:20.140><c> what</c><00:22:20.919><c> happens</c><00:22:21.280><c> if</c><00:22:21.400><c> you</c><00:22:21.490><c> want</c><00:22:21.610><c> to</c><00:22:21.760><c> pick</c><00:22:21.970><c> a</c>

00:22:22.200 --> 00:22:22.210 align:start position:0%
types what happens if you want to pick a
 

00:22:22.210 --> 00:22:24.600 align:start position:0%
types what happens if you want to pick a
scalar<00:22:22.840><c> out</c><00:22:23.230><c> of</c><00:22:23.590><c> that</c><00:22:23.799><c> you</c><00:22:24.250><c> want</c><00:22:24.400><c> to</c><00:22:24.490><c> get</c>

00:22:24.600 --> 00:22:24.610 align:start position:0%
scalar out of that you want to get
 

00:22:24.610 --> 00:22:26.340 align:start position:0%
scalar out of that you want to get
access<00:22:24.760><c> to</c><00:22:25.059><c> a</c><00:22:25.090><c> scalar</c><00:22:25.600><c> or</c><00:22:25.720><c> you</c><00:22:26.140><c> want</c><00:22:26.289><c> to</c>

00:22:26.340 --> 00:22:26.350 align:start position:0%
access to a scalar or you want to
 

00:22:26.350 --> 00:22:28.289 align:start position:0%
access to a scalar or you want to
reorder<00:22:26.620><c> the</c><00:22:27.130><c> scalar</c><00:22:27.460><c> components</c><00:22:27.970><c> in</c><00:22:28.120><c> a</c>

00:22:28.289 --> 00:22:28.299 align:start position:0%
reorder the scalar components in a
 

00:22:28.299 --> 00:22:30.570 align:start position:0%
reorder the scalar components in a
vector<00:22:28.659><c> well</c><00:22:29.110><c> there's</c><00:22:29.559><c> use</c><00:22:29.860><c> new</c><00:22:30.159><c> sign</c>

00:22:30.570 --> 00:22:30.580 align:start position:0%
vector well there's use new sign
 

00:22:30.580 --> 00:22:33.270 align:start position:0%
vector well there's use new sign
textures<00:22:30.940><c> through</c><00:22:31.090><c> the</c><00:22:31.299><c> length</c><00:22:31.450><c> I</c><00:22:32.070><c> we</c><00:22:33.070><c> can</c>

00:22:33.270 --> 00:22:33.280 align:start position:0%
textures through the length I we can
 

00:22:33.280 --> 00:22:35.070 align:start position:0%
textures through the length I we can
pick<00:22:33.460><c> out</c><00:22:33.549><c> a</c><00:22:33.610><c> certain</c><00:22:34.210><c> component</c><00:22:34.659><c> or</c><00:22:34.750><c> reorder</c>

00:22:35.070 --> 00:22:35.080 align:start position:0%
pick out a certain component or reorder
 

00:22:35.080 --> 00:22:38.880 align:start position:0%
pick out a certain component or reorder
them<00:22:36.480><c> there</c><00:22:37.480><c> are</c><00:22:37.570><c> new</c><00:22:37.690><c> qualifiers</c><00:22:38.260><c> you</c><00:22:38.770><c> know</c>

00:22:38.880 --> 00:22:38.890 align:start position:0%
them there are new qualifiers you know
 

00:22:38.890 --> 00:22:41.880 align:start position:0%
them there are new qualifiers you know
you've<00:22:39.309><c> got</c><00:22:39.340><c> the</c><00:22:39.610><c> see</c><00:22:39.820><c> program</c><00:22:40.470><c> for</c><00:22:41.470><c> a</c><00:22:41.500><c> vertex</c>

00:22:41.880 --> 00:22:41.890 align:start position:0%
you've got the see program for a vertex
 

00:22:41.890 --> 00:22:43.440 align:start position:0%
you've got the see program for a vertex
shader<00:22:42.190><c> and</c><00:22:42.309><c> then</c><00:22:42.520><c> you</c><00:22:42.610><c> can</c><00:22:42.760><c> see</c><00:22:42.909><c> program</c><00:22:43.270><c> for</c>

00:22:43.440 --> 00:22:43.450 align:start position:0%
shader and then you can see program for
 

00:22:43.450 --> 00:22:45.000 align:start position:0%
shader and then you can see program for
a<00:22:43.480><c> fragment</c><00:22:43.870><c> shader</c><00:22:44.020><c> they're</c><00:22:44.230><c> separate</c><00:22:44.590><c> how</c>

00:22:45.000 --> 00:22:45.010 align:start position:0%
a fragment shader they're separate how
 

00:22:45.010 --> 00:22:46.620 align:start position:0%
a fragment shader they're separate how
do<00:22:45.070><c> you</c><00:22:45.220><c> get</c><00:22:45.340><c> communication</c><00:22:46.000><c> in</c><00:22:46.120><c> between</c><00:22:46.450><c> them</c>

00:22:46.620 --> 00:22:46.630 align:start position:0%
do you get communication in between them
 

00:22:46.630 --> 00:22:48.390 align:start position:0%
do you get communication in between them
well<00:22:46.870><c> the</c><00:22:46.960><c> way</c><00:22:47.080><c> that's</c><00:22:47.320><c> done</c><00:22:47.530><c> is</c><00:22:47.770><c> via</c>

00:22:48.390 --> 00:22:48.400 align:start position:0%
well the way that's done is via
 

00:22:48.400 --> 00:22:50.370 align:start position:0%
well the way that's done is via
declaring<00:22:49.240><c> a</c><00:22:49.299><c> variable</c><00:22:49.330><c> with</c><00:22:49.840><c> a</c><00:22:49.870><c> particular</c>

00:22:50.370 --> 00:22:50.380 align:start position:0%
declaring a variable with a particular
 

00:22:50.380 --> 00:22:52.560 align:start position:0%
declaring a variable with a particular
qualifier<00:22:50.890><c> in</c><00:22:51.190><c> both</c><00:22:51.700><c> programs</c><00:22:51.940><c> and</c><00:22:52.360><c> having</c>

00:22:52.560 --> 00:22:52.570 align:start position:0%
qualifier in both programs and having
 

00:22:52.570 --> 00:22:54.360 align:start position:0%
qualifier in both programs and having
the<00:22:52.659><c> names</c><00:22:52.870><c> match</c><00:22:53.169><c> that's</c><00:22:53.740><c> what</c><00:22:53.919><c> the</c><00:22:54.039><c> linker</c>

00:22:54.360 --> 00:22:54.370 align:start position:0%
the names match that's what the linker
 

00:22:54.370 --> 00:22:56.460 align:start position:0%
the names match that's what the linker
stage<00:22:54.610><c> does</c><00:22:54.940><c> is</c><00:22:55.150><c> it</c><00:22:55.600><c> ties</c><00:22:55.840><c> up</c><00:22:56.049><c> those</c><00:22:56.260><c> loose</c>

00:22:56.460 --> 00:22:56.470 align:start position:0%
stage does is it ties up those loose
 

00:22:56.470 --> 00:23:01.529 align:start position:0%
stage does is it ties up those loose
ends<00:22:57.390><c> and</c><00:22:58.530><c> then</c><00:22:59.530><c> we</c><00:22:59.679><c> have</c><00:23:00.150><c> there</c><00:23:01.150><c> are</c><00:23:01.179><c> a</c><00:23:01.330><c> bunch</c>

00:23:01.529 --> 00:23:01.539 align:start position:0%
ends and then we have there are a bunch
 

00:23:01.539 --> 00:23:03.539 align:start position:0%
ends and then we have there are a bunch
of<00:23:01.630><c> intrinsic</c><00:23:01.990><c> variable</c><00:23:02.559><c> just</c><00:23:02.799><c> pre</c><00:23:03.400><c> defined</c>

00:23:03.539 --> 00:23:03.549 align:start position:0%
of intrinsic variable just pre defined
 

00:23:03.549 --> 00:23:06.360 align:start position:0%
of intrinsic variable just pre defined
variables<00:23:04.240><c> that</c><00:23:04.299><c> are</c><00:23:04.390><c> there</c><00:23:04.659><c> and</c><00:23:04.980><c> either</c><00:23:05.980><c> they</c>

00:23:06.360 --> 00:23:06.370 align:start position:0%
variables that are there and either they
 

00:23:06.370 --> 00:23:09.210 align:start position:0%
variables that are there and either they
they<00:23:07.360><c> allow</c><00:23:07.600><c> you</c><00:23:07.659><c> to</c><00:23:07.750><c> access</c><00:23:07.990><c> OpenGL</c><00:23:08.710><c> state</c><00:23:09.010><c> or</c>

00:23:09.210 --> 00:23:09.220 align:start position:0%
they allow you to access OpenGL state or
 

00:23:09.220 --> 00:23:10.830 align:start position:0%
they allow you to access OpenGL state or
you<00:23:09.730><c> write</c><00:23:10.030><c> your</c><00:23:10.299><c> value</c>

00:23:10.830 --> 00:23:10.840 align:start position:0%
you write your value
 

00:23:10.840 --> 00:23:15.780 align:start position:0%
you write your value
into<00:23:11.110><c> these</c><00:23:11.230><c> predefined</c><00:23:11.560><c> variables</c><00:23:14.370><c> so</c><00:23:15.370><c> let's</c>

00:23:15.780 --> 00:23:15.790 align:start position:0%
into these predefined variables so let's
 

00:23:15.790 --> 00:23:17.880 align:start position:0%
into these predefined variables so let's
take<00:23:15.940><c> a</c><00:23:15.970><c> look</c><00:23:16.210><c> at</c><00:23:16.270><c> the</c><00:23:16.450><c> the</c><00:23:16.870><c> qualifiers</c><00:23:17.410><c> the</c>

00:23:17.880 --> 00:23:17.890 align:start position:0%
take a look at the the qualifiers the
 

00:23:17.890 --> 00:23:22.950 align:start position:0%
take a look at the the qualifiers the
type<00:23:18.100><c> qualifiers</c><00:23:18.610><c> that</c><00:23:18.850><c> exist</c><00:23:21.330><c> the</c><00:23:22.330><c> first</c>

00:23:22.950 --> 00:23:22.960 align:start position:0%
type qualifiers that exist the first
 

00:23:22.960 --> 00:23:26.490 align:start position:0%
type qualifiers that exist the first
stage<00:23:23.140><c> is</c><00:23:23.440><c> the</c><00:23:24.120><c> attribute</c><00:23:25.320><c> inside</c><00:23:26.320><c> your</c>

00:23:26.490 --> 00:23:26.500 align:start position:0%
stage is the attribute inside your
 

00:23:26.500 --> 00:23:30.540 align:start position:0%
stage is the attribute inside your
vertex<00:23:26.830><c> shader</c><00:23:27.160><c> to</c><00:23:27.790><c> access</c><00:23:28.480><c> the</c><00:23:29.550><c> vertex</c>

00:23:30.540 --> 00:23:30.550 align:start position:0%
vertex shader to access the vertex
 

00:23:30.550 --> 00:23:32.430 align:start position:0%
vertex shader to access the vertex
attribute<00:23:31.000><c> you</c><00:23:31.630><c> basically</c><00:23:31.870><c> just</c><00:23:32.020><c> declare</c>

00:23:32.430 --> 00:23:32.440 align:start position:0%
attribute you basically just declare
 

00:23:32.440 --> 00:23:34.070 align:start position:0%
attribute you basically just declare
something<00:23:32.710><c> with</c><00:23:32.950><c> the</c><00:23:33.040><c> attribute</c><00:23:33.370><c> qualifier</c>

00:23:34.070 --> 00:23:34.080 align:start position:0%
something with the attribute qualifier
 

00:23:34.080 --> 00:23:36.660 align:start position:0%
something with the attribute qualifier
they<00:23:35.080><c> only</c><00:23:35.500><c> make</c><00:23:35.770><c> sense</c><00:23:35.920><c> to</c><00:23:36.070><c> be</c><00:23:36.220><c> declared</c><00:23:36.520><c> in</c><00:23:36.610><c> a</c>

00:23:36.660 --> 00:23:36.670 align:start position:0%
they only make sense to be declared in a
 

00:23:36.670 --> 00:23:39.750 align:start position:0%
they only make sense to be declared in a
vertex<00:23:36.970><c> shader</c><00:23:37.240><c> and</c><00:23:38.280><c> attributes</c><00:23:39.280><c> they</c><00:23:39.430><c> change</c>

00:23:39.750 --> 00:23:39.760 align:start position:0%
vertex shader and attributes they change
 

00:23:39.760 --> 00:23:44.010 align:start position:0%
vertex shader and attributes they change
at<00:23:39.970><c> most</c><00:23:40.330><c> once</c><00:23:40.840><c> per</c><00:23:41.050><c> vertex</c><00:23:41.940><c> and</c><00:23:42.940><c> there</c><00:23:43.900><c> we</c>

00:23:44.010 --> 00:23:44.020 align:start position:0%
at most once per vertex and there we
 

00:23:44.020 --> 00:23:47.520 align:start position:0%
at most once per vertex and there we
don't<00:23:44.170><c> like</c><00:23:44.410><c> can't</c><00:23:44.680><c> write</c><00:23:44.830><c> to</c><00:23:44.950><c> them</c><00:23:46.530><c> think</c>

00:23:47.520 --> 00:23:47.530 align:start position:0%
don't like can't write to them think
 

00:23:47.530 --> 00:23:49.980 align:start position:0%
don't like can't write to them think
variables<00:23:48.250><c> are</c><00:23:48.370><c> declared</c><00:23:48.820><c> with</c><00:23:49.270><c> the</c><00:23:49.390><c> uniform</c>

00:23:49.980 --> 00:23:49.990 align:start position:0%
variables are declared with the uniform
 

00:23:49.990 --> 00:23:53.910 align:start position:0%
variables are declared with the uniform
qualifier<00:23:51.900><c> basically</c><00:23:52.900><c> those</c><00:23:53.650><c> are</c><00:23:53.800><c> things</c>

00:23:53.910 --> 00:23:53.920 align:start position:0%
qualifier basically those are things
 

00:23:53.920 --> 00:23:55.260 align:start position:0%
qualifier basically those are things
that<00:23:54.070><c> are</c><00:23:54.160><c> set</c><00:23:54.400><c> outside</c><00:23:54.550><c> the</c><00:23:54.850><c> shader</c><00:23:55.090><c> and</c>

00:23:55.260 --> 00:23:55.270 align:start position:0%
that are set outside the shader and
 

00:23:55.270 --> 00:23:57.720 align:start position:0%
that are set outside the shader and
their<00:23:56.020><c> uniform</c><00:23:56.710><c> throughout</c><00:23:56.920><c> the</c><00:23:57.160><c> execution</c>

00:23:57.720 --> 00:23:57.730 align:start position:0%
their uniform throughout the execution
 

00:23:57.730 --> 00:24:00.560 align:start position:0%
their uniform throughout the execution
of<00:23:57.850><c> that</c><00:23:57.940><c> shader</c><00:23:58.420><c> so</c><00:23:59.290><c> they're</c><00:23:59.680><c> read-only</c><00:23:59.890><c> and</c>

00:24:00.560 --> 00:24:00.570 align:start position:0%
of that shader so they're read-only and
 

00:24:00.570 --> 00:24:03.660 align:start position:0%
of that shader so they're read-only and
they're<00:24:01.570><c> frequently</c><00:24:02.110><c> frequency</c><00:24:03.100><c> of</c><00:24:03.190><c> changes</c>

00:24:03.660 --> 00:24:03.670 align:start position:0%
they're frequently frequency of changes
 

00:24:03.670 --> 00:24:05.250 align:start position:0%
they're frequently frequency of changes
that<00:24:03.790><c> most</c><00:24:04.030><c> once</c><00:24:04.330><c> for</c><00:24:04.540><c> primitive</c><00:24:04.900><c> things</c><00:24:05.140><c> like</c>

00:24:05.250 --> 00:24:05.260 align:start position:0%
that most once for primitive things like
 

00:24:05.260 --> 00:24:07.800 align:start position:0%
that most once for primitive things like
the<00:24:05.380><c> OpenGL</c><00:24:05.830><c> state</c><00:24:06.100><c> and</c><00:24:06.340><c> even</c><00:24:07.060><c> in</c><00:24:07.390><c> fragment</c>

00:24:07.800 --> 00:24:07.810 align:start position:0%
the OpenGL state and even in fragment
 

00:24:07.810 --> 00:24:09.480 align:start position:0%
the OpenGL state and even in fragment
program<00:24:08.050><c> that</c><00:24:08.170><c> even</c><00:24:08.320><c> texture</c><00:24:08.740><c> the</c><00:24:09.190><c> texture</c>

00:24:09.480 --> 00:24:09.490 align:start position:0%
program that even texture the texture
 

00:24:09.490 --> 00:24:14.400 align:start position:0%
program that even texture the texture
data<00:24:09.730><c> is</c><00:24:10.030><c> considered</c><00:24:10.450><c> uniform</c><00:24:10.930><c> as</c><00:24:11.080><c> well</c><00:24:13.410><c> the</c>

00:24:14.400 --> 00:24:14.410 align:start position:0%
data is considered uniform as well the
 

00:24:14.410 --> 00:24:15.720 align:start position:0%
data is considered uniform as well the
other<00:24:14.560><c> thing</c><00:24:14.740><c> just</c><00:24:15.070><c> like</c><00:24:15.190><c> see</c><00:24:15.400><c> you've</c><00:24:15.580><c> also</c>

00:24:15.720 --> 00:24:15.730 align:start position:0%
other thing just like see you've also
 

00:24:15.730 --> 00:24:17.160 align:start position:0%
other thing just like see you've also
got<00:24:15.970><c> comped</c><00:24:16.450><c> which</c><00:24:16.600><c> is</c><00:24:16.750><c> just</c><00:24:16.900><c> in</c><00:24:17.050><c> line</c>

00:24:17.160 --> 00:24:17.170 align:start position:0%
got comped which is just in line
 

00:24:17.170 --> 00:24:18.930 align:start position:0%
got comped which is just in line
constants<00:24:17.710><c> you</c><00:24:18.010><c> want</c><00:24:18.160><c> to</c><00:24:18.250><c> declare</c><00:24:18.370><c> in</c><00:24:18.760><c> your</c>

00:24:18.930 --> 00:24:18.940 align:start position:0%
constants you want to declare in your
 

00:24:18.940 --> 00:24:21.540 align:start position:0%
constants you want to declare in your
program<00:24:19.330><c> obviously</c><00:24:20.020><c> read</c><00:24:20.170><c> only</c><00:24:20.290><c> if</c><00:24:20.620><c> you</c><00:24:21.310><c> don't</c>

00:24:21.540 --> 00:24:21.550 align:start position:0%
program obviously read only if you don't
 

00:24:21.550 --> 00:24:23.490 align:start position:0%
program obviously read only if you don't
put<00:24:21.730><c> a</c><00:24:21.760><c> qualifier</c><00:24:22.270><c> in</c><00:24:22.540><c> your</c><00:24:22.960><c> just</c><00:24:23.140><c> declaring</c>

00:24:23.490 --> 00:24:23.500 align:start position:0%
put a qualifier in your just declaring
 

00:24:23.500 --> 00:24:25.680 align:start position:0%
put a qualifier in your just declaring
really<00:24:23.860><c> a</c><00:24:24.010><c> temporary</c><00:24:24.820><c> variable</c><00:24:25.240><c> just</c><00:24:25.540><c> for</c>

00:24:25.680 --> 00:24:25.690 align:start position:0%
really a temporary variable just for
 

00:24:25.690 --> 00:24:28.500 align:start position:0%
really a temporary variable just for
scratch<00:24:25.900><c> the</c><00:24:26.320><c> space</c><00:24:27.000><c> it's</c><00:24:28.000><c> important</c><00:24:28.390><c> to</c><00:24:28.450><c> note</c>

00:24:28.500 --> 00:24:28.510 align:start position:0%
scratch the space it's important to note
 

00:24:28.510 --> 00:24:31.050 align:start position:0%
scratch the space it's important to note
like<00:24:28.900><c> I</c><00:24:28.990><c> said</c><00:24:29.170><c> earlier</c><00:24:29.430><c> the</c><00:24:30.430><c> data</c><00:24:30.670><c> in</c><00:24:30.880><c> those</c>

00:24:31.050 --> 00:24:31.060 align:start position:0%
like I said earlier the data in those
 

00:24:31.060 --> 00:24:33.180 align:start position:0%
like I said earlier the data in those
will<00:24:31.330><c> not</c><00:24:31.570><c> persist</c><00:24:32.050><c> between</c><00:24:32.530><c> executions</c><00:24:33.100><c> of</c>

00:24:33.180 --> 00:24:33.190 align:start position:0%
will not persist between executions of
 

00:24:33.190 --> 00:24:34.590 align:start position:0%
will not persist between executions of
the<00:24:33.280><c> shader</c><00:24:33.490><c> you</c><00:24:33.790><c> can't</c><00:24:34.030><c> write</c><00:24:34.210><c> something</c><00:24:34.540><c> in</c>

00:24:34.590 --> 00:24:34.600 align:start position:0%
the shader you can't write something in
 

00:24:34.600 --> 00:24:36.690 align:start position:0%
the shader you can't write something in
to<00:24:34.750><c> attempt</c><00:24:35.050><c> unexpected</c><00:24:35.950><c> to</c><00:24:36.040><c> be</c><00:24:36.190><c> there</c><00:24:36.400><c> on</c><00:24:36.610><c> the</c>

00:24:36.690 --> 00:24:36.700 align:start position:0%
to attempt unexpected to be there on the
 

00:24:36.700 --> 00:24:38.340 align:start position:0%
to attempt unexpected to be there on the
deck<00:24:36.910><c> we</c><00:24:37.120><c> process</c><00:24:37.510><c> of</c><00:24:37.600><c> the</c><00:24:37.690><c> next</c><00:24:37.900><c> vertex</c><00:24:38.170><c> I</c>

00:24:38.340 --> 00:24:38.350 align:start position:0%
deck we process of the next vertex I
 

00:24:38.350 --> 00:24:41.010 align:start position:0%
deck we process of the next vertex I
wasn't<00:24:38.770><c> going</c><00:24:38.860><c> to</c><00:24:38.920><c> happen</c><00:24:39.840><c> they</c><00:24:40.840><c> are</c>

00:24:41.010 --> 00:24:41.020 align:start position:0%
wasn't going to happen they are
 

00:24:41.020 --> 00:24:45.020 align:start position:0%
wasn't going to happen they are
readwrite<00:24:41.560><c> access</c><00:24:42.210><c> and</c><00:24:43.530><c> then</c><00:24:44.530><c> there's</c><00:24:44.800><c> a</c>

00:24:45.020 --> 00:24:45.030 align:start position:0%
readwrite access and then there's a
 

00:24:45.030 --> 00:24:49.770 align:start position:0%
readwrite access and then there's a
qualifier<00:24:46.030><c> varying</c><00:24:47.460><c> basically</c><00:24:48.780><c> variables</c>

00:24:49.770 --> 00:24:49.780 align:start position:0%
qualifier varying basically variables
 

00:24:49.780 --> 00:24:51.470 align:start position:0%
qualifier varying basically variables
declared<00:24:49.930><c> with</c><00:24:50.350><c> the</c><00:24:50.440><c> varying</c><00:24:50.830><c> types</c><00:24:51.070><c> are</c>

00:24:51.470 --> 00:24:51.480 align:start position:0%
declared with the varying types are
 

00:24:51.480 --> 00:24:53.700 align:start position:0%
declared with the varying types are
basically<00:24:52.480><c> your</c><00:24:52.690><c> your</c><00:24:53.080><c> pipeline</c><00:24:53.560><c> of</c>

00:24:53.700 --> 00:24:53.710 align:start position:0%
basically your your pipeline of
 

00:24:53.710 --> 00:24:55.890 align:start position:0%
basically your your pipeline of
communication<00:24:54.370><c> between</c><00:24:54.730><c> the</c><00:24:55.300><c> vertex</c><00:24:55.660><c> shader</c>

00:24:55.890 --> 00:24:55.900 align:start position:0%
communication between the vertex shader
 

00:24:55.900 --> 00:24:57.510 align:start position:0%
communication between the vertex shader
and<00:24:55.990><c> the</c><00:24:56.170><c> fragment</c><00:24:56.560><c> shader</c><00:24:56.590><c> declare</c>

00:24:57.510 --> 00:24:57.520 align:start position:0%
and the fragment shader declare
 

00:24:57.520 --> 00:24:59.970 align:start position:0%
and the fragment shader declare
something<00:24:57.790><c> is</c><00:24:58.000><c> varying</c><00:24:58.420><c> the</c><00:24:58.660><c> rasterizer</c><00:24:59.650><c> is</c>

00:24:59.970 --> 00:24:59.980 align:start position:0%
something is varying the rasterizer is
 

00:24:59.980 --> 00:25:01.500 align:start position:0%
something is varying the rasterizer is
going<00:25:00.100><c> to</c><00:25:00.160><c> take</c><00:25:00.370><c> that</c><00:25:00.580><c> value</c><00:25:00.910><c> from</c><00:25:01.240><c> the</c><00:25:01.360><c> vertex</c>

00:25:01.500 --> 00:25:01.510 align:start position:0%
going to take that value from the vertex
 

00:25:01.510 --> 00:25:03.030 align:start position:0%
going to take that value from the vertex
shader<00:25:01.900><c> it's</c><00:25:02.050><c> going</c><00:25:02.170><c> to</c><00:25:02.230><c> interpolate</c><00:25:02.620><c> it</c><00:25:02.860><c> and</c>

00:25:03.030 --> 00:25:03.040 align:start position:0%
shader it's going to interpolate it and
 

00:25:03.040 --> 00:25:05.250 align:start position:0%
shader it's going to interpolate it and
the<00:25:03.130><c> fragment</c><00:25:03.520><c> program</c><00:25:03.820><c> will</c><00:25:04.060><c> get</c><00:25:04.300><c> that</c><00:25:04.720><c> value</c>

00:25:05.250 --> 00:25:05.260 align:start position:0%
the fragment program will get that value
 

00:25:05.260 --> 00:25:09.230 align:start position:0%
the fragment program will get that value
as<00:25:05.530><c> its</c><00:25:05.680><c> interpolated</c><00:25:06.190><c> across</c><00:25:06.730><c> the</c><00:25:06.880><c> scan</c><00:25:07.090><c> line</c>

00:25:09.230 --> 00:25:09.240 align:start position:0%
as its interpolated across the scan line
 

00:25:09.240 --> 00:25:12.019 align:start position:0%
as its interpolated across the scan line
so

00:25:12.019 --> 00:25:12.029 align:start position:0%
so
 

00:25:12.029 --> 00:25:14.180 align:start position:0%
so
let's<00:25:12.989><c> take</c><00:25:13.379><c> a</c><00:25:13.440><c> look</c><00:25:13.619><c> at</c><00:25:13.649><c> some</c><00:25:13.799><c> of</c><00:25:13.859><c> these</c><00:25:14.009><c> new</c>

00:25:14.180 --> 00:25:14.190 align:start position:0%
let's take a look at some of these new
 

00:25:14.190 --> 00:25:18.080 align:start position:0%
let's take a look at some of these new
data<00:25:14.399><c> types</c><00:25:15.379><c> you</c><00:25:16.379><c> basically</c><00:25:16.739><c> have</c><00:25:17.070><c> three</c><00:25:17.429><c> main</c>

00:25:18.080 --> 00:25:18.090 align:start position:0%
data types you basically have three main
 

00:25:18.090 --> 00:25:20.169 align:start position:0%
data types you basically have three main
classes<00:25:18.269><c> of</c><00:25:18.570><c> data</c><00:25:19.080><c> type</c><00:25:19.320><c> you</c><00:25:19.499><c> have</c>

00:25:20.169 --> 00:25:20.179 align:start position:0%
classes of data type you have
 

00:25:20.179 --> 00:25:22.759 align:start position:0%
classes of data type you have
floating-point<00:25:21.179><c> types</c><00:25:21.509><c> there's</c><00:25:22.379><c> an</c><00:25:22.529><c> integer</c>

00:25:22.759 --> 00:25:22.769 align:start position:0%
floating-point types there's an integer
 

00:25:22.769 --> 00:25:26.320 align:start position:0%
floating-point types there's an integer
type<00:25:23.159><c> and</c><00:25:23.460><c> there's</c><00:25:23.639><c> even</c><00:25:23.820><c> a</c><00:25:23.879><c> boolean</c><00:25:24.090><c> type</c><00:25:24.769><c> now</c>

00:25:26.320 --> 00:25:26.330 align:start position:0%
type and there's even a boolean type now
 

00:25:26.330 --> 00:25:28.729 align:start position:0%
type and there's even a boolean type now
you<00:25:27.330><c> can't</c><00:25:27.629><c> expect</c><00:25:27.779><c> that</c><00:25:28.200><c> that</c><00:25:28.289><c> integer</c><00:25:28.590><c> is</c>

00:25:28.729 --> 00:25:28.739 align:start position:0%
you can't expect that that integer is
 

00:25:28.739 --> 00:25:30.200 align:start position:0%
you can't expect that that integer is
actually<00:25:29.129><c> going</c><00:25:29.309><c> to</c><00:25:29.399><c> be</c><00:25:29.429><c> stored</c><00:25:29.789><c> in</c><00:25:29.849><c> a</c><00:25:29.940><c> fixed</c>

00:25:30.200 --> 00:25:30.210 align:start position:0%
actually going to be stored in a fixed
 

00:25:30.210 --> 00:25:31.820 align:start position:0%
actually going to be stored in a fixed
res<00:25:30.359><c> register</c><00:25:30.869><c> so</c><00:25:31.019><c> there's</c><00:25:31.200><c> still</c><00:25:31.409><c> no</c><00:25:31.590><c> like</c>

00:25:31.820 --> 00:25:31.830 align:start position:0%
res register so there's still no like
 

00:25:31.830 --> 00:25:35.450 align:start position:0%
res register so there's still no like
like<00:25:32.159><c> shifting</c><00:25:32.609><c> or</c><00:25:33.229><c> bitwise</c><00:25:34.229><c> operations</c><00:25:35.009><c> but</c>

00:25:35.450 --> 00:25:35.460 align:start position:0%
like shifting or bitwise operations but
 

00:25:35.460 --> 00:25:38.749 align:start position:0%
like shifting or bitwise operations but
the<00:25:36.419><c> type</c><00:25:36.629><c> still</c><00:25:36.899><c> exists</c><00:25:37.429><c> because</c><00:25:38.429><c> some</c><00:25:38.729><c> of</c>

00:25:38.749 --> 00:25:38.759 align:start position:0%
the type still exists because some of
 

00:25:38.759 --> 00:25:42.200 align:start position:0%
the type still exists because some of
the<00:25:38.940><c> functions</c><00:25:39.299><c> expect</c><00:25:39.749><c> it</c><00:25:39.869><c> to</c><00:25:39.989><c> be</c><00:25:40.109><c> there</c><00:25:41.210><c> also</c>

00:25:42.200 --> 00:25:42.210 align:start position:0%
the functions expect it to be there also
 

00:25:42.210 --> 00:25:44.180 align:start position:0%
the functions expect it to be there also
it<00:25:42.330><c> can</c><00:25:42.450><c> these</c><00:25:43.139><c> are</c><00:25:43.289><c> the</c><00:25:43.349><c> vector</c><00:25:43.679><c> types</c><00:25:43.919><c> and</c><00:25:44.099><c> it</c>

00:25:44.180 --> 00:25:44.190 align:start position:0%
it can these are the vector types and it
 

00:25:44.190 --> 00:25:45.649 align:start position:0%
it can these are the vector types and it
can<00:25:44.279><c> be</c><00:25:44.399><c> two</c><00:25:44.580><c> component</c><00:25:44.999><c> three</c><00:25:45.149><c> component</c><00:25:45.539><c> and</c>

00:25:45.649 --> 00:25:45.659 align:start position:0%
can be two component three component and
 

00:25:45.659 --> 00:25:48.469 align:start position:0%
can be two component three component and
four<00:25:45.809><c> component</c><00:25:46.229><c> vectors</c><00:25:46.789><c> and</c><00:25:47.789><c> again</c><00:25:48.210><c> use</c>

00:25:48.469 --> 00:25:48.479 align:start position:0%
four component vectors and again use
 

00:25:48.479 --> 00:25:52.329 align:start position:0%
four component vectors and again use
Swizzle<00:25:48.899><c> and</c><00:25:49.019><c> picard</c><00:25:49.469><c> scalar</c><00:25:49.889><c> components</c>

00:25:52.329 --> 00:25:52.339 align:start position:0%
Swizzle and picard scalar components
 

00:25:52.339 --> 00:25:55.399 align:start position:0%
Swizzle and picard scalar components
also<00:25:53.419><c> they</c><00:25:54.419><c> can</c><00:25:54.629><c> be</c><00:25:54.749><c> accessed</c><00:25:54.960><c> as</c><00:25:55.379><c> a</c>

00:25:55.399 --> 00:25:55.409 align:start position:0%
also they can be accessed as a
 

00:25:55.409 --> 00:25:57.320 align:start position:0%
also they can be accessed as a
zero-based<00:25:55.830><c> array</c><00:25:56.369><c> so</c><00:25:56.669><c> if</c><00:25:56.789><c> you</c><00:25:56.879><c> have</c><00:25:57.029><c> a</c><00:25:57.059><c> vector</c>

00:25:57.320 --> 00:25:57.330 align:start position:0%
zero-based array so if you have a vector
 

00:25:57.330 --> 00:25:59.839 align:start position:0%
zero-based array so if you have a vector
and<00:25:57.629><c> you</c><00:25:57.719><c> want</c><00:25:57.929><c> the</c><00:25:58.679><c> second</c><00:25:59.070><c> scalar</c><00:25:59.369><c> you</c><00:25:59.580><c> cadet</c>

00:25:59.839 --> 00:25:59.849 align:start position:0%
and you want the second scalar you cadet
 

00:25:59.849 --> 00:26:01.969 align:start position:0%
and you want the second scalar you cadet
you<00:26:00.029><c> could</c><00:26:00.210><c> do</c><00:26:00.389><c> you</c><00:26:00.629><c> know</c><00:26:00.749><c> variable</c><00:26:01.440><c> open</c><00:26:01.919><c> the</c>

00:26:01.969 --> 00:26:01.979 align:start position:0%
you could do you know variable open the
 

00:26:01.979 --> 00:26:03.320 align:start position:0%
you could do you know variable open the
square<00:26:02.129><c> bracket</c><00:26:02.639><c> and</c><00:26:02.729><c> actually</c><00:26:02.969><c> pick</c><00:26:03.149><c> it</c><00:26:03.239><c> out</c>

00:26:03.320 --> 00:26:03.330 align:start position:0%
square bracket and actually pick it out
 

00:26:03.330 --> 00:26:06.129 align:start position:0%
square bracket and actually pick it out
like<00:26:03.539><c> that</c><00:26:03.739><c> so</c><00:26:04.739><c> it's</c><00:26:04.859><c> a</c><00:26:04.919><c> two-way</c><00:26:05.190><c> successive</c>

00:26:06.129 --> 00:26:06.139 align:start position:0%
like that so it's a two-way successive
 

00:26:06.139 --> 00:26:08.779 align:start position:0%
like that so it's a two-way successive
obviously<00:26:07.139><c> that</c><00:26:07.349><c> there</c><00:26:07.859><c> are</c><00:26:08.009><c> scalar</c><00:26:08.519><c> types</c>

00:26:08.779 --> 00:26:08.789 align:start position:0%
obviously that there are scalar types
 

00:26:08.789 --> 00:26:10.489 align:start position:0%
obviously that there are scalar types
now<00:26:09.059><c> if</c><00:26:09.269><c> you</c><00:26:09.389><c> declare</c><00:26:09.659><c> something</c><00:26:09.929><c> as</c><00:26:10.139><c> a</c><00:26:10.169><c> float</c>

00:26:10.489 --> 00:26:10.499 align:start position:0%
now if you declare something as a float
 

00:26:10.499 --> 00:26:13.820 align:start position:0%
now if you declare something as a float
it's<00:26:10.710><c> just</c><00:26:10.889><c> going</c><00:26:11.039><c> to</c><00:26:11.099><c> have</c><00:26:11.249><c> one</c><00:26:12.559><c> once</c><00:26:13.559><c> killer</c>

00:26:13.820 --> 00:26:13.830 align:start position:0%
it's just going to have one once killer
 

00:26:13.830 --> 00:26:20.829 align:start position:0%
it's just going to have one once killer
in<00:26:14.070><c> there</c><00:26:15.859><c> and</c><00:26:16.859><c> of</c><00:26:17.759><c> course</c><00:26:17.789><c> the</c><00:26:18.389><c> flow</c><00:26:18.749><c> control</c>

00:26:20.829 --> 00:26:20.839 align:start position:0%
in there and of course the flow control
 

00:26:20.839 --> 00:26:23.749 align:start position:0%
in there and of course the flow control
constructs<00:26:21.839><c> in</c><00:26:21.989><c> this</c><00:26:22.109><c> language</c><00:26:22.339><c> they</c><00:26:23.339><c> will</c>

00:26:23.749 --> 00:26:23.759 align:start position:0%
constructs in this language they will
 

00:26:23.759 --> 00:26:28.190 align:start position:0%
constructs in this language they will
only<00:26:23.969><c> accept</c><00:26:24.779><c> a</c><00:26:24.929><c> boolean</c><00:26:25.289><c> type</c><00:26:26.479><c> 2</c><00:26:27.479><c> to</c><00:26:27.749><c> brunch</c>

00:26:28.190 --> 00:26:28.200 align:start position:0%
only accept a boolean type 2 to brunch
 

00:26:28.200 --> 00:26:31.969 align:start position:0%
only accept a boolean type 2 to brunch
on<00:26:29.539><c> there's</c><00:26:30.539><c> also</c><00:26:30.719><c> a</c><00:26:30.869><c> bunch</c><00:26:31.049><c> of</c><00:26:31.229><c> matrix</c><00:26:31.679><c> types</c>

00:26:31.969 --> 00:26:31.979 align:start position:0%
on there's also a bunch of matrix types
 

00:26:31.979 --> 00:26:34.070 align:start position:0%
on there's also a bunch of matrix types
you'll<00:26:32.909><c> probably</c><00:26:33.149><c> want</c><00:26:33.359><c> to</c><00:26:33.419><c> use</c><00:26:33.479><c> these</c><00:26:33.809><c> for</c>

00:26:34.070 --> 00:26:34.080 align:start position:0%
you'll probably want to use these for
 

00:26:34.080 --> 00:26:35.719 align:start position:0%
you'll probably want to use these for
getting<00:26:34.379><c> the</c><00:26:34.469><c> transformation</c><00:26:35.129><c> matrix</c><00:26:35.159><c> from</c>

00:26:35.719 --> 00:26:35.729 align:start position:0%
getting the transformation matrix from
 

00:26:35.729 --> 00:26:37.940 align:start position:0%
getting the transformation matrix from
OpenGL<00:26:36.330><c> store</c><00:26:36.869><c> stuff</c><00:26:37.080><c> in</c><00:26:37.229><c> there</c><00:26:37.440><c> or</c><00:26:37.619><c> you</c><00:26:37.799><c> might</c>

00:26:37.940 --> 00:26:37.950 align:start position:0%
OpenGL store stuff in there or you might
 

00:26:37.950 --> 00:26:40.249 align:start position:0%
OpenGL store stuff in there or you might
have<00:26:38.159><c> your</c><00:26:38.190><c> own</c><00:26:38.639><c> matrices</c><00:26:39.389><c> within</c><00:26:40.139><c> your</c>

00:26:40.249 --> 00:26:40.259 align:start position:0%
have your own matrices within your
 

00:26:40.259 --> 00:26:41.930 align:start position:0%
have your own matrices within your
application<00:26:40.409><c> that</c><00:26:41.009><c> you</c><00:26:41.099><c> want</c><00:26:41.279><c> to</c><00:26:41.339><c> pass</c><00:26:41.580><c> in</c><00:26:41.820><c> as</c>

00:26:41.930 --> 00:26:41.940 align:start position:0%
application that you want to pass in as
 

00:26:41.940 --> 00:26:45.440 align:start position:0%
application that you want to pass in as
parameters<00:26:43.339><c> stored</c><00:26:44.339><c> column</c><00:26:44.729><c> major</c><00:26:44.969><c> which</c><00:26:45.299><c> is</c>

00:26:45.440 --> 00:26:45.450 align:start position:0%
parameters stored column major which is
 

00:26:45.450 --> 00:26:46.849 align:start position:0%
parameters stored column major which is
compatible<00:26:46.049><c> with</c><00:26:46.080><c> the</c><00:26:46.200><c> way</c><00:26:46.379><c> the</c><00:26:46.529><c> rest</c><00:26:46.710><c> of</c>

00:26:46.849 --> 00:26:46.859 align:start position:0%
compatible with the way the rest of
 

00:26:46.859 --> 00:26:51.499 align:start position:0%
compatible with the way the rest of
OpenGL<00:26:47.339><c> works</c><00:26:48.019><c> and</c><00:26:49.369><c> again</c><00:26:50.369><c> you</c><00:26:50.820><c> can</c><00:26:50.849><c> access</c>

00:26:51.499 --> 00:26:51.509 align:start position:0%
OpenGL works and again you can access
 

00:26:51.509 --> 00:26:53.629 align:start position:0%
OpenGL works and again you can access
these<00:26:51.749><c> as</c><00:26:52.080><c> an</c><00:26:52.349><c> array</c><00:26:52.619><c> of</c><00:26:52.649><c> column</c><00:26:53.159><c> vectors</c><00:26:53.519><c> if</c>

00:26:53.629 --> 00:26:53.639 align:start position:0%
these as an array of column vectors if
 

00:26:53.639 --> 00:26:57.709 align:start position:0%
these as an array of column vectors if
you<00:26:53.729><c> take</c><00:26:53.879><c> a</c><00:26:53.909><c> matrix</c><00:26:54.469><c> I</c><00:26:55.469><c> guess</c><00:26:56.389><c> take</c><00:26:57.389><c> it</c><00:26:57.539><c> take</c>

00:26:57.709 --> 00:26:57.719 align:start position:0%
you take a matrix I guess take it take
 

00:26:57.719 --> 00:26:59.119 align:start position:0%
you take a matrix I guess take it take
the<00:26:57.839><c> first</c><00:26:58.080><c> element</c><00:26:58.289><c> of</c><00:26:58.559><c> that</c><00:26:58.589><c> that</c><00:26:58.950><c> will</c>

00:26:59.119 --> 00:26:59.129 align:start position:0%
the first element of that that will
 

00:26:59.129 --> 00:27:01.700 align:start position:0%
the first element of that that will
return<00:26:59.399><c> a</c><00:26:59.460><c> vector</c><00:26:59.879><c> type</c><00:27:00.409><c> and</c><00:27:01.409><c> then</c><00:27:01.529><c> with</c><00:27:01.679><c> that</c>

00:27:01.700 --> 00:27:01.710 align:start position:0%
return a vector type and then with that
 

00:27:01.710 --> 00:27:03.139 align:start position:0%
return a vector type and then with that
vector<00:27:02.099><c> you</c><00:27:02.429><c> could</c><00:27:02.580><c> access</c><00:27:02.849><c> the</c><00:27:02.909><c> first</c>

00:27:03.139 --> 00:27:03.149 align:start position:0%
vector you could access the first
 

00:27:03.149 --> 00:27:05.649 align:start position:0%
vector you could access the first
element<00:27:03.269><c> get</c><00:27:03.690><c> a</c><00:27:03.719><c> scalar</c><00:27:04.169><c> that's</c><00:27:04.379><c> a</c><00:27:04.499><c> title</c><00:27:04.859><c> work</c>

00:27:05.649 --> 00:27:05.659 align:start position:0%
element get a scalar that's a title work
 

00:27:05.659 --> 00:27:08.950 align:start position:0%
element get a scalar that's a title work
the<00:27:06.659><c> last</c><00:27:06.859><c> data</c><00:27:07.859><c> type</c><00:27:08.129><c> is</c><00:27:08.339><c> a</c><00:27:08.369><c> sampler</c>

00:27:08.950 --> 00:27:08.960 align:start position:0%
the last data type is a sampler
 

00:27:08.960 --> 00:27:13.430 align:start position:0%
the last data type is a sampler
basically<00:27:09.960><c> it's</c><00:27:10.469><c> a</c><00:27:10.759><c> handle</c><00:27:11.759><c> to</c><00:27:12.109><c> encapsulate</c><00:27:13.109><c> a</c>

00:27:13.430 --> 00:27:13.440 align:start position:0%
basically it's a handle to encapsulate a
 

00:27:13.440 --> 00:27:15.889 align:start position:0%
basically it's a handle to encapsulate a
texture<00:27:13.830><c> unit</c><00:27:14.099><c> there</c><00:27:14.909><c> are</c><00:27:15.059><c> function</c><00:27:15.539><c> calls</c><00:27:15.749><c> in</c>

00:27:15.889 --> 00:27:15.899 align:start position:0%
texture unit there are function calls in
 

00:27:15.899 --> 00:27:19.159 align:start position:0%
texture unit there are function calls in
this<00:27:16.019><c> language</c><00:27:16.200><c> for</c><00:27:16.859><c> getting</c><00:27:17.129><c> out</c><00:27:17.659><c> at</c><00:27:18.659><c> exel</c>

00:27:19.159 --> 00:27:19.169 align:start position:0%
this language for getting out at exel
 

00:27:19.169 --> 00:27:22.519 align:start position:0%
this language for getting out at exel
from<00:27:19.320><c> a</c><00:27:19.379><c> texture</c><00:27:19.710><c> unit</c><00:27:19.950><c> and</c><00:27:20.129><c> a</c><00:27:20.580><c> sampler</c><00:27:21.529><c> you</c>

00:27:22.519 --> 00:27:22.529 align:start position:0%
from a texture unit and a sampler you
 

00:27:22.529 --> 00:27:23.779 align:start position:0%
from a texture unit and a sampler you
need<00:27:22.710><c> to</c><00:27:22.799><c> pass</c><00:27:22.979><c> that</c><00:27:23.220><c> into</c><00:27:23.399><c> the</c><00:27:23.580><c> first</c>

00:27:23.779 --> 00:27:23.789 align:start position:0%
need to pass that into the first
 

00:27:23.789 --> 00:27:25.669 align:start position:0%
need to pass that into the first
argument<00:27:24.029><c> and</c><00:27:24.450><c> then</c><00:27:24.570><c> outside</c><00:27:24.839><c> of</c><00:27:25.229><c> the</c><00:27:25.440><c> shader</c>

00:27:25.669 --> 00:27:25.679 align:start position:0%
argument and then outside of the shader
 

00:27:25.679 --> 00:27:25.970 align:start position:0%
argument and then outside of the shader
in

00:27:25.970 --> 00:27:25.980 align:start position:0%
in
 

00:27:25.980 --> 00:27:28.159 align:start position:0%
in
our<00:27:26.070><c> application</c><00:27:26.640><c> you</c><00:27:27.059><c> then</c><00:27:27.270><c> sort</c><00:27:27.510><c> of</c><00:27:27.570><c> you</c>

00:27:28.159 --> 00:27:28.169 align:start position:0%
our application you then sort of you
 

00:27:28.169 --> 00:27:30.020 align:start position:0%
our application you then sort of you
attach<00:27:28.530><c> a</c><00:27:28.710><c> texture</c><00:27:29.130><c> unit</c><00:27:29.400><c> to</c><00:27:29.549><c> a</c><00:27:29.580><c> sampler</c>

00:27:30.020 --> 00:27:30.030 align:start position:0%
attach a texture unit to a sampler
 

00:27:30.030 --> 00:27:32.710 align:start position:0%
attach a texture unit to a sampler
that's<00:27:30.330><c> how</c><00:27:30.419><c> they</c><00:27:30.570><c> work</c><00:27:30.750><c> it's</c><00:27:30.960><c> just</c><00:27:31.020><c> a</c><00:27:31.169><c> handle</c>

00:27:32.710 --> 00:27:32.720 align:start position:0%
that's how they work it's just a handle
 

00:27:32.720 --> 00:27:35.840 align:start position:0%
that's how they work it's just a handle
and<00:27:33.720><c> again</c><00:27:34.169><c> they're</c><00:27:34.320><c> always</c><00:27:34.669><c> declared</c><00:27:35.669><c> with</c><00:27:35.820><c> a</c>

00:27:35.840 --> 00:27:35.850 align:start position:0%
and again they're always declared with a
 

00:27:35.850 --> 00:27:38.090 align:start position:0%
and again they're always declared with a
uniform<00:27:36.360><c> qualifier</c><00:27:36.840><c> because</c><00:27:37.320><c> texture</c><00:27:37.980><c> units</c>

00:27:38.090 --> 00:27:38.100 align:start position:0%
uniform qualifier because texture units
 

00:27:38.100 --> 00:27:40.310 align:start position:0%
uniform qualifier because texture units
don't<00:27:38.460><c> change</c><00:27:38.850><c> between</c><00:27:39.540><c> executions</c><00:27:40.169><c> of</c><00:27:40.260><c> the</c>

00:27:40.310 --> 00:27:40.320 align:start position:0%
don't change between executions of the
 

00:27:40.320 --> 00:27:43.430 align:start position:0%
don't change between executions of the
shader<00:27:41.360><c> hour</c><00:27:42.360><c> during</c><00:27:42.630><c> execution</c><00:27:43.049><c> of</c><00:27:43.320><c> the</c>

00:27:43.430 --> 00:27:43.440 align:start position:0%
shader hour during execution of the
 

00:27:43.440 --> 00:27:47.030 align:start position:0%
shader hour during execution of the
shader<00:27:45.290><c> data</c><00:27:46.290><c> from</c><00:27:46.500><c> these</c><00:27:46.620><c> is</c><00:27:46.770><c> of</c><00:27:46.890><c> course</c>

00:27:47.030 --> 00:27:47.040 align:start position:0%
shader data from these is of course
 

00:27:47.040 --> 00:27:50.570 align:start position:0%
shader data from these is of course
read-only<00:27:47.960><c> so</c><00:27:48.960><c> here</c><00:27:49.770><c> is</c><00:27:49.919><c> another</c><00:27:49.950><c> sort</c><00:27:50.460><c> of</c>

00:27:50.570 --> 00:27:50.580 align:start position:0%
read-only so here is another sort of
 

00:27:50.580 --> 00:27:51.830 align:start position:0%
read-only so here is another sort of
deviation<00:27:51.419><c> from</c><00:27:51.510><c> the</c><00:27:51.660><c> C</c><00:27:51.809><c> programming</c>

00:27:51.830 --> 00:27:51.840 align:start position:0%
deviation from the C programming
 

00:27:51.840 --> 00:27:56.990 align:start position:0%
deviation from the C programming
language<00:27:54.140><c> because</c><00:27:55.140><c> we</c><00:27:55.350><c> know</c><00:27:55.470><c> I</c><00:27:55.500><c> have</c><00:27:55.770><c> I</c><00:27:56.100><c> get</c>

00:27:56.990 --> 00:27:57.000 align:start position:0%
language because we know I have I get
 

00:27:57.000 --> 00:27:59.890 align:start position:0%
language because we know I have I get
aggregate<00:27:57.570><c> data</c><00:27:57.780><c> types</c><00:27:58.080><c> in</c><00:27:58.350><c> a</c><00:27:58.710><c> sense</c>

00:27:59.890 --> 00:27:59.900 align:start position:0%
aggregate data types in a sense
 

00:27:59.900 --> 00:28:02.900 align:start position:0%
aggregate data types in a sense
basically<00:28:00.900><c> things</c><00:28:01.140><c> that</c><00:28:01.260><c> are</c><00:28:01.350><c> non</c><00:28:01.530><c> scalar</c><00:28:02.070><c> we</c>

00:28:02.900 --> 00:28:02.910 align:start position:0%
basically things that are non scalar we
 

00:28:02.910 --> 00:28:06.950 align:start position:0%
basically things that are non scalar we
need<00:28:03.030><c> these</c><00:28:03.120><c> constructors</c><00:28:05.570><c> not</c><00:28:06.570><c> so</c><00:28:06.809><c> much</c>

00:28:06.950 --> 00:28:06.960 align:start position:0%
need these constructors not so much
 

00:28:06.960 --> 00:28:08.780 align:start position:0%
need these constructors not so much
constructors<00:28:07.530><c> in</c><00:28:07.679><c> the</c><00:28:07.740><c> c++</c><00:28:08.010><c> sense</c><00:28:08.549><c> with</c><00:28:08.760><c> the</c>

00:28:08.780 --> 00:28:08.790 align:start position:0%
constructors in the c++ sense with the
 

00:28:08.790 --> 00:28:11.710 align:start position:0%
constructors in the c++ sense with the
score<00:28:09.059><c> even</c><00:28:09.179><c> perhaps</c><00:28:09.450><c> similar</c><00:28:09.809><c> an</c><00:28:09.990><c> idea</c>

00:28:11.710 --> 00:28:11.720 align:start position:0%
score even perhaps similar an idea
 

00:28:11.720 --> 00:28:13.760 align:start position:0%
score even perhaps similar an idea
anyhow<00:28:12.720><c> they're</c><00:28:12.929><c> used</c><00:28:13.080><c> to</c><00:28:13.169><c> initialize</c><00:28:13.410><c> an</c>

00:28:13.760 --> 00:28:13.770 align:start position:0%
anyhow they're used to initialize an
 

00:28:13.770 --> 00:28:16.850 align:start position:0%
anyhow they're used to initialize an
aggregate<00:28:14.100><c> type</c><00:28:14.780><c> and</c><00:28:15.780><c> of</c><00:28:15.990><c> course</c><00:28:16.020><c> in</c><00:28:16.350><c> c</c><00:28:16.590><c> you</c>

00:28:16.850 --> 00:28:16.860 align:start position:0%
aggregate type and of course in c you
 

00:28:16.860 --> 00:28:18.650 align:start position:0%
aggregate type and of course in c you
had<00:28:17.040><c> this</c><00:28:17.250><c> concert</c><00:28:17.910><c> you</c><00:28:18.000><c> could</c><00:28:18.179><c> just</c><00:28:18.330><c> do</c><00:28:18.540><c> you</c>

00:28:18.650 --> 00:28:18.660 align:start position:0%
had this concert you could just do you
 

00:28:18.660 --> 00:28:21.080 align:start position:0%
had this concert you could just do you
know<00:28:18.780><c> declare</c><00:28:19.200><c> a</c><00:28:19.230><c> variable</c><00:28:19.410><c> V</c><00:28:20.370><c> equals</c><00:28:20.910><c> and</c>

00:28:21.080 --> 00:28:21.090 align:start position:0%
know declare a variable V equals and
 

00:28:21.090 --> 00:28:22.850 align:start position:0%
know declare a variable V equals and
then<00:28:21.150><c> you</c><00:28:21.270><c> could</c><00:28:21.390><c> open</c><00:28:21.750><c> the</c><00:28:21.809><c> braces</c><00:28:22.230><c> and</c><00:28:22.410><c> fill</c>

00:28:22.850 --> 00:28:22.860 align:start position:0%
then you could open the braces and fill
 

00:28:22.860 --> 00:28:25.100 align:start position:0%
then you could open the braces and fill
in<00:28:23.010><c> each</c><00:28:23.070><c> of</c><00:28:23.250><c> the</c><00:28:23.309><c> components</c><00:28:24.080><c> what</c><00:28:25.080><c> a</c>

00:28:25.100 --> 00:28:25.110 align:start position:0%
in each of the components what a
 

00:28:25.110 --> 00:28:27.799 align:start position:0%
in each of the components what a
constructor<00:28:25.770><c> is</c><00:28:25.980><c> is</c><00:28:26.610><c> basically</c><00:28:26.880><c> when</c><00:28:27.780><c> you</c>

00:28:27.799 --> 00:28:27.809 align:start position:0%
constructor is is basically when you
 

00:28:27.809 --> 00:28:30.169 align:start position:0%
constructor is is basically when you
declare<00:28:28.740><c> a</c><00:28:28.770><c> variable</c><00:28:29.070><c> if</c><00:28:29.580><c> you</c><00:28:29.790><c> want</c><00:28:29.970><c> to</c><00:28:30.059><c> assign</c>

00:28:30.169 --> 00:28:30.179 align:start position:0%
declare a variable if you want to assign
 

00:28:30.179 --> 00:28:32.000 align:start position:0%
declare a variable if you want to assign
something<00:28:30.660><c> if</c><00:28:30.809><c> you</c><00:28:30.900><c> want</c><00:28:31.049><c> to</c><00:28:31.140><c> put</c><00:28:31.710><c> something</c>

00:28:32.000 --> 00:28:32.010 align:start position:0%
something if you want to put something
 

00:28:32.010 --> 00:28:34.250 align:start position:0%
something if you want to put something
into<00:28:32.160><c> it</c><00:28:32.309><c> you</c><00:28:33.120><c> basically</c><00:28:33.330><c> make</c><00:28:33.600><c> a</c><00:28:33.780><c> function</c>

00:28:34.250 --> 00:28:34.260 align:start position:0%
into it you basically make a function
 

00:28:34.260 --> 00:28:36.470 align:start position:0%
into it you basically make a function
call<00:28:34.470><c> which</c><00:28:34.650><c> is</c><00:28:34.799><c> the</c><00:28:34.919><c> same</c><00:28:35.190><c> as</c><00:28:35.490><c> the</c><00:28:35.850><c> type</c><00:28:36.210><c> as</c>

00:28:36.470 --> 00:28:36.480 align:start position:0%
call which is the same as the type as
 

00:28:36.480 --> 00:28:38.450 align:start position:0%
call which is the same as the type as
the<00:28:36.900><c> name</c><00:28:37.080><c> of</c><00:28:37.200><c> the</c><00:28:37.290><c> type</c><00:28:37.530><c> and</c><00:28:37.799><c> then</c><00:28:38.190><c> in</c><00:28:38.309><c> those</c>

00:28:38.450 --> 00:28:38.460 align:start position:0%
the name of the type and then in those
 

00:28:38.460 --> 00:28:40.610 align:start position:0%
the name of the type and then in those
brackets<00:28:38.730><c> you</c><00:28:39.179><c> fill</c><00:28:39.480><c> in</c><00:28:39.660><c> the</c><00:28:39.900><c> values</c><00:28:40.260><c> that's</c>

00:28:40.610 --> 00:28:40.620 align:start position:0%
brackets you fill in the values that's
 

00:28:40.620 --> 00:28:42.680 align:start position:0%
brackets you fill in the values that's
how<00:28:40.770><c> it</c><00:28:40.890><c> works</c><00:28:41.100><c> so</c><00:28:41.760><c> I've</c><00:28:42.030><c> shown</c><00:28:42.240><c> you</c><00:28:42.270><c> a</c><00:28:42.419><c> couple</c>

00:28:42.680 --> 00:28:42.690 align:start position:0%
how it works so I've shown you a couple
 

00:28:42.690 --> 00:28:44.330 align:start position:0%
how it works so I've shown you a couple
of<00:28:42.780><c> examples</c><00:28:43.080><c> of</c><00:28:43.350><c> that</c><00:28:43.500><c> you</c><00:28:43.740><c> can</c><00:28:43.890><c> see</c><00:28:44.100><c> there</c>

00:28:44.330 --> 00:28:44.340 align:start position:0%
of examples of that you can see there
 

00:28:44.340 --> 00:28:46.280 align:start position:0%
of examples of that you can see there
I'm<00:28:44.520><c> declaring</c><00:28:44.850><c> a</c><00:28:45.299><c> four</c><00:28:45.510><c> component</c><00:28:45.929><c> vector</c>

00:28:46.280 --> 00:28:46.290 align:start position:0%
I'm declaring a four component vector
 

00:28:46.290 --> 00:28:48.620 align:start position:0%
I'm declaring a four component vector
type<00:28:46.500><c> I</c><00:28:46.740><c> then</c><00:28:47.280><c> have</c><00:28:47.490><c> to</c><00:28:47.520><c> call</c><00:28:47.820><c> a</c><00:28:47.880><c> function</c><00:28:48.179><c> vac</c>

00:28:48.620 --> 00:28:48.630 align:start position:0%
type I then have to call a function vac
 

00:28:48.630 --> 00:28:51.320 align:start position:0%
type I then have to call a function vac
for<00:28:48.960><c> with</c><00:28:49.410><c> for</c><00:28:49.710><c> scalars</c><00:28:50.190><c> inside</c><00:28:50.580><c> of</c><00:28:50.760><c> that</c><00:28:50.910><c> to</c>

00:28:51.320 --> 00:28:51.330 align:start position:0%
for with for scalars inside of that to
 

00:28:51.330 --> 00:28:53.419 align:start position:0%
for with for scalars inside of that to
fill<00:28:51.540><c> it</c><00:28:51.660><c> in</c><00:28:51.809><c> and</c><00:28:52.020><c> then</c><00:28:52.830><c> you</c><00:28:52.980><c> can</c><00:28:53.130><c> see</c><00:28:53.309><c> the</c>

00:28:53.419 --> 00:28:53.429 align:start position:0%
fill it in and then you can see the
 

00:28:53.429 --> 00:28:55.760 align:start position:0%
fill it in and then you can see the
similar<00:28:53.820><c> example</c><00:28:54.270><c> filling</c><00:28:54.690><c> in</c><00:28:54.809><c> the</c><00:28:55.169><c> actual</c>

00:28:55.760 --> 00:28:55.770 align:start position:0%
similar example filling in the actual
 

00:28:55.770 --> 00:28:57.830 align:start position:0%
similar example filling in the actual
structure<00:28:56.309><c> you</c><00:28:56.790><c> make</c><00:28:56.970><c> a</c><00:28:57.000><c> call</c><00:28:57.360><c> which</c><00:28:57.570><c> is</c><00:28:57.720><c> the</c>

00:28:57.830 --> 00:28:57.840 align:start position:0%
structure you make a call which is the
 

00:28:57.840 --> 00:28:59.960 align:start position:0%
structure you make a call which is the
same<00:28:58.049><c> name</c><00:28:58.380><c> as</c><00:28:58.590><c> the</c><00:28:58.620><c> structure</c><00:28:59.100><c> and</c><00:28:59.340><c> you</c><00:28:59.760><c> pass</c>

00:28:59.960 --> 00:28:59.970 align:start position:0%
same name as the structure and you pass
 

00:28:59.970 --> 00:29:01.520 align:start position:0%
same name as the structure and you pass
in<00:29:00.179><c> the</c><00:29:00.270><c> values</c><00:29:00.570><c> and</c><00:29:00.660><c> you</c><00:29:00.750><c> can</c><00:29:00.900><c> see</c><00:29:01.080><c> how</c><00:29:01.290><c> they</c>

00:29:01.520 --> 00:29:01.530 align:start position:0%
in the values and you can see how they
 

00:29:01.530 --> 00:29:03.950 align:start position:0%
in the values and you can see how they
actually<00:29:01.799><c> they</c><00:29:02.429><c> net</c><00:29:02.700><c> you</c><00:29:03.600><c> can</c><00:29:03.660><c> these</c>

00:29:03.950 --> 00:29:03.960 align:start position:0%
actually they net you can these
 

00:29:03.960 --> 00:29:06.380 align:start position:0%
actually they net you can these
constructors<00:29:04.410><c> nest</c><00:29:05.179><c> that's</c><00:29:06.179><c> one</c><00:29:06.360><c> thing</c>

00:29:06.380 --> 00:29:06.390 align:start position:0%
constructors nest that's one thing
 

00:29:06.390 --> 00:29:07.730 align:start position:0%
constructors nest that's one thing
that's<00:29:06.660><c> a</c><00:29:06.809><c> little</c><00:29:06.840><c> different</c><00:29:07.169><c> that</c><00:29:07.530><c> you'll</c>

00:29:07.730 --> 00:29:07.740 align:start position:0%
that's a little different that you'll
 

00:29:07.740 --> 00:29:08.930 align:start position:0%
that's a little different that you'll
need<00:29:07.860><c> to</c><00:29:07.919><c> get</c><00:29:08.070><c> used</c><00:29:08.220><c> to</c><00:29:08.370><c> but</c><00:29:08.460><c> it's</c><00:29:08.610><c> really</c><00:29:08.730><c> it's</c>

00:29:08.930 --> 00:29:08.940 align:start position:0%
need to get used to but it's really it's
 

00:29:08.940 --> 00:29:11.690 align:start position:0%
need to get used to but it's really it's
not<00:29:09.090><c> hard</c><00:29:09.360><c> to</c><00:29:09.419><c> figure</c><00:29:09.600><c> out</c><00:29:10.100><c> in</c><00:29:11.100><c> terms</c><00:29:11.460><c> of</c><00:29:11.580><c> the</c>

00:29:11.690 --> 00:29:11.700 align:start position:0%
not hard to figure out in terms of the
 

00:29:11.700 --> 00:29:14.150 align:start position:0%
not hard to figure out in terms of the
operators<00:29:12.210><c> you</c><00:29:12.390><c> have</c><00:29:13.070><c> there's</c><00:29:14.070><c> really</c>

00:29:14.150 --> 00:29:14.160 align:start position:0%
operators you have there's really
 

00:29:14.160 --> 00:29:17.270 align:start position:0%
operators you have there's really
there's<00:29:14.580><c> nothing</c><00:29:15.120><c> really</c><00:29:15.419><c> new</c><00:29:15.780><c> here</c><00:29:16.070><c> the</c><00:29:17.070><c> only</c>

00:29:17.270 --> 00:29:17.280 align:start position:0%
there's nothing really new here the only
 

00:29:17.280 --> 00:29:18.500 align:start position:0%
there's nothing really new here the only
thing<00:29:17.490><c> that</c><00:29:17.640><c> you'll</c><00:29:17.760><c> see</c><00:29:17.970><c> missing</c><00:29:18.360><c> is</c><00:29:18.480><c> the</c>

00:29:18.500 --> 00:29:18.510 align:start position:0%
thing that you'll see missing is the
 

00:29:18.510 --> 00:29:21.110 align:start position:0%
thing that you'll see missing is the
bitwise<00:29:18.809><c> operations</c><00:29:19.679><c> there's</c><00:29:20.309><c> a</c><00:29:20.429><c> logical</c><00:29:20.910><c> and</c>

00:29:21.110 --> 00:29:21.120 align:start position:0%
bitwise operations there's a logical and
 

00:29:21.120 --> 00:29:27.220 align:start position:0%
bitwise operations there's a logical and
an<00:29:21.299><c> or</c><00:29:21.450><c> and</c><00:29:21.600><c> so</c><00:29:21.750><c> forth</c><00:29:22.020><c> but</c><00:29:22.200><c> not</c><00:29:22.410><c> a</c><00:29:22.440><c> bitwise</c><00:29:25.280><c> so</c>

00:29:27.220 --> 00:29:27.230 align:start position:0%
an or and so forth but not a bitwise so
 

00:29:27.230 --> 00:29:29.480 align:start position:0%
an or and so forth but not a bitwise so
Quisling<00:29:28.230><c> just</c><00:29:28.559><c> to</c><00:29:28.650><c> give</c><00:29:28.770><c> an</c><00:29:28.890><c> example</c><00:29:29.130><c> of</c><00:29:29.309><c> how</c>

00:29:29.480 --> 00:29:29.490 align:start position:0%
Quisling just to give an example of how
 

00:29:29.490 --> 00:29:33.110 align:start position:0%
Quisling just to give an example of how
that<00:29:29.700><c> works</c><00:29:29.940><c> you</c><00:29:30.919><c> can</c><00:29:31.919><c> see</c><00:29:32.130><c> here</c><00:29:32.429><c> I</c><00:29:32.669><c> declare</c>

00:29:33.110 --> 00:29:33.120 align:start position:0%
that works you can see here I declare
 

00:29:33.120 --> 00:29:37.490 align:start position:0%
that works you can see here I declare
v-0<00:29:33.809><c> and</c><00:29:34.460><c> construct</c><00:29:35.460><c> it</c><00:29:35.640><c> with</c><00:29:36.570><c> us</c><00:29:36.780><c> with</c><00:29:37.260><c> for</c>

00:29:37.490 --> 00:29:37.500 align:start position:0%
v-0 and construct it with us with for
 

00:29:37.500 --> 00:29:38.770 align:start position:0%
v-0 and construct it with us with for
scalars

00:29:38.770 --> 00:29:38.780 align:start position:0%
scalars
 

00:29:38.780 --> 00:29:42.070 align:start position:0%
scalars
and<00:29:39.070><c> you</c><00:29:40.070><c> can</c><00:29:40.220><c> see</c><00:29:40.400><c> then</c><00:29:40.640><c> but</c><00:29:40.880><c> but</c><00:29:41.080><c> I'm</c>

00:29:42.070 --> 00:29:42.080 align:start position:0%
and you can see then but but I'm
 

00:29:42.080 --> 00:29:45.310 align:start position:0%
and you can see then but but I'm
assigning<00:29:42.710><c> v02</c><00:29:43.340><c> v1</c><00:29:43.850><c> but</c><00:29:44.300><c> v-0</c><00:29:44.690><c> has</c><00:29:44.780><c> a</c><00:29:44.840><c> Swizzle</c>

00:29:45.310 --> 00:29:45.320 align:start position:0%
assigning v02 v1 but v-0 has a Swizzle
 

00:29:45.320 --> 00:29:48.070 align:start position:0%
assigning v02 v1 but v-0 has a Swizzle
art<00:29:45.500><c> and</c><00:29:45.740><c> you</c><00:29:46.190><c> can</c><00:29:46.370><c> see</c><00:29:46.610><c> what</c><00:29:47.570><c> that's</c><00:29:47.720><c> actually</c>

00:29:48.070 --> 00:29:48.080 align:start position:0%
art and you can see what that's actually
 

00:29:48.080 --> 00:29:50.140 align:start position:0%
art and you can see what that's actually
doing<00:29:48.140><c> is</c><00:29:48.500><c> actually</c><00:29:48.620><c> reordered</c><00:29:49.340><c> the</c><00:29:49.850><c> the</c>

00:29:50.140 --> 00:29:50.150 align:start position:0%
doing is actually reordered the the
 

00:29:50.150 --> 00:29:51.880 align:start position:0%
doing is actually reordered the the
components<00:29:50.690><c> within</c><00:29:50.870><c> the</c><00:29:51.230><c> steelers</c><00:29:51.590><c> within</c>

00:29:51.880 --> 00:29:51.890 align:start position:0%
components within the steelers within
 

00:29:51.890 --> 00:29:56.050 align:start position:0%
components within the steelers within
that<00:29:53.080><c> these</c><00:29:54.080><c> swizzles</c><00:29:54.620><c> they</c><00:29:55.340><c> can</c><00:29:55.490><c> either</c><00:29:55.640><c> be</c><00:29:55.820><c> X</c>

00:29:56.050 --> 00:29:56.060 align:start position:0%
that these swizzles they can either be X
 

00:29:56.060 --> 00:29:58.720 align:start position:0%
that these swizzles they can either be X
Y<00:29:56.270><c> Z</c><00:29:56.300><c> W</c><00:29:56.870><c> they</c><00:29:57.770><c> have</c><00:29:58.070><c> connections</c><00:29:58.610><c> if</c>

00:29:58.720 --> 00:29:58.730 align:start position:0%
Y Z W they have connections if
 

00:29:58.730 --> 00:30:01.270 align:start position:0%
Y Z W they have connections if
convenient<00:29:59.150><c> names</c><00:29:59.480><c> XYZ</c><00:30:00.410><c> w</c><00:30:00.830><c> you'd</c><00:30:01.040><c> probably</c>

00:30:01.270 --> 00:30:01.280 align:start position:0%
convenient names XYZ w you'd probably
 

00:30:01.280 --> 00:30:03.360 align:start position:0%
convenient names XYZ w you'd probably
use<00:30:01.520><c> if</c><00:30:01.730><c> you're</c><00:30:01.820><c> if</c><00:30:01.970><c> it's</c><00:30:02.120><c> positional</c><00:30:02.870><c> data</c>

00:30:03.360 --> 00:30:03.370 align:start position:0%
use if you're if it's positional data
 

00:30:03.370 --> 00:30:06.400 align:start position:0%
use if you're if it's positional data
rgba<00:30:04.370><c> if</c><00:30:04.670><c> its</c><00:30:04.820><c> color</c><00:30:05.060><c> space</c><00:30:05.390><c> data</c><00:30:05.690><c> and</c><00:30:05.990><c> there's</c>

00:30:06.400 --> 00:30:06.410 align:start position:0%
rgba if its color space data and there's
 

00:30:06.410 --> 00:30:08.710 align:start position:0%
rgba if its color space data and there's
even<00:30:06.710><c> an</c><00:30:06.800><c> s</c><00:30:06.950><c> TR</c><00:30:07.370><c> q</c><00:30:07.610><c> if</c><00:30:07.820><c> it's</c><00:30:07.970><c> used</c><00:30:08.150><c> for</c><00:30:08.300><c> storing</c>

00:30:08.710 --> 00:30:08.720 align:start position:0%
even an s TR q if it's used for storing
 

00:30:08.720 --> 00:30:10.330 align:start position:0%
even an s TR q if it's used for storing
texture<00:30:09.080><c> units</c><00:30:09.230><c> you</c><00:30:09.680><c> can</c><00:30:09.710><c> use</c><00:30:10.130><c> them</c>

00:30:10.330 --> 00:30:10.340 align:start position:0%
texture units you can use them
 

00:30:10.340 --> 00:30:11.770 align:start position:0%
texture units you can use them
interchangeably<00:30:10.550><c> but</c><00:30:11.120><c> to</c><00:30:11.330><c> make</c><00:30:11.480><c> your</c><00:30:11.600><c> code</c>

00:30:11.770 --> 00:30:11.780 align:start position:0%
interchangeably but to make your code
 

00:30:11.780 --> 00:30:13.390 align:start position:0%
interchangeably but to make your code
more<00:30:11.840><c> readable</c><00:30:12.050><c> you</c><00:30:12.800><c> might</c><00:30:12.980><c> want</c><00:30:13.160><c> to</c><00:30:13.220><c> take</c>

00:30:13.390 --> 00:30:13.400 align:start position:0%
more readable you might want to take
 

00:30:13.400 --> 00:30:18.610 align:start position:0%
more readable you might want to take
advantage<00:30:13.580><c> of</c><00:30:13.940><c> that</c><00:30:15.760><c> also</c><00:30:16.760><c> as</c><00:30:17.540><c> a</c><00:30:17.600><c> result</c><00:30:18.050><c> of</c><00:30:18.410><c> a</c>

00:30:18.610 --> 00:30:18.620 align:start position:0%
advantage of that also as a result of a
 

00:30:18.620 --> 00:30:21.310 align:start position:0%
advantage of that also as a result of a
Swizzle<00:30:19.100><c> you</c><00:30:19.820><c> can</c><00:30:20.030><c> actually</c><00:30:20.510><c> change</c><00:30:20.810><c> the</c><00:30:20.990><c> data</c>

00:30:21.310 --> 00:30:21.320 align:start position:0%
Swizzle you can actually change the data
 

00:30:21.320 --> 00:30:24.130 align:start position:0%
Swizzle you can actually change the data
type<00:30:21.410><c> you</c><00:30:22.220><c> can</c><00:30:22.430><c> see</c><00:30:22.670><c> that</c><00:30:22.940><c> when</c><00:30:23.630><c> I'm</c><00:30:23.750><c> assigning</c>

00:30:24.130 --> 00:30:24.140 align:start position:0%
type you can see that when I'm assigning
 

00:30:24.140 --> 00:30:28.420 align:start position:0%
type you can see that when I'm assigning
a<00:30:24.470><c> V</c><00:30:25.190><c> 0</c><00:30:25.520><c> 2</c><00:30:25.640><c> V</c><00:30:25.910><c> 3</c><00:30:25.940><c> V</c><00:30:26.270><c> 3</c><00:30:26.870><c> is</c><00:30:27.200><c> only</c><00:30:27.380><c> effect</c><00:30:27.800><c> two</c><00:30:28.040><c> so</c><00:30:28.370><c> it</c>

00:30:28.420 --> 00:30:28.430 align:start position:0%
a V 0 2 V 3 V 3 is only effect two so it
 

00:30:28.430 --> 00:30:29.950 align:start position:0%
a V 0 2 V 3 V 3 is only effect two so it
has<00:30:28.460><c> only</c><00:30:28.640><c> two</c><00:30:28.850><c> components</c><00:30:29.390><c> you're</c><00:30:29.600><c> going</c><00:30:29.840><c> to</c>

00:30:29.950 --> 00:30:29.960 align:start position:0%
has only two components you're going to
 

00:30:29.960 --> 00:30:31.870 align:start position:0%
has only two components you're going to
need<00:30:29.990><c> to</c><00:30:30.170><c> pick</c><00:30:30.590><c> the</c><00:30:31.070><c> two</c><00:30:31.250><c> components</c><00:30:31.820><c> that</c>

00:30:31.870 --> 00:30:31.880 align:start position:0%
need to pick the two components that
 

00:30:31.880 --> 00:30:33.070 align:start position:0%
need to pick the two components that
you're<00:30:32.000><c> going</c><00:30:32.120><c> to</c><00:30:32.180><c> assign</c><00:30:32.480><c> to</c><00:30:32.690><c> that</c><00:30:32.720><c> which</c><00:30:33.050><c> is</c>

00:30:33.070 --> 00:30:33.080 align:start position:0%
you're going to assign to that which is
 

00:30:33.080 --> 00:30:36.550 align:start position:0%
you're going to assign to that which is
why<00:30:33.320><c> i'm</c><00:30:33.470><c> picking</c><00:30:33.830><c> q</c><00:30:34.040><c> and</c><00:30:34.190><c> ass</c><00:30:34.900><c> and</c><00:30:35.900><c> also</c><00:30:36.320><c> you</c>

00:30:36.550 --> 00:30:36.560 align:start position:0%
why i'm picking q and ass and also you
 

00:30:36.560 --> 00:30:40.060 align:start position:0%
why i'm picking q and ass and also you
can<00:30:36.830><c> see</c><00:30:37.780><c> that</c><00:30:38.780><c> type</c><00:30:39.020><c> conversion</c><00:30:39.500><c> can</c><00:30:39.680><c> be</c><00:30:39.890><c> used</c>

00:30:40.060 --> 00:30:40.070 align:start position:0%
can see that type conversion can be used
 

00:30:40.070 --> 00:30:43.770 align:start position:0%
can see that type conversion can be used
used<00:30:40.610><c> to</c><00:30:40.790><c> just</c><00:30:40.970><c> for</c><00:30:41.120><c> just</c><00:30:41.240><c> one</c><00:30:41.450><c> single</c><00:30:41.690><c> scalar</c>

00:30:43.770 --> 00:30:43.780 align:start position:0%
used to just for just one single scalar
 

00:30:43.780 --> 00:30:49.000 align:start position:0%
used to just for just one single scalar
in<00:30:44.780><c> terms</c><00:30:45.710><c> of</c><00:30:45.890><c> the</c><00:30:46.070><c> the</c><00:30:46.400><c> operators</c><00:30:47.470><c> the</c><00:30:48.470><c> in</c><00:30:48.650><c> a</c>

00:30:49.000 --> 00:30:49.010 align:start position:0%
in terms of the the operators the in a
 

00:30:49.010 --> 00:30:51.490 align:start position:0%
in terms of the the operators the in a
sense<00:30:49.280><c> they're</c><00:30:49.550><c> they're</c><00:30:50.510><c> overloaded</c><00:30:51.200><c> in</c><00:30:51.350><c> the</c>

00:30:51.490 --> 00:30:51.500 align:start position:0%
sense they're they're overloaded in the
 

00:30:51.500 --> 00:30:53.230 align:start position:0%
sense they're they're overloaded in the
sense<00:30:51.680><c> of</c><00:30:51.800><c> depending</c><00:30:52.310><c> on</c><00:30:52.310><c> the</c><00:30:52.520><c> type</c><00:30:52.790><c> of</c><00:30:52.820><c> their</c>

00:30:53.230 --> 00:30:53.240 align:start position:0%
sense of depending on the type of their
 

00:30:53.240 --> 00:30:54.940 align:start position:0%
sense of depending on the type of their
working<00:30:53.450><c> with</c><00:30:53.750><c> they'll</c><00:30:54.350><c> have</c><00:30:54.530><c> us</c><00:30:54.560><c> they'll</c>

00:30:54.940 --> 00:30:54.950 align:start position:0%
working with they'll have us they'll
 

00:30:54.950 --> 00:30:57.250 align:start position:0%
working with they'll have us they'll
have<00:30:55.100><c> a</c><00:30:55.130><c> different</c><00:30:55.520><c> behavior</c><00:30:55.610><c> no</c><00:30:56.540><c> it's</c><00:30:57.020><c> not</c>

00:30:57.250 --> 00:30:57.260 align:start position:0%
have a different behavior no it's not
 

00:30:57.260 --> 00:30:58.990 align:start position:0%
have a different behavior no it's not
don't<00:30:57.830><c> get</c><00:30:57.950><c> too</c><00:30:58.070><c> scared</c><00:30:58.310><c> of</c><00:30:58.490><c> that</c><00:30:58.610><c> it's</c><00:30:58.820><c> pretty</c>

00:30:58.990 --> 00:30:59.000 align:start position:0%
don't get too scared of that it's pretty
 

00:30:59.000 --> 00:31:01.420 align:start position:0%
don't get too scared of that it's pretty
simple<00:30:59.270><c> the</c><00:30:59.480><c> behavior</c><00:30:59.840><c> actually</c><00:31:00.050><c> for</c><00:31:00.950><c> all</c><00:31:01.190><c> the</c>

00:31:01.420 --> 00:31:01.430 align:start position:0%
simple the behavior actually for all the
 

00:31:01.430 --> 00:31:03.280 align:start position:0%
simple the behavior actually for all the
operations<00:31:01.880><c> apart</c><00:31:02.570><c> from</c><00:31:02.660><c> the</c><00:31:02.810><c> multiply</c><00:31:03.230><c> the</c>

00:31:03.280 --> 00:31:03.290 align:start position:0%
operations apart from the multiply the
 

00:31:03.290 --> 00:31:05.830 align:start position:0%
operations apart from the multiply the
behavior<00:31:03.830><c> is</c><00:31:03.890><c> very</c><00:31:03.980><c> obvious</c><00:31:04.460><c> it</c><00:31:05.000><c> simply</c>

00:31:05.830 --> 00:31:05.840 align:start position:0%
behavior is very obvious it simply
 

00:31:05.840 --> 00:31:08.710 align:start position:0%
behavior is very obvious it simply
applies<00:31:06.230><c> if</c><00:31:06.650><c> you</c><00:31:07.070><c> do</c><00:31:07.160><c> an</c><00:31:07.280><c> add</c><00:31:07.490><c> a</c><00:31:07.790><c> equals</c><00:31:08.300><c> B</c><00:31:08.360><c> plus</c>

00:31:08.710 --> 00:31:08.720 align:start position:0%
applies if you do an add a equals B plus
 

00:31:08.720 --> 00:31:10.930 align:start position:0%
applies if you do an add a equals B plus
C<00:31:08.750><c> it's</c><00:31:09.200><c> going</c><00:31:09.470><c> to</c><00:31:09.530><c> perform</c><00:31:09.860><c> that</c><00:31:10.070><c> ad</c><00:31:10.280><c> for</c><00:31:10.760><c> all</c>

00:31:10.930 --> 00:31:10.940 align:start position:0%
C it's going to perform that ad for all
 

00:31:10.940 --> 00:31:13.120 align:start position:0%
C it's going to perform that ad for all
the<00:31:11.150><c> scalars</c><00:31:11.570><c> within</c><00:31:11.870><c> that</c><00:31:12.050><c> the</c><00:31:12.620><c> vector</c><00:31:12.830><c> it's</c>

00:31:13.120 --> 00:31:13.130 align:start position:0%
the scalars within that the vector it's
 

00:31:13.130 --> 00:31:15.190 align:start position:0%
the scalars within that the vector it's
going<00:31:13.250><c> to</c><00:31:13.310><c> do</c><00:31:13.400><c> for</c><00:31:13.730><c> ads</c><00:31:14.000><c> if</c><00:31:14.300><c> the</c><00:31:14.660><c> matrix</c><00:31:14.840><c> it's</c>

00:31:15.190 --> 00:31:15.200 align:start position:0%
going to do for ads if the matrix it's
 

00:31:15.200 --> 00:31:18.160 align:start position:0%
going to do for ads if the matrix it's
going<00:31:15.320><c> to</c><00:31:15.380><c> do</c><00:31:15.470><c> 16</c><00:31:15.890><c> of</c><00:31:16.010><c> them</c><00:31:16.420><c> the</c><00:31:17.420><c> reason</c><00:31:17.630><c> the</c>

00:31:18.160 --> 00:31:18.170 align:start position:0%
going to do 16 of them the reason the
 

00:31:18.170 --> 00:31:19.930 align:start position:0%
going to do 16 of them the reason the
reason<00:31:18.320><c> multiply</c><00:31:18.920><c> is</c><00:31:18.980><c> a</c><00:31:19.100><c> little</c><00:31:19.370><c> different</c><00:31:19.760><c> is</c>

00:31:19.930 --> 00:31:19.940 align:start position:0%
reason multiply is a little different is
 

00:31:19.940 --> 00:31:23.350 align:start position:0%
reason multiply is a little different is
that<00:31:20.810><c> if</c><00:31:21.260><c> you</c><00:31:21.650><c> multiply</c><00:31:22.220><c> a</c><00:31:22.520><c> vector</c><00:31:22.550><c> times</c><00:31:23.270><c> the</c>

00:31:23.350 --> 00:31:23.360 align:start position:0%
that if you multiply a vector times the
 

00:31:23.360 --> 00:31:26.650 align:start position:0%
that if you multiply a vector times the
matrix<00:31:23.570><c> it</c><00:31:24.050><c> does</c><00:31:24.860><c> a</c><00:31:25.210><c> linear</c><00:31:26.210><c> algebraic</c>

00:31:26.650 --> 00:31:26.660 align:start position:0%
matrix it does a linear algebraic
 

00:31:26.660 --> 00:31:28.360 align:start position:0%
matrix it does a linear algebraic
multiply<00:31:27.230><c> where</c><00:31:27.470><c> it's</c><00:31:27.590><c> actually</c><00:31:28.040><c> going</c><00:31:28.190><c> to</c><00:31:28.280><c> be</c>

00:31:28.360 --> 00:31:28.370 align:start position:0%
multiply where it's actually going to be
 

00:31:28.370 --> 00:31:30.070 align:start position:0%
multiply where it's actually going to be
for<00:31:28.700><c> dot</c><00:31:28.910><c> product</c><00:31:29.360><c> that's</c><00:31:29.780><c> what</c><00:31:29.960><c> it's</c>

00:31:30.070 --> 00:31:30.080 align:start position:0%
for dot product that's what it's
 

00:31:30.080 --> 00:31:32.020 align:start position:0%
for dot product that's what it's
actually<00:31:30.230><c> going</c><00:31:30.560><c> to</c><00:31:30.710><c> break</c><00:31:30.920><c> down</c><00:31:31.130><c> into</c><00:31:31.370><c> which</c>

00:31:32.020 --> 00:31:32.030 align:start position:0%
actually going to break down into which
 

00:31:32.030 --> 00:31:33.310 align:start position:0%
actually going to break down into which
is<00:31:32.150><c> really</c><00:31:32.330><c> convenient</c><00:31:32.720><c> because</c><00:31:33.050><c> at</c><00:31:33.260><c> the</c>

00:31:33.310 --> 00:31:33.320 align:start position:0%
is really convenient because at the
 

00:31:33.320 --> 00:31:35.380 align:start position:0%
is really convenient because at the
beginning<00:31:33.470><c> your</c><00:31:33.890><c> vertex</c><00:31:34.250><c> programs</c><00:31:34.760><c> you're</c>

00:31:35.380 --> 00:31:35.390 align:start position:0%
beginning your vertex programs you're
 

00:31:35.390 --> 00:31:36.790 align:start position:0%
beginning your vertex programs you're
always<00:31:35.720><c> having</c><00:31:35.900><c> to</c><00:31:36.020><c> do</c><00:31:36.170><c> these</c><00:31:36.350><c> for</c><00:31:36.560><c> dot</c>

00:31:36.790 --> 00:31:36.800 align:start position:0%
always having to do these for dot
 

00:31:36.800 --> 00:31:40.870 align:start position:0%
always having to do these for dot
products<00:31:37.250><c> to</c><00:31:37.340><c> transform</c><00:31:39.220><c> your</c><00:31:40.220><c> vertex</c><00:31:40.580><c> will</c>

00:31:40.870 --> 00:31:40.880 align:start position:0%
products to transform your vertex will
 

00:31:40.880 --> 00:31:42.400 align:start position:0%
products to transform your vertex will
not<00:31:41.030><c> just</c><00:31:41.300><c> a</c><00:31:41.360><c> one</c><00:31:41.510><c> liner</c><00:31:41.780><c> it's</c><00:31:42.050><c> just</c><00:31:42.230><c> you</c><00:31:42.320><c> know</c>

00:31:42.400 --> 00:31:42.410 align:start position:0%
not just a one liner it's just you know
 

00:31:42.410 --> 00:31:44.890 align:start position:0%
not just a one liner it's just you know
position<00:31:42.950><c> equals</c><00:31:43.160><c> vertex</c><00:31:43.970><c> times</c><00:31:44.300><c> modelview</c>

00:31:44.890 --> 00:31:44.900 align:start position:0%
position equals vertex times modelview
 

00:31:44.900 --> 00:31:47.440 align:start position:0%
position equals vertex times modelview
matrix<00:31:44.960><c> it's</c><00:31:45.650><c> pretty</c><00:31:46.010><c> convenient</c><00:31:46.370><c> and</c><00:31:46.610><c> me</c><00:31:47.360><c> at</c>

00:31:47.440 --> 00:31:47.450 align:start position:0%
matrix it's pretty convenient and me at
 

00:31:47.450 --> 00:31:50.290 align:start position:0%
matrix it's pretty convenient and me at
six<00:31:47.600><c> times</c><00:31:47.810><c> matrix</c><00:31:48.080><c> is</c><00:31:48.440><c> also</c><00:31:48.850><c> it</c><00:31:49.850><c> works</c><00:31:50.030><c> that</c>

00:31:50.290 --> 00:31:50.300 align:start position:0%
six times matrix is also it works that
 

00:31:50.300 --> 00:31:52.039 align:start position:0%
six times matrix is also it works that
way

00:31:52.039 --> 00:31:52.049 align:start position:0%
way
 

00:31:52.049 --> 00:31:54.719 align:start position:0%
way
so<00:31:53.049><c> I</c><00:31:53.440><c> talked</c><00:31:53.919><c> about</c><00:31:54.159><c> the</c><00:31:54.309><c> predefined</c>

00:31:54.719 --> 00:31:54.729 align:start position:0%
so I talked about the predefined
 

00:31:54.729 --> 00:32:00.450 align:start position:0%
so I talked about the predefined
variable<00:31:57.269><c> you</c><00:31:58.269><c> can</c><00:31:58.299><c> see</c><00:31:58.629><c> that</c><00:31:58.839><c> a</c><00:31:58.979><c> we</c><00:31:59.979><c> have</c><00:32:00.429><c> a</c>

00:32:00.450 --> 00:32:00.460 align:start position:0%
variable you can see that a we have a
 

00:32:00.460 --> 00:32:02.430 align:start position:0%
variable you can see that a we have a
predefined<00:32:01.059><c> ones</c><00:32:01.359><c> one</c><00:32:01.599><c> for</c><00:32:01.779><c> the</c><00:32:01.869><c> the</c><00:32:02.109><c> vertex</c>

00:32:02.430 --> 00:32:02.440 align:start position:0%
predefined ones one for the the vertex
 

00:32:02.440 --> 00:32:06.209 align:start position:0%
predefined ones one for the the vertex
color<00:32:02.969><c> normal</c><00:32:04.289><c> and</c><00:32:05.289><c> access</c><00:32:05.619><c> to</c><00:32:05.649><c> the</c><00:32:05.799><c> texture</c>

00:32:06.209 --> 00:32:06.219 align:start position:0%
color normal and access to the texture
 

00:32:06.219 --> 00:32:09.869 align:start position:0%
color normal and access to the texture
units<00:32:06.749><c> to</c><00:32:08.009><c> communicate</c><00:32:09.009><c> varying</c><00:32:09.460><c> types</c><00:32:09.669><c> to</c>

00:32:09.869 --> 00:32:09.879 align:start position:0%
units to communicate varying types to
 

00:32:09.879 --> 00:32:12.450 align:start position:0%
units to communicate varying types to
communicate<00:32:10.389><c> from</c><00:32:10.539><c> vertex</c><00:32:10.899><c> to</c><00:32:11.080><c> fragment</c><00:32:11.559><c> is</c>

00:32:12.450 --> 00:32:12.460 align:start position:0%
communicate from vertex to fragment is
 

00:32:12.460 --> 00:32:14.190 align:start position:0%
communicate from vertex to fragment is
it<00:32:12.669><c> again</c><00:32:13.149><c> texture</c><00:32:13.599><c> coordinates</c><00:32:14.049><c> in</c><00:32:14.139><c> the</c>

00:32:14.190 --> 00:32:14.200 align:start position:0%
it again texture coordinates in the
 

00:32:14.200 --> 00:32:17.969 align:start position:0%
it again texture coordinates in the
front<00:32:14.440><c> color</c><00:32:14.679><c> and</c><00:32:16.739><c> outputs</c><00:32:17.739><c> from</c><00:32:17.830><c> the</c>

00:32:17.969 --> 00:32:17.979 align:start position:0%
front color and outputs from the
 

00:32:17.979 --> 00:32:19.560 align:start position:0%
front color and outputs from the
fragment<00:32:18.369><c> shader</c><00:32:18.399><c> when</c><00:32:19.029><c> you're</c><00:32:19.149><c> right</c><00:32:19.299><c> you</c>

00:32:19.560 --> 00:32:19.570 align:start position:0%
fragment shader when you're right you
 

00:32:19.570 --> 00:32:21.539 align:start position:0%
fragment shader when you're right you
write<00:32:19.749><c> your</c><00:32:19.899><c> final</c><00:32:20.080><c> color</c><00:32:20.469><c> into</c><00:32:20.919><c> GL</c><00:32:21.249><c> frag</c>

00:32:21.539 --> 00:32:21.549 align:start position:0%
write your final color into GL frag
 

00:32:21.549 --> 00:32:23.339 align:start position:0%
write your final color into GL frag
color<00:32:21.849><c> and</c><00:32:22.119><c> that's</c><00:32:22.719><c> what</c><00:32:22.899><c> will</c><00:32:22.989><c> get</c><00:32:23.080><c> written</c>

00:32:23.339 --> 00:32:23.349 align:start position:0%
color and that's what will get written
 

00:32:23.349 --> 00:32:26.099 align:start position:0%
color and that's what will get written
to<00:32:23.469><c> the</c><00:32:23.559><c> frame</c><00:32:23.739><c> buffer</c><00:32:24.419><c> and</c><00:32:25.419><c> then</c><00:32:25.869><c> there's</c><00:32:26.019><c> a</c>

00:32:26.099 --> 00:32:26.109 align:start position:0%
to the frame buffer and then there's a
 

00:32:26.109 --> 00:32:28.289 align:start position:0%
to the frame buffer and then there's a
bunch<00:32:26.289><c> of</c><00:32:26.409><c> uniforms</c><00:32:26.979><c> are</c><00:32:27.190><c> declared</c><00:32:27.580><c> in</c><00:32:28.029><c> your</c>

00:32:28.289 --> 00:32:28.299 align:start position:0%
bunch of uniforms are declared in your
 

00:32:28.299 --> 00:32:30.749 align:start position:0%
bunch of uniforms are declared in your
modelview<00:32:28.599><c> matrix</c><00:32:28.659><c> and</c><00:32:29.320><c> access</c><00:32:30.099><c> to</c><00:32:30.129><c> the</c><00:32:30.369><c> bill</c>

00:32:30.749 --> 00:32:30.759 align:start position:0%
modelview matrix and access to the bill
 

00:32:30.759 --> 00:32:34.820 align:start position:0%
modelview matrix and access to the bill
lighting<00:32:31.119><c> information</c><00:32:31.659><c> from</c><00:32:31.809><c> the</c><00:32:31.899><c> Geo</c><00:32:32.080><c> state</c>

00:32:34.820 --> 00:32:34.830 align:start position:0%
 
 

00:32:34.830 --> 00:32:38.729 align:start position:0%
 
so<00:32:36.119><c> let's</c><00:32:37.119><c> take</c><00:32:37.269><c> a</c><00:32:37.330><c> look</c><00:32:37.599><c> at</c><00:32:37.690><c> a</c><00:32:37.749><c> we've</c><00:32:38.409><c> talked</c><00:32:38.619><c> a</c>

00:32:38.729 --> 00:32:38.739 align:start position:0%
so let's take a look at a we've talked a
 

00:32:38.739 --> 00:32:41.070 align:start position:0%
so let's take a look at a we've talked a
little<00:32:38.859><c> about</c><00:32:38.979><c> the</c><00:32:39.249><c> language</c><00:32:39.669><c> here</c><00:32:40.080><c> let's</c>

00:32:41.070 --> 00:32:41.080 align:start position:0%
little about the language here let's
 

00:32:41.080 --> 00:32:43.139 align:start position:0%
little about the language here let's
look<00:32:41.379><c> at</c><00:32:41.559><c> how</c><00:32:41.769><c> to</c><00:32:41.830><c> I've</c><00:32:42.729><c> shown</c><00:32:42.940><c> you</c><00:32:42.969><c> the</c>

00:32:43.139 --> 00:32:43.149 align:start position:0%
look at how to I've shown you the
 

00:32:43.149 --> 00:32:44.669 align:start position:0%
look at how to I've shown you the
program<00:32:43.509><c> string</c><00:32:43.839><c> how</c><00:32:44.049><c> do</c><00:32:44.109><c> you</c><00:32:44.229><c> actually</c><00:32:44.379><c> load</c>

00:32:44.669 --> 00:32:44.679 align:start position:0%
program string how do you actually load
 

00:32:44.679 --> 00:32:46.409 align:start position:0%
program string how do you actually load
these<00:32:44.859><c> into</c><00:32:45.190><c> your</c><00:32:45.309><c> GL</c><00:32:45.609><c> and</c><00:32:45.820><c> actually</c><00:32:46.119><c> make</c><00:32:46.269><c> use</c>

00:32:46.409 --> 00:32:46.419 align:start position:0%
these into your GL and actually make use
 

00:32:46.419 --> 00:32:52.109 align:start position:0%
these into your GL and actually make use
of<00:32:46.509><c> them</c><00:32:46.809><c> in</c><00:32:47.129><c> your</c><00:32:48.129><c> application</c><00:32:49.799><c> well</c><00:32:51.119><c> the</c>

00:32:52.109 --> 00:32:52.119 align:start position:0%
of them in your application well the
 

00:32:52.119 --> 00:32:56.369 align:start position:0%
of them in your application well the
first<00:32:52.359><c> thing</c><00:32:52.450><c> you</c><00:32:52.659><c> want</c><00:32:52.839><c> to</c><00:32:52.869><c> do</c><00:32:53.049><c> is</c><00:32:53.289><c> a</c><00:32:55.379><c> acquire</c>

00:32:56.369 --> 00:32:56.379 align:start position:0%
first thing you want to do is a acquire
 

00:32:56.379 --> 00:32:57.899 align:start position:0%
first thing you want to do is a acquire
the<00:32:56.589><c> program</c><00:32:56.950><c> strength</c><00:32:57.249><c> load</c><00:32:57.519><c> them</c><00:32:57.669><c> from</c><00:32:57.849><c> a</c>

00:32:57.899 --> 00:32:57.909 align:start position:0%
the program strength load them from a
 

00:32:57.909 --> 00:33:00.329 align:start position:0%
the program strength load them from a
file<00:32:58.149><c> do</c><00:32:58.599><c> whatever</c><00:32:58.899><c> you</c><00:32:58.989><c> need</c><00:32:59.049><c> to</c><00:32:59.169><c> do</c><00:32:59.379><c> but</c><00:33:00.279><c> uh</c>

00:33:00.329 --> 00:33:00.339 align:start position:0%
file do whatever you need to do but uh
 

00:33:00.339 --> 00:33:04.529 align:start position:0%
file do whatever you need to do but uh
load<00:33:01.239><c> them</c><00:33:01.450><c> into</c><00:33:01.629><c> two</c><00:33:02.349><c> two</c><00:33:02.710><c> strings</c><00:33:03.389><c> we've</c><00:33:04.389><c> got</c>

00:33:04.529 --> 00:33:04.539 align:start position:0%
load them into two two strings we've got
 

00:33:04.539 --> 00:33:07.320 align:start position:0%
load them into two two strings we've got
a<00:33:04.570><c> type</c><00:33:05.200><c> declared</c><00:33:05.619><c> for</c><00:33:05.830><c> that</c><00:33:06.009><c> GL</c><00:33:06.759><c> char</c><00:33:07.059><c> our</c>

00:33:07.320 --> 00:33:07.330 align:start position:0%
a type declared for that GL char our
 

00:33:07.330 --> 00:33:10.739 align:start position:0%
a type declared for that GL char our
pointer<00:33:08.009><c> load</c><00:33:09.009><c> them</c><00:33:09.159><c> in</c><00:33:09.309><c> and</c><00:33:09.549><c> then</c><00:33:09.789><c> you</c><00:33:10.539><c> want</c>

00:33:10.739 --> 00:33:10.749 align:start position:0%
pointer load them in and then you want
 

00:33:10.749 --> 00:33:12.209 align:start position:0%
pointer load them in and then you want
to<00:33:10.839><c> actually</c><00:33:10.960><c> put</c><00:33:11.289><c> them</c><00:33:11.499><c> in</c><00:33:11.679><c> an</c><00:33:11.859><c> array</c><00:33:12.190><c> of</c>

00:33:12.209 --> 00:33:12.219 align:start position:0%
to actually put them in an array of
 

00:33:12.219 --> 00:33:14.279 align:start position:0%
to actually put them in an array of
strings<00:33:12.729><c> and</c><00:33:13.029><c> the</c><00:33:13.419><c> reason</c><00:33:13.749><c> for</c><00:33:13.779><c> that</c><00:33:13.929><c> is</c><00:33:14.139><c> what</c>

00:33:14.279 --> 00:33:14.289 align:start position:0%
strings and the reason for that is what
 

00:33:14.289 --> 00:33:16.229 align:start position:0%
strings and the reason for that is what
I<00:33:14.349><c> said</c><00:33:14.440><c> you</c><00:33:15.159><c> can</c><00:33:15.339><c> actually</c><00:33:15.369><c> have</c><00:33:15.879><c> multiple</c>

00:33:16.229 --> 00:33:16.239 align:start position:0%
I said you can actually have multiple
 

00:33:16.239 --> 00:33:18.659 align:start position:0%
I said you can actually have multiple
strings<00:33:16.749><c> that</c><00:33:16.989><c> comprise</c><00:33:17.409><c> a</c><00:33:17.440><c> shader</c><00:33:17.830><c> with</c>

00:33:18.659 --> 00:33:18.669 align:start position:0%
strings that comprise a shader with
 

00:33:18.669 --> 00:33:21.419 align:start position:0%
strings that comprise a shader with
function<00:33:19.029><c> calls</c><00:33:19.239><c> between</c><00:33:19.389><c> them</c><00:33:20.099><c> so</c><00:33:21.099><c> in</c><00:33:21.309><c> this</c>

00:33:21.419 --> 00:33:21.429 align:start position:0%
function calls between them so in this
 

00:33:21.429 --> 00:33:23.999 align:start position:0%
function calls between them so in this
case<00:33:21.639><c> I</c><00:33:21.849><c> just</c><00:33:22.029><c> have</c><00:33:22.149><c> one</c><00:33:22.269><c> string</c><00:33:22.659><c> so</c><00:33:23.649><c> I'm</c>

00:33:23.999 --> 00:33:24.009 align:start position:0%
case I just have one string so I'm
 

00:33:24.009 --> 00:33:25.440 align:start position:0%
case I just have one string so I'm
obviously<00:33:24.190><c> fitting</c><00:33:24.639><c> the</c><00:33:24.729><c> array</c><00:33:24.940><c> size</c><00:33:25.149><c> to</c><00:33:25.330><c> be</c>

00:33:25.440 --> 00:33:25.450 align:start position:0%
obviously fitting the array size to be
 

00:33:25.450 --> 00:33:27.829 align:start position:0%
obviously fitting the array size to be
just<00:33:25.599><c> one</c><00:33:25.809><c> but</c><00:33:26.080><c> that</c><00:33:26.169><c> could</c><00:33:26.349><c> be</c><00:33:26.379><c> any</c><00:33:26.710><c> number</c>

00:33:27.829 --> 00:33:27.839 align:start position:0%
just one but that could be any number
 

00:33:27.839 --> 00:33:30.930 align:start position:0%
just one but that could be any number
the<00:33:28.839><c> second</c><00:33:29.229><c> step</c><00:33:29.440><c> you</c><00:33:29.739><c> need</c><00:33:30.190><c> to</c><00:33:30.309><c> Claire</c><00:33:30.639><c> three</c>

00:33:30.930 --> 00:33:30.940 align:start position:0%
the second step you need to Claire three
 

00:33:30.940 --> 00:33:33.719 align:start position:0%
the second step you need to Claire three
handles<00:33:31.359><c> one</c><00:33:31.809><c> for</c><00:33:32.080><c> the</c><00:33:32.169><c> vertex</c><00:33:32.859><c> shader</c><00:33:33.190><c> object</c>

00:33:33.719 --> 00:33:33.729 align:start position:0%
handles one for the vertex shader object
 

00:33:33.729 --> 00:33:36.029 align:start position:0%
handles one for the vertex shader object
one<00:33:34.450><c> for</c><00:33:34.629><c> the</c><00:33:34.719><c> fragment</c><00:33:35.139><c> shader</c><00:33:35.169><c> object</c><00:33:35.859><c> and</c>

00:33:36.029 --> 00:33:36.039 align:start position:0%
one for the fragment shader object and
 

00:33:36.039 --> 00:33:38.489 align:start position:0%
one for the fragment shader object and
then<00:33:36.639><c> one</c><00:33:36.879><c> for</c><00:33:37.119><c> the</c><00:33:37.210><c> final</c><00:33:37.599><c> program</c><00:33:38.019><c> object</c>

00:33:38.489 --> 00:33:38.499 align:start position:0%
then one for the final program object
 

00:33:38.499 --> 00:33:39.839 align:start position:0%
then one for the final program object
that<00:33:38.589><c> these</c><00:33:38.769><c> are</c><00:33:38.919><c> both</c><00:33:39.070><c> going</c><00:33:39.279><c> to</c><00:33:39.369><c> be</c><00:33:39.429><c> attached</c>

00:33:39.839 --> 00:33:39.849 align:start position:0%
that these are both going to be attached
 

00:33:39.849 --> 00:33:45.089 align:start position:0%
that these are both going to be attached
to<00:33:42.929><c> so</c><00:33:43.929><c> you</c><00:33:43.989><c> either</c><00:33:44.200><c> have</c><00:33:44.469><c> those</c><00:33:44.589><c> declared</c><00:33:44.919><c> and</c>

00:33:45.089 --> 00:33:45.099 align:start position:0%
to so you either have those declared and
 

00:33:45.099 --> 00:33:47.359 align:start position:0%
to so you either have those declared and
then<00:33:45.190><c> other</c><00:33:45.399><c> two</c><00:33:45.639><c> variables</c><00:33:46.089><c> are</c><00:33:46.179><c> useful</c><00:33:46.570><c> is</c>

00:33:47.359 --> 00:33:47.369 align:start position:0%
then other two variables are useful is
 

00:33:47.369 --> 00:33:51.259 align:start position:0%
then other two variables are useful is
basically<00:33:48.369><c> a</c><00:33:48.399><c> status</c><00:33:49.229><c> status</c><00:33:50.229><c> variable</c><00:33:50.889><c> and</c>

00:33:51.259 --> 00:33:51.269 align:start position:0%
basically a status status variable and
 

00:33:51.269 --> 00:33:54.869 align:start position:0%
basically a status status variable and
also<00:33:52.269><c> the</c><00:33:53.139><c> length</c><00:33:53.379><c> of</c><00:33:53.529><c> a</c><00:33:53.619><c> log</c><00:33:53.889><c> because</c><00:33:54.279><c> when</c>

00:33:54.869 --> 00:33:54.879 align:start position:0%
also the length of a log because when
 

00:33:54.879 --> 00:33:56.969 align:start position:0%
also the length of a log because when
you<00:33:55.029><c> perform</c><00:33:55.719><c> compiles</c><00:33:56.289><c> and</c><00:33:56.469><c> links</c><00:33:56.830><c> you're</c>

00:33:56.969 --> 00:33:56.979 align:start position:0%
you perform compiles and links you're
 

00:33:56.979 --> 00:33:58.379 align:start position:0%
you perform compiles and links you're
actually<00:33:57.159><c> going</c><00:33:57.519><c> to</c><00:33:57.609><c> get</c><00:33:57.820><c> information</c><00:33:58.089><c> back</c>

00:33:58.379 --> 00:33:58.389 align:start position:0%
actually going to get information back
 

00:33:58.389 --> 00:33:59.999 align:start position:0%
actually going to get information back
from<00:33:58.659><c> the</c><00:33:58.960><c> compiler</c><00:33:59.349><c> that</c><00:33:59.379><c> you</c><00:33:59.589><c> might</c><00:33:59.739><c> want</c><00:33:59.919><c> to</c>

00:33:59.999 --> 00:34:00.009 align:start position:0%
from the compiler that you might want to
 

00:34:00.009 --> 00:34:01.589 align:start position:0%
from the compiler that you might want to
check<00:34:00.039><c> or</c><00:34:00.669><c> if</c><00:34:00.729><c> those</c><00:34:00.879><c> errors</c><00:34:01.119><c> you're</c><00:34:01.389><c> going</c><00:34:01.539><c> to</c>

00:34:01.589 --> 00:34:01.599 align:start position:0%
check or if those errors you're going to
 

00:34:01.599 --> 00:34:03.839 align:start position:0%
check or if those errors you're going to
want<00:34:01.719><c> to</c><00:34:01.779><c> see</c><00:34:01.929><c> them</c><00:34:02.109><c> so</c><00:34:02.710><c> yes</c><00:34:03.159><c> there's</c><00:34:03.399><c> aisle</c><00:34:03.579><c> is</c>

00:34:03.839 --> 00:34:03.849 align:start position:0%
want to see them so yes there's aisle is
 

00:34:03.849 --> 00:34:06.409 align:start position:0%
want to see them so yes there's aisle is
not<00:34:04.029><c> a</c><00:34:04.059><c> log</c><00:34:04.479><c> of</c><00:34:04.659><c> it</c><00:34:04.719><c> comes</c><00:34:04.869><c> by</c>

00:34:06.409 --> 00:34:06.419 align:start position:0%
not a log of it comes by
 

00:34:06.419 --> 00:34:10.290 align:start position:0%
not a log of it comes by
your<00:34:07.419><c> next</c><00:34:07.630><c> stage</c><00:34:08.579><c> let's</c><00:34:09.579><c> create</c><00:34:09.820><c> the</c><00:34:09.970><c> vertex</c>

00:34:10.290 --> 00:34:10.300 align:start position:0%
your next stage let's create the vertex
 

00:34:10.300 --> 00:34:12.839 align:start position:0%
your next stage let's create the vertex
shader<00:34:10.510><c> object</c><00:34:10.990><c> you</c><00:34:11.919><c> can</c><00:34:11.950><c> see</c><00:34:12.220><c> from</c><00:34:12.399><c> the</c><00:34:12.579><c> the</c>

00:34:12.839 --> 00:34:12.849 align:start position:0%
shader object you can see from the the
 

00:34:12.849 --> 00:34:14.430 align:start position:0%
shader object you can see from the the
code<00:34:13.030><c> I've</c><00:34:13.210><c> got</c><00:34:13.359><c> here</c><00:34:13.540><c> how</c><00:34:13.659><c> to</c><00:34:13.720><c> do</c><00:34:13.899><c> it</c><00:34:14.020><c> it's</c><00:34:14.290><c> not</c>

00:34:14.430 --> 00:34:14.440 align:start position:0%
code I've got here how to do it it's not
 

00:34:14.440 --> 00:34:17.970 align:start position:0%
code I've got here how to do it it's not
very<00:34:14.560><c> hard</c><00:34:15.359><c> you</c><00:34:16.359><c> basically</c><00:34:16.570><c> create</c><00:34:17.470><c> shader</c>

00:34:17.970 --> 00:34:17.980 align:start position:0%
very hard you basically create shader
 

00:34:17.980 --> 00:34:20.040 align:start position:0%
very hard you basically create shader
object<00:34:18.490><c> on</c><00:34:18.700><c> you</c><00:34:19.149><c> tell</c><00:34:19.359><c> you</c><00:34:19.720><c> know</c><00:34:19.839><c> it's</c><00:34:19.990><c> a</c>

00:34:20.040 --> 00:34:20.050 align:start position:0%
object on you tell you know it's a
 

00:34:20.050 --> 00:34:23.339 align:start position:0%
object on you tell you know it's a
vertex<00:34:20.379><c> shader</c><00:34:21.359><c> GL</c><00:34:22.359><c> shader</c><00:34:22.659><c> source</c><00:34:22.990><c> ARB</c>

00:34:23.339 --> 00:34:23.349 align:start position:0%
vertex shader GL shader source ARB
 

00:34:23.349 --> 00:34:25.770 align:start position:0%
vertex shader GL shader source ARB
allows<00:34:24.159><c> me</c><00:34:24.369><c> basically</c><00:34:24.700><c> to</c><00:34:24.970><c> attach</c><00:34:25.270><c> the</c><00:34:25.510><c> string</c>

00:34:25.770 --> 00:34:25.780 align:start position:0%
allows me basically to attach the string
 

00:34:25.780 --> 00:34:29.639 align:start position:0%
allows me basically to attach the string
to<00:34:25.839><c> that</c><00:34:27.359><c> compile</c><00:34:28.359><c> shader</c><00:34:28.720><c> r</c><00:34:29.020><c> will</c><00:34:29.320><c> actually</c>

00:34:29.639 --> 00:34:29.649 align:start position:0%
to that compile shader r will actually
 

00:34:29.649 --> 00:34:31.260 align:start position:0%
to that compile shader r will actually
perform<00:34:29.829><c> the</c><00:34:30.250><c> kit</c><00:34:30.399><c> will</c><00:34:30.550><c> start</c><00:34:30.820><c> the</c><00:34:30.940><c> compiler</c>

00:34:31.260 --> 00:34:31.270 align:start position:0%
perform the kit will start the compiler
 

00:34:31.270 --> 00:34:33.240 align:start position:0%
perform the kit will start the compiler
going<00:34:31.690><c> generating</c><00:34:32.409><c> the</c><00:34:32.500><c> machine</c><00:34:32.800><c> code</c><00:34:33.010><c> for</c>

00:34:33.240 --> 00:34:33.250 align:start position:0%
going generating the machine code for
 

00:34:33.250 --> 00:34:36.510 align:start position:0%
going generating the machine code for
this<00:34:33.369><c> and</c><00:34:34.179><c> at</c><00:34:34.270><c> that</c><00:34:34.389><c> point</c><00:34:34.599><c> you</c><00:34:35.010><c> want</c><00:34:36.010><c> to</c><00:34:36.280><c> get</c>

00:34:36.510 --> 00:34:36.520 align:start position:0%
this and at that point you want to get
 

00:34:36.520 --> 00:34:40.230 align:start position:0%
this and at that point you want to get
back<00:34:36.899><c> the</c><00:34:38.010><c> status</c><00:34:39.010><c> of</c><00:34:39.159><c> the</c><00:34:39.399><c> compile</c><00:34:39.700><c> to</c><00:34:40.030><c> see</c><00:34:40.149><c> if</c>

00:34:40.230 --> 00:34:40.240 align:start position:0%
back the status of the compile to see if
 

00:34:40.240 --> 00:34:42.569 align:start position:0%
back the status of the compile to see if
it<00:34:40.300><c> succeeded</c><00:34:40.659><c> or</c><00:34:40.869><c> not</c><00:34:40.899><c> and</c><00:34:41.290><c> also</c><00:34:42.010><c> you</c><00:34:42.280><c> want</c><00:34:42.460><c> to</c>

00:34:42.569 --> 00:34:42.579 align:start position:0%
it succeeded or not and also you want to
 

00:34:42.579 --> 00:34:44.909 align:start position:0%
it succeeded or not and also you want to
get<00:34:42.730><c> back</c><00:34:43.000><c> the</c><00:34:43.540><c> length</c><00:34:43.750><c> of</c><00:34:44.020><c> an</c><00:34:44.139><c> info</c><00:34:44.379><c> log</c><00:34:44.589><c> and</c>

00:34:44.909 --> 00:34:44.919 align:start position:0%
get back the length of an info log and
 

00:34:44.919 --> 00:34:47.129 align:start position:0%
get back the length of an info log and
you<00:34:45.579><c> need</c><00:34:45.730><c> that</c><00:34:45.760><c> length</c><00:34:46.179><c> because</c><00:34:46.720><c> you'll</c><00:34:46.990><c> need</c>

00:34:47.129 --> 00:34:47.139 align:start position:0%
you need that length because you'll need
 

00:34:47.139 --> 00:34:51.210 align:start position:0%
you need that length because you'll need
to<00:34:47.320><c> need</c><00:34:48.070><c> to</c><00:34:48.099><c> allocate</c><00:34:48.339><c> some</c><00:34:48.760><c> memory</c><00:34:49.230><c> to</c><00:34:50.230><c> store</c>

00:34:51.210 --> 00:34:51.220 align:start position:0%
to need to allocate some memory to store
 

00:34:51.220 --> 00:34:57.720 align:start position:0%
to need to allocate some memory to store
your<00:34:51.790><c> login</c><00:34:52.210><c> too</c><00:34:53.520><c> hmm</c><00:34:54.810><c> so</c><00:34:56.280><c> you</c><00:34:57.280><c> will</c><00:34:57.400><c> repeat</c>

00:34:57.720 --> 00:34:57.730 align:start position:0%
your login too hmm so you will repeat
 

00:34:57.730 --> 00:34:59.640 align:start position:0%
your login too hmm so you will repeat
that<00:34:57.940><c> step</c><00:34:58.270><c> for</c><00:34:58.720><c> the</c><00:34:58.810><c> fragment</c><00:34:59.230><c> shader</c><00:34:59.260><c> it's</c>

00:34:59.640 --> 00:34:59.650 align:start position:0%
that step for the fragment shader it's
 

00:34:59.650 --> 00:35:01.380 align:start position:0%
that step for the fragment shader it's
exactly<00:35:00.070><c> the</c><00:35:00.250><c> same</c><00:35:00.430><c> thing</c><00:35:00.700><c> except</c><00:35:01.180><c> with</c>

00:35:01.380 --> 00:35:01.390 align:start position:0%
exactly the same thing except with
 

00:35:01.390 --> 00:35:02.760 align:start position:0%
exactly the same thing except with
vertex<00:35:01.720><c> pretty</c><00:35:02.050><c> much</c><00:35:02.170><c> replaced</c><00:35:02.320><c> with</c><00:35:02.710><c> the</c>

00:35:02.760 --> 00:35:02.770 align:start position:0%
vertex pretty much replaced with the
 

00:35:02.770 --> 00:35:04.800 align:start position:0%
vertex pretty much replaced with the
word<00:35:02.920><c> fragment</c><00:35:03.400><c> so</c><00:35:04.300><c> you're</c><00:35:04.480><c> going</c><00:35:04.570><c> to</c><00:35:04.630><c> end</c><00:35:04.780><c> up</c>

00:35:04.800 --> 00:35:04.810 align:start position:0%
word fragment so you're going to end up
 

00:35:04.810 --> 00:35:06.210 align:start position:0%
word fragment so you're going to end up
with<00:35:04.900><c> these</c><00:35:05.050><c> vertex</c><00:35:05.470><c> and</c><00:35:05.619><c> fragment</c><00:35:05.680><c> shader</c>

00:35:06.210 --> 00:35:06.220 align:start position:0%
with these vertex and fragment shader
 

00:35:06.220 --> 00:35:08.400 align:start position:0%
with these vertex and fragment shader
objects<00:35:06.760><c> at</c><00:35:06.940><c> that</c><00:35:07.240><c> point</c><00:35:07.540><c> you</c><00:35:07.810><c> create</c><00:35:08.380><c> a</c>

00:35:08.400 --> 00:35:08.410 align:start position:0%
objects at that point you create a
 

00:35:08.410 --> 00:35:11.010 align:start position:0%
objects at that point you create a
program<00:35:08.650><c> object</c><00:35:09.310><c> you</c><00:35:09.880><c> attach</c><00:35:10.240><c> the</c><00:35:10.270><c> vertex</c><00:35:10.869><c> and</c>

00:35:11.010 --> 00:35:11.020 align:start position:0%
program object you attach the vertex and
 

00:35:11.020 --> 00:35:13.050 align:start position:0%
program object you attach the vertex and
fragment<00:35:11.079><c> shader</c><00:35:11.589><c> to</c><00:35:11.859><c> that</c><00:35:12.069><c> and</c><00:35:12.310><c> then</c><00:35:12.880><c> you</c>

00:35:13.050 --> 00:35:13.060 align:start position:0%
fragment shader to that and then you
 

00:35:13.060 --> 00:35:16.380 align:start position:0%
fragment shader to that and then you
call<00:35:13.599><c> link</c><00:35:14.260><c> program</c><00:35:14.950><c> and</c><00:35:15.849><c> that's</c><00:35:16.119><c> basically</c>

00:35:16.380 --> 00:35:16.390 align:start position:0%
call link program and that's basically
 

00:35:16.390 --> 00:35:19.819 align:start position:0%
call link program and that's basically
going<00:35:16.690><c> to</c><00:35:16.780><c> tie</c><00:35:17.079><c> up</c><00:35:17.550><c> varying</c><00:35:18.550><c> date</c><00:35:18.819><c> varying</c>

00:35:19.819 --> 00:35:19.829 align:start position:0%
going to tie up varying date varying
 

00:35:19.829 --> 00:35:21.630 align:start position:0%
going to tie up varying date varying
variables<00:35:20.829><c> that</c><00:35:20.859><c> you</c><00:35:20.950><c> declared</c><00:35:21.400><c> in</c><00:35:21.579><c> the</c>

00:35:21.630 --> 00:35:21.640 align:start position:0%
variables that you declared in the
 

00:35:21.640 --> 00:35:23.040 align:start position:0%
variables that you declared in the
vertex<00:35:22.000><c> and</c><00:35:22.119><c> fragment</c><00:35:22.180><c> shader</c><00:35:22.660><c> it</c><00:35:22.810><c> doesn't</c>

00:35:23.040 --> 00:35:23.050 align:start position:0%
vertex and fragment shader it doesn't
 

00:35:23.050 --> 00:35:24.870 align:start position:0%
vertex and fragment shader it doesn't
name<00:35:23.230><c> match</c><00:35:23.470><c> on</c><00:35:23.710><c> those</c><00:35:23.890><c> and</c><00:35:24.099><c> connects</c><00:35:24.700><c> them</c>

00:35:24.870 --> 00:35:24.880 align:start position:0%
name match on those and connects them
 

00:35:24.880 --> 00:35:27.720 align:start position:0%
name match on those and connects them
together<00:35:25.180><c> and</c><00:35:25.450><c> the</c><00:35:26.410><c> linker</c><00:35:26.800><c> you</c><00:35:27.250><c> also</c><00:35:27.430><c> need</c><00:35:27.700><c> to</c>

00:35:27.720 --> 00:35:27.730 align:start position:0%
together and the linker you also need to
 

00:35:27.730 --> 00:35:29.670 align:start position:0%
together and the linker you also need to
check<00:35:28.030><c> for</c><00:35:28.270><c> errors</c><00:35:28.450><c> as</c><00:35:28.780><c> well</c><00:35:28.990><c> because</c><00:35:29.470><c> the</c>

00:35:29.670 --> 00:35:29.680 align:start position:0%
check for errors as well because the
 

00:35:29.680 --> 00:35:32.849 align:start position:0%
check for errors as well because the
link<00:35:29.890><c> stage</c><00:35:30.310><c> like</c><00:35:31.180><c> like</c><00:35:31.960><c> the</c><00:35:32.680><c> C</c><00:35:32.829><c> programming</c>

00:35:32.849 --> 00:35:32.859 align:start position:0%
link stage like like the C programming
 

00:35:32.859 --> 00:35:36.559 align:start position:0%
link stage like like the C programming
can<00:35:33.339><c> feel</c><00:35:33.579><c> I</c><00:35:33.790><c> need</c><00:35:34.270><c> to</c><00:35:34.420><c> check</c><00:35:34.630><c> that</c><00:35:35.490><c> so</c>

00:35:36.559 --> 00:35:36.569 align:start position:0%
can feel I need to check that so
 

00:35:36.569 --> 00:35:39.480 align:start position:0%
can feel I need to check that so
assuming<00:35:37.569><c> that</c><00:35:37.720><c> that</c><00:35:37.900><c> all</c><00:35:38.170><c> succeeded</c><00:35:38.680><c> and</c><00:35:38.980><c> you</c>

00:35:39.480 --> 00:35:39.490 align:start position:0%
assuming that that all succeeded and you
 

00:35:39.490 --> 00:35:41.400 align:start position:0%
assuming that that all succeeded and you
have<00:35:39.670><c> your</c><00:35:39.849><c> program</c><00:35:40.210><c> object</c><00:35:40.630><c> ready</c><00:35:40.810><c> to</c><00:35:40.960><c> go</c><00:35:41.140><c> if</c>

00:35:41.400 --> 00:35:41.410 align:start position:0%
have your program object ready to go if
 

00:35:41.410 --> 00:35:43.740 align:start position:0%
have your program object ready to go if
you're<00:35:42.099><c> ready</c><00:35:42.160><c> to</c><00:35:42.430><c> start</c><00:35:42.730><c> drawing</c><00:35:43.060><c> geometry</c>

00:35:43.740 --> 00:35:43.750 align:start position:0%
you're ready to start drawing geometry
 

00:35:43.750 --> 00:35:46.980 align:start position:0%
you're ready to start drawing geometry
with<00:35:44.440><c> that</c><00:35:44.680><c> program</c><00:35:44.890><c> object</c><00:35:45.490><c> you</c><00:35:46.180><c> make</c><00:35:46.359><c> a</c><00:35:46.630><c> call</c>

00:35:46.980 --> 00:35:46.990 align:start position:0%
with that program object you make a call
 

00:35:46.990 --> 00:35:50.069 align:start position:0%
with that program object you make a call
to<00:35:47.020><c> use</c><00:35:47.650><c> program</c><00:35:48.130><c> object</c><00:35:48.579><c> and</c><00:35:48.819><c> then</c><00:35:49.810><c> you</c><00:35:49.930><c> just</c>

00:35:50.069 --> 00:35:50.079 align:start position:0%
to use program object and then you just
 

00:35:50.079 --> 00:35:51.390 align:start position:0%
to use program object and then you just
put<00:35:50.410><c> it</c><00:35:50.500><c> in</c><00:35:50.589><c> there</c><00:35:50.650><c> and</c><00:35:50.829><c> it</c><00:35:51.040><c> will</c><00:35:51.160><c> start</c><00:35:51.339><c> to</c>

00:35:51.390 --> 00:35:51.400 align:start position:0%
put it in there and it will start to
 

00:35:51.400 --> 00:35:54.720 align:start position:0%
put it in there and it will start to
draw<00:35:51.640><c> with</c><00:35:51.849><c> that</c><00:35:52.410><c> very</c><00:35:53.410><c> unlike</c><00:35:53.980><c> our</c><00:35:54.190><c> vertex</c>

00:35:54.720 --> 00:35:54.730 align:start position:0%
draw with that very unlike our vertex
 

00:35:54.730 --> 00:35:57.150 align:start position:0%
draw with that very unlike our vertex
and<00:35:54.940><c> fragment</c><00:35:55.000><c> program</c><00:35:55.660><c> there's</c><00:35:56.470><c> no</c><00:35:56.710><c> GL</c>

00:35:57.150 --> 00:35:57.160 align:start position:0%
and fragment program there's no GL
 

00:35:57.160 --> 00:35:59.579 align:start position:0%
and fragment program there's no GL
enable/disable<00:35:57.880><c> you</c><00:35:58.599><c> don't</c><00:35:58.839><c> enable</c><00:35:59.290><c> and</c>

00:35:59.579 --> 00:35:59.589 align:start position:0%
enable/disable you don't enable and
 

00:35:59.589 --> 00:36:01.770 align:start position:0%
enable/disable you don't enable and
disable<00:35:59.650><c> it</c><00:36:00.099><c> rather</c><00:36:00.490><c> you</c><00:36:01.000><c> use</c><00:36:01.329><c> a</c><00:36:01.359><c> program</c>

00:36:01.770 --> 00:36:01.780 align:start position:0%
disable it rather you use a program
 

00:36:01.780 --> 00:36:04.410 align:start position:0%
disable it rather you use a program
object<00:36:02.380><c> and</c><00:36:02.560><c> then</c><00:36:03.339><c> if</c><00:36:03.579><c> you</c><00:36:03.700><c> want</c><00:36:03.910><c> to</c><00:36:04.030><c> turn</c><00:36:04.210><c> off</c>

00:36:04.410 --> 00:36:04.420 align:start position:0%
object and then if you want to turn off
 

00:36:04.420 --> 00:36:07.500 align:start position:0%
object and then if you want to turn off
the<00:36:04.569><c> shader</c><00:36:04.810><c> you</c><00:36:05.680><c> call</c><00:36:06.310><c> it</c><00:36:06.460><c> with</c><00:36:06.579><c> no</c><00:36:06.819><c> not</c><00:36:07.329><c> well</c>

00:36:07.500 --> 00:36:07.510 align:start position:0%
the shader you call it with no not well
 

00:36:07.510 --> 00:36:08.940 align:start position:0%
the shader you call it with no not well
to<00:36:07.690><c> that</c><00:36:07.810><c> will</c><00:36:07.990><c> switch</c><00:36:08.290><c> you</c><00:36:08.440><c> back</c><00:36:08.470><c> to</c><00:36:08.829><c> the</c>

00:36:08.940 --> 00:36:08.950 align:start position:0%
to that will switch you back to the
 

00:36:08.950 --> 00:36:14.490 align:start position:0%
to that will switch you back to the
fixed<00:36:09.700><c> function</c><00:36:11.160><c> pipeline</c><00:36:12.540><c> so</c><00:36:13.540><c> I</c><00:36:13.900><c> mentioned</c>

00:36:14.490 --> 00:36:14.500 align:start position:0%
fixed function pipeline so I mentioned
 

00:36:14.500 --> 00:36:16.859 align:start position:0%
fixed function pipeline so I mentioned
that<00:36:14.859><c> it</c><00:36:15.010><c> inside</c><00:36:15.430><c> these</c><00:36:15.609><c> languages</c><00:36:16.030><c> you</c><00:36:16.690><c> can</c>

00:36:16.859 --> 00:36:16.869 align:start position:0%
that it inside these languages you can
 

00:36:16.869 --> 00:36:19.650 align:start position:0%
that it inside these languages you can
declare<00:36:17.020><c> variables</c><00:36:17.829><c> with</c><00:36:18.040><c> the</c><00:36:18.130><c> uniform</c><00:36:18.579><c> type</c>

00:36:19.650 --> 00:36:19.660 align:start position:0%
declare variables with the uniform type
 

00:36:19.660 --> 00:36:23.250 align:start position:0%
declare variables with the uniform type
basically<00:36:20.140><c> are</c><00:36:20.289><c> your</c><00:36:20.500><c> way</c><00:36:20.770><c> of</c><00:36:22.260><c> passing</c>

00:36:23.250 --> 00:36:23.260 align:start position:0%
basically are your way of passing
 

00:36:23.260 --> 00:36:27.240 align:start position:0%
basically are your way of passing
parameters<00:36:23.650><c> into</c><00:36:24.309><c> your</c><00:36:24.549><c> program</c><00:36:26.130><c> for</c><00:36:27.130><c> those</c>

00:36:27.240 --> 00:36:27.250 align:start position:0%
parameters into your program for those
 

00:36:27.250 --> 00:36:28.559 align:start position:0%
parameters into your program for those
familiar<00:36:27.400><c> with</c><00:36:27.760><c> our</c><00:36:27.880><c> vertex</c><00:36:28.329><c> and</c><00:36:28.510><c> fragment</c>

00:36:28.559 --> 00:36:28.569 align:start position:0%
familiar with our vertex and fragment
 

00:36:28.569 --> 00:36:32.400 align:start position:0%
familiar with our vertex and fragment
program<00:36:29.230><c> these</c><00:36:30.839><c> environment</c><00:36:31.839><c> parameters</c><00:36:32.319><c> and</c>

00:36:32.400 --> 00:36:32.410 align:start position:0%
program these environment parameters and
 

00:36:32.410 --> 00:36:34.440 align:start position:0%
program these environment parameters and
local<00:36:32.740><c> parameters</c><00:36:33.160><c> well</c><00:36:33.420><c> they're</c><00:36:34.420><c> all</c>

00:36:34.440 --> 00:36:34.450 align:start position:0%
local parameters well they're all
 

00:36:34.450 --> 00:36:36.380 align:start position:0%
local parameters well they're all
environment<00:36:35.109><c> parameters</c><00:36:35.559><c> at</c><00:36:35.680><c> this</c><00:36:35.829><c> point</c><00:36:36.069><c> and</c>

00:36:36.380 --> 00:36:36.390 align:start position:0%
environment parameters at this point and
 

00:36:36.390 --> 00:36:39.799 align:start position:0%
environment parameters at this point and
this<00:36:37.390><c> is</c><00:36:38.020><c> how</c><00:36:38.140><c> you</c><00:36:38.170><c> set</c><00:36:38.530><c> them</c><00:36:38.740><c> you</c><00:36:39.549><c> basically</c>

00:36:39.799 --> 00:36:39.809 align:start position:0%
this is how you set them you basically
 

00:36:39.809 --> 00:36:43.109 align:start position:0%
this is how you set them you basically
you<00:36:40.809><c> should</c><00:36:41.020><c> just</c><00:36:41.170><c> two</c><00:36:41.319><c> calls</c><00:36:41.589><c> required</c><00:36:42.119><c> the</c>

00:36:43.109 --> 00:36:43.119 align:start position:0%
you should just two calls required the
 

00:36:43.119 --> 00:36:44.789 align:start position:0%
you should just two calls required the
first<00:36:43.359><c> one</c><00:36:43.539><c> is</c><00:36:43.569><c> you</c><00:36:44.020><c> need</c><00:36:44.200><c> to</c><00:36:44.349><c> get</c><00:36:44.500><c> like</c><00:36:44.680><c> an</c>

00:36:44.789 --> 00:36:44.799 align:start position:0%
first one is you need to get like an
 

00:36:44.799 --> 00:36:47.010 align:start position:0%
first one is you need to get like an
index<00:36:45.190><c> back</c><00:36:45.490><c> which</c><00:36:45.760><c> is</c><00:36:45.880><c> the</c><00:36:46.000><c> position</c><00:36:46.450><c> of</c><00:36:46.599><c> that</c>

00:36:47.010 --> 00:36:47.020 align:start position:0%
index back which is the position of that
 

00:36:47.020 --> 00:36:49.140 align:start position:0%
index back which is the position of that
uniform<00:36:47.349><c> and</c><00:36:47.740><c> you</c><00:36:48.369><c> do</c><00:36:48.520><c> the</c><00:36:48.730><c> first</c><00:36:48.940><c> thing</c><00:36:49.000><c> you</c>

00:36:49.140 --> 00:36:49.150 align:start position:0%
uniform and you do the first thing you
 

00:36:49.150 --> 00:36:50.789 align:start position:0%
uniform and you do the first thing you
pass<00:36:49.329><c> in</c><00:36:49.539><c> is</c><00:36:49.690><c> the</c><00:36:49.809><c> actual</c><00:36:50.079><c> string</c><00:36:50.530><c> that</c><00:36:50.680><c> you</c>

00:36:50.789 --> 00:36:50.799 align:start position:0%
pass in is the actual string that you
 

00:36:50.799 --> 00:36:54.420 align:start position:0%
pass in is the actual string that you
declared<00:36:51.190><c> in</c><00:36:51.339><c> your</c><00:36:51.460><c> program</c><00:36:52.980><c> it</c><00:36:53.980><c> gives</c><00:36:54.250><c> you</c><00:36:54.339><c> an</c>

00:36:54.420 --> 00:36:54.430 align:start position:0%
declared in your program it gives you an
 

00:36:54.430 --> 00:36:56.279 align:start position:0%
declared in your program it gives you an
index<00:36:54.700><c> packet</c><00:36:55.059><c> then</c><00:36:55.180><c> you</c><00:36:55.270><c> make</c><00:36:55.450><c> call</c><00:36:55.780><c> to</c><00:36:55.960><c> GL</c>

00:36:56.279 --> 00:36:56.289 align:start position:0%
index packet then you make call to GL
 

00:36:56.289 --> 00:36:58.890 align:start position:0%
index packet then you make call to GL
uniform<00:36:56.890><c> and</c><00:36:57.130><c> there's</c><00:36:57.970><c> several</c><00:36:58.210><c> variants</c><00:36:58.750><c> of</c>

00:36:58.890 --> 00:36:58.900 align:start position:0%
uniform and there's several variants of
 

00:36:58.900 --> 00:37:00.990 align:start position:0%
uniform and there's several variants of
that<00:36:59.109><c> for</c><00:36:59.440><c> you</c><00:36:59.680><c> know</c><00:36:59.770><c> passing</c><00:37:00.190><c> in</c><00:37:00.280><c> an</c><00:37:00.400><c> array</c><00:37:00.670><c> or</c>

00:37:00.990 --> 00:37:01.000 align:start position:0%
that for you know passing in an array or
 

00:37:01.000 --> 00:37:03.870 align:start position:0%
that for you know passing in an array or
some<00:37:01.510><c> immediate</c><00:37:02.039><c> inline</c><00:37:03.039><c> floating</c><00:37:03.700><c> point</c>

00:37:03.870 --> 00:37:03.880 align:start position:0%
some immediate inline floating point
 

00:37:03.880 --> 00:37:08.940 align:start position:0%
some immediate inline floating point
values<00:37:04.650><c> the</c><00:37:05.650><c> pass</c><00:37:05.859><c> in</c><00:37:06.069><c> your</c><00:37:06.099><c> uniform</c><00:37:06.430><c> data</c><00:37:07.950><c> the</c>

00:37:08.940 --> 00:37:08.950 align:start position:0%
values the pass in your uniform data the
 

00:37:08.950 --> 00:37:12.079 align:start position:0%
values the pass in your uniform data the
same<00:37:09.160><c> thing</c><00:37:09.400><c> is</c><00:37:09.520><c> true</c><00:37:09.549><c> for</c><00:37:10.079><c> vertex</c><00:37:11.079><c> attributes</c>

00:37:12.079 --> 00:37:12.089 align:start position:0%
same thing is true for vertex attributes
 

00:37:12.089 --> 00:37:15.120 align:start position:0%
same thing is true for vertex attributes
you<00:37:13.089><c> basically</c><00:37:13.420><c> get</c><00:37:13.630><c> the</c><00:37:13.809><c> name</c><00:37:14.020><c> you</c><00:37:14.799><c> get</c><00:37:14.980><c> an</c>

00:37:15.120 --> 00:37:15.130 align:start position:0%
you basically get the name you get an
 

00:37:15.130 --> 00:37:17.370 align:start position:0%
you basically get the name you get an
index<00:37:15.520><c> from</c><00:37:15.910><c> the</c><00:37:16.150><c> name</c><00:37:16.359><c> of</c><00:37:16.599><c> the</c><00:37:16.690><c> attribute</c><00:37:16.809><c> and</c>

00:37:17.370 --> 00:37:17.380 align:start position:0%
index from the name of the attribute and
 

00:37:17.380 --> 00:37:21.870 align:start position:0%
index from the name of the attribute and
you<00:37:17.770><c> set</c><00:37:18.130><c> the</c><00:37:18.339><c> values</c><00:37:20.220><c> to</c><00:37:21.220><c> take</c><00:37:21.400><c> a</c><00:37:21.430><c> look</c><00:37:21.670><c> up</c>

00:37:21.870 --> 00:37:21.880 align:start position:0%
you set the values to take a look up
 

00:37:21.880 --> 00:37:25.410 align:start position:0%
you set the values to take a look up
there<00:37:22.569><c> are</c><00:37:23.260><c> a</c><00:37:23.289><c> bunch</c><00:37:23.619><c> of</c><00:37:23.910><c> built-in</c><00:37:24.910><c> functions</c>

00:37:25.410 --> 00:37:25.420 align:start position:0%
there are a bunch of built-in functions
 

00:37:25.420 --> 00:37:26.910 align:start position:0%
there are a bunch of built-in functions
that<00:37:25.569><c> you're</c><00:37:25.750><c> really</c><00:37:25.930><c> nice</c><00:37:26.170><c> there's</c><00:37:26.500><c> a</c><00:37:26.589><c> kind</c>

00:37:26.910 --> 00:37:26.920 align:start position:0%
that you're really nice there's a kind
 

00:37:26.920 --> 00:37:28.260 align:start position:0%
that you're really nice there's a kind
of<00:37:27.039><c> a</c><00:37:27.130><c> library</c><00:37:27.520><c> of</c><00:37:27.549><c> functions</c><00:37:27.760><c> that</c><00:37:28.089><c> come</c>

00:37:28.260 --> 00:37:28.270 align:start position:0%
of a library of functions that come
 

00:37:28.270 --> 00:37:32.609 align:start position:0%
of a library of functions that come
along<00:37:28.510><c> with</c><00:37:28.569><c> this</c><00:37:29.160><c> I</c><00:37:30.299><c> would</c><00:37:31.299><c> encourage</c><00:37:31.450><c> you</c><00:37:32.020><c> to</c>

00:37:32.609 --> 00:37:32.619 align:start position:0%
along with this I would encourage you to
 

00:37:32.619 --> 00:37:34.289 align:start position:0%
along with this I would encourage you to
if<00:37:32.950><c> you're</c><00:37:33.250><c> interested</c><00:37:33.640><c> in</c><00:37:33.730><c> this</c><00:37:33.910><c> in</c><00:37:34.119><c> this</c>

00:37:34.289 --> 00:37:34.299 align:start position:0%
if you're interested in this in this
 

00:37:34.299 --> 00:37:37.019 align:start position:0%
if you're interested in this in this
language<00:37:34.539><c> to</c><00:37:35.470><c> go</c><00:37:35.619><c> and</c><00:37:35.829><c> get</c><00:37:35.980><c> the</c><00:37:36.220><c> the</c><00:37:36.520><c> official</c>

00:37:37.019 --> 00:37:37.029 align:start position:0%
language to go and get the the official
 

00:37:37.029 --> 00:37:39.450 align:start position:0%
language to go and get the the official
the<00:37:37.599><c> orange</c><00:37:37.960><c> book</c><00:37:38.230><c> on</c><00:37:38.470><c> the</c><00:37:38.799><c> shader</c><00:37:39.039><c> language</c>

00:37:39.450 --> 00:37:39.460 align:start position:0%
the orange book on the shader language
 

00:37:39.460 --> 00:37:42.870 align:start position:0%
the orange book on the shader language
because<00:37:40.150><c> the</c><00:37:40.599><c> range</c><00:37:41.470><c> of</c><00:37:41.680><c> these</c><00:37:41.829><c> functions</c><00:37:42.279><c> is</c>

00:37:42.870 --> 00:37:42.880 align:start position:0%
because the range of these functions is
 

00:37:42.880 --> 00:37:44.279 align:start position:0%
because the range of these functions is
too<00:37:43.150><c> much</c><00:37:43.299><c> really</c><00:37:43.539><c> for</c><00:37:43.720><c> me</c><00:37:43.779><c> to</c><00:37:43.900><c> go</c><00:37:44.020><c> through</c>

00:37:44.279 --> 00:37:44.289 align:start position:0%
too much really for me to go through
 

00:37:44.289 --> 00:37:47.519 align:start position:0%
too much really for me to go through
today<00:37:45.510><c> but</c><00:37:46.510><c> you</c><00:37:46.839><c> should</c><00:37:47.020><c> look</c><00:37:47.170><c> through</c><00:37:47.289><c> them</c>

00:37:47.519 --> 00:37:47.529 align:start position:0%
today but you should look through them
 

00:37:47.529 --> 00:37:48.750 align:start position:0%
today but you should look through them
because<00:37:47.859><c> there</c><00:37:48.069><c> are</c><00:37:48.190><c> a</c><00:37:48.220><c> lot</c><00:37:48.430><c> of</c><00:37:48.460><c> very</c>

00:37:48.750 --> 00:37:48.760 align:start position:0%
because there are a lot of very
 

00:37:48.760 --> 00:37:50.099 align:start position:0%
because there are a lot of very
interesting<00:37:48.849><c> ones</c><00:37:49.450><c> some</c><00:37:49.720><c> of</c><00:37:49.839><c> the</c><00:37:49.900><c> ones</c><00:37:50.049><c> that</c>

00:37:50.099 --> 00:37:50.109 align:start position:0%
interesting ones some of the ones that
 

00:37:50.109 --> 00:37:52.319 align:start position:0%
interesting ones some of the ones that
I've<00:37:50.289><c> been</c><00:37:50.799><c> finding</c><00:37:51.460><c> quite</c><00:37:51.730><c> interesting</c><00:37:52.150><c> as</c><00:37:52.270><c> a</c>

00:37:52.319 --> 00:37:52.329 align:start position:0%
I've been finding quite interesting as a
 

00:37:52.329 --> 00:37:55.049 align:start position:0%
I've been finding quite interesting as a
noise<00:37:52.539><c> generation</c><00:37:53.079><c> functions</c><00:37:53.910><c> which</c><00:37:54.910><c> are</c>

00:37:55.049 --> 00:37:55.059 align:start position:0%
noise generation functions which are
 

00:37:55.059 --> 00:37:56.569 align:start position:0%
noise generation functions which are
really<00:37:55.240><c> good</c><00:37:55.450><c> for</c><00:37:55.599><c> image</c><00:37:55.809><c> processing</c>

00:37:56.569 --> 00:37:56.579 align:start position:0%
really good for image processing
 

00:37:56.579 --> 00:37:59.069 align:start position:0%
really good for image processing
basically<00:37:57.579><c> random</c><00:37:57.789><c> number</c><00:37:58.180><c> generators</c><00:37:58.690><c> but</c>

00:37:59.069 --> 00:37:59.079 align:start position:0%
basically random number generators but
 

00:37:59.079 --> 00:38:00.720 align:start position:0%
basically random number generators but
there's<00:37:59.260><c> a</c><00:37:59.319><c> there's</c><00:37:59.710><c> a</c><00:37:59.799><c> lot</c><00:37:59.950><c> of</c><00:37:59.980><c> variations</c><00:38:00.579><c> in</c>

00:38:00.720 --> 00:38:00.730 align:start position:0%
there's a there's a lot of variations in
 

00:38:00.730 --> 00:38:04.079 align:start position:0%
there's a there's a lot of variations in
them<00:38:02.130><c> there's</c><00:38:03.130><c> other</c><00:38:03.309><c> things</c><00:38:03.400><c> like</c><00:38:03.910><c> you</c><00:38:04.059><c> know</c>

00:38:04.079 --> 00:38:04.089 align:start position:0%
them there's other things like you know
 

00:38:04.089 --> 00:38:06.990 align:start position:0%
them there's other things like you know
like<00:38:04.210><c> a</c><00:38:04.420><c> like</c><00:38:05.410><c> a</c><00:38:05.470><c> mix</c><00:38:06.010><c> function</c><00:38:06.549><c> for</c><00:38:06.730><c> doing</c><00:38:06.910><c> a</c>

00:38:06.990 --> 00:38:07.000 align:start position:0%
like a like a mix function for doing a
 

00:38:07.000 --> 00:38:08.640 align:start position:0%
like a like a mix function for doing a
linear<00:38:07.240><c> interpolation</c><00:38:07.930><c> between</c><00:38:07.960><c> two</c><00:38:08.500><c> values</c>

00:38:08.640 --> 00:38:08.650 align:start position:0%
linear interpolation between two values
 

00:38:08.650 --> 00:38:14.720 align:start position:0%
linear interpolation between two values
which<00:38:09.460><c> is</c><00:38:09.579><c> convenient</c><00:38:10.150><c> and</c><00:38:12.059><c> also</c><00:38:13.059><c> the</c><00:38:13.380><c> the</c>

00:38:14.720 --> 00:38:14.730 align:start position:0%
which is convenient and also the the
 

00:38:14.730 --> 00:38:16.950 align:start position:0%
which is convenient and also the the
texture<00:38:15.730><c> access</c><00:38:16.089><c> functions</c><00:38:16.539><c> naturally</c><00:38:16.930><c> I</c>

00:38:16.950 --> 00:38:16.960 align:start position:0%
texture access functions naturally I
 

00:38:16.960 --> 00:38:18.390 align:start position:0%
texture access functions naturally I
want<00:38:17.200><c> to</c><00:38:17.260><c> take</c><00:38:17.440><c> a</c><00:38:17.470><c> look</c><00:38:17.680><c> at</c><00:38:17.799><c> those</c><00:38:17.950><c> because</c>

00:38:18.390 --> 00:38:18.400 align:start position:0%
want to take a look at those because
 

00:38:18.400 --> 00:38:20.309 align:start position:0%
want to take a look at those because
those<00:38:19.059><c> I</c><00:38:19.240><c> said</c><00:38:19.390><c> bubs</c><00:38:19.690><c> I</c><00:38:19.750><c> think</c><00:38:19.930><c> I</c><00:38:19.990><c> feel</c><00:38:20.170><c> are</c>

00:38:20.309 --> 00:38:20.319 align:start position:0%
those I said bubs I think I feel are
 

00:38:20.319 --> 00:38:23.460 align:start position:0%
those I said bubs I think I feel are
probably<00:38:20.589><c> the</c><00:38:20.710><c> most</c><00:38:20.890><c> important</c><00:38:21.900><c> one</c><00:38:22.900><c> thing</c>

00:38:23.460 --> 00:38:23.470 align:start position:0%
probably the most important one thing
 

00:38:23.470 --> 00:38:24.839 align:start position:0%
probably the most important one thing
that's<00:38:23.680><c> really</c><00:38:23.740><c> pretty</c><00:38:24.099><c> nice</c><00:38:24.339><c> about</c><00:38:24.670><c> this</c>

00:38:24.839 --> 00:38:24.849 align:start position:0%
that's really pretty nice about this
 

00:38:24.849 --> 00:38:27.750 align:start position:0%
that's really pretty nice about this
language<00:38:25.329><c> is</c><00:38:26.250><c> we've</c><00:38:27.250><c> always</c><00:38:27.430><c> thought</c><00:38:27.549><c> of</c>

00:38:27.750 --> 00:38:27.760 align:start position:0%
language is we've always thought of
 

00:38:27.760 --> 00:38:30.329 align:start position:0%
language is we've always thought of
texture<00:38:28.270><c> access</c><00:38:28.750><c> being</c><00:38:29.589><c> available</c><00:38:29.980><c> in</c>

00:38:30.329 --> 00:38:30.339 align:start position:0%
texture access being available in
 

00:38:30.339 --> 00:38:31.970 align:start position:0%
texture access being available in
fragment<00:38:30.819><c> programs</c><00:38:31.240><c> because</c><00:38:31.690><c> all</c>

00:38:31.970 --> 00:38:31.980 align:start position:0%
fragment programs because all
 

00:38:31.980 --> 00:38:33.560 align:start position:0%
fragment programs because all
you<00:38:32.190><c> want</c><00:38:32.340><c> to</c><00:38:32.430><c> text</c><00:38:32.670><c> your</c><00:38:32.820><c> map</c><00:38:33.000><c> your</c><00:38:33.180><c> surface</c>

00:38:33.560 --> 00:38:33.570 align:start position:0%
you want to text your map your surface
 

00:38:33.570 --> 00:38:36.830 align:start position:0%
you want to text your map your surface
well<00:38:33.930><c> the</c><00:38:34.680><c> shooting</c><00:38:35.040><c> language</c><00:38:35.430><c> allows</c><00:38:36.420><c> you</c><00:38:36.690><c> to</c>

00:38:36.830 --> 00:38:36.840 align:start position:0%
well the shooting language allows you to
 

00:38:36.840 --> 00:38:38.930 align:start position:0%
well the shooting language allows you to
do<00:38:36.960><c> texture</c><00:38:37.320><c> sampling</c><00:38:37.859><c> in</c><00:38:38.040><c> vertex</c><00:38:38.430><c> programs</c>

00:38:38.930 --> 00:38:38.940 align:start position:0%
do texture sampling in vertex programs
 

00:38:38.940 --> 00:38:41.770 align:start position:0%
do texture sampling in vertex programs
as<00:38:39.150><c> well</c><00:38:39.560><c> this</c><00:38:40.560><c> has</c><00:38:40.800><c> some</c><00:38:41.100><c> pretty</c><00:38:41.310><c> powerful</c>

00:38:41.770 --> 00:38:41.780 align:start position:0%
as well this has some pretty powerful
 

00:38:41.780 --> 00:38:45.470 align:start position:0%
as well this has some pretty powerful
side<00:38:42.780><c> effects</c><00:38:43.200><c> you</c><00:38:43.650><c> can</c><00:38:43.680><c> imagine</c><00:38:44.480><c> passing</c>

00:38:45.470 --> 00:38:45.480 align:start position:0%
side effects you can imagine passing
 

00:38:45.480 --> 00:38:47.810 align:start position:0%
side effects you can imagine passing
just<00:38:45.660><c> a</c><00:38:45.780><c> bunch</c><00:38:46.260><c> of</c><00:38:46.410><c> vertices</c><00:38:46.830><c> into</c><00:38:47.100><c> OpenGL</c><00:38:47.580><c> and</c>

00:38:47.810 --> 00:38:47.820 align:start position:0%
just a bunch of vertices into OpenGL and
 

00:38:47.820 --> 00:38:51.290 align:start position:0%
just a bunch of vertices into OpenGL and
in<00:38:48.480><c> the</c><00:38:48.570><c> vertex</c><00:38:48.930><c> program</c><00:38:49.970><c> displacing</c><00:38:50.970><c> them</c>

00:38:51.290 --> 00:38:51.300 align:start position:0%
in the vertex program displacing them
 

00:38:51.300 --> 00:38:53.900 align:start position:0%
in the vertex program displacing them
based<00:38:51.600><c> on</c><00:38:51.780><c> a</c><00:38:51.840><c> texture</c><00:38:52.290><c> map</c><00:38:52.430><c> suddenly</c><00:38:53.430><c> you</c><00:38:53.790><c> know</c>

00:38:53.900 --> 00:38:53.910 align:start position:0%
based on a texture map suddenly you know
 

00:38:53.910 --> 00:38:55.580 align:start position:0%
based on a texture map suddenly you know
you<00:38:53.970><c> could</c><00:38:54.240><c> have</c><00:38:54.270><c> a</c><00:38:54.390><c> live</c><00:38:54.690><c> video</c><00:38:54.900><c> stream</c><00:38:55.350><c> going</c>

00:38:55.580 --> 00:38:55.590 align:start position:0%
you could have a live video stream going
 

00:38:55.590 --> 00:38:57.650 align:start position:0%
you could have a live video stream going
into<00:38:55.890><c> your</c><00:38:56.040><c> GL</c><00:38:56.340><c> have</c><00:38:56.850><c> a</c><00:38:56.880><c> bunch</c><00:38:57.150><c> of</c><00:38:57.270><c> vertices</c>

00:38:57.650 --> 00:38:57.660 align:start position:0%
into your GL have a bunch of vertices
 

00:38:57.660 --> 00:38:58.880 align:start position:0%
into your GL have a bunch of vertices
and<00:38:57.810><c> have</c><00:38:57.960><c> like</c><00:38:58.140><c> you</c><00:38:58.530><c> know</c><00:38:58.560><c> like</c><00:38:58.650><c> there's</c>

00:38:58.880 --> 00:38:58.890 align:start position:0%
and have like you know like there's
 

00:38:58.890 --> 00:39:00.800 align:start position:0%
and have like you know like there's
three<00:38:59.250><c> eyes</c><00:38:59.400><c> like</c><00:38:59.520><c> a</c><00:38:59.550><c> 3d</c><00:38:59.880><c> fifth</c><00:39:00.150><c> almost</c>

00:39:00.800 --> 00:39:00.810 align:start position:0%
three eyes like a 3d fifth almost
 

00:39:00.810 --> 00:39:04.190 align:start position:0%
three eyes like a 3d fifth almost
showing<00:39:01.020><c> up</c><00:39:02.300><c> there's</c><00:39:03.300><c> a</c><00:39:03.390><c> lot</c><00:39:03.570><c> of</c><00:39:03.600><c> a</c><00:39:03.869><c> lot</c><00:39:04.050><c> of</c>

00:39:04.190 --> 00:39:04.200 align:start position:0%
showing up there's a lot of a lot of
 

00:39:04.200 --> 00:39:07.820 align:start position:0%
showing up there's a lot of a lot of
possibilities<00:39:04.710><c> there</c><00:39:06.140><c> or</c><00:39:07.140><c> you</c><00:39:07.590><c> could</c><00:39:07.740><c> even</c>

00:39:07.820 --> 00:39:07.830 align:start position:0%
possibilities there or you could even
 

00:39:07.830 --> 00:39:10.520 align:start position:0%
possibilities there or you could even
just<00:39:08.070><c> store</c><00:39:08.310><c> the</c><00:39:08.640><c> generic</c><00:39:09.119><c> vertex</c><00:39:09.540><c> data</c><00:39:09.720><c> in</c>

00:39:10.520 --> 00:39:10.530 align:start position:0%
just store the generic vertex data in
 

00:39:10.530 --> 00:39:12.500 align:start position:0%
just store the generic vertex data in
your<00:39:10.590><c> texture</c><00:39:11.130><c> units</c><00:39:11.280><c> it's</c><00:39:11.820><c> kind</c><00:39:12.000><c> of</c><00:39:12.090><c> kind</c><00:39:12.359><c> of</c>

00:39:12.500 --> 00:39:12.510 align:start position:0%
your texture units it's kind of kind of
 

00:39:12.510 --> 00:39:13.849 align:start position:0%
your texture units it's kind of kind of
mind-bending<00:39:12.780><c> but</c><00:39:13.140><c> the</c><00:39:13.320><c> things</c><00:39:13.500><c> you</c><00:39:13.619><c> can</c><00:39:13.740><c> do</c>

00:39:13.849 --> 00:39:13.859 align:start position:0%
mind-bending but the things you can do
 

00:39:13.859 --> 00:39:19.849 align:start position:0%
mind-bending but the things you can do
there<00:39:14.070><c> are</c><00:39:14.660><c> large</c><00:39:16.250><c> in</c><00:39:17.330><c> terms</c><00:39:18.330><c> of</c><00:39:18.630><c> of</c><00:39:19.350><c> texture</c>

00:39:19.849 --> 00:39:19.859 align:start position:0%
there are large in terms of of texture
 

00:39:19.859 --> 00:39:21.530 align:start position:0%
there are large in terms of of texture
access<00:39:20.280><c> basically</c><00:39:20.790><c> it's</c><00:39:20.910><c> just</c><00:39:20.970><c> a</c><00:39:21.150><c> function</c>

00:39:21.530 --> 00:39:21.540 align:start position:0%
access basically it's just a function
 

00:39:21.540 --> 00:39:23.510 align:start position:0%
access basically it's just a function
call<00:39:21.750><c> and</c><00:39:21.990><c> you</c><00:39:22.050><c> pass</c><00:39:22.290><c> in</c><00:39:22.590><c> a</c><00:39:22.830><c> texture</c>

00:39:23.510 --> 00:39:23.520 align:start position:0%
call and you pass in a texture
 

00:39:23.520 --> 00:39:25.670 align:start position:0%
call and you pass in a texture
coordinate<00:39:23.970><c> masama</c><00:39:24.660><c> and</c><00:39:25.050><c> basically</c><00:39:25.410><c> it</c><00:39:25.560><c> gives</c>

00:39:25.670 --> 00:39:25.680 align:start position:0%
coordinate masama and basically it gives
 

00:39:25.680 --> 00:39:28.609 align:start position:0%
coordinate masama and basically it gives
you<00:39:25.859><c> back</c><00:39:26.100><c> a</c><00:39:26.570><c> four-component</c><00:39:27.570><c> value</c><00:39:28.260><c> which</c><00:39:28.470><c> is</c>

00:39:28.609 --> 00:39:28.619 align:start position:0%
you back a four-component value which is
 

00:39:28.619 --> 00:39:34.130 align:start position:0%
you back a four-component value which is
the<00:39:28.770><c> RGB</c><00:39:29.400><c> a</c><00:39:29.430><c> value</c><00:39:30.000><c> at</c><00:39:30.180><c> that</c><00:39:30.390><c> point</c><00:39:32.330><c> the</c><00:39:33.330><c> really</c>

00:39:34.130 --> 00:39:34.140 align:start position:0%
the RGB a value at that point the really
 

00:39:34.140 --> 00:39:36.500 align:start position:0%
the RGB a value at that point the really
the<00:39:34.280><c> functionality</c><00:39:35.280><c> here</c><00:39:35.460><c> is</c><00:39:35.640><c> the</c><00:39:36.030><c> same</c><00:39:36.300><c> as</c>

00:39:36.500 --> 00:39:36.510 align:start position:0%
the functionality here is the same as
 

00:39:36.510 --> 00:39:38.960 align:start position:0%
the functionality here is the same as
ARB<00:39:36.750><c> fragment</c><00:39:37.230><c> program</c><00:39:37.560><c> I</c><00:39:37.859><c> got</c><00:39:38.700><c> obviously</c>

00:39:38.960 --> 00:39:38.970 align:start position:0%
ARB fragment program I got obviously
 

00:39:38.970 --> 00:39:40.280 align:start position:0%
ARB fragment program I got obviously
with<00:39:39.119><c> the</c><00:39:39.240><c> addition</c><00:39:39.600><c> that</c><00:39:39.690><c> you</c><00:39:39.780><c> can</c><00:39:39.930><c> do</c><00:39:40.050><c> it</c><00:39:40.170><c> in</c>

00:39:40.280 --> 00:39:40.290 align:start position:0%
with the addition that you can do it in
 

00:39:40.290 --> 00:39:43.970 align:start position:0%
with the addition that you can do it in
the<00:39:40.380><c> vertex</c><00:39:40.710><c> program</c><00:39:41.990><c> it</c><00:39:42.990><c> does</c><00:39:43.290><c> add</c><00:39:43.530><c> support</c>

00:39:43.970 --> 00:39:43.980 align:start position:0%
the vertex program it does add support
 

00:39:43.980 --> 00:39:45.710 align:start position:0%
the vertex program it does add support
for<00:39:44.010><c> depth</c><00:39:44.369><c> textures</c><00:39:44.910><c> where</c><00:39:45.119><c> it</c><00:39:45.240><c> can</c><00:39:45.420><c> get</c><00:39:45.600><c> at</c>

00:39:45.710 --> 00:39:45.720 align:start position:0%
for depth textures where it can get at
 

00:39:45.720 --> 00:39:48.080 align:start position:0%
for depth textures where it can get at
exelon<00:39:46.140><c> automount</c><00:39:46.530><c> do</c><00:39:46.830><c> a</c><00:39:46.859><c> comparison</c><00:39:47.490><c> against</c>

00:39:48.080 --> 00:39:48.090 align:start position:0%
exelon automount do a comparison against
 

00:39:48.090 --> 00:39:49.910 align:start position:0%
exelon automount do a comparison against
a<00:39:48.240><c> depth</c><00:39:48.450><c> buffer</c><00:39:48.690><c> which</c><00:39:49.320><c> is</c><00:39:49.470><c> useful</c><00:39:49.619><c> for</c>

00:39:49.910 --> 00:39:49.920 align:start position:0%
a depth buffer which is useful for
 

00:39:49.920 --> 00:39:54.740 align:start position:0%
a depth buffer which is useful for
shadowing<00:39:50.780><c> effect</c><00:39:53.090><c> so</c><00:39:54.090><c> now</c><00:39:54.240><c> I</c><00:39:54.270><c> actually</c><00:39:54.510><c> I</c>

00:39:54.740 --> 00:39:54.750 align:start position:0%
shadowing effect so now I actually I
 

00:39:54.750 --> 00:39:57.980 align:start position:0%
shadowing effect so now I actually I
would<00:39:55.170><c> like</c><00:39:55.350><c> to</c><00:39:55.520><c> switch</c><00:39:56.520><c> over</c><00:39:56.700><c> to</c><00:39:57.119><c> show</c><00:39:57.570><c> you</c><00:39:57.600><c> a</c>

00:39:57.980 --> 00:39:57.990 align:start position:0%
would like to switch over to show you a
 

00:39:57.990 --> 00:40:01.340 align:start position:0%
would like to switch over to show you a
bit<00:39:58.530><c> of</c><00:39:58.650><c> a</c><00:39:58.710><c> demonstration</c><00:39:58.980><c> here</c><00:39:59.869><c> no</c><00:40:00.869><c> it's</c>

00:40:01.340 --> 00:40:01.350 align:start position:0%
bit of a demonstration here no it's
 

00:40:01.350 --> 00:40:04.130 align:start position:0%
bit of a demonstration here no it's
important<00:40:01.830><c> to</c><00:40:01.950><c> note</c><00:40:02.100><c> that</c><00:40:02.130><c> this</c><00:40:02.369><c> is</c><00:40:03.140><c> really</c>

00:40:04.130 --> 00:40:04.140 align:start position:0%
important to note that this is really
 

00:40:04.140 --> 00:40:08.390 align:start position:0%
important to note that this is really
the<00:40:04.710><c> bleeding</c><00:40:05.070><c> edge</c><00:40:05.190><c> here</c><00:40:05.869><c> so</c><00:40:06.890><c> it's</c><00:40:07.890><c> not</c><00:40:08.160><c> done</c>

00:40:08.390 --> 00:40:08.400 align:start position:0%
the bleeding edge here so it's not done
 

00:40:08.400 --> 00:40:11.390 align:start position:0%
the bleeding edge here so it's not done
yet<00:40:08.450><c> but</c><00:40:09.450><c> I</c><00:40:09.510><c> want</c><00:40:09.780><c> to</c><00:40:09.930><c> give</c><00:40:10.080><c> you</c><00:40:10.109><c> an</c><00:40:10.830><c> example</c><00:40:11.190><c> of</c>

00:40:11.390 --> 00:40:11.400 align:start position:0%
yet but I want to give you an example of
 

00:40:11.400 --> 00:40:13.220 align:start position:0%
yet but I want to give you an example of
sort<00:40:11.609><c> of</c><00:40:11.730><c> to</c><00:40:11.820><c> show</c><00:40:11.970><c> you</c><00:40:12.030><c> how</c><00:40:12.300><c> far</c><00:40:12.600><c> along</c><00:40:12.720><c> we</c><00:40:13.050><c> are</c>

00:40:13.220 --> 00:40:13.230 align:start position:0%
sort of to show you how far along we are
 

00:40:13.230 --> 00:40:17.660 align:start position:0%
sort of to show you how far along we are
with<00:40:13.440><c> this</c><00:40:15.230><c> so</c><00:40:16.230><c> hopefully</c><00:40:17.160><c> things</c><00:40:17.310><c> will</c><00:40:17.520><c> go</c>

00:40:17.660 --> 00:40:17.670 align:start position:0%
with this so hopefully things will go
 

00:40:17.670 --> 00:40:24.320 align:start position:0%
with this so hopefully things will go
according<00:40:17.940><c> to</c><00:40:18.119><c> plan</c><00:40:18.420><c> here</c><00:40:20.600><c> hmm</c><00:40:22.609><c> so</c><00:40:23.609><c> I</c><00:40:23.640><c> went</c>

00:40:24.320 --> 00:40:24.330 align:start position:0%
according to plan here hmm so I went
 

00:40:24.330 --> 00:40:27.980 align:start position:0%
according to plan here hmm so I went
ahead<00:40:24.480><c> and</c><00:40:25.790><c> did</c><00:40:26.790><c> a</c><00:40:26.850><c> little</c><00:40:27.060><c> work</c><00:40:27.300><c> here</c><00:40:27.570><c> to</c><00:40:27.780><c> get</c>

00:40:27.980 --> 00:40:27.990 align:start position:0%
ahead and did a little work here to get
 

00:40:27.990 --> 00:40:30.380 align:start position:0%
ahead and did a little work here to get
this<00:40:28.340><c> integrated</c><00:40:29.340><c> into</c><00:40:29.580><c> shader</c><00:40:29.820><c> builder</c><00:40:30.210><c> so</c>

00:40:30.380 --> 00:40:30.390 align:start position:0%
this integrated into shader builder so
 

00:40:30.390 --> 00:40:33.580 align:start position:0%
this integrated into shader builder so
that<00:40:30.510><c> I</c><00:40:30.600><c> could</c><00:40:30.660><c> show</c><00:40:30.780><c> you</c><00:40:30.990><c> what</c><00:40:31.920><c> we</c><00:40:32.070><c> have</c><00:40:32.570><c> I</c>

00:40:33.580 --> 00:40:33.590 align:start position:0%
that I could show you what we have I
 

00:40:33.590 --> 00:40:37.220 align:start position:0%
that I could show you what we have I
should<00:40:34.590><c> let</c><00:40:34.680><c> me</c><00:40:34.800><c> let</c><00:40:34.980><c> me</c><00:40:35.040><c> first</c><00:40:35.220><c> show</c><00:40:35.340><c> you</c><00:40:36.230><c> just</c>

00:40:37.220 --> 00:40:37.230 align:start position:0%
should let me let me first show you just
 

00:40:37.230 --> 00:40:39.530 align:start position:0%
should let me let me first show you just
typing<00:40:37.710><c> this</c><00:40:37.830><c> in</c><00:40:38.040><c> I'm</c><00:40:38.820><c> going</c><00:40:39.119><c> to</c><00:40:39.180><c> make</c><00:40:39.330><c> the</c>

00:40:39.530 --> 00:40:39.540 align:start position:0%
typing this in I'm going to make the
 

00:40:39.540 --> 00:40:41.420 align:start position:0%
typing this in I'm going to make the
font<00:40:40.050><c> here</c><00:40:40.200><c> a</c><00:40:40.260><c> little</c><00:40:40.410><c> bigger</c><00:40:40.680><c> so</c><00:40:40.950><c> that</c><00:40:41.190><c> you</c>

00:40:41.420 --> 00:40:41.430 align:start position:0%
font here a little bigger so that you
 

00:40:41.430 --> 00:40:42.850 align:start position:0%
font here a little bigger so that you
can

00:40:42.850 --> 00:40:42.860 align:start position:0%
can
 

00:40:42.860 --> 00:40:49.670 align:start position:0%
can
see<00:40:43.860><c> a</c><00:40:44.360><c> little</c><00:40:45.360><c> more</c><00:40:45.510><c> clearly</c><00:40:46.130><c> okay</c><00:40:48.290><c> so</c><00:40:49.290><c> let's</c>

00:40:49.670 --> 00:40:49.680 align:start position:0%
see a little more clearly okay so let's
 

00:40:49.680 --> 00:40:51.920 align:start position:0%
see a little more clearly okay so let's
go<00:40:49.830><c> to</c><00:40:49.890><c> the</c><00:40:50.070><c> fragment</c><00:40:50.490><c> program</c><00:40:50.850><c> here</c><00:40:51.120><c> on</c><00:40:51.450><c> write</c>

00:40:51.920 --> 00:40:51.930 align:start position:0%
go to the fragment program here on write
 

00:40:51.930 --> 00:40:58.520 align:start position:0%
go to the fragment program here on write
a<00:40:52.550><c> simple</c><00:40:53.550><c> one</c><00:40:56.300><c> just</c><00:40:57.300><c> declaring</c><00:40:57.900><c> my</c><00:40:58.320><c> main</c>

00:40:58.520 --> 00:40:58.530 align:start position:0%
a simple one just declaring my main
 

00:40:58.530 --> 00:41:03.470 align:start position:0%
a simple one just declaring my main
function<00:40:59.040><c> right</c><00:40:59.190><c> here</c><00:41:00.230><c> and</c><00:41:02.240><c> then</c><00:41:03.240><c> basically</c>

00:41:03.470 --> 00:41:03.480 align:start position:0%
function right here and then basically
 

00:41:03.480 --> 00:41:05.840 align:start position:0%
function right here and then basically
in<00:41:03.780><c> my</c><00:41:03.900><c> fragment</c><00:41:04.110><c> program</c><00:41:04.680><c> I'm</c><00:41:04.890><c> merely</c><00:41:05.610><c> going</c>

00:41:05.840 --> 00:41:05.850 align:start position:0%
in my fragment program I'm merely going
 

00:41:05.850 --> 00:41:08.270 align:start position:0%
in my fragment program I'm merely going
to<00:41:06.060><c> pass</c><00:41:06.270><c> through</c><00:41:06.630><c> the</c><00:41:07.290><c> interpolated</c><00:41:07.950><c> color</c>

00:41:08.270 --> 00:41:08.280 align:start position:0%
to pass through the interpolated color
 

00:41:08.280 --> 00:41:11.540 align:start position:0%
to pass through the interpolated color
data<00:41:08.550><c> coming</c><00:41:09.180><c> from</c><00:41:09.300><c> the</c><00:41:09.600><c> vertex</c><00:41:09.780><c> shader</c><00:41:10.550><c> to</c>

00:41:11.540 --> 00:41:11.550 align:start position:0%
data coming from the vertex shader to
 

00:41:11.550 --> 00:41:15.050 align:start position:0%
data coming from the vertex shader to
the<00:41:11.700><c> output</c><00:41:12.060><c> so</c><00:41:13.520><c> this</c><00:41:14.520><c> is</c><00:41:14.550><c> the</c><00:41:14.790><c> predefined</c>

00:41:15.050 --> 00:41:15.060 align:start position:0%
the output so this is the predefined
 

00:41:15.060 --> 00:41:17.390 align:start position:0%
the output so this is the predefined
variable<00:41:15.690><c> geo</c><00:41:15.990><c> frag</c><00:41:16.320><c> color</c><00:41:16.590><c> and</c><00:41:16.920><c> you</c><00:41:17.100><c> can</c><00:41:17.250><c> see</c>

00:41:17.390 --> 00:41:17.400 align:start position:0%
variable geo frag color and you can see
 

00:41:17.400 --> 00:41:20.090 align:start position:0%
variable geo frag color and you can see
as<00:41:17.520><c> I'm</c><00:41:17.640><c> typing</c><00:41:17.820><c> here</c><00:41:18.240><c> again</c><00:41:18.960><c> as</c><00:41:19.680><c> is</c><00:41:19.950><c> common</c>

00:41:20.090 --> 00:41:20.100 align:start position:0%
as I'm typing here again as is common
 

00:41:20.100 --> 00:41:21.410 align:start position:0%
as I'm typing here again as is common
and<00:41:20.340><c> shader</c><00:41:20.520><c> builder</c><00:41:20.820><c> it'll</c><00:41:21.030><c> do</c><00:41:21.150><c> the</c><00:41:21.270><c> real</c>

00:41:21.410 --> 00:41:21.420 align:start position:0%
and shader builder it'll do the real
 

00:41:21.420 --> 00:41:22.910 align:start position:0%
and shader builder it'll do the real
time<00:41:21.660><c> sign</c><00:41:21.900><c> text</c><00:41:22.200><c> checking</c><00:41:22.500><c> and</c><00:41:22.650><c> even</c><00:41:22.830><c> though</c>

00:41:22.910 --> 00:41:22.920 align:start position:0%
time sign text checking and even though
 

00:41:22.920 --> 00:41:24.950 align:start position:0%
time sign text checking and even though
there's<00:41:22.950><c> a</c><00:41:23.160><c> see</c><00:41:23.460><c> it</c><00:41:23.700><c> can</c><00:41:24.120><c> we</c><00:41:24.330><c> r</c><00:41:24.450><c> still</c><00:41:24.630><c> able</c><00:41:24.780><c> to</c>

00:41:24.950 --> 00:41:24.960 align:start position:0%
there's a see it can we r still able to
 

00:41:24.960 --> 00:41:29.420 align:start position:0%
there's a see it can we r still able to
do<00:41:25.080><c> that</c><00:41:25.260><c> which</c><00:41:25.470><c> is</c><00:41:25.590><c> kind</c><00:41:25.800><c> of</c><00:41:25.830><c> nice</c><00:41:28.040><c> so</c><00:41:29.040><c> that's</c>

00:41:29.420 --> 00:41:29.430 align:start position:0%
do that which is kind of nice so that's
 

00:41:29.430 --> 00:41:30.710 align:start position:0%
do that which is kind of nice so that's
the<00:41:29.520><c> fragment</c><00:41:29.880><c> shader</c><00:41:29.910><c> done</c><00:41:30.270><c> that's</c><00:41:30.480><c> a</c><00:41:30.540><c> very</c>

00:41:30.710 --> 00:41:30.720 align:start position:0%
the fragment shader done that's a very
 

00:41:30.720 --> 00:41:33.410 align:start position:0%
the fragment shader done that's a very
simple<00:41:30.990><c> one</c><00:41:31.140><c> and</c><00:41:31.320><c> then</c><00:41:32.280><c> in</c><00:41:32.580><c> the</c><00:41:32.820><c> vertex</c><00:41:33.180><c> shader</c>

00:41:33.410 --> 00:41:33.420 align:start position:0%
simple one and then in the vertex shader
 

00:41:33.420 --> 00:41:39.880 align:start position:0%
simple one and then in the vertex shader
let's<00:41:34.400><c> pick</c><00:41:35.400><c> OpenGL</c><00:41:35.940><c> shading</c><00:41:36.000><c> language</c><00:41:36.420><c> oh</c>

00:41:39.880 --> 00:41:39.890 align:start position:0%
 
 

00:41:39.890 --> 00:41:47.930 align:start position:0%
 
dear<00:41:42.140><c> let's</c><00:41:43.140><c> uh</c><00:41:43.320><c> let's</c><00:41:43.470><c> try</c><00:41:43.740><c> that</c><00:41:43.890><c> again</c><00:41:46.940><c> let</c>

00:41:47.930 --> 00:41:47.940 align:start position:0%
dear let's uh let's try that again let
 

00:41:47.940 --> 00:41:49.610 align:start position:0%
dear let's uh let's try that again let
me<00:41:48.060><c> just</c><00:41:48.480><c> show</c><00:41:48.630><c> you</c><00:41:48.660><c> what</c><00:41:48.900><c> I've</c><00:41:49.020><c> got</c><00:41:49.230><c> here</c><00:41:49.260><c> are</c>

00:41:49.610 --> 00:41:49.620 align:start position:0%
me just show you what I've got here are
 

00:41:49.620 --> 00:41:53.720 align:start position:0%
me just show you what I've got here are
they<00:41:49.740><c> as</c><00:41:50.580><c> I</c><00:41:50.700><c> said</c><00:41:50.940><c> this</c><00:41:51.120><c> is</c><00:41:51.330><c> a</c><00:41:51.650><c> very</c><00:41:52.730><c> recent</c>

00:41:53.720 --> 00:41:53.730 align:start position:0%
they as I said this is a very recent
 

00:41:53.730 --> 00:41:58.760 align:start position:0%
they as I said this is a very recent
code<00:41:55.670><c> here</c><00:41:56.670><c> you</c><00:41:56.820><c> can</c><00:41:56.970><c> see</c><00:41:57.030><c> the</c><00:41:57.770><c> high-level</c>

00:41:58.760 --> 00:41:58.770 align:start position:0%
code here you can see the high-level
 

00:41:58.770 --> 00:42:00.620 align:start position:0%
code here you can see the high-level
shading<00:41:59.190><c> language</c><00:41:59.310><c> being</c><00:41:59.730><c> used</c><00:41:59.820><c> to</c><00:42:00.210><c> express</c><00:42:00.600><c> a</c>

00:42:00.620 --> 00:42:00.630 align:start position:0%
shading language being used to express a
 

00:42:00.630 --> 00:42:02.180 align:start position:0%
shading language being used to express a
pretty<00:42:00.990><c> simple</c><00:42:01.170><c> lighting</c><00:42:01.470><c> model</c><00:42:01.860><c> it's</c><00:42:02.010><c> just</c>

00:42:02.180 --> 00:42:02.190 align:start position:0%
pretty simple lighting model it's just
 

00:42:02.190 --> 00:42:03.710 align:start position:0%
pretty simple lighting model it's just
done<00:42:02.310><c> in</c><00:42:02.430><c> the</c><00:42:02.520><c> vertex</c><00:42:02.850><c> program</c><00:42:03.030><c> the</c><00:42:03.390><c> vertex</c>

00:42:03.710 --> 00:42:03.720 align:start position:0%
done in the vertex program the vertex
 

00:42:03.720 --> 00:42:08.140 align:start position:0%
done in the vertex program the vertex
shader<00:42:03.900><c> space</c><00:42:05.480><c> the</c><00:42:06.480><c> fragment</c><00:42:06.930><c> shader</c><00:42:06.990><c> is</c>

00:42:08.140 --> 00:42:08.150 align:start position:0%
shader space the fragment shader is
 

00:42:08.150 --> 00:42:12.500 align:start position:0%
shader space the fragment shader is
merely<00:42:09.150><c> passing</c><00:42:09.450><c> through</c><00:42:09.870><c> the</c><00:42:10.020><c> color</c><00:42:11.420><c> let</c><00:42:12.420><c> me</c>

00:42:12.500 --> 00:42:12.510 align:start position:0%
merely passing through the color let me
 

00:42:12.510 --> 00:42:13.670 align:start position:0%
merely passing through the color let me
make<00:42:12.630><c> the</c><00:42:12.780><c> code</c><00:42:12.900><c> make</c><00:42:13.110><c> the</c><00:42:13.230><c> code</c><00:42:13.380><c> a</c><00:42:13.440><c> little</c>

00:42:13.670 --> 00:42:13.680 align:start position:0%
make the code make the code a little
 

00:42:13.680 --> 00:42:19.700 align:start position:0%
make the code make the code a little
bigger<00:42:17.960><c> hopefully</c><00:42:18.960><c> everyone's</c><00:42:19.230><c> able</c><00:42:19.440><c> to</c><00:42:19.530><c> see</c>

00:42:19.700 --> 00:42:19.710 align:start position:0%
bigger hopefully everyone's able to see
 

00:42:19.710 --> 00:42:21.860 align:start position:0%
bigger hopefully everyone's able to see
that<00:42:19.830><c> ok</c><00:42:20.190><c> but</c><00:42:21.090><c> you</c><00:42:21.210><c> can</c><00:42:21.360><c> see</c><00:42:21.510><c> the</c><00:42:21.630><c> kind</c><00:42:21.810><c> of</c>

00:42:21.860 --> 00:42:21.870 align:start position:0%
that ok but you can see the kind of
 

00:42:21.870 --> 00:42:23.390 align:start position:0%
that ok but you can see the kind of
stuff<00:42:22.050><c> we're</c><00:42:22.260><c> doing</c><00:42:22.290><c> this</c><00:42:22.620><c> is</c><00:42:22.680><c> common</c><00:42:23.100><c> and</c><00:42:23.190><c> see</c>

00:42:23.390 --> 00:42:23.400 align:start position:0%
stuff we're doing this is common and see
 

00:42:23.400 --> 00:42:26.840 align:start position:0%
stuff we're doing this is common and see
you<00:42:23.670><c> know</c><00:42:24.590><c> being</c><00:42:25.590><c> able</c><00:42:25.740><c> to</c><00:42:25.950><c> nass</c><00:42:26.160><c> brackets</c><00:42:26.700><c> and</c>

00:42:26.840 --> 00:42:26.850 align:start position:0%
you know being able to nass brackets and
 

00:42:26.850 --> 00:42:28.400 align:start position:0%
you know being able to nass brackets and
so<00:42:26.970><c> forth</c><00:42:27.240><c> so</c><00:42:27.390><c> basically</c><00:42:27.810><c> you</c><00:42:27.930><c> can</c><00:42:28.080><c> express</c>

00:42:28.400 --> 00:42:28.410 align:start position:0%
so forth so basically you can express
 

00:42:28.410 --> 00:42:30.200 align:start position:0%
so forth so basically you can express
these<00:42:28.740><c> things</c><00:42:29.010><c> and</c><00:42:29.220><c> a</c><00:42:29.250><c> lot</c><00:42:29.280><c> less</c><00:42:29.460><c> lines</c><00:42:30.030><c> of</c>

00:42:30.200 --> 00:42:30.210 align:start position:0%
these things and a lot less lines of
 

00:42:30.210 --> 00:42:34.430 align:start position:0%
these things and a lot less lines of
code<00:42:31.400><c> if</c><00:42:32.400><c> I</c><00:42:32.610><c> want</c><00:42:32.820><c> you</c><00:42:33.000><c> can</c><00:42:33.150><c> see</c><00:42:33.360><c> on</c><00:42:33.570><c> this</c><00:42:34.140><c> line</c>

00:42:34.430 --> 00:42:34.440 align:start position:0%
code if I want you can see on this line
 

00:42:34.440 --> 00:42:36.980 align:start position:0%
code if I want you can see on this line
i<00:42:34.470><c> declare</c><00:42:34.950><c> f1</c><00:42:35.460><c> and</c><00:42:35.760><c> here</c><00:42:36.240><c> i</c><00:42:36.300><c> use</c><00:42:36.570><c> it</c><00:42:36.750><c> again</c>

00:42:36.980 --> 00:42:36.990 align:start position:0%
i declare f1 and here i use it again
 

00:42:36.990 --> 00:42:39.920 align:start position:0%
i declare f1 and here i use it again
well<00:42:37.230><c> i</c><00:42:37.260><c> can</c><00:42:37.470><c> go</c><00:42:37.590><c> ahead</c><00:42:37.740><c> and</c><00:42:38.480><c> like</c><00:42:39.480><c> move</c><00:42:39.750><c> it</c>

00:42:39.920 --> 00:42:39.930 align:start position:0%
well i can go ahead and like move it
 

00:42:39.930 --> 00:42:45.050 align:start position:0%
well i can go ahead and like move it
inside

00:42:45.050 --> 00:42:45.060 align:start position:0%
 
 

00:42:45.060 --> 00:42:48.440 align:start position:0%
 
deletes<00:42:45.870><c> outline</c><00:42:46.290><c> hood</c><00:42:46.970><c> we're</c><00:42:47.970><c> getting</c><00:42:48.240><c> there</c>

00:42:48.440 --> 00:42:48.450 align:start position:0%
deletes outline hood we're getting there
 

00:42:48.450 --> 00:42:51.140 align:start position:0%
deletes outline hood we're getting there
we're<00:42:48.780><c> not</c><00:42:48.900><c> done</c><00:42:49.110><c> yet</c><00:42:49.140><c> but</c><00:42:49.830><c> this</c><00:42:50.580><c> is</c><00:42:50.910><c> this</c>

00:42:51.140 --> 00:42:51.150 align:start position:0%
we're not done yet but this is this
 

00:42:51.150 --> 00:42:56.510 align:start position:0%
we're not done yet but this is this
feature<00:42:51.780><c> is</c><00:42:51.930><c> slated</c><00:42:52.410><c> for</c><00:42:53.030><c> for</c><00:42:54.030><c> tiger</c><00:42:54.530><c> but</c><00:42:55.530><c> we</c>

00:42:56.510 --> 00:42:56.520 align:start position:0%
feature is slated for for tiger but we
 

00:42:56.520 --> 00:42:58.220 align:start position:0%
feature is slated for for tiger but we
really<00:42:56.940><c> want</c><00:42:57.090><c> to</c><00:42:57.180><c> get</c><00:42:57.270><c> it</c><00:42:57.420><c> to</c><00:42:57.540><c> you</c><00:42:57.690><c> as</c><00:42:57.780><c> fast</c><00:42:57.990><c> as</c>

00:42:58.220 --> 00:42:58.230 align:start position:0%
really want to get it to you as fast as
 

00:42:58.230 --> 00:43:01.670 align:start position:0%
really want to get it to you as fast as
we<00:42:58.350><c> can</c><00:42:58.530><c> so</c><00:42:58.950><c> we're</c><00:42:59.310><c> doing</c><00:42:59.430><c> our</c><00:42:59.670><c> best</c><00:43:00.680><c> difficult</c>

00:43:01.670 --> 00:43:01.680 align:start position:0%
we can so we're doing our best difficult
 

00:43:01.680 --> 00:43:05.660 align:start position:0%
we can so we're doing our best difficult
specs<00:43:02.190><c> to</c><00:43:02.490><c> implement</c><00:43:03.050><c> so</c><00:43:04.050><c> we'll</c><00:43:04.680><c> we'll</c><00:43:05.430><c> keep</c>

00:43:05.660 --> 00:43:05.670 align:start position:0%
specs to implement so we'll we'll keep
 

00:43:05.670 --> 00:43:09.440 align:start position:0%
specs to implement so we'll we'll keep
you<00:43:05.760><c> posted</c><00:43:05.790><c> on</c><00:43:06.240><c> that</c><00:43:07.790><c> so</c><00:43:08.790><c> I</c><00:43:08.820><c> guess</c><00:43:08.910><c> I</c><00:43:09.060><c> want</c><00:43:09.360><c> to</c>

00:43:09.440 --> 00:43:09.450 align:start position:0%
you posted on that so I guess I want to
 

00:43:09.450 --> 00:43:12.590 align:start position:0%
you posted on that so I guess I want to
wrap<00:43:09.600><c> up</c><00:43:09.840><c> at</c><00:43:09.960><c> this</c><00:43:10.110><c> point</c><00:43:10.410><c> I</c><00:43:11.250><c> hope</c><00:43:12.120><c> you</c><00:43:12.270><c> enjoyed</c>

00:43:12.590 --> 00:43:12.600 align:start position:0%
wrap up at this point I hope you enjoyed
 

00:43:12.600 --> 00:43:15.560 align:start position:0%
wrap up at this point I hope you enjoyed
hearing<00:43:12.840><c> about</c><00:43:13.020><c> this</c><00:43:13.350><c> at</c><00:43:13.530><c> least</c><00:43:13.790><c> and</c><00:43:14.790><c> I</c><00:43:15.120><c> hope</c>

00:43:15.560 --> 00:43:15.570 align:start position:0%
hearing about this at least and I hope
 

00:43:15.570 --> 00:43:16.880 align:start position:0%
hearing about this at least and I hope
that<00:43:15.600><c> when</c><00:43:15.840><c> it</c><00:43:15.960><c> becomes</c><00:43:16.170><c> available</c><00:43:16.320><c> you'll</c>

00:43:16.880 --> 00:43:16.890 align:start position:0%
that when it becomes available you'll
 

00:43:16.890 --> 00:43:19.490 align:start position:0%
that when it becomes available you'll
start<00:43:17.160><c> to</c><00:43:17.220><c> use</c><00:43:17.490><c> it</c><00:43:17.700><c> and</c><00:43:18.140><c> yeah</c><00:43:19.140><c> I</c><00:43:19.170><c> guess</c><00:43:19.320><c> at</c><00:43:19.410><c> this</c>

00:43:19.490 --> 00:43:19.500 align:start position:0%
start to use it and yeah I guess at this
 

00:43:19.500 --> 00:43:21.740 align:start position:0%
start to use it and yeah I guess at this
point<00:43:19.590><c> I'd</c><00:43:19.920><c> like</c><00:43:19.950><c> to</c><00:43:20.100><c> invite</c><00:43:20.790><c> travis</c><00:43:21.210><c> up</c><00:43:21.540><c> if</c>

00:43:21.740 --> 00:43:21.750 align:start position:0%
point I'd like to invite travis up if
 

00:43:21.750 --> 00:43:25.880 align:start position:0%
point I'd like to invite travis up if
I'm<00:43:21.990><c> sure</c><00:43:22.860><c> there'll</c><00:43:23.070><c> be</c><00:43:23.100><c> a</c><00:43:23.190><c> lot</c><00:43:23.370><c> of</c><00:43:23.430><c> question</c>

