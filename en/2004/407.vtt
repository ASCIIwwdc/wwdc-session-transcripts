WEBVTT
Kind: captions
Language: en

00:00:12.180 --> 00:00:15.150 align:start position:0%
 
good<00:00:13.180><c> afternoon</c><00:00:13.450><c> this</c><00:00:13.960><c> is</c><00:00:14.140><c> session</c><00:00:14.320><c> 407</c><00:00:15.070><c> the</c>

00:00:15.150 --> 00:00:15.160 align:start position:0%
good afternoon this is session 407 the
 

00:00:15.160 --> 00:00:17.550 align:start position:0%
good afternoon this is session 407 the
accelerate<00:00:15.580><c> framework</c><00:00:16.560><c> accelerate</c>

00:00:17.550 --> 00:00:17.560 align:start position:0%
accelerate framework accelerate
 

00:00:17.560 --> 00:00:19.500 align:start position:0%
accelerate framework accelerate
framework<00:00:17.920><c> was</c><00:00:18.100><c> introduced</c><00:00:18.610><c> last</c><00:00:19.119><c> year's</c>

00:00:19.500 --> 00:00:19.510 align:start position:0%
framework was introduced last year's
 

00:00:19.510 --> 00:00:21.330 align:start position:0%
framework was introduced last year's
Developers<00:00:20.260><c> Conference</c><00:00:20.320><c> this</c><00:00:20.950><c> year</c><00:00:21.189><c> will</c>

00:00:21.330 --> 00:00:21.340 align:start position:0%
Developers Conference this year will
 

00:00:21.340 --> 00:00:23.940 align:start position:0%
Developers Conference this year will
bring<00:00:21.640><c> a</c><00:00:22.180><c> rehash</c><00:00:22.900><c> a</c><00:00:22.930><c> little</c><00:00:23.290><c> bit</c><00:00:23.410><c> about</c><00:00:23.590><c> what</c>

00:00:23.940 --> 00:00:23.950 align:start position:0%
bring a rehash a little bit about what
 

00:00:23.950 --> 00:00:26.370 align:start position:0%
bring a rehash a little bit about what
was<00:00:24.460><c> introduced</c><00:00:24.849><c> last</c><00:00:24.970><c> year</c><00:00:25.240><c> but</c><00:00:25.930><c> also</c><00:00:26.080><c> give</c>

00:00:26.370 --> 00:00:26.380 align:start position:0%
was introduced last year but also give
 

00:00:26.380 --> 00:00:29.999 align:start position:0%
was introduced last year but also give
you<00:00:26.529><c> part</c><00:00:26.860><c> two</c><00:00:27.099><c> if</c><00:00:28.470><c> you</c><00:00:29.470><c> know</c><00:00:29.590><c> anything</c><00:00:29.919><c> about</c>

00:00:29.999 --> 00:00:30.009 align:start position:0%
you part two if you know anything about
 

00:00:30.009 --> 00:00:31.589 align:start position:0%
you part two if you know anything about
Ollie's<00:00:30.460><c> team</c><00:00:30.759><c> you</c><00:00:31.029><c> know</c><00:00:31.150><c> these</c><00:00:31.300><c> are</c><00:00:31.480><c> the</c><00:00:31.570><c> guys</c>

00:00:31.589 --> 00:00:31.599 align:start position:0%
Ollie's team you know these are the guys
 

00:00:31.599 --> 00:00:34.170 align:start position:0%
Ollie's team you know these are the guys
who<00:00:32.050><c> in</c><00:00:32.890><c> your</c><00:00:33.010><c> calculus</c><00:00:33.460><c> class</c><00:00:33.520><c> were</c><00:00:33.910><c> the</c><00:00:33.970><c> ones</c>

00:00:34.170 --> 00:00:34.180 align:start position:0%
who in your calculus class were the ones
 

00:00:34.180 --> 00:00:35.460 align:start position:0%
who in your calculus class were the ones
finishing<00:00:34.570><c> the</c><00:00:34.660><c> word</c><00:00:34.840><c> problems</c><00:00:35.230><c> or</c><00:00:35.350><c> the</c>

00:00:35.460 --> 00:00:35.470 align:start position:0%
finishing the word problems or the
 

00:00:35.470 --> 00:00:37.590 align:start position:0%
finishing the word problems or the
homework<00:00:36.460><c> before</c><00:00:36.760><c> the</c><00:00:36.820><c> class</c><00:00:37.000><c> was</c><00:00:37.180><c> even</c><00:00:37.450><c> over</c>

00:00:37.590 --> 00:00:37.600 align:start position:0%
homework before the class was even over
 

00:00:37.600 --> 00:00:40.440 align:start position:0%
homework before the class was even over
they<00:00:37.930><c> love</c><00:00:38.140><c> math</c><00:00:38.380><c> so</c><00:00:39.100><c> I</c><00:00:39.460><c> hope</c><00:00:39.820><c> you</c><00:00:40.000><c> guys</c><00:00:40.149><c> enjoy</c>

00:00:40.440 --> 00:00:40.450 align:start position:0%
they love math so I hope you guys enjoy
 

00:00:40.450 --> 00:00:41.940 align:start position:0%
they love math so I hope you guys enjoy
this<00:00:40.600><c> session</c><00:00:40.870><c> and</c><00:00:41.410><c> with</c><00:00:41.530><c> that</c><00:00:41.649><c> I'd</c><00:00:41.800><c> like</c><00:00:41.890><c> to</c>

00:00:41.940 --> 00:00:41.950 align:start position:0%
this session and with that I'd like to
 

00:00:41.950 --> 00:00:57.720 align:start position:0%
this session and with that I'd like to
introduce<00:00:42.220><c> dr.</c><00:00:42.489><c> Elyse</c><00:00:42.880><c> house</c><00:00:43.120><c> Gauri</c><00:00:49.859><c> hi</c><00:00:56.730><c> to</c>

00:00:57.720 --> 00:00:57.730 align:start position:0%
introduce dr. Elyse house Gauri hi to
 

00:00:57.730 --> 00:01:01.139 align:start position:0%
introduce dr. Elyse house Gauri hi to
you<00:00:57.850><c> about</c><00:00:58.000><c> is</c><00:00:59.219><c> the</c><00:01:00.219><c> accelerate</c><00:01:00.730><c> framework</c>

00:01:01.139 --> 00:01:01.149 align:start position:0%
you about is the accelerate framework
 

00:01:01.149 --> 00:01:03.299 align:start position:0%
you about is the accelerate framework
and<00:01:01.390><c> what</c><00:01:01.539><c> we</c><00:01:01.660><c> have</c><00:01:01.809><c> done</c><00:01:01.839><c> and</c><00:01:02.530><c> we</c><00:01:02.890><c> plan</c><00:01:03.160><c> on</c>

00:01:03.299 --> 00:01:03.309 align:start position:0%
and what we have done and we plan on
 

00:01:03.309 --> 00:01:07.470 align:start position:0%
and what we have done and we plan on
doing<00:01:03.609><c> for</c><00:01:03.930><c> Tiger</c><00:01:04.930><c> the</c><00:01:05.470><c> talk</c><00:01:05.710><c> is</c><00:01:06.000><c> in</c><00:01:07.000><c> three</c>

00:01:07.470 --> 00:01:07.480 align:start position:0%
doing for Tiger the talk is in three
 

00:01:07.480 --> 00:01:09.060 align:start position:0%
doing for Tiger the talk is in three
parts<00:01:07.510><c> I'm</c><00:01:08.260><c> going</c><00:01:08.500><c> to</c><00:01:08.590><c> give</c><00:01:08.740><c> you</c><00:01:08.860><c> a</c><00:01:08.890><c> general</c>

00:01:09.060 --> 00:01:09.070 align:start position:0%
parts I'm going to give you a general
 

00:01:09.070 --> 00:01:11.310 align:start position:0%
parts I'm going to give you a general
overview<00:01:09.490><c> and</c><00:01:09.940><c> some</c><00:01:10.330><c> snippets</c><00:01:10.690><c> of</c><00:01:10.900><c> results</c>

00:01:11.310 --> 00:01:11.320 align:start position:0%
overview and some snippets of results
 

00:01:11.320 --> 00:01:14.010 align:start position:0%
overview and some snippets of results
that<00:01:11.470><c> we</c><00:01:11.560><c> have</c><00:01:11.909><c> and</c><00:01:12.909><c> after</c><00:01:13.390><c> that</c><00:01:13.690><c> I'm</c><00:01:13.840><c> going</c><00:01:13.960><c> to</c>

00:01:14.010 --> 00:01:14.020 align:start position:0%
that we have and after that I'm going to
 

00:01:14.020 --> 00:01:17.070 align:start position:0%
that we have and after that I'm going to
pass<00:01:14.200><c> it</c><00:01:14.380><c> on</c><00:01:14.470><c> to</c><00:01:14.500><c> my</c><00:01:14.740><c> colleague</c><00:01:15.600><c> Ian</c><00:01:16.600><c> Oldman</c>

00:01:17.070 --> 00:01:17.080 align:start position:0%
pass it on to my colleague Ian Oldman
 

00:01:17.080 --> 00:01:18.630 align:start position:0%
pass it on to my colleague Ian Oldman
and<00:01:17.320><c> he's</c><00:01:17.440><c> going</c><00:01:17.650><c> to</c><00:01:17.740><c> talk</c><00:01:17.980><c> about</c><00:01:18.100><c> the</c><00:01:18.370><c> image</c>

00:01:18.630 --> 00:01:18.640 align:start position:0%
and he's going to talk about the image
 

00:01:18.640 --> 00:01:20.280 align:start position:0%
and he's going to talk about the image
processing<00:01:18.880><c> library</c><00:01:19.540><c> which</c><00:01:19.720><c> was</c><00:01:19.870><c> introduced</c>

00:01:20.280 --> 00:01:20.290 align:start position:0%
processing library which was introduced
 

00:01:20.290 --> 00:01:24.240 align:start position:0%
processing library which was introduced
last<00:01:20.530><c> year</c><00:01:20.950><c> and</c><00:01:21.130><c> the</c><00:01:21.480><c> the</c><00:01:22.480><c> panther</c><00:01:22.960><c> OS</c><00:01:23.860><c> and</c>

00:01:24.240 --> 00:01:24.250 align:start position:0%
last year and the the panther OS and
 

00:01:24.250 --> 00:01:26.790 align:start position:0%
last year and the the panther OS and
after<00:01:24.820><c> that</c><00:01:24.970><c> I'm</c><00:01:25.150><c> gonna</c><00:01:25.270><c> pass</c><00:01:25.480><c> it</c><00:01:25.720><c> to</c><00:01:25.840><c> my</c><00:01:26.020><c> other</c>

00:01:26.790 --> 00:01:26.800 align:start position:0%
after that I'm gonna pass it to my other
 

00:01:26.800 --> 00:01:28.530 align:start position:0%
after that I'm gonna pass it to my other
colleague<00:01:27.250><c> Steve</c><00:01:27.520><c> and</c><00:01:27.820><c> he's</c><00:01:27.970><c> going</c><00:01:28.150><c> to</c><00:01:28.240><c> talk</c>

00:01:28.530 --> 00:01:28.540 align:start position:0%
colleague Steve and he's going to talk
 

00:01:28.540 --> 00:01:33.090 align:start position:0%
colleague Steve and he's going to talk
more<00:01:29.320><c> about</c><00:01:29.380><c> the</c><00:01:29.920><c> numerix</c><00:01:30.400><c> and</c><00:01:30.790><c> the</c><00:01:32.100><c> linear</c>

00:01:33.090 --> 00:01:33.100 align:start position:0%
more about the numerix and the linear
 

00:01:33.100 --> 00:01:37.170 align:start position:0%
more about the numerix and the linear
algebra<00:01:33.250><c> results</c><00:01:34.210><c> that</c><00:01:34.360><c> we</c><00:01:34.480><c> have</c><00:01:36.030><c> so</c><00:01:37.030><c> let's</c>

00:01:37.170 --> 00:01:37.180 align:start position:0%
algebra results that we have so let's
 

00:01:37.180 --> 00:01:39.440 align:start position:0%
algebra results that we have so let's
get<00:01:37.300><c> started</c>

00:01:39.440 --> 00:01:39.450 align:start position:0%
get started
 

00:01:39.450 --> 00:01:43.380 align:start position:0%
get started
so<00:01:40.450><c> as</c><00:01:40.570><c> you</c><00:01:40.720><c> know</c><00:01:40.840><c> we</c><00:01:41.220><c> have</c><00:01:42.220><c> had</c><00:01:42.520><c> this</c>

00:01:43.380 --> 00:01:43.390 align:start position:0%
so as you know we have had this
 

00:01:43.390 --> 00:01:45.120 align:start position:0%
so as you know we have had this
particular<00:01:43.810><c> configuration</c><00:01:44.170><c> the</c><00:01:44.710><c> accelerate</c>

00:01:45.120 --> 00:01:45.130 align:start position:0%
particular configuration the accelerate
 

00:01:45.130 --> 00:01:46.950 align:start position:0%
particular configuration the accelerate
framework<00:01:45.610><c> which</c><00:01:46.090><c> is</c><00:01:46.210><c> a</c><00:01:46.240><c> collection</c><00:01:46.720><c> of</c><00:01:46.810><c> all</c>

00:01:46.950 --> 00:01:46.960 align:start position:0%
framework which is a collection of all
 

00:01:46.960 --> 00:01:50.220 align:start position:0%
framework which is a collection of all
the<00:01:46.990><c> computational</c><00:01:48.960><c> underpinnings</c><00:01:49.960><c> of</c><00:01:50.110><c> the</c>

00:01:50.220 --> 00:01:50.230 align:start position:0%
the computational underpinnings of the
 

00:01:50.230 --> 00:01:54.090 align:start position:0%
the computational underpinnings of the
Mac<00:01:50.410><c> os10</c><00:01:50.740><c> in</c><00:01:51.250><c> Panther</c><00:01:51.700><c> we've</c><00:01:52.630><c> had</c><00:01:52.870><c> the</c><00:01:53.860><c> vet</c>

00:01:54.090 --> 00:01:54.100 align:start position:0%
Mac os10 in Panther we've had the vet
 

00:01:54.100 --> 00:01:55.980 align:start position:0%
Mac os10 in Panther we've had the vet
clip<00:01:54.310><c> section</c><00:01:54.490><c> of</c><00:01:54.730><c> it</c><00:01:54.850><c> for</c><00:01:55.030><c> a</c><00:01:55.060><c> while</c><00:01:55.120><c> last</c><00:01:55.810><c> year</c>

00:01:55.980 --> 00:01:55.990 align:start position:0%
clip section of it for a while last year
 

00:01:55.990 --> 00:01:58.620 align:start position:0%
clip section of it for a while last year
we<00:01:56.200><c> introduced</c><00:01:56.860><c> the</c><00:01:57.220><c> image</c><00:01:57.550><c> vet</c><00:01:58.270><c> clip</c><00:01:58.450><c> section</c>

00:01:58.620 --> 00:01:58.630 align:start position:0%
we introduced the image vet clip section
 

00:01:58.630 --> 00:02:00.480 align:start position:0%
we introduced the image vet clip section
had<00:01:58.960><c> the</c><00:01:59.080><c> signal</c><00:01:59.380><c> processing</c><00:01:59.980><c> the</c><00:02:00.190><c> linear</c>

00:02:00.480 --> 00:02:00.490 align:start position:0%
had the signal processing the linear
 

00:02:00.490 --> 00:02:03.870 align:start position:0%
had the signal processing the linear
algebra<00:02:00.640><c> the</c><00:02:01.380><c> matrix</c><00:02:02.520><c> computations</c><00:02:03.520><c> the</c><00:02:03.670><c> Blas</c>

00:02:03.870 --> 00:02:03.880 align:start position:0%
algebra the matrix computations the Blas
 

00:02:03.880 --> 00:02:06.510 align:start position:0%
algebra the matrix computations the Blas
the<00:02:04.690><c> large</c><00:02:04.900><c> number</c><00:02:05.200><c> computations</c><00:02:05.890><c> and</c><00:02:06.130><c> the</c>

00:02:06.510 --> 00:02:06.520 align:start position:0%
the large number computations and the
 

00:02:06.520 --> 00:02:09.359 align:start position:0%
the large number computations and the
math<00:02:07.360><c> libraries</c><00:02:07.990><c> which</c><00:02:08.289><c> took</c><00:02:08.800><c> hardware</c>

00:02:09.359 --> 00:02:09.369 align:start position:0%
math libraries which took hardware
 

00:02:09.369 --> 00:02:12.089 align:start position:0%
math libraries which took hardware
vectors<00:02:09.700><c> 128</c><00:02:10.420><c> bit</c><00:02:10.599><c> vectors</c><00:02:10.989><c> we</c><00:02:11.590><c> added</c><00:02:11.890><c> image</c>

00:02:12.089 --> 00:02:12.099 align:start position:0%
vectors 128 bit vectors we added image
 

00:02:12.099 --> 00:02:13.740 align:start position:0%
vectors 128 bit vectors we added image
processing<00:02:12.670><c> I'm</c><00:02:12.849><c> happy</c><00:02:13.120><c> to</c><00:02:13.239><c> tell</c><00:02:13.360><c> you</c><00:02:13.420><c> a</c><00:02:13.540><c> lot</c>

00:02:13.740 --> 00:02:13.750 align:start position:0%
processing I'm happy to tell you a lot
 

00:02:13.750 --> 00:02:15.390 align:start position:0%
processing I'm happy to tell you a lot
of<00:02:13.780><c> people</c><00:02:14.050><c> are</c><00:02:14.200><c> using</c><00:02:14.410><c> our</c><00:02:14.680><c> image</c><00:02:14.890><c> processing</c>

00:02:15.390 --> 00:02:15.400 align:start position:0%
of people are using our image processing
 

00:02:15.400 --> 00:02:17.820 align:start position:0%
of people are using our image processing
inside<00:02:15.790><c> Apple</c><00:02:16.000><c> and</c><00:02:16.269><c> outside</c><00:02:16.660><c> and</c><00:02:16.930><c> we're</c><00:02:17.560><c> going</c>

00:02:17.820 --> 00:02:17.830 align:start position:0%
inside Apple and outside and we're going
 

00:02:17.830 --> 00:02:21.090 align:start position:0%
inside Apple and outside and we're going
to<00:02:18.010><c> talk</c><00:02:18.370><c> a</c><00:02:18.400><c> little</c><00:02:18.640><c> bit</c><00:02:18.849><c> more</c><00:02:18.879><c> about</c><00:02:19.269><c> that</c><00:02:20.100><c> one</c>

00:02:21.090 --> 00:02:21.100 align:start position:0%
to talk a little bit more about that one
 

00:02:21.100 --> 00:02:22.730 align:start position:0%
to talk a little bit more about that one
of<00:02:21.250><c> the</c>

00:02:22.730 --> 00:02:22.740 align:start position:0%
of the
 

00:02:22.740 --> 00:02:25.310 align:start position:0%
of the
additions<00:02:23.490><c> to</c><00:02:23.580><c> the</c><00:02:24.030><c> new</c><00:02:24.180><c> operating</c><00:02:24.570><c> system</c><00:02:25.020><c> is</c>

00:02:25.310 --> 00:02:25.320 align:start position:0%
additions to the new operating system is
 

00:02:25.320 --> 00:02:28.900 align:start position:0%
additions to the new operating system is
V<00:02:25.680><c> force</c><00:02:25.980><c> V</c><00:02:26.670><c> force</c><00:02:27.060><c> we've</c><00:02:27.720><c> had</c><00:02:27.870><c> a</c><00:02:27.900><c> lot</c><00:02:28.110><c> of</c><00:02:28.140><c> calls</c>

00:02:28.900 --> 00:02:28.910 align:start position:0%
V force V force we've had a lot of calls
 

00:02:28.910 --> 00:02:31.910 align:start position:0%
V force V force we've had a lot of calls
for<00:02:29.910><c> people</c><00:02:30.390><c> who</c><00:02:30.480><c> wanted</c><00:02:30.780><c> to</c><00:02:30.840><c> use</c><00:02:31.170><c> an</c><00:02:31.530><c> array</c><00:02:31.680><c> of</c>

00:02:31.910 --> 00:02:31.920 align:start position:0%
for people who wanted to use an array of
 

00:02:31.920 --> 00:02:34.040 align:start position:0%
for people who wanted to use an array of
elements<00:02:32.730><c> and</c><00:02:33.240><c> pass</c><00:02:33.480><c> it</c><00:02:33.690><c> on</c><00:02:33.780><c> to</c><00:02:33.810><c> the</c>

00:02:34.040 --> 00:02:34.050 align:start position:0%
elements and pass it on to the
 

00:02:34.050 --> 00:02:37.070 align:start position:0%
elements and pass it on to the
elementary<00:02:34.470><c> functions</c><00:02:34.890><c> and</c><00:02:35.160><c> get</c><00:02:36.080><c> the</c>

00:02:37.070 --> 00:02:37.080 align:start position:0%
elementary functions and get the
 

00:02:37.080 --> 00:02:38.420 align:start position:0%
elementary functions and get the
elementary<00:02:37.470><c> function</c><00:02:37.770><c> results</c><00:02:38.220><c> not</c><00:02:38.370><c> just</c>

00:02:38.420 --> 00:02:38.430 align:start position:0%
elementary function results not just
 

00:02:38.430 --> 00:02:41.480 align:start position:0%
elementary function results not just
pass<00:02:38.790><c> it</c><00:02:38.970><c> on</c><00:02:39.090><c> in</c><00:02:39.420><c> hardware</c><00:02:40.080><c> vectors</c><00:02:40.380><c> just</c><00:02:40.680><c> one</c>

00:02:41.480 --> 00:02:41.490 align:start position:0%
pass it on in hardware vectors just one
 

00:02:41.490 --> 00:02:43.790 align:start position:0%
pass it on in hardware vectors just one
scalar<00:02:41.790><c> at</c><00:02:41.970><c> a</c><00:02:42.060><c> time</c><00:02:42.270><c> V</c><00:02:42.900><c> Force</c><00:02:43.260><c> is</c><00:02:43.470><c> our</c><00:02:43.590><c> new</c>

00:02:43.790 --> 00:02:43.800 align:start position:0%
scalar at a time V Force is our new
 

00:02:43.800 --> 00:02:45.650 align:start position:0%
scalar at a time V Force is our new
library<00:02:44.040><c> which</c><00:02:44.820><c> we</c><00:02:44.940><c> will</c><00:02:45.060><c> talk</c><00:02:45.240><c> in</c><00:02:45.450><c> depth</c>

00:02:45.650 --> 00:02:45.660 align:start position:0%
library which we will talk in depth
 

00:02:45.660 --> 00:02:50.860 align:start position:0%
library which we will talk in depth
later<00:02:46.170><c> on</c><00:02:46.320><c> Steve</c><00:02:46.710><c> will</c><00:02:46.860><c> talk</c><00:02:47.040><c> about</c><00:02:47.190><c> that</c>

00:02:50.860 --> 00:02:50.870 align:start position:0%
 
 

00:02:50.870 --> 00:02:54.830 align:start position:0%
 
what<00:02:51.870><c> is</c><00:02:52.020><c> delivered</c><00:02:52.740><c> in</c><00:02:52.860><c> Mac</c><00:02:53.070><c> os10</c><00:02:53.940><c> tiger</c>

00:02:54.830 --> 00:02:54.840 align:start position:0%
what is delivered in Mac os10 tiger
 

00:02:54.840 --> 00:02:57.460 align:start position:0%
what is delivered in Mac os10 tiger
basically<00:02:55.710><c> the</c><00:02:55.830><c> accelerate</c><00:02:56.250><c> framework</c><00:02:56.790><c> is</c>

00:02:57.460 --> 00:02:57.470 align:start position:0%
basically the accelerate framework is
 

00:02:57.470 --> 00:03:00.260 align:start position:0%
basically the accelerate framework is
one-stop<00:02:58.470><c> shopping</c><00:02:58.800><c> for</c><00:02:59.270><c> computational</c>

00:03:00.260 --> 00:03:00.270 align:start position:0%
one-stop shopping for computational
 

00:03:00.270 --> 00:03:03.560 align:start position:0%
one-stop shopping for computational
performance<00:03:00.740><c> digital</c><00:03:01.740><c> signal</c><00:03:02.010><c> processing</c><00:03:02.570><c> we</c>

00:03:03.560 --> 00:03:03.570 align:start position:0%
performance digital signal processing we
 

00:03:03.570 --> 00:03:05.840 align:start position:0%
performance digital signal processing we
have<00:03:03.600><c> expanded</c><00:03:04.080><c> that</c><00:03:04.410><c> in</c><00:03:04.710><c> Tiger</c><00:03:05.280><c> we</c><00:03:05.550><c> will</c><00:03:05.700><c> have</c>

00:03:05.840 --> 00:03:05.850 align:start position:0%
have expanded that in Tiger we will have
 

00:03:05.850 --> 00:03:07.340 align:start position:0%
have expanded that in Tiger we will have
about<00:03:06.030><c> three</c><00:03:06.450><c> hundred</c><00:03:06.540><c> and</c><00:03:06.750><c> forty</c><00:03:07.200><c> new</c>

00:03:07.340 --> 00:03:07.350 align:start position:0%
about three hundred and forty new
 

00:03:07.350 --> 00:03:11.780 align:start position:0%
about three hundred and forty new
functions<00:03:07.800><c> in</c><00:03:07.980><c> the</c><00:03:08.100><c> VDS</c><00:03:08.580><c> B</c><00:03:09.320><c> sub</c><00:03:10.320><c> framework</c><00:03:10.800><c> we</c>

00:03:11.780 --> 00:03:11.790 align:start position:0%
functions in the VDS B sub framework we
 

00:03:11.790 --> 00:03:13.490 align:start position:0%
functions in the VDS B sub framework we
have<00:03:11.910><c> digital</c><00:03:12.120><c> image</c><00:03:12.510><c> image</c><00:03:12.810><c> processing</c><00:03:13.260><c> we</c>

00:03:13.490 --> 00:03:13.500 align:start position:0%
have digital image image processing we
 

00:03:13.500 --> 00:03:16.280 align:start position:0%
have digital image image processing we
have<00:03:13.650><c> expanded</c><00:03:14.010><c> that</c><00:03:14.310><c> also</c><00:03:14.610><c> and</c><00:03:15.150><c> with</c><00:03:15.720><c> added</c>

00:03:16.280 --> 00:03:16.290 align:start position:0%
have expanded that also and with added
 

00:03:16.290 --> 00:03:18.680 align:start position:0%
have expanded that also and with added
performance<00:03:17.040><c> in</c><00:03:17.580><c> some</c><00:03:17.820><c> of</c><00:03:17.940><c> the</c><00:03:18.060><c> core</c><00:03:18.270><c> routines</c>

00:03:18.680 --> 00:03:18.690 align:start position:0%
performance in some of the core routines
 

00:03:18.690 --> 00:03:21.800 align:start position:0%
performance in some of the core routines
such<00:03:18.840><c> as</c><00:03:19.020><c> convolution</c><00:03:19.940><c> the</c><00:03:20.940><c> Blas</c><00:03:21.180><c> level</c><00:03:21.630><c> one</c>

00:03:21.800 --> 00:03:21.810 align:start position:0%
such as convolution the Blas level one
 

00:03:21.810 --> 00:03:23.180 align:start position:0%
such as convolution the Blas level one
two<00:03:22.080><c> and</c><00:03:22.230><c> three</c><00:03:22.560><c> if</c><00:03:22.680><c> you're</c><00:03:22.770><c> familiar</c><00:03:22.950><c> with</c>

00:03:23.180 --> 00:03:23.190 align:start position:0%
two and three if you're familiar with
 

00:03:23.190 --> 00:03:24.560 align:start position:0%
two and three if you're familiar with
that<00:03:23.340><c> that</c><00:03:23.580><c> these</c><00:03:23.760><c> are</c><00:03:23.910><c> the</c><00:03:24.030><c> basic</c><00:03:24.360><c> linear</c>

00:03:24.560 --> 00:03:24.570 align:start position:0%
that that these are the basic linear
 

00:03:24.570 --> 00:03:26.660 align:start position:0%
that that these are the basic linear
algebra<00:03:24.930><c> subroutines</c><00:03:25.250><c> again</c><00:03:26.250><c> these</c><00:03:26.400><c> are</c><00:03:26.550><c> the</c>

00:03:26.660 --> 00:03:26.670 align:start position:0%
algebra subroutines again these are the
 

00:03:26.670 --> 00:03:29.570 align:start position:0%
algebra subroutines again these are the
structures<00:03:27.360><c> of</c><00:03:28.130><c> computations</c><00:03:29.130><c> that</c><00:03:29.220><c> people</c>

00:03:29.570 --> 00:03:29.580 align:start position:0%
structures of computations that people
 

00:03:29.580 --> 00:03:32.320 align:start position:0%
structures of computations that people
do<00:03:29.730><c> for</c><00:03:30.000><c> la</c><00:03:30.450><c> pack</c><00:03:30.690><c> the</c><00:03:30.930><c> entire</c><00:03:31.350><c> la</c><00:03:31.709><c> pack</c><00:03:31.980><c> that's</c>

00:03:32.320 --> 00:03:32.330 align:start position:0%
do for la pack the entire la pack that's
 

00:03:32.330 --> 00:03:37.250 align:start position:0%
do for la pack the entire la pack that's
single<00:03:33.330><c> and</c><00:03:33.570><c> double</c><00:03:33.959><c> real</c><00:03:34.500><c> and</c><00:03:34.739><c> complex</c><00:03:36.260><c> for</c>

00:03:37.250 --> 00:03:37.260 align:start position:0%
single and double real and complex for
 

00:03:37.260 --> 00:03:39.199 align:start position:0%
single and double real and complex for
all<00:03:37.709><c> of</c><00:03:37.950><c> the</c><00:03:38.070><c> routines</c><00:03:38.400><c> basically</c><00:03:38.880><c> this</c><00:03:39.000><c> is</c>

00:03:39.199 --> 00:03:39.209 align:start position:0%
all of the routines basically this is
 

00:03:39.209 --> 00:03:41.690 align:start position:0%
all of the routines basically this is
the<00:03:39.450><c> exact</c><00:03:39.870><c> API</c><00:03:40.650><c> that</c><00:03:41.070><c> people</c><00:03:41.520><c> who</c><00:03:41.580><c> are</c><00:03:41.670><c> using</c>

00:03:41.690 --> 00:03:41.700 align:start position:0%
the exact API that people who are using
 

00:03:41.700 --> 00:03:44.510 align:start position:0%
the exact API that people who are using
la<00:03:42.180><c> pack</c><00:03:42.390><c> are</c><00:03:42.570><c> used</c><00:03:42.750><c> to</c><00:03:42.959><c> v</c><00:03:43.680><c> force</c><00:03:43.980><c> the</c><00:03:44.280><c> array</c>

00:03:44.510 --> 00:03:44.520 align:start position:0%
la pack are used to v force the array
 

00:03:44.520 --> 00:03:45.770 align:start position:0%
la pack are used to v force the array
LMS<00:03:44.940><c> that</c><00:03:45.090><c> we'll</c><00:03:45.209><c> talk</c><00:03:45.360><c> a</c><00:03:45.390><c> little</c><00:03:45.540><c> bit</c><00:03:45.690><c> more</c>

00:03:45.770 --> 00:03:45.780 align:start position:0%
LMS that we'll talk a little bit more
 

00:03:45.780 --> 00:03:47.090 align:start position:0%
LMS that we'll talk a little bit more
about<00:03:46.530><c> that</c><00:03:46.709><c> today</c>

00:03:47.090 --> 00:03:47.100 align:start position:0%
about that today
 

00:03:47.100 --> 00:03:50.830 align:start position:0%
about that today
and<00:03:47.370><c> that's</c><00:03:47.640><c> a</c><00:03:47.940><c> new</c><00:03:48.150><c> in</c><00:03:48.510><c> Tiger</c><00:03:49.140><c> V</c><00:03:49.770><c> mathlib</c><00:03:50.310><c> the</c>

00:03:50.830 --> 00:03:50.840 align:start position:0%
and that's a new in Tiger V mathlib the
 

00:03:50.840 --> 00:03:53.720 align:start position:0%
and that's a new in Tiger V mathlib the
counterpart<00:03:51.840><c> of</c><00:03:52.020><c> regular</c><00:03:52.830><c> Lib</c><00:03:53.010><c> M</c><00:03:53.160><c> which</c><00:03:53.430><c> on</c>

00:03:53.720 --> 00:03:53.730 align:start position:0%
counterpart of regular Lib M which on
 

00:03:53.730 --> 00:03:55.760 align:start position:0%
counterpart of regular Lib M which on
the<00:03:54.209><c> scalar</c><00:03:54.480><c> runs</c><00:03:54.840><c> on</c><00:03:54.989><c> scalar</c><00:03:55.230><c> this</c><00:03:55.410><c> one</c><00:03:55.590><c> here</c>

00:03:55.760 --> 00:03:55.770 align:start position:0%
the scalar runs on scalar this one here
 

00:03:55.770 --> 00:04:00.380 align:start position:0%
the scalar runs on scalar this one here
runs<00:03:55.980><c> on</c><00:03:56.160><c> the</c><00:03:56.280><c> vector</c><00:03:56.760><c> engine</c><00:03:59.000><c> I'm</c><00:04:00.000><c> going</c><00:04:00.300><c> to</c>

00:04:00.380 --> 00:04:00.390 align:start position:0%
runs on the vector engine I'm going to
 

00:04:00.390 --> 00:04:02.300 align:start position:0%
runs on the vector engine I'm going to
just<00:04:00.600><c> touch</c><00:04:00.959><c> on</c><00:04:01.170><c> some</c><00:04:01.380><c> of</c><00:04:01.680><c> the</c><00:04:01.770><c> performance</c>

00:04:02.300 --> 00:04:02.310 align:start position:0%
just touch on some of the performance
 

00:04:02.310 --> 00:04:04.430 align:start position:0%
just touch on some of the performance
improvements<00:04:03.209><c> and</c><00:04:03.420><c> performances</c><00:04:04.110><c> that</c><00:04:04.170><c> we</c>

00:04:04.430 --> 00:04:04.440 align:start position:0%
improvements and performances that we
 

00:04:04.440 --> 00:04:08.840 align:start position:0%
improvements and performances that we
have<00:04:04.700><c> right</c><00:04:05.700><c> now</c><00:04:05.730><c> in</c><00:04:06.709><c> tiger</c><00:04:07.709><c> in</c><00:04:08.280><c> some</c><00:04:08.700><c> of</c><00:04:08.760><c> the</c>

00:04:08.840 --> 00:04:08.850 align:start position:0%
have right now in tiger in some of the
 

00:04:08.850 --> 00:04:11.150 align:start position:0%
have right now in tiger in some of the
CDs<00:04:09.120><c> the</c><00:04:09.300><c> CDs</c><00:04:09.570><c> that</c><00:04:09.750><c> you've</c><00:04:09.930><c> had</c><00:04:10.140><c> first</c><00:04:11.010><c> I'd</c>

00:04:11.150 --> 00:04:11.160 align:start position:0%
CDs the CDs that you've had first I'd
 

00:04:11.160 --> 00:04:13.490 align:start position:0%
CDs the CDs that you've had first I'd
like<00:04:11.190><c> to</c><00:04:11.340><c> talk</c><00:04:11.550><c> to</c><00:04:11.820><c> talk</c><00:04:12.390><c> about</c><00:04:12.570><c> V</c><00:04:13.260><c> force</c>

00:04:13.490 --> 00:04:13.500 align:start position:0%
like to talk to talk about V force
 

00:04:13.500 --> 00:04:15.890 align:start position:0%
like to talk to talk about V force
performance<00:04:14.040><c> these</c><00:04:14.760><c> are</c><00:04:14.940><c> the</c><00:04:15.030><c> lms</c><00:04:15.450><c> we</c><00:04:15.750><c> have</c>

00:04:15.890 --> 00:04:15.900 align:start position:0%
performance these are the lms we have
 

00:04:15.900 --> 00:04:17.900 align:start position:0%
performance these are the lms we have
single<00:04:16.140><c> and</c><00:04:16.380><c> double</c><00:04:16.590><c> precision</c><00:04:16.859><c> z'</c><00:04:17.070><c> they're</c>

00:04:17.900 --> 00:04:17.910 align:start position:0%
single and double precision z' they're
 

00:04:17.910 --> 00:04:20.449 align:start position:0%
single and double precision z' they're
highly<00:04:18.299><c> accurate</c><00:04:18.480><c> they</c><00:04:18.959><c> operate</c><00:04:19.470><c> on</c><00:04:19.650><c> arrays</c>

00:04:20.449 --> 00:04:20.459 align:start position:0%
highly accurate they operate on arrays
 

00:04:20.459 --> 00:04:22.490 align:start position:0%
highly accurate they operate on arrays
instead<00:04:20.940><c> of</c><00:04:21.120><c> elements</c><00:04:21.840><c> or</c><00:04:21.930><c> Hardware</c><00:04:22.230><c> vectors</c>

00:04:22.490 --> 00:04:22.500 align:start position:0%
instead of elements or Hardware vectors
 

00:04:22.500 --> 00:04:25.520 align:start position:0%
instead of elements or Hardware vectors
128-bit<00:04:23.310><c> hardware</c><00:04:23.730><c> vectors</c><00:04:24.060><c> monotonicity</c><00:04:25.050><c> is</c>

00:04:25.520 --> 00:04:25.530 align:start position:0%
128-bit hardware vectors monotonicity is
 

00:04:25.530 --> 00:04:27.260 align:start position:0%
128-bit hardware vectors monotonicity is
observed<00:04:26.010><c> over</c><00:04:26.370><c> the</c><00:04:26.520><c> entire</c><00:04:26.880><c> range</c><00:04:27.120><c> of</c>

00:04:27.260 --> 00:04:27.270 align:start position:0%
observed over the entire range of
 

00:04:27.270 --> 00:04:28.640 align:start position:0%
observed over the entire range of
definition<00:04:27.810><c> that's</c><00:04:27.990><c> pretty</c><00:04:28.200><c> important</c>

00:04:28.640 --> 00:04:28.650 align:start position:0%
definition that's pretty important
 

00:04:28.650 --> 00:04:32.060 align:start position:0%
definition that's pretty important
because<00:04:28.770><c> there</c><00:04:29.760><c> are</c><00:04:29.900><c> competitors</c><00:04:30.900><c> which</c><00:04:31.650><c> do</c>

00:04:32.060 --> 00:04:32.070 align:start position:0%
because there are competitors which do
 

00:04:32.070 --> 00:04:35.180 align:start position:0%
because there are competitors which do
have<00:04:32.660><c> functionality</c><00:04:33.660><c> such</c><00:04:34.080><c> as</c><00:04:34.110><c> this</c><00:04:34.470><c> but</c><00:04:35.039><c> they</c>

00:04:35.180 --> 00:04:35.190 align:start position:0%
have functionality such as this but they
 

00:04:35.190 --> 00:04:36.110 align:start position:0%
have functionality such as this but they
have<00:04:35.400><c> cut</c>

00:04:36.110 --> 00:04:36.120 align:start position:0%
have cut
 

00:04:36.120 --> 00:04:38.540 align:start position:0%
have cut
the<00:04:36.360><c> corners</c><00:04:36.810><c> and</c><00:04:37.080><c> developers</c><00:04:37.620><c> have</c><00:04:38.100><c> to</c><00:04:38.310><c> worry</c>

00:04:38.540 --> 00:04:38.550 align:start position:0%
the corners and developers have to worry
 

00:04:38.550 --> 00:04:41.270 align:start position:0%
the corners and developers have to worry
about<00:04:38.760><c> pitfalls</c><00:04:39.750><c> of</c><00:04:40.050><c> where</c><00:04:40.350><c> to</c><00:04:40.530><c> call</c><00:04:40.740><c> or</c><00:04:41.070><c> what</c>

00:04:41.270 --> 00:04:41.280 align:start position:0%
about pitfalls of where to call or what
 

00:04:41.280 --> 00:04:43.129 align:start position:0%
about pitfalls of where to call or what
not<00:04:41.520><c> to</c><00:04:41.669><c> call</c><00:04:41.880><c> or</c><00:04:42.180><c> what</c><00:04:42.330><c> elements</c><00:04:42.840><c> to</c><00:04:42.930><c> call</c>

00:04:43.129 --> 00:04:43.139 align:start position:0%
not to call or what elements to call
 

00:04:43.139 --> 00:04:44.870 align:start position:0%
not to call or what elements to call
here<00:04:43.830><c> you're</c><00:04:44.010><c> free</c><00:04:44.130><c> to</c><00:04:44.310><c> call</c><00:04:44.460><c> anything</c>

00:04:44.870 --> 00:04:44.880 align:start position:0%
here you're free to call anything
 

00:04:44.880 --> 00:04:46.520 align:start position:0%
here you're free to call anything
basically<00:04:45.060><c> if</c><00:04:45.570><c> it's</c><00:04:45.990><c> in</c><00:04:46.110><c> the</c><00:04:46.199><c> floating-point</c>

00:04:46.520 --> 00:04:46.530 align:start position:0%
basically if it's in the floating-point
 

00:04:46.530 --> 00:04:49.070 align:start position:0%
basically if it's in the floating-point
domain<00:04:47.070><c> it</c><00:04:47.340><c> will</c><00:04:47.639><c> work</c><00:04:47.850><c> and</c><00:04:48.090><c> it</c><00:04:48.479><c> will</c><00:04:48.570><c> not</c><00:04:48.810><c> trip</c>

00:04:49.070 --> 00:04:49.080 align:start position:0%
domain it will work and it will not trip
 

00:04:49.080 --> 00:04:50.689 align:start position:0%
domain it will work and it will not trip
you<00:04:49.260><c> and</c><00:04:49.440><c> will</c><00:04:49.949><c> not</c><00:04:50.100><c> give</c><00:04:50.340><c> you</c><00:04:50.460><c> the</c><00:04:50.580><c> wrong</c>

00:04:50.689 --> 00:04:50.699 align:start position:0%
you and will not give you the wrong
 

00:04:50.699 --> 00:04:53.629 align:start position:0%
you and will not give you the wrong
results<00:04:51.240><c> I</c><00:04:52.229><c> have</c><00:04:52.590><c> a</c><00:04:52.620><c> small</c><00:04:53.040><c> little</c><00:04:53.070><c> table</c><00:04:53.610><c> here</c>

00:04:53.629 --> 00:04:53.639 align:start position:0%
results I have a small little table here
 

00:04:53.639 --> 00:04:55.939 align:start position:0%
results I have a small little table here
showing<00:04:54.270><c> you</c><00:04:54.419><c> what</c><00:04:54.630><c> the</c><00:04:54.750><c> benefits</c><00:04:55.169><c> of</c><00:04:55.320><c> v4s</c><00:04:55.770><c> are</c>

00:04:55.939 --> 00:04:55.949 align:start position:0%
showing you what the benefits of v4s are
 

00:04:55.949 --> 00:04:58.070 align:start position:0%
showing you what the benefits of v4s are
I'm<00:04:56.220><c> quite</c><00:04:56.490><c> proud</c><00:04:56.699><c> of</c><00:04:56.880><c> this</c><00:04:56.970><c> particular</c><00:04:57.270><c> piece</c>

00:04:58.070 --> 00:04:58.080 align:start position:0%
I'm quite proud of this particular piece
 

00:04:58.080 --> 00:05:00.260 align:start position:0%
I'm quite proud of this particular piece
of<00:04:58.110><c> work</c><00:04:58.410><c> that</c><00:04:58.440><c> our</c><00:04:58.979><c> group</c><00:04:59.520><c> has</c><00:04:59.550><c> done</c><00:05:00.000><c> and</c>

00:05:00.260 --> 00:05:00.270 align:start position:0%
of work that our group has done and
 

00:05:00.270 --> 00:05:01.670 align:start position:0%
of work that our group has done and
Steve<00:05:00.479><c> will</c><00:05:00.630><c> talk</c><00:05:00.810><c> about</c><00:05:00.960><c> this</c><00:05:01.229><c> a</c><00:05:01.290><c> little</c><00:05:01.470><c> bit</c>

00:05:01.670 --> 00:05:01.680 align:start position:0%
Steve will talk about this a little bit
 

00:05:01.680 --> 00:05:05.240 align:start position:0%
Steve will talk about this a little bit
further<00:05:02.660><c> square</c><00:05:03.660><c> root</c><00:05:03.870><c> is</c><00:05:04.050><c> three</c><00:05:04.530><c> point</c><00:05:04.979><c> five</c>

00:05:05.240 --> 00:05:05.250 align:start position:0%
further square root is three point five
 

00:05:05.250 --> 00:05:07.580 align:start position:0%
further square root is three point five
three<00:05:05.610><c> point</c><00:05:05.910><c> one</c><00:05:06.090><c> x</c><00:05:06.360><c> over</c><00:05:06.690><c> three</c><00:05:07.380><c> times</c>

00:05:07.580 --> 00:05:07.590 align:start position:0%
three point one x over three times
 

00:05:07.590 --> 00:05:10.340 align:start position:0%
three point one x over three times
faster<00:05:08.160><c> than</c><00:05:08.340><c> the</c><00:05:08.580><c> current</c><00:05:08.970><c> one</c><00:05:09.570><c> exponential</c>

00:05:10.340 --> 00:05:10.350 align:start position:0%
faster than the current one exponential
 

00:05:10.350 --> 00:05:13.430 align:start position:0%
faster than the current one exponential
is<00:05:10.500><c> over</c><00:05:11.070><c> six</c><00:05:11.310><c> times</c><00:05:11.580><c> and</c><00:05:11.910><c> sign</c><00:05:12.539><c> is</c><00:05:12.780><c> 11</c><00:05:13.260><c> times</c>

00:05:13.430 --> 00:05:13.440 align:start position:0%
is over six times and sign is 11 times
 

00:05:13.440 --> 00:05:16.520 align:start position:0%
is over six times and sign is 11 times
faster<00:05:14.100><c> and</c><00:05:14.900><c> square</c><00:05:15.900><c> root</c><00:05:16.080><c> was</c><00:05:16.199><c> already</c>

00:05:16.520 --> 00:05:16.530 align:start position:0%
faster and square root was already
 

00:05:16.530 --> 00:05:20.870 align:start position:0%
faster and square root was already
pretty<00:05:16.680><c> pretty</c><00:05:17.280><c> pretty</c><00:05:17.639><c> fast</c><00:05:18.139><c> on</c><00:05:19.580><c> g5s</c><00:05:20.580><c> but</c><00:05:20.729><c> we</c>

00:05:20.870 --> 00:05:20.880 align:start position:0%
pretty pretty pretty fast on g5s but we
 

00:05:20.880 --> 00:05:23.900 align:start position:0%
pretty pretty pretty fast on g5s but we
have<00:05:21.060><c> it</c><00:05:21.180><c> even</c><00:05:21.419><c> faster</c><00:05:21.960><c> on</c><00:05:22.139><c> this</c><00:05:22.830><c> and</c><00:05:23.550><c> the</c>

00:05:23.900 --> 00:05:23.910 align:start position:0%
have it even faster on this and the
 

00:05:23.910 --> 00:05:26.180 align:start position:0%
have it even faster on this and the
reason<00:05:24.060><c> these</c><00:05:24.360><c> things</c><00:05:24.570><c> are</c><00:05:24.960><c> faster</c><00:05:25.470><c> is</c><00:05:25.680><c> that</c>

00:05:26.180 --> 00:05:26.190 align:start position:0%
reason these things are faster is that
 

00:05:26.190 --> 00:05:28.820 align:start position:0%
reason these things are faster is that
we<00:05:26.820><c> are</c><00:05:26.970><c> able</c><00:05:27.180><c> to</c><00:05:27.539><c> plug</c><00:05:27.900><c> in</c><00:05:28.050><c> the</c><00:05:28.199><c> bubbles</c><00:05:28.590><c> in</c>

00:05:28.820 --> 00:05:28.830 align:start position:0%
we are able to plug in the bubbles in
 

00:05:28.830 --> 00:05:31.159 align:start position:0%
we are able to plug in the bubbles in
the<00:05:28.949><c> computational</c><00:05:29.840><c> structure</c><00:05:30.840><c> of</c><00:05:31.020><c> the</c>

00:05:31.159 --> 00:05:31.169 align:start position:0%
the computational structure of the
 

00:05:31.169 --> 00:05:33.110 align:start position:0%
the computational structure of the
algorithms<00:05:31.740><c> because</c><00:05:32.370><c> regular</c><00:05:33.000><c> elementary</c>

00:05:33.110 --> 00:05:33.120 align:start position:0%
algorithms because regular elementary
 

00:05:33.120 --> 00:05:34.520 align:start position:0%
algorithms because regular elementary
functions<00:05:33.750><c> they</c><00:05:33.840><c> just</c><00:05:34.080><c> don't</c><00:05:34.289><c> have</c><00:05:34.500><c> enough</c>

00:05:34.520 --> 00:05:34.530 align:start position:0%
functions they just don't have enough
 

00:05:34.530 --> 00:05:36.920 align:start position:0%
functions they just don't have enough
data<00:05:34.949><c> to</c><00:05:35.130><c> go</c><00:05:35.250><c> through</c><00:05:35.280><c> and</c><00:05:35.820><c> you</c><00:05:36.330><c> end</c><00:05:36.570><c> up</c><00:05:36.750><c> having</c>

00:05:36.920 --> 00:05:36.930 align:start position:0%
data to go through and you end up having
 

00:05:36.930 --> 00:05:41.120 align:start position:0%
data to go through and you end up having
a<00:05:37.680><c> lot</c><00:05:38.190><c> of</c><00:05:38.220><c> empty</c><00:05:38.699><c> cycles</c><00:05:39.180><c> going</c><00:05:39.539><c> by</c><00:05:40.130><c> these</c>

00:05:41.120 --> 00:05:41.130 align:start position:0%
a lot of empty cycles going by these
 

00:05:41.130 --> 00:05:42.980 align:start position:0%
a lot of empty cycles going by these
this<00:05:41.370><c> allows</c><00:05:41.700><c> it</c><00:05:42.030><c> to</c><00:05:42.060><c> fill</c><00:05:42.330><c> it</c><00:05:42.479><c> up</c><00:05:42.570><c> completely</c>

00:05:42.980 --> 00:05:42.990 align:start position:0%
this allows it to fill it up completely
 

00:05:42.990 --> 00:05:45.680 align:start position:0%
this allows it to fill it up completely
and<00:05:43.110><c> have</c><00:05:43.380><c> a</c><00:05:43.410><c> stellar</c><00:05:44.130><c> performance</c><00:05:44.729><c> the</c><00:05:45.660><c> next</c>

00:05:45.680 --> 00:05:45.690 align:start position:0%
and have a stellar performance the next
 

00:05:45.690 --> 00:05:47.420 align:start position:0%
and have a stellar performance the next
thing<00:05:46.020><c> I</c><00:05:46.080><c> like</c><00:05:46.200><c> to</c><00:05:46.349><c> talk</c><00:05:46.530><c> to</c><00:05:46.740><c> you</c><00:05:46.860><c> about</c><00:05:46.979><c> is</c><00:05:47.280><c> the</c>

00:05:47.420 --> 00:05:47.430 align:start position:0%
thing I like to talk to you about is the
 

00:05:47.430 --> 00:05:49.400 align:start position:0%
thing I like to talk to you about is the
la<00:05:47.610><c> pact</c><00:05:47.849><c> performance</c><00:05:48.479><c> Linpack</c><00:05:48.960><c> this</c><00:05:49.200><c> is</c><00:05:49.380><c> a</c>

00:05:49.400 --> 00:05:49.410 align:start position:0%
la pact performance Linpack this is a
 

00:05:49.410 --> 00:05:51.950 align:start position:0%
la pact performance Linpack this is a
lot<00:05:49.770><c> of</c><00:05:49.800><c> people</c><00:05:50.099><c> know</c><00:05:50.280><c> about</c><00:05:50.310><c> these</c><00:05:50.849><c> results</c><00:05:51.450><c> I</c>

00:05:51.950 --> 00:05:51.960 align:start position:0%
lot of people know about these results I
 

00:05:51.960 --> 00:05:53.900 align:start position:0%
lot of people know about these results I
just<00:05:52.530><c> have</c><00:05:52.710><c> a</c><00:05:52.740><c> little</c><00:05:53.099><c> bit</c><00:05:53.310><c> of</c><00:05:53.460><c> it</c><00:05:53.550><c> here</c><00:05:53.760><c> the</c>

00:05:53.900 --> 00:05:53.910 align:start position:0%
just have a little bit of it here the
 

00:05:53.910 --> 00:05:56.330 align:start position:0%
just have a little bit of it here the
DLP<00:05:54.240><c> 1000</c><00:05:55.080><c> this</c><00:05:55.200><c> is</c><00:05:55.349><c> the</c><00:05:55.530><c> double</c><00:05:56.070><c> precision</c>

00:05:56.330 --> 00:05:56.340 align:start position:0%
DLP 1000 this is the double precision
 

00:05:56.340 --> 00:06:00.740 align:start position:0%
DLP 1000 this is the double precision
Linpack<00:05:57.800><c> 1,000</c><00:05:58.800><c> by</c><00:05:58.919><c> 1,000</c><00:05:59.639><c> matrix</c><00:05:59.789><c> and</c><00:06:00.300><c> we're</c>

00:06:00.740 --> 00:06:00.750 align:start position:0%
Linpack 1,000 by 1,000 matrix and we're
 

00:06:00.750 --> 00:06:03.260 align:start position:0%
Linpack 1,000 by 1,000 matrix and we're
about<00:06:01.080><c> 5</c><00:06:01.470><c> gigaflops</c><00:06:02.130><c> for</c><00:06:02.580><c> double</c><00:06:03.000><c> precision</c>

00:06:03.260 --> 00:06:03.270 align:start position:0%
about 5 gigaflops for double precision
 

00:06:03.270 --> 00:06:07.370 align:start position:0%
about 5 gigaflops for double precision
and<00:06:03.800><c> single</c><00:06:04.800><c> precision</c><00:06:05.220><c> is</c><00:06:05.720><c> over</c><00:06:06.720><c> seven</c><00:06:07.229><c> and</c><00:06:07.289><c> a</c>

00:06:07.370 --> 00:06:07.380 align:start position:0%
and single precision is over seven and a
 

00:06:07.380 --> 00:06:10.430 align:start position:0%
and single precision is over seven and a
half<00:06:07.940><c> gigaflops</c><00:06:08.940><c> and</c><00:06:09.330><c> this</c><00:06:09.870><c> is</c><00:06:10.020><c> on</c><00:06:10.110><c> a</c><00:06:10.139><c> two</c><00:06:10.349><c> and</c>

00:06:10.430 --> 00:06:10.440 align:start position:0%
half gigaflops and this is on a two and
 

00:06:10.440 --> 00:06:15.290 align:start position:0%
half gigaflops and this is on a two and
a<00:06:10.500><c> half</c><00:06:10.680><c> gigahertz</c><00:06:11.660><c> PowerPC</c><00:06:14.300><c> Blas</c>

00:06:15.290 --> 00:06:15.300 align:start position:0%
a half gigahertz PowerPC Blas
 

00:06:15.300 --> 00:06:18.760 align:start position:0%
a half gigahertz PowerPC Blas
performance<00:06:16.610><c> the</c><00:06:17.610><c> quintessential</c><00:06:18.120><c> Blas</c>

00:06:18.760 --> 00:06:18.770 align:start position:0%
performance the quintessential Blas
 

00:06:18.770 --> 00:06:21.770 align:start position:0%
performance the quintessential Blas
performance<00:06:19.770><c> benchmark</c><00:06:20.400><c> is</c><00:06:20.610><c> really</c><00:06:21.300><c> D</c><00:06:21.570><c> game</c>

00:06:21.770 --> 00:06:21.780 align:start position:0%
performance benchmark is really D game
 

00:06:21.780 --> 00:06:24.040 align:start position:0%
performance benchmark is really D game
and<00:06:21.960><c> that's</c><00:06:22.050><c> the</c><00:06:22.349><c> double</c><00:06:23.160><c> generalized</c>

00:06:24.040 --> 00:06:24.050 align:start position:0%
and that's the double generalized
 

00:06:24.050 --> 00:06:26.870 align:start position:0%
and that's the double generalized
matrix-matrix<00:06:25.050><c> multiply</c><00:06:25.830><c> which</c><00:06:26.550><c> is</c><00:06:26.760><c> an</c>

00:06:26.870 --> 00:06:26.880 align:start position:0%
matrix-matrix multiply which is an
 

00:06:26.880 --> 00:06:29.210 align:start position:0%
matrix-matrix multiply which is an
enhanced<00:06:27.419><c> matrix</c><00:06:27.750><c> multiply</c><00:06:28.229><c> of</c><00:06:28.530><c> a</c><00:06:28.919><c> scalar</c>

00:06:29.210 --> 00:06:29.220 align:start position:0%
enhanced matrix multiply of a scalar
 

00:06:29.220 --> 00:06:31.610 align:start position:0%
enhanced matrix multiply of a scalar
times<00:06:29.340><c> a</c><00:06:29.729><c> matrix</c><00:06:29.849><c> times</c><00:06:30.360><c> matrix</c><00:06:30.930><c> plus</c><00:06:31.320><c> a</c>

00:06:31.610 --> 00:06:31.620 align:start position:0%
times a matrix times matrix plus a
 

00:06:31.620 --> 00:06:33.800 align:start position:0%
times a matrix times matrix plus a
scalar<00:06:32.160><c> times</c><00:06:32.280><c> a</c><00:06:32.639><c> matrix</c><00:06:33.060><c> and</c><00:06:33.210><c> a</c><00:06:33.539><c> lot</c><00:06:33.720><c> of</c>

00:06:33.800 --> 00:06:33.810 align:start position:0%
scalar times a matrix and a lot of
 

00:06:33.810 --> 00:06:35.300 align:start position:0%
scalar times a matrix and a lot of
people<00:06:34.050><c> like</c><00:06:34.260><c> to</c><00:06:34.440><c> look</c><00:06:34.560><c> at</c><00:06:34.710><c> that</c><00:06:34.860><c> to</c><00:06:35.130><c> see</c><00:06:35.160><c> the</c>

00:06:35.300 --> 00:06:35.310 align:start position:0%
people like to look at that to see the
 

00:06:35.310 --> 00:06:38.659 align:start position:0%
people like to look at that to see the
prowess<00:06:35.789><c> of</c><00:06:35.940><c> the</c><00:06:36.060><c> implementation</c><00:06:36.330><c> and</c><00:06:37.669><c> what</c>

00:06:38.659 --> 00:06:38.669 align:start position:0%
prowess of the implementation and what
 

00:06:38.669 --> 00:06:41.070 align:start position:0%
prowess of the implementation and what
we<00:06:38.820><c> have</c><00:06:39.030><c> here</c><00:06:39.060><c> is</c>

00:06:41.070 --> 00:06:41.080 align:start position:0%
we have here is
 

00:06:41.080 --> 00:06:43.200 align:start position:0%
we have here is
comparing<00:06:41.890><c> that</c><00:06:42.070><c> with</c><00:06:42.130><c> Opteron</c><00:06:42.880><c> because</c><00:06:43.180><c> I</c>

00:06:43.200 --> 00:06:43.210 align:start position:0%
comparing that with Opteron because I
 

00:06:43.210 --> 00:06:45.990 align:start position:0%
comparing that with Opteron because I
get<00:06:43.450><c> asked</c><00:06:43.930><c> how</c><00:06:44.110><c> we</c><00:06:44.560><c> compare</c><00:06:45.100><c> with</c><00:06:45.820><c> the</c>

00:06:45.990 --> 00:06:46.000 align:start position:0%
get asked how we compare with the
 

00:06:46.000 --> 00:06:49.230 align:start position:0%
get asked how we compare with the
competition<00:06:46.630><c> here</c><00:06:47.670><c> higher</c><00:06:48.670><c> numbers</c><00:06:49.090><c> are</c>

00:06:49.230 --> 00:06:49.240 align:start position:0%
competition here higher numbers are
 

00:06:49.240 --> 00:06:51.360 align:start position:0%
competition here higher numbers are
better<00:06:49.480><c> on</c><00:06:50.140><c> this</c><00:06:50.380><c> particular</c><00:06:50.710><c> one</c><00:06:51.040><c> here</c>

00:06:51.360 --> 00:06:51.370 align:start position:0%
better on this particular one here
 

00:06:51.370 --> 00:06:54.480 align:start position:0%
better on this particular one here
double<00:06:52.150><c> precision</c><00:06:52.420><c> size</c><00:06:53.220><c> 5500</c><00:06:54.220><c> so</c><00:06:54.310><c> if</c><00:06:54.400><c> you</c>

00:06:54.480 --> 00:06:54.490 align:start position:0%
double precision size 5500 so if you
 

00:06:54.490 --> 00:07:00.450 align:start position:0%
double precision size 5500 so if you
multiplied<00:06:54.940><c> a</c><00:06:56.130><c> 5500</c><00:06:57.130><c> size</c><00:06:57.970><c> matrices</c><00:06:59.280><c> you</c><00:07:00.280><c> will</c>

00:07:00.450 --> 00:07:00.460 align:start position:0%
multiplied a 5500 size matrices you will
 

00:07:00.460 --> 00:07:05.280 align:start position:0%
multiplied a 5500 size matrices you will
have<00:07:00.670><c> a</c><00:07:01.090><c> 12.1</c><00:07:01.780><c> 8</c><00:07:02.170><c> on</c><00:07:02.440><c> a</c><00:07:02.550><c> PowerPC</c><00:07:03.550><c> and</c><00:07:04.120><c> a</c><00:07:04.510><c> 7</c><00:07:04.870><c> over</c>

00:07:05.280 --> 00:07:05.290 align:start position:0%
have a 12.1 8 on a PowerPC and a 7 over
 

00:07:05.290 --> 00:07:08.280 align:start position:0%
have a 12.1 8 on a PowerPC and a 7 over
7<00:07:05.440><c> gigaflops</c><00:07:06.100><c> for</c><00:07:06.550><c> the</c><00:07:07.270><c> Opteron</c><00:07:07.780><c> now</c><00:07:08.230><c> the</c>

00:07:08.280 --> 00:07:08.290 align:start position:0%
7 gigaflops for the Opteron now the
 

00:07:08.290 --> 00:07:10.230 align:start position:0%
7 gigaflops for the Opteron now the
Opteron<00:07:09.010><c> that</c><00:07:09.220><c> we</c><00:07:09.340><c> had</c><00:07:09.520><c> on</c><00:07:09.640><c> our</c><00:07:09.730><c> hand</c><00:07:10.000><c> was</c><00:07:10.210><c> a</c>

00:07:10.230 --> 00:07:10.240 align:start position:0%
Opteron that we had on our hand was a
 

00:07:10.240 --> 00:07:14.640 align:start position:0%
Opteron that we had on our hand was a
2.0<00:07:10.870><c> gigahertz</c><00:07:11.560><c> machine</c><00:07:12.100><c> we</c><00:07:12.700><c> just</c><00:07:12.970><c> added</c><00:07:13.780><c> 20%</c>

00:07:14.640 --> 00:07:14.650 align:start position:0%
2.0 gigahertz machine we just added 20%
 

00:07:14.650 --> 00:07:17.130 align:start position:0%
2.0 gigahertz machine we just added 20%
more<00:07:14.830><c> to</c><00:07:15.070><c> it</c><00:07:15.160><c> we</c><00:07:15.280><c> were</c><00:07:15.370><c> unable</c><00:07:15.520><c> to</c><00:07:15.780><c> get</c><00:07:16.780><c> a</c><00:07:16.840><c> hold</c>

00:07:17.130 --> 00:07:17.140 align:start position:0%
more to it we were unable to get a hold
 

00:07:17.140 --> 00:07:20.250 align:start position:0%
more to it we were unable to get a hold
of<00:07:17.260><c> a</c><00:07:17.440><c> live</c><00:07:18.130><c> 2.4</c><00:07:19.060><c> gigahertz</c><00:07:19.270><c> machine</c><00:07:19.900><c> to</c><00:07:20.110><c> run</c>

00:07:20.250 --> 00:07:20.260 align:start position:0%
of a live 2.4 gigahertz machine to run
 

00:07:20.260 --> 00:07:22.380 align:start position:0%
of a live 2.4 gigahertz machine to run
that<00:07:20.440><c> stuff</c><00:07:20.710><c> we</c><00:07:20.830><c> gave</c><00:07:21.040><c> him</c><00:07:21.190><c> exactly</c><00:07:21.310><c> 20%</c><00:07:22.300><c> up</c>

00:07:22.380 --> 00:07:22.390 align:start position:0%
that stuff we gave him exactly 20% up
 

00:07:22.390 --> 00:07:24.180 align:start position:0%
that stuff we gave him exactly 20% up
which<00:07:22.540><c> generally</c><00:07:22.900><c> frequency</c><00:07:23.740><c> goes</c><00:07:23.890><c> up</c><00:07:23.920><c> that</c>

00:07:24.180 --> 00:07:24.190 align:start position:0%
which generally frequency goes up that
 

00:07:24.190 --> 00:07:25.650 align:start position:0%
which generally frequency goes up that
much<00:07:24.400><c> performance</c><00:07:24.790><c> doesn't</c><00:07:25.090><c> go</c><00:07:25.180><c> up</c><00:07:25.330><c> that</c><00:07:25.480><c> much</c>

00:07:25.650 --> 00:07:25.660 align:start position:0%
much performance doesn't go up that much
 

00:07:25.660 --> 00:07:26.250 align:start position:0%
much performance doesn't go up that much
what<00:07:25.840><c> we</c><00:07:25.930><c> did</c>

00:07:26.250 --> 00:07:26.260 align:start position:0%
what we did
 

00:07:26.260 --> 00:07:28.530 align:start position:0%
what we did
so<00:07:26.740><c> it's</c><00:07:26.890><c> twelve</c><00:07:27.130><c> point</c><00:07:27.340><c> eight</c><00:07:27.520><c> versus</c><00:07:28.360><c> eight</c>

00:07:28.530 --> 00:07:28.540 align:start position:0%
so it's twelve point eight versus eight
 

00:07:28.540 --> 00:07:31.290 align:start position:0%
so it's twelve point eight versus eight
point<00:07:28.840><c> five</c><00:07:29.500><c> five</c><00:07:29.770><c> what</c><00:07:30.490><c> I</c><00:07:30.520><c> have</c><00:07:30.760><c> four</c><00:07:30.970><c> graders</c>

00:07:31.290 --> 00:07:31.300 align:start position:0%
point five five what I have four graders
 

00:07:31.300 --> 00:07:34.220 align:start position:0%
point five five what I have four graders
here<00:07:31.630><c> is</c><00:07:31.840><c> just</c><00:07:32.290><c> for</c><00:07:32.410><c> fun</c><00:07:32.650><c> what</c><00:07:32.950><c> would</c><00:07:33.100><c> the</c><00:07:33.250><c> SCM</c>

00:07:34.220 --> 00:07:34.230 align:start position:0%
here is just for fun what would the SCM
 

00:07:34.230 --> 00:07:36.870 align:start position:0%
here is just for fun what would the SCM
performance<00:07:35.230><c> be</c><00:07:35.410><c> and</c><00:07:35.650><c> the</c><00:07:36.010><c> SCM</c><00:07:36.370><c> performance</c>

00:07:36.870 --> 00:07:36.880 align:start position:0%
performance be and the SCM performance
 

00:07:36.880 --> 00:07:39.930 align:start position:0%
performance be and the SCM performance
on<00:07:36.970><c> our</c><00:07:37.060><c> machine</c><00:07:37.420><c> is</c><00:07:37.450><c> 23</c><00:07:38.290><c> gigaflops</c><00:07:38.950><c> I</c><00:07:39.280><c> don't</c>

00:07:39.930 --> 00:07:39.940 align:start position:0%
on our machine is 23 gigaflops I don't
 

00:07:39.940 --> 00:07:40.950 align:start position:0%
on our machine is 23 gigaflops I don't
know<00:07:40.030><c> some</c><00:07:40.240><c> of</c><00:07:40.360><c> you</c><00:07:40.480><c> know</c><00:07:40.570><c> I've</c><00:07:40.720><c> been</c><00:07:40.840><c> in</c>

00:07:40.950 --> 00:07:40.960 align:start position:0%
know some of you know I've been in
 

00:07:40.960 --> 00:07:43.110 align:start position:0%
know some of you know I've been in
competition<00:07:41.110><c> for</c><00:07:41.500><c> a</c><00:07:41.680><c> while</c><00:07:41.830><c> now</c><00:07:42.130><c> and</c><00:07:42.370><c> 20</c>

00:07:43.110 --> 00:07:43.120 align:start position:0%
competition for a while now and 20
 

00:07:43.120 --> 00:07:45.840 align:start position:0%
competition for a while now and 20
gigaflops<00:07:43.960><c> before</c><00:07:44.440><c> required</c><00:07:45.040><c> many</c><00:07:45.370><c> millions</c>

00:07:45.840 --> 00:07:45.850 align:start position:0%
gigaflops before required many millions
 

00:07:45.850 --> 00:07:49.770 align:start position:0%
gigaflops before required many millions
of<00:07:46.000><c> dollars</c><00:07:46.680><c> to</c><00:07:47.680><c> achieve</c><00:07:48.010><c> but</c><00:07:48.430><c> 20</c><00:07:48.940><c> GB</c><00:07:49.120><c> 23</c>

00:07:49.770 --> 00:07:49.780 align:start position:0%
of dollars to achieve but 20 GB 23
 

00:07:49.780 --> 00:07:51.990 align:start position:0%
of dollars to achieve but 20 GB 23
gigaflops<00:07:50.230><c> is</c><00:07:50.440><c> just</c><00:07:50.710><c> the</c><00:07:50.800><c> pittance</c><00:07:51.070><c> now</c><00:07:51.280><c> he</c>

00:07:51.990 --> 00:07:52.000 align:start position:0%
gigaflops is just the pittance now he
 

00:07:52.000 --> 00:07:54.900 align:start position:0%
gigaflops is just the pittance now he
can<00:07:52.150><c> buy</c><00:07:52.330><c> yourself</c><00:07:52.720><c> a</c><00:07:52.870><c> PowerPC</c><00:07:53.710><c> at</c><00:07:54.100><c> 2.5</c>

00:07:54.900 --> 00:07:54.910 align:start position:0%
can buy yourself a PowerPC at 2.5
 

00:07:54.910 --> 00:07:58.350 align:start position:0%
can buy yourself a PowerPC at 2.5
gigahertz<00:07:55.240><c> and</c><00:07:55.510><c> get</c><00:07:55.690><c> that</c><00:07:57.180><c> VDS</c><00:07:58.180><c> pea</c>

00:07:58.350 --> 00:07:58.360 align:start position:0%
gigahertz and get that VDS pea
 

00:07:58.360 --> 00:08:00.930 align:start position:0%
gigahertz and get that VDS pea
performance<00:07:58.870><c> our</c><00:07:59.140><c> FFT</c><00:07:59.740><c> we</c><00:07:59.980><c> have</c><00:08:00.220><c> we</c><00:08:00.550><c> continued</c>

00:08:00.930 --> 00:08:00.940 align:start position:0%
performance our FFT we have we continued
 

00:08:00.940 --> 00:08:03.780 align:start position:0%
performance our FFT we have we continued
having<00:08:01.120><c> a</c><00:08:01.450><c> stellar</c><00:08:01.860><c> collection</c><00:08:02.860><c> of</c><00:08:02.980><c> FFTs</c><00:08:03.520><c> for</c>

00:08:03.780 --> 00:08:03.790 align:start position:0%
having a stellar collection of FFTs for
 

00:08:03.790 --> 00:08:05.970 align:start position:0%
having a stellar collection of FFTs for
our<00:08:03.880><c> users</c><00:08:04.270><c> to</c><00:08:04.300><c> use</c><00:08:04.690><c> single</c><00:08:05.680><c> and</c><00:08:05.770><c> double</c>

00:08:05.970 --> 00:08:05.980 align:start position:0%
our users to use single and double
 

00:08:05.980 --> 00:08:10.320 align:start position:0%
our users to use single and double
precision<00:08:06.070><c> real</c><00:08:06.970><c> and</c><00:08:07.330><c> complex</c><00:08:07.710><c> 1d</c><00:08:08.710><c> and</c><00:08:08.740><c> 2d</c><00:08:09.330><c> in</c>

00:08:10.320 --> 00:08:10.330 align:start position:0%
precision real and complex 1d and 2d in
 

00:08:10.330 --> 00:08:12.440 align:start position:0%
precision real and complex 1d and 2d in
place<00:08:10.660><c> and</c><00:08:10.900><c> out</c><00:08:11.020><c> of</c><00:08:11.170><c> place</c><00:08:11.380><c> basically</c><00:08:12.010><c> and</c>

00:08:12.440 --> 00:08:12.450 align:start position:0%
place and out of place basically and
 

00:08:12.450 --> 00:08:16.200 align:start position:0%
place and out of place basically and
radix<00:08:13.450><c> 2</c><00:08:13.720><c> 3</c><00:08:14.170><c> &amp;</c><00:08:14.380><c> 5</c><00:08:14.620><c> we</c><00:08:15.370><c> have</c><00:08:15.520><c> them</c><00:08:15.640><c> hand</c><00:08:15.880><c> tuned</c>

00:08:16.200 --> 00:08:16.210 align:start position:0%
radix 2 3 &amp; 5 we have them hand tuned
 

00:08:16.210 --> 00:08:18.270 align:start position:0%
radix 2 3 &amp; 5 we have them hand tuned
for<00:08:16.540><c> the</c><00:08:16.630><c> vector</c><00:08:16.930><c> engine</c><00:08:17.320><c> and</c><00:08:17.530><c> we</c><00:08:17.770><c> also</c><00:08:17.950><c> have</c>

00:08:18.270 --> 00:08:18.280 align:start position:0%
for the vector engine and we also have
 

00:08:18.280 --> 00:08:20.580 align:start position:0%
for the vector engine and we also have
have<00:08:18.760><c> a</c><00:08:18.790><c> tan</c><00:08:19.240><c> tuned</c><00:08:19.510><c> for</c><00:08:19.660><c> the</c><00:08:19.720><c> dual</c><00:08:19.870><c> scaler</c><00:08:20.410><c> I</c>

00:08:20.580 --> 00:08:20.590 align:start position:0%
have a tan tuned for the dual scaler I
 

00:08:20.590 --> 00:08:24.450 align:start position:0%
have a tan tuned for the dual scaler I
have<00:08:21.250><c> them</c><00:08:21.550><c> for</c><00:08:22.350><c> I'm</c><00:08:23.350><c> comparing</c><00:08:24.040><c> them</c><00:08:24.280><c> with</c><00:08:24.310><c> a</c>

00:08:24.450 --> 00:08:24.460 align:start position:0%
have them for I'm comparing them with a
 

00:08:24.460 --> 00:08:27.990 align:start position:0%
have them for I'm comparing them with a
3.2<00:08:25.200><c> gigahertz</c><00:08:26.200><c> Zeon's</c><00:08:26.740><c> this</c><00:08:27.490><c> time</c><00:08:27.760><c> around</c>

00:08:27.990 --> 00:08:28.000 align:start position:0%
3.2 gigahertz Zeon's this time around
 

00:08:28.000 --> 00:08:29.490 align:start position:0%
3.2 gigahertz Zeon's this time around
we're<00:08:28.240><c> not</c><00:08:28.270><c> looking</c><00:08:28.630><c> at</c><00:08:28.780><c> the</c><00:08:28.870><c> gigaflops</c><00:08:29.320><c> were</c>

00:08:29.490 --> 00:08:29.500 align:start position:0%
we're not looking at the gigaflops were
 

00:08:29.500 --> 00:08:31.620 align:start position:0%
we're not looking at the gigaflops were
looking<00:08:29.770><c> at</c><00:08:29.890><c> timing</c><00:08:30.490><c> real</c><00:08:30.850><c> microseconds</c>

00:08:31.620 --> 00:08:31.630 align:start position:0%
looking at timing real microseconds
 

00:08:31.630 --> 00:08:33.450 align:start position:0%
looking at timing real microseconds
because<00:08:31.900><c> signal</c><00:08:32.200><c> processors</c><00:08:32.680><c> really</c><00:08:32.980><c> don't</c>

00:08:33.450 --> 00:08:33.460 align:start position:0%
because signal processors really don't
 

00:08:33.460 --> 00:08:35.520 align:start position:0%
because signal processors really don't
care<00:08:33.700><c> very</c><00:08:34.000><c> much</c><00:08:34.090><c> about</c><00:08:34.240><c> what</c><00:08:34.690><c> the</c><00:08:35.290><c> throughput</c>

00:08:35.520 --> 00:08:35.530 align:start position:0%
care very much about what the throughput
 

00:08:35.530 --> 00:08:38.130 align:start position:0%
care very much about what the throughput
a<00:08:35.680><c> floating-point</c><00:08:36.070><c> is</c><00:08:36.400><c> they</c><00:08:36.550><c> like</c><00:08:37.030><c> to</c><00:08:37.140><c> because</c>

00:08:38.130 --> 00:08:38.140 align:start position:0%
a floating-point is they like to because
 

00:08:38.140 --> 00:08:39.480 align:start position:0%
a floating-point is they like to because
they're<00:08:38.320><c> real</c><00:08:38.440><c> time</c><00:08:38.710><c> folks</c><00:08:39.010><c> they</c><00:08:39.160><c> like</c><00:08:39.340><c> to</c>

00:08:39.480 --> 00:08:39.490 align:start position:0%
they're real time folks they like to
 

00:08:39.490 --> 00:08:42.000 align:start position:0%
they're real time folks they like to
find<00:08:39.670><c> out</c><00:08:39.820><c> exactly</c><00:08:39.970><c> what</c><00:08:40.480><c> timing</c><00:08:40.930><c> is</c><00:08:41.140><c> on</c><00:08:41.440><c> that</c>

00:08:42.000 --> 00:08:42.010 align:start position:0%
find out exactly what timing is on that
 

00:08:42.010 --> 00:08:44.340 align:start position:0%
find out exactly what timing is on that
single<00:08:42.640><c> precision</c><00:08:42.880><c> 1024</c><00:08:43.630><c> complex</c><00:08:44.080><c> which</c><00:08:44.200><c> is</c>

00:08:44.340 --> 00:08:44.350 align:start position:0%
single precision 1024 complex which is
 

00:08:44.350 --> 00:08:48.810 align:start position:0%
single precision 1024 complex which is
always<00:08:44.500><c> edged</c><00:08:44.830><c> into</c><00:08:45.070><c> my</c><00:08:45.310><c> mind</c><00:08:45.640><c> is</c><00:08:46.650><c> 4.5</c><00:08:47.650><c> 6</c><00:08:47.950><c> micro</c>

00:08:48.810 --> 00:08:48.820 align:start position:0%
always edged into my mind is 4.5 6 micro
 

00:08:48.820 --> 00:08:52.230 align:start position:0%
always edged into my mind is 4.5 6 micro
seconds<00:08:49.240><c> versus</c><00:08:49.960><c> 6.13</c><00:08:50.860><c> on</c><00:08:51.190><c> a</c><00:08:51.250><c> 3.2</c><00:08:51.940><c> gigahertz</c>

00:08:52.230 --> 00:08:52.240 align:start position:0%
seconds versus 6.13 on a 3.2 gigahertz
 

00:08:52.240 --> 00:08:54.390 align:start position:0%
seconds versus 6.13 on a 3.2 gigahertz
Xeon<00:08:52.720><c> and</c><00:08:52.750><c> these</c><00:08:52.990><c> are</c><00:08:53.140><c> one</c><00:08:53.320><c> processor</c><00:08:53.860><c> only</c>

00:08:54.390 --> 00:08:54.400 align:start position:0%
Xeon and these are one processor only
 

00:08:54.400 --> 00:08:56.820 align:start position:0%
Xeon and these are one processor only
because<00:08:54.610><c> the</c><00:08:54.760><c> floating-point</c><00:08:55.170><c> the</c><00:08:56.170><c> FFT</c><00:08:56.740><c> in</c>

00:08:56.820 --> 00:08:56.830 align:start position:0%
because the floating-point the FFT in
 

00:08:56.830 --> 00:08:58.260 align:start position:0%
because the floating-point the FFT in
floating-point<00:08:57.370><c> is</c><00:08:57.430><c> doesn't</c><00:08:57.670><c> do</c><00:08:57.910><c> that</c><00:08:58.060><c> much</c>

00:08:58.260 --> 00:08:58.270 align:start position:0%
floating-point is doesn't do that much
 

00:08:58.270 --> 00:09:01.830 align:start position:0%
floating-point is doesn't do that much
work<00:08:58.510><c> to</c><00:08:58.800><c> dole</c><00:08:59.800><c> it</c><00:08:59.950><c> out</c><00:09:00.070><c> to</c><00:09:00.340><c> processors</c><00:09:00.970><c> single</c>

00:09:01.830 --> 00:09:01.840 align:start position:0%
work to dole it out to processors single
 

00:09:01.840 --> 00:09:05.730 align:start position:0%
work to dole it out to processors single
precision<00:09:02.050><c> 1024</c><00:09:02.770><c> real</c><00:09:02.980><c> is</c><00:09:03.340><c> 2.3</c><00:09:04.740><c> microseconds</c>

00:09:05.730 --> 00:09:05.740 align:start position:0%
precision 1024 real is 2.3 microseconds
 

00:09:05.740 --> 00:09:07.590 align:start position:0%
precision 1024 real is 2.3 microseconds
versus<00:09:06.070><c> four</c><00:09:06.250><c> point</c><00:09:06.460><c> two</c><00:09:06.580><c> seven</c><00:09:06.790><c> microseconds</c>

00:09:07.590 --> 00:09:07.600 align:start position:0%
versus four point two seven microseconds
 

00:09:07.600 --> 00:09:09.750 align:start position:0%
versus four point two seven microseconds
so<00:09:08.170><c> you</c><00:09:08.860><c> would</c><00:09:08.980><c> think</c><00:09:09.010><c> this</c><00:09:09.220><c> is</c><00:09:09.370><c> fast</c><00:09:09.580><c> enough</c>

00:09:09.750 --> 00:09:09.760 align:start position:0%
so you would think this is fast enough
 

00:09:09.760 --> 00:09:11.070 align:start position:0%
so you would think this is fast enough
why<00:09:09.970><c> would</c><00:09:10.180><c> you</c><00:09:10.300><c> like</c><00:09:10.480><c> to</c><00:09:10.600><c> make</c><00:09:10.750><c> this</c><00:09:10.900><c> any</c>

00:09:11.070 --> 00:09:11.080 align:start position:0%
why would you like to make this any
 

00:09:11.080 --> 00:09:12.960 align:start position:0%
why would you like to make this any
faster<00:09:11.590><c> just</c><00:09:12.190><c> one</c><00:09:12.340><c> example</c><00:09:12.490><c> the</c>

00:09:12.960 --> 00:09:12.970 align:start position:0%
faster just one example the
 

00:09:12.970 --> 00:09:14.370 align:start position:0%
faster just one example the
quintessential<00:09:13.450><c> example</c><00:09:13.990><c> that</c><00:09:14.110><c> I</c><00:09:14.170><c> like</c><00:09:14.200><c> to</c>

00:09:14.370 --> 00:09:14.380 align:start position:0%
quintessential example that I like to
 

00:09:14.380 --> 00:09:17.790 align:start position:0%
quintessential example that I like to
give<00:09:14.650><c> always</c><00:09:15.040><c> is</c><00:09:15.310><c> iTunes</c><00:09:16.300><c> itunes</c><00:09:16.900><c> use</c><00:09:17.500><c> as</c><00:09:17.680><c> our</c>

00:09:17.790 --> 00:09:17.800 align:start position:0%
give always is iTunes itunes use as our
 

00:09:17.800 --> 00:09:21.420 align:start position:0%
give always is iTunes itunes use as our
FFT<00:09:18.400><c> at</c><00:09:18.910><c> a</c><00:09:18.970><c> tune</c><00:09:19.300><c> of</c><00:09:19.420><c> 1.2</c><00:09:19.660><c> million</c><00:09:20.620><c> times</c><00:09:21.130><c> per</c>

00:09:21.420 --> 00:09:21.430 align:start position:0%
FFT at a tune of 1.2 million times per
 

00:09:21.430 --> 00:09:24.360 align:start position:0%
FFT at a tune of 1.2 million times per
hour<00:09:21.670><c> for</c><00:09:22.270><c> your</c><00:09:22.390><c> music</c><00:09:22.810><c> it's</c><00:09:23.440><c> that</c><00:09:23.680><c> real</c><00:09:23.890><c> FFT</c>

00:09:24.360 --> 00:09:24.370 align:start position:0%
hour for your music it's that real FFT
 

00:09:24.370 --> 00:09:26.220 align:start position:0%
hour for your music it's that real FFT
get<00:09:24.550><c> that</c><00:09:24.790><c> gets</c><00:09:24.970><c> used</c><00:09:25.210><c> the</c><00:09:25.420><c> more</c><00:09:25.600><c> we</c><00:09:25.780><c> shave</c><00:09:26.020><c> off</c>

00:09:26.220 --> 00:09:26.230 align:start position:0%
get that gets used the more we shave off
 

00:09:26.230 --> 00:09:29.310 align:start position:0%
get that gets used the more we shave off
of<00:09:26.440><c> that</c><00:09:26.650><c> the</c><00:09:27.640><c> faster</c><00:09:28.180><c> your</c><00:09:28.390><c> decoding</c><00:09:29.170><c> and</c>

00:09:29.310 --> 00:09:29.320 align:start position:0%
of that the faster your decoding and
 

00:09:29.320 --> 00:09:32.430 align:start position:0%
of that the faster your decoding and
encoding<00:09:29.410><c> will</c><00:09:29.980><c> go</c><00:09:30.190><c> and</c><00:09:30.840><c> the</c><00:09:31.840><c> more</c><00:09:32.050><c> we</c><00:09:32.230><c> shave</c>

00:09:32.430 --> 00:09:32.440 align:start position:0%
encoding will go and the more we shave
 

00:09:32.440 --> 00:09:34.950 align:start position:0%
encoding will go and the more we shave
off<00:09:32.620><c> of</c><00:09:32.970><c> computational</c><00:09:33.970><c> things</c><00:09:34.240><c> like</c><00:09:34.420><c> FFTs</c>

00:09:34.950 --> 00:09:34.960 align:start position:0%
off of computational things like FFTs
 

00:09:34.960 --> 00:09:37.920 align:start position:0%
off of computational things like FFTs
and<00:09:35.170><c> imdct</c><00:09:35.680><c> s</c><00:09:36.070><c> the</c><00:09:37.030><c> better</c><00:09:37.210><c> your</c><00:09:37.360><c> battery</c><00:09:37.690><c> life</c>

00:09:37.920 --> 00:09:37.930 align:start position:0%
and imdct s the better your battery life
 

00:09:37.930 --> 00:09:39.750 align:start position:0%
and imdct s the better your battery life
will<00:09:38.170><c> be</c><00:09:38.320><c> so</c><00:09:38.500><c> this</c><00:09:38.620><c> is</c><00:09:38.800><c> pretty</c><00:09:38.950><c> darn</c><00:09:39.220><c> important</c>

00:09:39.750 --> 00:09:39.760 align:start position:0%
will be so this is pretty darn important
 

00:09:39.760 --> 00:09:42.870 align:start position:0%
will be so this is pretty darn important
to<00:09:40.600><c> make</c><00:09:41.290><c> sure</c><00:09:41.560><c> that</c><00:09:41.680><c> always</c><00:09:42.130><c> runs</c><00:09:42.310><c> extremely</c>

00:09:42.870 --> 00:09:42.880 align:start position:0%
to make sure that always runs extremely
 

00:09:42.880 --> 00:09:47.370 align:start position:0%
to make sure that always runs extremely
fast<00:09:44.010><c> image</c><00:09:45.010><c> processing</c><00:09:45.570><c> library</c><00:09:46.570><c> I'm</c><00:09:46.840><c> very</c>

00:09:47.370 --> 00:09:47.380 align:start position:0%
fast image processing library I'm very
 

00:09:47.380 --> 00:09:48.960 align:start position:0%
fast image processing library I'm very
very<00:09:47.650><c> proud</c><00:09:47.860><c> of</c><00:09:47.920><c> this</c><00:09:48.190><c> particular</c><00:09:48.520><c> set</c><00:09:48.940><c> of</c>

00:09:48.960 --> 00:09:48.970 align:start position:0%
very proud of this particular set of
 

00:09:48.970 --> 00:09:51.780 align:start position:0%
very proud of this particular set of
work<00:09:49.210><c> we</c><00:09:49.420><c> set</c><00:09:49.990><c> out</c><00:09:50.140><c> and</c><00:09:50.530><c> worked</c><00:09:51.220><c> on</c><00:09:51.370><c> this</c><00:09:51.520><c> for</c><00:09:51.730><c> a</c>

00:09:51.780 --> 00:09:51.790 align:start position:0%
work we set out and worked on this for a
 

00:09:51.790 --> 00:09:53.400 align:start position:0%
work we set out and worked on this for a
year<00:09:51.850><c> on</c><00:09:52.120><c> Panther</c><00:09:52.600><c> and</c><00:09:52.720><c> delivered</c><00:09:53.110><c> it</c><00:09:53.260><c> and</c>

00:09:53.400 --> 00:09:53.410 align:start position:0%
year on Panther and delivered it and
 

00:09:53.410 --> 00:09:58.320 align:start position:0%
year on Panther and delivered it and
it's<00:09:54.100><c> used</c><00:09:54.490><c> in</c><00:09:55.180><c> a</c><00:09:55.570><c> lot</c><00:09:55.600><c> of</c><00:09:55.870><c> applications</c><00:09:57.330><c> that</c>

00:09:58.320 --> 00:09:58.330 align:start position:0%
it's used in a lot of applications that
 

00:09:58.330 --> 00:10:02.430 align:start position:0%
it's used in a lot of applications that
we<00:09:58.570><c> have</c><00:09:58.600><c> in-house</c><00:09:59.260><c> and</c><00:10:00.120><c> outside</c><00:10:01.120><c> I</c><00:10:01.480><c> just</c><00:10:02.260><c> have</c>

00:10:02.430 --> 00:10:02.440 align:start position:0%
we have in-house and outside I just have
 

00:10:02.440 --> 00:10:04.770 align:start position:0%
we have in-house and outside I just have
a<00:10:03.280><c> couple</c><00:10:03.640><c> of</c><00:10:03.880><c> little</c><00:10:04.000><c> things</c><00:10:04.120><c> in</c><00:10:04.480><c> here</c><00:10:04.630><c> we</c>

00:10:04.770 --> 00:10:04.780 align:start position:0%
a couple of little things in here we
 

00:10:04.780 --> 00:10:06.900 align:start position:0%
a couple of little things in here we
have<00:10:04.930><c> planar</c><00:10:05.290><c> and</c><00:10:05.650><c> chunky</c><00:10:06.220><c> kind</c><00:10:06.580><c> of</c><00:10:06.640><c> a</c><00:10:06.730><c> funny</c>

00:10:06.900 --> 00:10:06.910 align:start position:0%
have planar and chunky kind of a funny
 

00:10:06.910 --> 00:10:07.380 align:start position:0%
have planar and chunky kind of a funny
word

00:10:07.380 --> 00:10:07.390 align:start position:0%
word
 

00:10:07.390 --> 00:10:10.230 align:start position:0%
word
they<00:10:07.930><c> RGB</c><00:10:08.500><c> intra</c><00:10:08.830><c> interleaved</c><00:10:09.700><c> formats</c>

00:10:10.230 --> 00:10:10.240 align:start position:0%
they RGB intra interleaved formats
 

00:10:10.240 --> 00:10:11.790 align:start position:0%
they RGB intra interleaved formats
native<00:10:10.780><c> support</c><00:10:10.930><c> for</c><00:10:11.170><c> 8-bit</c><00:10:11.680><c> and</c>

00:10:11.790 --> 00:10:11.800 align:start position:0%
native support for 8-bit and
 

00:10:11.800 --> 00:10:14.040 align:start position:0%
native support for 8-bit and
floating-point<00:10:12.130><c> samples</c><00:10:12.820><c> can</c><00:10:13.570><c> be</c><00:10:13.600><c> used</c><00:10:13.900><c> in</c>

00:10:14.040 --> 00:10:14.050 align:start position:0%
floating-point samples can be used in
 

00:10:14.050 --> 00:10:16.860 align:start position:0%
floating-point samples can be used in
real<00:10:14.260><c> time</c><00:10:14.590><c> it's</c><00:10:15.250><c> multi-threaded</c><00:10:16.060><c> for</c><00:10:16.300><c> so</c>

00:10:16.860 --> 00:10:16.870 align:start position:0%
real time it's multi-threaded for so
 

00:10:16.870 --> 00:10:18.810 align:start position:0%
real time it's multi-threaded for so
they<00:10:16.960><c> have</c><00:10:17.080><c> large</c><00:10:17.350><c> images</c><00:10:17.740><c> you</c><00:10:17.860><c> can</c><00:10:17.980><c> do</c><00:10:18.550><c> better</c>

00:10:18.810 --> 00:10:18.820 align:start position:0%
they have large images you can do better
 

00:10:18.820 --> 00:10:21.300 align:start position:0%
they have large images you can do better
I<00:10:19.690><c> have</c><00:10:20.110><c> a</c><00:10:20.140><c> small</c><00:10:20.650><c> table</c><00:10:21.070><c> here</c><00:10:21.280><c> for</c>

00:10:21.300 --> 00:10:21.310 align:start position:0%
I have a small table here for
 

00:10:21.310 --> 00:10:23.910 align:start position:0%
I have a small table here for
performance<00:10:22.180><c> and</c><00:10:22.360><c> what</c><00:10:23.140><c> we</c><00:10:23.230><c> have</c><00:10:23.410><c> is</c><00:10:23.710><c> a</c>

00:10:23.910 --> 00:10:23.920 align:start position:0%
performance and what we have is a
 

00:10:23.920 --> 00:10:26.130 align:start position:0%
performance and what we have is a
gigabyte<00:10:24.220><c> image</c><00:10:24.700><c> blurring</c><00:10:25.030><c> I'm</c><00:10:25.360><c> comparing</c>

00:10:26.130 --> 00:10:26.140 align:start position:0%
gigabyte image blurring I'm comparing
 

00:10:26.140 --> 00:10:29.120 align:start position:0%
gigabyte image blurring I'm comparing
that<00:10:26.470><c> to</c><00:10:26.740><c> the</c><00:10:27.150><c> IPP</c><00:10:28.150><c> which</c><00:10:28.330><c> is</c><00:10:28.450><c> the</c><00:10:28.570><c> Intel</c>

00:10:29.120 --> 00:10:29.130 align:start position:0%
that to the IPP which is the Intel
 

00:10:29.130 --> 00:10:31.020 align:start position:0%
that to the IPP which is the Intel
integrated<00:10:30.130><c> performance</c><00:10:30.400><c> primitives</c><00:10:30.760><c> that</c>

00:10:31.020 --> 00:10:31.030 align:start position:0%
integrated performance primitives that
 

00:10:31.030 --> 00:10:33.720 align:start position:0%
integrated performance primitives that
some<00:10:31.270><c> of</c><00:10:31.360><c> you</c><00:10:31.450><c> might</c><00:10:31.690><c> be</c><00:10:31.840><c> familiar</c><00:10:32.320><c> with</c><00:10:32.740><c> the</c>

00:10:33.720 --> 00:10:33.730 align:start position:0%
some of you might be familiar with the
 

00:10:33.730 --> 00:10:36.510 align:start position:0%
some of you might be familiar with the
eight<00:10:33.880><c> gigabytes</c><00:10:34.500><c> image</c><00:10:35.500><c> blur</c><00:10:35.800><c> is</c><00:10:36.070><c> five</c><00:10:36.310><c> and</c><00:10:36.460><c> a</c>

00:10:36.510 --> 00:10:36.520 align:start position:0%
eight gigabytes image blur is five and a
 

00:10:36.520 --> 00:10:38.640 align:start position:0%
eight gigabytes image blur is five and a
half<00:10:36.580><c> times</c><00:10:37.000><c> faster</c><00:10:37.540><c> the</c><00:10:37.720><c> eggy</c><00:10:37.990><c> gigabyte</c>

00:10:38.640 --> 00:10:38.650 align:start position:0%
half times faster the eggy gigabyte
 

00:10:38.650 --> 00:10:43.370 align:start position:0%
half times faster the eggy gigabyte
image<00:10:39.040><c> emboss</c><00:10:39.580><c> is</c><00:10:39.910><c> 2.2</c><00:10:40.570><c> times</c><00:10:40.780><c> faster</c>

00:10:43.370 --> 00:10:43.380 align:start position:0%
image emboss is 2.2 times faster
 

00:10:43.380 --> 00:10:45.930 align:start position:0%
image emboss is 2.2 times faster
delivered<00:10:44.380><c> in</c><00:10:44.530><c> Mac</c><00:10:44.710><c> OS</c><00:10:45.010><c> then</c><00:10:45.250><c> also</c><00:10:45.490><c> let's</c><00:10:45.880><c> not</c>

00:10:45.930 --> 00:10:45.940 align:start position:0%
delivered in Mac OS then also let's not
 

00:10:45.940 --> 00:10:48.300 align:start position:0%
delivered in Mac OS then also let's not
forget<00:10:46.060><c> the</c><00:10:46.600><c> underpinnings</c><00:10:47.170><c> of</c><00:10:47.320><c> again</c><00:10:48.070><c> a</c>

00:10:48.300 --> 00:10:48.310 align:start position:0%
forget the underpinnings of again a
 

00:10:48.310 --> 00:10:51.360 align:start position:0%
forget the underpinnings of again a
regular<00:10:48.880><c> computation</c><00:10:49.600><c> a</c><00:10:49.810><c> Lib</c><00:10:50.260><c> M</c><00:10:50.440><c> we</c><00:10:51.160><c> are</c>

00:10:51.360 --> 00:10:51.370 align:start position:0%
regular computation a Lib M we are
 

00:10:51.370 --> 00:10:54.390 align:start position:0%
regular computation a Lib M we are
standards<00:10:51.940><c> conforming</c><00:10:52.540><c> AP</c><00:10:53.050><c> is</c><00:10:53.200><c> for</c><00:10:53.680><c> I</c><00:10:53.920><c> Triple</c>

00:10:54.390 --> 00:10:54.400 align:start position:0%
standards conforming AP is for I Triple
 

00:10:54.400 --> 00:10:57.990 align:start position:0%
standards conforming AP is for I Triple
E<00:10:54.460><c> 754</c><00:10:54.820><c> and</c><00:10:55.360><c> c99</c><00:10:56.010><c> single</c><00:10:57.010><c> and</c><00:10:57.160><c> double</c><00:10:57.430><c> knowing</c>

00:10:57.990 --> 00:10:58.000 align:start position:0%
E 754 and c99 single and double knowing
 

00:10:58.000 --> 00:11:02.220 align:start position:0%
E 754 and c99 single and double knowing
Tiger<00:10:58.420><c> is</c><00:10:58.690><c> our</c><00:10:59.220><c> long-lost</c><00:11:00.300><c> 128</c><00:11:01.300><c> bits</c><00:11:01.570><c> long</c>

00:11:02.220 --> 00:11:02.230 align:start position:0%
Tiger is our long-lost 128 bits long
 

00:11:02.230 --> 00:11:04.110 align:start position:0%
Tiger is our long-lost 128 bits long
double<00:11:02.590><c> friend</c><00:11:02.890><c> which</c><00:11:03.070><c> is</c><00:11:03.100><c> going</c><00:11:03.460><c> to</c><00:11:03.550><c> make</c><00:11:03.970><c> an</c>

00:11:04.110 --> 00:11:04.120 align:start position:0%
double friend which is going to make an
 

00:11:04.120 --> 00:11:07.540 align:start position:0%
double friend which is going to make an
appearance<00:11:04.420><c> again</c><00:11:04.810><c> and</c><00:11:05.790><c> we</c><00:11:06.790><c> have</c>

00:11:07.540 --> 00:11:07.550 align:start position:0%
appearance again and we have
 

00:11:07.550 --> 00:11:09.610 align:start position:0%
appearance again and we have
really<00:11:07.970><c> stellar</c><00:11:08.420><c> implementation</c><00:11:09.290><c> for</c><00:11:09.470><c> that</c>

00:11:09.610 --> 00:11:09.620 align:start position:0%
really stellar implementation for that
 

00:11:09.620 --> 00:11:13.210 align:start position:0%
really stellar implementation for that
very<00:11:10.040><c> very</c><00:11:10.310><c> accurate</c><00:11:11.089><c> computationally</c><00:11:12.220><c> all</c>

00:11:13.210 --> 00:11:13.220 align:start position:0%
very very accurate computationally all
 

00:11:13.220 --> 00:11:14.920 align:start position:0%
very very accurate computationally all
of<00:11:13.459><c> these</c><00:11:13.610><c> guys</c><00:11:13.790><c> are</c><00:11:13.850><c> numerically</c><00:11:14.480><c> robust</c>

00:11:14.920 --> 00:11:14.930 align:start position:0%
of these guys are numerically robust
 

00:11:14.930 --> 00:11:17.079 align:start position:0%
of these guys are numerically robust
highly<00:11:15.440><c> accurate</c><00:11:15.620><c> worried</c><00:11:16.430><c> about</c><00:11:16.790><c> the</c>

00:11:17.079 --> 00:11:17.089 align:start position:0%
highly accurate worried about the
 

00:11:17.089 --> 00:11:19.509 align:start position:0%
highly accurate worried about the
environmental<00:11:17.570><c> controls</c><00:11:18.230><c> and</c><00:11:18.649><c> never</c><00:11:19.100><c> mess</c><00:11:19.370><c> up</c>

00:11:19.509 --> 00:11:19.519 align:start position:0%
environmental controls and never mess up
 

00:11:19.519 --> 00:11:24.400 align:start position:0%
environmental controls and never mess up
anything<00:11:19.790><c> and</c><00:11:20.149><c> we</c><00:11:20.570><c> take</c><00:11:21.170><c> any</c><00:11:21.820><c> any</c><00:11:23.200><c> we</c><00:11:24.200><c> take</c><00:11:24.380><c> a</c>

00:11:24.400 --> 00:11:24.410 align:start position:0%
anything and we take any any we take a
 

00:11:24.410 --> 00:11:26.769 align:start position:0%
anything and we take any any we take a
lot<00:11:24.680><c> of</c><00:11:24.709><c> care</c><00:11:25.010><c> to</c><00:11:25.040><c> make</c><00:11:25.339><c> sure</c><00:11:25.370><c> that</c><00:11:25.790><c> we</c><00:11:26.360><c> conform</c>

00:11:26.769 --> 00:11:26.779 align:start position:0%
lot of care to make sure that we conform
 

00:11:26.779 --> 00:11:28.660 align:start position:0%
lot of care to make sure that we conform
to<00:11:26.899><c> all</c><00:11:27.019><c> of</c><00:11:27.170><c> the</c><00:11:27.380><c> any</c><00:11:27.920><c> existing</c><00:11:28.370><c> is</c><00:11:28.490><c> the</c>

00:11:28.660 --> 00:11:28.670 align:start position:0%
to all of the any existing is the
 

00:11:28.670 --> 00:11:30.850 align:start position:0%
to all of the any existing is the
standards<00:11:29.170><c> best-of-breed</c><00:11:30.170><c> algorithms</c>

00:11:30.850 --> 00:11:30.860 align:start position:0%
standards best-of-breed algorithms
 

00:11:30.860 --> 00:11:33.790 align:start position:0%
standards best-of-breed algorithms
basically<00:11:31.839><c> coding</c><00:11:32.839><c> to</c><00:11:32.959><c> Alabam</c><00:11:33.290><c> in</c><00:11:33.500><c> c</c>

00:11:33.790 --> 00:11:33.800 align:start position:0%
basically coding to Alabam in c
 

00:11:33.800 --> 00:11:37.870 align:start position:0%
basically coding to Alabam in c
straightforward<00:11:34.760><c> it's</c><00:11:35.000><c> some</c><00:11:35.390><c> you</c><00:11:35.870><c> just</c><00:11:36.880><c> call</c>

00:11:37.870 --> 00:11:37.880 align:start position:0%
straightforward it's some you just call
 

00:11:37.880 --> 00:11:41.069 align:start position:0%
straightforward it's some you just call
the<00:11:38.089><c> compiler</c><00:11:38.630><c> you</c><00:11:38.660><c> don't</c><00:11:39.050><c> have</c><00:11:39.170><c> to</c><00:11:39.320><c> say</c><00:11:39.529><c> -</c><00:11:40.190><c> LM</c>

00:11:41.069 --> 00:11:41.079 align:start position:0%
the compiler you don't have to say - LM
 

00:11:41.079 --> 00:11:44.889 align:start position:0%
the compiler you don't have to say - LM
on<00:11:42.079><c> that</c><00:11:42.470><c> using</c><00:11:43.339><c> the</c><00:11:43.579><c> accelerator</c><00:11:44.089><c> framework</c>

00:11:44.889 --> 00:11:44.899 align:start position:0%
on that using the accelerator framework
 

00:11:44.899 --> 00:11:47.980 align:start position:0%
on that using the accelerator framework
in<00:11:45.560><c> C</c><00:11:46.010><c> it's</c><00:11:46.550><c> also</c><00:11:46.700><c> straightforward</c><00:11:47.660><c> all</c><00:11:47.839><c> you</c>

00:11:47.980 --> 00:11:47.990 align:start position:0%
in C it's also straightforward all you
 

00:11:47.990 --> 00:11:50.130 align:start position:0%
in C it's also straightforward all you
need<00:11:48.140><c> to</c><00:11:48.230><c> do</c><00:11:48.350><c> is</c><00:11:48.529><c> just</c><00:11:48.740><c> put</c><00:11:48.890><c> in</c><00:11:48.980><c> -</c><00:11:49.339><c> framework</c>

00:11:50.130 --> 00:11:50.140 align:start position:0%
need to do is just put in - framework
 

00:11:50.140 --> 00:11:52.870 align:start position:0%
need to do is just put in - framework
accelerate<00:11:51.140><c> so</c><00:11:51.680><c> when</c><00:11:51.829><c> I</c><00:11:51.860><c> would</c><00:11:51.950><c> basically</c>

00:11:52.870 --> 00:11:52.880 align:start position:0%
accelerate so when I would basically
 

00:11:52.880 --> 00:11:54.670 align:start position:0%
accelerate so when I would basically
what<00:11:53.029><c> I've</c><00:11:53.120><c> done</c><00:11:53.269><c> here</c><00:11:53.630><c> in</c><00:11:53.810><c> the</c><00:11:53.959><c> last</c><00:11:54.140><c> few</c>

00:11:54.670 --> 00:11:54.680 align:start position:0%
what I've done here in the last few
 

00:11:54.680 --> 00:11:57.970 align:start position:0%
what I've done here in the last few
minutes<00:11:54.829><c> is</c><00:11:55.130><c> to</c><00:11:55.250><c> just</c><00:11:55.459><c> give</c><00:11:55.640><c> you</c><00:11:55.850><c> a</c><00:11:56.980><c> small</c>

00:11:57.970 --> 00:11:57.980 align:start position:0%
minutes is to just give you a small
 

00:11:57.980 --> 00:12:00.310 align:start position:0%
minutes is to just give you a small
sampling<00:11:58.700><c> of</c><00:11:58.970><c> what</c><00:11:59.240><c> we</c><00:11:59.390><c> have</c><00:11:59.660><c> in</c><00:12:00.019><c> the</c><00:12:00.200><c> image</c>

00:12:00.310 --> 00:12:00.320 align:start position:0%
sampling of what we have in the image
 

00:12:00.320 --> 00:12:03.819 align:start position:0%
sampling of what we have in the image
processing<00:12:00.980><c> signal</c><00:12:01.850><c> processing</c><00:12:02.360><c> blahs</c><00:12:02.870><c> the</c>

00:12:03.819 --> 00:12:03.829 align:start position:0%
processing signal processing blahs the
 

00:12:03.829 --> 00:12:06.670 align:start position:0%
processing signal processing blahs the
force<00:12:04.220><c> and</c><00:12:04.640><c> la</c><00:12:05.120><c> pack</c><00:12:05.420><c> and</c><00:12:05.750><c> we're</c><00:12:06.200><c> going</c><00:12:06.410><c> to</c><00:12:06.470><c> go</c>

00:12:06.670 --> 00:12:06.680 align:start position:0%
force and la pack and we're going to go
 

00:12:06.680 --> 00:12:10.690 align:start position:0%
force and la pack and we're going to go
into<00:12:07.010><c> some</c><00:12:07.220><c> of</c><00:12:07.339><c> the</c><00:12:07.430><c> details</c><00:12:07.790><c> of</c><00:12:08.089><c> this</c><00:12:09.459><c> work</c><00:12:10.459><c> as</c>

00:12:10.690 --> 00:12:10.700 align:start position:0%
into some of the details of this work as
 

00:12:10.700 --> 00:12:13.630 align:start position:0%
into some of the details of this work as
we<00:12:10.970><c> go</c><00:12:11.120><c> along</c><00:12:11.209><c> now</c><00:12:11.839><c> I'd</c><00:12:11.930><c> like</c><00:12:12.020><c> to</c><00:12:12.170><c> pass</c><00:12:13.130><c> this</c><00:12:13.430><c> on</c>

00:12:13.630 --> 00:12:13.640 align:start position:0%
we go along now I'd like to pass this on
 

00:12:13.640 --> 00:12:16.510 align:start position:0%
we go along now I'd like to pass this on
to<00:12:13.820><c> my</c><00:12:14.209><c> colleague</c><00:12:14.839><c> Ian</c><00:12:15.470><c> Olman</c><00:12:15.800><c> who</c><00:12:16.220><c> is</c><00:12:16.370><c> going</c>

00:12:16.510 --> 00:12:16.520 align:start position:0%
to my colleague Ian Olman who is going
 

00:12:16.520 --> 00:12:23.460 align:start position:0%
to my colleague Ian Olman who is going
to<00:12:16.700><c> talk</c><00:12:16.880><c> more</c><00:12:16.940><c> about</c><00:12:17.240><c> the</c><00:12:17.660><c> image</c><00:12:17.870><c> processing</c>

00:12:23.460 --> 00:12:23.470 align:start position:0%
 
 

00:12:23.470 --> 00:12:26.790 align:start position:0%
 
all<00:12:24.190><c> right</c><00:12:24.280><c> thank</c><00:12:24.820><c> you</c><00:12:25.410><c> villagers</c><00:12:26.410><c> introduced</c>

00:12:26.790 --> 00:12:26.800 align:start position:0%
all right thank you villagers introduced
 

00:12:26.800 --> 00:12:30.090 align:start position:0%
all right thank you villagers introduced
last<00:12:26.950><c> year</c><00:12:27.270><c> at</c><00:12:28.270><c> WWDC</c><00:12:28.840><c> and</c><00:12:29.230><c> shipped</c><00:12:29.950><c> with</c>

00:12:30.090 --> 00:12:30.100 align:start position:0%
last year at WWDC and shipped with
 

00:12:30.100 --> 00:12:32.730 align:start position:0%
last year at WWDC and shipped with
panther<00:12:30.490><c> and</c><00:12:31.170><c> since</c><00:12:32.170><c> then</c><00:12:32.350><c> we've</c><00:12:32.500><c> gotten</c><00:12:32.710><c> a</c>

00:12:32.730 --> 00:12:32.740 align:start position:0%
panther and since then we've gotten a
 

00:12:32.740 --> 00:12:36.630 align:start position:0%
panther and since then we've gotten a
lot<00:12:32.830><c> of</c><00:12:32.890><c> feedback</c><00:12:33.070><c> on</c><00:12:33.490><c> it</c><00:12:33.640><c> and</c><00:12:35.490><c> we've</c><00:12:36.490><c> taken</c>

00:12:36.630 --> 00:12:36.640 align:start position:0%
lot of feedback on it and we've taken
 

00:12:36.640 --> 00:12:38.940 align:start position:0%
lot of feedback on it and we've taken
your<00:12:36.970><c> suggestions</c><00:12:37.600><c> to</c><00:12:37.690><c> heart</c><00:12:37.780><c> and</c><00:12:38.110><c> so</c><00:12:38.830><c> we've</c>

00:12:38.940 --> 00:12:38.950 align:start position:0%
your suggestions to heart and so we've
 

00:12:38.950 --> 00:12:40.350 align:start position:0%
your suggestions to heart and so we've
got<00:12:39.100><c> more</c><00:12:39.250><c> improvements</c><00:12:39.730><c> for</c><00:12:39.880><c> it</c>

00:12:40.350 --> 00:12:40.360 align:start position:0%
got more improvements for it
 

00:12:40.360 --> 00:12:44.250 align:start position:0%
got more improvements for it
now<00:12:41.100><c> the</c><00:12:42.100><c> image</c><00:12:42.310><c> functionality</c><00:12:43.050><c> remains</c><00:12:44.050><c> much</c>

00:12:44.250 --> 00:12:44.260 align:start position:0%
now the image functionality remains much
 

00:12:44.260 --> 00:12:47.190 align:start position:0%
now the image functionality remains much
as<00:12:45.450><c> introduced</c><00:12:46.450><c> previously</c><00:12:46.840><c> with</c><00:12:46.990><c> some</c><00:12:47.110><c> new</c>

00:12:47.190 --> 00:12:47.200 align:start position:0%
as introduced previously with some new
 

00:12:47.200 --> 00:12:48.750 align:start position:0%
as introduced previously with some new
features<00:12:47.320><c> added</c><00:12:47.740><c> on</c><00:12:47.860><c> we</c><00:12:48.100><c> still</c><00:12:48.370><c> have</c><00:12:48.520><c> native</c>

00:12:48.750 --> 00:12:48.760 align:start position:0%
features added on we still have native
 

00:12:48.760 --> 00:12:49.980 align:start position:0%
features added on we still have native
support<00:12:48.790><c> for</c><00:12:49.120><c> 8-bit</c><00:12:49.390><c> and</c><00:12:49.690><c> floating-point</c>

00:12:49.980 --> 00:12:49.990 align:start position:0%
support for 8-bit and floating-point
 

00:12:49.990 --> 00:12:52.620 align:start position:0%
support for 8-bit and floating-point
samples<00:12:50.950><c> these</c><00:12:51.730><c> can</c><00:12:51.940><c> be</c><00:12:52.030><c> arranged</c><00:12:52.330><c> either</c><00:12:52.510><c> in</c>

00:12:52.620 --> 00:12:52.630 align:start position:0%
samples these can be arranged either in
 

00:12:52.630 --> 00:12:54.030 align:start position:0%
samples these can be arranged either in
a<00:12:52.720><c> planar</c><00:12:52.990><c> which</c><00:12:53.290><c> is</c><00:12:53.410><c> they</c><00:12:53.680><c> all</c><00:12:53.800><c> in</c><00:12:53.920><c> one</c>

00:12:54.030 --> 00:12:54.040 align:start position:0%
a planar which is they all in one
 

00:12:54.040 --> 00:12:57.150 align:start position:0%
a planar which is they all in one
channel<00:12:54.400><c> per</c><00:12:54.540><c> array</c><00:12:55.540><c> or</c><00:12:56.230><c> a</c><00:12:56.260><c> chunky</c><00:12:56.650><c> format</c>

00:12:57.150 --> 00:12:57.160 align:start position:0%
channel per array or a chunky format
 

00:12:57.160 --> 00:12:59.690 align:start position:0%
channel per array or a chunky format
which<00:12:57.400><c> would</c><00:12:57.700><c> merely</c><00:12:58.180><c> use</c><00:12:58.390><c> several</c><00:12:58.600><c> channels</c>

00:12:59.690 --> 00:12:59.700 align:start position:0%
which would merely use several channels
 

00:12:59.700 --> 00:13:03.720 align:start position:0%
which would merely use several channels
if<00:13:00.700><c> you're</c><00:13:00.940><c> doing</c><00:13:01.210><c> 8-bit</c><00:13:02.160><c> work</c><00:13:03.160><c> and</c><00:13:03.370><c> images</c>

00:13:03.720 --> 00:13:03.730 align:start position:0%
if you're doing 8-bit work and images
 

00:13:03.730 --> 00:13:05.820 align:start position:0%
if you're doing 8-bit work and images
then<00:13:04.210><c> we</c><00:13:04.360><c> throw</c><00:13:04.900><c> in</c><00:13:05.020><c> saturated</c><00:13:05.380><c> clipping</c>

00:13:05.820 --> 00:13:05.830 align:start position:0%
then we throw in saturated clipping
 

00:13:05.830 --> 00:13:06.990 align:start position:0%
then we throw in saturated clipping
usually<00:13:06.100><c> the</c><00:13:06.190><c> ends</c><00:13:06.370><c> of</c><00:13:06.460><c> functions</c><00:13:06.760><c> that</c><00:13:06.910><c> can</c>

00:13:06.990 --> 00:13:07.000 align:start position:0%
usually the ends of functions that can
 

00:13:07.000 --> 00:13:09.330 align:start position:0%
usually the ends of functions that can
overflows<00:13:07.510><c> you</c><00:13:07.780><c> don't</c><00:13:07.960><c> get</c><00:13:08.080><c> the</c><00:13:08.350><c> white</c><00:13:09.160><c> goes</c>

00:13:09.330 --> 00:13:09.340 align:start position:0%
overflows you don't get the white goes
 

00:13:09.340 --> 00:13:10.770 align:start position:0%
overflows you don't get the white goes
to<00:13:09.490><c> black</c><00:13:09.640><c> or</c><00:13:09.820><c> black</c><00:13:09.940><c> goes</c><00:13:10.150><c> to</c><00:13:10.330><c> white</c><00:13:10.420><c> problem</c>

00:13:10.770 --> 00:13:10.780 align:start position:0%
to black or black goes to white problem
 

00:13:10.780 --> 00:13:13.500 align:start position:0%
to black or black goes to white problem
we've<00:13:11.770><c> put</c><00:13:11.980><c> in</c><00:13:12.070><c> a</c><00:13:12.160><c> lot</c><00:13:12.310><c> of</c><00:13:12.340><c> effort</c><00:13:13.120><c> rethinking</c>

00:13:13.500 --> 00:13:13.510 align:start position:0%
we've put in a lot of effort rethinking
 

00:13:13.510 --> 00:13:15.090 align:start position:0%
we've put in a lot of effort rethinking
thinking<00:13:14.080><c> the</c><00:13:14.140><c> design</c><00:13:14.500><c> over</c><00:13:14.800><c> to</c><00:13:14.920><c> make</c><00:13:15.070><c> sure</c>

00:13:15.090 --> 00:13:15.100 align:start position:0%
thinking the design over to make sure
 

00:13:15.100 --> 00:13:17.310 align:start position:0%
thinking the design over to make sure
you<00:13:15.370><c> can</c><00:13:15.490><c> use</c><00:13:15.610><c> these</c><00:13:15.760><c> things</c><00:13:16.030><c> real</c><00:13:16.240><c> time</c><00:13:16.540><c> that</c>

00:13:17.310 --> 00:13:17.320 align:start position:0%
you can use these things real time that
 

00:13:17.320 --> 00:13:19.950 align:start position:0%
you can use these things real time that
you<00:13:18.220><c> know</c><00:13:18.340><c> we</c><00:13:18.490><c> don't</c><00:13:18.630><c> arbitrarily</c><00:13:19.630><c> call</c>

00:13:19.950 --> 00:13:19.960 align:start position:0%
you know we don't arbitrarily call
 

00:13:19.960 --> 00:13:21.540 align:start position:0%
you know we don't arbitrarily call
malloc<00:13:20.200><c> you</c><00:13:20.770><c> know</c><00:13:21.010><c> we</c><00:13:21.160><c> give</c><00:13:21.430><c> you</c><00:13:21.490><c> the</c>

00:13:21.540 --> 00:13:21.550 align:start position:0%
malloc you know we give you the
 

00:13:21.550 --> 00:13:22.470 align:start position:0%
malloc you know we give you the
opportunity<00:13:21.910><c> to</c><00:13:21.940><c> provide</c><00:13:22.060><c> us</c><00:13:22.300><c> with</c><00:13:22.330><c> the</c>

00:13:22.470 --> 00:13:22.480 align:start position:0%
opportunity to provide us with the
 

00:13:22.480 --> 00:13:23.910 align:start position:0%
opportunity to provide us with the
temporary<00:13:22.720><c> buffers</c><00:13:23.140><c> you</c><00:13:23.410><c> won't</c><00:13:23.560><c> block</c><00:13:23.740><c> on</c>

00:13:23.910 --> 00:13:23.920 align:start position:0%
temporary buffers you won't block on
 

00:13:23.920 --> 00:13:24.990 align:start position:0%
temporary buffers you won't block on
that<00:13:23.950><c> that</c><00:13:24.190><c> kind</c><00:13:24.370><c> of</c><00:13:24.400><c> things</c>

00:13:24.990 --> 00:13:25.000 align:start position:0%
that that kind of things
 

00:13:25.000 --> 00:13:26.970 align:start position:0%
that that kind of things
we're<00:13:25.570><c> also</c><00:13:25.690><c> reentrant</c><00:13:26.320><c> so</c><00:13:26.500><c> you</c><00:13:26.590><c> can</c><00:13:26.710><c> call</c><00:13:26.860><c> us</c>

00:13:26.970 --> 00:13:26.980 align:start position:0%
we're also reentrant so you can call us
 

00:13:26.980 --> 00:13:29.250 align:start position:0%
we're also reentrant so you can call us
in<00:13:27.070><c> a</c><00:13:27.130><c> multi-threaded</c><00:13:27.460><c> environment</c><00:13:28.050><c> and</c><00:13:29.050><c> of</c>

00:13:29.250 --> 00:13:29.260 align:start position:0%
in a multi-threaded environment and of
 

00:13:29.260 --> 00:13:30.930 align:start position:0%
in a multi-threaded environment and of
course<00:13:29.470><c> it's</c><00:13:29.680><c> high-performance</c><00:13:30.340><c> accelerated</c>

00:13:30.930 --> 00:13:30.940 align:start position:0%
course it's high-performance accelerated
 

00:13:30.940 --> 00:13:35.190 align:start position:0%
course it's high-performance accelerated
for<00:13:31.150><c> altivec</c><00:13:33.420><c> we</c><00:13:34.420><c> provide</c><00:13:34.690><c> a</c><00:13:34.720><c> variety</c><00:13:34.930><c> of</c>

00:13:35.190 --> 00:13:35.200 align:start position:0%
for altivec we provide a variety of
 

00:13:35.200 --> 00:13:38.060 align:start position:0%
for altivec we provide a variety of
image<00:13:35.440><c> filters</c><00:13:35.800><c> we</c><00:13:36.640><c> have</c><00:13:36.790><c> convolutions</c>

00:13:38.060 --> 00:13:38.070 align:start position:0%
image filters we have convolutions
 

00:13:38.070 --> 00:13:40.560 align:start position:0%
image filters we have convolutions
morphology<00:13:39.070><c> functions</c><00:13:39.520><c> that</c><00:13:40.210><c> allow</c><00:13:40.300><c> you</c><00:13:40.480><c> to</c>

00:13:40.560 --> 00:13:40.570 align:start position:0%
morphology functions that allow you to
 

00:13:40.570 --> 00:13:43.080 align:start position:0%
morphology functions that allow you to
do<00:13:40.690><c> edge</c><00:13:40.930><c> detection</c><00:13:41.320><c> or</c><00:13:41.740><c> fill</c><00:13:42.430><c> in</c><00:13:42.520><c> holes</c><00:13:42.670><c> that</c>

00:13:43.080 --> 00:13:43.090 align:start position:0%
do edge detection or fill in holes that
 

00:13:43.090 --> 00:13:45.810 align:start position:0%
do edge detection or fill in holes that
kind<00:13:43.270><c> of</c><00:13:43.300><c> thing</c><00:13:43.510><c> min</c><00:13:43.780><c> max</c><00:13:43.990><c> dilated</c><00:13:44.530><c> Road</c><00:13:44.700><c> we</c><00:13:45.700><c> do</c>

00:13:45.810 --> 00:13:45.820 align:start position:0%
kind of thing min max dilated Road we do
 

00:13:45.820 --> 00:13:47.220 align:start position:0%
kind of thing min max dilated Road we do
histogram<00:13:46.270><c> operations</c><00:13:46.840><c> with</c><00:13:47.050><c> color</c>

00:13:47.220 --> 00:13:47.230 align:start position:0%
histogram operations with color
 

00:13:47.230 --> 00:13:50.430 align:start position:0%
histogram operations with color
balancing<00:13:47.800><c> alpha</c><00:13:48.550><c> compositing</c><00:13:49.200><c> which</c><00:13:50.200><c> with</c>

00:13:50.430 --> 00:13:50.440 align:start position:0%
balancing alpha compositing which with
 

00:13:50.440 --> 00:13:53.070 align:start position:0%
balancing alpha compositing which with
some<00:13:50.590><c> new</c><00:13:50.680><c> functionality</c><00:13:51.070><c> there</c><00:13:52.080><c> geometrical</c>

00:13:53.070 --> 00:13:53.080 align:start position:0%
some new functionality there geometrical
 

00:13:53.080 --> 00:13:55.110 align:start position:0%
some new functionality there geometrical
transforms<00:13:53.620><c> we</c><00:13:53.740><c> do</c><00:13:53.860><c> scales</c><00:13:54.190><c> rotates</c><00:13:54.730><c> yours</c>

00:13:55.110 --> 00:13:55.120 align:start position:0%
transforms we do scales rotates yours
 

00:13:55.120 --> 00:13:57.660 align:start position:0%
transforms we do scales rotates yours
effing<00:13:55.540><c> warps</c><00:13:55.870><c> you</c><00:13:56.350><c> can</c><00:13:56.500><c> sort</c><00:13:56.830><c> of</c><00:13:56.920><c> distort</c><00:13:57.580><c> the</c>

00:13:57.660 --> 00:13:57.670 align:start position:0%
effing warps you can sort of distort the
 

00:13:57.670 --> 00:13:59.490 align:start position:0%
effing warps you can sort of distort the
image<00:13:57.700><c> in</c><00:13:57.970><c> lots</c><00:13:58.120><c> of</c><00:13:58.210><c> different</c><00:13:58.270><c> ways</c><00:13:58.480><c> we</c><00:13:59.350><c> also</c>

00:13:59.490 --> 00:13:59.500 align:start position:0%
image in lots of different ways we also
 

00:13:59.500 --> 00:14:02.760 align:start position:0%
image in lots of different ways we also
do<00:13:59.740><c> some</c><00:14:00.010><c> color</c><00:14:00.580><c> space</c><00:14:00.880><c> conversions</c><00:14:01.390><c> and</c><00:14:02.260><c> data</c>

00:14:02.760 --> 00:14:02.770 align:start position:0%
do some color space conversions and data
 

00:14:02.770 --> 00:14:05.820 align:start position:0%
do some color space conversions and data
type<00:14:02.980><c> conversions</c><00:14:04.020><c> so</c><00:14:05.020><c> just</c><00:14:05.380><c> to</c><00:14:05.440><c> go</c><00:14:05.560><c> over</c><00:14:05.590><c> what</c>

00:14:05.820 --> 00:14:05.830 align:start position:0%
type conversions so just to go over what
 

00:14:05.830 --> 00:14:07.290 align:start position:0%
type conversions so just to go over what
you<00:14:05.890><c> can</c><00:14:06.010><c> do</c><00:14:06.070><c> with</c><00:14:06.160><c> convolution</c><00:14:06.730><c> depending</c><00:14:07.210><c> on</c>

00:14:07.290 --> 00:14:07.300 align:start position:0%
you can do with convolution depending on
 

00:14:07.300 --> 00:14:09.120 align:start position:0%
you can do with convolution depending on
what<00:14:07.420><c> kernel</c><00:14:07.660><c> you</c><00:14:07.750><c> provide</c><00:14:08.050><c> the</c><00:14:08.590><c> convolution</c>

00:14:09.120 --> 00:14:09.130 align:start position:0%
what kernel you provide the convolution
 

00:14:09.130 --> 00:14:10.860 align:start position:0%
what kernel you provide the convolution
filter<00:14:09.250><c> you</c><00:14:10.180><c> can</c><00:14:10.330><c> do</c><00:14:10.420><c> all</c><00:14:10.570><c> sorts</c><00:14:10.780><c> of</c><00:14:10.810><c> different</c>

00:14:10.860 --> 00:14:10.870 align:start position:0%
filter you can do all sorts of different
 

00:14:10.870 --> 00:14:13.470 align:start position:0%
filter you can do all sorts of different
operations<00:14:11.470><c> whereas</c><00:14:11.830><c> sharpens</c><00:14:12.310><c> I</c><00:14:12.520><c> can</c><00:14:13.270><c> do</c><00:14:13.360><c> an</c>

00:14:13.470 --> 00:14:13.480 align:start position:0%
operations whereas sharpens I can do an
 

00:14:13.480 --> 00:14:14.760 align:start position:0%
operations whereas sharpens I can do an
emboss<00:14:13.720><c> which</c><00:14:13.990><c> is</c><00:14:14.110><c> essentially</c><00:14:14.290><c> a</c><00:14:14.440><c> first</c><00:14:14.590><c> year</c>

00:14:14.760 --> 00:14:14.770 align:start position:0%
emboss which is essentially a first year
 

00:14:14.770 --> 00:14:19.700 align:start position:0%
emboss which is essentially a first year
over<00:14:15.250><c> the</c><00:14:15.570><c> image</c><00:14:16.980><c> you</c><00:14:17.980><c> can</c><00:14:18.160><c> do</c><00:14:18.310><c> a</c><00:14:18.340><c> ver</c><00:14:18.580><c> a'junk</c>

00:14:19.700 --> 00:14:19.710 align:start position:0%
over the image you can do a ver a'junk
 

00:14:19.710 --> 00:14:23.340 align:start position:0%
over the image you can do a ver a'junk
various<00:14:20.710><c> other</c><00:14:20.830><c> things</c><00:14:21.630><c> we've</c><00:14:22.630><c> gone</c><00:14:22.810><c> over</c><00:14:22.870><c> and</c>

00:14:23.340 --> 00:14:23.350 align:start position:0%
various other things we've gone over and
 

00:14:23.350 --> 00:14:24.960 align:start position:0%
various other things we've gone over and
looked<00:14:23.620><c> at</c><00:14:23.680><c> the</c><00:14:23.740><c> performance</c><00:14:24.190><c> for</c><00:14:24.430><c> tiger</c><00:14:24.760><c> and</c>

00:14:24.960 --> 00:14:24.970 align:start position:0%
looked at the performance for tiger and
 

00:14:24.970 --> 00:14:27.780 align:start position:0%
looked at the performance for tiger and
for<00:14:25.180><c> d5</c><00:14:25.540><c> and</c><00:14:25.900><c> for</c><00:14:26.650><c> future</c><00:14:26.800><c> processors</c><00:14:27.430><c> and</c>

00:14:27.780 --> 00:14:27.790 align:start position:0%
for d5 and for future processors and
 

00:14:27.790 --> 00:14:28.950 align:start position:0%
for d5 and for future processors and
we've<00:14:27.940><c> done</c><00:14:28.120><c> a</c><00:14:28.180><c> lot</c><00:14:28.360><c> of</c><00:14:28.390><c> work</c><00:14:28.600><c> to</c><00:14:28.750><c> get</c><00:14:28.840><c> the</c>

00:14:28.950 --> 00:14:28.960 align:start position:0%
we've done a lot of work to get the
 

00:14:28.960 --> 00:14:30.810 align:start position:0%
we've done a lot of work to get the
performance<00:14:29.200><c> up</c><00:14:29.530><c> right</c><00:14:30.190><c> now</c><00:14:30.310><c> on</c><00:14:30.490><c> your</c><00:14:30.610><c> CD</c>

00:14:30.810 --> 00:14:30.820 align:start position:0%
performance up right now on your CD
 

00:14:30.820 --> 00:14:32.310 align:start position:0%
performance up right now on your CD
you'll<00:14:31.090><c> find</c><00:14:31.330><c> that</c><00:14:31.510><c> the</c><00:14:31.630><c> performance</c><00:14:32.080><c> for</c><00:14:32.260><c> the</c>

00:14:32.310 --> 00:14:32.320 align:start position:0%
you'll find that the performance for the
 

00:14:32.320 --> 00:14:33.570 align:start position:0%
you'll find that the performance for the
planar<00:14:32.560><c> 8-bit</c><00:14:32.950><c> cases</c><00:14:33.340><c> substantially</c>

00:14:33.570 --> 00:14:33.580 align:start position:0%
planar 8-bit cases substantially
 

00:14:33.580 --> 00:14:35.910 align:start position:0%
planar 8-bit cases substantially
improved<00:14:34.270><c> over</c><00:14:34.600><c> what</c><00:14:34.720><c> it</c><00:14:34.810><c> was</c><00:14:34.960><c> and</c>

00:14:35.910 --> 00:14:35.920 align:start position:0%
improved over what it was and
 

00:14:35.920 --> 00:14:37.980 align:start position:0%
improved over what it was and
as<00:14:36.010><c> as</c><00:14:36.579><c> the</c><00:14:36.610><c> months</c><00:14:37.029><c> go</c><00:14:37.060><c> by</c><00:14:37.180><c> and</c><00:14:37.570><c> the</c><00:14:37.630><c> near</c>

00:14:37.980 --> 00:14:37.990 align:start position:0%
as as the months go by and the near
 

00:14:37.990 --> 00:14:39.269 align:start position:0%
as as the months go by and the near
future<00:14:38.200><c> we're</c><00:14:38.440><c> going</c><00:14:38.529><c> to</c><00:14:38.620><c> push</c><00:14:38.920><c> that</c><00:14:38.950><c> forward</c>

00:14:39.269 --> 00:14:39.279 align:start position:0%
future we're going to push that forward
 

00:14:39.279 --> 00:14:42.990 align:start position:0%
future we're going to push that forward
on<00:14:39.550><c> other</c><00:14:39.639><c> things</c><00:14:41.070><c> we've</c><00:14:42.070><c> so</c><00:14:42.700><c> we've</c><00:14:42.850><c> done</c><00:14:42.970><c> a</c>

00:14:42.990 --> 00:14:43.000 align:start position:0%
on other things we've so we've done a
 

00:14:43.000 --> 00:14:44.490 align:start position:0%
on other things we've so we've done a
lot<00:14:43.149><c> of</c><00:14:43.180><c> work</c><00:14:43.389><c> just</c><00:14:43.420><c> to</c><00:14:43.660><c> get</c><00:14:43.779><c> the</c><00:14:43.899><c> brute</c><00:14:44.200><c> force</c>

00:14:44.490 --> 00:14:44.500 align:start position:0%
lot of work just to get the brute force
 

00:14:44.500 --> 00:14:46.019 align:start position:0%
lot of work just to get the brute force
computation<00:14:44.829><c> about</c><00:14:45.279><c> it</c><00:14:45.399><c> we've</c><00:14:45.550><c> also</c><00:14:45.700><c> improved</c>

00:14:46.019 --> 00:14:46.029 align:start position:0%
computation about it we've also improved
 

00:14:46.029 --> 00:14:47.670 align:start position:0%
computation about it we've also improved
the<00:14:46.060><c> algorithm</c><00:14:46.480><c> a</c><00:14:46.540><c> bit</c><00:14:46.720><c> it's</c><00:14:47.110><c> a</c><00:14:47.170><c> lots</c><00:14:47.320><c> smarter</c>

00:14:47.670 --> 00:14:47.680 align:start position:0%
the algorithm a bit it's a lots smarter
 

00:14:47.680 --> 00:14:49.019 align:start position:0%
the algorithm a bit it's a lots smarter
about<00:14:47.800><c> zeros</c><00:14:48.250><c> in</c><00:14:48.430><c> your</c><00:14:48.550><c> convolution</c>

00:14:49.019 --> 00:14:49.029 align:start position:0%
about zeros in your convolution
 

00:14:49.029 --> 00:14:50.970 align:start position:0%
about zeros in your convolution
currently<00:14:49.360><c> most</c><00:14:49.540><c> people</c><00:14:49.779><c> they</c><00:14:49.899><c> pass</c><00:14:50.079><c> in</c><00:14:50.260><c> a</c><00:14:50.350><c> the</c>

00:14:50.970 --> 00:14:50.980 align:start position:0%
currently most people they pass in a the
 

00:14:50.980 --> 00:14:53.100 align:start position:0%
currently most people they pass in a the
kernel<00:14:51.279><c> is</c><00:14:51.399><c> 90%</c><00:14:52.149><c> zeroes</c><00:14:52.630><c> and</c><00:14:52.720><c> they</c><00:14:52.810><c> just</c><00:14:52.930><c> kind</c>

00:14:53.100 --> 00:14:53.110 align:start position:0%
kernel is 90% zeroes and they just kind
 

00:14:53.110 --> 00:14:55.500 align:start position:0%
kernel is 90% zeroes and they just kind
of<00:14:53.170><c> expect</c><00:14:53.500><c> the</c><00:14:53.620><c> library</c><00:14:54.370><c> not</c><00:14:54.519><c> to</c><00:14:54.730><c> actually</c><00:14:55.420><c> do</c>

00:14:55.500 --> 00:14:55.510 align:start position:0%
of expect the library not to actually do
 

00:14:55.510 --> 00:14:57.810 align:start position:0%
of expect the library not to actually do
work<00:14:55.660><c> for</c><00:14:55.839><c> the</c><00:14:55.959><c> zeros</c><00:14:56.310><c> but</c><00:14:57.310><c> it</c><00:14:57.430><c> turns</c><00:14:57.579><c> out</c><00:14:57.699><c> if</c>

00:14:57.810 --> 00:14:57.820 align:start position:0%
work for the zeros but it turns out if
 

00:14:57.820 --> 00:14:58.980 align:start position:0%
work for the zeros but it turns out if
you<00:14:57.910><c> go</c><00:14:58.000><c> look</c><00:14:58.180><c> at</c><00:14:58.240><c> all</c><00:14:58.360><c> the</c><00:14:58.449><c> high-performance</c>

00:14:58.980 --> 00:14:58.990 align:start position:0%
you go look at all the high-performance
 

00:14:58.990 --> 00:15:00.660 align:start position:0%
you go look at all the high-performance
kind<00:14:59.470><c> of</c><00:14:59.529><c> look</c><00:14:59.709><c> involves</c><00:15:00.130><c> out</c><00:15:00.250><c> there</c><00:15:00.459><c> they</c><00:15:00.610><c> do</c>

00:15:00.660 --> 00:15:00.670 align:start position:0%
kind of look involves out there they do
 

00:15:00.670 --> 00:15:02.280 align:start position:0%
kind of look involves out there they do
actually<00:15:01.060><c> do</c><00:15:01.149><c> work</c><00:15:01.269><c> for</c><00:15:01.389><c> the</c><00:15:01.480><c> zeros</c>

00:15:02.280 --> 00:15:02.290 align:start position:0%
actually do work for the zeros
 

00:15:02.290 --> 00:15:04.079 align:start position:0%
actually do work for the zeros
but<00:15:02.649><c> we've</c><00:15:02.800><c> changed</c><00:15:03.100><c> around</c><00:15:03.310><c> so</c><00:15:03.550><c> we</c><00:15:03.639><c> don't</c><00:15:03.790><c> so</c>

00:15:04.079 --> 00:15:04.089 align:start position:0%
but we've changed around so we don't so
 

00:15:04.089 --> 00:15:06.240 align:start position:0%
but we've changed around so we don't so
in<00:15:04.329><c> many</c><00:15:04.449><c> cases</c><00:15:04.899><c> now</c><00:15:05.050><c> in</c><00:15:05.500><c> a</c><00:15:05.589><c> comparative</c><00:15:05.949><c> study</c>

00:15:06.240 --> 00:15:06.250 align:start position:0%
in many cases now in a comparative study
 

00:15:06.250 --> 00:15:07.560 align:start position:0%
in many cases now in a comparative study
between<00:15:06.310><c> our</c><00:15:06.670><c> library</c><00:15:07.029><c> and</c><00:15:07.089><c> the</c><00:15:07.240><c> other</c><00:15:07.360><c> ones</c>

00:15:07.560 --> 00:15:07.570 align:start position:0%
between our library and the other ones
 

00:15:07.570 --> 00:15:09.240 align:start position:0%
between our library and the other ones
are<00:15:07.690><c> going</c><00:15:07.779><c> to</c><00:15:07.899><c> see</c><00:15:08.019><c> very</c><00:15:08.709><c> substantial</c>

00:15:09.240 --> 00:15:09.250 align:start position:0%
are going to see very substantial
 

00:15:09.250 --> 00:15:11.189 align:start position:0%
are going to see very substantial
improvement<00:15:09.670><c> and</c><00:15:10.389><c> ours</c><00:15:10.660><c> over</c><00:15:10.779><c> the</c><00:15:10.930><c> other</c><00:15:11.079><c> one</c>

00:15:11.189 --> 00:15:11.199 align:start position:0%
improvement and ours over the other one
 

00:15:11.199 --> 00:15:13.110 align:start position:0%
improvement and ours over the other one
so<00:15:11.860><c> just</c><00:15:12.130><c> to</c><00:15:12.220><c> give</c><00:15:12.339><c> you</c><00:15:12.430><c> an</c><00:15:12.519><c> idea</c><00:15:12.610><c> here's</c><00:15:13.000><c> an</c>

00:15:13.110 --> 00:15:13.120 align:start position:0%
so just to give you an idea here's an
 

00:15:13.120 --> 00:15:14.939 align:start position:0%
so just to give you an idea here's an
example<00:15:13.360><c> of</c><00:15:13.660><c> a</c><00:15:13.810><c> somewhat</c><00:15:14.290><c> blurry</c><00:15:14.470><c> image</c><00:15:14.769><c> of</c>

00:15:14.939 --> 00:15:14.949 align:start position:0%
example of a somewhat blurry image of
 

00:15:14.949 --> 00:15:17.579 align:start position:0%
example of a somewhat blurry image of
Lisbon<00:15:15.820><c> and</c><00:15:16.420><c> you</c><00:15:16.720><c> can</c><00:15:16.839><c> apply</c><00:15:17.079><c> a</c><00:15:17.110><c> standard</c>

00:15:17.579 --> 00:15:17.589 align:start position:0%
Lisbon and you can apply a standard
 

00:15:17.589 --> 00:15:18.930 align:start position:0%
Lisbon and you can apply a standard
sharpening<00:15:18.070><c> kernel</c><00:15:18.399><c> and</c><00:15:18.490><c> it</c><00:15:18.579><c> looks</c><00:15:18.760><c> a</c><00:15:18.850><c> little</c>

00:15:18.930 --> 00:15:18.940 align:start position:0%
sharpening kernel and it looks a little
 

00:15:18.940 --> 00:15:20.220 align:start position:0%
sharpening kernel and it looks a little
bit<00:15:19.149><c> sharper</c><00:15:19.360><c> I</c><00:15:19.510><c> don't</c><00:15:19.720><c> know</c><00:15:19.810><c> if</c><00:15:19.899><c> it</c><00:15:19.990><c> shows</c><00:15:20.199><c> up</c>

00:15:20.220 --> 00:15:20.230 align:start position:0%
bit sharper I don't know if it shows up
 

00:15:20.230 --> 00:15:22.470 align:start position:0%
bit sharper I don't know if it shows up
well<00:15:20.560><c> in</c><00:15:20.680><c> this</c><00:15:20.800><c> display</c><00:15:21.490><c> and</c><00:15:21.760><c> you</c><00:15:22.089><c> can</c><00:15:22.209><c> see</c><00:15:22.329><c> the</c>

00:15:22.470 --> 00:15:22.480 align:start position:0%
well in this display and you can see the
 

00:15:22.480 --> 00:15:24.990 align:start position:0%
well in this display and you can see the
kernel<00:15:22.810><c> there</c><00:15:22.959><c> that</c><00:15:23.170><c> we</c><00:15:23.290><c> used</c><00:15:24.000><c> which</c>

00:15:24.990 --> 00:15:25.000 align:start position:0%
kernel there that we used which
 

00:15:25.000 --> 00:15:27.960 align:start position:0%
kernel there that we used which
accentuates<00:15:25.720><c> the</c><00:15:26.230><c> pixel</c><00:15:27.160><c> in</c><00:15:27.250><c> question</c><00:15:27.639><c> over</c>

00:15:27.960 --> 00:15:27.970 align:start position:0%
accentuates the pixel in question over
 

00:15:27.970 --> 00:15:29.610 align:start position:0%
accentuates the pixel in question over
its<00:15:28.089><c> neighbors</c><00:15:28.480><c> that's</c><00:15:29.110><c> how</c><00:15:29.260><c> you</c><00:15:29.320><c> get</c><00:15:29.500><c> the</c>

00:15:29.610 --> 00:15:29.620 align:start position:0%
its neighbors that's how you get the
 

00:15:29.620 --> 00:15:31.170 align:start position:0%
its neighbors that's how you get the
effect<00:15:29.709><c> and</c><00:15:30.160><c> here's</c><00:15:30.760><c> the</c><00:15:30.880><c> kind</c><00:15:31.000><c> of</c><00:15:31.120><c> a</c>

00:15:31.170 --> 00:15:31.180 align:start position:0%
effect and here's the kind of a
 

00:15:31.180 --> 00:15:32.579 align:start position:0%
effect and here's the kind of a
performance<00:15:31.720><c> you</c><00:15:31.779><c> can</c><00:15:31.899><c> expect</c><00:15:31.959><c> on</c><00:15:32.290><c> that</c><00:15:32.320><c> kind</c>

00:15:32.579 --> 00:15:32.589 align:start position:0%
performance you can expect on that kind
 

00:15:32.589 --> 00:15:35.009 align:start position:0%
performance you can expect on that kind
of<00:15:32.680><c> thing</c><00:15:33.329><c> here</c><00:15:34.329><c> we</c><00:15:34.449><c> have</c><00:15:34.600><c> a</c><00:15:34.630><c> competitive</c>

00:15:35.009 --> 00:15:35.019 align:start position:0%
of thing here we have a competitive
 

00:15:35.019 --> 00:15:38.490 align:start position:0%
of thing here we have a competitive
graph<00:15:35.709><c> against</c><00:15:36.130><c> Xeon</c><00:15:36.930><c> it's</c><00:15:37.930><c> it's</c><00:15:38.410><c> a</c><00:15:38.440><c> little</c>

00:15:38.490 --> 00:15:38.500 align:start position:0%
graph against Xeon it's it's a little
 

00:15:38.500 --> 00:15:40.319 align:start position:0%
graph against Xeon it's it's a little
hard<00:15:38.740><c> to</c><00:15:38.769><c> read</c><00:15:38.920><c> it's</c><00:15:39.040><c> a</c><00:15:39.190><c> 3.2</c><00:15:39.670><c> gigahertz</c><00:15:39.880><c> Xeon</c>

00:15:40.319 --> 00:15:40.329 align:start position:0%
hard to read it's a 3.2 gigahertz Xeon
 

00:15:40.329 --> 00:15:42.630 align:start position:0%
hard to read it's a 3.2 gigahertz Xeon
that<00:15:40.540><c> we're</c><00:15:40.660><c> working</c><00:15:40.750><c> on</c><00:15:40.930><c> and</c><00:15:41.430><c> we're</c><00:15:42.430><c> looking</c>

00:15:42.630 --> 00:15:42.640 align:start position:0%
that we're working on and we're looking
 

00:15:42.640 --> 00:15:43.710 align:start position:0%
that we're working on and we're looking
at<00:15:42.760><c> the</c><00:15:42.850><c> Intel</c><00:15:43.089><c> performance</c><00:15:43.570><c> primitives</c>

00:15:43.710 --> 00:15:43.720 align:start position:0%
at the Intel performance primitives
 

00:15:43.720 --> 00:15:44.880 align:start position:0%
at the Intel performance primitives
library<00:15:44.199><c> and</c><00:15:44.320><c> tell</c><00:15:44.410><c> has</c><00:15:44.589><c> already</c><00:15:44.800><c> gone</c>

00:15:44.880 --> 00:15:44.890 align:start position:0%
library and tell has already gone
 

00:15:44.890 --> 00:15:46.170 align:start position:0%
library and tell has already gone
through<00:15:45.070><c> and</c><00:15:45.190><c> multi-threaded</c><00:15:45.670><c> all</c><00:15:45.760><c> this</c><00:15:45.910><c> for</c>

00:15:46.170 --> 00:15:46.180 align:start position:0%
through and multi-threaded all this for
 

00:15:46.180 --> 00:15:49.699 align:start position:0%
through and multi-threaded all this for
you<00:15:46.350><c> so</c><00:15:47.350><c> both</c><00:15:47.500><c> of</c><00:15:47.529><c> these</c><00:15:47.680><c> are</c><00:15:47.740><c> dual</c><00:15:48.040><c> processor</c>

00:15:49.699 --> 00:15:49.709 align:start position:0%
you so both of these are dual processor
 

00:15:49.709 --> 00:15:51.240 align:start position:0%
you so both of these are dual processor
results

00:15:51.240 --> 00:15:51.250 align:start position:0%
results
 

00:15:51.250 --> 00:15:52.650 align:start position:0%
results
Intel<00:15:51.640><c> is</c><00:15:51.760><c> the</c><00:15:51.790><c> blue</c><00:15:52.060><c> bar</c><00:15:52.269><c> along</c><00:15:52.510><c> the</c><00:15:52.540><c> bottom</c>

00:15:52.650 --> 00:15:52.660 align:start position:0%
Intel is the blue bar along the bottom
 

00:15:52.660 --> 00:15:55.800 align:start position:0%
Intel is the blue bar along the bottom
we<00:15:52.990><c> normalized</c><00:15:53.410><c> its</c><00:15:53.620><c> performance</c><00:15:54.040><c> to</c><00:15:54.130><c> 1</c><00:15:54.810><c> and</c>

00:15:55.800 --> 00:15:55.810 align:start position:0%
we normalized its performance to 1 and
 

00:15:55.810 --> 00:15:58.139 align:start position:0%
we normalized its performance to 1 and
the<00:15:56.079><c> speed</c><00:15:56.170><c> of</c><00:15:56.410><c> the</c><00:15:56.560><c> g5</c><00:15:56.920><c> as</c><00:15:57.519><c> you</c><00:15:57.699><c> can</c><00:15:57.820><c> see</c><00:15:57.970><c> where</c>

00:15:58.139 --> 00:15:58.149 align:start position:0%
the speed of the g5 as you can see where
 

00:15:58.149 --> 00:15:59.490 align:start position:0%
the speed of the g5 as you can see where
the<00:15:58.209><c> dense</c><00:15:58.390><c> kernel</c><00:15:58.720><c> was</c><00:15:58.810><c> the</c><00:15:58.930><c> red</c><00:15:59.079><c> line</c><00:15:59.260><c> above</c>

00:15:59.490 --> 00:15:59.500 align:start position:0%
the dense kernel was the red line above
 

00:15:59.500 --> 00:16:02.310 align:start position:0%
the dense kernel was the red line above
it<00:15:59.649><c> so</c><00:15:59.890><c> we're</c><00:16:00.070><c> usually</c><00:16:00.850><c> you</c><00:16:01.360><c> know</c><00:16:01.480><c> between</c><00:16:01.660><c> 1</c>

00:16:02.310 --> 00:16:02.320 align:start position:0%
it so we're usually you know between 1
 

00:16:02.320 --> 00:16:04.170 align:start position:0%
it so we're usually you know between 1
and<00:16:02.440><c> 3</c><00:16:02.589><c> times</c><00:16:02.800><c> faster</c><00:16:03.250><c> than</c><00:16:03.430><c> until</c><00:16:04.000><c> for</c><00:16:04.149><c> a</c>

00:16:04.170 --> 00:16:04.180 align:start position:0%
and 3 times faster than until for a
 

00:16:04.180 --> 00:16:05.850 align:start position:0%
and 3 times faster than until for a
dense<00:16:04.360><c> kernel</c><00:16:04.660><c> and</c><00:16:04.779><c> then</c><00:16:04.870><c> for</c><00:16:05.079><c> a</c><00:16:05.110><c> sparse</c>

00:16:05.850 --> 00:16:05.860 align:start position:0%
dense kernel and then for a sparse
 

00:16:05.860 --> 00:16:07.380 align:start position:0%
dense kernel and then for a sparse
kernel<00:16:06.190><c> like</c><00:16:06.279><c> emboss</c><00:16:06.579><c> which</c><00:16:06.910><c> is</c><00:16:07.029><c> mostly</c><00:16:07.300><c> zeros</c>

00:16:07.380 --> 00:16:07.390 align:start position:0%
kernel like emboss which is mostly zeros
 

00:16:07.390 --> 00:16:09.410 align:start position:0%
kernel like emboss which is mostly zeros
then<00:16:07.839><c> we</c><00:16:07.990><c> you</c><00:16:08.230><c> know</c><00:16:08.320><c> up</c><00:16:08.470><c> to</c><00:16:08.620><c> 8</c><00:16:08.829><c> times</c><00:16:09.010><c> faster</c>

00:16:09.410 --> 00:16:09.420 align:start position:0%
then we you know up to 8 times faster
 

00:16:09.420 --> 00:16:14.009 align:start position:0%
then we you know up to 8 times faster
for<00:16:10.420><c> those</c><00:16:10.540><c> things</c><00:16:12.089><c> we</c><00:16:13.089><c> also</c><00:16:13.240><c> do</c><00:16:13.449><c> morphology</c>

00:16:14.009 --> 00:16:14.019 align:start position:0%
for those things we also do morphology
 

00:16:14.019 --> 00:16:16.590 align:start position:0%
for those things we also do morphology
operations<00:16:14.670><c> we</c><00:16:15.670><c> can</c><00:16:15.850><c> do</c><00:16:15.970><c> kind</c><00:16:16.240><c> of</c><00:16:16.300><c> different</c>

00:16:16.590 --> 00:16:16.600 align:start position:0%
operations we can do kind of different
 

00:16:16.600 --> 00:16:18.240 align:start position:0%
operations we can do kind of different
shape<00:16:16.779><c> changing</c><00:16:17.199><c> operations</c><00:16:17.829><c> that</c><00:16:18.010><c> kind</c><00:16:18.190><c> of</c>

00:16:18.240 --> 00:16:18.250 align:start position:0%
shape changing operations that kind of
 

00:16:18.250 --> 00:16:20.340 align:start position:0%
shape changing operations that kind of
thing<00:16:18.600><c> so</c><00:16:19.600><c> here</c><00:16:19.720><c> would</c><00:16:19.810><c> be</c><00:16:19.870><c> an</c><00:16:19.930><c> example</c><00:16:20.170><c> where</c>

00:16:20.340 --> 00:16:20.350 align:start position:0%
thing so here would be an example where
 

00:16:20.350 --> 00:16:22.290 align:start position:0%
thing so here would be an example where
we've<00:16:20.589><c> got</c><00:16:20.769><c> a</c><00:16:20.800><c> nice</c><00:16:21.370><c> picture</c><00:16:21.610><c> except</c><00:16:22.060><c> for</c><00:16:22.269><c> oh</c>

00:16:22.290 --> 00:16:22.300 align:start position:0%
we've got a nice picture except for oh
 

00:16:22.300 --> 00:16:23.970 align:start position:0%
we've got a nice picture except for oh
it<00:16:22.600><c> looks</c><00:16:22.779><c> like</c><00:16:22.899><c> a</c><00:16:22.930><c> power</c><00:16:23.199><c> line</c><00:16:23.410><c> up</c><00:16:23.589><c> in</c><00:16:23.709><c> the</c><00:16:23.740><c> top</c>

00:16:23.970 --> 00:16:23.980 align:start position:0%
it looks like a power line up in the top
 

00:16:23.980 --> 00:16:24.569 align:start position:0%
it looks like a power line up in the top
left<00:16:24.190><c> corner</c>

00:16:24.569 --> 00:16:24.579 align:start position:0%
left corner
 

00:16:24.579 --> 00:16:26.160 align:start position:0%
left corner
wouldn't<00:16:25.360><c> it</c><00:16:25.390><c> be</c><00:16:25.449><c> nice</c><00:16:25.600><c> we</c><00:16:25.810><c> could</c><00:16:25.930><c> remove</c><00:16:26.110><c> that</c>

00:16:26.160 --> 00:16:26.170 align:start position:0%
wouldn't it be nice we could remove that
 

00:16:26.170 --> 00:16:27.600 align:start position:0%
wouldn't it be nice we could remove that
well<00:16:26.500><c> there's</c><00:16:26.620><c> lots</c><00:16:26.709><c> of</c><00:16:26.829><c> ways</c><00:16:26.980><c> but</c><00:16:27.250><c> we'll</c><00:16:27.579><c> just</c>

00:16:27.600 --> 00:16:27.610 align:start position:0%
well there's lots of ways but we'll just
 

00:16:27.610 --> 00:16:30.180 align:start position:0%
well there's lots of ways but we'll just
use<00:16:27.790><c> morphology</c><00:16:28.569><c> for</c><00:16:28.720><c> this</c><00:16:28.839><c> example</c><00:16:29.140><c> and</c><00:16:29.470><c> so</c>

00:16:30.180 --> 00:16:30.190 align:start position:0%
use morphology for this example and so
 

00:16:30.190 --> 00:16:32.730 align:start position:0%
use morphology for this example and so
we<00:16:30.310><c> can</c><00:16:30.459><c> apply</c><00:16:30.550><c> a</c><00:16:31.120><c> max</c><00:16:31.930><c> filter</c><00:16:32.319><c> and</c><00:16:32.440><c> Max</c><00:16:32.589><c> will</c>

00:16:32.730 --> 00:16:32.740 align:start position:0%
we can apply a max filter and Max will
 

00:16:32.740 --> 00:16:34.110 align:start position:0%
we can apply a max filter and Max will
go<00:16:32.860><c> around</c><00:16:33.100><c> and</c><00:16:33.220><c> look</c><00:16:33.370><c> at</c><00:16:33.519><c> all</c><00:16:33.699><c> the</c><00:16:33.819><c> pixels</c>

00:16:34.110 --> 00:16:34.120 align:start position:0%
go around and look at all the pixels
 

00:16:34.120 --> 00:16:36.240 align:start position:0%
go around and look at all the pixels
around<00:16:34.329><c> this</c><00:16:34.930><c> pixel</c><00:16:35.380><c> in</c><00:16:35.440><c> question</c><00:16:35.829><c> and</c><00:16:36.040><c> take</c>

00:16:36.240 --> 00:16:36.250 align:start position:0%
around this pixel in question and take
 

00:16:36.250 --> 00:16:37.710 align:start position:0%
around this pixel in question and take
the<00:16:36.339><c> maximum</c><00:16:36.579><c> value</c><00:16:36.970><c> so</c><00:16:37.000><c> the</c><00:16:37.209><c> power</c><00:16:37.389><c> line</c><00:16:37.540><c> is</c>

00:16:37.710 --> 00:16:37.720 align:start position:0%
the maximum value so the power line is
 

00:16:37.720 --> 00:16:39.629 align:start position:0%
the maximum value so the power line is
kind<00:16:37.839><c> of</c><00:16:37.930><c> a</c><00:16:38.019><c> dark</c><00:16:38.139><c> image</c><00:16:38.350><c> so</c><00:16:38.740><c> as</c><00:16:38.949><c> we</c><00:16:39.399><c> apply</c><00:16:39.550><c> the</c>

00:16:39.629 --> 00:16:39.639 align:start position:0%
kind of a dark image so as we apply the
 

00:16:39.639 --> 00:16:41.269 align:start position:0%
kind of a dark image so as we apply the
max<00:16:39.880><c> filter</c><00:16:40.240><c> it</c><00:16:40.510><c> just</c><00:16:40.690><c> goes</c><00:16:40.839><c> away</c>

00:16:41.269 --> 00:16:41.279 align:start position:0%
max filter it just goes away
 

00:16:41.279 --> 00:16:43.319 align:start position:0%
max filter it just goes away
but<00:16:42.279><c> you</c><00:16:42.490><c> notice</c><00:16:42.730><c> that</c><00:16:42.850><c> some</c><00:16:43.029><c> of</c><00:16:43.060><c> the</c><00:16:43.180><c> white</c>

00:16:43.319 --> 00:16:43.329 align:start position:0%
but you notice that some of the white
 

00:16:43.329 --> 00:16:45.780 align:start position:0%
but you notice that some of the white
highlights<00:16:43.690><c> got</c><00:16:43.899><c> bigger</c><00:16:44.110><c> so</c><00:16:44.339><c> we</c><00:16:45.339><c> can</c><00:16:45.430><c> apply</c><00:16:45.760><c> a</c>

00:16:45.780 --> 00:16:45.790 align:start position:0%
highlights got bigger so we can apply a
 

00:16:45.790 --> 00:16:48.750 align:start position:0%
highlights got bigger so we can apply a
min<00:16:46.060><c> filter</c><00:16:46.420><c> and</c><00:16:46.660><c> you</c><00:16:47.470><c> know</c><00:16:47.560><c> kind</c><00:16:47.920><c> of</c><00:16:47.980><c> subtract</c>

00:16:48.750 --> 00:16:48.760 align:start position:0%
min filter and you know kind of subtract
 

00:16:48.760 --> 00:16:49.410 align:start position:0%
min filter and you know kind of subtract
them<00:16:48.880><c> back</c><00:16:49.000><c> out</c>

00:16:49.410 --> 00:16:49.420 align:start position:0%
them back out
 

00:16:49.420 --> 00:16:51.000 align:start position:0%
them back out
and<00:16:49.660><c> so</c><00:16:50.110><c> you</c><00:16:50.200><c> have</c><00:16:50.320><c> something</c><00:16:50.800><c> that</c><00:16:50.920><c> looks</c>

00:16:51.000 --> 00:16:51.010 align:start position:0%
and so you have something that looks
 

00:16:51.010 --> 00:16:52.860 align:start position:0%
and so you have something that looks
like<00:16:51.220><c> your</c><00:16:51.370><c> original</c><00:16:51.460><c> image</c><00:16:51.850><c> bag</c><00:16:52.210><c> except</c><00:16:52.660><c> now</c>

00:16:52.860 --> 00:16:52.870 align:start position:0%
like your original image bag except now
 

00:16:52.870 --> 00:16:54.270 align:start position:0%
like your original image bag except now
that<00:16:52.900><c> the</c><00:16:53.200><c> power</c><00:16:53.590><c> line</c><00:16:53.740><c> is</c><00:16:53.830><c> going</c><00:16:53.920><c> to</c><00:16:54.010><c> be</c><00:16:54.130><c> gone</c>

00:16:54.270 --> 00:16:54.280 align:start position:0%
that the power line is going to be gone
 

00:16:54.280 --> 00:16:56.100 align:start position:0%
that the power line is going to be gone
so<00:16:54.610><c> you</c><00:16:55.030><c> can</c><00:16:55.180><c> do</c><00:16:55.270><c> these</c><00:16:55.420><c> four</c><00:16:55.630><c> interesting</c>

00:16:56.100 --> 00:16:56.110 align:start position:0%
so you can do these four interesting
 

00:16:56.110 --> 00:17:00.120 align:start position:0%
so you can do these four interesting
effects<00:16:56.410><c> in</c><00:16:57.340><c> addition</c><00:16:57.580><c> to</c><00:16:57.850><c> just</c><00:16:59.130><c> shape</c>

00:17:00.120 --> 00:17:00.130 align:start position:0%
effects in addition to just shape
 

00:17:00.130 --> 00:17:01.280 align:start position:0%
effects in addition to just shape
changing<00:17:00.490><c> that</c><00:17:00.640><c> kind</c><00:17:00.820><c> of</c><00:17:00.850><c> thing</c>

00:17:01.280 --> 00:17:01.290 align:start position:0%
changing that kind of thing
 

00:17:01.290 --> 00:17:03.600 align:start position:0%
changing that kind of thing
so<00:17:02.290><c> here's</c><00:17:02.470><c> performance</c><00:17:02.950><c> on</c><00:17:03.100><c> that</c><00:17:03.220><c> we've</c><00:17:03.430><c> got</c>

00:17:03.600 --> 00:17:03.610 align:start position:0%
so here's performance on that we've got
 

00:17:03.610 --> 00:17:06.870 align:start position:0%
so here's performance on that we've got
a<00:17:03.640><c> new</c><00:17:03.790><c> algorithm</c><00:17:04.030><c> for</c><00:17:04.480><c> max</c><00:17:05.339><c> which</c><00:17:06.339><c> works</c>

00:17:06.870 --> 00:17:06.880 align:start position:0%
a new algorithm for max which works
 

00:17:06.880 --> 00:17:08.310 align:start position:0%
a new algorithm for max which works
substantially<00:17:07.360><c> better</c><00:17:07.510><c> here</c><00:17:07.930><c> you</c><00:17:07.959><c> can</c><00:17:08.140><c> see</c>

00:17:08.310 --> 00:17:08.320 align:start position:0%
substantially better here you can see
 

00:17:08.320 --> 00:17:10.710 align:start position:0%
substantially better here you can see
the<00:17:08.500><c> 3.2</c><00:17:09.220><c> gigahertz</c><00:17:09.459><c> dual</c><00:17:10.060><c> processors</c><00:17:10.540><c> Eon</c>

00:17:10.710 --> 00:17:10.720 align:start position:0%
the 3.2 gigahertz dual processors Eon
 

00:17:10.720 --> 00:17:12.240 align:start position:0%
the 3.2 gigahertz dual processors Eon
results<00:17:11.110><c> again</c><00:17:11.320><c> normalize</c><00:17:11.650><c> the</c><00:17:11.800><c> one</c><00:17:11.980><c> is</c><00:17:12.130><c> the</c>

00:17:12.240 --> 00:17:12.250 align:start position:0%
results again normalize the one is the
 

00:17:12.250 --> 00:17:14.310 align:start position:0%
results again normalize the one is the
red<00:17:12.370><c> line</c><00:17:12.550><c> across</c><00:17:12.730><c> the</c><00:17:12.940><c> bottom</c><00:17:13.089><c> and</c><00:17:13.390><c> you</c><00:17:14.230><c> know</c>

00:17:14.310 --> 00:17:14.320 align:start position:0%
red line across the bottom and you know
 

00:17:14.320 --> 00:17:15.870 align:start position:0%
red line across the bottom and you know
as<00:17:14.470><c> the</c><00:17:14.620><c> kernel</c><00:17:14.920><c> size</c><00:17:15.100><c> gets</c><00:17:15.370><c> larger</c><00:17:15.430><c> you</c><00:17:15.820><c> can</c>

00:17:15.870 --> 00:17:15.880 align:start position:0%
as the kernel size gets larger you can
 

00:17:15.880 --> 00:17:17.280 align:start position:0%
as the kernel size gets larger you can
see<00:17:16.089><c> our</c><00:17:16.180><c> performance</c><00:17:16.600><c> relative</c><00:17:16.720><c> to</c><00:17:16.930><c> Xeon</c>

00:17:17.280 --> 00:17:17.290 align:start position:0%
see our performance relative to Xeon
 

00:17:17.290 --> 00:17:18.449 align:start position:0%
see our performance relative to Xeon
gets<00:17:17.530><c> better</c><00:17:17.709><c> and</c><00:17:17.860><c> better</c><00:17:17.920><c> and</c><00:17:18.190><c> we're</c><00:17:18.310><c> up</c><00:17:18.430><c> to</c>

00:17:18.449 --> 00:17:18.459 align:start position:0%
gets better and better and we're up to
 

00:17:18.459 --> 00:17:20.160 align:start position:0%
gets better and better and we're up to
four<00:17:19.120><c> times</c><00:17:19.300><c> faster</c><00:17:19.390><c> for</c><00:17:19.839><c> really</c><00:17:20.020><c> large</c>

00:17:20.160 --> 00:17:20.170 align:start position:0%
four times faster for really large
 

00:17:20.170 --> 00:17:25.590 align:start position:0%
four times faster for really large
filters<00:17:22.199><c> we</c><00:17:23.199><c> do</c><00:17:23.320><c> alpha</c><00:17:23.560><c> compositing</c><00:17:24.420><c> we</c><00:17:25.420><c> can</c>

00:17:25.590 --> 00:17:25.600 align:start position:0%
filters we do alpha compositing we can
 

00:17:25.600 --> 00:17:27.300 align:start position:0%
filters we do alpha compositing we can
support<00:17:25.900><c> either</c><00:17:26.079><c> premultiplied</c><00:17:26.740><c> images</c><00:17:27.130><c> or</c>

00:17:27.300 --> 00:17:27.310 align:start position:0%
support either premultiplied images or
 

00:17:27.310 --> 00:17:29.070 align:start position:0%
support either premultiplied images or
non<00:17:27.430><c> premultiplied</c><00:17:27.970><c> images</c><00:17:28.329><c> we</c><00:17:28.960><c> have</c>

00:17:29.070 --> 00:17:29.080 align:start position:0%
non premultiplied images we have
 

00:17:29.080 --> 00:17:30.240 align:start position:0%
non premultiplied images we have
functions<00:17:29.410><c> to</c><00:17:29.530><c> pre</c><00:17:29.650><c> multiply</c><00:17:29.980><c> unpretty</c>

00:17:30.240 --> 00:17:30.250 align:start position:0%
functions to pre multiply unpretty
 

00:17:30.250 --> 00:17:32.820 align:start position:0%
functions to pre multiply unpretty
multiply<00:17:30.580><c> data</c><00:17:30.850><c> we've</c><00:17:31.810><c> now</c><00:17:31.990><c> added</c><00:17:32.230><c> a</c><00:17:32.500><c> few</c><00:17:32.770><c> new</c>

00:17:32.820 --> 00:17:32.830 align:start position:0%
multiply data we've now added a few new
 

00:17:32.830 --> 00:17:35.610 align:start position:0%
multiply data we've now added a few new
functions<00:17:33.340><c> for</c><00:17:33.550><c> tiger</c><00:17:33.910><c> you</c><00:17:34.450><c> can</c><00:17:34.630><c> mix</c><00:17:35.140><c> non</c><00:17:35.410><c> pre</c>

00:17:35.610 --> 00:17:35.620 align:start position:0%
functions for tiger you can mix non pre
 

00:17:35.620 --> 00:17:37.460 align:start position:0%
functions for tiger you can mix non pre
multiplied<00:17:36.010><c> into</c><00:17:36.190><c> a</c><00:17:36.280><c> pre</c><00:17:36.490><c> multiplied</c><00:17:36.880><c> layer</c>

00:17:37.460 --> 00:17:37.470 align:start position:0%
multiplied into a pre multiplied layer
 

00:17:37.470 --> 00:17:40.680 align:start position:0%
multiplied into a pre multiplied layer
which<00:17:38.470><c> allows</c><00:17:38.770><c> you</c><00:17:38.920><c> to</c><00:17:38.950><c> do</c><00:17:39.160><c> multiple</c><00:17:39.690><c> stacks</c>

00:17:40.680 --> 00:17:40.690 align:start position:0%
which allows you to do multiple stacks
 

00:17:40.690 --> 00:17:44.220 align:start position:0%
which allows you to do multiple stacks
go<00:17:41.170><c> along</c><00:17:41.550><c> and</c><00:17:42.550><c> we</c><00:17:42.610><c> added</c><00:17:43.330><c> in</c><00:17:43.510><c> compositing</c>

00:17:44.220 --> 00:17:44.230 align:start position:0%
go along and we added in compositing
 

00:17:44.230 --> 00:17:46.530 align:start position:0%
go along and we added in compositing
with<00:17:44.380><c> escape</c><00:17:44.710><c> FISC</c><00:17:45.010><c> a</c><00:17:45.460><c> scalar</c><00:17:45.910><c> fade</c><00:17:46.210><c> value</c>

00:17:46.530 --> 00:17:46.540 align:start position:0%
with escape FISC a scalar fade value
 

00:17:46.540 --> 00:17:48.120 align:start position:0%
with escape FISC a scalar fade value
which<00:17:46.690><c> allowed</c><00:17:46.930><c> to</c><00:17:47.050><c> sort</c><00:17:47.230><c> of</c><00:17:47.350><c> fade</c><00:17:47.860><c> in</c><00:17:48.010><c> the</c>

00:17:48.120 --> 00:17:48.130 align:start position:0%
which allowed to sort of fade in the
 

00:17:48.130 --> 00:17:49.320 align:start position:0%
which allowed to sort of fade in the
whole<00:17:48.250><c> image</c><00:17:48.520><c> without</c><00:17:48.760><c> going</c><00:17:48.970><c> through</c><00:17:49.060><c> and</c>

00:17:49.320 --> 00:17:49.330 align:start position:0%
whole image without going through and
 

00:17:49.330 --> 00:17:52.590 align:start position:0%
whole image without going through and
writing<00:17:49.630><c> over</c><00:17:49.810><c> the</c><00:17:49.840><c> Alpha</c><00:17:50.140><c> Channel</c><00:17:51.450><c> so</c><00:17:52.450><c> those</c>

00:17:52.590 --> 00:17:52.600 align:start position:0%
writing over the Alpha Channel so those
 

00:17:52.600 --> 00:17:56.040 align:start position:0%
writing over the Alpha Channel so those
will<00:17:52.780><c> be</c><00:17:52.870><c> available</c><00:17:53.910><c> we</c><00:17:54.910><c> also</c><00:17:55.060><c> have</c><00:17:55.240><c> new</c><00:17:55.810><c> type</c>

00:17:56.040 --> 00:17:56.050 align:start position:0%
will be available we also have new type
 

00:17:56.050 --> 00:17:57.570 align:start position:0%
will be available we also have new type
conversion<00:17:56.530><c> features</c><00:17:56.830><c> this</c><00:17:57.040><c> was</c><00:17:57.280><c> actually</c>

00:17:57.570 --> 00:17:57.580 align:start position:0%
conversion features this was actually
 

00:17:57.580 --> 00:17:59.640 align:start position:0%
conversion features this was actually
surprising<00:17:58.270><c> at</c><00:17:58.510><c> least</c><00:17:58.690><c> to</c><00:17:58.780><c> us</c><00:17:58.900><c> number</c><00:17:59.500><c> one</c>

00:17:59.640 --> 00:17:59.650 align:start position:0%
surprising at least to us number one
 

00:17:59.650 --> 00:18:00.660 align:start position:0%
surprising at least to us number one
requested<00:18:00.040><c> feature</c><00:18:00.250><c> it</c><00:18:00.430><c> seems</c><00:18:00.580><c> that</c>

00:18:00.660 --> 00:18:00.670 align:start position:0%
requested feature it seems that
 

00:18:00.670 --> 00:18:02.880 align:start position:0%
requested feature it seems that
everybody<00:18:00.850><c> has</c><00:18:01.150><c> their</c><00:18:01.840><c> own</c><00:18:01.870><c> data</c><00:18:02.380><c> format</c><00:18:02.740><c> that</c>

00:18:02.880 --> 00:18:02.890 align:start position:0%
everybody has their own data format that
 

00:18:02.890 --> 00:18:05.280 align:start position:0%
everybody has their own data format that
they<00:18:03.010><c> like</c><00:18:03.340><c> to</c><00:18:03.430><c> use</c><00:18:03.610><c> and</c><00:18:03.940><c> so</c><00:18:04.450><c> I've</c><00:18:04.960><c> got</c><00:18:05.110><c> a</c><00:18:05.140><c> lot</c>

00:18:05.280 --> 00:18:05.290 align:start position:0%
they like to use and so I've got a lot
 

00:18:05.290 --> 00:18:06.900 align:start position:0%
they like to use and so I've got a lot
of<00:18:05.320><c> conversions</c><00:18:05.650><c> to</c><00:18:05.980><c> get</c><00:18:06.100><c> that</c><00:18:06.370><c> in</c><00:18:06.520><c> and</c><00:18:06.670><c> out</c><00:18:06.730><c> of</c>

00:18:06.900 --> 00:18:06.910 align:start position:0%
of conversions to get that in and out of
 

00:18:06.910 --> 00:18:09.780 align:start position:0%
of conversions to get that in and out of
what<00:18:07.120><c> the</c><00:18:07.570><c> image</c><00:18:07.690><c> likes</c><00:18:07.990><c> to</c><00:18:08.140><c> use</c><00:18:08.370><c> so</c><00:18:09.370><c> you</c><00:18:09.400><c> now</c>

00:18:09.780 --> 00:18:09.790 align:start position:0%
what the image likes to use so you now
 

00:18:09.790 --> 00:18:12.780 align:start position:0%
what the image likes to use so you now
can<00:18:10.300><c> handle</c><00:18:10.900><c> 24-bit</c><00:18:11.500><c> 8-bit</c><00:18:12.460><c> per</c><00:18:12.580><c> channel</c>

00:18:12.780 --> 00:18:12.790 align:start position:0%
can handle 24-bit 8-bit per channel
 

00:18:12.790 --> 00:18:17.670 align:start position:0%
can handle 24-bit 8-bit per channel
color<00:18:13.440><c> also</c><00:18:14.440><c> the</c><00:18:14.770><c> older</c><00:18:15.490><c> a</c><00:18:15.880><c> RGB</c><00:18:16.330><c> 155</c><00:18:16.900><c> v</c><00:18:17.200><c> and</c><00:18:17.410><c> RGB</c>

00:18:17.670 --> 00:18:17.680 align:start position:0%
color also the older a RGB 155 v and RGB
 

00:18:17.680 --> 00:18:23.340 align:start position:0%
color also the older a RGB 155 v and RGB
565<00:18:18.430><c> 16</c><00:18:18.850><c> bits</c><00:18:19.090><c> per</c><00:18:19.690><c> pixel</c><00:18:20.460><c> formats</c><00:18:21.460><c> we</c><00:18:21.760><c> do</c><00:18:22.350><c> also</c>

00:18:23.340 --> 00:18:23.350 align:start position:0%
565 16 bits per pixel formats we do also
 

00:18:23.350 --> 00:18:25.560 align:start position:0%
565 16 bits per pixel formats we do also
the<00:18:23.650><c> 16-bit</c><00:18:24.010><c> per</c><00:18:24.580><c> channel</c><00:18:24.790><c> integer</c><00:18:25.150><c> supports</c>

00:18:25.560 --> 00:18:25.570 align:start position:0%
the 16-bit per channel integer supports
 

00:18:25.570 --> 00:18:27.240 align:start position:0%
the 16-bit per channel integer supports
and<00:18:25.780><c> signed</c><00:18:26.020><c> and</c><00:18:26.200><c> unsigned</c><00:18:26.230><c> flavors</c><00:18:26.950><c> and</c>

00:18:27.240 --> 00:18:27.250 align:start position:0%
and signed and unsigned flavors and
 

00:18:27.250 --> 00:18:29.520 align:start position:0%
and signed and unsigned flavors and
we've<00:18:27.880><c> also</c><00:18:28.000><c> introduced</c><00:18:28.480><c> openexr</c><00:18:28.810><c> compliant</c>

00:18:29.520 --> 00:18:29.530 align:start position:0%
we've also introduced openexr compliant
 

00:18:29.530 --> 00:18:31.350 align:start position:0%
we've also introduced openexr compliant
16<00:18:29.800><c> bit</c><00:18:29.920><c> floating</c><00:18:30.160><c> point</c><00:18:30.360><c> conversion</c>

00:18:31.350 --> 00:18:31.360 align:start position:0%
16 bit floating point conversion
 

00:18:31.360 --> 00:18:32.940 align:start position:0%
16 bit floating point conversion
functions<00:18:31.960><c> in</c><00:18:32.140><c> case</c><00:18:32.290><c> you</c><00:18:32.410><c> need</c><00:18:32.530><c> to</c><00:18:32.560><c> work</c><00:18:32.740><c> with</c>

00:18:32.940 --> 00:18:32.950 align:start position:0%
functions in case you need to work with
 

00:18:32.950 --> 00:18:36.840 align:start position:0%
functions in case you need to work with
video<00:18:33.310><c> cards</c><00:18:33.670><c> that</c><00:18:33.820><c> use</c><00:18:34.300><c> those</c><00:18:34.540><c> things</c><00:18:35.850><c> also</c>

00:18:36.840 --> 00:18:36.850 align:start position:0%
video cards that use those things also
 

00:18:36.850 --> 00:18:38.370 align:start position:0%
video cards that use those things also
added<00:18:37.090><c> a</c><00:18:37.180><c> few</c><00:18:37.330><c> other</c><00:18:37.390><c> things</c><00:18:37.660><c> that</c><00:18:38.020><c> allow</c><00:18:38.200><c> you</c>

00:18:38.370 --> 00:18:38.380 align:start position:0%
added a few other things that allow you
 

00:18:38.380 --> 00:18:40.680 align:start position:0%
added a few other things that allow you
to<00:18:38.590><c> insert</c><00:18:38.950><c> channels</c><00:18:39.400><c> into</c><00:18:39.690><c> interleaved</c>

00:18:40.680 --> 00:18:40.690 align:start position:0%
to insert channels into interleaved
 

00:18:40.690 --> 00:18:42.330 align:start position:0%
to insert channels into interleaved
images<00:18:41.020><c> or</c><00:18:41.260><c> permute</c><00:18:41.560><c> channels</c><00:18:41.860><c> around</c><00:18:41.980><c> like</c>

00:18:42.330 --> 00:18:42.340 align:start position:0%
images or permute channels around like
 

00:18:42.340 --> 00:18:44.040 align:start position:0%
images or permute channels around like
so<00:18:42.460><c> it's</c><00:18:42.550><c> that</c><00:18:42.670><c> you</c><00:18:42.760><c> need</c><00:18:42.970><c> to</c><00:18:43.090><c> swap</c><00:18:43.690><c> around</c><00:18:43.900><c> an</c>

00:18:44.040 --> 00:18:44.050 align:start position:0%
so it's that you need to swap around an
 

00:18:44.050 --> 00:18:46.020 align:start position:0%
so it's that you need to swap around an
a<00:18:44.140><c> RGB</c><00:18:44.440><c> image</c><00:18:44.800><c> to</c><00:18:44.980><c> an</c><00:18:45.070><c> RGB</c><00:18:45.430><c> a</c><00:18:45.460><c> or</c><00:18:45.760><c> something</c>

00:18:46.020 --> 00:18:46.030 align:start position:0%
a RGB image to an RGB a or something
 

00:18:46.030 --> 00:18:47.880 align:start position:0%
a RGB image to an RGB a or something
like<00:18:46.120><c> that</c><00:18:46.210><c> so</c><00:18:47.080><c> those</c><00:18:47.350><c> things</c><00:18:47.530><c> leave</c><00:18:47.740><c> there</c>

00:18:47.880 --> 00:18:47.890 align:start position:0%
like that so those things leave there
 

00:18:47.890 --> 00:18:49.200 align:start position:0%
like that so those things leave there
they'll<00:18:48.070><c> be</c><00:18:48.160><c> fully</c><00:18:48.400><c> vectorize</c><00:18:48.790><c> and</c><00:18:49.090><c> they're</c>

00:18:49.200 --> 00:18:49.210 align:start position:0%
they'll be fully vectorize and they're
 

00:18:49.210 --> 00:18:51.950 align:start position:0%
they'll be fully vectorize and they're
pretty<00:18:49.510><c> much</c><00:18:49.630><c> operated</c><00:18:50.820><c> bandwidth-limited</c>

00:18:51.950 --> 00:18:51.960 align:start position:0%
pretty much operated bandwidth-limited
 

00:18:51.960 --> 00:18:57.500 align:start position:0%
pretty much operated bandwidth-limited
rates<00:18:54.780><c> also</c><00:18:55.780><c> added</c><00:18:56.050><c> color</c><00:18:56.200><c> space</c><00:18:56.470><c> transforms</c>

00:18:57.500 --> 00:18:57.510 align:start position:0%
rates also added color space transforms
 

00:18:57.510 --> 00:19:00.030 align:start position:0%
rates also added color space transforms
we<00:18:58.510><c> originally</c><00:18:59.290><c> didn't</c><00:18:59.560><c> put</c><00:18:59.710><c> these</c><00:18:59.860><c> in</c>

00:19:00.030 --> 00:19:00.040 align:start position:0%
we originally didn't put these in
 

00:19:00.040 --> 00:19:01.170 align:start position:0%
we originally didn't put these in
because<00:19:00.100><c> we</c><00:19:00.310><c> thought</c><00:19:00.460><c> we</c><00:19:00.610><c> would</c>

00:19:01.170 --> 00:19:01.180 align:start position:0%
because we thought we would
 

00:19:01.180 --> 00:19:02.940 align:start position:0%
because we thought we would
leave<00:19:01.540><c> these</c><00:19:01.750><c> up</c><00:19:01.900><c> to</c><00:19:02.020><c> color</c><00:19:02.200><c> sync</c><00:19:02.500><c> but</c><00:19:02.710><c> now</c>

00:19:02.940 --> 00:19:02.950 align:start position:0%
leave these up to color sync but now
 

00:19:02.950 --> 00:19:05.400 align:start position:0%
leave these up to color sync but now
color<00:19:03.250><c> sync</c><00:19:03.430><c> wants</c><00:19:03.640><c> to</c><00:19:03.760><c> use</c><00:19:04.480><c> our</c><00:19:04.630><c> codes</c><00:19:04.840><c> so</c><00:19:05.110><c> you</c>

00:19:05.400 --> 00:19:05.410 align:start position:0%
color sync wants to use our codes so you
 

00:19:05.410 --> 00:19:06.840 align:start position:0%
color sync wants to use our codes so you
have<00:19:05.530><c> them</c><00:19:05.680><c> in</c><00:19:05.710><c> there</c><00:19:05.980><c> we</c><00:19:06.520><c> have</c><00:19:06.670><c> matrix</c>

00:19:06.840 --> 00:19:06.850 align:start position:0%
have them in there we have matrix
 

00:19:06.850 --> 00:19:10.110 align:start position:0%
have them in there we have matrix
multiplications<00:19:07.950><c> so</c><00:19:08.950><c> saturated</c><00:19:09.610><c> clipping</c>

00:19:10.110 --> 00:19:10.120 align:start position:0%
multiplications so saturated clipping
 

00:19:10.120 --> 00:19:11.970 align:start position:0%
multiplications so saturated clipping
for<00:19:10.210><c> a</c><00:19:10.300><c> bit</c><00:19:10.510><c> of</c><00:19:10.630><c> course</c><00:19:10.810><c> for</c><00:19:11.530><c> to</c><00:19:11.710><c> prevent</c>

00:19:11.970 --> 00:19:11.980 align:start position:0%
for a bit of course for to prevent
 

00:19:11.980 --> 00:19:13.950 align:start position:0%
for a bit of course for to prevent
overflow<00:19:12.400><c> we</c><00:19:12.880><c> allow</c><00:19:13.270><c> you</c><00:19:13.300><c> to</c><00:19:13.480><c> put</c><00:19:13.750><c> in</c><00:19:13.870><c> an</c>

00:19:13.950 --> 00:19:13.960 align:start position:0%
overflow we allow you to put in an
 

00:19:13.960 --> 00:19:15.200 align:start position:0%
overflow we allow you to put in an
optional<00:19:14.110><c> pre</c><00:19:14.470><c> and</c><00:19:14.620><c> post</c><00:19:14.830><c> bias</c>

00:19:15.200 --> 00:19:15.210 align:start position:0%
optional pre and post bias
 

00:19:15.210 --> 00:19:16.950 align:start position:0%
optional pre and post bias
mathematically<00:19:16.210><c> the</c><00:19:16.330><c> pre</c><00:19:16.450><c> and</c><00:19:16.480><c> post</c><00:19:16.720><c> players</c>

00:19:16.950 --> 00:19:16.960 align:start position:0%
mathematically the pre and post players
 

00:19:16.960 --> 00:19:18.150 align:start position:0%
mathematically the pre and post players
are<00:19:17.110><c> the</c><00:19:17.170><c> same</c><00:19:17.200><c> but</c><00:19:17.590><c> it's</c><00:19:17.710><c> a</c><00:19:17.770><c> little</c><00:19:17.920><c> easier</c><00:19:18.130><c> to</c>

00:19:18.150 --> 00:19:18.160 align:start position:0%
are the same but it's a little easier to
 

00:19:18.160 --> 00:19:20.070 align:start position:0%
are the same but it's a little easier to
use<00:19:18.370><c> that</c><00:19:18.580><c> way</c><00:19:18.700><c> so</c><00:19:18.760><c> you</c><00:19:18.970><c> lit</c><00:19:19.150><c> put</c><00:19:19.750><c> that</c><00:19:19.900><c> feature</c>

00:19:20.070 --> 00:19:20.080 align:start position:0%
use that way so you lit put that feature
 

00:19:20.080 --> 00:19:24.330 align:start position:0%
use that way so you lit put that feature
in<00:19:20.430><c> and</c><00:19:22.320><c> again</c><00:19:23.320><c> like</c><00:19:23.530><c> the</c><00:19:23.560><c> convolution</c><00:19:24.190><c> this</c>

00:19:24.330 --> 00:19:24.340 align:start position:0%
in and again like the convolution this
 

00:19:24.340 --> 00:19:25.830 align:start position:0%
in and again like the convolution this
one<00:19:24.520><c> only</c><00:19:24.700><c> does</c><00:19:24.850><c> work</c><00:19:25.030><c> for</c><00:19:25.180><c> nonzero</c><00:19:25.510><c> element</c>

00:19:25.830 --> 00:19:25.840 align:start position:0%
one only does work for nonzero element
 

00:19:25.840 --> 00:19:27.510 align:start position:0%
one only does work for nonzero element
so<00:19:25.900><c> you</c><00:19:25.960><c> can</c><00:19:26.110><c> safely</c><00:19:26.260><c> pass</c><00:19:26.560><c> this</c><00:19:26.740><c> a</c><00:19:26.800><c> rather</c>

00:19:27.510 --> 00:19:27.520 align:start position:0%
so you can safely pass this a rather
 

00:19:27.520 --> 00:19:29.700 align:start position:0%
so you can safely pass this a rather
sparse<00:19:27.910><c> matrix</c><00:19:28.750><c> and</c><00:19:29.020><c> we'll</c><00:19:29.200><c> just</c><00:19:29.380><c> do</c><00:19:29.500><c> the</c><00:19:29.590><c> work</c>

00:19:29.700 --> 00:19:29.710 align:start position:0%
sparse matrix and we'll just do the work
 

00:19:29.710 --> 00:19:31.580 align:start position:0%
sparse matrix and we'll just do the work
that<00:19:29.860><c> we</c><00:19:29.920><c> need</c><00:19:29.950><c> to</c><00:19:30.100><c> in</c><00:19:30.820><c> order</c><00:19:30.970><c> to</c><00:19:31.060><c> do</c><00:19:31.180><c> that</c>

00:19:31.580 --> 00:19:31.590 align:start position:0%
that we need to in order to do that
 

00:19:31.590 --> 00:19:33.630 align:start position:0%
that we need to in order to do that
we're<00:19:32.590><c> also</c><00:19:32.680><c> introducing</c><00:19:33.220><c> a</c><00:19:33.280><c> whole</c><00:19:33.310><c> set</c><00:19:33.610><c> of</c>

00:19:33.630 --> 00:19:33.640 align:start position:0%
we're also introducing a whole set of
 

00:19:33.640 --> 00:19:36.030 align:start position:0%
we're also introducing a whole set of
gamma<00:19:33.940><c> correction</c><00:19:34.330><c> functions</c><00:19:34.750><c> which</c><00:19:35.040><c> these</c>

00:19:36.030 --> 00:19:36.040 align:start position:0%
gamma correction functions which these
 

00:19:36.040 --> 00:19:38.040 align:start position:0%
gamma correction functions which these
come<00:19:36.280><c> in</c><00:19:36.400><c> a</c><00:19:36.460><c> variety</c><00:19:36.580><c> of</c><00:19:36.820><c> flavors</c><00:19:37.210><c> you</c><00:19:37.570><c> can</c><00:19:37.780><c> get</c>

00:19:38.040 --> 00:19:38.050 align:start position:0%
come in a variety of flavors you can get
 

00:19:38.050 --> 00:19:40.320 align:start position:0%
come in a variety of flavors you can get
a<00:19:38.080><c> generic</c><00:19:38.440><c> power</c><00:19:38.740><c> curve</c><00:19:39.070><c> we</c><00:19:39.850><c> also</c><00:19:40.000><c> provide</c><00:19:40.300><c> a</c>

00:19:40.320 --> 00:19:40.330 align:start position:0%
a generic power curve we also provide a
 

00:19:40.330 --> 00:19:42.810 align:start position:0%
a generic power curve we also provide a
few<00:19:40.570><c> specialty</c><00:19:41.350><c> gammas</c><00:19:41.740><c> like</c><00:19:41.950><c> srgb</c><00:19:42.520><c> u</c><00:19:42.640><c> it's</c>

00:19:42.810 --> 00:19:42.820 align:start position:0%
few specialty gammas like srgb u it's
 

00:19:42.820 --> 00:19:46.650 align:start position:0%
few specialty gammas like srgb u it's
showing<00:19:43.030><c> exactly</c><00:19:43.300><c> generic</c><00:19:44.140><c> power</c><00:19:45.570><c> these</c><00:19:46.570><c> are</c>

00:19:46.650 --> 00:19:46.660 align:start position:0%
showing exactly generic power these are
 

00:19:46.660 --> 00:19:47.850 align:start position:0%
showing exactly generic power these are
available<00:19:46.900><c> in</c><00:19:47.110><c> two</c><00:19:47.290><c> different</c><00:19:47.410><c> formats</c>

00:19:47.850 --> 00:19:47.860 align:start position:0%
available in two different formats
 

00:19:47.860 --> 00:19:49.940 align:start position:0%
available in two different formats
they're<00:19:48.370><c> generally</c><00:19:48.790><c> floating-point</c><00:19:49.180><c> geared</c>

00:19:49.940 --> 00:19:49.950 align:start position:0%
they're generally floating-point geared
 

00:19:49.950 --> 00:19:53.970 align:start position:0%
they're generally floating-point geared
but<00:19:50.950><c> you</c><00:19:51.130><c> can</c><00:19:51.280><c> get</c><00:19:51.400><c> them</c><00:19:51.550><c> in</c><00:19:51.610><c> either</c><00:19:51.730><c> a</c><00:19:51.850><c> full</c><00:19:52.980><c> 24</c>

00:19:53.970 --> 00:19:53.980 align:start position:0%
but you can get them in either a full 24
 

00:19:53.980 --> 00:19:57.450 align:start position:0%
but you can get them in either a full 24
bit<00:19:54.790><c> or</c><00:19:55.030><c> a</c><00:19:55.120><c> 12</c><00:19:55.450><c> bit</c><00:19:55.570><c> precision</c><00:19:56.340><c> variants</c><00:19:57.340><c> and</c>

00:19:57.450 --> 00:19:57.460 align:start position:0%
bit or a 12 bit precision variants and
 

00:19:57.460 --> 00:19:58.920 align:start position:0%
bit or a 12 bit precision variants and
the<00:19:57.550><c> small</c><00:19:57.700><c> bit</c><00:19:57.880><c> precision</c><00:19:58.180><c> obviously</c><00:19:58.840><c> is</c>

00:19:58.920 --> 00:19:58.930 align:start position:0%
the small bit precision obviously is
 

00:19:58.930 --> 00:20:00.780 align:start position:0%
the small bit precision obviously is
appropriate<00:19:59.710><c> for</c><00:19:59.740><c> data</c><00:20:00.010><c> that</c><00:20:00.070><c> was</c><00:20:00.370><c> a</c><00:20:00.400><c> bit</c>

00:20:00.780 --> 00:20:00.790 align:start position:0%
appropriate for data that was a bit
 

00:20:00.790 --> 00:20:03.600 align:start position:0%
appropriate for data that was a bit
integer<00:20:01.540><c> data</c><00:20:01.720><c> to</c><00:20:01.840><c> begin</c><00:20:01.960><c> with</c><00:20:02.230><c> we</c><00:20:03.190><c> also</c><00:20:03.310><c> have</c>

00:20:03.600 --> 00:20:03.610 align:start position:0%
integer data to begin with we also have
 

00:20:03.610 --> 00:20:05.790 align:start position:0%
integer data to begin with we also have
a<00:20:03.970><c> few</c><00:20:04.150><c> functions</c><00:20:04.300><c> to</c><00:20:04.570><c> do</c><00:20:04.690><c> simultaneous</c><00:20:05.440><c> a</c><00:20:05.590><c> bit</c>

00:20:05.790 --> 00:20:05.800 align:start position:0%
a few functions to do simultaneous a bit
 

00:20:05.800 --> 00:20:08.220 align:start position:0%
a few functions to do simultaneous a bit
conversion<00:20:06.250><c> with</c><00:20:06.400><c> clipping</c><00:20:06.960><c> while</c><00:20:07.960><c> they're</c>

00:20:08.220 --> 00:20:08.230 align:start position:0%
conversion with clipping while they're
 

00:20:08.230 --> 00:20:11.520 align:start position:0%
conversion with clipping while they're
doing<00:20:08.380><c> the</c><00:20:08.890><c> gamma</c><00:20:09.070><c> correction</c><00:20:09.430><c> and</c><00:20:10.260><c> we</c><00:20:11.260><c> also</c>

00:20:11.520 --> 00:20:11.530 align:start position:0%
doing the gamma correction and we also
 

00:20:11.530 --> 00:20:13.080 align:start position:0%
doing the gamma correction and we also
applied<00:20:11.890><c> providing</c><00:20:12.400><c> interpolated</c><00:20:12.790><c> look-up</c>

00:20:13.080 --> 00:20:13.090 align:start position:0%
applied providing interpolated look-up
 

00:20:13.090 --> 00:20:15.720 align:start position:0%
applied providing interpolated look-up
tables<00:20:13.120><c> stuff</c><00:20:13.660><c> for</c><00:20:13.960><c> cases</c><00:20:14.830><c> where</c><00:20:14.980><c> your</c><00:20:15.160><c> gamma</c>

00:20:15.720 --> 00:20:15.730 align:start position:0%
tables stuff for cases where your gamma
 

00:20:15.730 --> 00:20:17.430 align:start position:0%
tables stuff for cases where your gamma
curve<00:20:15.940><c> is</c><00:20:16.090><c> not</c><00:20:16.210><c> nicely</c><00:20:16.600><c> described</c><00:20:17.020><c> by</c><00:20:17.140><c> a</c><00:20:17.170><c> power</c>

00:20:17.430 --> 00:20:17.440 align:start position:0%
curve is not nicely described by a power
 

00:20:17.440 --> 00:20:20.760 align:start position:0%
curve is not nicely described by a power
function<00:20:18.390><c> so</c><00:20:19.390><c> I'd</c><00:20:19.540><c> like</c><00:20:19.660><c> to</c><00:20:19.720><c> invite</c><00:20:20.410><c> Steve</c>

00:20:20.760 --> 00:20:20.770 align:start position:0%
function so I'd like to invite Steve
 

00:20:20.770 --> 00:20:23.460 align:start position:0%
function so I'd like to invite Steve
Peters<00:20:21.700><c> up</c><00:20:21.940><c> to</c><00:20:22.330><c> talk</c><00:20:22.780><c> about</c><00:20:22.810><c> the</c><00:20:23.140><c> numeric</c>

00:20:23.460 --> 00:20:23.470 align:start position:0%
Peters up to talk about the numeric
 

00:20:23.470 --> 00:20:30.390 align:start position:0%
Peters up to talk about the numeric
improvements<00:20:23.920><c> for</c><00:20:24.040><c> tiger</c>

00:20:30.390 --> 00:20:30.400 align:start position:0%
 
 

00:20:30.400 --> 00:20:35.700 align:start position:0%
 
all<00:20:30.610><c> right</c><00:20:30.730><c> factory</c><00:20:32.970><c> all</c><00:20:33.970><c> right</c><00:20:34.470><c> I'm</c><00:20:35.470><c> going</c><00:20:35.620><c> to</c>

00:20:35.700 --> 00:20:35.710 align:start position:0%
all right factory all right I'm going to
 

00:20:35.710 --> 00:20:38.040 align:start position:0%
all right factory all right I'm going to
take<00:20:35.830><c> some</c><00:20:36.040><c> time</c><00:20:36.250><c> this</c><00:20:36.430><c> afternoon</c><00:20:36.490><c> to</c><00:20:37.050><c> present</c>

00:20:38.040 --> 00:20:38.050 align:start position:0%
take some time this afternoon to present
 

00:20:38.050 --> 00:20:39.990 align:start position:0%
take some time this afternoon to present
the<00:20:38.170><c> credentials</c><00:20:38.740><c> of</c><00:20:38.950><c> our</c><00:20:39.100><c> math</c><00:20:39.370><c> libraries</c>

00:20:39.990 --> 00:20:40.000 align:start position:0%
the credentials of our math libraries
 

00:20:40.000 --> 00:20:42.390 align:start position:0%
the credentials of our math libraries
perhaps<00:20:40.450><c> some</c><00:20:40.810><c> of</c><00:20:40.930><c> you</c><00:20:41.020><c> have</c><00:20:41.050><c> not</c><00:20:41.410><c> used</c><00:20:42.280><c> them</c>

00:20:42.390 --> 00:20:42.400 align:start position:0%
perhaps some of you have not used them
 

00:20:42.400 --> 00:20:43.410 align:start position:0%
perhaps some of you have not used them
before<00:20:42.700><c> and</c><00:20:42.850><c> would</c><00:20:42.940><c> like</c><00:20:43.090><c> to</c><00:20:43.120><c> know</c><00:20:43.300><c> a</c><00:20:43.330><c> bit</c>

00:20:43.410 --> 00:20:43.420 align:start position:0%
before and would like to know a bit
 

00:20:43.420 --> 00:20:45.930 align:start position:0%
before and would like to know a bit
about<00:20:43.570><c> the</c><00:20:43.840><c> motivation</c><00:20:43.990><c> and</c><00:20:44.640><c> also</c><00:20:45.640><c> spend</c><00:20:45.880><c> some</c>

00:20:45.930 --> 00:20:45.940 align:start position:0%
about the motivation and also spend some
 

00:20:45.940 --> 00:20:50.690 align:start position:0%
about the motivation and also spend some
time<00:20:46.210><c> with</c><00:20:46.390><c> performance</c><00:20:47.250><c> Hey</c><00:20:48.510><c> excellent</c><00:20:49.530><c> so</c>

00:20:50.690 --> 00:20:50.700 align:start position:0%
time with performance Hey excellent so
 

00:20:50.700 --> 00:20:53.070 align:start position:0%
time with performance Hey excellent so
you<00:20:51.700><c> know</c><00:20:51.790><c> job</c><00:20:52.240><c> number</c><00:20:52.450><c> one</c><00:20:52.600><c> for</c><00:20:52.780><c> us</c><00:20:52.810><c> is</c>

00:20:53.070 --> 00:20:53.080 align:start position:0%
you know job number one for us is
 

00:20:53.080 --> 00:20:54.600 align:start position:0%
you know job number one for us is
conformance<00:20:53.710><c> to</c><00:20:53.800><c> make</c><00:20:53.950><c> porting</c><00:20:54.430><c> your</c>

00:20:54.600 --> 00:20:54.610 align:start position:0%
conformance to make porting your
 

00:20:54.610 --> 00:20:56.720 align:start position:0%
conformance to make porting your
applications<00:20:55.330><c> building</c><00:20:55.900><c> your</c><00:20:55.990><c> applications</c>

00:20:56.720 --> 00:20:56.730 align:start position:0%
applications building your applications
 

00:20:56.730 --> 00:21:00.090 align:start position:0%
applications building your applications
correspond<00:20:57.730><c> to</c><00:20:57.880><c> experience</c><00:20:58.450><c> you've</c><00:20:59.380><c> learned</c>

00:21:00.090 --> 00:21:00.100 align:start position:0%
correspond to experience you've learned
 

00:21:00.100 --> 00:21:02.100 align:start position:0%
correspond to experience you've learned
on<00:21:00.190><c> other</c><00:21:00.370><c> platforms</c><00:21:01.030><c> learn</c><00:21:01.930><c> to</c><00:21:02.050><c> the</c>

00:21:02.100 --> 00:21:02.110 align:start position:0%
on other platforms learn to the
 

00:21:02.110 --> 00:21:04.140 align:start position:0%
on other platforms learn to the
classroom<00:21:02.590><c> learn</c><00:21:03.520><c> from</c><00:21:03.730><c> reading</c><00:21:03.940><c> the</c>

00:21:04.140 --> 00:21:04.150 align:start position:0%
classroom learn from reading the
 

00:21:04.150 --> 00:21:07.230 align:start position:0%
classroom learn from reading the
standards<00:21:04.570><c> who</c><00:21:04.720><c> does</c><00:21:04.930><c> it</c><00:21:05.110><c> anymore</c><00:21:05.320><c> and</c><00:21:06.010><c> at</c><00:21:06.760><c> the</c>

00:21:07.230 --> 00:21:07.240 align:start position:0%
standards who does it anymore and at the
 

00:21:07.240 --> 00:21:11.430 align:start position:0%
standards who does it anymore and at the
base<00:21:07.450><c> we</c><00:21:08.200><c> have</c><00:21:09.510><c> we're</c><00:21:10.510><c> delivering</c><00:21:10.870><c> platforms</c>

00:21:11.430 --> 00:21:11.440 align:start position:0%
base we have we're delivering platforms
 

00:21:11.440 --> 00:21:14.580 align:start position:0%
base we have we're delivering platforms
based<00:21:11.770><c> on</c><00:21:11.980><c> G</c><00:21:12.190><c> 3G</c><00:21:12.550><c> 4G</c><00:21:12.790><c> v</c><00:21:13.210><c> chips</c><00:21:13.510><c> all</c><00:21:13.810><c> of</c><00:21:14.410><c> which</c>

00:21:14.580 --> 00:21:14.590 align:start position:0%
based on G 3G 4G v chips all of which
 

00:21:14.590 --> 00:21:16.770 align:start position:0%
based on G 3G 4G v chips all of which
have<00:21:14.800><c> I</c><00:21:14.980><c> Triple</c><00:21:15.340><c> E</c><00:21:15.430><c> 754</c><00:21:15.780><c> compliant</c>

00:21:16.770 --> 00:21:16.780 align:start position:0%
have I Triple E 754 compliant
 

00:21:16.780 --> 00:21:18.750 align:start position:0%
have I Triple E 754 compliant
floating-point<00:21:17.110><c> arithmetic</c><00:21:17.350><c> both</c><00:21:17.890><c> single</c>

00:21:18.750 --> 00:21:18.760 align:start position:0%
floating-point arithmetic both single
 

00:21:18.760 --> 00:21:23.790 align:start position:0%
floating-point arithmetic both single
and<00:21:18.940><c> double</c><00:21:21.510><c> when</c><00:21:22.510><c> we</c><00:21:22.630><c> move</c><00:21:22.780><c> up</c><00:21:23.020><c> one</c><00:21:23.230><c> level</c><00:21:23.440><c> to</c>

00:21:23.790 --> 00:21:23.800 align:start position:0%
and double when we move up one level to
 

00:21:23.800 --> 00:21:25.710 align:start position:0%
and double when we move up one level to
the<00:21:23.920><c> elementary</c><00:21:24.610><c> functions</c><00:21:24.970><c> the</c><00:21:25.090><c> basic</c><00:21:25.510><c> math</c>

00:21:25.710 --> 00:21:25.720 align:start position:0%
the elementary functions the basic math
 

00:21:25.720 --> 00:21:28.830 align:start position:0%
the elementary functions the basic math
libraries<00:21:26.290><c> these</c><00:21:27.160><c> are</c><00:21:27.280><c> also</c><00:21:27.840><c> compliant</c>

00:21:28.830 --> 00:21:28.840 align:start position:0%
libraries these are also compliant
 

00:21:28.840 --> 00:21:31.080 align:start position:0%
libraries these are also compliant
compliant<00:21:29.170><c> with</c><00:21:29.260><c> the</c><00:21:29.320><c> c99</c><00:21:29.890><c> standard</c><00:21:29.920><c> all</c><00:21:30.670><c> the</c>

00:21:31.080 --> 00:21:31.090 align:start position:0%
compliant with the c99 standard all the
 

00:21:31.090 --> 00:21:34.410 align:start position:0%
compliant with the c99 standard all the
required<00:21:31.450><c> c99</c><00:21:32.080><c> api's</c><00:21:32.920><c> are</c><00:21:33.100><c> present</c><00:21:33.430><c> for</c>

00:21:34.410 --> 00:21:34.420 align:start position:0%
required c99 api's are present for
 

00:21:34.420 --> 00:21:37.200 align:start position:0%
required c99 api's are present for
complex<00:21:35.260><c> and</c><00:21:35.980><c> long</c><00:21:36.250><c> double</c><00:21:36.550><c> as</c><00:21:36.670><c> well</c><00:21:36.850><c> as</c><00:21:37.060><c> we</c>

00:21:37.200 --> 00:21:37.210 align:start position:0%
complex and long double as well as we
 

00:21:37.210 --> 00:21:40.850 align:start position:0%
complex and long double as well as we
come<00:21:37.660><c> into</c><00:21:37.810><c> the</c><00:21:37.900><c> Tiger</c><00:21:38.290><c> world</c>

00:21:40.850 --> 00:21:40.860 align:start position:0%
 
 

00:21:40.860 --> 00:21:46.320 align:start position:0%
 
you<00:21:41.860><c> know</c><00:21:41.950><c> I'm</c><00:21:42.160><c> gonna</c><00:21:42.340><c> have</c><00:21:42.520><c> to</c><00:21:42.610><c> use</c><00:21:42.640><c> these</c><00:21:45.330><c> we</c>

00:21:46.320 --> 00:21:46.330 align:start position:0%
you know I'm gonna have to use these we
 

00:21:46.330 --> 00:21:48.510 align:start position:0%
you know I'm gonna have to use these we
build<00:21:46.570><c> our</c><00:21:46.780><c> linear</c><00:21:47.140><c> algebra</c><00:21:47.740><c> the</c><00:21:47.770><c> blahs</c><00:21:48.160><c> the</c>

00:21:48.510 --> 00:21:48.520 align:start position:0%
build our linear algebra the blahs the
 

00:21:48.520 --> 00:21:50.760 align:start position:0%
build our linear algebra the blahs the
basic<00:21:48.820><c> linear</c><00:21:49.000><c> algebra</c><00:21:49.180><c> subroutines</c><00:21:49.770><c> from</c>

00:21:50.760 --> 00:21:50.770 align:start position:0%
basic linear algebra subroutines from
 

00:21:50.770 --> 00:21:53.820 align:start position:0%
basic linear algebra subroutines from
atlas<00:21:51.280><c> the</c><00:21:51.780><c> widely</c><00:21:52.780><c> respected</c><00:21:53.050><c> open-source</c>

00:21:53.820 --> 00:21:53.830 align:start position:0%
atlas the widely respected open-source
 

00:21:53.830 --> 00:21:55.710 align:start position:0%
atlas the widely respected open-source
package<00:21:54.070><c> that</c><00:21:54.550><c> is</c><00:21:54.670><c> automatically</c><00:21:55.360><c> tuned</c>

00:21:55.710 --> 00:21:55.720 align:start position:0%
package that is automatically tuned
 

00:21:55.720 --> 00:21:58.800 align:start position:0%
package that is automatically tuned
linear<00:21:56.140><c> algebra</c><00:21:56.590><c> software</c><00:21:57.210><c> we</c><00:21:58.210><c> offer</c><00:21:58.420><c> the</c>

00:21:58.800 --> 00:21:58.810 align:start position:0%
linear algebra software we offer the
 

00:21:58.810 --> 00:22:02.310 align:start position:0%
linear algebra software we offer the
full<00:21:59.260><c> panoply</c><00:21:59.770><c> of</c><00:22:00.180><c> api's</c><00:22:01.180><c> in</c><00:22:01.510><c> float</c><00:22:01.840><c> double</c>

00:22:02.310 --> 00:22:02.320 align:start position:0%
full panoply of api's in float double
 

00:22:02.320 --> 00:22:06.930 align:start position:0%
full panoply of api's in float double
complex<00:22:03.070><c> complex</c><00:22:04.060><c> double</c><00:22:04.300><c> and</c><00:22:05.460><c> similarly</c><00:22:06.460><c> for</c>

00:22:06.930 --> 00:22:06.940 align:start position:0%
complex complex double and similarly for
 

00:22:06.940 --> 00:22:10.100 align:start position:0%
complex complex double and similarly for
the<00:22:07.290><c> gold</c><00:22:08.290><c> standard</c><00:22:08.890><c> of</c><00:22:09.100><c> numerical</c><00:22:09.550><c> computing</c>

00:22:10.100 --> 00:22:10.110 align:start position:0%
the gold standard of numerical computing
 

00:22:10.110 --> 00:22:13.800 align:start position:0%
the gold standard of numerical computing
l<00:22:11.110><c> apec</c><00:22:11.500><c> you</c><00:22:12.010><c> know</c><00:22:12.130><c> all</c><00:22:12.430><c> routines</c><00:22:13.210><c> folk</c><00:22:13.450><c> double</c>

00:22:13.800 --> 00:22:13.810 align:start position:0%
l apec you know all routines folk double
 

00:22:13.810 --> 00:22:16.890 align:start position:0%
l apec you know all routines folk double
complex<00:22:14.590><c> complex</c><00:22:15.130><c> double</c><00:22:15.390><c> entry</c><00:22:16.390><c> points</c><00:22:16.750><c> for</c>

00:22:16.890 --> 00:22:16.900 align:start position:0%
complex complex double entry points for
 

00:22:16.900 --> 00:22:24.070 align:start position:0%
complex complex double entry points for
both<00:22:17.050><c> C</c><00:22:17.410><c> and</c><00:22:17.710><c> Fortran</c>

00:22:24.070 --> 00:22:24.080 align:start position:0%
 
 

00:22:24.080 --> 00:22:27.620 align:start position:0%
 
after<00:22:25.080><c> conformance</c><00:22:25.880><c> we're</c><00:22:26.880><c> really</c><00:22:27.120><c> concerned</c>

00:22:27.620 --> 00:22:27.630 align:start position:0%
after conformance we're really concerned
 

00:22:27.630 --> 00:22:31.070 align:start position:0%
after conformance we're really concerned
with<00:22:27.840><c> performance</c><00:22:28.590><c> and</c><00:22:29.029><c> the</c><00:22:30.029><c> flagship</c><00:22:30.929><c> of</c>

00:22:31.070 --> 00:22:31.080 align:start position:0%
with performance and the flagship of
 

00:22:31.080 --> 00:22:33.380 align:start position:0%
with performance and the flagship of
performance<00:22:31.590><c> now</c><00:22:31.710><c> at</c><00:22:31.860><c> Apple</c><00:22:32.159><c> is</c><00:22:32.390><c> the</c>

00:22:33.380 --> 00:22:33.390 align:start position:0%
performance now at Apple is the
 

00:22:33.390 --> 00:22:37.120 align:start position:0%
performance now at Apple is the
marvelous<00:22:33.600><c> g5</c><00:22:34.080><c> CPU</c><00:22:34.529><c> the</c><00:22:35.220><c> nine</c><00:22:35.370><c> PowerPC</c><00:22:36.059><c> 970</c>

00:22:37.120 --> 00:22:37.130 align:start position:0%
marvelous g5 CPU the nine PowerPC 970
 

00:22:37.130 --> 00:22:40.899 align:start position:0%
marvelous g5 CPU the nine PowerPC 970
which<00:22:38.130><c> offers</c><00:22:38.490><c> dual</c><00:22:38.700><c> floating-point</c><00:22:39.210><c> cores</c>

00:22:40.899 --> 00:22:40.909 align:start position:0%
which offers dual floating-point cores
 

00:22:40.909 --> 00:22:43.970 align:start position:0%
which offers dual floating-point cores
my<00:22:41.909><c> recollection</c><00:22:42.419><c> the</c><00:22:42.450><c> first</c><00:22:42.720><c> in</c><00:22:42.980><c> Apple's</c>

00:22:43.970 --> 00:22:43.980 align:start position:0%
my recollection the first in Apple's
 

00:22:43.980 --> 00:22:47.450 align:start position:0%
my recollection the first in Apple's
line<00:22:44.220><c> and</c><00:22:44.490><c> has</c><00:22:45.480><c> given</c><00:22:45.840><c> us</c><00:22:45.960><c> really</c><00:22:46.460><c> stellar</c>

00:22:47.450 --> 00:22:47.460 align:start position:0%
line and has given us really stellar
 

00:22:47.460 --> 00:22:52.399 align:start position:0%
line and has given us really stellar
performance<00:22:48.380><c> so</c><00:22:49.380><c> on</c><00:22:49.559><c> each</c><00:22:50.090><c> 970</c><00:22:51.090><c> CPU</c><00:22:51.570><c> we</c><00:22:52.110><c> find</c>

00:22:52.399 --> 00:22:52.409 align:start position:0%
performance so on each 970 CPU we find
 

00:22:52.409 --> 00:22:56.960 align:start position:0%
performance so on each 970 CPU we find
two<00:22:54.139><c> floating-point</c><00:22:55.139><c> cores</c><00:22:55.730><c> capable</c><00:22:56.730><c> of</c>

00:22:56.960 --> 00:22:56.970 align:start position:0%
two floating-point cores capable of
 

00:22:56.970 --> 00:22:58.970 align:start position:0%
two floating-point cores capable of
doing<00:22:57.450><c> double</c><00:22:57.809><c> precision</c><00:22:58.019><c> I</c><00:22:58.200><c> Triple</c><00:22:58.529><c> E</c><00:22:58.590><c> single</c>

00:22:58.970 --> 00:22:58.980 align:start position:0%
doing double precision I Triple E single
 

00:22:58.980 --> 00:23:02.690 align:start position:0%
doing double precision I Triple E single
precision<00:22:59.190><c> I</c><00:22:59.370><c> Triple</c><00:22:59.669><c> E</c><00:23:00.440><c> on</c><00:23:01.490><c> any</c><00:23:02.490><c> machine</c>

00:23:02.690 --> 00:23:02.700 align:start position:0%
precision I Triple E on any machine
 

00:23:02.700 --> 00:23:05.930 align:start position:0%
precision I Triple E on any machine
cycle<00:23:03.389><c> both</c><00:23:03.870><c> of</c><00:23:04.080><c> those</c><00:23:04.169><c> units</c><00:23:04.500><c> can</c><00:23:04.679><c> be</c><00:23:04.940><c> pressed</c>

00:23:05.930 --> 00:23:05.940 align:start position:0%
cycle both of those units can be pressed
 

00:23:05.940 --> 00:23:07.549 align:start position:0%
cycle both of those units can be pressed
into<00:23:06.120><c> action</c><00:23:06.510><c> we</c><00:23:06.659><c> can</c><00:23:06.779><c> start</c><00:23:07.049><c> a</c><00:23:07.169><c> floating</c>

00:23:07.549 --> 00:23:07.559 align:start position:0%
into action we can start a floating
 

00:23:07.559 --> 00:23:10.700 align:start position:0%
into action we can start a floating
point<00:23:07.740><c> instruction</c><00:23:08.190><c> down</c><00:23:08.370><c> each</c><00:23:08.580><c> pipe</c><00:23:08.899><c> on</c><00:23:09.899><c> both</c>

00:23:10.700 --> 00:23:10.710 align:start position:0%
point instruction down each pipe on both
 

00:23:10.710 --> 00:23:15.830 align:start position:0%
point instruction down each pipe on both
pipes<00:23:11.039><c> in</c><00:23:11.309><c> a</c><00:23:11.429><c> single</c><00:23:11.730><c> cycle</c><00:23:14.269><c> all</c><00:23:15.269><c> the</c><00:23:15.510><c> basic</c>

00:23:15.830 --> 00:23:15.840 align:start position:0%
pipes in a single cycle all the basic
 

00:23:15.840 --> 00:23:17.810 align:start position:0%
pipes in a single cycle all the basic
arithmetic<00:23:16.289><c> operations</c><00:23:17.010><c> ahead</c><00:23:17.279><c> multiply</c>

00:23:17.810 --> 00:23:17.820 align:start position:0%
arithmetic operations ahead multiply
 

00:23:17.820 --> 00:23:20.930 align:start position:0%
arithmetic operations ahead multiply
subtract<00:23:18.720><c> and</c><00:23:18.870><c> divide</c><00:23:18.899><c> are</c><00:23:19.559><c> present</c><00:23:20.070><c> we</c><00:23:20.730><c> also</c>

00:23:20.930 --> 00:23:20.940 align:start position:0%
subtract and divide are present we also
 

00:23:20.940 --> 00:23:23.210 align:start position:0%
subtract and divide are present we also
get<00:23:21.240><c> Hardware</c><00:23:21.630><c> square</c><00:23:21.960><c> root</c><00:23:22.200><c> in</c><00:23:22.409><c> the</c><00:23:22.649><c> PowerPC</c>

00:23:23.210 --> 00:23:23.220 align:start position:0%
get Hardware square root in the PowerPC
 

00:23:23.220 --> 00:23:30.560 align:start position:0%
get Hardware square root in the PowerPC
970<00:23:23.429><c> that's</c><00:23:23.970><c> a</c><00:23:24.120><c> real</c><00:23:24.510><c> boon</c><00:23:24.720><c> to</c><00:23:24.929><c> us</c><00:23:27.950><c> and</c><00:23:29.570><c> another</c>

00:23:30.560 --> 00:23:30.570 align:start position:0%
970 that's a real boon to us and another
 

00:23:30.570 --> 00:23:31.700 align:start position:0%
970 that's a real boon to us and another
class<00:23:30.779><c> of</c><00:23:30.960><c> instructions</c><00:23:31.409><c> that</c><00:23:31.470><c> have</c><00:23:31.649><c> been</c>

00:23:31.700 --> 00:23:31.710 align:start position:0%
class of instructions that have been
 

00:23:31.710 --> 00:23:35.149 align:start position:0%
class of instructions that have been
present<00:23:32.639><c> in</c><00:23:32.880><c> g4</c><00:23:33.720><c> and</c><00:23:33.870><c> now</c><00:23:33.990><c> as</c><00:23:34.500><c> well</c><00:23:34.710><c> in</c><00:23:34.830><c> g5</c>

00:23:35.149 --> 00:23:35.159 align:start position:0%
present in g4 and now as well in g5
 

00:23:35.159 --> 00:23:37.250 align:start position:0%
present in g4 and now as well in g5
called<00:23:35.429><c> the</c><00:23:35.519><c> fused</c><00:23:35.850><c> multiply</c><00:23:36.330><c> add</c><00:23:36.539><c> fused</c>

00:23:37.250 --> 00:23:37.260 align:start position:0%
called the fused multiply add fused
 

00:23:37.260 --> 00:23:40.480 align:start position:0%
called the fused multiply add fused
multiply<00:23:37.649><c> add</c><00:23:37.830><c> takes</c><00:23:38.330><c> three</c><00:23:39.330><c> operands</c>

00:23:40.480 --> 00:23:40.490 align:start position:0%
multiply add takes three operands
 

00:23:40.490 --> 00:23:42.799 align:start position:0%
multiply add takes three operands
multiplies<00:23:41.490><c> the</c><00:23:41.639><c> first</c><00:23:41.820><c> two</c><00:23:41.940><c> together</c><00:23:42.059><c> adds</c>

00:23:42.799 --> 00:23:42.809 align:start position:0%
multiplies the first two together adds
 

00:23:42.809 --> 00:23:46.070 align:start position:0%
multiplies the first two together adds
it<00:23:42.990><c> to</c><00:23:43.080><c> the</c><00:23:43.169><c> third</c><00:23:43.350><c> all</c><00:23:43.830><c> in</c><00:23:44.570><c> the</c><00:23:45.570><c> course</c><00:23:45.779><c> of</c><00:23:45.870><c> one</c>

00:23:46.070 --> 00:23:46.080 align:start position:0%
it to the third all in the course of one
 

00:23:46.080 --> 00:23:51.200 align:start position:0%
it to the third all in the course of one
instruction<00:23:46.700><c> so</c><00:23:47.700><c> this</c><00:23:47.850><c> ends</c><00:23:48.120><c> up</c><00:23:48.210><c> being</c><00:23:49.519><c> a</c><00:23:50.519><c> key</c>

00:23:51.200 --> 00:23:51.210 align:start position:0%
instruction so this ends up being a key
 

00:23:51.210 --> 00:23:53.779 align:start position:0%
instruction so this ends up being a key
important<00:23:51.870><c> operation</c><00:23:52.669><c> fundamental</c><00:23:53.669><c> to</c>

00:23:53.779 --> 00:23:53.789 align:start position:0%
important operation fundamental to
 

00:23:53.789 --> 00:23:55.879 align:start position:0%
important operation fundamental to
linear<00:23:54.210><c> algebra</c><00:23:54.480><c> the</c><00:23:54.899><c> dot</c><00:23:55.139><c> product</c><00:23:55.649><c> which</c><00:23:55.769><c> is</c>

00:23:55.879 --> 00:23:55.889 align:start position:0%
linear algebra the dot product which is
 

00:23:55.889 --> 00:23:58.700 align:start position:0%
linear algebra the dot product which is
essentially<00:23:56.480><c> multiply</c><00:23:57.480><c> and</c><00:23:57.779><c> accumulate</c>

00:23:58.700 --> 00:23:58.710 align:start position:0%
essentially multiply and accumulate
 

00:23:58.710 --> 00:23:59.990 align:start position:0%
essentially multiply and accumulate
multiply<00:23:59.159><c> accumulate</c><00:23:59.610><c> multiply</c><00:23:59.940><c> to</c>

00:23:59.990 --> 00:24:00.000 align:start position:0%
multiply accumulate multiply to
 

00:24:00.000 --> 00:24:02.899 align:start position:0%
multiply accumulate multiply to
accumulate<00:24:00.470><c> it's</c><00:24:01.470><c> fundamental</c><00:24:02.010><c> to</c><00:24:02.130><c> the</c><00:24:02.279><c> FFT</c>

00:24:02.899 --> 00:24:02.909 align:start position:0%
accumulate it's fundamental to the FFT
 

00:24:02.909 --> 00:24:05.629 align:start position:0%
accumulate it's fundamental to the FFT
in<00:24:03.149><c> much</c><00:24:03.570><c> the</c><00:24:03.600><c> same</c><00:24:03.720><c> way</c><00:24:03.929><c> if</c><00:24:04.470><c> you're</c><00:24:05.309><c> doing</c><00:24:05.490><c> a</c>

00:24:05.629 --> 00:24:05.639 align:start position:0%
in much the same way if you're doing a
 

00:24:05.639 --> 00:24:08.090 align:start position:0%
in much the same way if you're doing a
function<00:24:06.299><c> evaluation</c><00:24:06.960><c> by</c><00:24:07.230><c> say</c><00:24:07.529><c> polynomial</c>

00:24:08.090 --> 00:24:08.100 align:start position:0%
function evaluation by say polynomial
 

00:24:08.100 --> 00:24:09.710 align:start position:0%
function evaluation by say polynomial
approximation<00:24:08.549><c> you'll</c><00:24:08.940><c> probably</c><00:24:09.360><c> want</c><00:24:09.690><c> to</c>

00:24:09.710 --> 00:24:09.720 align:start position:0%
approximation you'll probably want to
 

00:24:09.720 --> 00:24:11.149 align:start position:0%
approximation you'll probably want to
use<00:24:09.779><c> Horner's</c><00:24:10.289><c> rule</c><00:24:10.529><c> if</c><00:24:10.710><c> you</c><00:24:10.769><c> think</c><00:24:11.010><c> a</c><00:24:11.070><c> little</c>

00:24:11.149 --> 00:24:11.159 align:start position:0%
use Horner's rule if you think a little
 

00:24:11.159 --> 00:24:13.159 align:start position:0%
use Horner's rule if you think a little
bit<00:24:11.279><c> about</c><00:24:11.490><c> the</c><00:24:11.669><c> way</c><00:24:11.760><c> Horner's</c><00:24:12.179><c> rule</c><00:24:12.389><c> works</c>

00:24:13.159 --> 00:24:13.169 align:start position:0%
bit about the way Horner's rule works
 

00:24:13.169 --> 00:24:16.039 align:start position:0%
bit about the way Horner's rule works
out<00:24:13.409><c> it's</c><00:24:14.059><c> essentially</c><00:24:15.059><c> a</c><00:24:15.090><c> fuse</c><00:24:15.419><c> multiply</c><00:24:15.870><c> add</c>

00:24:16.039 --> 00:24:16.049 align:start position:0%
out it's essentially a fuse multiply add
 

00:24:16.049 --> 00:24:19.820 align:start position:0%
out it's essentially a fuse multiply add
win<00:24:16.580><c> and</c><00:24:17.600><c> at</c><00:24:18.600><c> the</c><00:24:18.690><c> bottom</c><00:24:18.870><c> line</c><00:24:19.200><c> we</c><00:24:19.559><c> get</c><00:24:19.679><c> to</c>

00:24:19.820 --> 00:24:19.830 align:start position:0%
win and at the bottom line we get to
 

00:24:19.830 --> 00:24:21.440 align:start position:0%
win and at the bottom line we get to
count<00:24:20.100><c> two</c><00:24:20.340><c> floating-point</c><00:24:20.700><c> operations</c><00:24:21.389><c> per</c>

00:24:21.440 --> 00:24:21.450 align:start position:0%
count two floating-point operations per
 

00:24:21.450 --> 00:24:24.019 align:start position:0%
count two floating-point operations per
fuse<00:24:21.899><c> multiply</c><00:24:22.350><c> add</c><00:24:22.590><c> so</c><00:24:23.340><c> on</c><00:24:23.490><c> a</c><00:24:23.519><c> machine</c><00:24:23.700><c> with</c>

00:24:24.019 --> 00:24:24.029 align:start position:0%
fuse multiply add so on a machine with
 

00:24:24.029 --> 00:24:26.090 align:start position:0%
fuse multiply add so on a machine with
two<00:24:24.059><c> floating-point</c><00:24:24.659><c> cores</c><00:24:25.110><c> we</c><00:24:25.529><c> get</c><00:24:25.679><c> four</c>

00:24:26.090 --> 00:24:26.100 align:start position:0%
two floating-point cores we get four
 

00:24:26.100 --> 00:24:31.220 align:start position:0%
two floating-point cores we get four
flops<00:24:26.490><c> per</c><00:24:26.880><c> cycle</c><00:24:28.970><c> so</c><00:24:29.970><c> let's</c><00:24:30.120><c> see</c><00:24:30.240><c> four</c><00:24:30.960><c> flops</c>

00:24:31.220 --> 00:24:31.230 align:start position:0%
flops per cycle so let's see four flops
 

00:24:31.230 --> 00:24:33.200 align:start position:0%
flops per cycle so let's see four flops
per<00:24:31.320><c> cycle</c><00:24:31.649><c> I</c><00:24:32.100><c> always</c><00:24:32.639><c> have</c><00:24:32.730><c> to</c><00:24:32.820><c> do</c><00:24:32.909><c> this</c><00:24:33.029><c> in</c><00:24:33.179><c> my</c>

00:24:33.200 --> 00:24:33.210 align:start position:0%
per cycle I always have to do this in my
 

00:24:33.210 --> 00:24:33.409 align:start position:0%
per cycle I always have to do this in my
head

00:24:33.409 --> 00:24:33.419 align:start position:0%
head
 

00:24:33.419 --> 00:24:36.049 align:start position:0%
head
four<00:24:33.779><c> flops</c><00:24:33.990><c> per</c><00:24:34.110><c> cycle</c><00:24:34.350><c> two</c><00:24:35.250><c> CPUs</c><00:24:35.490><c> in</c><00:24:36.000><c> the</c>

00:24:36.049 --> 00:24:36.059 align:start position:0%
four flops per cycle two CPUs in the
 

00:24:36.059 --> 00:24:36.570 align:start position:0%
four flops per cycle two CPUs in the
dual

00:24:36.570 --> 00:24:36.580 align:start position:0%
dual
 

00:24:36.580 --> 00:24:39.450 align:start position:0%
dual
gee<00:24:37.240><c> five</c><00:24:37.450><c> so</c><00:24:37.690><c> that's</c><00:24:37.779><c> eight</c><00:24:38.200><c> flops</c><00:24:38.740><c> across</c><00:24:39.220><c> to</c>

00:24:39.450 --> 00:24:39.460 align:start position:0%
gee five so that's eight flops across to
 

00:24:39.460 --> 00:24:41.700 align:start position:0%
gee five so that's eight flops across to
see<00:24:39.640><c> two</c><00:24:40.029><c> CPUs</c><00:24:40.450><c> and</c><00:24:40.779><c> we</c><00:24:40.960><c> clock</c><00:24:41.230><c> them</c><00:24:41.470><c> at</c><00:24:41.559><c> two</c>

00:24:41.700 --> 00:24:41.710 align:start position:0%
see two CPUs and we clock them at two
 

00:24:41.710 --> 00:24:45.149 align:start position:0%
see two CPUs and we clock them at two
gigahertz<00:24:41.980><c> so</c><00:24:42.429><c> we</c><00:24:42.940><c> top</c><00:24:43.539><c> out</c><00:24:43.659><c> it</c><00:24:43.870><c> 16</c><00:24:44.769><c> double</c>

00:24:45.149 --> 00:24:45.159 align:start position:0%
gigahertz so we top out it 16 double
 

00:24:45.159 --> 00:24:47.659 align:start position:0%
gigahertz so we top out it 16 double
precision<00:24:45.429><c> floating</c><00:24:45.760><c> point</c><00:24:45.970><c> operations</c><00:24:46.750><c> 16</c>

00:24:47.659 --> 00:24:47.669 align:start position:0%
precision floating point operations 16
 

00:24:47.669 --> 00:24:49.409 align:start position:0%
precision floating point operations 16
gigaflops<00:24:48.669><c> worth</c><00:24:48.970><c> of</c><00:24:49.120><c> floating-point</c>

00:24:49.409 --> 00:24:49.419 align:start position:0%
gigaflops worth of floating-point
 

00:24:49.419 --> 00:24:53.310 align:start position:0%
gigaflops worth of floating-point
operations<00:24:50.049><c> on</c><00:24:50.289><c> a</c><00:24:50.789><c> two</c><00:24:51.789><c> gigahertz</c><00:24:52.059><c> qg5</c><00:24:53.019><c> and</c>

00:24:53.310 --> 00:24:53.320 align:start position:0%
operations on a two gigahertz qg5 and
 

00:24:53.320 --> 00:24:55.169 align:start position:0%
operations on a two gigahertz qg5 and
now<00:24:53.440><c> that</c><00:24:53.590><c> we're</c><00:24:53.710><c> using</c><00:24:53.950><c> 2.5</c><00:24:54.580><c> s</c><00:24:54.820><c> I</c><00:24:54.940><c> have</c><00:24:55.059><c> to</c>

00:24:55.169 --> 00:24:55.179 align:start position:0%
now that we're using 2.5 s I have to
 

00:24:55.179 --> 00:24:57.990 align:start position:0%
now that we're using 2.5 s I have to
update<00:24:55.330><c> my</c><00:24:55.480><c> thinking</c><00:24:55.929><c> it's</c><00:24:56.559><c> the</c><00:24:57.000><c> 20/20</c>

00:24:57.990 --> 00:24:58.000 align:start position:0%
update my thinking it's the 20/20
 

00:24:58.000 --> 00:25:00.450 align:start position:0%
update my thinking it's the 20/20
gigaflops<00:24:58.419><c> theoretical</c><00:24:59.409><c> peak</c><00:24:59.559><c> theoretical</c>

00:25:00.450 --> 00:25:00.460 align:start position:0%
gigaflops theoretical peak theoretical
 

00:25:00.460 --> 00:25:07.830 align:start position:0%
gigaflops theoretical peak theoretical
peak<00:25:06.029><c> so</c><00:25:07.029><c> how</c><00:25:07.149><c> do</c><00:25:07.210><c> you</c><00:25:07.330><c> get</c><00:25:07.539><c> to</c><00:25:07.750><c> this</c>

00:25:07.830 --> 00:25:07.840 align:start position:0%
peak so how do you get to this
 

00:25:07.840 --> 00:25:10.649 align:start position:0%
peak so how do you get to this
performance<00:25:08.820><c> how</c><00:25:09.820><c> do</c><00:25:09.880><c> you</c><00:25:10.000><c> get</c><00:25:10.120><c> to</c><00:25:10.240><c> this</c><00:25:10.330><c> great</c>

00:25:10.649 --> 00:25:10.659 align:start position:0%
performance how do you get to this great
 

00:25:10.659 --> 00:25:12.450 align:start position:0%
performance how do you get to this great
double<00:25:11.110><c> precision</c><00:25:11.320><c> for</c><00:25:11.590><c> performance</c><00:25:12.130><c> if</c>

00:25:12.450 --> 00:25:12.460 align:start position:0%
double precision for performance if
 

00:25:12.460 --> 00:25:16.110 align:start position:0%
double precision for performance if
you've<00:25:12.700><c> got</c><00:25:12.909><c> an</c><00:25:13.059><c> existing</c><00:25:14.070><c> Apple</c><00:25:15.070><c> Mac</c><00:25:15.820><c> OS</c><00:25:16.090><c> 10</c>

00:25:16.110 --> 00:25:16.120 align:start position:0%
you've got an existing Apple Mac OS 10
 

00:25:16.120 --> 00:25:19.500 align:start position:0%
you've got an existing Apple Mac OS 10
binary<00:25:16.779><c> perhaps</c><00:25:17.710><c> built</c><00:25:17.950><c> for</c><00:25:18.130><c> g4</c><00:25:18.549><c> just</c><00:25:19.330><c> bring</c>

00:25:19.500 --> 00:25:19.510 align:start position:0%
binary perhaps built for g4 just bring
 

00:25:19.510 --> 00:25:22.889 align:start position:0%
binary perhaps built for g4 just bring
it<00:25:19.600><c> across</c><00:25:20.519><c> the</c><00:25:21.519><c> scheduling</c><00:25:22.029><c> in</c><00:25:22.179><c> the</c><00:25:22.269><c> CPU</c><00:25:22.600><c> is</c>

00:25:22.889 --> 00:25:22.899 align:start position:0%
it across the scheduling in the CPU is
 

00:25:22.899 --> 00:25:24.570 align:start position:0%
it across the scheduling in the CPU is
really<00:25:23.260><c> smart</c><00:25:23.559><c> as</c><00:25:23.769><c> the</c><00:25:23.860><c> instruction</c><00:25:24.340><c> stream</c>

00:25:24.570 --> 00:25:24.580 align:start position:0%
really smart as the instruction stream
 

00:25:24.580 --> 00:25:25.710 align:start position:0%
really smart as the instruction stream
comes<00:25:24.820><c> along</c><00:25:25.059><c> and</c><00:25:25.240><c> we</c><00:25:25.299><c> start</c><00:25:25.539><c> seeing</c>

00:25:25.710 --> 00:25:25.720 align:start position:0%
comes along and we start seeing
 

00:25:25.720 --> 00:25:27.840 align:start position:0%
comes along and we start seeing
floating-point<00:25:26.559><c> instructions</c><00:25:26.980><c> they</c><00:25:27.700><c> get</c>

00:25:27.840 --> 00:25:27.850 align:start position:0%
floating-point instructions they get
 

00:25:27.850 --> 00:25:29.580 align:start position:0%
floating-point instructions they get
dispatched<00:25:28.149><c> off</c><00:25:28.480><c> to</c><00:25:28.630><c> dual</c><00:25:28.779><c> CPUs</c><00:25:29.230><c> and</c><00:25:29.470><c> they</c>

00:25:29.580 --> 00:25:29.590 align:start position:0%
dispatched off to dual CPUs and they
 

00:25:29.590 --> 00:25:31.169 align:start position:0%
dispatched off to dual CPUs and they
will<00:25:29.830><c> finish</c><00:25:30.070><c> faster</c><00:25:30.610><c> than</c><00:25:30.789><c> if</c><00:25:30.970><c> they</c><00:25:31.120><c> were</c>

00:25:31.169 --> 00:25:31.179 align:start position:0%
will finish faster than if they were
 

00:25:31.179 --> 00:25:34.560 align:start position:0%
will finish faster than if they were
sent<00:25:31.960><c> to</c><00:25:32.049><c> a</c><00:25:32.139><c> single</c><00:25:32.470><c> pipe</c><00:25:32.620><c> so</c><00:25:33.549><c> part</c><00:25:34.450><c> of</c><00:25:34.480><c> the</c>

00:25:34.560 --> 00:25:34.570 align:start position:0%
sent to a single pipe so part of the
 

00:25:34.570 --> 00:25:35.940 align:start position:0%
sent to a single pipe so part of the
answer<00:25:34.600><c> is</c><00:25:34.809><c> you</c><00:25:34.929><c> have</c><00:25:35.080><c> to</c><00:25:35.169><c> do</c><00:25:35.260><c> anything</c><00:25:35.799><c> and</c>

00:25:35.940 --> 00:25:35.950 align:start position:0%
answer is you have to do anything and
 

00:25:35.950 --> 00:25:37.230 align:start position:0%
answer is you have to do anything and
you<00:25:36.070><c> should</c><00:25:36.279><c> see</c><00:25:36.460><c> some</c><00:25:36.730><c> important</c>

00:25:37.230 --> 00:25:37.240 align:start position:0%
you should see some important
 

00:25:37.240 --> 00:25:40.129 align:start position:0%
you should see some important
performance<00:25:37.450><c> and</c><00:25:37.870><c> in</c><00:25:37.929><c> existing</c><00:25:38.289><c> binary</c><00:25:38.470><c> apps</c>

00:25:40.129 --> 00:25:40.139 align:start position:0%
performance and in existing binary apps
 

00:25:40.139 --> 00:25:42.629 align:start position:0%
performance and in existing binary apps
second<00:25:41.139><c> if</c><00:25:41.260><c> you're</c><00:25:41.740><c> able</c><00:25:41.830><c> to</c><00:25:42.039><c> recompile</c><00:25:42.549><c> your</c>

00:25:42.629 --> 00:25:42.639 align:start position:0%
second if you're able to recompile your
 

00:25:42.639 --> 00:25:44.700 align:start position:0%
second if you're able to recompile your
app<00:25:42.850><c> say</c><00:25:43.059><c> it's</c><00:25:43.179><c> open</c><00:25:43.750><c> source</c><00:25:44.110><c> application</c>

00:25:44.700 --> 00:25:44.710 align:start position:0%
app say it's open source application
 

00:25:44.710 --> 00:25:48.230 align:start position:0%
app say it's open source application
code<00:25:45.490><c> you've</c><00:25:45.730><c> developed</c><00:25:46.740><c> recompile</c><00:25:47.740><c> with</c><00:25:47.889><c> GCC</c>

00:25:48.230 --> 00:25:48.240 align:start position:0%
code you've developed recompile with GCC
 

00:25:48.240 --> 00:25:51.330 align:start position:0%
code you've developed recompile with GCC
set<00:25:49.240><c> the</c><00:25:49.389><c> proper</c><00:25:49.720><c> options</c><00:25:50.110><c> that</c><00:25:50.260><c> I'll</c><00:25:50.380><c> point</c>

00:25:51.330 --> 00:25:51.340 align:start position:0%
set the proper options that I'll point
 

00:25:51.340 --> 00:25:53.940 align:start position:0%
set the proper options that I'll point
to<00:25:51.460><c> in</c><00:25:51.669><c> a</c><00:25:51.730><c> tech</c><00:25:51.940><c> note</c><00:25:52.120><c> later</c><00:25:52.330><c> and</c><00:25:52.740><c> let</c><00:25:53.740><c> it</c>

00:25:53.940 --> 00:25:53.950 align:start position:0%
to in a tech note later and let it
 

00:25:53.950 --> 00:25:56.730 align:start position:0%
to in a tech note later and let it
schedule<00:25:54.429><c> instructions</c><00:25:54.970><c> in</c><00:25:55.929><c> even</c><00:25:56.620><c> more</c>

00:25:56.730 --> 00:25:56.740 align:start position:0%
schedule instructions in even more
 

00:25:56.740 --> 00:26:00.269 align:start position:0%
schedule instructions in even more
optimal<00:25:57.250><c> way</c><00:25:57.340><c> for</c><00:25:57.580><c> the</c><00:25:57.730><c> g5</c><00:25:58.539><c> and</c><00:25:59.010><c> you</c><00:26:00.010><c> can</c><00:26:00.159><c> see</c>

00:26:00.269 --> 00:26:00.279 align:start position:0%
optimal way for the g5 and you can see
 

00:26:00.279 --> 00:26:03.960 align:start position:0%
optimal way for the g5 and you can see
yet<00:26:00.460><c> more</c><00:26:00.610><c> gains</c><00:26:02.190><c> it's</c><00:26:03.190><c> also</c><00:26:03.399><c> possible</c><00:26:03.820><c> by</c>

00:26:03.960 --> 00:26:03.970 align:start position:0%
yet more gains it's also possible by
 

00:26:03.970 --> 00:26:06.000 align:start position:0%
yet more gains it's also possible by
paying<00:26:04.299><c> special</c><00:26:04.870><c> attention</c><00:26:05.110><c> to</c><00:26:05.440><c> algorithmic</c>

00:26:06.000 --> 00:26:06.010 align:start position:0%
paying special attention to algorithmic
 

00:26:06.010 --> 00:26:10.500 align:start position:0%
paying special attention to algorithmic
details<00:26:07.440><c> to</c><00:26:08.440><c> get</c><00:26:08.590><c> even</c><00:26:09.370><c> further</c><00:26:09.549><c> gains</c><00:26:09.909><c> for</c>

00:26:10.500 --> 00:26:10.510 align:start position:0%
details to get even further gains for
 

00:26:10.510 --> 00:26:12.600 align:start position:0%
details to get even further gains for
example<00:26:10.960><c> if</c><00:26:11.080><c> you're</c><00:26:11.200><c> computing</c><00:26:11.889><c> a</c><00:26:12.010><c> rational</c>

00:26:12.600 --> 00:26:12.610 align:start position:0%
example if you're computing a rational
 

00:26:12.610 --> 00:26:14.220 align:start position:0%
example if you're computing a rational
function<00:26:12.730><c> approximation</c><00:26:13.090><c> you</c><00:26:13.870><c> may</c><00:26:14.019><c> be</c><00:26:14.080><c> able</c>

00:26:14.220 --> 00:26:14.230 align:start position:0%
function approximation you may be able
 

00:26:14.230 --> 00:26:16.289 align:start position:0%
function approximation you may be able
to<00:26:14.380><c> arrange</c><00:26:14.559><c> the</c><00:26:14.889><c> calculation</c><00:26:15.490><c> so</c><00:26:15.519><c> that</c><00:26:15.700><c> the</c>

00:26:16.289 --> 00:26:16.299 align:start position:0%
to arrange the calculation so that the
 

00:26:16.299 --> 00:26:18.509 align:start position:0%
to arrange the calculation so that the
numerator<00:26:16.750><c> is</c><00:26:16.960><c> computed</c><00:26:17.529><c> simultaneously</c>

00:26:18.509 --> 00:26:18.519 align:start position:0%
numerator is computed simultaneously
 

00:26:18.519 --> 00:26:19.889 align:start position:0%
numerator is computed simultaneously
with<00:26:18.610><c> the</c><00:26:18.669><c> denominator</c><00:26:19.059><c> on</c><00:26:19.210><c> the</c><00:26:19.240><c> two</c><00:26:19.419><c> pipes</c><00:26:19.659><c> at</c>

00:26:19.889 --> 00:26:19.899 align:start position:0%
with the denominator on the two pipes at
 

00:26:19.899 --> 00:26:21.240 align:start position:0%
with the denominator on the two pipes at
the<00:26:20.049><c> end</c><00:26:20.169><c> you</c><00:26:20.289><c> just</c><00:26:20.320><c> weld</c><00:26:20.649><c> them</c><00:26:20.830><c> together</c><00:26:20.950><c> with</c>

00:26:21.240 --> 00:26:21.250 align:start position:0%
the end you just weld them together with
 

00:26:21.250 --> 00:26:24.389 align:start position:0%
the end you just weld them together with
the<00:26:21.340><c> divide</c><00:26:22.320><c> this</c><00:26:23.320><c> level</c><00:26:23.740><c> of</c><00:26:23.830><c> attention</c><00:26:24.130><c> we've</c>

00:26:24.389 --> 00:26:24.399 align:start position:0%
the divide this level of attention we've
 

00:26:24.399 --> 00:26:29.940 align:start position:0%
the divide this level of attention we've
paid<00:26:24.789><c> already</c><00:26:26.100><c> to</c><00:26:27.100><c> live</c><00:26:27.539><c> my</c><00:26:28.539><c> Brer</c><00:26:29.019><c> II</c><00:26:29.049><c> our</c><00:26:29.320><c> Blas</c>

00:26:29.940 --> 00:26:29.950 align:start position:0%
paid already to live my Brer II our Blas
 

00:26:29.950 --> 00:26:39.269 align:start position:0%
paid already to live my Brer II our Blas
our<00:26:30.250><c> la</c><00:26:30.639><c> Peck</c><00:26:30.880><c> and</c><00:26:31.179><c> the</c><00:26:31.779><c> V</c><00:26:31.960><c> Force</c><00:26:32.260><c> library</c>

00:26:39.269 --> 00:26:39.279 align:start position:0%
 
 

00:26:39.279 --> 00:26:43.569 align:start position:0%
 
both<00:26:40.279><c> our</c><00:26:40.459><c> g4</c><00:26:40.879><c> and</c><00:26:40.909><c> g5</c><00:26:41.469><c> platforms</c><00:26:42.469><c> offer</c><00:26:42.829><c> the</c>

00:26:43.569 --> 00:26:43.579 align:start position:0%
both our g4 and g5 platforms offer the
 

00:26:43.579 --> 00:26:46.229 align:start position:0%
both our g4 and g5 platforms offer the
altivec<00:26:44.109><c> single</c><00:26:45.109><c> instruction</c><00:26:45.319><c> multiple</c><00:26:45.589><c> data</c>

00:26:46.229 --> 00:26:46.239 align:start position:0%
altivec single instruction multiple data
 

00:26:46.239 --> 00:26:49.629 align:start position:0%
altivec single instruction multiple data
processor<00:26:47.289><c> this</c><00:26:48.289><c> is</c><00:26:48.439><c> a</c><00:26:48.469><c> 4-way</c><00:26:49.069><c> parallel</c>

00:26:49.629 --> 00:26:49.639 align:start position:0%
processor this is a 4-way parallel
 

00:26:49.639 --> 00:26:51.369 align:start position:0%
processor this is a 4-way parallel
single<00:26:50.299><c> precision</c><00:26:50.569><c> engine</c><00:26:50.989><c> doesn't</c><00:26:51.199><c> do</c>

00:26:51.369 --> 00:26:51.379 align:start position:0%
single precision engine doesn't do
 

00:26:51.379 --> 00:26:52.809 align:start position:0%
single precision engine doesn't do
double<00:26:51.619><c> precision</c><00:26:51.829><c> not</c><00:26:52.069><c> at</c><00:26:52.219><c> all</c><00:26:52.339><c> Ian</c><00:26:52.609><c> keeps</c>

00:26:52.809 --> 00:26:52.819 align:start position:0%
double precision not at all Ian keeps
 

00:26:52.819 --> 00:26:55.329 align:start position:0%
double precision not at all Ian keeps
telling<00:26:53.089><c> us</c><00:26:53.119><c> it</c><00:26:53.359><c> will</c><00:26:53.449><c> never</c><00:26:53.719><c> do</c><00:26:53.989><c> double</c><00:26:54.339><c> it's</c>

00:26:55.329 --> 00:26:55.339 align:start position:0%
telling us it will never do double it's
 

00:26:55.339 --> 00:26:58.449 align:start position:0%
telling us it will never do double it's
a<00:26:55.399><c> single</c><00:26:55.729><c> precision</c><00:26:55.939><c> engine</c><00:26:56.359><c> with</c><00:26:56.899><c> a</c><00:26:57.459><c> huge</c>

00:26:58.449 --> 00:26:58.459 align:start position:0%
a single precision engine with a huge
 

00:26:58.459 --> 00:27:00.729 align:start position:0%
a single precision engine with a huge
appetite<00:26:58.969><c> for</c><00:26:59.269><c> floating-point</c><00:27:00.169><c> it</c><00:27:00.409><c> really</c>

00:27:00.729 --> 00:27:00.739 align:start position:0%
appetite for floating-point it really
 

00:27:00.739 --> 00:27:01.779 align:start position:0%
appetite for floating-point it really
just<00:27:00.949><c> rips</c><00:27:01.219><c> through</c><00:27:01.399><c> floating-point</c>

00:27:01.779 --> 00:27:01.789 align:start position:0%
just rips through floating-point
 

00:27:01.789 --> 00:27:03.639 align:start position:0%
just rips through floating-point
calculations<00:27:02.419><c> all</c><00:27:03.019><c> the</c><00:27:03.259><c> basic</c><00:27:03.559><c> operations</c>

00:27:03.639 --> 00:27:03.649 align:start position:0%
calculations all the basic operations
 

00:27:03.649 --> 00:27:07.209 align:start position:0%
calculations all the basic operations
are<00:27:04.369><c> present</c><00:27:04.759><c> as</c><00:27:04.909><c> well</c><00:27:05.839><c> as</c><00:27:06.019><c> a</c><00:27:06.049><c> vector</c><00:27:06.439><c> fused</c>

00:27:07.209 --> 00:27:07.219 align:start position:0%
are present as well as a vector fused
 

00:27:07.219 --> 00:27:10.269 align:start position:0%
are present as well as a vector fused
multiply<00:27:07.729><c> ad</c><00:27:07.939><c> so</c><00:27:08.659><c> now</c><00:27:08.869><c> we</c><00:27:08.929><c> get</c><00:27:09.199><c> two</c><00:27:09.979><c> flops</c>

00:27:10.269 --> 00:27:10.279 align:start position:0%
multiply ad so now we get two flops
 

00:27:10.279 --> 00:27:12.519 align:start position:0%
multiply ad so now we get two flops
counted<00:27:10.819><c> for</c><00:27:10.969><c> the</c><00:27:10.999><c> fused</c><00:27:11.419><c> multiply</c><00:27:12.109><c> head</c><00:27:12.349><c> on</c>

00:27:12.519 --> 00:27:12.529 align:start position:0%
counted for the fused multiply head on
 

00:27:12.529 --> 00:27:15.969 align:start position:0%
counted for the fused multiply head on
four<00:27:13.279><c> operands</c><00:27:13.939><c> strung</c><00:27:14.209><c> across</c><00:27:14.329><c> the</c><00:27:14.809><c> 128</c><00:27:15.679><c> bit</c>

00:27:15.969 --> 00:27:15.979 align:start position:0%
four operands strung across the 128 bit
 

00:27:15.979 --> 00:27:18.819 align:start position:0%
four operands strung across the 128 bit
vector<00:27:16.509><c> that</c><00:27:17.509><c> gives</c><00:27:17.659><c> us</c><00:27:17.839><c> eight</c><00:27:18.049><c> flops</c><00:27:18.619><c> per</c>

00:27:18.819 --> 00:27:18.829 align:start position:0%
vector that gives us eight flops per
 

00:27:18.829 --> 00:27:21.729 align:start position:0%
vector that gives us eight flops per
cycle<00:27:19.629><c> now</c><00:27:20.629><c> let's</c><00:27:20.809><c> see</c><00:27:20.959><c> can</c><00:27:21.079><c> I</c><00:27:21.169><c> do</c><00:27:21.229><c> the</c><00:27:21.409><c> math</c><00:27:21.559><c> in</c>

00:27:21.729 --> 00:27:21.739 align:start position:0%
cycle now let's see can I do the math in
 

00:27:21.739 --> 00:27:25.029 align:start position:0%
cycle now let's see can I do the math in
my<00:27:21.769><c> head</c><00:27:21.889><c> for</c><00:27:22.489><c> a</c><00:27:22.689><c> two</c><00:27:23.689><c> and</c><00:27:23.779><c> a</c><00:27:23.839><c> half</c><00:27:24.039><c> gigahertz</c>

00:27:25.029 --> 00:27:25.039 align:start position:0%
my head for a two and a half gigahertz
 

00:27:25.039 --> 00:27:27.849 align:start position:0%
my head for a two and a half gigahertz
g5<00:27:25.789><c> I</c><00:27:25.819><c> think</c><00:27:26.299><c> that</c><00:27:26.449><c> tops</c><00:27:26.719><c> out</c><00:27:26.959><c> at</c><00:27:27.139><c> forty</c>

00:27:27.849 --> 00:27:27.859 align:start position:0%
g5 I think that tops out at forty
 

00:27:27.859 --> 00:27:31.959 align:start position:0%
g5 I think that tops out at forty
gigaflops<00:27:28.369><c> thank</c><00:27:28.819><c> you</c><00:27:30.189><c> forty</c><00:27:31.189><c> gigaflops</c><00:27:31.639><c> tops</c>

00:27:31.959 --> 00:27:31.969 align:start position:0%
gigaflops thank you forty gigaflops tops
 

00:27:31.969 --> 00:27:38.079 align:start position:0%
gigaflops thank you forty gigaflops tops
alright<00:27:36.429><c> so</c><00:27:37.429><c> how</c><00:27:37.579><c> do</c><00:27:37.639><c> you</c><00:27:37.729><c> get</c><00:27:37.849><c> to</c><00:27:37.969><c> this</c>

00:27:38.079 --> 00:27:38.089 align:start position:0%
alright so how do you get to this
 

00:27:38.089 --> 00:27:40.929 align:start position:0%
alright so how do you get to this
performance<00:27:38.659><c> well</c><00:27:39.019><c> sorry</c><00:27:39.979><c> you</c><00:27:40.279><c> got</c><00:27:40.699><c> to</c><00:27:40.819><c> do</c><00:27:40.909><c> a</c>

00:27:40.929 --> 00:27:40.939 align:start position:0%
performance well sorry you got to do a
 

00:27:40.939 --> 00:27:42.849 align:start position:0%
performance well sorry you got to do a
little<00:27:41.149><c> bit</c><00:27:41.329><c> of</c><00:27:41.419><c> work</c><00:27:41.539><c> you're</c><00:27:42.319><c> gonna</c><00:27:42.469><c> have</c><00:27:42.589><c> to</c>

00:27:42.849 --> 00:27:42.859 align:start position:0%
little bit of work you're gonna have to
 

00:27:42.859 --> 00:27:44.949 align:start position:0%
little bit of work you're gonna have to
learn<00:27:42.949><c> a</c><00:27:43.009><c> little</c><00:27:43.429><c> bit</c><00:27:43.519><c> about</c><00:27:43.959><c> vector</c>

00:27:44.949 --> 00:27:44.959 align:start position:0%
learn a little bit about vector
 

00:27:44.959 --> 00:27:48.789 align:start position:0%
learn a little bit about vector
programming<00:27:45.819><c> there's</c><00:27:46.819><c> an</c><00:27:46.939><c> out</c><00:27:47.679><c> that</c><00:27:48.679><c> we've</c>

00:27:48.789 --> 00:27:48.799 align:start position:0%
programming there's an out that we've
 

00:27:48.799 --> 00:27:52.209 align:start position:0%
programming there's an out that we've
announced<00:27:49.009><c> this</c><00:27:49.759><c> week</c><00:27:50.679><c> but</c><00:27:51.679><c> it</c><00:27:51.769><c> helps</c><00:27:51.949><c> to</c><00:27:52.009><c> get</c>

00:27:52.209 --> 00:27:52.219 align:start position:0%
announced this week but it helps to get
 

00:27:52.219 --> 00:27:54.129 align:start position:0%
announced this week but it helps to get
in<00:27:52.369><c> there</c><00:27:52.489><c> with</c><00:27:52.639><c> your</c><00:27:52.729><c> code</c><00:27:52.969><c> understand</c><00:27:53.809><c> where</c>

00:27:54.129 --> 00:27:54.139 align:start position:0%
in there with your code understand where
 

00:27:54.139 --> 00:27:58.989 align:start position:0%
in there with your code understand where
there's<00:27:54.409><c> inherent</c><00:27:55.129><c> parallelism</c><00:27:57.459><c> in</c><00:27:58.459><c> your</c>

00:27:58.989 --> 00:27:58.999 align:start position:0%
there's inherent parallelism in your
 

00:27:58.999 --> 00:28:01.809 align:start position:0%
there's inherent parallelism in your
algorithms<00:27:59.599><c> work</c><00:28:00.499><c> those</c><00:28:00.739><c> over</c><00:28:01.069><c> with</c><00:28:01.549><c> the</c>

00:28:01.809 --> 00:28:01.819 align:start position:0%
algorithms work those over with the
 

00:28:01.819 --> 00:28:04.899 align:start position:0%
algorithms work those over with the
Sindhi<00:28:02.749><c> instruction</c><00:28:03.229><c> set</c><00:28:03.439><c> and</c><00:28:03.699><c> pass</c><00:28:04.699><c> them</c>

00:28:04.899 --> 00:28:04.909 align:start position:0%
Sindhi instruction set and pass them
 

00:28:04.909 --> 00:28:07.029 align:start position:0%
Sindhi instruction set and pass them
through<00:28:04.939><c> the</c><00:28:05.179><c> compiler</c><00:28:05.619><c> our</c><00:28:06.619><c> advice</c><00:28:07.009><c> is</c>

00:28:07.029 --> 00:28:07.039 align:start position:0%
through the compiler our advice is
 

00:28:07.039 --> 00:28:09.339 align:start position:0%
through the compiler our advice is
always<00:28:07.339><c> profile</c><00:28:07.909><c> first</c><00:28:08.239><c> before</c><00:28:08.779><c> you</c><00:28:08.899><c> dig</c><00:28:09.109><c> in</c>

00:28:09.339 --> 00:28:09.349 align:start position:0%
always profile first before you dig in
 

00:28:09.349 --> 00:28:12.039 align:start position:0%
always profile first before you dig in
find<00:28:09.769><c> out</c><00:28:09.979><c> where</c><00:28:10.249><c> the</c><00:28:10.579><c> you</c><00:28:10.879><c> know</c><00:28:10.909><c> the</c><00:28:11.359><c> 10%</c><00:28:11.959><c> of</c>

00:28:12.039 --> 00:28:12.049 align:start position:0%
find out where the you know the 10% of
 

00:28:12.049 --> 00:28:13.629 align:start position:0%
find out where the you know the 10% of
the<00:28:12.109><c> code</c><00:28:12.289><c> is</c><00:28:12.499><c> where</c><00:28:12.769><c> you're</c><00:28:12.889><c> spending</c><00:28:13.039><c> 90%</c><00:28:13.399><c> of</c>

00:28:13.629 --> 00:28:13.639 align:start position:0%
the code is where you're spending 90% of
 

00:28:13.639 --> 00:28:15.939 align:start position:0%
the code is where you're spending 90% of
your<00:28:13.759><c> time</c><00:28:13.999><c> and</c><00:28:14.329><c> go</c><00:28:15.019><c> look</c><00:28:15.199><c> at</c><00:28:15.319><c> those</c><00:28:15.439><c> shark</c><00:28:15.829><c> is</c>

00:28:15.939 --> 00:28:15.949 align:start position:0%
your time and go look at those shark is
 

00:28:15.949 --> 00:28:18.579 align:start position:0%
your time and go look at those shark is
a<00:28:15.979><c> wonderful</c><00:28:16.759><c> tool</c><00:28:16.969><c> for</c><00:28:17.259><c> figuring</c><00:28:18.259><c> out</c><00:28:18.439><c> these</c>

00:28:18.579 --> 00:28:18.589 align:start position:0%
a wonderful tool for figuring out these
 

00:28:18.589 --> 00:28:21.759 align:start position:0%
a wonderful tool for figuring out these
case<00:28:18.859><c> cases</c><00:28:19.519><c> I</c><00:28:19.789><c> hope</c><00:28:19.999><c> you've</c><00:28:20.259><c> seen</c><00:28:21.259><c> shark</c><00:28:21.589><c> or</c>

00:28:21.759 --> 00:28:21.769 align:start position:0%
case cases I hope you've seen shark or
 

00:28:21.769 --> 00:28:23.589 align:start position:0%
case cases I hope you've seen shark or
plan<00:28:22.009><c> to</c><00:28:22.189><c> see</c><00:28:22.579><c> a</c><00:28:22.609><c> shark</c><00:28:22.819><c> talk</c><00:28:23.059><c> sometime</c><00:28:23.479><c> this</c>

00:28:23.589 --> 00:28:23.599 align:start position:0%
plan to see a shark talk sometime this
 

00:28:23.599 --> 00:28:26.619 align:start position:0%
plan to see a shark talk sometime this
week<00:28:23.809><c> they're</c><00:28:24.999><c> they're</c><00:28:25.999><c> playing</c><00:28:26.269><c> in</c><00:28:26.419><c> a</c>

00:28:26.619 --> 00:28:26.629 align:start position:0%
week they're they're playing in a
 

00:28:26.629 --> 00:28:29.949 align:start position:0%
week they're they're playing in a
theater<00:28:26.959><c> near</c><00:28:27.139><c> you</c><00:28:27.259><c> I'm</c><00:28:27.409><c> sure</c><00:28:28.959><c> auto</c>

00:28:29.949 --> 00:28:29.959 align:start position:0%
theater near you I'm sure auto
 

00:28:29.959 --> 00:28:31.689 align:start position:0%
theater near you I'm sure auto
vectorization<00:28:30.409><c> is</c><00:28:30.739><c> an</c><00:28:30.859><c> option</c><00:28:31.279><c> and</c><00:28:31.489><c> this</c>

00:28:31.689 --> 00:28:31.699 align:start position:0%
vectorization is an option and this
 

00:28:31.699 --> 00:28:34.569 align:start position:0%
vectorization is an option and this
slide<00:28:31.999><c> was</c><00:28:32.149><c> actually</c><00:28:32.449><c> written</c><00:28:32.689><c> before</c><00:28:33.579><c> the</c>

00:28:34.569 --> 00:28:34.579 align:start position:0%
slide was actually written before the
 

00:28:34.579 --> 00:28:36.729 align:start position:0%
slide was actually written before the
announcement<00:28:34.699><c> was</c><00:28:35.059><c> made</c><00:28:35.119><c> to</c><00:28:35.419><c> that</c><00:28:35.749><c> GCC</c><00:28:36.139><c> 3.5</c>

00:28:36.729 --> 00:28:36.739 align:start position:0%
announcement was made to that GCC 3.5
 

00:28:36.739 --> 00:28:38.109 align:start position:0%
announcement was made to that GCC 3.5
we'll<00:28:37.039><c> be</c><00:28:37.129><c> offering</c><00:28:37.339><c> some</c><00:28:37.909><c> auto</c>

00:28:38.109 --> 00:28:38.119 align:start position:0%
we'll be offering some auto
 

00:28:38.119 --> 00:28:40.179 align:start position:0%
we'll be offering some auto
vectorization<00:28:38.539><c> features</c><00:28:39.139><c> check</c><00:28:39.769><c> those</c><00:28:40.009><c> out</c>

00:28:40.179 --> 00:28:40.189 align:start position:0%
vectorization features check those out
 

00:28:40.189 --> 00:28:44.319 align:start position:0%
vectorization features check those out
it<00:28:40.489><c> may</c><00:28:40.789><c> be</c><00:28:40.849><c> a</c><00:28:40.969><c> real</c><00:28:41.779><c> boon</c><00:28:42.019><c> to</c><00:28:42.409><c> getting</c><00:28:43.329><c> better</c>

00:28:44.319 --> 00:28:44.329 align:start position:0%
it may be a real boon to getting better
 

00:28:44.329 --> 00:28:46.809 align:start position:0%
it may be a real boon to getting better
use<00:28:44.539><c> of</c><00:28:44.569><c> the</c><00:28:45.019><c> Sindhi</c><00:28:45.319><c> unit</c><00:28:45.559><c> on</c><00:28:45.709><c> the</c><00:28:46.129><c> g-force</c>

00:28:46.809 --> 00:28:46.819 align:start position:0%
use of the Sindhi unit on the g-force
 

00:28:46.819 --> 00:28:48.250 align:start position:0%
use of the Sindhi unit on the g-force
and<00:28:46.909><c> g5s</c>

00:28:48.250 --> 00:28:48.260 align:start position:0%
and g5s
 

00:28:48.260 --> 00:28:51.100 align:start position:0%
and g5s
there's<00:28:48.830><c> also</c><00:28:49.070><c> a</c><00:28:49.600><c> third-party</c><00:28:50.600><c> application</c>

00:28:51.100 --> 00:28:51.110 align:start position:0%
there's also a third-party application
 

00:28:51.110 --> 00:28:53.500 align:start position:0%
there's also a third-party application
called<00:28:51.260><c> vas</c><00:28:51.500><c> that</c><00:28:51.919><c> can</c><00:28:52.760><c> analyze</c><00:28:52.940><c> I</c><00:28:53.330><c> think</c>

00:28:53.500 --> 00:28:53.510 align:start position:0%
called vas that can analyze I think
 

00:28:53.510 --> 00:28:57.009 align:start position:0%
called vas that can analyze I think
Fortran<00:28:54.080><c> codes</c><00:28:54.519><c> to</c><00:28:55.519><c> discover</c><00:28:56.419><c> inherent</c>

00:28:57.009 --> 00:28:57.019 align:start position:0%
Fortran codes to discover inherent
 

00:28:57.019 --> 00:29:00.460 align:start position:0%
Fortran codes to discover inherent
parallelism<00:28:57.289><c> and</c><00:28:57.769><c> omit</c><00:28:58.539><c> the</c><00:28:59.539><c> alt</c><00:28:59.899><c> of</c><00:29:00.080><c> proper</c>

00:29:00.460 --> 00:29:00.470 align:start position:0%
parallelism and omit the alt of proper
 

00:29:00.470 --> 00:29:04.629 align:start position:0%
parallelism and omit the alt of proper
altivec<00:29:00.769><c> code</c><00:29:02.649><c> we've</c><00:29:03.649><c> gone</c><00:29:03.889><c> through</c><00:29:04.220><c> at</c><00:29:04.340><c> Apple</c>

00:29:04.629 --> 00:29:04.639 align:start position:0%
altivec code we've gone through at Apple
 

00:29:04.639 --> 00:29:06.000 align:start position:0%
altivec code we've gone through at Apple
and<00:29:04.760><c> paid</c><00:29:05.000><c> this</c><00:29:05.210><c> kind</c><00:29:05.510><c> of</c><00:29:05.570><c> attention</c>

00:29:06.000 --> 00:29:06.010 align:start position:0%
and paid this kind of attention
 

00:29:06.010 --> 00:29:12.190 align:start position:0%
and paid this kind of attention
algorithmic<00:29:07.010><c> attention</c><00:29:11.200><c> recasting</c>

00:29:12.190 --> 00:29:12.200 align:start position:0%
algorithmic attention recasting
 

00:29:12.200 --> 00:29:15.039 align:start position:0%
algorithmic attention recasting
algorithms<00:29:12.669><c> for</c><00:29:13.669><c> our</c><00:29:13.789><c> V</c><00:29:13.970><c> Force</c><00:29:14.179><c> library</c><00:29:14.659><c> our</c>

00:29:15.039 --> 00:29:15.049 align:start position:0%
algorithms for our V Force library our
 

00:29:15.049 --> 00:29:16.870 align:start position:0%
algorithms for our V Force library our
single<00:29:15.440><c> precision</c><00:29:15.679><c> Blas</c><00:29:16.010><c> our</c><00:29:16.370><c> single</c>

00:29:16.870 --> 00:29:16.880 align:start position:0%
single precision Blas our single
 

00:29:16.880 --> 00:29:19.750 align:start position:0%
single precision Blas our single
precision<00:29:17.169><c> FFTs</c><00:29:18.169><c> and</c><00:29:18.380><c> digital</c><00:29:18.860><c> single</c>

00:29:19.750 --> 00:29:19.760 align:start position:0%
precision FFTs and digital single
 

00:29:19.760 --> 00:29:23.590 align:start position:0%
precision FFTs and digital single
processing<00:29:20.059><c> algorithms</c><00:29:20.929><c> and</c><00:29:21.850><c> heavily</c><00:29:22.850><c> in</c><00:29:23.059><c> V</c>

00:29:23.590 --> 00:29:23.600 align:start position:0%
processing algorithms and heavily in V
 

00:29:23.600 --> 00:29:31.690 align:start position:0%
processing algorithms and heavily in V
image<00:29:29.679><c> well</c><00:29:30.679><c> when</c><00:29:30.860><c> you</c><00:29:30.950><c> come</c><00:29:31.130><c> to</c><00:29:31.340><c> our</c><00:29:31.370><c> platform</c>

00:29:31.690 --> 00:29:31.700 align:start position:0%
image well when you come to our platform
 

00:29:31.700 --> 00:29:34.629 align:start position:0%
image well when you come to our platform
as<00:29:32.059><c> a</c><00:29:32.090><c> developer</c><00:29:32.630><c> and</c><00:29:32.860><c> you</c><00:29:33.860><c> know</c><00:29:33.950><c> kind</c><00:29:34.429><c> of</c><00:29:34.490><c> come</c>

00:29:34.629 --> 00:29:34.639 align:start position:0%
as a developer and you know kind of come
 

00:29:34.639 --> 00:29:37.139 align:start position:0%
as a developer and you know kind of come
to<00:29:34.760><c> that</c><00:29:34.909><c> final</c><00:29:35.779><c> step</c><00:29:36.049><c> you</c><00:29:36.380><c> know</c><00:29:36.470><c> how</c><00:29:36.649><c> do</c><00:29:37.010><c> I</c>

00:29:37.139 --> 00:29:37.149 align:start position:0%
to that final step you know how do I
 

00:29:37.149 --> 00:29:41.950 align:start position:0%
to that final step you know how do I
access<00:29:38.149><c> these</c><00:29:38.950><c> wonderful</c><00:29:39.950><c> libraries</c><00:29:40.960><c> link</c>

00:29:41.950 --> 00:29:41.960 align:start position:0%
access these wonderful libraries link
 

00:29:41.960 --> 00:29:44.740 align:start position:0%
access these wonderful libraries link
load<00:29:42.230><c> and</c><00:29:42.409><c> go</c><00:29:43.120><c> we</c><00:29:44.120><c> try</c><00:29:44.299><c> to</c><00:29:44.360><c> make</c><00:29:44.510><c> that</c><00:29:44.630><c> as</c>

00:29:44.740 --> 00:29:44.750 align:start position:0%
load and go we try to make that as
 

00:29:44.750 --> 00:29:47.590 align:start position:0%
load and go we try to make that as
straightforward<00:29:44.960><c> as</c><00:29:45.200><c> possible</c><00:29:46.090><c> the</c><00:29:47.090><c> library</c>

00:29:47.590 --> 00:29:47.600 align:start position:0%
straightforward as possible the library
 

00:29:47.600 --> 00:29:50.710 align:start position:0%
straightforward as possible the library
API<00:29:47.899><c> is</c><00:29:48.429><c> generally</c><00:29:49.429><c> are</c><00:29:49.639><c> in</c><00:29:49.820><c> will</c><00:29:50.149><c> internally</c>

00:29:50.710 --> 00:29:50.720 align:start position:0%
API is generally are in will internally
 

00:29:50.720 --> 00:29:54.039 align:start position:0%
API is generally are in will internally
dispatch<00:29:51.080><c> for</c><00:29:51.760><c> the</c><00:29:52.760><c> correct</c><00:29:53.059><c> platform</c><00:29:53.570><c> so</c><00:29:53.899><c> we</c>

00:29:54.039 --> 00:29:54.049 align:start position:0%
dispatch for the correct platform so we
 

00:29:54.049 --> 00:29:56.259 align:start position:0%
dispatch for the correct platform so we
won't<00:29:54.320><c> go</c><00:29:54.500><c> off</c><00:29:54.649><c> and</c><00:29:54.860><c> try</c><00:29:55.010><c> to</c><00:29:55.039><c> execute</c><00:29:55.370><c> code</c>

00:29:56.259 --> 00:29:56.269 align:start position:0%
won't go off and try to execute code
 

00:29:56.269 --> 00:29:58.120 align:start position:0%
won't go off and try to execute code
that's<00:29:56.480><c> appropriate</c><00:29:56.929><c> for</c><00:29:56.990><c> a</c><00:29:57.110><c> g5</c><00:29:57.470><c> on</c><00:29:57.740><c> a</c><00:29:57.769><c> machine</c>

00:29:58.120 --> 00:29:58.130 align:start position:0%
that's appropriate for a g5 on a machine
 

00:29:58.130 --> 00:30:03.190 align:start position:0%
that's appropriate for a g5 on a machine
that's<00:29:58.309><c> a</c><00:29:58.429><c> g3</c><00:29:58.970><c> for</c><00:29:59.179><c> example</c><00:30:01.899><c> generally</c><00:30:02.899><c> the</c>

00:30:03.190 --> 00:30:03.200 align:start position:0%
that's a g3 for example generally the
 

00:30:03.200 --> 00:30:09.879 align:start position:0%
that's a g3 for example generally the
rule<00:30:03.590><c> is</c><00:30:03.830><c> if</c><00:30:04.070><c> the</c><00:30:04.250><c> API</c><00:30:06.010><c> uses</c><00:30:07.010><c> a</c><00:30:08.710><c> vector</c><00:30:09.710><c> type</c>

00:30:09.879 --> 00:30:09.889 align:start position:0%
rule is if the API uses a vector type
 

00:30:09.889 --> 00:30:12.070 align:start position:0%
rule is if the API uses a vector type
Hardware<00:30:10.279><c> sim</c><00:30:10.549><c> D</c><00:30:10.700><c> vector</c><00:30:11.029><c> type</c><00:30:11.179><c> altivec</c><00:30:11.690><c> sim</c><00:30:11.929><c> d</c>

00:30:12.070 --> 00:30:12.080 align:start position:0%
Hardware sim D vector type altivec sim d
 

00:30:12.080 --> 00:30:14.500 align:start position:0%
Hardware sim D vector type altivec sim d
vector<00:30:12.380><c> type</c><00:30:12.559><c> you're</c><00:30:13.250><c> expected</c><00:30:13.850><c> as</c><00:30:13.970><c> he</c><00:30:14.090><c> has</c><00:30:14.480><c> a</c>

00:30:14.500 --> 00:30:14.510 align:start position:0%
vector type you're expected as he has a
 

00:30:14.510 --> 00:30:16.690 align:start position:0%
vector type you're expected as he has a
consumer<00:30:15.230><c> of</c><00:30:15.320><c> that</c><00:30:15.470><c> API</c><00:30:15.799><c> to</c><00:30:15.919><c> know</c><00:30:16.309><c> that</c><00:30:16.549><c> you're</c>

00:30:16.690 --> 00:30:16.700 align:start position:0%
consumer of that API to know that you're
 

00:30:16.700 --> 00:30:19.899 align:start position:0%
consumer of that API to know that you're
on<00:30:17.080><c> g4</c><00:30:18.080><c> g5</c><00:30:18.590><c> otherwise</c><00:30:19.070><c> we'll</c><00:30:19.460><c> take</c><00:30:19.669><c> care</c><00:30:19.850><c> of</c>

00:30:19.899 --> 00:30:19.909 align:start position:0%
on g4 g5 otherwise we'll take care of
 

00:30:19.909 --> 00:30:24.549 align:start position:0%
on g4 g5 otherwise we'll take care of
that<00:30:20.090><c> for</c><00:30:20.299><c> you</c><00:30:22.630><c> live</c><00:30:23.630><c> and</c><00:30:23.809><c> lynx</c><00:30:24.049><c> by</c><00:30:24.169><c> default</c>

00:30:24.549 --> 00:30:24.559 align:start position:0%
that for you live and lynx by default
 

00:30:24.559 --> 00:30:26.110 align:start position:0%
that for you live and lynx by default
it's<00:30:24.799><c> part</c><00:30:25.039><c> of</c><00:30:25.100><c> Lib</c><00:30:25.370><c> system</c><00:30:25.789><c> you</c><00:30:25.880><c> don't</c><00:30:26.029><c> need</c>

00:30:26.110 --> 00:30:26.120 align:start position:0%
it's part of Lib system you don't need
 

00:30:26.120 --> 00:30:27.039 align:start position:0%
it's part of Lib system you don't need
to<00:30:26.210><c> say</c><00:30:26.330><c> anything</c><00:30:26.570><c> about</c><00:30:26.659><c> that</c>

00:30:27.039 --> 00:30:27.049 align:start position:0%
to say anything about that
 

00:30:27.049 --> 00:30:30.279 align:start position:0%
to say anything about that
four-hour<00:30:27.889><c> long</c><00:30:28.159><c> double</c><00:30:28.700><c> and</c><00:30:28.909><c> complex</c><00:30:29.419><c> I</c><00:30:29.630><c> a</c><00:30:29.870><c> P</c>

00:30:30.279 --> 00:30:30.289 align:start position:0%
four-hour long double and complex I a P
 

00:30:30.289 --> 00:30:33.580 align:start position:0%
four-hour long double and complex I a P
is<00:30:30.470><c> plead</c><00:30:31.039><c> please</c><00:30:31.549><c> add</c><00:30:31.760><c> -</c><00:30:32.149><c> LM</c><00:30:32.630><c> X</c><00:30:32.960><c> to</c><00:30:33.230><c> your</c><00:30:33.380><c> link</c>

00:30:33.580 --> 00:30:33.590 align:start position:0%
is plead please add - LM X to your link
 

00:30:33.590 --> 00:30:37.600 align:start position:0%
is plead please add - LM X to your link
line<00:30:33.830><c> and</c><00:30:34.659><c> for</c><00:30:35.659><c> V</c><00:30:35.899><c> force</c><00:30:36.169><c> the</c><00:30:36.440><c> blahs</c><00:30:36.649><c> la</c><00:30:37.340><c> pack</c>

00:30:37.600 --> 00:30:37.610 align:start position:0%
line and for V force the blahs la pack
 

00:30:37.610 --> 00:30:40.330 align:start position:0%
line and for V force the blahs la pack
VDS<00:30:38.450><c> P</c><00:30:38.690><c> and</c><00:30:38.960><c> V</c><00:30:39.110><c> image</c><00:30:39.409><c> the</c><00:30:39.590><c> one-stop</c><00:30:40.070><c> shopping</c>

00:30:40.330 --> 00:30:40.340 align:start position:0%
VDS P and V image the one-stop shopping
 

00:30:40.340 --> 00:30:43.210 align:start position:0%
VDS P and V image the one-stop shopping
place<00:30:40.730><c> is</c><00:30:41.059><c> framework</c><00:30:42.019><c> accelerate</c><00:30:42.590><c> just</c><00:30:42.799><c> add</c><00:30:42.950><c> -</c>

00:30:43.210 --> 00:30:43.220 align:start position:0%
place is framework accelerate just add -
 

00:30:43.220 --> 00:30:45.669 align:start position:0%
place is framework accelerate just add -
framework<00:30:43.700><c> accelerate</c><00:30:44.240><c> to</c><00:30:44.389><c> your</c><00:30:44.510><c> compile</c><00:30:45.500><c> and</c>

00:30:45.669 --> 00:30:45.679 align:start position:0%
framework accelerate to your compile and
 

00:30:45.679 --> 00:30:51.840 align:start position:0%
framework accelerate to your compile and
Link<00:30:45.710><c> lines</c><00:30:46.070><c> I</c><00:30:49.690><c> know</c><00:30:50.690><c> that's</c><00:30:50.929><c> a</c><00:30:51.049><c> popular</c>

00:30:51.840 --> 00:30:51.850 align:start position:0%
Link lines I know that's a popular
 

00:30:51.850 --> 00:30:54.129 align:start position:0%
Link lines I know that's a popular
popular<00:30:52.850><c> flag</c><00:30:53.240><c> so</c><00:30:53.450><c> I'll</c><00:30:53.570><c> let</c><00:30:53.690><c> you</c><00:30:53.779><c> copy</c><00:30:53.990><c> that</c>

00:30:54.129 --> 00:30:54.139 align:start position:0%
popular flag so I'll let you copy that
 

00:30:54.139 --> 00:30:57.140 align:start position:0%
popular flag so I'll let you copy that
down<00:30:55.029><c> all</c><00:30:56.029><c> right</c>

00:30:57.140 --> 00:30:57.150 align:start position:0%
down all right
 

00:30:57.150 --> 00:30:59.490 align:start position:0%
down all right
well<00:30:58.150><c> what's</c><00:30:58.360><c> new</c><00:30:58.570><c> for</c><00:30:58.810><c> math</c><00:30:58.930><c> and</c><00:30:59.110><c> Tiger</c><00:30:59.380><c> what</c>

00:30:59.490 --> 00:30:59.500 align:start position:0%
well what's new for math and Tiger what
 

00:30:59.500 --> 00:31:02.730 align:start position:0%
well what's new for math and Tiger what
have<00:30:59.590><c> we</c><00:30:59.650><c> been</c><00:30:59.950><c> working</c><00:31:00.130><c> on</c><00:31:00.520><c> Ali</c><00:31:01.650><c> hit</c><00:31:02.650><c> the</c>

00:31:02.730 --> 00:31:02.740 align:start position:0%
have we been working on Ali hit the
 

00:31:02.740 --> 00:31:04.820 align:start position:0%
have we been working on Ali hit the
highlights<00:31:03.130><c> of</c><00:31:03.280><c> the</c><00:31:03.460><c> V</c><00:31:03.670><c> force</c><00:31:03.970><c> library</c>

00:31:04.820 --> 00:31:04.830 align:start position:0%
highlights of the V force library
 

00:31:04.830 --> 00:31:06.870 align:start position:0%
highlights of the V force library
basically<00:31:05.830><c> we've</c><00:31:05.980><c> been</c><00:31:06.010><c> told</c><00:31:06.370><c> people</c><00:31:06.700><c> don't</c>

00:31:06.870 --> 00:31:06.880 align:start position:0%
basically we've been told people don't
 

00:31:06.880 --> 00:31:08.910 align:start position:0%
basically we've been told people don't
want<00:31:07.060><c> to</c><00:31:07.090><c> do</c><00:31:07.270><c> one</c><00:31:07.960><c> square</c><00:31:08.230><c> root</c><00:31:08.470><c> at</c><00:31:08.590><c> a</c><00:31:08.710><c> time</c>

00:31:08.910 --> 00:31:08.920 align:start position:0%
want to do one square root at a time
 

00:31:08.920 --> 00:31:11.700 align:start position:0%
want to do one square root at a time
they'd<00:31:09.100><c> really</c><00:31:09.400><c> like</c><00:31:09.580><c> to</c><00:31:09.640><c> do</c><00:31:10.020><c> 768</c><00:31:11.020><c> at</c><00:31:11.410><c> a</c><00:31:11.440><c> time</c>

00:31:11.700 --> 00:31:11.710 align:start position:0%
they'd really like to do 768 at a time
 

00:31:11.710 --> 00:31:15.570 align:start position:0%
they'd really like to do 768 at a time
and<00:31:12.930><c> sure</c><00:31:13.930><c> enough</c><00:31:13.960><c> there</c><00:31:14.680><c> are</c><00:31:14.710><c> advantages</c><00:31:15.280><c> to</c>

00:31:15.570 --> 00:31:15.580 align:start position:0%
and sure enough there are advantages to
 

00:31:15.580 --> 00:31:17.310 align:start position:0%
and sure enough there are advantages to
be<00:31:15.700><c> had</c><00:31:15.730><c> when</c><00:31:16.120><c> you</c><00:31:16.240><c> can</c><00:31:16.420><c> do</c><00:31:16.870><c> many</c><00:31:17.020><c> of</c><00:31:17.200><c> these</c>

00:31:17.310 --> 00:31:17.320 align:start position:0%
be had when you can do many of these
 

00:31:17.320 --> 00:31:20.130 align:start position:0%
be had when you can do many of these
things<00:31:17.560><c> at</c><00:31:17.680><c> once</c><00:31:18.060><c> we</c><00:31:19.060><c> also</c><00:31:19.180><c> took</c><00:31:19.360><c> a</c><00:31:19.480><c> blahs</c>

00:31:20.130 --> 00:31:20.140 align:start position:0%
things at once we also took a blahs
 

00:31:20.140 --> 00:31:23.250 align:start position:0%
things at once we also took a blahs
update<00:31:20.590><c> an</c><00:31:20.740><c> update</c><00:31:21.190><c> to</c><00:31:21.340><c> Atlas</c><00:31:21.670><c> 3.6</c><00:31:22.450><c> this</c>

00:31:23.250 --> 00:31:23.260 align:start position:0%
update an update to Atlas 3.6 this
 

00:31:23.260 --> 00:31:26.250 align:start position:0%
update an update to Atlas 3.6 this
helped<00:31:23.530><c> us</c><00:31:23.620><c> in</c><00:31:23.860><c> a</c><00:31:24.120><c> couple</c><00:31:25.120><c> of</c><00:31:25.240><c> places</c><00:31:25.420><c> we</c><00:31:26.170><c> of</c>

00:31:26.250 --> 00:31:26.260 align:start position:0%
helped us in a couple of places we of
 

00:31:26.260 --> 00:31:27.990 align:start position:0%
helped us in a couple of places we of
course<00:31:26.470><c> do</c><00:31:26.650><c> additional</c><00:31:27.280><c> Mac</c><00:31:27.460><c> os10</c>

00:31:27.990 --> 00:31:28.000 align:start position:0%
course do additional Mac os10
 

00:31:28.000 --> 00:31:30.720 align:start position:0%
course do additional Mac os10
specific<00:31:28.930><c> tune</c><00:31:29.110><c> ups</c><00:31:29.290><c> to</c><00:31:29.410><c> that</c><00:31:29.610><c> open</c><00:31:30.610><c> source</c>

00:31:30.720 --> 00:31:30.730 align:start position:0%
specific tune ups to that open source
 

00:31:30.730 --> 00:31:33.150 align:start position:0%
specific tune ups to that open source
drop<00:31:31.090><c> and</c><00:31:31.410><c> our</c><00:31:32.410><c> compiler</c><00:31:32.860><c> technology</c>

00:31:33.150 --> 00:31:33.160 align:start position:0%
drop and our compiler technology
 

00:31:33.160 --> 00:31:34.350 align:start position:0%
drop and our compiler technology
improved<00:31:33.730><c> thank</c><00:31:33.970><c> you</c>

00:31:34.350 --> 00:31:34.360 align:start position:0%
improved thank you
 

00:31:34.360 --> 00:31:37.680 align:start position:0%
improved thank you
compiler<00:31:34.780><c> team</c><00:31:34.990><c> to</c><00:31:35.920><c> give</c><00:31:36.070><c> us</c><00:31:36.220><c> some</c><00:31:37.150><c> some</c><00:31:37.510><c> nice</c>

00:31:37.680 --> 00:31:37.690 align:start position:0%
compiler team to give us some some nice
 

00:31:37.690 --> 00:31:39.870 align:start position:0%
compiler team to give us some some nice
gains<00:31:37.990><c> some</c><00:31:38.440><c> nice</c><00:31:38.560><c> and</c><00:31:39.070><c> somewhat</c><00:31:39.430><c> unexpected</c>

00:31:39.870 --> 00:31:39.880 align:start position:0%
gains some nice and somewhat unexpected
 

00:31:39.880 --> 00:31:46.560 align:start position:0%
gains some nice and somewhat unexpected
gains<00:31:42.480><c> and</c><00:31:44.280><c> because</c><00:31:45.280><c> of</c><00:31:45.310><c> the</c><00:31:46.240><c> faster</c>

00:31:46.560 --> 00:31:46.570 align:start position:0%
gains and because of the faster
 

00:31:46.570 --> 00:31:48.090 align:start position:0%
gains and because of the faster
underlying<00:31:46.960><c> blas</c><00:31:47.260><c> some</c><00:31:47.770><c> improved</c>

00:31:48.090 --> 00:31:48.100 align:start position:0%
underlying blas some improved
 

00:31:48.100 --> 00:31:50.910 align:start position:0%
underlying blas some improved
compilation<00:31:48.640><c> our</c><00:31:48.790><c> la</c><00:31:49.120><c> pack</c><00:31:49.360><c> is</c><00:31:50.200><c> going</c><00:31:50.560><c> faster</c>

00:31:50.910 --> 00:31:50.920 align:start position:0%
compilation our la pack is going faster
 

00:31:50.920 --> 00:31:54.570 align:start position:0%
compilation our la pack is going faster
-<00:31:51.990><c> now</c><00:31:52.990><c> all</c><00:31:53.170><c> ali</c><00:31:53.530><c> always</c><00:31:53.980><c> likes</c><00:31:54.160><c> me</c><00:31:54.310><c> to</c><00:31:54.400><c> lead</c>

00:31:54.570 --> 00:31:54.580 align:start position:0%
- now all ali always likes me to lead
 

00:31:54.580 --> 00:31:57.840 align:start position:0%
- now all ali always likes me to lead
with<00:31:54.790><c> the</c><00:31:55.170><c> strongest</c><00:31:56.170><c> graph</c><00:31:56.440><c> so</c><00:31:56.770><c> i</c><00:31:57.040><c> can</c><00:31:57.760><c> give</c>

00:31:57.840 --> 00:31:57.850 align:start position:0%
with the strongest graph so i can give
 

00:31:57.850 --> 00:31:59.100 align:start position:0%
with the strongest graph so i can give
you<00:31:57.940><c> a</c><00:31:57.970><c> couple</c><00:31:58.180><c> of</c><00:31:58.210><c> performance</c><00:31:58.660><c> numbers</c><00:31:58.900><c> here</c>

00:31:59.100 --> 00:31:59.110 align:start position:0%
you a couple of performance numbers here
 

00:31:59.110 --> 00:32:03.060 align:start position:0%
you a couple of performance numbers here
this<00:32:00.870><c> these</c><00:32:01.870><c> are</c><00:32:01.990><c> some</c><00:32:02.110><c> numbers</c><00:32:02.200><c> i</c><00:32:02.500><c> collected</c>

00:32:03.060 --> 00:32:03.070 align:start position:0%
this these are some numbers i collected
 

00:32:03.070 --> 00:32:05.310 align:start position:0%
this these are some numbers i collected
for<00:32:03.220><c> the</c><00:32:03.340><c> two</c><00:32:03.610><c> and</c><00:32:03.730><c> a</c><00:32:03.760><c> half</c><00:32:03.910><c> gigahertz</c><00:32:04.210><c> g5</c><00:32:04.780><c> dual</c>

00:32:05.310 --> 00:32:05.320 align:start position:0%
for the two and a half gigahertz g5 dual
 

00:32:05.320 --> 00:32:08.970 align:start position:0%
for the two and a half gigahertz g5 dual
processor<00:32:06.330><c> it's</c><00:32:07.330><c> a</c><00:32:07.540><c> set</c><00:32:07.810><c> of</c><00:32:07.930><c> numbers</c><00:32:08.260><c> that</c><00:32:08.470><c> in</c>

00:32:08.970 --> 00:32:08.980 align:start position:0%
processor it's a set of numbers that in
 

00:32:08.980 --> 00:32:10.860 align:start position:0%
processor it's a set of numbers that in
the<00:32:09.490><c> sort</c><00:32:09.640><c> of</c><00:32:09.700><c> linear</c><00:32:10.030><c> route</c><00:32:10.090><c> computational</c>

00:32:10.860 --> 00:32:10.870 align:start position:0%
the sort of linear route computational
 

00:32:10.870 --> 00:32:12.840 align:start position:0%
the sort of linear route computational
linear<00:32:11.080><c> algebra</c><00:32:11.440><c> community</c><00:32:12.040><c> you'll</c><00:32:12.670><c> see</c>

00:32:12.840 --> 00:32:12.850 align:start position:0%
linear algebra community you'll see
 

00:32:12.850 --> 00:32:13.470 align:start position:0%
linear algebra community you'll see
quite<00:32:13.090><c> a</c><00:32:13.120><c> bit</c>

00:32:13.470 --> 00:32:13.480 align:start position:0%
quite a bit
 

00:32:13.480 --> 00:32:16.820 align:start position:0%
quite a bit
it<00:32:13.870><c> measures</c><00:32:14.320><c> matrix</c><00:32:15.220><c> multiplied</c><00:32:15.700><c> DMM</c><00:32:16.570><c> and</c>

00:32:16.820 --> 00:32:16.830 align:start position:0%
it measures matrix multiplied DMM and
 

00:32:16.830 --> 00:32:21.330 align:start position:0%
it measures matrix multiplied DMM and
then<00:32:17.830><c> the</c><00:32:17.980><c> three</c><00:32:18.250><c> decompositions</c><00:32:19.260><c> lu</c><00:32:20.260><c> and</c><00:32:20.590><c> the</c>

00:32:21.330 --> 00:32:21.340 align:start position:0%
then the three decompositions lu and the
 

00:32:21.340 --> 00:32:23.580 align:start position:0%
then the three decompositions lu and the
symmetric<00:32:21.730><c> decompositions</c><00:32:22.660><c> ll</c><00:32:23.350><c> transpose</c>

00:32:23.580 --> 00:32:23.590 align:start position:0%
symmetric decompositions ll transpose
 

00:32:23.590 --> 00:32:27.780 align:start position:0%
symmetric decompositions ll transpose
cholesky<00:32:24.160><c> and</c><00:32:24.520><c> the</c><00:32:24.640><c> crowd</c><00:32:24.880><c> u</c><00:32:25.120><c> transpose</c><00:32:25.330><c> u</c><00:32:26.790><c> for</c>

00:32:27.780 --> 00:32:27.790 align:start position:0%
cholesky and the crowd u transpose u for
 

00:32:27.790 --> 00:32:31.200 align:start position:0%
cholesky and the crowd u transpose u for
matrix<00:32:28.090><c> multiply</c><00:32:29.310><c> we</c><00:32:30.310><c> use</c><00:32:30.490><c> various</c><00:32:30.820><c> matrix</c>

00:32:31.200 --> 00:32:31.210 align:start position:0%
matrix multiply we use various matrix
 

00:32:31.210 --> 00:32:33.870 align:start position:0%
matrix multiply we use various matrix
sizes<00:32:31.630><c> ranging</c><00:32:31.930><c> from</c><00:32:32.080><c> 500</c><00:32:32.650><c> up</c><00:32:32.770><c> to</c><00:32:32.920><c> roughly</c><00:32:33.700><c> I</c>

00:32:33.870 --> 00:32:33.880 align:start position:0%
sizes ranging from 500 up to roughly I
 

00:32:33.880 --> 00:32:38.010 align:start position:0%
sizes ranging from 500 up to roughly I
think<00:32:34.150><c> 9000</c><00:32:34.780><c> and</c><00:32:36.600><c> sort</c><00:32:37.600><c> of</c><00:32:37.630><c> got</c><00:32:37.750><c> our</c><00:32:37.870><c> first</c>

00:32:38.010 --> 00:32:38.020 align:start position:0%
think 9000 and sort of got our first
 

00:32:38.020 --> 00:32:41.400 align:start position:0%
think 9000 and sort of got our first
plateau<00:32:38.320><c> or</c><00:32:38.980><c> bit</c><00:32:39.400><c> over</c><00:32:39.790><c> eleven</c><00:32:40.480><c> gigaflops</c><00:32:41.050><c> and</c>

00:32:41.400 --> 00:32:41.410 align:start position:0%
plateau or bit over eleven gigaflops and
 

00:32:41.410 --> 00:32:43.710 align:start position:0%
plateau or bit over eleven gigaflops and
then<00:32:41.770><c> and</c><00:32:42.190><c> sort</c><00:32:42.850><c> of</c><00:32:42.880><c> an</c><00:32:42.970><c> interesting</c><00:32:43.270><c> jump</c>

00:32:43.710 --> 00:32:43.720 align:start position:0%
then and sort of an interesting jump
 

00:32:43.720 --> 00:32:46.290 align:start position:0%
then and sort of an interesting jump
around<00:32:43.840><c> size</c><00:32:44.440><c> 5000</c><00:32:45.220><c> and</c><00:32:45.400><c> as</c><00:32:45.760><c> we</c><00:32:45.940><c> push</c><00:32:46.120><c> up</c>

00:32:46.290 --> 00:32:46.300 align:start position:0%
around size 5000 and as we push up
 

00:32:46.300 --> 00:32:49.710 align:start position:0%
around size 5000 and as we push up
beyond<00:32:47.050><c> the</c><00:32:47.230><c> 12</c><00:32:47.560><c> and</c><00:32:47.770><c> into</c><00:32:48.280><c> the</c><00:32:48.370><c> 13</c><00:32:48.730><c> gigaflop</c>

00:32:49.710 --> 00:32:49.720 align:start position:0%
beyond the 12 and into the 13 gigaflop
 

00:32:49.720 --> 00:32:51.870 align:start position:0%
beyond the 12 and into the 13 gigaflop
range<00:32:50.020><c> and</c><00:32:50.920><c> the</c><00:32:51.010><c> decompositions</c><00:32:51.700><c> are</c><00:32:51.820><c> a</c>

00:32:51.870 --> 00:32:51.880 align:start position:0%
range and the decompositions are a
 

00:32:51.880 --> 00:32:54.600 align:start position:0%
range and the decompositions are a
little<00:32:52.090><c> bit</c><00:32:52.620><c> less</c><00:32:53.620><c> jumpy</c><00:32:54.040><c> of</c><00:32:54.190><c> the</c><00:32:54.280><c> less</c><00:32:54.430><c> of</c><00:32:54.520><c> a</c>

00:32:54.600 --> 00:32:54.610 align:start position:0%
little bit less jumpy of the less of a
 

00:32:54.610 --> 00:32:56.490 align:start position:0%
little bit less jumpy of the less of a
step<00:32:54.820><c> function</c><00:32:55.000><c> but</c><00:32:55.870><c> Jenna</c><00:32:56.110><c> look</c><00:32:56.350><c> like</c>

00:32:56.490 --> 00:32:56.500 align:start position:0%
step function but Jenna look like
 

00:32:56.500 --> 00:32:58.560 align:start position:0%
step function but Jenna look like
they're<00:32:56.620><c> asymptotic</c><00:32:57.190><c> hitting</c><00:32:58.090><c> an</c><00:32:58.150><c> asymptote</c>

00:32:58.560 --> 00:32:58.570 align:start position:0%
they're asymptotic hitting an asymptote
 

00:32:58.570 --> 00:33:03.120 align:start position:0%
they're asymptotic hitting an asymptote
at<00:32:58.720><c> around</c><00:32:58.930><c> 10</c><00:32:59.650><c> gigaflops</c><00:33:01.860><c> well</c><00:33:02.860><c> what's</c>

00:33:03.120 --> 00:33:03.130 align:start position:0%
at around 10 gigaflops well what's
 

00:33:03.130 --> 00:33:04.860 align:start position:0%
at around 10 gigaflops well what's
what's<00:33:03.490><c> the</c><00:33:03.610><c> competition</c><00:33:03.940><c> up</c><00:33:04.270><c> to</c><00:33:04.420><c> these</c><00:33:04.600><c> days</c>

00:33:04.860 --> 00:33:04.870 align:start position:0%
what's the competition up to these days
 

00:33:04.870 --> 00:33:09.250 align:start position:0%
what's the competition up to these days
let's<00:33:05.740><c> just</c><00:33:05.980><c> look</c><00:33:06.190><c> at</c><00:33:06.370><c> matrix</c><00:33:07.330><c> multiply</c>

00:33:09.250 --> 00:33:09.260 align:start position:0%
let's just look at matrix multiply
 

00:33:09.260 --> 00:33:12.149 align:start position:0%
let's just look at matrix multiply
again<00:33:09.889><c> in</c><00:33:10.070><c> yellow</c><00:33:10.399><c> is</c><00:33:10.639><c> the</c><00:33:10.880><c> dual</c>

00:33:12.149 --> 00:33:12.159 align:start position:0%
again in yellow is the dual
 

00:33:12.159 --> 00:33:15.399 align:start position:0%
again in yellow is the dual
two-and-a-half<00:33:13.159><c> gigahertz</c><00:33:13.490><c> g5</c><00:33:14.289><c> topping</c><00:33:15.289><c> out</c>

00:33:15.399 --> 00:33:15.409 align:start position:0%
two-and-a-half gigahertz g5 topping out
 

00:33:15.409 --> 00:33:21.039 align:start position:0%
two-and-a-half gigahertz g5 topping out
at<00:33:16.029><c> or</c><00:33:17.029><c> near</c><00:33:17.179><c> at</c><00:33:17.750><c> or</c><00:33:17.990><c> above</c><00:33:18.169><c> 12</c><00:33:18.529><c> gigahertz</c><00:33:20.049><c> on</c>

00:33:21.039 --> 00:33:21.049 align:start position:0%
at or near at or above 12 gigahertz on
 

00:33:21.049 --> 00:33:23.350 align:start position:0%
at or near at or above 12 gigahertz on
the<00:33:21.200><c> bottom</c><00:33:21.500><c> in</c><00:33:21.590><c> blue</c><00:33:21.830><c> is</c><00:33:22.010><c> Opteron</c><00:33:22.669><c> a</c><00:33:22.700><c> 2.0</c>

00:33:23.350 --> 00:33:23.360 align:start position:0%
the bottom in blue is Opteron a 2.0
 

00:33:23.360 --> 00:33:28.240 align:start position:0%
the bottom in blue is Opteron a 2.0
gigahertz<00:33:23.720><c> Opteron</c><00:33:24.500><c> and</c><00:33:26.350><c> they</c><00:33:27.350><c> sort</c><00:33:27.590><c> of</c><00:33:27.649><c> get</c>

00:33:28.240 --> 00:33:28.250 align:start position:0%
gigahertz Opteron and they sort of get
 

00:33:28.250 --> 00:33:33.000 align:start position:0%
gigahertz Opteron and they sort of get
to<00:33:28.370><c> about</c><00:33:28.519><c> seven</c><00:33:28.970><c> gigaflops</c><00:33:29.480><c> in</c><00:33:29.659><c> a</c><00:33:29.720><c> 2.0</c><00:33:30.230><c> model</c>

00:33:33.000 --> 00:33:33.010 align:start position:0%
 
 

00:33:33.010 --> 00:33:35.710 align:start position:0%
 
for<00:33:34.010><c> the</c><00:33:34.100><c> purposes</c><00:33:34.610><c> of</c><00:33:34.669><c> comparison</c><00:33:35.149><c> we</c><00:33:35.570><c> know</c>

00:33:35.710 --> 00:33:35.720 align:start position:0%
for the purposes of comparison we know
 

00:33:35.720 --> 00:33:37.870 align:start position:0%
for the purposes of comparison we know
that<00:33:35.899><c> they've</c><00:33:36.049><c> got</c><00:33:36.080><c> a</c><00:33:36.260><c> 2.4</c><00:33:37.070><c> gigahertz</c><00:33:37.370><c> part</c>

00:33:37.870 --> 00:33:37.880 align:start position:0%
that they've got a 2.4 gigahertz part
 

00:33:37.880 --> 00:33:39.129 align:start position:0%
that they've got a 2.4 gigahertz part
out<00:33:38.059><c> there</c><00:33:38.299><c> and</c><00:33:38.480><c> if</c><00:33:38.570><c> they</c><00:33:38.720><c> were</c><00:33:38.779><c> allowed</c><00:33:39.110><c> to</c>

00:33:39.129 --> 00:33:39.139 align:start position:0%
out there and if they were allowed to
 

00:33:39.139 --> 00:33:41.080 align:start position:0%
out there and if they were allowed to
perfectly<00:33:39.740><c> scale</c><00:33:40.070><c> they'd</c><00:33:40.519><c> hit</c><00:33:40.669><c> that</c><00:33:40.820><c> dashed</c>

00:33:41.080 --> 00:33:41.090 align:start position:0%
perfectly scale they'd hit that dashed
 

00:33:41.090 --> 00:33:44.740 align:start position:0%
perfectly scale they'd hit that dashed
white<00:33:41.419><c> line</c><00:33:41.630><c> and</c><00:33:42.130><c> come</c><00:33:43.130><c> in</c><00:33:43.250><c> just</c><00:33:43.519><c> a</c><00:33:43.760><c> bit</c><00:33:44.299><c> over</c><00:33:44.600><c> 8</c>

00:33:44.740 --> 00:33:44.750 align:start position:0%
white line and come in just a bit over 8
 

00:33:44.750 --> 00:33:46.539 align:start position:0%
white line and come in just a bit over 8
gigaflops<00:33:45.320><c> we</c><00:33:45.500><c> expect</c><00:33:45.830><c> to</c><00:33:45.919><c> see</c><00:33:46.100><c> that</c><00:33:46.250><c> when</c><00:33:46.399><c> we</c>

00:33:46.539 --> 00:33:46.549 align:start position:0%
gigaflops we expect to see that when we
 

00:33:46.549 --> 00:33:50.680 align:start position:0%
gigaflops we expect to see that when we
measure<00:33:46.730><c> those</c><00:33:46.970><c> machines</c><00:33:48.909><c> dual</c><00:33:49.909><c> 3.2</c>

00:33:50.680 --> 00:33:50.690 align:start position:0%
measure those machines dual 3.2
 

00:33:50.690 --> 00:33:54.970 align:start position:0%
measure those machines dual 3.2
gigahertz<00:33:50.960><c> Xeon</c><00:33:51.409><c> is</c><00:33:51.710><c> the</c><00:33:52.130><c> Green</c><00:33:53.679><c> gets</c><00:33:54.679><c> up</c><00:33:54.889><c> a</c>

00:33:54.970 --> 00:33:54.980 align:start position:0%
gigahertz Xeon is the Green gets up a
 

00:33:54.980 --> 00:33:57.310 align:start position:0%
gigahertz Xeon is the Green gets up a
little<00:33:55.370><c> bit</c><00:33:55.460><c> above</c><00:33:55.610><c> 10</c><00:33:55.850><c> probably</c><00:33:56.269><c> touches</c><00:33:56.990><c> 11</c>

00:33:57.310 --> 00:33:57.320 align:start position:0%
little bit above 10 probably touches 11
 

00:33:57.320 --> 00:33:58.299 align:start position:0%
little bit above 10 probably touches 11
in<00:33:57.409><c> a</c><00:33:57.470><c> couple</c><00:33:57.679><c> those</c><00:33:57.769><c> places</c><00:33:58.159><c> so</c>

00:33:58.299 --> 00:33:58.309 align:start position:0%
in a couple those places so
 

00:33:58.309 --> 00:34:01.149 align:start position:0%
in a couple those places so
two-and-a-half<00:33:59.440><c> gigahertz</c><00:34:00.440><c> g5</c><00:34:00.860><c> seems</c><00:34:01.070><c> to</c>

00:34:01.149 --> 00:34:01.159 align:start position:0%
two-and-a-half gigahertz g5 seems to
 

00:34:01.159 --> 00:34:03.220 align:start position:0%
two-and-a-half gigahertz g5 seems to
dominate<00:34:01.340><c> in</c><00:34:01.850><c> the</c><00:34:02.389><c> matrix</c><00:34:02.690><c> multiply</c><00:34:03.019><c> game</c>

00:34:03.220 --> 00:34:03.230 align:start position:0%
dominate in the matrix multiply game
 

00:34:03.230 --> 00:34:13.040 align:start position:0%
dominate in the matrix multiply game
quite<00:34:03.649><c> quite</c><00:34:04.399><c> handily</c>

00:34:13.040 --> 00:34:13.050 align:start position:0%
 
 

00:34:13.050 --> 00:34:15.020 align:start position:0%
 
the<00:34:13.560><c> slide</c><00:34:13.770><c> is</c><00:34:13.889><c> a</c><00:34:13.919><c> bit</c><00:34:14.100><c> more</c><00:34:14.250><c> busy</c><00:34:14.610><c> but</c><00:34:14.790><c> again</c>

00:34:15.020 --> 00:34:15.030 align:start position:0%
the slide is a bit more busy but again
 

00:34:15.030 --> 00:34:18.290 align:start position:0%
the slide is a bit more busy but again
the<00:34:15.350><c> color</c><00:34:16.350><c> should</c><00:34:16.590><c> be</c><00:34:16.710><c> the</c><00:34:16.940><c> guide</c><00:34:17.940><c> here</c>

00:34:18.290 --> 00:34:18.300 align:start position:0%
the color should be the guide here
 

00:34:18.300 --> 00:34:22.639 align:start position:0%
the color should be the guide here
yellow<00:34:18.929><c> again</c><00:34:19.970><c> g5</c><00:34:20.970><c> green</c><00:34:21.780><c> is</c><00:34:21.929><c> a</c><00:34:21.960><c> Xeon</c><00:34:22.320><c> and</c>

00:34:22.639 --> 00:34:22.649 align:start position:0%
yellow again g5 green is a Xeon and
 

00:34:22.649 --> 00:34:25.399 align:start position:0%
yellow again g5 green is a Xeon and
Opteron<00:34:23.280><c> in</c><00:34:23.550><c> blue</c><00:34:24.090><c> and</c><00:34:24.510><c> again</c><00:34:24.659><c> we've</c><00:34:25.050><c> scaled</c>

00:34:25.399 --> 00:34:25.409 align:start position:0%
Opteron in blue and again we've scaled
 

00:34:25.409 --> 00:34:31.609 align:start position:0%
Opteron in blue and again we've scaled
Opteron<00:34:26.360><c> by</c><00:34:27.360><c> 20%</c><00:34:27.720><c> for</c><00:34:28.110><c> the</c><00:34:28.200><c> white</c><00:34:28.379><c> -</c><00:34:28.590><c> line</c><00:34:30.619><c> g5</c>

00:34:31.609 --> 00:34:31.619 align:start position:0%
Opteron by 20% for the white - line g5
 

00:34:31.619 --> 00:34:39.050 align:start position:0%
Opteron by 20% for the white - line g5
seems<00:34:31.830><c> to</c><00:34:31.950><c> dominate</c><00:34:32.070><c> again</c><00:34:37.760><c> this</c><00:34:38.760><c> looks</c><00:34:39.000><c> a</c>

00:34:39.050 --> 00:34:39.060 align:start position:0%
seems to dominate again this looks a
 

00:34:39.060 --> 00:34:40.250 align:start position:0%
seems to dominate again this looks a
little<00:34:39.119><c> bit</c><00:34:39.330><c> out</c><00:34:39.450><c> of</c><00:34:39.480><c> place</c>

00:34:40.250 --> 00:34:40.260 align:start position:0%
little bit out of place
 

00:34:40.260 --> 00:34:43.040 align:start position:0%
little bit out of place
I<00:34:41.060><c> mentioned</c><00:34:42.060><c> we</c><00:34:42.149><c> did</c><00:34:42.270><c> long</c><00:34:42.450><c> double</c><00:34:42.780><c> I</c><00:34:42.869><c> think</c>

00:34:43.040 --> 00:34:43.050 align:start position:0%
I mentioned we did long double I think
 

00:34:43.050 --> 00:34:44.359 align:start position:0%
I mentioned we did long double I think
Olly<00:34:43.169><c> mentioned</c><00:34:43.470><c> we</c><00:34:43.530><c> did</c><00:34:43.649><c> long</c><00:34:43.919><c> double</c><00:34:44.220><c> and</c>

00:34:44.359 --> 00:34:44.369 align:start position:0%
Olly mentioned we did long double and
 

00:34:44.369 --> 00:34:45.889 align:start position:0%
Olly mentioned we did long double and
we'll<00:34:44.490><c> also</c><00:34:44.669><c> have</c><00:34:44.940><c> the</c><00:34:45.090><c> tight</c><00:34:45.389><c> generic</c><00:34:45.750><c> math</c>

00:34:45.889 --> 00:34:45.899 align:start position:0%
we'll also have the tight generic math
 

00:34:45.899 --> 00:34:49.340 align:start position:0%
we'll also have the tight generic math
functions<00:34:46.409><c> that's</c><00:34:46.679><c> good</c><00:34:47.490><c> to</c><00:34:47.639><c> know</c><00:34:48.169><c> so</c><00:34:49.169><c> I</c><00:34:49.200><c> want</c>

00:34:49.340 --> 00:34:49.350 align:start position:0%
functions that's good to know so I want
 

00:34:49.350 --> 00:34:51.609 align:start position:0%
functions that's good to know so I want
to<00:34:49.379><c> come</c><00:34:49.500><c> back</c><00:34:49.619><c> to</c><00:34:49.740><c> this</c><00:34:49.860><c> um</c><00:34:50.100><c> V</c><00:34:50.550><c> force</c><00:34:50.820><c> business</c>

00:34:51.609 --> 00:34:51.619 align:start position:0%
to come back to this um V force business
 

00:34:51.619 --> 00:34:56.119 align:start position:0%
to come back to this um V force business
and<00:34:52.619><c> as</c><00:34:53.369><c> Ali</c><00:34:53.940><c> alluded</c><00:34:54.330><c> to</c><00:34:54.590><c> the</c><00:34:55.590><c> elementary</c>

00:34:56.119 --> 00:34:56.129 align:start position:0%
and as Ali alluded to the elementary
 

00:34:56.129 --> 00:34:58.609 align:start position:0%
and as Ali alluded to the elementary
functions<00:34:56.550><c> in</c><00:34:56.730><c> live</c><00:34:56.940><c> M</c><00:34:57.090><c> square</c><00:34:57.570><c> root</c><00:34:57.810><c> coasts</c>

00:34:58.609 --> 00:34:58.619 align:start position:0%
functions in live M square root coasts
 

00:34:58.619 --> 00:35:03.590 align:start position:0%
functions in live M square root coasts
sine<00:34:59.210><c> arc</c><00:35:00.210><c> sine</c><00:35:00.950><c> passed</c><00:35:01.950><c> a</c><00:35:02.070><c> single</c><00:35:02.280><c> operand</c><00:35:02.700><c> do</c>

00:35:03.590 --> 00:35:03.600 align:start position:0%
sine arc sine passed a single operand do
 

00:35:03.600 --> 00:35:05.930 align:start position:0%
sine arc sine passed a single operand do
a<00:35:03.710><c> fairly</c><00:35:04.710><c> heavy</c><00:35:04.830><c> amount</c><00:35:05.130><c> of</c><00:35:05.190><c> computation</c><00:35:05.790><c> and</c>

00:35:05.930 --> 00:35:05.940 align:start position:0%
a fairly heavy amount of computation and
 

00:35:05.940 --> 00:35:08.720 align:start position:0%
a fairly heavy amount of computation and
burp<00:35:06.210><c> out</c><00:35:06.390><c> a</c><00:35:06.960><c> single</c><00:35:07.440><c> result</c><00:35:07.680><c> it</c><00:35:08.369><c> turns</c><00:35:08.550><c> out</c>

00:35:08.720 --> 00:35:08.730 align:start position:0%
burp out a single result it turns out
 

00:35:08.730 --> 00:35:10.850 align:start position:0%
burp out a single result it turns out
that<00:35:08.820><c> leaves</c><00:35:09.030><c> bubbles</c><00:35:09.540><c> in</c><00:35:09.750><c> the</c><00:35:09.930><c> modern</c><00:35:10.560><c> risk</c>

00:35:10.850 --> 00:35:10.860 align:start position:0%
that leaves bubbles in the modern risk
 

00:35:10.860 --> 00:35:16.220 align:start position:0%
that leaves bubbles in the modern risk
pipelines<00:35:12.680><c> so</c><00:35:13.680><c> we</c><00:35:13.800><c> say</c><00:35:13.950><c> these</c><00:35:14.690><c> c99</c><00:35:15.690><c> api's</c><00:35:16.020><c> or</c>

00:35:16.220 --> 00:35:16.230 align:start position:0%
pipelines so we say these c99 api's or
 

00:35:16.230 --> 00:35:19.550 align:start position:0%
pipelines so we say these c99 api's or
data<00:35:16.440><c> starved</c><00:35:17.720><c> we're</c><00:35:18.720><c> also</c><00:35:18.900><c> required</c><00:35:19.350><c> by</c><00:35:19.530><c> I</c>

00:35:19.550 --> 00:35:19.560 align:start position:0%
data starved we're also required by I
 

00:35:19.560 --> 00:35:22.910 align:start position:0%
data starved we're also required by I
Triple<00:35:20.160><c> E</c><00:35:20.190><c> 754</c><00:35:21.020><c> to</c><00:35:22.020><c> have</c><00:35:22.140><c> very</c><00:35:22.500><c> careful</c>

00:35:22.910 --> 00:35:22.920 align:start position:0%
Triple E 754 to have very careful
 

00:35:22.920 --> 00:35:25.960 align:start position:0%
Triple E 754 to have very careful
control<00:35:23.040><c> over</c><00:35:23.640><c> the</c><00:35:24.119><c> rounding</c><00:35:24.720><c> modes</c><00:35:24.960><c> and</c>

00:35:25.960 --> 00:35:25.970 align:start position:0%
control over the rounding modes and
 

00:35:25.970 --> 00:35:28.160 align:start position:0%
control over the rounding modes and
exceptions<00:35:26.970><c> that</c><00:35:27.240><c> might</c><00:35:27.480><c> be</c><00:35:27.600><c> generated</c><00:35:27.930><c> in</c>

00:35:28.160 --> 00:35:28.170 align:start position:0%
exceptions that might be generated in
 

00:35:28.170 --> 00:35:29.599 align:start position:0%
exceptions that might be generated in
the<00:35:28.200><c> course</c><00:35:28.470><c> of</c><00:35:28.619><c> such</c><00:35:28.740><c> a</c><00:35:28.770><c> computation</c><00:35:29.460><c> and</c>

00:35:29.599 --> 00:35:29.609 align:start position:0%
the course of such a computation and
 

00:35:29.609 --> 00:35:31.750 align:start position:0%
the course of such a computation and
that<00:35:29.940><c> adds</c><00:35:30.119><c> a</c><00:35:30.270><c> fair</c><00:35:30.690><c> amount</c><00:35:30.780><c> of</c><00:35:30.930><c> overhead</c>

00:35:31.750 --> 00:35:31.760 align:start position:0%
that adds a fair amount of overhead
 

00:35:31.760 --> 00:35:33.740 align:start position:0%
that adds a fair amount of overhead
they're<00:35:32.760><c> instructions</c><00:35:33.090><c> that</c><00:35:33.300><c> will</c><00:35:33.450><c> have</c><00:35:33.630><c> to</c>

00:35:33.740 --> 00:35:33.750 align:start position:0%
they're instructions that will have to
 

00:35:33.750 --> 00:35:36.020 align:start position:0%
they're instructions that will have to
synchronize<00:35:34.140><c> the</c><00:35:34.290><c> pipe</c><00:35:34.500><c> to</c><00:35:35.490><c> get</c><00:35:35.640><c> that</c><00:35:35.790><c> stuff</c>

00:35:36.020 --> 00:35:36.030 align:start position:0%
synchronize the pipe to get that stuff
 

00:35:36.030 --> 00:35:37.940 align:start position:0%
synchronize the pipe to get that stuff
right<00:35:36.270><c> and</c><00:35:36.480><c> we</c><00:35:37.080><c> pay</c><00:35:37.290><c> it</c><00:35:37.410><c> pretty</c><00:35:37.619><c> good</c><00:35:37.770><c> price</c>

00:35:37.940 --> 00:35:37.950 align:start position:0%
right and we pay it pretty good price
 

00:35:37.950 --> 00:35:42.109 align:start position:0%
right and we pay it pretty good price
for<00:35:37.980><c> that</c><00:35:39.650><c> so</c><00:35:40.650><c> the</c><00:35:40.770><c> ideas</c><00:35:41.100><c> and</c><00:35:41.280><c> V</c><00:35:41.460><c> force</c><00:35:41.790><c> are</c>

00:35:42.109 --> 00:35:42.119 align:start position:0%
for that so the ideas and V force are
 

00:35:42.119 --> 00:35:44.450 align:start position:0%
for that so the ideas and V force are
let's<00:35:42.450><c> pass</c><00:35:42.720><c> many</c><00:35:43.230><c> operands</c><00:35:44.100><c> through</c><00:35:44.430><c> a</c>

00:35:44.450 --> 00:35:44.460 align:start position:0%
let's pass many operands through a
 

00:35:44.460 --> 00:35:46.099 align:start position:0%
let's pass many operands through a
single<00:35:44.850><c> call</c><00:35:45.090><c> maybe</c><00:35:45.480><c> we</c><00:35:45.660><c> can</c><00:35:45.810><c> get</c><00:35:45.930><c> some</c>

00:35:46.099 --> 00:35:46.109 align:start position:0%
single call maybe we can get some
 

00:35:46.109 --> 00:35:50.599 align:start position:0%
single call maybe we can get some
advantage<00:35:46.500><c> there</c><00:35:46.740><c> so</c><00:35:47.640><c> if</c><00:35:47.880><c> we</c><00:35:48.000><c> had</c><00:35:49.100><c> 768</c><00:35:50.100><c> values</c>

00:35:50.599 --> 00:35:50.609 align:start position:0%
advantage there so if we had 768 values
 

00:35:50.609 --> 00:35:52.490 align:start position:0%
advantage there so if we had 768 values
and<00:35:50.820><c> a</c><00:35:50.880><c> vector</c><00:35:51.060><c> X</c><00:35:51.450><c> and</c><00:35:51.750><c> we</c><00:35:51.810><c> wanted</c><00:35:52.020><c> to</c><00:35:52.080><c> compute</c>

00:35:52.490 --> 00:35:52.500 align:start position:0%
and a vector X and we wanted to compute
 

00:35:52.500 --> 00:35:54.620 align:start position:0%
and a vector X and we wanted to compute
the<00:35:52.680><c> single</c><00:35:53.310><c> precision</c><00:35:53.520><c> floating</c><00:35:53.670><c> point</c><00:35:54.240><c> sign</c>

00:35:54.620 --> 00:35:54.630 align:start position:0%
the single precision floating point sign
 

00:35:54.630 --> 00:35:56.750 align:start position:0%
the single precision floating point sign
of<00:35:54.810><c> those</c><00:35:54.960><c> things</c><00:35:55.230><c> we</c><00:35:55.380><c> could</c><00:35:55.530><c> call</c><00:35:55.710><c> V</c><00:35:55.980><c> V</c><00:35:56.160><c> sign</c><00:35:56.520><c> F</c>

00:35:56.750 --> 00:35:56.760 align:start position:0%
of those things we could call V V sign F
 

00:35:56.760 --> 00:36:00.050 align:start position:0%
of those things we could call V V sign F
pass<00:35:57.180><c> X</c><00:35:58.140><c> 768</c><00:35:58.619><c> and</c><00:35:59.040><c> a</c><00:35:59.190><c> place</c><00:35:59.400><c> to</c><00:35:59.430><c> stuff</c><00:35:59.940><c> the</c>

00:36:00.050 --> 00:36:00.060 align:start position:0%
pass X 768 and a place to stuff the
 

00:36:00.060 --> 00:36:03.980 align:start position:0%
pass X 768 and a place to stuff the
answers<00:36:00.359><c> Y</c><00:36:00.570><c> or</c><00:36:01.020><c> we</c><00:36:01.590><c> might</c><00:36:01.740><c> have</c><00:36:02.690><c> 117</c><00:36:03.690><c> numbers</c>

00:36:03.980 --> 00:36:03.990 align:start position:0%
answers Y or we might have 117 numbers
 

00:36:03.990 --> 00:36:05.470 align:start position:0%
answers Y or we might have 117 numbers
we<00:36:04.109><c> want</c><00:36:04.260><c> the</c><00:36:04.410><c> arctan</c><00:36:04.920><c> of</c><00:36:04.950><c> them</c><00:36:05.250><c> there's</c><00:36:05.400><c> a</c>

00:36:05.470 --> 00:36:05.480 align:start position:0%
we want the arctan of them there's a
 

00:36:05.480 --> 00:36:09.410 align:start position:0%
we want the arctan of them there's a
call<00:36:06.480><c> for</c><00:36:06.690><c> that</c><00:36:07.820><c> we're</c><00:36:08.820><c> going</c><00:36:08.910><c> to</c><00:36:09.000><c> insist</c><00:36:09.210><c> on</c>

00:36:09.410 --> 00:36:09.420 align:start position:0%
call for that we're going to insist on
 

00:36:09.420 --> 00:36:11.660 align:start position:0%
call for that we're going to insist on
the<00:36:09.600><c> I</c><00:36:09.780><c> Triple</c><00:36:09.990><c> E</c><00:36:10.200><c> default</c><00:36:10.680><c> rounding</c><00:36:11.460><c> modes</c>

00:36:11.660 --> 00:36:11.670 align:start position:0%
the I Triple E default rounding modes
 

00:36:11.670 --> 00:36:13.910 align:start position:0%
the I Triple E default rounding modes
and<00:36:12.000><c> we're</c><00:36:12.780><c> not</c><00:36:12.900><c> going</c><00:36:13.050><c> to</c><00:36:13.109><c> set</c><00:36:13.290><c> any</c><00:36:13.320><c> exception</c>

00:36:13.910 --> 00:36:13.920 align:start position:0%
and we're not going to set any exception
 

00:36:13.920 --> 00:36:17.720 align:start position:0%
and we're not going to set any exception
flags<00:36:14.300><c> so</c><00:36:15.300><c> this</c><00:36:15.450><c> is</c><00:36:15.570><c> for</c><00:36:15.810><c> you</c><00:36:15.960><c> know</c><00:36:16.580><c> close</c><00:36:17.580><c> to</c>

00:36:17.720 --> 00:36:17.730 align:start position:0%
flags so this is for you know close to
 

00:36:17.730 --> 00:36:19.849 align:start position:0%
flags so this is for you know close to
the<00:36:17.850><c> medal</c><00:36:18.119><c> high</c><00:36:18.480><c> performance</c><00:36:19.140><c> go</c><00:36:19.380><c> as</c><00:36:19.530><c> fast</c><00:36:19.680><c> as</c>

00:36:19.849 --> 00:36:19.859 align:start position:0%
the medal high performance go as fast as
 

00:36:19.859 --> 00:36:22.580 align:start position:0%
the medal high performance go as fast as
you<00:36:19.950><c> can</c><00:36:20.250><c> we</c><00:36:20.730><c> don't</c><00:36:20.910><c> expect</c><00:36:21.119><c> any</c><00:36:21.840><c> big</c><00:36:22.109><c> problems</c>

00:36:22.580 --> 00:36:22.590 align:start position:0%
you can we don't expect any big problems
 

00:36:22.590 --> 00:36:24.710 align:start position:0%
you can we don't expect any big problems
and<00:36:22.740><c> if</c><00:36:22.859><c> there</c><00:36:23.220><c> are</c><00:36:23.250><c> any</c><00:36:23.580><c> well</c><00:36:23.880><c> we'll</c><00:36:24.510><c> deal</c>

00:36:24.710 --> 00:36:24.720 align:start position:0%
and if there are any well we'll deal
 

00:36:24.720 --> 00:36:26.820 align:start position:0%
and if there are any well we'll deal
with<00:36:24.810><c> them</c><00:36:24.930><c> in</c><00:36:25.020><c> some</c><00:36:25.230><c> other</c><00:36:25.470><c> manner</c>

00:36:26.820 --> 00:36:26.830 align:start position:0%
with them in some other manner
 

00:36:26.830 --> 00:36:35.030 align:start position:0%
with them in some other manner
i<00:36:27.060><c> Tripoli</c><00:36:28.060><c> approach</c><00:36:32.700><c> so</c><00:36:33.700><c> we</c><00:36:33.790><c> also</c><00:36:33.970><c> get</c><00:36:34.240><c> some</c>

00:36:35.030 --> 00:36:35.040 align:start position:0%
i Tripoli approach so we also get some
 

00:36:35.040 --> 00:36:37.320 align:start position:0%
i Tripoli approach so we also get some
mileage<00:36:36.040><c> here</c><00:36:36.369><c> because</c><00:36:36.670><c> given</c><00:36:37.000><c> multiple</c>

00:36:37.320 --> 00:36:37.330 align:start position:0%
mileage here because given multiple
 

00:36:37.330 --> 00:36:40.740 align:start position:0%
mileage here because given multiple
operands<00:36:37.930><c> we</c><00:36:38.740><c> can</c><00:36:38.890><c> pack</c><00:36:39.100><c> them</c><00:36:39.280><c> together</c><00:36:39.750><c> into</c>

00:36:40.740 --> 00:36:40.750 align:start position:0%
operands we can pack them together into
 

00:36:40.750 --> 00:36:42.030 align:start position:0%
operands we can pack them together into
Hardware<00:36:41.170><c> vectors</c><00:36:41.470><c> on</c><00:36:41.590><c> the</c><00:36:41.619><c> single-precision</c>

00:36:42.030 --> 00:36:42.040 align:start position:0%
Hardware vectors on the single-precision
 

00:36:42.040 --> 00:36:43.620 align:start position:0%
Hardware vectors on the single-precision
side<00:36:42.460><c> and</c><00:36:42.670><c> send</c><00:36:42.880><c> them</c><00:36:43.000><c> through</c><00:36:43.150><c> the</c><00:36:43.270><c> altivec</c>

00:36:43.620 --> 00:36:43.630 align:start position:0%
side and send them through the altivec
 

00:36:43.630 --> 00:36:46.460 align:start position:0%
side and send them through the altivec
engine<00:36:43.990><c> this</c><00:36:44.470><c> is</c><00:36:44.619><c> a</c><00:36:44.650><c> very</c><00:36:44.890><c> good</c><00:36:45.100><c> thing</c>

00:36:46.460 --> 00:36:46.470 align:start position:0%
engine this is a very good thing
 

00:36:46.470 --> 00:36:49.710 align:start position:0%
engine this is a very good thing
similarly<00:36:47.470><c> on</c><00:36:47.590><c> the</c><00:36:47.710><c> g5</c><00:36:48.130><c> we</c><00:36:48.550><c> can</c><00:36:48.730><c> make</c><00:36:49.390><c> sure</c><00:36:49.420><c> to</c>

00:36:49.710 --> 00:36:49.720 align:start position:0%
similarly on the g5 we can make sure to
 

00:36:49.720 --> 00:36:51.180 align:start position:0%
similarly on the g5 we can make sure to
use<00:36:49.840><c> will</c><00:36:49.990><c> utilize</c><00:36:50.380><c> the</c><00:36:50.530><c> two</c><00:36:50.680><c> pipes</c><00:36:50.950><c> as</c>

00:36:51.180 --> 00:36:51.190 align:start position:0%
use will utilize the two pipes as
 

00:36:51.190 --> 00:36:55.620 align:start position:0%
use will utilize the two pipes as
effectively<00:36:51.580><c> as</c><00:36:51.760><c> possible</c><00:36:54.240><c> we</c><00:36:55.240><c> do</c><00:36:55.360><c> a</c><00:36:55.390><c> lot</c><00:36:55.600><c> of</c>

00:36:55.620 --> 00:36:55.630 align:start position:0%
effectively as possible we do a lot of
 

00:36:55.630 --> 00:36:58.580 align:start position:0%
effectively as possible we do a lot of
software<00:36:56.110><c> pipelining</c><00:36:56.590><c> that</c><00:36:57.369><c> is</c><00:36:57.550><c> sort</c><00:36:58.030><c> of</c>

00:36:58.580 --> 00:36:58.590 align:start position:0%
software pipelining that is sort of
 

00:36:58.590 --> 00:37:01.440 align:start position:0%
software pipelining that is sort of
arranging<00:36:59.590><c> as</c><00:36:59.950><c> I</c><00:37:00.010><c> say</c><00:37:00.190><c> arranging</c><00:37:00.640><c> to</c><00:37:00.730><c> fill</c><00:37:00.940><c> all</c>

00:37:01.440 --> 00:37:01.450 align:start position:0%
arranging as I say arranging to fill all
 

00:37:01.450 --> 00:37:04.050 align:start position:0%
arranging as I say arranging to fill all
the<00:37:01.869><c> available</c><00:37:02.140><c> cycles</c><00:37:02.740><c> on</c><00:37:02.890><c> all</c><00:37:03.580><c> the</c>

00:37:04.050 --> 00:37:04.060 align:start position:0%
the available cycles on all the
 

00:37:04.060 --> 00:37:07.170 align:start position:0%
the available cycles on all the
floating-point<00:37:04.600><c> pipes</c><00:37:05.580><c> we</c><00:37:06.580><c> unroll</c><00:37:06.940><c> loops</c>

00:37:07.170 --> 00:37:07.180 align:start position:0%
floating-point pipes we unroll loops
 

00:37:07.180 --> 00:37:07.890 align:start position:0%
floating-point pipes we unroll loops
like<00:37:07.330><c> crazy</c>

00:37:07.890 --> 00:37:07.900 align:start position:0%
like crazy
 

00:37:07.900 --> 00:37:11.250 align:start position:0%
like crazy
and<00:37:08.619><c> we</c><00:37:08.920><c> also</c><00:37:09.070><c> have</c><00:37:09.490><c> taken</c><00:37:09.730><c> some</c><00:37:10.260><c> algorithmic</c>

00:37:11.250 --> 00:37:11.260 align:start position:0%
and we also have taken some algorithmic
 

00:37:11.260 --> 00:37:14.280 align:start position:0%
and we also have taken some algorithmic
approaches<00:37:11.860><c> that</c><00:37:12.369><c> favor</c><00:37:13.140><c> calculation</c><00:37:14.140><c> over</c>

00:37:14.280 --> 00:37:14.290 align:start position:0%
approaches that favor calculation over
 

00:37:14.290 --> 00:37:16.560 align:start position:0%
approaches that favor calculation over
table<00:37:14.740><c> lookup</c><00:37:15.040><c> and</c><00:37:15.220><c> try</c><00:37:15.640><c> to</c><00:37:15.700><c> avoid</c><00:37:15.970><c> branches</c>

00:37:16.560 --> 00:37:16.570 align:start position:0%
table lookup and try to avoid branches
 

00:37:16.570 --> 00:37:20.190 align:start position:0%
table lookup and try to avoid branches
like<00:37:16.990><c> the</c><00:37:17.170><c> plague</c><00:37:18.510><c> it</c><00:37:19.510><c> makes</c><00:37:19.690><c> these</c><00:37:19.840><c> things</c><00:37:20.050><c> go</c>

00:37:20.190 --> 00:37:20.200 align:start position:0%
like the plague it makes these things go
 

00:37:20.200 --> 00:37:22.710 align:start position:0%
like the plague it makes these things go
very<00:37:20.440><c> very</c><00:37:20.680><c> very</c><00:37:21.160><c> fast</c><00:37:21.520><c> and</c><00:37:21.760><c> as</c><00:37:21.820><c> we</c><00:37:22.450><c> pointed</c>

00:37:22.710 --> 00:37:22.720 align:start position:0%
very very very fast and as we pointed
 

00:37:22.720 --> 00:37:26.490 align:start position:0%
very very very fast and as we pointed
out<00:37:22.869><c> we</c><00:37:22.990><c> have</c><00:37:23.020><c> gains</c><00:37:23.440><c> in</c><00:37:24.040><c> square</c><00:37:24.670><c> root</c><00:37:24.820><c> to</c><00:37:24.970><c> 3x</c><00:37:25.510><c> X</c>

00:37:26.490 --> 00:37:26.500 align:start position:0%
out we have gains in square root to 3x X
 

00:37:26.500 --> 00:37:31.230 align:start position:0%
out we have gains in square root to 3x X
to<00:37:27.010><c> sneer</c><00:37:27.520><c> li7</c><00:37:28.090><c> and</c><00:37:28.680><c> sign</c><00:37:29.680><c> was</c><00:37:29.950><c> almost</c><00:37:30.790><c> 12</c><00:37:31.000><c> 3</c><00:37:31.210><c> 6</c>

00:37:31.230 --> 00:37:31.240 align:start position:0%
to sneer li7 and sign was almost 12 3 6
 

00:37:31.240 --> 00:37:36.840 align:start position:0%
to sneer li7 and sign was almost 12 3 6
12<00:37:34.050><c> so</c><00:37:35.050><c> some</c><00:37:35.290><c> caveats</c><00:37:35.590><c> right</c><00:37:36.160><c> and</c><00:37:36.430><c> was</c><00:37:36.520><c> close</c>

00:37:36.840 --> 00:37:36.850 align:start position:0%
12 so some caveats right and was close
 

00:37:36.850 --> 00:37:39.090 align:start position:0%
12 so some caveats right and was close
to<00:37:37.030><c> the</c><00:37:37.119><c> metal</c><00:37:37.240><c> programming</c><00:37:38.010><c> generally</c><00:37:39.010><c> the</c>

00:37:39.090 --> 00:37:39.100 align:start position:0%
to the metal programming generally the
 

00:37:39.100 --> 00:37:40.980 align:start position:0%
to the metal programming generally the
results<00:37:39.490><c> are</c><00:37:39.580><c> is</c><00:37:39.670><c> accurate</c><00:37:40.180><c> is</c><00:37:40.270><c> live</c><00:37:40.480><c> M</c><00:37:40.660><c> but</c>

00:37:40.980 --> 00:37:40.990 align:start position:0%
results are is accurate is live M but
 

00:37:40.990 --> 00:37:43.410 align:start position:0%
results are is accurate is live M but
they're<00:37:41.170><c> not</c><00:37:41.290><c> bitwise</c><00:37:41.770><c> Danakil</c><00:37:42.340><c> right</c><00:37:42.820><c> don't</c>

00:37:43.410 --> 00:37:43.420 align:start position:0%
they're not bitwise Danakil right don't
 

00:37:43.420 --> 00:37:45.810 align:start position:0%
they're not bitwise Danakil right don't
expect<00:37:43.780><c> to</c><00:37:43.990><c> you</c><00:37:44.410><c> know</c><00:37:44.500><c> call</c><00:37:45.130><c> and</c><00:37:45.369><c> compare</c><00:37:45.670><c> for</c>

00:37:45.810 --> 00:37:45.820 align:start position:0%
expect to you know call and compare for
 

00:37:45.820 --> 00:37:50.550 align:start position:0%
expect to you know call and compare for
equality<00:37:46.320><c> on</c><00:37:47.320><c> a</c><00:37:47.380><c> list</c><00:37:47.770><c> of</c><00:37:47.950><c> arguments</c><00:37:49.560><c> we</c>

00:37:50.550 --> 00:37:50.560 align:start position:0%
equality on a list of arguments we
 

00:37:50.560 --> 00:37:51.690 align:start position:0%
equality on a list of arguments we
handle<00:37:50.830><c> almost</c><00:37:50.950><c> all</c><00:37:51.220><c> the</c><00:37:51.369><c> edge</c><00:37:51.460><c> cases</c>

00:37:51.690 --> 00:37:51.700 align:start position:0%
handle almost all the edge cases
 

00:37:51.700 --> 00:37:54.930 align:start position:0%
handle almost all the edge cases
according<00:37:52.660><c> to</c><00:37:52.840><c> see</c><00:37:53.170><c> 99</c><00:37:53.470><c> and</c><00:37:53.980><c> xg4</c><00:37:54.520><c> the</c><00:37:54.609><c> special</c>

00:37:54.930 --> 00:37:54.940 align:start position:0%
according to see 99 and xg4 the special
 

00:37:54.940 --> 00:37:58.530 align:start position:0%
according to see 99 and xg4 the special
functions<00:37:55.359><c> the</c><00:37:56.080><c> exceptions</c><00:37:56.650><c> are</c><00:37:56.950><c> a</c><00:37:57.640><c> few</c>

00:37:58.530 --> 00:37:58.540 align:start position:0%
functions the exceptions are a few
 

00:37:58.540 --> 00:38:01.230 align:start position:0%
functions the exceptions are a few
places<00:37:58.750><c> around</c><00:37:58.900><c> signs</c><00:37:59.470><c> zeroes</c><00:38:00.130><c> what</c><00:38:00.880><c> happens</c>

00:38:01.230 --> 00:38:01.240 align:start position:0%
places around signs zeroes what happens
 

00:38:01.240 --> 00:38:03.510 align:start position:0%
places around signs zeroes what happens
when<00:38:01.420><c> plus</c><00:38:02.380><c> or</c><00:38:02.500><c> minus</c><00:38:02.740><c> 0</c><00:38:02.890><c> is</c><00:38:03.040><c> passed</c><00:38:03.250><c> to</c><00:38:03.369><c> one</c><00:38:03.460><c> of</c>

00:38:03.510 --> 00:38:03.520 align:start position:0%
when plus or minus 0 is passed to one of
 

00:38:03.520 --> 00:38:05.220 align:start position:0%
when plus or minus 0 is passed to one of
these<00:38:03.580><c> routines</c><00:38:03.940><c> we</c><00:38:04.630><c> make</c><00:38:04.780><c> no</c><00:38:04.960><c> alignment</c>

00:38:05.220 --> 00:38:05.230 align:start position:0%
these routines we make no alignment
 

00:38:05.230 --> 00:38:07.109 align:start position:0%
these routines we make no alignment
requirements<00:38:05.950><c> although</c><00:38:06.280><c> you</c><00:38:06.340><c> will</c><00:38:06.640><c> get</c><00:38:06.820><c> best</c>

00:38:07.109 --> 00:38:07.119 align:start position:0%
requirements although you will get best
 

00:38:07.119 --> 00:38:10.200 align:start position:0%
requirements although you will get best
performance<00:38:07.750><c> if</c><00:38:07.900><c> you</c><00:38:07.960><c> can</c><00:38:08.380><c> 16-bit</c><00:38:09.369><c> 16</c><00:38:09.970><c> byte</c>

00:38:10.200 --> 00:38:10.210 align:start position:0%
performance if you can 16-bit 16 byte
 

00:38:10.210 --> 00:38:13.920 align:start position:0%
performance if you can 16-bit 16 byte
align<00:38:10.600><c> your</c><00:38:10.780><c> data</c><00:38:12.600><c> storage</c><00:38:13.600><c> returned</c><00:38:13.810><c> by</c>

00:38:13.920 --> 00:38:13.930 align:start position:0%
align your data storage returned by
 

00:38:13.930 --> 00:38:16.410 align:start position:0%
align your data storage returned by
malloc<00:38:14.109><c> is</c><00:38:14.500><c> on</c><00:38:14.830><c> Mac</c><00:38:15.100><c> OS</c><00:38:15.310><c> 10</c><00:38:15.340><c> by</c><00:38:15.580><c> default</c><00:38:16.000><c> 16</c>

00:38:16.410 --> 00:38:16.420 align:start position:0%
malloc is on Mac OS 10 by default 16
 

00:38:16.420 --> 00:38:20.640 align:start position:0%
malloc is on Mac OS 10 by default 16
byte<00:38:16.570><c> aligned</c><00:38:18.840><c> this</c><00:38:19.840><c> stuff</c><00:38:20.020><c> is</c><00:38:20.109><c> tuned</c><00:38:20.410><c> for</c><00:38:20.590><c> the</c>

00:38:20.640 --> 00:38:20.650 align:start position:0%
byte aligned this stuff is tuned for the
 

00:38:20.650 --> 00:38:21.990 align:start position:0%
byte aligned this stuff is tuned for the
g5<00:38:20.980><c> I</c><00:38:21.040><c> mean</c><00:38:21.340><c> that's</c><00:38:21.460><c> the</c><00:38:21.550><c> performance</c>

00:38:21.990 --> 00:38:22.000 align:start position:0%
g5 I mean that's the performance
 

00:38:22.000 --> 00:38:23.520 align:start position:0%
g5 I mean that's the performance
flagship<00:38:22.420><c> here</c><00:38:22.630><c> but</c><00:38:22.780><c> the</c><00:38:22.900><c> good</c><00:38:23.020><c> news</c><00:38:23.230><c> is</c><00:38:23.380><c> it</c>

00:38:23.520 --> 00:38:23.530 align:start position:0%
flagship here but the good news is it
 

00:38:23.530 --> 00:38:26.700 align:start position:0%
flagship here but the good news is it
runs<00:38:23.710><c> quite</c><00:38:24.130><c> nicely</c><00:38:24.460><c> on</c><00:38:24.700><c> g4</c><00:38:25.240><c> and</c><00:38:25.300><c> g3</c><00:38:25.540><c> and</c><00:38:26.080><c> of</c>

00:38:26.700 --> 00:38:26.710 align:start position:0%
runs quite nicely on g4 and g3 and of
 

00:38:26.710 --> 00:38:28.320 align:start position:0%
runs quite nicely on g4 and g3 and of
course<00:38:26.950><c> we</c><00:38:27.100><c> dispatch</c><00:38:27.490><c> internally</c><00:38:28.060><c> to</c><00:38:28.240><c> the</c>

00:38:28.320 --> 00:38:28.330 align:start position:0%
course we dispatch internally to the
 

00:38:28.330 --> 00:38:29.760 align:start position:0%
course we dispatch internally to the
appropriate<00:38:28.780><c> routine</c><00:38:29.050><c> you</c><00:38:29.170><c> don't</c><00:38:29.440><c> need</c><00:38:29.650><c> to</c>

00:38:29.760 --> 00:38:29.770 align:start position:0%
appropriate routine you don't need to
 

00:38:29.770 --> 00:38:32.700 align:start position:0%
appropriate routine you don't need to
worry<00:38:29.950><c> about</c><00:38:30.220><c> where</c><00:38:30.820><c> you're</c><00:38:30.970><c> running</c><00:38:31.650><c> v4</c><00:38:32.650><c> s</c>

00:38:32.700 --> 00:38:32.710 align:start position:0%
worry about where you're running v4 s
 

00:38:32.710 --> 00:38:37.400 align:start position:0%
worry about where you're running v4 s
routines<00:38:33.040><c> they</c><00:38:33.190><c> just</c><00:38:33.430><c> do</c><00:38:33.580><c> the</c><00:38:33.700><c> right</c><00:38:33.850><c> thing</c>

00:38:37.400 --> 00:38:37.410 align:start position:0%
 
 

00:38:37.410 --> 00:38:40.440 align:start position:0%
 
so<00:38:38.410><c> one</c><00:38:38.680><c> final</c><00:38:39.460><c> change</c><00:38:39.700><c> of</c><00:38:39.820><c> gears</c><00:38:40.030><c> here</c><00:38:40.330><c> is</c>

00:38:40.440 --> 00:38:40.450 align:start position:0%
so one final change of gears here is
 

00:38:40.450 --> 00:38:44.310 align:start position:0%
so one final change of gears here is
sort<00:38:40.960><c> of</c><00:38:40.990><c> to</c><00:38:41.560><c> come</c><00:38:41.770><c> back</c><00:38:41.950><c> to</c><00:38:42.780><c> the</c><00:38:43.780><c> elementary</c>

00:38:44.310 --> 00:38:44.320 align:start position:0%
sort of to come back to the elementary
 

00:38:44.320 --> 00:38:46.980 align:start position:0%
sort of to come back to the elementary
functions<00:38:44.790><c> themselves</c><00:38:45.790><c> where</c><00:38:46.660><c> we've</c><00:38:46.780><c> done</c><00:38:46.960><c> a</c>

00:38:46.980 --> 00:38:46.990 align:start position:0%
functions themselves where we've done a
 

00:38:46.990 --> 00:38:51.540 align:start position:0%
functions themselves where we've done a
bit<00:38:47.530><c> of</c><00:38:47.560><c> tune-up</c><00:38:48.070><c> work</c><00:38:49.440><c> here</c><00:38:50.440><c> are</c><00:38:50.620><c> a</c><00:38:50.650><c> sort</c><00:38:51.520><c> of</c>

00:38:51.540 --> 00:38:51.550 align:start position:0%
bit of tune-up work here are a sort of
 

00:38:51.550 --> 00:38:54.650 align:start position:0%
bit of tune-up work here are a sort of
selected<00:38:52.240><c> sample</c><00:38:52.750><c> of</c><00:38:53.050><c> the</c><00:38:53.340><c> probably</c><00:38:54.340><c> most</c>

00:38:54.650 --> 00:38:54.660 align:start position:0%
selected sample of the probably most
 

00:38:54.660 --> 00:38:57.690 align:start position:0%
selected sample of the probably most
most<00:38:55.660><c> used</c><00:38:55.900><c> and</c><00:38:56.020><c> most</c><00:38:56.110><c> loved</c><00:38:56.700><c> element</c>

00:38:57.690 --> 00:38:57.700 align:start position:0%
most used and most loved element
 

00:38:57.700 --> 00:39:00.000 align:start position:0%
most used and most loved element
elementary<00:38:58.270><c> functions</c><00:38:58.570><c> in</c><00:38:58.660><c> our</c><00:38:58.750><c> library</c><00:38:59.110><c> and</c>

00:39:00.000 --> 00:39:00.010 align:start position:0%
elementary functions in our library and
 

00:39:00.010 --> 00:39:04.080 align:start position:0%
elementary functions in our library and
we<00:39:00.250><c> report</c><00:39:00.610><c> the</c><00:39:01.090><c> number</c><00:39:01.360><c> of</c><00:39:01.420><c> G</c><00:39:01.630><c> 5</c><00:39:01.810><c> cycles</c><00:39:02.170><c> on</c><00:39:03.160><c> a</c>

00:39:04.080 --> 00:39:04.090 align:start position:0%
we report the number of G 5 cycles on a
 

00:39:04.090 --> 00:39:06.900 align:start position:0%
we report the number of G 5 cycles on a
random<00:39:05.020><c> selection</c><00:39:05.200><c> over</c><00:39:05.740><c> a</c><00:39:05.890><c> wide</c><00:39:06.310><c> range</c><00:39:06.340><c> of</c>

00:39:06.900 --> 00:39:06.910 align:start position:0%
random selection over a wide range of
 

00:39:06.910 --> 00:39:11.040 align:start position:0%
random selection over a wide range of
arguments<00:39:07.510><c> and</c><00:39:08.290><c> averaged</c><00:39:09.250><c> over</c><00:39:09.810><c> the</c><00:39:10.810><c> number</c>

00:39:11.040 --> 00:39:11.050 align:start position:0%
arguments and averaged over the number
 

00:39:11.050 --> 00:39:12.870 align:start position:0%
arguments and averaged over the number
of<00:39:11.140><c> iterations</c><00:39:11.650><c> square-root</c><00:39:12.460><c> taking</c><00:39:12.760><c> about</c>

00:39:12.870 --> 00:39:12.880 align:start position:0%
of iterations square-root taking about
 

00:39:12.880 --> 00:39:17.400 align:start position:0%
of iterations square-root taking about
35<00:39:13.420><c> cycles</c><00:39:13.900><c> per</c><00:39:14.080><c> element</c><00:39:15.480><c> sine</c><00:39:16.480><c> 52</c><00:39:17.050><c> and</c><00:39:17.260><c> so</c>

00:39:17.400 --> 00:39:17.410 align:start position:0%
35 cycles per element sine 52 and so
 

00:39:17.410 --> 00:39:20.460 align:start position:0%
35 cycles per element sine 52 and so
forth<00:39:18.960><c> if</c><00:39:19.960><c> you</c><00:39:20.020><c> look</c><00:39:20.170><c> at</c><00:39:20.260><c> what</c><00:39:20.350><c> the</c>

00:39:20.460 --> 00:39:20.470 align:start position:0%
forth if you look at what the
 

00:39:20.470 --> 00:39:23.730 align:start position:0%
forth if you look at what the
competition<00:39:21.070><c> publishes</c><00:39:21.940><c> for</c><00:39:22.740><c> the</c>

00:39:23.730 --> 00:39:23.740 align:start position:0%
competition publishes for the
 

00:39:23.740 --> 00:39:28.490 align:start position:0%
competition publishes for the
performance<00:39:24.130><c> of</c><00:39:24.280><c> x87</c><00:39:25.890><c> these</c><00:39:26.890><c> are</c><00:39:27.480><c> essentially</c>

00:39:28.490 --> 00:39:28.500 align:start position:0%
performance of x87 these are essentially
 

00:39:28.500 --> 00:39:30.420 align:start position:0%
performance of x87 these are essentially
hardware<00:39:29.500><c> implementations</c><00:39:30.130><c> of</c><00:39:30.310><c> these</c>

00:39:30.420 --> 00:39:30.430 align:start position:0%
hardware implementations of these
 

00:39:30.430 --> 00:39:33.240 align:start position:0%
hardware implementations of these
transcendental<00:39:31.090><c> functions</c><00:39:31.950><c> their</c><00:39:32.950><c> square</c>

00:39:33.240 --> 00:39:33.250 align:start position:0%
transcendental functions their square
 

00:39:33.250 --> 00:39:36.230 align:start position:0%
transcendental functions their square
root<00:39:33.430><c> runs</c><00:39:33.610><c> about</c><00:39:33.820><c> 38</c><00:39:34.420><c> their</c><00:39:35.200><c> exponential</c>

00:39:36.230 --> 00:39:36.240 align:start position:0%
root runs about 38 their exponential
 

00:39:36.240 --> 00:39:38.220 align:start position:0%
root runs about 38 their exponential
depending<00:39:37.240><c> on</c><00:39:37.330><c> your</c><00:39:37.420><c> how</c><00:39:37.660><c> you</c><00:39:37.720><c> want</c><00:39:38.020><c> to</c><00:39:38.050><c> count</c>

00:39:38.220 --> 00:39:38.230 align:start position:0%
depending on your how you want to count
 

00:39:38.230 --> 00:39:42.140 align:start position:0%
depending on your how you want to count
runs<00:39:38.590><c> no</c><00:39:38.860><c> less</c><00:39:39.160><c> than</c><00:39:39.370><c> 150</c><00:39:40.090><c> cycles</c><00:39:40.480><c> to</c><00:39:40.600><c> do</c><00:39:40.720><c> the</c>

00:39:42.140 --> 00:39:42.150 align:start position:0%
runs no less than 150 cycles to do the
 

00:39:42.150 --> 00:39:44.280 align:start position:0%
runs no less than 150 cycles to do the
actually<00:39:43.150><c> the</c><00:39:43.240><c> two</c><00:39:43.450><c> to</c><00:39:43.540><c> the</c><00:39:43.630><c> X</c><00:39:43.780><c> part</c><00:39:44.050><c> and</c>

00:39:44.280 --> 00:39:44.290 align:start position:0%
actually the two to the X part and
 

00:39:44.290 --> 00:39:46.770 align:start position:0%
actually the two to the X part and
there's<00:39:44.410><c> a</c><00:39:44.470><c> bit</c><00:39:44.980><c> of</c><00:39:45.010><c> massaging</c><00:39:45.910><c> to</c><00:39:46.030><c> get</c><00:39:46.210><c> e</c><00:39:46.420><c> to</c>

00:39:46.770 --> 00:39:46.780 align:start position:0%
there's a bit of massaging to get e to
 

00:39:46.780 --> 00:39:49.290 align:start position:0%
there's a bit of massaging to get e to
the<00:39:46.930><c> X</c><00:39:47.220><c> there</c><00:39:48.220><c> logarithms</c><00:39:48.640><c> of</c><00:39:48.820><c> winner</c><00:39:49.000><c> and</c>

00:39:49.290 --> 00:39:49.300 align:start position:0%
the X there logarithms of winner and
 

00:39:49.300 --> 00:39:54.150 align:start position:0%
the X there logarithms of winner and
otherwise<00:39:51.150><c> we</c><00:39:52.150><c> get</c><00:39:52.270><c> all</c><00:39:52.420><c> the</c><00:39:52.540><c> all</c><00:39:52.800><c> the</c><00:39:53.800><c> wins</c><00:39:53.980><c> in</c>

00:39:54.150 --> 00:39:54.160 align:start position:0%
otherwise we get all the all the wins in
 

00:39:54.160 --> 00:39:59.520 align:start position:0%
otherwise we get all the all the wins in
yellow<00:39:57.540><c> now</c><00:39:58.540><c> those</c><00:39:58.690><c> are</c><00:39:58.810><c> just</c><00:39:58.900><c> sort</c><00:39:59.140><c> of</c><00:39:59.200><c> raw</c>

00:39:59.520 --> 00:39:59.530 align:start position:0%
yellow now those are just sort of raw
 

00:39:59.530 --> 00:40:01.710 align:start position:0%
yellow now those are just sort of raw
x87<00:40:00.460><c> numbers</c><00:40:00.820><c> when</c><00:40:00.940><c> you</c><00:40:00.970><c> actually</c><00:40:01.300><c> package</c>

00:40:01.710 --> 00:40:01.720 align:start position:0%
x87 numbers when you actually package
 

00:40:01.720 --> 00:40:03.360 align:start position:0%
x87 numbers when you actually package
these<00:40:01.900><c> things</c><00:40:02.110><c> into</c><00:40:02.320><c> a</c><00:40:02.350><c> library</c><00:40:02.980><c> that</c><00:40:03.190><c> take</c>

00:40:03.360 --> 00:40:03.370 align:start position:0%
these things into a library that take
 

00:40:03.370 --> 00:40:06.900 align:start position:0%
these things into a library that take
account<00:40:03.760><c> of</c><00:40:05.280><c> rounding</c><00:40:06.280><c> requirements</c><00:40:06.790><c> and</c>

00:40:06.900 --> 00:40:06.910 align:start position:0%
account of rounding requirements and
 

00:40:06.910 --> 00:40:09.690 align:start position:0%
account of rounding requirements and
error<00:40:07.060><c> flags</c><00:40:07.360><c> such</c><00:40:07.660><c> as</c><00:40:07.780><c> in</c><00:40:07.900><c> gnu/linux</c><00:40:08.700><c> the</c>

00:40:09.690 --> 00:40:09.700 align:start position:0%
error flags such as in gnu/linux the
 

00:40:09.700 --> 00:40:14.070 align:start position:0%
error flags such as in gnu/linux the
performance<00:40:10.270><c> falls</c><00:40:10.660><c> off</c><00:40:10.870><c> a</c><00:40:10.900><c> bit</c><00:40:11.200><c> more</c><00:40:13.080><c> these</c>

00:40:14.070 --> 00:40:14.080 align:start position:0%
performance falls off a bit more these
 

00:40:14.080 --> 00:40:16.890 align:start position:0%
performance falls off a bit more these
g5<00:40:14.500><c> numbers</c><00:40:14.830><c> are</c><00:40:14.920><c> already</c><00:40:15.520><c> in</c><00:40:16.360><c> the</c><00:40:16.510><c> prescribed</c>

00:40:16.890 --> 00:40:16.900 align:start position:0%
g5 numbers are already in the prescribed
 

00:40:16.900 --> 00:40:19.050 align:start position:0%
g5 numbers are already in the prescribed
I<00:40:17.050><c> Triple</c><00:40:17.410><c> E</c><00:40:17.500><c> in</c><00:40:18.040><c> compliance</c><00:40:18.460><c> with</c><00:40:18.580><c> I</c><00:40:18.700><c> Triple</c><00:40:19.000><c> E</c>

00:40:19.050 --> 00:40:19.060 align:start position:0%
I Triple E in compliance with I Triple E
 

00:40:19.060 --> 00:40:20.580 align:start position:0%
I Triple E in compliance with I Triple E
so<00:40:19.240><c> there's</c><00:40:19.420><c> nothing</c><00:40:20.140><c> further</c><00:40:20.290><c> to</c><00:40:20.440><c> say</c><00:40:20.560><c> that</c>

00:40:20.580 --> 00:40:20.590 align:start position:0%
so there's nothing further to say that
 

00:40:20.590 --> 00:40:26.820 align:start position:0%
so there's nothing further to say that
is<00:40:21.010><c> Lib</c><00:40:21.280><c> M</c><00:40:21.460><c> that's</c><00:40:22.180><c> new</c><00:40:22.990><c> linux</c><00:40:23.320><c> on</c><00:40:23.650><c> intel</c><00:40:25.830><c> on</c>

00:40:26.820 --> 00:40:26.830 align:start position:0%
is Lib M that's new linux on intel on
 

00:40:26.830 --> 00:40:29.670 align:start position:0%
is Lib M that's new linux on intel on
the<00:40:26.950><c> competitors</c><00:40:27.370><c> hardware</c><00:40:28.080><c> going</c><00:40:29.080><c> you</c><00:40:29.560><c> know</c>

00:40:29.670 --> 00:40:29.680 align:start position:0%
the competitors hardware going you know
 

00:40:29.680 --> 00:40:34.530 align:start position:0%
the competitors hardware going you know
quite<00:40:30.520><c> a</c><00:40:30.550><c> bit</c><00:40:30.700><c> slower</c><00:40:30.790><c> so</c><00:40:31.390><c> for</c><00:40:33.000><c> raw</c><00:40:34.000><c> elementary</c>

00:40:34.530 --> 00:40:34.540 align:start position:0%
quite a bit slower so for raw elementary
 

00:40:34.540 --> 00:40:37.050 align:start position:0%
quite a bit slower so for raw elementary
function<00:40:34.840><c> performance</c><00:40:35.320><c> I</c><00:40:35.620><c> think</c><00:40:36.130><c> g5</c><00:40:36.400><c> wins</c><00:40:36.640><c> but</c>

00:40:37.050 --> 00:40:37.060 align:start position:0%
function performance I think g5 wins but
 

00:40:37.060 --> 00:40:40.560 align:start position:0%
function performance I think g5 wins but
I<00:40:37.180><c> work</c><00:40:37.600><c> on</c><00:40:37.750><c> that</c><00:40:37.840><c> stuff</c><00:40:38.080><c> so</c><00:40:39.360><c> there</c><00:40:40.360><c> are</c><00:40:40.450><c> some</c>

00:40:40.560 --> 00:40:40.570 align:start position:0%
I work on that stuff so there are some
 

00:40:40.570 --> 00:40:43.790 align:start position:0%
I work on that stuff so there are some
notes<00:40:40.750><c> in</c><00:40:40.900><c> our</c><00:40:40.990><c> technical</c><00:40:41.320><c> library</c><00:40:42.480><c> tech</c><00:40:43.480><c> note</c>

00:40:43.790 --> 00:40:43.800 align:start position:0%
notes in our technical library tech note
 

00:40:43.800 --> 00:40:49.230 align:start position:0%
notes in our technical library tech note
2086<00:40:44.910><c> tuning</c><00:40:45.910><c> for</c><00:40:46.060><c> the</c><00:40:46.150><c> g5</c><00:40:46.650><c> techno</c><00:40:47.650><c> 2087</c>

00:40:49.230 --> 00:40:49.240 align:start position:0%
2086 tuning for the g5 techno 2087
 

00:40:49.240 --> 00:40:51.180 align:start position:0%
2086 tuning for the g5 techno 2087
quick<00:40:49.540><c> look</c><00:40:49.750><c> at</c><00:40:49.869><c> the</c><00:40:49.990><c> g4</c><00:40:50.470><c> and</c><00:40:50.500><c> g5</c><00:40:50.619><c> if</c><00:40:51.040><c> you're</c>

00:40:51.180 --> 00:40:51.190 align:start position:0%
quick look at the g4 and g5 if you're
 

00:40:51.190 --> 00:40:53.520 align:start position:0%
quick look at the g4 and g5 if you're
familiar<00:40:51.369><c> with</c><00:40:51.750><c> programming</c><00:40:52.750><c> for</c><00:40:52.900><c> g4</c><00:40:53.260><c> that</c>

00:40:53.520 --> 00:40:53.530 align:start position:0%
familiar with programming for g4 that
 

00:40:53.530 --> 00:40:56.250 align:start position:0%
familiar with programming for g4 that
will<00:40:53.650><c> get</c><00:40:53.859><c> you</c><00:40:54.069><c> bumped</c><00:40:55.000><c> up</c><00:40:55.240><c> to</c><00:40:55.359><c> g5</c><00:40:55.660><c> in</c><00:40:55.960><c> a</c><00:40:56.050><c> hurry</c>

00:40:56.250 --> 00:40:56.260 align:start position:0%
will get you bumped up to g5 in a hurry
 

00:40:56.260 --> 00:41:03.809 align:start position:0%
will get you bumped up to g5 in a hurry
and<00:41:01.470><c> I</c><00:41:02.470><c> see</c><00:41:02.650><c> some</c><00:41:02.829><c> note</c><00:41:02.980><c> takers</c><00:41:03.309><c> finishing</c><00:41:03.730><c> up</c>

00:41:03.809 --> 00:41:03.819 align:start position:0%
and I see some note takers finishing up
 

00:41:03.819 --> 00:41:09.120 align:start position:0%
and I see some note takers finishing up
on<00:41:03.940><c> that</c><00:41:07.470><c> and</c><00:41:08.470><c> some</c><00:41:08.710><c> really</c><00:41:09.010><c> nice</c>

00:41:09.120 --> 00:41:09.130 align:start position:0%
on that and some really nice
 

00:41:09.130 --> 00:41:12.210 align:start position:0%
on that and some really nice
documentation<00:41:09.970><c> in</c><00:41:10.210><c> the</c><00:41:10.920><c> developer</c><00:41:11.920><c> reference</c>

00:41:12.210 --> 00:41:12.220 align:start position:0%
documentation in the developer reference
 

00:41:12.220 --> 00:41:15.079 align:start position:0%
documentation in the developer reference
library<00:41:12.640><c> for</c><00:41:13.510><c> the</c><00:41:13.599><c> accelerate</c><00:41:14.140><c> framework</c><00:41:14.589><c> and</c>

00:41:15.079 --> 00:41:15.089 align:start position:0%
library for the accelerate framework and
 

00:41:15.089 --> 00:41:17.549 align:start position:0%
library for the accelerate framework and
some<00:41:16.089><c> of</c><00:41:16.210><c> its</c><00:41:16.359><c> individual</c><00:41:16.809><c> components</c><00:41:16.869><c> via</c>

00:41:17.549 --> 00:41:17.559 align:start position:0%
some of its individual components via
 

00:41:17.559 --> 00:41:21.599 align:start position:0%
some of its individual components via
image<00:41:17.829><c> the</c><00:41:18.160><c> DSP</c><00:41:18.700><c> and</c><00:41:19.079><c> a</c><00:41:20.079><c> piece</c><00:41:20.319><c> that</c><00:41:20.609><c> Ian</c>

00:41:21.599 --> 00:41:21.609 align:start position:0%
image the DSP and a piece that Ian
 

00:41:21.609 --> 00:41:23.370 align:start position:0%
image the DSP and a piece that Ian
mainly<00:41:21.940><c> maintains</c><00:41:22.359><c> on</c><00:41:22.540><c> the</c><00:41:22.630><c> velocity</c><00:41:23.079><c> engine</c>

00:41:23.370 --> 00:41:23.380 align:start position:0%
mainly maintains on the velocity engine
 

00:41:23.380 --> 00:41:26.160 align:start position:0%
mainly maintains on the velocity engine
that's<00:41:23.559><c> sort</c><00:41:24.400><c> of</c><00:41:24.460><c> a</c><00:41:24.520><c> wonderful</c><00:41:25.170><c> general</c>

00:41:26.160 --> 00:41:26.170 align:start position:0%
that's sort of a wonderful general
 

00:41:26.170 --> 00:41:30.240 align:start position:0%
that's sort of a wonderful general
gentle<00:41:26.650><c> introduction</c><00:41:27.040><c> to</c><00:41:28.589><c> CD</c><00:41:29.589><c> program</c><00:41:29.740><c> is</c>

00:41:30.240 --> 00:41:30.250 align:start position:0%
gentle introduction to CD program is
 

00:41:30.250 --> 00:41:32.599 align:start position:0%
gentle introduction to CD program is
there<00:41:30.430><c> such</c><00:41:30.609><c> a</c><00:41:30.640><c> thing</c><00:41:30.760><c> Bob</c><00:41:31.150><c> I</c><00:41:31.359><c> don't</c><00:41:31.690><c> know</c>

00:41:32.599 --> 00:41:32.609 align:start position:0%
there such a thing Bob I don't know
 

00:41:32.609 --> 00:41:37.140 align:start position:0%
there such a thing Bob I don't know
that's<00:41:33.609><c> a</c><00:41:33.790><c> good</c><00:41:33.910><c> point</c><00:41:34.140><c> okay</c>

