WEBVTT
Kind: captions
Language: en

00:00:12.590 --> 00:00:15.610 align:start position:0%
 
good<00:00:13.130><c> morning</c><00:00:13.460><c> welcome</c><00:00:14.360><c> to</c><00:00:14.510><c> session</c><00:00:14.990><c> 503</c>

00:00:15.610 --> 00:00:15.620 align:start position:0%
good morning welcome to session 503
 

00:00:15.620 --> 00:00:18.130 align:start position:0%
good morning welcome to session 503
optimizing<00:00:16.160><c> for</c><00:00:16.280><c> power</c><00:00:16.490><c> mac</c><00:00:16.670><c> g5</c><00:00:17.090><c> last</c><00:00:17.900><c> it's</c>

00:00:18.130 --> 00:00:18.140 align:start position:0%
optimizing for power mac g5 last it's
 

00:00:18.140 --> 00:00:19.450 align:start position:0%
optimizing for power mac g5 last it's
been<00:00:18.290><c> about</c><00:00:18.440><c> a</c><00:00:18.500><c> year</c><00:00:18.590><c> since</c><00:00:18.770><c> we</c><00:00:19.070><c> introduced</c>

00:00:19.450 --> 00:00:19.460 align:start position:0%
been about a year since we introduced
 

00:00:19.460 --> 00:00:21.790 align:start position:0%
been about a year since we introduced
actually<00:00:19.910><c> exactly</c><00:00:20.689><c> a</c><00:00:20.720><c> year</c><00:00:20.779><c> since</c><00:00:21.650><c> we</c>

00:00:21.790 --> 00:00:21.800 align:start position:0%
actually exactly a year since we
 

00:00:21.800 --> 00:00:24.040 align:start position:0%
actually exactly a year since we
introduced<00:00:22.189><c> the</c><00:00:22.279><c> power</c><00:00:22.430><c> mac</c><00:00:22.580><c> g5</c><00:00:23.000><c> chip</c><00:00:23.810><c> and</c>

00:00:24.040 --> 00:00:24.050 align:start position:0%
introduced the power mac g5 chip and
 

00:00:24.050 --> 00:00:27.100 align:start position:0%
introduced the power mac g5 chip and
last<00:00:24.230><c> year</c><00:00:24.500><c> if</c><00:00:24.619><c> you're</c><00:00:24.680><c> here</c><00:00:24.980><c> at</c><00:00:25.130><c> WWDC</c><00:00:25.990><c> most</c><00:00:26.990><c> of</c>

00:00:27.100 --> 00:00:27.110 align:start position:0%
last year if you're here at WWDC most of
 

00:00:27.110 --> 00:00:28.930 align:start position:0%
last year if you're here at WWDC most of
the<00:00:27.200><c> content</c><00:00:27.410><c> that</c><00:00:27.770><c> we</c><00:00:27.860><c> presented</c><00:00:28.340><c> dealt</c><00:00:28.789><c> a</c>

00:00:28.930 --> 00:00:28.940 align:start position:0%
the content that we presented dealt a
 

00:00:28.940 --> 00:00:31.390 align:start position:0%
the content that we presented dealt a
lot<00:00:29.150><c> with</c><00:00:29.210><c> the</c><00:00:29.630><c> architecture</c><00:00:30.289><c> of</c><00:00:30.320><c> the</c><00:00:30.650><c> g5</c><00:00:31.039><c> chip</c>

00:00:31.390 --> 00:00:31.400 align:start position:0%
lot with the architecture of the g5 chip
 

00:00:31.400 --> 00:00:34.869 align:start position:0%
lot with the architecture of the g5 chip
itself<00:00:31.760><c> we</c><00:00:32.150><c> had</c><00:00:33.129><c> optimization</c><00:00:34.129><c> labs</c><00:00:34.340><c> running</c>

00:00:34.869 --> 00:00:34.879 align:start position:0%
itself we had optimization labs running
 

00:00:34.879 --> 00:00:36.850 align:start position:0%
itself we had optimization labs running
for<00:00:35.120><c> several</c><00:00:35.390><c> days</c><00:00:35.570><c> into</c><00:00:35.960><c> the</c><00:00:36.050><c> night</c><00:00:36.199><c> late</c>

00:00:36.850 --> 00:00:36.860 align:start position:0%
for several days into the night late
 

00:00:36.860 --> 00:00:39.850 align:start position:0%
for several days into the night late
night<00:00:36.890><c> at</c><00:00:37.820><c> times</c><00:00:38.110><c> trying</c><00:00:39.110><c> to</c><00:00:39.199><c> get</c><00:00:39.379><c> as</c><00:00:39.590><c> much</c>

00:00:39.850 --> 00:00:39.860 align:start position:0%
night at times trying to get as much
 

00:00:39.860 --> 00:00:41.590 align:start position:0%
night at times trying to get as much
information<00:00:40.160><c> to</c><00:00:40.699><c> you</c><00:00:40.820><c> as</c><00:00:40.970><c> a</c><00:00:41.090><c> developer</c><00:00:41.239><c> to</c>

00:00:41.590 --> 00:00:41.600 align:start position:0%
information to you as a developer to
 

00:00:41.600 --> 00:00:43.509 align:start position:0%
information to you as a developer to
understand<00:00:42.170><c> the</c><00:00:42.530><c> differences</c><00:00:43.100><c> between</c><00:00:43.280><c> the</c>

00:00:43.509 --> 00:00:43.519 align:start position:0%
understand the differences between the
 

00:00:43.519 --> 00:00:46.479 align:start position:0%
understand the differences between the
g4<00:00:44.000><c> chip</c><00:00:44.239><c> architecture</c><00:00:44.899><c> and</c><00:00:45.020><c> the</c><00:00:45.050><c> g5</c><00:00:45.500><c> there</c>

00:00:46.479 --> 00:00:46.489 align:start position:0%
g4 chip architecture and the g5 there
 

00:00:46.489 --> 00:00:48.670 align:start position:0%
g4 chip architecture and the g5 there
are<00:00:46.579><c> very</c><00:00:46.730><c> stark</c><00:00:47.030><c> differences</c><00:00:47.510><c> there</c><00:00:47.750><c> this</c>

00:00:48.670 --> 00:00:48.680 align:start position:0%
are very stark differences there this
 

00:00:48.680 --> 00:00:50.709 align:start position:0%
are very stark differences there this
year<00:00:48.920><c> we</c><00:00:49.309><c> want</c><00:00:49.520><c> to</c><00:00:49.670><c> again</c><00:00:50.030><c> re-emphasize</c>

00:00:50.709 --> 00:00:50.719 align:start position:0%
year we want to again re-emphasize
 

00:00:50.719 --> 00:00:52.450 align:start position:0%
year we want to again re-emphasize
architectural<00:00:51.530><c> differences</c><00:00:52.010><c> and</c><00:00:52.190><c> why</c><00:00:52.399><c> it</c>

00:00:52.450 --> 00:00:52.460 align:start position:0%
architectural differences and why it
 

00:00:52.460 --> 00:00:55.600 align:start position:0%
architectural differences and why it
matters<00:00:52.640><c> to</c><00:00:53.000><c> writing</c><00:00:53.989><c> optimized</c><00:00:54.380><c> code</c><00:00:54.680><c> but</c><00:00:55.520><c> we</c>

00:00:55.600 --> 00:00:55.610 align:start position:0%
matters to writing optimized code but we
 

00:00:55.610 --> 00:00:57.970 align:start position:0%
matters to writing optimized code but we
also<00:00:55.760><c> want</c><00:00:56.090><c> to</c><00:00:56.210><c> now</c><00:00:56.350><c> make</c><00:00:57.350><c> sure</c><00:00:57.559><c> that</c><00:00:57.739><c> you</c><00:00:57.860><c> guys</c>

00:00:57.970 --> 00:00:57.980 align:start position:0%
also want to now make sure that you guys
 

00:00:57.980 --> 00:00:59.920 align:start position:0%
also want to now make sure that you guys
understand<00:00:58.460><c> how</c><00:00:58.730><c> to</c><00:00:58.790><c> utilize</c><00:00:59.300><c> the</c><00:00:59.510><c> tools</c><00:00:59.750><c> that</c>

00:00:59.920 --> 00:00:59.930 align:start position:0%
understand how to utilize the tools that
 

00:00:59.930 --> 00:01:03.490 align:start position:0%
understand how to utilize the tools that
we<00:01:00.050><c> supply</c><00:01:00.530><c> in</c><00:01:01.340><c> our</c><00:01:01.520><c> tool</c><00:01:01.910><c> set</c><00:01:02.210><c> as</c><00:01:02.480><c> well</c><00:01:02.660><c> as</c><00:01:02.870><c> the</c>

00:01:03.490 --> 00:01:03.500 align:start position:0%
we supply in our tool set as well as the
 

00:01:03.500 --> 00:01:05.650 align:start position:0%
we supply in our tool set as well as the
compiler<00:01:04.009><c> options</c><00:01:04.820><c> that</c><00:01:04.940><c> you</c><00:01:05.059><c> have</c><00:01:05.270><c> in</c><00:01:05.479><c> terms</c>

00:01:05.650 --> 00:01:05.660 align:start position:0%
compiler options that you have in terms
 

00:01:05.660 --> 00:01:07.900 align:start position:0%
compiler options that you have in terms
of<00:01:05.899><c> helping</c><00:01:06.229><c> you</c><00:01:06.470><c> optimize</c><00:01:06.860><c> your</c><00:01:07.280><c> code</c><00:01:07.610><c> itself</c>

00:01:07.900 --> 00:01:07.910 align:start position:0%
of helping you optimize your code itself
 

00:01:07.910 --> 00:01:09.609 align:start position:0%
of helping you optimize your code itself
so<00:01:08.149><c> we</c><00:01:08.300><c> have</c><00:01:08.750><c> several</c><00:01:08.990><c> speakers</c><00:01:09.259><c> of</c><00:01:09.500><c> this</c>

00:01:09.609 --> 00:01:09.619 align:start position:0%
so we have several speakers of this
 

00:01:09.619 --> 00:01:12.040 align:start position:0%
so we have several speakers of this
morning<00:01:09.979><c> from</c><00:01:10.970><c> the</c><00:01:11.090><c> compiler</c><00:01:11.450><c> team</c><00:01:11.660><c> to</c><00:01:11.930><c> our</c>

00:01:12.040 --> 00:01:12.050 align:start position:0%
morning from the compiler team to our
 

00:01:12.050 --> 00:01:14.139 align:start position:0%
morning from the compiler team to our
performance<00:01:12.860><c> group</c><00:01:13.100><c> as</c><00:01:13.250><c> well</c><00:01:13.789><c> as</c><00:01:13.910><c> the</c><00:01:14.000><c> gut</c>

00:01:14.139 --> 00:01:14.149 align:start position:0%
performance group as well as the gut
 

00:01:14.149 --> 00:01:16.840 align:start position:0%
performance group as well as the gut
speaker<00:01:14.450><c> from</c><00:01:14.570><c> IBM</c><00:01:14.990><c> this</c><00:01:15.800><c> morning</c><00:01:16.190><c> so</c><00:01:16.729><c> with</c>

00:01:16.840 --> 00:01:16.850 align:start position:0%
speaker from IBM this morning so with
 

00:01:16.850 --> 00:01:18.490 align:start position:0%
speaker from IBM this morning so with
that<00:01:16.970><c> I'd</c><00:01:17.179><c> like</c><00:01:17.209><c> to</c><00:01:17.390><c> start</c><00:01:17.810><c> off</c><00:01:17.899><c> this</c><00:01:18.140><c> morning</c>

00:01:18.490 --> 00:01:18.500 align:start position:0%
that I'd like to start off this morning
 

00:01:18.500 --> 00:01:21.190 align:start position:0%
that I'd like to start off this morning
introduce<00:01:19.369><c> Sanjay</c><00:01:19.759><c> Patel</c><00:01:19.959><c> from</c><00:01:20.959><c> our</c>

00:01:21.190 --> 00:01:21.200 align:start position:0%
introduce Sanjay Patel from our
 

00:01:21.200 --> 00:01:31.900 align:start position:0%
introduce Sanjay Patel from our
performance<00:01:21.860><c> group</c><00:01:29.229><c> good</c><00:01:30.229><c> morning</c><00:01:30.789><c> is</c><00:01:31.789><c> a</c>

00:01:31.900 --> 00:01:31.910 align:start position:0%
performance group good morning is a
 

00:01:31.910 --> 00:01:34.779 align:start position:0%
performance group good morning is a
tough<00:01:32.090><c> time</c><00:01:32.300><c> flood</c><00:01:33.280><c> for</c><00:01:34.280><c> those</c><00:01:34.399><c> of</c><00:01:34.520><c> you</c><00:01:34.610><c> here</c>

00:01:34.779 --> 00:01:34.789 align:start position:0%
tough time flood for those of you here
 

00:01:34.789 --> 00:01:37.600 align:start position:0%
tough time flood for those of you here
last<00:01:35.090><c> year</c><00:01:35.800><c> we're</c><00:01:36.800><c> going</c><00:01:36.890><c> to</c><00:01:36.979><c> do</c><00:01:37.069><c> a</c><00:01:37.099><c> bit</c><00:01:37.580><c> of</c>

00:01:37.600 --> 00:01:37.610 align:start position:0%
last year we're going to do a bit of
 

00:01:37.610 --> 00:01:39.580 align:start position:0%
last year we're going to do a bit of
review<00:01:38.000><c> how</c><00:01:38.720><c> many</c><00:01:38.869><c> of</c><00:01:38.959><c> you</c><00:01:39.050><c> are</c><00:01:39.080><c> here</c><00:01:39.229><c> last</c>

00:01:39.580 --> 00:01:39.590 align:start position:0%
review how many of you are here last
 

00:01:39.590 --> 00:01:41.469 align:start position:0%
review how many of you are here last
year<00:01:39.709><c> for</c><00:01:39.950><c> this</c><00:01:40.069><c> talk</c><00:01:40.250><c> okay</c><00:01:41.119><c> so</c><00:01:41.179><c> we're</c><00:01:41.390><c> going</c>

00:01:41.469 --> 00:01:41.479 align:start position:0%
year for this talk okay so we're going
 

00:01:41.479 --> 00:01:43.809 align:start position:0%
year for this talk okay so we're going
to<00:01:41.569><c> go</c><00:01:42.110><c> through</c><00:01:42.140><c> some</c><00:01:42.380><c> g5</c><00:01:42.950><c> architecture</c><00:01:43.610><c> and</c>

00:01:43.809 --> 00:01:43.819 align:start position:0%
to go through some g5 architecture and
 

00:01:43.819 --> 00:01:45.010 align:start position:0%
to go through some g5 architecture and
then<00:01:43.910><c> we</c><00:01:44.030><c> want</c><00:01:44.149><c> to</c><00:01:44.240><c> talk</c><00:01:44.390><c> about</c><00:01:44.539><c> things</c><00:01:44.810><c> you</c>

00:01:45.010 --> 00:01:45.020 align:start position:0%
then we want to talk about things you
 

00:01:45.020 --> 00:01:47.710 align:start position:0%
then we want to talk about things you
can<00:01:45.170><c> do</c><00:01:45.319><c> to</c><00:01:45.530><c> help</c><00:01:46.220><c> improve</c><00:01:46.729><c> your</c><00:01:46.849><c> code</c><00:01:47.119><c> on</c><00:01:47.330><c> g5</c>

00:01:47.710 --> 00:01:47.720 align:start position:0%
can do to help improve your code on g5
 

00:01:47.720 --> 00:01:50.710 align:start position:0%
can do to help improve your code on g5
and<00:01:48.050><c> in</c><00:01:48.500><c> fact</c><00:01:48.679><c> all</c><00:01:48.890><c> platforms</c><00:01:49.190><c> really</c><00:01:49.759><c> and</c>

00:01:50.710 --> 00:01:50.720 align:start position:0%
and in fact all platforms really and
 

00:01:50.720 --> 00:01:52.150 align:start position:0%
and in fact all platforms really and
then<00:01:50.840><c> we'll</c><00:01:50.959><c> turn</c><00:01:51.050><c> it</c><00:01:51.200><c> over</c><00:01:51.319><c> to</c><00:01:51.440><c> some</c><00:01:51.979><c> of</c><00:01:52.069><c> our</c>

00:01:52.150 --> 00:01:52.160 align:start position:0%
then we'll turn it over to some of our
 

00:01:52.160 --> 00:01:55.150 align:start position:0%
then we'll turn it over to some of our
compiler<00:01:52.670><c> guys</c><00:01:53.410><c> to</c><00:01:54.410><c> help</c><00:01:54.560><c> guide</c><00:01:54.709><c> you</c><00:01:54.920><c> through</c>

00:01:55.150 --> 00:01:55.160 align:start position:0%
compiler guys to help guide you through
 

00:01:55.160 --> 00:01:59.469 align:start position:0%
compiler guys to help guide you through
your<00:01:55.250><c> process</c><00:01:56.060><c> of</c><00:01:56.330><c> optimizing</c><00:01:56.869><c> your</c><00:01:56.959><c> code</c><00:01:58.479><c> so</c>

00:01:59.469 --> 00:01:59.479 align:start position:0%
your process of optimizing your code so
 

00:01:59.479 --> 00:02:01.029 align:start position:0%
your process of optimizing your code so
to<00:01:59.569><c> start</c><00:01:59.690><c> off</c><00:01:59.929><c> with</c><00:02:00.170><c> when</c><00:02:00.709><c> you're</c><00:02:00.830><c> talking</c>

00:02:01.029 --> 00:02:01.039 align:start position:0%
to start off with when you're talking
 

00:02:01.039 --> 00:02:02.680 align:start position:0%
to start off with when you're talking
about<00:02:01.130><c> the</c><00:02:01.250><c> g5</c><00:02:01.580><c> you</c><00:02:01.759><c> have</c><00:02:01.910><c> to</c><00:02:02.000><c> of</c><00:02:02.090><c> course</c><00:02:02.149><c> start</c>

00:02:02.680 --> 00:02:02.690 align:start position:0%
about the g5 you have to of course start
 

00:02:02.690 --> 00:02:05.979 align:start position:0%
about the g5 you have to of course start
with<00:02:02.899><c> the</c><00:02:03.170><c> powerpc</c><00:02:03.679><c> 970</c><00:02:04.190><c> chip</c><00:02:04.520><c> and</c><00:02:04.810><c> this</c><00:02:05.810><c> is</c><00:02:05.899><c> of</c>

00:02:05.979 --> 00:02:05.989 align:start position:0%
with the powerpc 970 chip and this is of
 

00:02:05.989 --> 00:02:09.339 align:start position:0%
with the powerpc 970 chip and this is of
course<00:02:06.020><c> a</c><00:02:06.610><c> super</c><00:02:07.610><c> pipelined</c><00:02:07.789><c> super</c><00:02:08.569><c> scalar</c>

00:02:09.339 --> 00:02:09.349 align:start position:0%
course a super pipelined super scalar
 

00:02:09.349 --> 00:02:12.490 align:start position:0%
course a super pipelined super scalar
processor<00:02:09.770><c> we</c><00:02:10.340><c> got</c><00:02:10.459><c> from</c><00:02:10.690><c> we</c><00:02:11.690><c> teamed</c><00:02:12.260><c> up</c><00:02:12.349><c> with</c>

00:02:12.490 --> 00:02:12.500 align:start position:0%
processor we got from we teamed up with
 

00:02:12.500 --> 00:02:15.220 align:start position:0%
processor we got from we teamed up with
IBM<00:02:12.890><c> to</c><00:02:13.010><c> make</c><00:02:13.220><c> it's</c><00:02:14.030><c> based</c><00:02:14.300><c> on</c><00:02:14.510><c> the</c><00:02:14.780><c> power</c><00:02:14.900><c> for</c>

00:02:15.220 --> 00:02:15.230 align:start position:0%
IBM to make it's based on the power for
 

00:02:15.230 --> 00:02:19.270 align:start position:0%
IBM to make it's based on the power for
server<00:02:15.950><c> architecture</c><00:02:16.580><c> and</c><00:02:16.849><c> the</c><00:02:17.860><c> big</c><00:02:18.860><c> addition</c>

00:02:19.270 --> 00:02:19.280 align:start position:0%
server architecture and the big addition
 

00:02:19.280 --> 00:02:21.580 align:start position:0%
server architecture and the big addition
that<00:02:19.580><c> we</c><00:02:19.819><c> had</c><00:02:20.150><c> to</c><00:02:20.360><c> have</c><00:02:20.540><c> to</c><00:02:20.989><c> make</c><00:02:21.140><c> it</c><00:02:21.230><c> an</c><00:02:21.319><c> apple</c>

00:02:21.580 --> 00:02:21.590 align:start position:0%
that we had to have to make it an apple
 

00:02:21.590 --> 00:02:23.440 align:start position:0%
that we had to have to make it an apple
chip<00:02:21.799><c> was</c><00:02:22.069><c> dad</c><00:02:22.280><c> what</c><00:02:22.670><c> we</c><00:02:22.760><c> call</c><00:02:22.939><c> the</c><00:02:23.090><c> altivec</c>

00:02:23.440 --> 00:02:23.450 align:start position:0%
chip was dad what we call the altivec
 

00:02:23.450 --> 00:02:24.490 align:start position:0%
chip was dad what we call the altivec
engine

00:02:24.490 --> 00:02:24.500 align:start position:0%
engine
 

00:02:24.500 --> 00:02:25.960 align:start position:0%
engine
also<00:02:24.650><c> known</c><00:02:24.770><c> as</c><00:02:24.890><c> the</c><00:02:24.980><c> velocity</c><00:02:25.100><c> engine</c><00:02:25.730><c> so</c>

00:02:25.960 --> 00:02:25.970 align:start position:0%
also known as the velocity engine so
 

00:02:25.970 --> 00:02:27.430 align:start position:0%
also known as the velocity engine so
this<00:02:26.120><c> is</c><00:02:26.150><c> a</c><00:02:26.270><c> hundred</c><00:02:26.870><c> twenty</c><00:02:27.110><c> eight</c><00:02:27.230><c> bit</c>

00:02:27.430 --> 00:02:27.440 align:start position:0%
this is a hundred twenty eight bit
 

00:02:27.440 --> 00:02:29.830 align:start position:0%
this is a hundred twenty eight bit
vector<00:02:28.340><c> unit</c><00:02:28.670><c> which</c><00:02:29.150><c> does</c><00:02:29.390><c> floating-point</c>

00:02:29.830 --> 00:02:29.840 align:start position:0%
vector unit which does floating-point
 

00:02:29.840 --> 00:02:32.740 align:start position:0%
vector unit which does floating-point
and<00:02:30.290><c> integer</c><00:02:30.680><c> math</c><00:02:30.860><c> and</c><00:02:31.420><c> the</c><00:02:32.420><c> other</c><00:02:32.540><c> big</c>

00:02:32.740 --> 00:02:32.750 align:start position:0%
and integer math and the other big
 

00:02:32.750 --> 00:02:34.750 align:start position:0%
and integer math and the other big
difference<00:02:33.170><c> is</c><00:02:33.410><c> we</c><00:02:34.010><c> have</c><00:02:34.400><c> this</c><00:02:34.550><c> high</c>

00:02:34.750 --> 00:02:34.760 align:start position:0%
difference is we have this high
 

00:02:34.760 --> 00:02:36.700 align:start position:0%
difference is we have this high
bandwidth<00:02:35.270><c> point-to-point</c><00:02:35.750><c> interface</c><00:02:36.470><c> that</c>

00:02:36.700 --> 00:02:36.710 align:start position:0%
bandwidth point-to-point interface that
 

00:02:36.710 --> 00:02:38.380 align:start position:0%
bandwidth point-to-point interface that
connects<00:02:37.040><c> the</c><00:02:37.340><c> chips</c><00:02:37.640><c> to</c><00:02:38.030><c> the</c><00:02:38.150><c> memory</c>

00:02:38.380 --> 00:02:38.390 align:start position:0%
connects the chips to the memory
 

00:02:38.390 --> 00:02:41.920 align:start position:0%
connects the chips to the memory
controller<00:02:39.430><c> and</c><00:02:40.430><c> help</c><00:02:41.330><c> take</c><00:02:41.450><c> advantage</c><00:02:41.840><c> of</c>

00:02:41.920 --> 00:02:41.930 align:start position:0%
controller and help take advantage of
 

00:02:41.930 --> 00:02:43.630 align:start position:0%
controller and help take advantage of
all<00:02:42.050><c> the</c><00:02:42.200><c> bandwidth</c><00:02:42.590><c> that</c><00:02:42.860><c> we</c><00:02:43.400><c> have</c><00:02:43.520><c> available</c>

00:02:43.630 --> 00:02:43.640 align:start position:0%
all the bandwidth that we have available
 

00:02:43.640 --> 00:02:46.210 align:start position:0%
all the bandwidth that we have available
in<00:02:44.060><c> the</c><00:02:44.180><c> system</c><00:02:44.330><c> in</c><00:02:44.660><c> theory</c><00:02:45.080><c> are</c><00:02:45.350><c> these</c>

00:02:46.210 --> 00:02:46.220 align:start position:0%
in the system in theory are these
 

00:02:46.220 --> 00:02:47.710 align:start position:0%
in the system in theory are these
automatic<00:02:46.730><c> hardware</c><00:02:47.030><c> prefetcher</c><00:02:47.209><c> engines</c>

00:02:47.710 --> 00:02:47.720 align:start position:0%
automatic hardware prefetcher engines
 

00:02:47.720 --> 00:02:48.880 align:start position:0%
automatic hardware prefetcher engines
that<00:02:47.840><c> help</c><00:02:47.990><c> put</c><00:02:48.110><c> all</c><00:02:48.230><c> that</c><00:02:48.350><c> theoretical</c>

00:02:48.880 --> 00:02:48.890 align:start position:0%
that help put all that theoretical
 

00:02:48.890 --> 00:02:54.730 align:start position:0%
that help put all that theoretical
bandwidth<00:02:49.340><c> to</c><00:02:49.940><c> use</c><00:02:52.870><c> so</c><00:02:53.870><c> this</c><00:02:54.080><c> is</c><00:02:54.110><c> a</c><00:02:54.230><c> die</c><00:02:54.470><c> shot</c>

00:02:54.730 --> 00:02:54.740 align:start position:0%
bandwidth to use so this is a die shot
 

00:02:54.740 --> 00:02:58.390 align:start position:0%
bandwidth to use so this is a die shot
of<00:02:55.040><c> the</c><00:02:55.310><c> 970</c><00:02:55.850><c> chip</c><00:02:56.620><c> 24</c><00:02:57.620><c> hardware</c><00:02:57.920><c> engineers</c><00:02:58.220><c> is</c>

00:02:58.390 --> 00:02:58.400 align:start position:0%
of the 970 chip 24 hardware engineers is
 

00:02:58.400 --> 00:02:59.979 align:start position:0%
of the 970 chip 24 hardware engineers is
kind<00:02:58.670><c> of</c><00:02:58.730><c> like</c><00:02:58.820><c> pornography</c><00:02:59.360><c> you</c><00:02:59.840><c> know</c><00:02:59.930><c> you</c>

00:02:59.979 --> 00:02:59.989 align:start position:0%
kind of like pornography you know you
 

00:02:59.989 --> 00:03:01.570 align:start position:0%
kind of like pornography you know you
look<00:03:00.200><c> at</c><00:03:00.320><c> this</c><00:03:00.440><c> and</c><00:03:00.650><c> you'll</c><00:03:01.010><c> hear</c><00:03:01.130><c> some</c><00:03:01.370><c> safe</c>

00:03:01.570 --> 00:03:01.580 align:start position:0%
look at this and you'll hear some safe
 

00:03:01.580 --> 00:03:03.610 align:start position:0%
look at this and you'll hear some safe
things<00:03:01.790><c> like</c><00:03:02.000><c> look</c><00:03:02.540><c> at</c><00:03:02.630><c> the</c><00:03:02.750><c> FP</c><00:03:03.050><c> use</c><00:03:03.200><c> on</c><00:03:03.440><c> that</c>

00:03:03.610 --> 00:03:03.620 align:start position:0%
things like look at the FP use on that
 

00:03:03.620 --> 00:03:07.300 align:start position:0%
things like look at the FP use on that
one<00:03:03.880><c> for</c><00:03:05.500><c> software</c><00:03:06.500><c> engineers</c><00:03:06.830><c> what</c><00:03:07.040><c> you</c><00:03:07.160><c> want</c>

00:03:07.300 --> 00:03:07.310 align:start position:0%
one for software engineers what you want
 

00:03:07.310 --> 00:03:08.800 align:start position:0%
one for software engineers what you want
to<00:03:07.370><c> take</c><00:03:07.489><c> away</c><00:03:07.670><c> from</c><00:03:07.820><c> this</c><00:03:07.970><c> is</c><00:03:08.270><c> that</c><00:03:08.330><c> there</c><00:03:08.780><c> are</c>

00:03:08.800 --> 00:03:08.810 align:start position:0%
to take away from this is that there are
 

00:03:08.810 --> 00:03:10.810 align:start position:0%
to take away from this is that there are
lots<00:03:09.050><c> of</c><00:03:09.230><c> executed</c><00:03:09.800><c> execution</c><00:03:10.580><c> units</c>

00:03:10.810 --> 00:03:10.820 align:start position:0%
lots of executed execution units
 

00:03:10.820 --> 00:03:12.880 align:start position:0%
lots of executed execution units
available<00:03:11.120><c> for</c><00:03:11.480><c> your</c><00:03:11.540><c> program</c><00:03:11.780><c> that</c><00:03:12.770><c> all</c>

00:03:12.880 --> 00:03:12.890 align:start position:0%
available for your program that all
 

00:03:12.890 --> 00:03:14.830 align:start position:0%
available for your program that all
operate<00:03:13.280><c> in</c><00:03:13.370><c> parallel</c><00:03:13.790><c> so</c><00:03:14.030><c> two</c><00:03:14.120><c> independent</c>

00:03:14.830 --> 00:03:14.840 align:start position:0%
operate in parallel so two independent
 

00:03:14.840 --> 00:03:17.080 align:start position:0%
operate in parallel so two independent
load<00:03:14.959><c> store</c><00:03:15.230><c> units</c><00:03:15.590><c> two</c><00:03:16.430><c> independent</c><00:03:17.000><c> I</c>

00:03:17.080 --> 00:03:17.090 align:start position:0%
load store units two independent I
 

00:03:17.090 --> 00:03:18.880 align:start position:0%
load store units two independent I
Triple<00:03:17.510><c> E</c><00:03:17.570><c> compliant</c><00:03:18.050><c> floating-point</c><00:03:18.380><c> units</c>

00:03:18.880 --> 00:03:18.890 align:start position:0%
Triple E compliant floating-point units
 

00:03:18.890 --> 00:03:20.740 align:start position:0%
Triple E compliant floating-point units
we<00:03:19.520><c> have</c><00:03:19.640><c> the</c><00:03:19.760><c> full</c><00:03:19.910><c> implementation</c><00:03:20.330><c> of</c>

00:03:20.740 --> 00:03:20.750 align:start position:0%
we have the full implementation of
 

00:03:20.750 --> 00:03:24.160 align:start position:0%
we have the full implementation of
altivec<00:03:21.140><c> to</c><00:03:21.350><c> fix</c><00:03:21.620><c> point</c><00:03:21.800><c> units</c><00:03:22.160><c> as</c><00:03:22.310><c> well</c><00:03:23.170><c> so</c>

00:03:24.160 --> 00:03:24.170 align:start position:0%
altivec to fix point units as well so
 

00:03:24.170 --> 00:03:25.960 align:start position:0%
altivec to fix point units as well so
there's<00:03:24.320><c> just</c><00:03:24.530><c> a</c><00:03:24.590><c> lot</c><00:03:24.739><c> of</c><00:03:24.800><c> space</c><00:03:25.160><c> here</c><00:03:25.190><c> to</c><00:03:25.820><c> get</c>

00:03:25.960 --> 00:03:25.970 align:start position:0%
there's just a lot of space here to get
 

00:03:25.970 --> 00:03:28.720 align:start position:0%
there's just a lot of space here to get
things<00:03:26.209><c> done</c><00:03:26.270><c> in</c><00:03:26.540><c> parallel</c><00:03:27.519><c> another</c><00:03:28.519><c> way</c><00:03:28.670><c> to</c>

00:03:28.720 --> 00:03:28.730 align:start position:0%
things done in parallel another way to
 

00:03:28.730 --> 00:03:29.800 align:start position:0%
things done in parallel another way to
look<00:03:28.820><c> at</c><00:03:29.000><c> this</c><00:03:29.060><c> from</c><00:03:29.330><c> the</c><00:03:29.420><c> software</c>

00:03:29.800 --> 00:03:29.810 align:start position:0%
look at this from the software
 

00:03:29.810 --> 00:03:31.960 align:start position:0%
look at this from the software
perspective<00:03:29.959><c> again</c><00:03:30.950><c> if</c><00:03:31.220><c> you</c><00:03:31.580><c> start</c><00:03:31.850><c> at</c><00:03:31.940><c> the</c>

00:03:31.960 --> 00:03:31.970 align:start position:0%
perspective again if you start at the
 

00:03:31.970 --> 00:03:33.910 align:start position:0%
perspective again if you start at the
top<00:03:32.209><c> you</c><00:03:32.600><c> have</c><00:03:32.720><c> the</c><00:03:32.750><c> l1</c><00:03:33.110><c> cache</c><00:03:33.350><c> which</c><00:03:33.650><c> holds</c>

00:03:33.910 --> 00:03:33.920 align:start position:0%
top you have the l1 cache which holds
 

00:03:33.920 --> 00:03:36.130 align:start position:0%
top you have the l1 cache which holds
your<00:03:34.070><c> instructions</c><00:03:34.610><c> from</c><00:03:35.540><c> the</c><00:03:35.630><c> l1</c><00:03:35.930><c> cache</c>

00:03:36.130 --> 00:03:36.140 align:start position:0%
your instructions from the l1 cache
 

00:03:36.140 --> 00:03:38.550 align:start position:0%
your instructions from the l1 cache
instructions<00:03:36.830><c> flow</c><00:03:37.040><c> into</c><00:03:37.400><c> a</c><00:03:37.430><c> fetch</c><00:03:38.000><c> queue</c><00:03:38.299><c> and</c>

00:03:38.550 --> 00:03:38.560 align:start position:0%
instructions flow into a fetch queue and
 

00:03:38.560 --> 00:03:41.229 align:start position:0%
instructions flow into a fetch queue and
from<00:03:39.560><c> there</c><00:03:39.739><c> they</c><00:03:39.890><c> get</c><00:03:40.010><c> dispatched</c><00:03:40.459><c> up</c><00:03:40.820><c> to</c>

00:03:41.229 --> 00:03:41.239 align:start position:0%
from there they get dispatched up to
 

00:03:41.239 --> 00:03:43.060 align:start position:0%
from there they get dispatched up to
five<00:03:41.450><c> instructions</c><00:03:41.840><c> on</c><00:03:42.200><c> each</c><00:03:42.350><c> clock</c><00:03:42.650><c> so</c><00:03:42.950><c> at</c>

00:03:43.060 --> 00:03:43.070 align:start position:0%
five instructions on each clock so at
 

00:03:43.070 --> 00:03:44.979 align:start position:0%
five instructions on each clock so at
two<00:03:43.190><c> and</c><00:03:43.280><c> a</c><00:03:43.340><c> half</c><00:03:43.430><c> gigahertz</c><00:03:43.989><c> your</c>

00:03:44.979 --> 00:03:44.989 align:start position:0%
two and a half gigahertz your
 

00:03:44.989 --> 00:03:49.060 align:start position:0%
two and a half gigahertz your
dispatching<00:03:45.950><c> over</c><00:03:46.160><c> ten</c><00:03:46.430><c> in</c><00:03:46.690><c> theory</c><00:03:48.070><c> 10</c>

00:03:49.060 --> 00:03:49.070 align:start position:0%
dispatching over ten in theory 10
 

00:03:49.070 --> 00:03:51.910 align:start position:0%
dispatching over ten in theory 10
billion<00:03:49.459><c> instructions</c><00:03:49.610><c> per</c><00:03:50.150><c> second</c><00:03:50.920><c> now</c>

00:03:51.910 --> 00:03:51.920 align:start position:0%
billion instructions per second now
 

00:03:51.920 --> 00:03:53.319 align:start position:0%
billion instructions per second now
that's<00:03:52.160><c> actually</c><00:03:52.459><c> the</c><00:03:52.549><c> narrow</c><00:03:52.730><c> point</c><00:03:52.970><c> of</c><00:03:53.209><c> the</c>

00:03:53.319 --> 00:03:53.329 align:start position:0%
that's actually the narrow point of the
 

00:03:53.329 --> 00:03:55.840 align:start position:0%
that's actually the narrow point of the
970<00:03:53.840><c> architecture</c><00:03:54.500><c> so</c><00:03:54.920><c> you</c><00:03:55.010><c> can</c><00:03:55.549><c> see</c><00:03:55.700><c> this</c>

00:03:55.840 --> 00:03:55.850 align:start position:0%
970 architecture so you can see this
 

00:03:55.850 --> 00:03:57.520 align:start position:0%
970 architecture so you can see this
stuff<00:03:56.060><c> in</c><00:03:56.209><c> the</c><00:03:56.329><c> kind</c><00:03:56.660><c> of</c><00:03:56.720><c> greenish</c><00:03:56.930><c> gray</c><00:03:57.350><c> is</c>

00:03:57.520 --> 00:03:57.530 align:start position:0%
stuff in the kind of greenish gray is
 

00:03:57.530 --> 00:03:59.860 align:start position:0%
stuff in the kind of greenish gray is
out<00:03:57.739><c> of</c><00:03:57.769><c> order</c><00:03:58.040><c> execution</c><00:03:58.390><c> so</c><00:03:59.390><c> you</c><00:03:59.450><c> can</c><00:03:59.630><c> feed</c>

00:03:59.860 --> 00:03:59.870 align:start position:0%
out of order execution so you can feed
 

00:03:59.870 --> 00:04:02.979 align:start position:0%
out of order execution so you can feed
12<00:04:00.290><c> independent</c><00:04:01.100><c> execution</c><00:04:01.760><c> units</c><00:04:02.060><c> with</c><00:04:02.720><c> 10</c>

00:04:02.979 --> 00:04:02.989 align:start position:0%
12 independent execution units with 10
 

00:04:02.989 --> 00:04:04.930 align:start position:0%
12 independent execution units with 10
issue<00:04:03.170><c> tues</c><00:04:03.530><c> once</c><00:04:04.010><c> you've</c><00:04:04.160><c> dispatched</c><00:04:04.430><c> and</c>

00:04:04.930 --> 00:04:04.940 align:start position:0%
issue tues once you've dispatched and
 

00:04:04.940 --> 00:04:07.150 align:start position:0%
issue tues once you've dispatched and
then<00:04:05.750><c> again</c><00:04:05.930><c> your</c><00:04:06.079><c> instructions</c><00:04:06.530><c> complete</c><00:04:07.010><c> at</c>

00:04:07.150 --> 00:04:07.160 align:start position:0%
then again your instructions complete at
 

00:04:07.160 --> 00:04:08.710 align:start position:0%
then again your instructions complete at
the<00:04:07.220><c> bottom</c><00:04:07.519><c> of</c><00:04:07.610><c> this</c><00:04:07.700><c> picture</c><00:04:08.090><c> in</c><00:04:08.269><c> order</c><00:04:08.570><c> up</c>

00:04:08.710 --> 00:04:08.720 align:start position:0%
the bottom of this picture in order up
 

00:04:08.720 --> 00:04:12.940 align:start position:0%
the bottom of this picture in order up
to<00:04:09.110><c> 5</c><00:04:09.290><c> per</c><00:04:09.620><c> clock</c><00:04:11.380><c> now</c><00:04:12.380><c> a</c><00:04:12.410><c> good</c><00:04:12.590><c> way</c><00:04:12.739><c> to</c><00:04:12.799><c> put</c>

00:04:12.940 --> 00:04:12.950 align:start position:0%
to 5 per clock now a good way to put
 

00:04:12.950 --> 00:04:14.530 align:start position:0%
to 5 per clock now a good way to put
this<00:04:13.100><c> in</c><00:04:13.250><c> perspective</c><00:04:13.400><c> is</c><00:04:13.940><c> to</c><00:04:14.060><c> look</c><00:04:14.209><c> at</c><00:04:14.390><c> how</c>

00:04:14.530 --> 00:04:14.540 align:start position:0%
this in perspective is to look at how
 

00:04:14.540 --> 00:04:19.210 align:start position:0%
this in perspective is to look at how
the<00:04:14.600><c> g5</c><00:04:15.019><c> compares</c><00:04:15.500><c> to</c><00:04:15.920><c> the</c><00:04:16.160><c> g4</c><00:04:16.549><c> and</c><00:04:17.200><c> so</c><00:04:18.200><c> we</c><00:04:18.709><c> keep</c>

00:04:19.210 --> 00:04:19.220 align:start position:0%
the g5 compares to the g4 and so we keep
 

00:04:19.220 --> 00:04:21.400 align:start position:0%
the g5 compares to the g4 and so we keep
talking<00:04:19.850><c> about</c><00:04:20.090><c> the</c><00:04:20.329><c> the</c><00:04:20.660><c> parallel</c><00:04:21.049><c> ISM</c><00:04:21.320><c> of</c>

00:04:21.400 --> 00:04:21.410 align:start position:0%
talking about the the parallel ISM of
 

00:04:21.410 --> 00:04:23.469 align:start position:0%
talking about the the parallel ISM of
this<00:04:21.530><c> ship</c><00:04:21.829><c> one</c><00:04:22.490><c> way</c><00:04:22.640><c> to</c><00:04:22.700><c> measure</c><00:04:22.880><c> that</c><00:04:23.150><c> is</c><00:04:23.300><c> how</c>

00:04:23.469 --> 00:04:23.479 align:start position:0%
this ship one way to measure that is how
 

00:04:23.479 --> 00:04:25.260 align:start position:0%
this ship one way to measure that is how
many<00:04:23.660><c> instructions</c><00:04:24.169><c> you</c><00:04:24.260><c> keep</c><00:04:24.440><c> in</c><00:04:24.560><c> flight</c>

00:04:25.260 --> 00:04:25.270 align:start position:0%
many instructions you keep in flight
 

00:04:25.270 --> 00:04:28.870 align:start position:0%
many instructions you keep in flight
simultaneously<00:04:26.270><c> and</c><00:04:26.510><c> for</c><00:04:27.229><c> the</c><00:04:27.320><c> g5</c><00:04:27.740><c> it's</c><00:04:28.610><c> over</c>

00:04:28.870 --> 00:04:28.880 align:start position:0%
simultaneously and for the g5 it's over
 

00:04:28.880 --> 00:04:31.300 align:start position:0%
simultaneously and for the g5 it's over
200<00:04:29.360><c> instructions</c><00:04:29.840><c> in</c><00:04:29.960><c> flight</c><00:04:30.229><c> compared</c><00:04:31.100><c> to</c><00:04:31.160><c> a</c>

00:04:31.300 --> 00:04:31.310 align:start position:0%
200 instructions in flight compared to a
 

00:04:31.310 --> 00:04:33.990 align:start position:0%
200 instructions in flight compared to a
little<00:04:31.460><c> over</c><00:04:31.580><c> 30</c><00:04:31.940><c> for</c><00:04:32.419><c> a</c><00:04:32.450><c> g4</c><00:04:32.840><c> architecture</c><00:04:33.410><c> and</c>

00:04:33.990 --> 00:04:34.000 align:start position:0%
little over 30 for a g4 architecture and
 

00:04:34.000 --> 00:04:36.339 align:start position:0%
little over 30 for a g4 architecture and
we've<00:04:35.000><c> also</c><00:04:35.150><c> increased</c><00:04:35.479><c> the</c><00:04:35.660><c> pipeline</c><00:04:36.080><c> stages</c>

00:04:36.339 --> 00:04:36.349 align:start position:0%
we've also increased the pipeline stages
 

00:04:36.349 --> 00:04:37.150 align:start position:0%
we've also increased the pipeline stages
so

00:04:37.150 --> 00:04:37.160 align:start position:0%
so
 

00:04:37.160 --> 00:04:38.980 align:start position:0%
so
you<00:04:37.190><c> can</c><00:04:37.280><c> see</c><00:04:37.430><c> that</c><00:04:37.700><c> it's</c><00:04:38.330><c> more</c><00:04:38.450><c> than</c><00:04:38.600><c> doubled</c>

00:04:38.980 --> 00:04:38.990 align:start position:0%
you can see that it's more than doubled
 

00:04:38.990 --> 00:04:41.550 align:start position:0%
you can see that it's more than doubled
for<00:04:39.200><c> a</c><00:04:39.260><c> simple</c><00:04:39.800><c> integer</c><00:04:40.070><c> instruction</c><00:04:40.700><c> and</c>

00:04:41.550 --> 00:04:41.560 align:start position:0%
for a simple integer instruction and
 

00:04:41.560 --> 00:04:43.720 align:start position:0%
for a simple integer instruction and
usually<00:04:42.560><c> you'd</c><00:04:42.680><c> say</c><00:04:42.830><c> well</c><00:04:42.980><c> that's</c><00:04:43.190><c> not</c><00:04:43.550><c> so</c>

00:04:43.720 --> 00:04:43.730 align:start position:0%
usually you'd say well that's not so
 

00:04:43.730 --> 00:04:46.060 align:start position:0%
usually you'd say well that's not so
good<00:04:43.880><c> why'd</c><00:04:44.120><c> you</c><00:04:44.270><c> do</c><00:04:44.390><c> that</c><00:04:44.650><c> the</c><00:04:45.650><c> reason</c><00:04:45.950><c> we</c>

00:04:46.060 --> 00:04:46.070 align:start position:0%
good why'd you do that the reason we
 

00:04:46.070 --> 00:04:47.800 align:start position:0%
good why'd you do that the reason we
increase<00:04:46.550><c> the</c><00:04:46.580><c> pipeline</c><00:04:47.030><c> stages</c><00:04:47.300><c> is</c><00:04:47.540><c> to</c><00:04:47.660><c> help</c>

00:04:47.800 --> 00:04:47.810 align:start position:0%
increase the pipeline stages is to help
 

00:04:47.810 --> 00:04:49.840 align:start position:0%
increase the pipeline stages is to help
increase<00:04:47.990><c> frequency</c><00:04:48.440><c> so</c><00:04:49.010><c> we</c><00:04:49.460><c> just</c><00:04:49.640><c> announced</c>

00:04:49.840 --> 00:04:49.850 align:start position:0%
increase frequency so we just announced
 

00:04:49.850 --> 00:04:51.910 align:start position:0%
increase frequency so we just announced
that<00:04:50.060><c> we</c><00:04:50.180><c> hit</c><00:04:50.270><c> two</c><00:04:50.540><c> and</c><00:04:50.660><c> a</c><00:04:50.690><c> half</c><00:04:50.840><c> gigahertz</c><00:04:51.230><c> in</c>

00:04:51.910 --> 00:04:51.920 align:start position:0%
that we hit two and a half gigahertz in
 

00:04:51.920 --> 00:04:53.860 align:start position:0%
that we hit two and a half gigahertz in
order<00:04:52.520><c> to</c><00:04:52.580><c> hit</c><00:04:52.730><c> higher</c><00:04:52.910><c> and</c><00:04:53.120><c> higher</c><00:04:53.180><c> frequency</c>

00:04:53.860 --> 00:04:53.870 align:start position:0%
order to hit higher and higher frequency
 

00:04:53.870 --> 00:04:56.970 align:start position:0%
order to hit higher and higher frequency
numbers<00:04:54.140><c> you</c><00:04:54.320><c> increase</c><00:04:55.040><c> the</c><00:04:55.190><c> pipeline</c><00:04:55.580><c> depth</c>

00:04:56.970 --> 00:04:56.980 align:start position:0%
numbers you increase the pipeline depth
 

00:04:56.980 --> 00:04:59.200 align:start position:0%
numbers you increase the pipeline depth
okay<00:04:57.980><c> and</c><00:04:58.430><c> we</c><00:04:58.490><c> talked</c><00:04:58.640><c> about</c><00:04:58.850><c> some</c><00:04:59.060><c> of</c><00:04:59.150><c> the</c>

00:04:59.200 --> 00:04:59.210 align:start position:0%
okay and we talked about some of the
 

00:04:59.210 --> 00:05:01.000 align:start position:0%
okay and we talked about some of the
execution<00:04:59.780><c> units</c><00:05:00.020><c> again</c><00:05:00.260><c> we've</c><00:05:00.530><c> doubled</c><00:05:00.890><c> up</c>

00:05:01.000 --> 00:05:01.010 align:start position:0%
execution units again we've doubled up
 

00:05:01.010 --> 00:05:03.220 align:start position:0%
execution units again we've doubled up
on<00:05:01.250><c> the</c><00:05:01.310><c> load/store</c><00:05:01.730><c> units</c><00:05:02.270><c> doubled</c><00:05:03.020><c> up</c><00:05:03.110><c> on</c>

00:05:03.220 --> 00:05:03.230 align:start position:0%
on the load/store units doubled up on
 

00:05:03.230 --> 00:05:05.860 align:start position:0%
on the load/store units doubled up on
floating-point<00:05:03.620><c> units</c><00:05:04.070><c> you</c><00:05:04.970><c> now</c><00:05:05.120><c> have</c><00:05:05.300><c> to</c><00:05:05.510><c> fix</c>

00:05:05.860 --> 00:05:05.870 align:start position:0%
floating-point units you now have to fix
 

00:05:05.870 --> 00:05:08.440 align:start position:0%
floating-point units you now have to fix
point<00:05:06.140><c> to</c><00:05:07.070><c> general</c><00:05:07.430><c> purpose</c><00:05:07.700><c> fix</c><00:05:07.910><c> point</c><00:05:08.090><c> units</c>

00:05:08.440 --> 00:05:08.450 align:start position:0%
point to general purpose fix point units
 

00:05:08.450 --> 00:05:10.420 align:start position:0%
point to general purpose fix point units
whereas<00:05:08.810><c> on</c><00:05:08.960><c> a</c><00:05:08.990><c> g4</c><00:05:09.440><c> architecture</c><00:05:10.010><c> you</c><00:05:10.130><c> have</c><00:05:10.190><c> up</c>

00:05:10.420 --> 00:05:10.430 align:start position:0%
whereas on a g4 architecture you have up
 

00:05:10.430 --> 00:05:12.070 align:start position:0%
whereas on a g4 architecture you have up
to<00:05:10.520><c> three</c><00:05:10.820><c> simple</c><00:05:11.210><c> units</c><00:05:11.540><c> that</c><00:05:11.750><c> do</c><00:05:11.870><c> things</c>

00:05:12.070 --> 00:05:12.080 align:start position:0%
to three simple units that do things
 

00:05:12.080 --> 00:05:14.650 align:start position:0%
to three simple units that do things
like<00:05:12.200><c> adds</c><00:05:12.530><c> and</c><00:05:12.830><c> subtracts</c><00:05:12.860><c> and</c><00:05:13.520><c> one</c><00:05:14.180><c> complex</c>

00:05:14.650 --> 00:05:14.660 align:start position:0%
like adds and subtracts and one complex
 

00:05:14.660 --> 00:05:16.210 align:start position:0%
like adds and subtracts and one complex
unit<00:05:14.960><c> to</c><00:05:15.110><c> handle</c><00:05:15.200><c> things</c><00:05:15.620><c> like</c><00:05:15.710><c> multiplies</c>

00:05:16.210 --> 00:05:16.220 align:start position:0%
unit to handle things like multiplies
 

00:05:16.220 --> 00:05:19.750 align:start position:0%
unit to handle things like multiplies
and<00:05:16.250><c> divides</c><00:05:17.170><c> the</c><00:05:18.170><c> vector</c><00:05:18.470><c> units</c><00:05:19.040><c> are</c><00:05:19.250><c> pretty</c>

00:05:19.750 --> 00:05:19.760 align:start position:0%
and divides the vector units are pretty
 

00:05:19.760 --> 00:05:21.220 align:start position:0%
and divides the vector units are pretty
similar<00:05:19.940><c> you</c><00:05:20.150><c> have</c><00:05:20.270><c> an</c><00:05:20.360><c> ALU</c><00:05:20.630><c> that</c><00:05:20.930><c> handles</c>

00:05:21.220 --> 00:05:21.230 align:start position:0%
similar you have an ALU that handles
 

00:05:21.230 --> 00:05:22.900 align:start position:0%
similar you have an ALU that handles
floating-point<00:05:21.590><c> an</c><00:05:21.950><c> integer</c><00:05:22.160><c> and</c><00:05:22.490><c> you</c><00:05:22.730><c> have</c><00:05:22.850><c> a</c>

00:05:22.900 --> 00:05:22.910 align:start position:0%
floating-point an integer and you have a
 

00:05:22.910 --> 00:05:25.090 align:start position:0%
floating-point an integer and you have a
permute<00:05:23.270><c> unit</c><00:05:23.600><c> for</c><00:05:24.530><c> any</c><00:05:24.620><c> of</c><00:05:24.680><c> you</c><00:05:24.800><c> have</c><00:05:24.920><c> done</c>

00:05:25.090 --> 00:05:25.100 align:start position:0%
permute unit for any of you have done
 

00:05:25.100 --> 00:05:26.740 align:start position:0%
permute unit for any of you have done
any<00:05:25.250><c> vector</c><00:05:25.460><c> programming</c><00:05:26.060><c> with</c><00:05:26.180><c> altivec</c><00:05:26.540><c> you</c>

00:05:26.740 --> 00:05:26.750 align:start position:0%
any vector programming with altivec you
 

00:05:26.750 --> 00:05:28.360 align:start position:0%
any vector programming with altivec you
know<00:05:26.900><c> what</c><00:05:27.080><c> the</c><00:05:27.200><c> power</c><00:05:27.380><c> of</c><00:05:27.620><c> the</c><00:05:27.650><c> permute</c><00:05:28.070><c> unit</c>

00:05:28.360 --> 00:05:28.370 align:start position:0%
know what the power of the permute unit
 

00:05:28.370 --> 00:05:31.240 align:start position:0%
know what the power of the permute unit
is<00:05:28.520><c> in</c><00:05:29.210><c> terms</c><00:05:29.480><c> of</c><00:05:29.650><c> switzerland</c><00:05:30.650><c> atta</c><00:05:30.830><c> out</c><00:05:31.100><c> of</c>

00:05:31.240 --> 00:05:31.250 align:start position:0%
is in terms of switzerland atta out of
 

00:05:31.250 --> 00:05:34.960 align:start position:0%
is in terms of switzerland atta out of
memory<00:05:31.460><c> and</c><00:05:31.610><c> into</c><00:05:31.880><c> the</c><00:05:31.940><c> registers</c><00:05:33.700><c> as</c><00:05:34.700><c> we</c><00:05:34.820><c> work</c>

00:05:34.960 --> 00:05:34.970 align:start position:0%
memory and into the registers as we work
 

00:05:34.970 --> 00:05:37.060 align:start position:0%
memory and into the registers as we work
our<00:05:35.090><c> way</c><00:05:35.150><c> out</c><00:05:35.210><c> from</c><00:05:35.750><c> the</c><00:05:35.840><c> core</c><00:05:36.170><c> the</c><00:05:36.890><c> biggest</c>

00:05:37.060 --> 00:05:37.070 align:start position:0%
our way out from the core the biggest
 

00:05:37.070 --> 00:05:38.470 align:start position:0%
our way out from the core the biggest
programmer<00:05:37.580><c> visible</c><00:05:38.000><c> difference</c><00:05:38.360><c> that</c>

00:05:38.470 --> 00:05:38.480 align:start position:0%
programmer visible difference that
 

00:05:38.480 --> 00:05:39.700 align:start position:0%
programmer visible difference that
you'll<00:05:38.600><c> find</c><00:05:38.840><c> is</c><00:05:39.020><c> that</c><00:05:39.050><c> the</c><00:05:39.260><c> cache</c><00:05:39.440><c> line</c><00:05:39.680><c> size</c>

00:05:39.700 --> 00:05:39.710 align:start position:0%
you'll find is that the cache line size
 

00:05:39.710 --> 00:05:41.740 align:start position:0%
you'll find is that the cache line size
is<00:05:40.100><c> different</c><00:05:40.250><c> it's</c><00:05:40.910><c> under</c><00:05:41.390><c> twenty</c><00:05:41.660><c> eight</c>

00:05:41.740 --> 00:05:41.750 align:start position:0%
is different it's under twenty eight
 

00:05:41.750 --> 00:05:43.980 align:start position:0%
is different it's under twenty eight
bytes<00:05:41.990><c> whereas</c><00:05:42.410><c> it</c><00:05:42.500><c> was</c><00:05:42.590><c> thirty-two</c><00:05:43.130><c> for</c><00:05:43.370><c> a</c><00:05:43.430><c> g4</c>

00:05:43.980 --> 00:05:43.990 align:start position:0%
bytes whereas it was thirty-two for a g4
 

00:05:43.990 --> 00:05:46.300 align:start position:0%
bytes whereas it was thirty-two for a g4
now<00:05:44.990><c> that</c><00:05:45.290><c> can</c><00:05:45.410><c> either</c><00:05:45.500><c> be</c><00:05:45.590><c> a</c><00:05:45.740><c> really</c><00:05:46.160><c> good</c>

00:05:46.300 --> 00:05:46.310 align:start position:0%
now that can either be a really good
 

00:05:46.310 --> 00:05:47.350 align:start position:0%
now that can either be a really good
thing<00:05:46.340><c> or</c><00:05:46.610><c> a</c><00:05:46.640><c> bad</c><00:05:46.670><c> thing</c><00:05:46.820><c> and</c><00:05:47.150><c> I'll</c><00:05:47.210><c> show</c><00:05:47.300><c> an</c>

00:05:47.350 --> 00:05:47.360 align:start position:0%
thing or a bad thing and I'll show an
 

00:05:47.360 --> 00:05:52.510 align:start position:0%
thing or a bad thing and I'll show an
example<00:05:47.660><c> of</c><00:05:48.160><c> how</c><00:05:49.160><c> that</c><00:05:49.370><c> happens</c><00:05:50.380><c> as</c><00:05:51.380><c> we</c><00:05:52.220><c> work</c>

00:05:52.510 --> 00:05:52.520 align:start position:0%
example of how that happens as we work
 

00:05:52.520 --> 00:05:55.030 align:start position:0%
example of how that happens as we work
our<00:05:52.669><c> way</c><00:05:52.730><c> again</c><00:05:52.970><c> to</c><00:05:53.390><c> memory</c><00:05:54.169><c> you</c><00:05:54.590><c> have</c><00:05:54.620><c> the</c><00:05:54.800><c> l1</c>

00:05:55.030 --> 00:05:55.040 align:start position:0%
our way again to memory you have the l1
 

00:05:55.040 --> 00:05:56.860 align:start position:0%
our way again to memory you have the l1
cache<00:05:55.250><c> is</c><00:05:55.460><c> the</c><00:05:55.520><c> same</c><00:05:55.730><c> size</c><00:05:55.970><c> different</c>

00:05:56.860 --> 00:05:56.870 align:start position:0%
cache is the same size different
 

00:05:56.870 --> 00:05:59.409 align:start position:0%
cache is the same size different
associativity<00:05:57.320><c> and</c><00:05:57.680><c> right</c><00:05:57.830><c> policy</c><00:05:58.310><c> the</c><00:05:59.090><c> l2</c>

00:05:59.409 --> 00:05:59.419 align:start position:0%
associativity and right policy the l2
 

00:05:59.419 --> 00:06:01.780 align:start position:0%
associativity and right policy the l2
cache<00:05:59.500><c> the</c><00:06:00.500><c> l1</c><00:06:00.740><c> instruction</c><00:06:01.190><c> cache</c><00:06:01.370><c> is</c><00:06:01.550><c> also</c>

00:06:01.780 --> 00:06:01.790 align:start position:0%
cache the l1 instruction cache is also
 

00:06:01.790 --> 00:06:04.600 align:start position:0%
cache the l1 instruction cache is also
doubled<00:06:02.120><c> up</c><00:06:02.210><c> in</c><00:06:02.360><c> size</c><00:06:03.130><c> there's</c><00:06:04.130><c> the</c><00:06:04.340><c> l2</c><00:06:04.580><c> cache</c>

00:06:04.600 --> 00:06:04.610 align:start position:0%
doubled up in size there's the l2 cache
 

00:06:04.610 --> 00:06:07.180 align:start position:0%
doubled up in size there's the l2 cache
the<00:06:05.600><c> l2</c><00:06:05.840><c> cache</c><00:06:05.870><c> is</c><00:06:06.290><c> also</c><00:06:06.560><c> doubled</c><00:06:06.950><c> in</c><00:06:07.040><c> size</c>

00:06:07.180 --> 00:06:07.190 align:start position:0%
the l2 cache is also doubled in size
 

00:06:07.190 --> 00:06:10.900 align:start position:0%
the l2 cache is also doubled in size
compared<00:06:07.669><c> to</c><00:06:07.730><c> 7450</c><00:06:09.430><c> you'll</c><00:06:10.430><c> notice</c><00:06:10.640><c> there's</c>

00:06:10.900 --> 00:06:10.910 align:start position:0%
compared to 7450 you'll notice there's
 

00:06:10.910 --> 00:06:13.870 align:start position:0%
compared to 7450 you'll notice there's
no<00:06:11.060><c> l3</c><00:06:11.510><c> cache</c><00:06:11.540><c> on</c><00:06:11.990><c> a</c><00:06:12.020><c> g5</c><00:06:12.380><c> system</c><00:06:12.800><c> whereas</c><00:06:13.730><c> you</c>

00:06:13.870 --> 00:06:13.880 align:start position:0%
no l3 cache on a g5 system whereas you
 

00:06:13.880 --> 00:06:16.570 align:start position:0%
no l3 cache on a g5 system whereas you
had<00:06:14.030><c> up</c><00:06:14.270><c> to</c><00:06:14.450><c> two</c><00:06:14.600><c> megabytes</c><00:06:14.900><c> of</c><00:06:15.350><c> l3</c><00:06:15.860><c> on</c><00:06:16.310><c> a</c><00:06:16.340><c> chief</c>

00:06:16.570 --> 00:06:16.580 align:start position:0%
had up to two megabytes of l3 on a chief
 

00:06:16.580 --> 00:06:18.790 align:start position:0%
had up to two megabytes of l3 on a chief
or<00:06:16.760><c> system</c><00:06:17.150><c> now</c><00:06:17.990><c> we've</c><00:06:18.200><c> made</c><00:06:18.380><c> up</c><00:06:18.500><c> for</c><00:06:18.650><c> that</c><00:06:18.770><c> by</c>

00:06:18.790 --> 00:06:18.800 align:start position:0%
or system now we've made up for that by
 

00:06:18.800 --> 00:06:21.300 align:start position:0%
or system now we've made up for that by
increasing<00:06:19.490><c> the</c><00:06:19.790><c> processor</c><00:06:20.330><c> bandwidth</c>

00:06:21.300 --> 00:06:21.310 align:start position:0%
increasing the processor bandwidth
 

00:06:21.310 --> 00:06:25.060 align:start position:0%
increasing the processor bandwidth
substantially<00:06:22.310><c> 1</c><00:06:22.910><c> by</c><00:06:23.200><c> doubling</c><00:06:24.200><c> the</c><00:06:24.470><c> width</c><00:06:24.890><c> of</c>

00:06:25.060 --> 00:06:25.070 align:start position:0%
substantially 1 by doubling the width of
 

00:06:25.070 --> 00:06:27.640 align:start position:0%
substantially 1 by doubling the width of
the<00:06:25.430><c> DDR</c><00:06:25.760><c> interface</c><00:06:26.150><c> and</c><00:06:26.530><c> increasing</c><00:06:27.530><c> its</c>

00:06:27.640 --> 00:06:27.650 align:start position:0%
the DDR interface and increasing its
 

00:06:27.650 --> 00:06:29.350 align:start position:0%
the DDR interface and increasing its
frequency<00:06:27.980><c> but</c><00:06:28.310><c> also</c><00:06:28.430><c> the</c><00:06:28.669><c> front</c><00:06:28.940><c> side</c><00:06:29.120><c> bus</c>

00:06:29.350 --> 00:06:29.360 align:start position:0%
frequency but also the front side bus
 

00:06:29.360 --> 00:06:32.110 align:start position:0%
frequency but also the front side bus
and<00:06:30.130><c> this</c><00:06:31.130><c> slide</c><00:06:31.370><c> is</c><00:06:31.520><c> actually</c><00:06:31.790><c> a</c><00:06:31.820><c> little</c><00:06:31.910><c> out</c>

00:06:32.110 --> 00:06:32.120 align:start position:0%
and this slide is actually a little out
 

00:06:32.120 --> 00:06:34.390 align:start position:0%
and this slide is actually a little out
of<00:06:32.150><c> date</c><00:06:32.560><c> at</c><00:06:33.560><c> two</c><00:06:33.800><c> and</c><00:06:33.890><c> a</c><00:06:33.950><c> half</c><00:06:34.070><c> gigahertz</c>

00:06:34.390 --> 00:06:34.400 align:start position:0%
of date at two and a half gigahertz
 

00:06:34.400 --> 00:06:36.040 align:start position:0%
of date at two and a half gigahertz
we've<00:06:34.910><c> increased</c><00:06:35.240><c> the</c><00:06:35.480><c> front</c><00:06:35.750><c> side</c><00:06:35.900><c> bus</c>

00:06:36.040 --> 00:06:36.050 align:start position:0%
we've increased the front side bus
 

00:06:36.050 --> 00:06:38.409 align:start position:0%
we've increased the front side bus
frequency<00:06:36.290><c> to</c><00:06:36.710><c> 1.2</c><00:06:37.310><c> 5</c><00:06:37.550><c> gigahertz</c><00:06:38.000><c> so</c><00:06:38.240><c> you</c><00:06:38.330><c> can</c>

00:06:38.409 --> 00:06:38.419 align:start position:0%
frequency to 1.2 5 gigahertz so you can
 

00:06:38.419 --> 00:06:40.450 align:start position:0%
frequency to 1.2 5 gigahertz so you can
actually<00:06:38.570><c> in</c><00:06:38.840><c> theory</c><00:06:39.140><c> get</c><00:06:39.320><c> 5</c><00:06:39.650><c> gigabytes</c><00:06:40.070><c> per</c>

00:06:40.450 --> 00:06:40.460 align:start position:0%
actually in theory get 5 gigabytes per
 

00:06:40.460 --> 00:06:44.060 align:start position:0%
actually in theory get 5 gigabytes per
second<00:06:40.820><c> in</c><00:06:40.940><c> each</c><00:06:41.120><c> direction</c>

00:06:44.060 --> 00:06:44.070 align:start position:0%
 
 

00:06:44.070 --> 00:06:46.860 align:start position:0%
 
so<00:06:45.070><c> I</c><00:06:45.100><c> want</c><00:06:45.250><c> to</c><00:06:45.370><c> talk</c><00:06:45.550><c> about</c><00:06:45.790><c> some</c><00:06:46.480><c> programmer</c>

00:06:46.860 --> 00:06:46.870 align:start position:0%
so I want to talk about some programmer
 

00:06:46.870 --> 00:06:48.870 align:start position:0%
so I want to talk about some programmer
problems<00:06:47.830><c> I've</c><00:06:48.010><c> seen</c><00:06:48.220><c> over</c><00:06:48.430><c> the</c><00:06:48.460><c> last</c><00:06:48.550><c> year</c>

00:06:48.870 --> 00:06:48.880 align:start position:0%
problems I've seen over the last year
 

00:06:48.880 --> 00:06:51.510 align:start position:0%
problems I've seen over the last year
since<00:06:48.910><c> we've</c><00:06:49.270><c> intro</c><00:06:49.600><c> the</c><00:06:50.020><c> machine</c><00:06:50.410><c> and</c><00:06:50.620><c> the</c>

00:06:51.510 --> 00:06:51.520 align:start position:0%
since we've intro the machine and the
 

00:06:51.520 --> 00:06:53.520 align:start position:0%
since we've intro the machine and the
one<00:06:51.640><c> that</c><00:06:51.760><c> comes</c><00:06:51.910><c> up</c><00:06:52.090><c> most</c><00:06:52.510><c> frequently</c><00:06:52.960><c> turns</c>

00:06:53.520 --> 00:06:53.530 align:start position:0%
one that comes up most frequently turns
 

00:06:53.530 --> 00:06:55.070 align:start position:0%
one that comes up most frequently turns
out<00:06:53.710><c> to</c><00:06:53.800><c> be</c><00:06:53.830><c> a</c><00:06:53.920><c> rather</c><00:06:54.190><c> simple</c><00:06:54.550><c> thing</c><00:06:54.790><c> it's</c>

00:06:55.070 --> 00:06:55.080 align:start position:0%
out to be a rather simple thing it's
 

00:06:55.080 --> 00:06:56.970 align:start position:0%
out to be a rather simple thing it's
conversions<00:06:56.080><c> from</c><00:06:56.230><c> floating</c><00:06:56.470><c> points</c><00:06:56.860><c> to</c>

00:06:56.970 --> 00:06:56.980 align:start position:0%
conversions from floating points to
 

00:06:56.980 --> 00:06:59.520 align:start position:0%
conversions from floating points to
integers<00:06:57.370><c> and</c><00:06:57.660><c> the</c><00:06:58.660><c> reason</c><00:06:58.930><c> this</c><00:06:59.020><c> shows</c><00:06:59.230><c> up</c><00:06:59.410><c> a</c>

00:06:59.520 --> 00:06:59.530 align:start position:0%
integers and the reason this shows up a
 

00:06:59.530 --> 00:07:01.200 align:start position:0%
integers and the reason this shows up a
lot<00:06:59.560><c> is</c><00:06:59.800><c> because</c><00:06:59.950><c> in</c><00:07:00.370><c> when</c><00:07:00.730><c> you</c><00:07:00.790><c> write</c><00:07:00.940><c> this</c><00:07:01.060><c> in</c>

00:07:01.200 --> 00:07:01.210 align:start position:0%
lot is because in when you write this in
 

00:07:01.210 --> 00:07:03.660 align:start position:0%
lot is because in when you write this in
see<00:07:01.450><c> it</c><00:07:01.720><c> looks</c><00:07:02.350><c> really</c><00:07:02.500><c> cheap</c><00:07:02.830><c> right</c><00:07:03.400><c> you</c><00:07:03.550><c> just</c>

00:07:03.660 --> 00:07:03.670 align:start position:0%
see it looks really cheap right you just
 

00:07:03.670 --> 00:07:05.970 align:start position:0%
see it looks really cheap right you just
cast<00:07:03.970><c> your</c><00:07:04.210><c> variable</c><00:07:04.780><c> into</c><00:07:05.080><c> ensor</c><00:07:05.440><c> cast</c><00:07:05.770><c> it</c><00:07:05.950><c> to</c>

00:07:05.970 --> 00:07:05.980 align:start position:0%
cast your variable into ensor cast it to
 

00:07:05.980 --> 00:07:08.730 align:start position:0%
cast your variable into ensor cast it to
float<00:07:06.340><c> but</c><00:07:07.300><c> it</c><00:07:07.420><c> turns</c><00:07:07.600><c> out</c><00:07:07.750><c> this</c><00:07:07.930><c> is</c><00:07:08.110><c> not</c><00:07:08.350><c> cheap</c>

00:07:08.730 --> 00:07:08.740 align:start position:0%
float but it turns out this is not cheap
 

00:07:08.740 --> 00:07:12.270 align:start position:0%
float but it turns out this is not cheap
at<00:07:08.890><c> all</c><00:07:09.540><c> particularly</c><00:07:10.540><c> on</c><00:07:10.600><c> a</c><00:07:10.690><c> g5</c><00:07:11.140><c> because</c><00:07:11.800><c> it</c>

00:07:12.270 --> 00:07:12.280 align:start position:0%
at all particularly on a g5 because it
 

00:07:12.280 --> 00:07:14.280 align:start position:0%
at all particularly on a g5 because it
has<00:07:12.430><c> so</c><00:07:12.700><c> much</c><00:07:12.850><c> going</c><00:07:12.910><c> on</c><00:07:13.240><c> in</c><00:07:13.390><c> parallel</c><00:07:13.870><c> when</c><00:07:14.170><c> it</c>

00:07:14.280 --> 00:07:14.290 align:start position:0%
has so much going on in parallel when it
 

00:07:14.290 --> 00:07:16.590 align:start position:0%
has so much going on in parallel when it
hits<00:07:14.440><c> this</c><00:07:14.590><c> condition</c><00:07:15.160><c> because</c><00:07:16.060><c> the</c><00:07:16.180><c> PowerPC</c>

00:07:16.590 --> 00:07:16.600 align:start position:0%
hits this condition because the PowerPC
 

00:07:16.600 --> 00:07:17.970 align:start position:0%
hits this condition because the PowerPC
architecture<00:07:16.630><c> doesn't</c><00:07:17.380><c> have</c><00:07:17.500><c> integer</c>

00:07:17.970 --> 00:07:17.980 align:start position:0%
architecture doesn't have integer
 

00:07:17.980 --> 00:07:20.700 align:start position:0%
architecture doesn't have integer
register<00:07:18.430><c> transfers</c><00:07:19.390><c> you</c><00:07:20.050><c> actually</c><00:07:20.290><c> go</c><00:07:20.650><c> to</c>

00:07:20.700 --> 00:07:20.710 align:start position:0%
register transfers you actually go to
 

00:07:20.710 --> 00:07:22.320 align:start position:0%
register transfers you actually go to
the<00:07:20.860><c> l1</c><00:07:21.130><c> cache</c><00:07:21.370><c> and</c><00:07:21.610><c> come</c><00:07:21.790><c> back</c><00:07:21.940><c> so</c><00:07:22.150><c> you</c><00:07:22.210><c> have</c><00:07:22.300><c> a</c>

00:07:22.320 --> 00:07:22.330 align:start position:0%
the l1 cache and come back so you have a
 

00:07:22.330 --> 00:07:24.590 align:start position:0%
the l1 cache and come back so you have a
load<00:07:22.570><c> in</c><00:07:22.720><c> the</c><00:07:22.780><c> store</c><00:07:23.020><c> operation</c><00:07:23.620><c> going</c><00:07:23.770><c> on</c>

00:07:24.590 --> 00:07:24.600 align:start position:0%
load in the store operation going on
 

00:07:24.600 --> 00:07:26.460 align:start position:0%
load in the store operation going on
there<00:07:25.600><c> are</c><00:07:25.690><c> a</c><00:07:25.720><c> lot</c><00:07:25.840><c> of</c><00:07:25.870><c> things</c><00:07:26.110><c> you</c><00:07:26.200><c> can</c><00:07:26.350><c> do</c><00:07:26.440><c> to</c>

00:07:26.460 --> 00:07:26.470 align:start position:0%
there are a lot of things you can do to
 

00:07:26.470 --> 00:07:28.020 align:start position:0%
there are a lot of things you can do to
avoid<00:07:26.650><c> the</c><00:07:26.890><c> problem</c><00:07:27.370><c> in</c><00:07:27.490><c> the</c><00:07:27.580><c> biggest</c><00:07:27.850><c> one</c>

00:07:28.020 --> 00:07:28.030 align:start position:0%
avoid the problem in the biggest one
 

00:07:28.030 --> 00:07:29.880 align:start position:0%
avoid the problem in the biggest one
that<00:07:28.060><c> I</c><00:07:28.210><c> found</c><00:07:28.540><c> it</c><00:07:29.080><c> actually</c><00:07:29.410><c> turns</c><00:07:29.590><c> out</c><00:07:29.740><c> to</c><00:07:29.800><c> be</c>

00:07:29.880 --> 00:07:29.890 align:start position:0%
that I found it actually turns out to be
 

00:07:29.890 --> 00:07:32.850 align:start position:0%
that I found it actually turns out to be
one<00:07:30.370><c> of</c><00:07:30.400><c> the</c><00:07:30.520><c> easier</c><00:07:30.550><c> solutions</c><00:07:31.440><c> is</c><00:07:32.440><c> simply</c>

00:07:32.850 --> 00:07:32.860 align:start position:0%
one of the easier solutions is simply
 

00:07:32.860 --> 00:07:37.320 align:start position:0%
one of the easier solutions is simply
don't<00:07:33.340><c> do</c><00:07:33.490><c> that</c><00:07:35.070><c> it</c><00:07:36.070><c> turns</c><00:07:36.250><c> up</c><00:07:36.430><c> again</c><00:07:36.880><c> because</c>

00:07:37.320 --> 00:07:37.330 align:start position:0%
don't do that it turns up again because
 

00:07:37.330 --> 00:07:39.360 align:start position:0%
don't do that it turns up again because
it<00:07:37.450><c> looks</c><00:07:37.690><c> so</c><00:07:37.810><c> cheap</c><00:07:38.170><c> and</c><00:07:38.290><c> easy</c><00:07:38.470><c> that</c><00:07:38.920><c> a</c><00:07:38.950><c> lot</c><00:07:39.280><c> of</c>

00:07:39.360 --> 00:07:39.370 align:start position:0%
it looks so cheap and easy that a lot of
 

00:07:39.370 --> 00:07:41.370 align:start position:0%
it looks so cheap and easy that a lot of
people<00:07:39.670><c> just</c><00:07:39.880><c> cast</c><00:07:40.480><c> from</c><00:07:40.900><c> one</c><00:07:41.140><c> to</c><00:07:41.260><c> the</c><00:07:41.290><c> other</c>

00:07:41.370 --> 00:07:41.380 align:start position:0%
people just cast from one to the other
 

00:07:41.380 --> 00:07:43.500 align:start position:0%
people just cast from one to the other
without<00:07:41.800><c> thinking</c><00:07:42.250><c> about</c><00:07:42.370><c> it</c><00:07:42.520><c> and</c><00:07:42.730><c> when</c><00:07:43.480><c> you</c>

00:07:43.500 --> 00:07:43.510 align:start position:0%
without thinking about it and when you
 

00:07:43.510 --> 00:07:45.360 align:start position:0%
without thinking about it and when you
examine<00:07:43.960><c> that</c><00:07:44.050><c> code</c><00:07:44.260><c> you</c><00:07:44.410><c> realize</c><00:07:44.740><c> you</c><00:07:45.190><c> could</c>

00:07:45.360 --> 00:07:45.370 align:start position:0%
examine that code you realize you could
 

00:07:45.370 --> 00:07:46.770 align:start position:0%
examine that code you realize you could
have<00:07:45.460><c> stayed</c><00:07:45.670><c> in</c><00:07:45.850><c> one</c><00:07:46.000><c> domain</c><00:07:46.180><c> or</c><00:07:46.510><c> the</c><00:07:46.630><c> other</c>

00:07:46.770 --> 00:07:46.780 align:start position:0%
have stayed in one domain or the other
 

00:07:46.780 --> 00:07:49.950 align:start position:0%
have stayed in one domain or the other
without<00:07:47.880><c> hampering</c><00:07:48.880><c> or</c><00:07:49.270><c> affecting</c><00:07:49.810><c> it</c><00:07:49.900><c> the</c>

00:07:49.950 --> 00:07:49.960 align:start position:0%
without hampering or affecting it the
 

00:07:49.960 --> 00:07:53.190 align:start position:0%
without hampering or affecting it the
algorithm<00:07:50.740><c> in</c><00:07:50.830><c> any</c><00:07:50.950><c> way</c><00:07:51.630><c> the</c><00:07:52.630><c> other</c><00:07:52.750><c> cool</c><00:07:52.960><c> way</c>

00:07:53.190 --> 00:07:53.200 align:start position:0%
algorithm in any way the other cool way
 

00:07:53.200 --> 00:07:55.110 align:start position:0%
algorithm in any way the other cool way
you<00:07:53.410><c> can</c><00:07:53.560><c> get</c><00:07:53.680><c> around</c><00:07:53.830><c> the</c><00:07:53.950><c> problem</c><00:07:54.070><c> and</c><00:07:54.400><c> of</c>

00:07:55.110 --> 00:07:55.120 align:start position:0%
you can get around the problem and of
 

00:07:55.120 --> 00:07:58.140 align:start position:0%
you can get around the problem and of
course<00:07:55.180><c> if</c><00:07:55.540><c> you</c><00:07:55.960><c> use</c><00:07:56.050><c> this</c><00:07:56.290><c> altivec</c><00:07:57.150><c> you're</c>

00:07:58.140 --> 00:07:58.150 align:start position:0%
course if you use this altivec you're
 

00:07:58.150 --> 00:08:00.360 align:start position:0%
course if you use this altivec you're
going<00:07:58.270><c> to</c><00:07:58.330><c> get</c><00:07:58.450><c> a</c><00:07:58.690><c> much</c><00:07:58.990><c> greater</c><00:07:59.770><c> speed</c><00:08:00.220><c> up</c>

00:08:00.360 --> 00:08:00.370 align:start position:0%
going to get a much greater speed up
 

00:08:00.370 --> 00:08:02.010 align:start position:0%
going to get a much greater speed up
because<00:08:00.850><c> of</c><00:08:00.880><c> all</c><00:08:01.120><c> the</c><00:08:01.240><c> parallel</c><00:08:01.570><c> ISM</c><00:08:01.840><c> in</c><00:08:01.930><c> the</c>

00:08:02.010 --> 00:08:02.020 align:start position:0%
because of all the parallel ISM in the
 

00:08:02.020 --> 00:08:04.200 align:start position:0%
because of all the parallel ISM in the
ultimate<00:08:02.380><c> unit</c><00:08:02.710><c> but</c><00:08:03.460><c> the</c><00:08:03.640><c> ultimate</c><00:08:03.730><c> unit</c>

00:08:04.200 --> 00:08:04.210 align:start position:0%
ultimate unit but the ultimate unit
 

00:08:04.210 --> 00:08:05.960 align:start position:0%
ultimate unit but the ultimate unit
handles<00:08:04.360><c> floating-point</c><00:08:05.080><c> and</c><00:08:05.440><c> integer</c>

00:08:05.960 --> 00:08:05.970 align:start position:0%
handles floating-point and integer
 

00:08:05.970 --> 00:08:08.130 align:start position:0%
handles floating-point and integer
identically<00:08:06.970><c> in</c><00:08:07.090><c> the</c><00:08:07.180><c> same</c><00:08:07.330><c> register</c><00:08:07.600><c> set</c><00:08:07.930><c> so</c>

00:08:08.130 --> 00:08:08.140 align:start position:0%
identically in the same register set so
 

00:08:08.140 --> 00:08:09.540 align:start position:0%
identically in the same register set so
there's<00:08:08.290><c> no</c><00:08:08.410><c> memory</c><00:08:08.740><c> operations</c><00:08:09.280><c> when</c><00:08:09.460><c> you</c>

00:08:09.540 --> 00:08:09.550 align:start position:0%
there's no memory operations when you
 

00:08:09.550 --> 00:08:13.080 align:start position:0%
there's no memory operations when you
transfer<00:08:10.030><c> between</c><00:08:10.270><c> types</c><00:08:11.730><c> another</c><00:08:12.730><c> potential</c>

00:08:13.080 --> 00:08:13.090 align:start position:0%
transfer between types another potential
 

00:08:13.090 --> 00:08:14.970 align:start position:0%
transfer between types another potential
optimization<00:08:13.780><c> is</c><00:08:13.960><c> to</c><00:08:14.140><c> use</c><00:08:14.230><c> the</c><00:08:14.380><c> GCC</c><00:08:14.800><c> compiler</c>

00:08:14.970 --> 00:08:14.980 align:start position:0%
optimization is to use the GCC compiler
 

00:08:14.980 --> 00:08:18.420 align:start position:0%
optimization is to use the GCC compiler
flags<00:08:15.430><c> dash</c><00:08:15.910><c> fast</c><00:08:16.560><c> this</c><00:08:17.560><c> tries</c><00:08:17.830><c> to</c><00:08:17.980><c> schedule</c>

00:08:18.420 --> 00:08:18.430 align:start position:0%
flags dash fast this tries to schedule
 

00:08:18.430 --> 00:08:20.310 align:start position:0%
flags dash fast this tries to schedule
your<00:08:18.610><c> loads</c><00:08:18.850><c> and</c><00:08:19.000><c> stores</c><00:08:19.210><c> and</c><00:08:19.600><c> inserts</c><00:08:19.900><c> no</c><00:08:20.110><c> ops</c>

00:08:20.310 --> 00:08:20.320 align:start position:0%
your loads and stores and inserts no ops
 

00:08:20.320 --> 00:08:22.350 align:start position:0%
your loads and stores and inserts no ops
leavin<00:08:20.680><c> to</c><00:08:21.010><c> separate</c><00:08:21.610><c> them</c><00:08:21.760><c> out</c><00:08:21.850><c> to</c><00:08:22.180><c> keep</c>

00:08:22.350 --> 00:08:22.360 align:start position:0%
leavin to separate them out to keep
 

00:08:22.360 --> 00:08:25.530 align:start position:0%
leavin to separate them out to keep
things<00:08:22.570><c> flowing</c><00:08:22.720><c> through</c><00:08:23.020><c> the</c><00:08:23.110><c> g5</c><00:08:24.120><c> IBM's</c><00:08:25.120><c> XL</c>

00:08:25.530 --> 00:08:25.540 align:start position:0%
things flowing through the g5 IBM's XL
 

00:08:25.540 --> 00:08:27.420 align:start position:0%
things flowing through the g5 IBM's XL
compilers<00:08:26.140><c> also</c><00:08:26.530><c> do</c><00:08:27.010><c> this</c><00:08:27.190><c> kind</c><00:08:27.400><c> of</c>

00:08:27.420 --> 00:08:27.430 align:start position:0%
compilers also do this kind of
 

00:08:27.430 --> 00:08:29.250 align:start position:0%
compilers also do this kind of
optimization<00:08:28.120><c> if</c><00:08:28.240><c> you</c><00:08:28.330><c> specify</c><00:08:28.810><c> the</c><00:08:28.870><c> g5</c>

00:08:29.250 --> 00:08:29.260 align:start position:0%
optimization if you specify the g5
 

00:08:29.260 --> 00:08:32.460 align:start position:0%
optimization if you specify the g5
architecture<00:08:30.930><c> so</c><00:08:31.930><c> want</c><00:08:32.050><c> to</c><00:08:32.080><c> show</c><00:08:32.200><c> you</c><00:08:32.260><c> a</c><00:08:32.320><c> quick</c>

00:08:32.460 --> 00:08:32.470 align:start position:0%
architecture so want to show you a quick
 

00:08:32.470 --> 00:08:37.290 align:start position:0%
architecture so want to show you a quick
and<00:08:32.770><c> really</c><00:08:33.670><c> simple</c><00:08:33.970><c> example</c><00:08:34.420><c> of</c><00:08:34.660><c> bad</c><00:08:35.200><c> code</c><00:08:36.300><c> so</c>

00:08:37.290 --> 00:08:37.300 align:start position:0%
and really simple example of bad code so
 

00:08:37.300 --> 00:08:40.290 align:start position:0%
and really simple example of bad code so
this<00:08:37.450><c> is</c><00:08:37.479><c> a</c><00:08:38.160><c> real</c><00:08:39.160><c> lame</c><00:08:39.400><c> loop</c><00:08:39.670><c> all</c><00:08:39.880><c> it</c><00:08:40.150><c> does</c><00:08:40.240><c> is</c>

00:08:40.290 --> 00:08:40.300 align:start position:0%
this is a real lame loop all it does is
 

00:08:40.300 --> 00:08:43.230 align:start position:0%
this is a real lame loop all it does is
inflict<00:08:40.570><c> version</c><00:08:41.410><c> because</c><00:08:41.880><c> the</c><00:08:42.880><c> loop</c><00:08:43.030><c> counter</c>

00:08:43.230 --> 00:08:43.240 align:start position:0%
inflict version because the loop counter
 

00:08:43.240 --> 00:08:45.420 align:start position:0%
inflict version because the loop counter
in<00:08:43.510><c> this</c><00:08:43.660><c> case</c><00:08:43.840><c> I</c><00:08:44.020><c> has</c><00:08:44.500><c> been</c><00:08:44.680><c> declared</c><00:08:44.950><c> an</c><00:08:45.160><c> int</c>

00:08:45.420 --> 00:08:45.430 align:start position:0%
in this case I has been declared an int
 

00:08:45.430 --> 00:08:47.250 align:start position:0%
in this case I has been declared an int
but<00:08:46.390><c> we're</c><00:08:46.600><c> adding</c><00:08:46.900><c> it</c><00:08:46.990><c> into</c><00:08:47.110><c> a</c>

00:08:47.250 --> 00:08:47.260 align:start position:0%
but we're adding it into a
 

00:08:47.260 --> 00:08:50.610 align:start position:0%
but we're adding it into a
floating-point<00:08:47.620><c> some</c><00:08:48.450><c> so</c><00:08:49.450><c> that</c><00:08:50.140><c> looks</c><00:08:50.410><c> really</c>

00:08:50.610 --> 00:08:50.620 align:start position:0%
floating-point some so that looks really
 

00:08:50.620 --> 00:08:53.070 align:start position:0%
floating-point some so that looks really
cheap<00:08:50.920><c> but</c><00:08:51.670><c> it's</c><00:08:51.820><c> not</c><00:08:52.000><c> every</c><00:08:52.570><c> time</c><00:08:52.750><c> you</c><00:08:52.930><c> do</c>

00:08:53.070 --> 00:08:53.080 align:start position:0%
cheap but it's not every time you do
 

00:08:53.080 --> 00:08:55.050 align:start position:0%
cheap but it's not every time you do
that<00:08:53.110><c> ad</c><00:08:53.500><c> you're</c><00:08:53.770><c> going</c><00:08:53.890><c> to</c><00:08:53.950><c> have</c><00:08:54.040><c> to</c><00:08:54.100><c> convert</c>

00:08:55.050 --> 00:08:55.060 align:start position:0%
that ad you're going to have to convert
 

00:08:55.060 --> 00:08:56.700 align:start position:0%
that ad you're going to have to convert
the<00:08:55.090><c> I</c><00:08:55.270><c> from</c><00:08:55.660><c> integer</c><00:08:55.900><c> two</c><00:08:56.200><c> floating</c><00:08:56.440><c> point</c>

00:08:56.700 --> 00:08:56.710 align:start position:0%
the I from integer two floating point
 

00:08:56.710 --> 00:08:59.160 align:start position:0%
the I from integer two floating point
main<00:08:56.920><c> to</c><00:08:57.160><c> store</c><00:08:57.460><c> it</c><00:08:57.550><c> into</c><00:08:57.670><c> the</c><00:08:57.820><c> some</c><00:08:58.060><c> so</c><00:08:59.050><c> how</c>

00:08:59.160 --> 00:08:59.170 align:start position:0%
main to store it into the some so how
 

00:08:59.170 --> 00:09:03.230 align:start position:0%
main to store it into the some so how
would<00:08:59.230><c> you</c><00:08:59.380><c> get</c><00:08:59.470><c> around</c><00:08:59.680><c> this</c><00:08:59.830><c> problem</c><00:08:59.890><c> Oh</c>

00:09:03.230 --> 00:09:03.240 align:start position:0%
 
 

00:09:03.240 --> 00:09:05.400 align:start position:0%
 
what<00:09:04.240><c> you</c><00:09:04.360><c> can</c><00:09:04.480><c> do</c><00:09:04.570><c> is</c><00:09:04.690><c> creep</c><00:09:04.990><c> what</c><00:09:05.170><c> I</c><00:09:05.200><c> call</c><00:09:05.380><c> a</c>

00:09:05.400 --> 00:09:05.410 align:start position:0%
what you can do is creep what I call a
 

00:09:05.410 --> 00:09:08.220 align:start position:0%
what you can do is creep what I call a
shadow<00:09:05.770><c> of</c><00:09:06.010><c> the</c><00:09:06.880><c> I</c><00:09:06.910><c> variable</c><00:09:07.600><c> in</c><00:09:07.750><c> this</c>

00:09:08.220 --> 00:09:08.230 align:start position:0%
shadow of the I variable in this
 

00:09:08.230 --> 00:09:10.500 align:start position:0%
shadow of the I variable in this
floating<00:09:08.470><c> point</c><00:09:08.770><c> unit</c><00:09:08.830><c> so</c><00:09:09.730><c> I've</c><00:09:10.090><c> just</c><00:09:10.300><c> named</c>

00:09:10.500 --> 00:09:10.510 align:start position:0%
floating point unit so I've just named
 

00:09:10.510 --> 00:09:12.540 align:start position:0%
floating point unit so I've just named
it<00:09:10.630><c> i</c><00:09:10.810><c> underscore</c><00:09:11.200><c> FP</c><00:09:11.740><c> to</c><00:09:11.980><c> denote</c><00:09:12.220><c> that</c><00:09:12.280><c> it's</c>

00:09:12.540 --> 00:09:12.550 align:start position:0%
it i underscore FP to denote that it's
 

00:09:12.550 --> 00:09:14.490 align:start position:0%
it i underscore FP to denote that it's
floating<00:09:12.910><c> point</c><00:09:13.120><c> value</c><00:09:13.420><c> and</c><00:09:13.660><c> when</c><00:09:14.470><c> i</c>

00:09:14.490 --> 00:09:14.500 align:start position:0%
floating point value and when i
 

00:09:14.500 --> 00:09:16.290 align:start position:0%
floating point value and when i
initialize<00:09:15.010><c> I</c><00:09:15.190><c> I</c><00:09:15.220><c> also</c><00:09:15.580><c> initialize</c><00:09:16.120><c> its</c>

00:09:16.290 --> 00:09:16.300 align:start position:0%
initialize I I also initialize its
 

00:09:16.300 --> 00:09:17.820 align:start position:0%
initialize I I also initialize its
shadow<00:09:16.540><c> and</c><00:09:16.810><c> when</c><00:09:17.170><c> I</c><00:09:17.200><c> increment</c><00:09:17.680><c> I</c>

00:09:17.820 --> 00:09:17.830 align:start position:0%
shadow and when I increment I
 

00:09:17.830 --> 00:09:20.370 align:start position:0%
shadow and when I increment I
incremented<00:09:18.670><c> shed</c><00:09:18.880><c> now</c><00:09:19.690><c> inside</c><00:09:20.080><c> the</c><00:09:20.140><c> loop</c>

00:09:20.370 --> 00:09:20.380 align:start position:0%
incremented shed now inside the loop
 

00:09:20.380 --> 00:09:22.290 align:start position:0%
incremented shed now inside the loop
we're<00:09:21.220><c> going</c><00:09:21.340><c> to</c><00:09:21.400><c> use</c><00:09:21.580><c> the</c><00:09:21.760><c> floating</c><00:09:22.090><c> point</c>

00:09:22.290 --> 00:09:22.300 align:start position:0%
we're going to use the floating point
 

00:09:22.300 --> 00:09:24.060 align:start position:0%
we're going to use the floating point
value<00:09:22.600><c> for</c><00:09:23.110><c> the</c><00:09:23.200><c> some</c><00:09:23.410><c> rather</c><00:09:23.740><c> than</c><00:09:23.950><c> the</c>

00:09:24.060 --> 00:09:24.070 align:start position:0%
value for the some rather than the
 

00:09:24.070 --> 00:09:27.170 align:start position:0%
value for the some rather than the
integer<00:09:24.370><c> value</c><00:09:24.720><c> so</c><00:09:25.720><c> on</c><00:09:25.840><c> a</c><00:09:25.870><c> g5</c><00:09:26.260><c> I</c><00:09:26.320><c> measured</c><00:09:26.770><c> this</c>

00:09:27.170 --> 00:09:27.180 align:start position:0%
integer value so on a g5 I measured this
 

00:09:27.180 --> 00:09:29.460 align:start position:0%
integer value so on a g5 I measured this
it<00:09:28.180><c> turns</c><00:09:28.360><c> out</c><00:09:28.540><c> this</c><00:09:28.720><c> code</c><00:09:28.930><c> is</c><00:09:29.080><c> three</c><00:09:29.290><c> times</c>

00:09:29.460 --> 00:09:29.470 align:start position:0%
it turns out this code is three times
 

00:09:29.470 --> 00:09:31.860 align:start position:0%
it turns out this code is three times
faster<00:09:29.950><c> than</c><00:09:30.030><c> the</c><00:09:31.030><c> previous</c><00:09:31.360><c> code</c><00:09:31.570><c> where</c>

00:09:31.860 --> 00:09:31.870 align:start position:0%
faster than the previous code where
 

00:09:31.870 --> 00:09:33.270 align:start position:0%
faster than the previous code where
you're<00:09:31.960><c> doing</c><00:09:32.140><c> the</c><00:09:32.230><c> conversions</c><00:09:32.680><c> because</c>

00:09:33.270 --> 00:09:33.280 align:start position:0%
you're doing the conversions because
 

00:09:33.280 --> 00:09:34.740 align:start position:0%
you're doing the conversions because
this<00:09:33.640><c> code</c><00:09:33.820><c> won't</c><00:09:34.060><c> have</c><00:09:34.180><c> to</c><00:09:34.300><c> do</c><00:09:34.390><c> all</c><00:09:34.420><c> the</c><00:09:34.600><c> load</c>

00:09:34.740 --> 00:09:34.750 align:start position:0%
this code won't have to do all the load
 

00:09:34.750 --> 00:09:39.000 align:start position:0%
this code won't have to do all the load
and<00:09:34.930><c> store</c><00:09:34.990><c> operations</c><00:09:36.510><c> and</c><00:09:37.830><c> the</c><00:09:38.830><c> next</c>

00:09:39.000 --> 00:09:39.010 align:start position:0%
and store operations and the next
 

00:09:39.010 --> 00:09:40.020 align:start position:0%
and store operations and the next
biggest<00:09:39.220><c> thing</c><00:09:39.460><c> I've</c><00:09:39.580><c> seen</c><00:09:39.730><c> over</c><00:09:39.850><c> the</c><00:09:39.970><c> last</c>

00:09:40.020 --> 00:09:40.030 align:start position:0%
biggest thing I've seen over the last
 

00:09:40.030 --> 00:09:42.810 align:start position:0%
biggest thing I've seen over the last
year<00:09:40.450><c> is</c><00:09:40.600><c> just</c><00:09:41.070><c> improvements</c><00:09:42.070><c> to</c><00:09:42.340><c> try</c><00:09:42.760><c> to</c>

00:09:42.810 --> 00:09:42.820 align:start position:0%
year is just improvements to try to
 

00:09:42.820 --> 00:09:45.840 align:start position:0%
year is just improvements to try to
schedule<00:09:43.090><c> your</c><00:09:43.480><c> code</c><00:09:43.780><c> and</c><00:09:44.430><c> like</c><00:09:45.430><c> I'd</c><00:09:45.550><c> say</c><00:09:45.700><c> the</c>

00:09:45.840 --> 00:09:45.850 align:start position:0%
schedule your code and like I'd say the
 

00:09:45.850 --> 00:09:48.840 align:start position:0%
schedule your code and like I'd say the
g5<00:09:46.450><c> has</c><00:09:46.750><c> a</c><00:09:47.050><c> lot</c><00:09:47.380><c> of</c><00:09:47.410><c> execution</c><00:09:48.370><c> units</c><00:09:48.610><c> that</c><00:09:48.760><c> you</c>

00:09:48.840 --> 00:09:48.850 align:start position:0%
g5 has a lot of execution units that you
 

00:09:48.850 --> 00:09:50.610 align:start position:0%
g5 has a lot of execution units that you
can<00:09:48.970><c> operate</c><00:09:49.210><c> in</c><00:09:49.360><c> parallel</c><00:09:49.840><c> but</c><00:09:50.200><c> if</c><00:09:50.320><c> you</c><00:09:50.410><c> write</c>

00:09:50.610 --> 00:09:50.620 align:start position:0%
can operate in parallel but if you write
 

00:09:50.620 --> 00:09:53.310 align:start position:0%
can operate in parallel but if you write
dependent<00:09:51.430><c> code</c><00:09:51.670><c> so</c><00:09:52.330><c> one</c><00:09:52.480><c> operation</c><00:09:52.960><c> depends</c>

00:09:53.310 --> 00:09:53.320 align:start position:0%
dependent code so one operation depends
 

00:09:53.320 --> 00:09:54.720 align:start position:0%
dependent code so one operation depends
on<00:09:53.380><c> the</c><00:09:53.470><c> next</c><00:09:53.710><c> depends</c><00:09:54.040><c> on</c><00:09:54.130><c> the</c><00:09:54.190><c> next</c><00:09:54.460><c> it's</c><00:09:54.580><c> old</c>

00:09:54.720 --> 00:09:54.730 align:start position:0%
on the next depends on the next it's old
 

00:09:54.730 --> 00:09:56.520 align:start position:0%
on the next depends on the next it's old
cereal<00:09:55.120><c> you're</c><00:09:56.050><c> not</c><00:09:56.200><c> going</c><00:09:56.320><c> to</c><00:09:56.380><c> take</c>

00:09:56.520 --> 00:09:56.530 align:start position:0%
cereal you're not going to take
 

00:09:56.530 --> 00:09:57.840 align:start position:0%
cereal you're not going to take
advantage<00:09:56.890><c> of</c><00:09:56.980><c> all</c><00:09:57.100><c> those</c><00:09:57.220><c> units</c><00:09:57.640><c> and</c>

00:09:57.840 --> 00:09:57.850 align:start position:0%
advantage of all those units and
 

00:09:57.850 --> 00:09:59.280 align:start position:0%
advantage of all those units and
furthermore<00:09:58.570><c> you're</c><00:09:58.780><c> not</c><00:09:58.900><c> going</c><00:09:59.050><c> to</c><00:09:59.110><c> take</c>

00:09:59.280 --> 00:09:59.290 align:start position:0%
furthermore you're not going to take
 

00:09:59.290 --> 00:10:00.750 align:start position:0%
furthermore you're not going to take
advantage<00:09:59.470><c> of</c><00:09:59.710><c> these</c><00:09:59.860><c> long</c><00:10:00.070><c> pipelines</c><00:10:00.580><c> you</c>

00:10:00.750 --> 00:10:00.760 align:start position:0%
advantage of these long pipelines you
 

00:10:00.760 --> 00:10:02.730 align:start position:0%
advantage of these long pipelines you
have<00:10:00.910><c> to</c><00:10:01.060><c> schedule</c><00:10:01.270><c> your</c><00:10:01.600><c> code</c><00:10:01.810><c> so</c><00:10:02.710><c> that</c>

00:10:02.730 --> 00:10:02.740 align:start position:0%
have to schedule your code so that
 

00:10:02.740 --> 00:10:04.080 align:start position:0%
have to schedule your code so that
you're<00:10:03.160><c> filling</c><00:10:03.520><c> in</c><00:10:03.610><c> all</c><00:10:03.700><c> these</c><00:10:03.850><c> pipelines</c>

00:10:04.080 --> 00:10:04.090 align:start position:0%
you're filling in all these pipelines
 

00:10:04.090 --> 00:10:06.690 align:start position:0%
you're filling in all these pipelines
slots<00:10:05.080><c> instead</c><00:10:05.530><c> of</c><00:10:05.620><c> causing</c><00:10:05.980><c> bubbles</c><00:10:06.490><c> and</c>

00:10:06.690 --> 00:10:06.700 align:start position:0%
slots instead of causing bubbles and
 

00:10:06.700 --> 00:10:10.980 align:start position:0%
slots instead of causing bubbles and
execution<00:10:08.490><c> so</c><00:10:09.490><c> compiler</c><00:10:10.150><c> help</c><00:10:10.360><c> is</c><00:10:10.510><c> here</c><00:10:10.720><c> you</c>

00:10:10.980 --> 00:10:10.990 align:start position:0%
execution so compiler help is here you
 

00:10:10.990 --> 00:10:14.490 align:start position:0%
execution so compiler help is here you
have<00:10:11.140><c> GCC</c><00:10:11.710><c> 33</c><00:10:12.250><c> which</c><00:10:12.700><c> has</c><00:10:12.970><c> g5</c><00:10:13.870><c> architecture</c>

00:10:14.490 --> 00:10:14.500 align:start position:0%
have GCC 33 which has g5 architecture
 

00:10:14.500 --> 00:10:17.310 align:start position:0%
have GCC 33 which has g5 architecture
tuning<00:10:15.190><c> so</c><00:10:15.820><c> that</c><00:10:15.970><c> tries</c><00:10:16.210><c> to</c><00:10:16.240><c> schedule</c><00:10:16.840><c> for</c><00:10:17.140><c> the</c>

00:10:17.310 --> 00:10:17.320 align:start position:0%
tuning so that tries to schedule for the
 

00:10:17.320 --> 00:10:21.170 align:start position:0%
tuning so that tries to schedule for the
available<00:10:17.710><c> units</c><00:10:17.980><c> and</c><00:10:18.160><c> slots</c><00:10:18.600><c> xlc</c><00:10:19.600><c> also</c><00:10:20.020><c> has</c>

00:10:21.170 --> 00:10:21.180 align:start position:0%
available units and slots xlc also has
 

00:10:21.180 --> 00:10:23.280 align:start position:0%
available units and slots xlc also has
the<00:10:22.180><c> same</c><00:10:22.360><c> kind</c><00:10:22.540><c> of</c><00:10:22.630><c> flag</c><00:10:22.870><c> where</c><00:10:23.200><c> you</c>

00:10:23.280 --> 00:10:23.290 align:start position:0%
the same kind of flag where you
 

00:10:23.290 --> 00:10:24.510 align:start position:0%
the same kind of flag where you
specified<00:10:23.740><c> that</c><00:10:23.890><c> you</c><00:10:24.010><c> have</c><00:10:24.130><c> a</c><00:10:24.160><c> g5</c>

00:10:24.510 --> 00:10:24.520 align:start position:0%
specified that you have a g5
 

00:10:24.520 --> 00:10:26.970 align:start position:0%
specified that you have a g5
architecture<00:10:25.180><c> and</c><00:10:25.360><c> the</c><00:10:25.620><c> other</c><00:10:26.620><c> thing</c><00:10:26.650><c> you</c><00:10:26.800><c> can</c>

00:10:26.970 --> 00:10:26.980 align:start position:0%
architecture and the other thing you can
 

00:10:26.980 --> 00:10:29.460 align:start position:0%
architecture and the other thing you can
do<00:10:27.100><c> is</c><00:10:27.280><c> use</c><00:10:27.460><c> shark</c><00:10:28.200><c> which</c><00:10:29.200><c> you've</c><00:10:29.350><c> probably</c>

00:10:29.460 --> 00:10:29.470 align:start position:0%
do is use shark which you've probably
 

00:10:29.470 --> 00:10:31.590 align:start position:0%
do is use shark which you've probably
heard<00:10:29.740><c> about</c><00:10:29.860><c> and</c><00:10:30.220><c> we'll</c><00:10:31.090><c> talk</c><00:10:31.210><c> about</c><00:10:31.360><c> in</c><00:10:31.570><c> more</c>

00:10:31.590 --> 00:10:31.600 align:start position:0%
heard about and we'll talk about in more
 

00:10:31.600 --> 00:10:33.660 align:start position:0%
heard about and we'll talk about in more
detail<00:10:31.780><c> tomorrow</c><00:10:32.440><c> at</c><00:10:32.830><c> three-thirty</c><00:10:33.010><c> we</c><00:10:33.550><c> have</c>

00:10:33.660 --> 00:10:33.670 align:start position:0%
detail tomorrow at three-thirty we have
 

00:10:33.670 --> 00:10:35.340 align:start position:0%
detail tomorrow at three-thirty we have
a<00:10:33.700><c> full</c><00:10:33.880><c> session</c><00:10:34.090><c> on</c><00:10:34.420><c> how</c><00:10:34.450><c> to</c><00:10:34.660><c> use</c><00:10:34.750><c> shark</c><00:10:35.140><c> and</c>

00:10:35.340 --> 00:10:35.350 align:start position:0%
a full session on how to use shark and
 

00:10:35.350 --> 00:10:40.230 align:start position:0%
a full session on how to use shark and
what<00:10:35.500><c> it</c><00:10:35.620><c> can</c><00:10:35.710><c> do</c><00:10:35.860><c> for</c><00:10:35.890><c> you</c><00:10:38.880><c> now</c><00:10:39.880><c> again</c><00:10:40.030><c> I</c>

00:10:40.230 --> 00:10:40.240 align:start position:0%
what it can do for you now again I
 

00:10:40.240 --> 00:10:41.520 align:start position:0%
what it can do for you now again I
mentioned<00:10:40.300><c> that</c><00:10:40.750><c> we've</c><00:10:41.050><c> increased</c><00:10:41.320><c> the</c>

00:10:41.520 --> 00:10:41.530 align:start position:0%
mentioned that we've increased the
 

00:10:41.530 --> 00:10:44.460 align:start position:0%
mentioned that we've increased the
pipeline<00:10:41.980><c> stages</c><00:10:42.280><c> compared</c><00:10:42.700><c> to</c><00:10:42.820><c> a</c><00:10:42.850><c> g4</c><00:10:43.300><c> on</c><00:10:43.510><c> the</c>

00:10:44.460 --> 00:10:44.470 align:start position:0%
pipeline stages compared to a g4 on the
 

00:10:44.470 --> 00:10:47.550 align:start position:0%
pipeline stages compared to a g4 on the
g5<00:10:44.800><c> so</c><00:10:45.670><c> what</c><00:10:46.600><c> does</c><00:10:46.720><c> that</c><00:10:46.750><c> mean</c><00:10:47.050><c> well</c><00:10:47.380><c> it</c><00:10:47.530><c> means</c>

00:10:47.550 --> 00:10:47.560 align:start position:0%
g5 so what does that mean well it means
 

00:10:47.560 --> 00:10:50.160 align:start position:0%
g5 so what does that mean well it means
it<00:10:47.830><c> takes</c><00:10:47.860><c> longer</c><00:10:48.610><c> in</c><00:10:48.820><c> terms</c><00:10:49.240><c> of</c><00:10:49.360><c> clocks</c><00:10:49.690><c> for</c><00:10:50.140><c> a</c>

00:10:50.160 --> 00:10:50.170 align:start position:0%
it takes longer in terms of clocks for a
 

00:10:50.170 --> 00:10:53.040 align:start position:0%
it takes longer in terms of clocks for a
simple<00:10:50.740><c> instruction</c><00:10:51.220><c> to</c><00:10:51.370><c> complete</c><00:10:51.790><c> so</c><00:10:52.780><c> for</c>

00:10:53.040 --> 00:10:53.050 align:start position:0%
simple instruction to complete so for
 

00:10:53.050 --> 00:10:55.470 align:start position:0%
simple instruction to complete so for
example<00:10:53.080><c> an</c><00:10:53.500><c> addition</c><00:10:54.430><c> instruction</c><00:10:55.000><c> may</c><00:10:55.180><c> take</c>

00:10:55.470 --> 00:10:55.480 align:start position:0%
example an addition instruction may take
 

00:10:55.480 --> 00:10:57.750 align:start position:0%
example an addition instruction may take
one<00:10:56.020><c> cycle</c><00:10:56.230><c> on</c><00:10:56.470><c> a</c><00:10:56.500><c> g4</c><00:10:56.950><c> but</c><00:10:57.190><c> may</c><00:10:57.340><c> take</c><00:10:57.520><c> two</c>

00:10:57.750 --> 00:10:57.760 align:start position:0%
one cycle on a g4 but may take two
 

00:10:57.760 --> 00:11:02.130 align:start position:0%
one cycle on a g4 but may take two
cycles<00:10:58.180><c> of</c><00:10:58.270><c> latency</c><00:10:58.660><c> on</c><00:10:58.780><c> a</c><00:10:58.900><c> g5</c><00:11:00.420><c> so</c><00:11:01.420><c> what</c><00:11:02.020><c> you</c>

00:11:02.130 --> 00:11:02.140 align:start position:0%
cycles of latency on a g5 so what you
 

00:11:02.140 --> 00:11:03.570 align:start position:0%
cycles of latency on a g5 so what you
want<00:11:02.290><c> to</c><00:11:02.350><c> do</c><00:11:02.440><c> is</c><00:11:02.590><c> account</c><00:11:02.920><c> for</c><00:11:03.100><c> that</c><00:11:03.190><c> in</c><00:11:03.250><c> your</c>

00:11:03.570 --> 00:11:03.580 align:start position:0%
want to do is account for that in your
 

00:11:03.580 --> 00:11:06.300 align:start position:0%
want to do is account for that in your
program<00:11:03.970><c> I</c><00:11:04.210><c> kind</c><00:11:04.810><c> of</c><00:11:04.930><c> grouping</c><00:11:05.350><c> a</c><00:11:05.590><c> bunch</c><00:11:06.190><c> of</c>

00:11:06.300 --> 00:11:06.310 align:start position:0%
program I kind of grouping a bunch of
 

00:11:06.310 --> 00:11:08.510 align:start position:0%
program I kind of grouping a bunch of
the<00:11:06.610><c> similar</c><00:11:06.970><c> operations</c><00:11:07.450><c> together</c>

00:11:08.510 --> 00:11:08.520 align:start position:0%
the similar operations together
 

00:11:08.520 --> 00:11:10.100 align:start position:0%
the similar operations together
so<00:11:08.820><c> that</c><00:11:09.060><c> means</c><00:11:09.270><c> you</c><00:11:09.480><c> can</c><00:11:09.600><c> unroll</c><00:11:09.900><c> your</c>

00:11:10.100 --> 00:11:10.110 align:start position:0%
so that means you can unroll your
 

00:11:10.110 --> 00:11:12.320 align:start position:0%
so that means you can unroll your
important<00:11:10.650><c> loops</c><00:11:10.860><c> or</c><00:11:11.160><c> you</c><00:11:11.970><c> can</c><00:11:12.090><c> use</c><00:11:12.210><c> the</c>

00:11:12.320 --> 00:11:12.330 align:start position:0%
important loops or you can use the
 

00:11:12.330 --> 00:11:15.500 align:start position:0%
important loops or you can use the
compiler<00:11:12.720><c> flag</c><00:11:13.430><c> and</c><00:11:14.430><c> as</c><00:11:14.670><c> well</c><00:11:14.880><c> you</c><00:11:15.300><c> want</c><00:11:15.450><c> to</c>

00:11:15.500 --> 00:11:15.510 align:start position:0%
compiler flag and as well you want to
 

00:11:15.510 --> 00:11:17.240 align:start position:0%
compiler flag and as well you want to
schedule<00:11:15.720><c> your</c><00:11:16.080><c> code</c><00:11:16.290><c> for</c><00:11:16.530><c> the</c><00:11:16.620><c> g5</c><00:11:16.920><c> so</c><00:11:17.130><c> you're</c>

00:11:17.240 --> 00:11:17.250 align:start position:0%
schedule your code for the g5 so you're
 

00:11:17.250 --> 00:11:18.200 align:start position:0%
schedule your code for the g5 so you're
going<00:11:17.340><c> to</c><00:11:17.400><c> fill</c><00:11:17.580><c> in</c><00:11:17.730><c> all</c><00:11:17.850><c> those</c><00:11:17.970><c> pipelines</c>

00:11:18.200 --> 00:11:18.210 align:start position:0%
going to fill in all those pipelines
 

00:11:18.210 --> 00:11:21.410 align:start position:0%
going to fill in all those pipelines
slots<00:11:18.830><c> now</c><00:11:19.830><c> people</c><00:11:20.760><c> often</c><00:11:20.880><c> ask</c><00:11:21.090><c> well</c>

00:11:21.410 --> 00:11:21.420 align:start position:0%
slots now people often ask well
 

00:11:21.420 --> 00:11:23.060 align:start position:0%
slots now people often ask well
shouldn't<00:11:21.660><c> the</c><00:11:21.840><c> compiler</c><00:11:22.260><c> do</c><00:11:22.440><c> that</c><00:11:22.620><c> for</c><00:11:22.920><c> me</c>

00:11:23.060 --> 00:11:23.070 align:start position:0%
shouldn't the compiler do that for me
 

00:11:23.070 --> 00:11:25.190 align:start position:0%
shouldn't the compiler do that for me
and<00:11:23.250><c> in</c><00:11:23.790><c> all</c><00:11:23.940><c> these</c><00:11:24.060><c> examples</c><00:11:24.120><c> you</c><00:11:24.930><c> can</c><00:11:25.080><c> always</c>

00:11:25.190 --> 00:11:25.200 align:start position:0%
and in all these examples you can always
 

00:11:25.200 --> 00:11:26.480 align:start position:0%
and in all these examples you can always
ask<00:11:25.320><c> that</c><00:11:25.620><c> question</c><00:11:25.890><c> shouldn't</c><00:11:26.070><c> the</c><00:11:26.190><c> compiler</c>

00:11:26.480 --> 00:11:26.490 align:start position:0%
ask that question shouldn't the compiler
 

00:11:26.490 --> 00:11:28.430 align:start position:0%
ask that question shouldn't the compiler
do<00:11:26.670><c> that</c><00:11:26.790><c> for</c><00:11:27.000><c> me</c><00:11:27.150><c> in</c><00:11:27.300><c> some</c><00:11:27.990><c> cases</c><00:11:28.200><c> the</c>

00:11:28.430 --> 00:11:28.440 align:start position:0%
do that for me in some cases the
 

00:11:28.440 --> 00:11:30.170 align:start position:0%
do that for me in some cases the
compiler<00:11:28.800><c> can</c><00:11:29.010><c> do</c><00:11:29.190><c> it</c><00:11:29.310><c> for</c><00:11:29.520><c> you</c><00:11:29.640><c> if</c><00:11:30.000><c> you</c>

00:11:30.170 --> 00:11:30.180 align:start position:0%
compiler can do it for you if you
 

00:11:30.180 --> 00:11:32.750 align:start position:0%
compiler can do it for you if you
specify<00:11:30.690><c> the</c><00:11:30.750><c> right</c><00:11:30.960><c> flags</c><00:11:31.610><c> but</c><00:11:32.610><c> there's</c>

00:11:32.750 --> 00:11:32.760 align:start position:0%
specify the right flags but there's
 

00:11:32.760 --> 00:11:34.340 align:start position:0%
specify the right flags but there's
always<00:11:32.910><c> a</c><00:11:33.030><c> downside</c><00:11:33.210><c> if</c><00:11:33.660><c> you</c><00:11:33.780><c> if</c><00:11:34.140><c> you</c><00:11:34.320><c> just</c>

00:11:34.340 --> 00:11:34.350 align:start position:0%
always a downside if you if you just
 

00:11:34.350 --> 00:11:37.250 align:start position:0%
always a downside if you if you just
lean<00:11:34.890><c> on</c><00:11:35.010><c> the</c><00:11:35.160><c> automatic</c><00:11:35.580><c> way</c><00:11:36.390><c> to</c><00:11:36.450><c> work</c><00:11:36.990><c> over</c>

00:11:37.250 --> 00:11:37.260 align:start position:0%
lean on the automatic way to work over
 

00:11:37.260 --> 00:11:39.740 align:start position:0%
lean on the automatic way to work over
this<00:11:37.380><c> problem</c><00:11:37.770><c> because</c><00:11:38.160><c> the</c><00:11:38.970><c> compiler</c><00:11:39.210><c> hardly</c>

00:11:39.740 --> 00:11:39.750 align:start position:0%
this problem because the compiler hardly
 

00:11:39.750 --> 00:11:42.320 align:start position:0%
this problem because the compiler hardly
usually<00:11:40.500><c> doesn't</c><00:11:40.770><c> know</c><00:11:40.860><c> when</c><00:11:41.280><c> the</c><00:11:42.060><c> loop</c><00:11:42.210><c> is</c>

00:11:42.320 --> 00:11:42.330 align:start position:0%
usually doesn't know when the loop is
 

00:11:42.330 --> 00:11:44.240 align:start position:0%
usually doesn't know when the loop is
important<00:11:42.840><c> or</c><00:11:42.960><c> not</c><00:11:43.080><c> that's</c><00:11:43.530><c> something</c><00:11:43.890><c> you</c>

00:11:44.240 --> 00:11:44.250 align:start position:0%
important or not that's something you
 

00:11:44.250 --> 00:11:47.240 align:start position:0%
important or not that's something you
have<00:11:44.400><c> to</c><00:11:44.430><c> tell</c><00:11:44.760><c> it</c><00:11:45.470><c> so</c><00:11:46.470><c> if</c><00:11:46.560><c> you</c><00:11:46.680><c> choose</c><00:11:47.100><c> to</c>

00:11:47.240 --> 00:11:47.250 align:start position:0%
have to tell it so if you choose to
 

00:11:47.250 --> 00:11:49.460 align:start position:0%
have to tell it so if you choose to
unroll<00:11:47.610><c> all</c><00:11:47.880><c> loops</c><00:11:48.210><c> or</c><00:11:48.480><c> unroll</c><00:11:48.990><c> most</c><00:11:49.260><c> loops</c>

00:11:49.460 --> 00:11:49.470 align:start position:0%
unroll all loops or unroll most loops
 

00:11:49.470 --> 00:11:51.230 align:start position:0%
unroll all loops or unroll most loops
you're<00:11:50.070><c> going</c><00:11:50.220><c> to</c><00:11:50.280><c> have</c><00:11:50.400><c> a</c><00:11:50.580><c> big</c><00:11:50.820><c> increase</c><00:11:51.210><c> in</c>

00:11:51.230 --> 00:11:51.240 align:start position:0%
you're going to have a big increase in
 

00:11:51.240 --> 00:11:53.180 align:start position:0%
you're going to have a big increase in
code<00:11:51.540><c> size</c><00:11:51.840><c> which</c><00:11:52.290><c> could</c><00:11:52.500><c> be</c><00:11:52.620><c> detrimental</c><00:11:52.770><c> to</c>

00:11:53.180 --> 00:11:53.190 align:start position:0%
code size which could be detrimental to
 

00:11:53.190 --> 00:11:55.310 align:start position:0%
code size which could be detrimental to
your<00:11:53.340><c> performance</c><00:11:53.850><c> that's</c><00:11:54.840><c> why</c><00:11:54.990><c> is</c><00:11:55.050><c> the</c><00:11:55.170><c> first</c>

00:11:55.310 --> 00:11:55.320 align:start position:0%
your performance that's why is the first
 

00:11:55.320 --> 00:11:57.680 align:start position:0%
your performance that's why is the first
pass<00:11:55.590><c> you</c><00:11:55.920><c> should</c><00:11:56.070><c> profile</c><00:11:56.490><c> your</c><00:11:57.030><c> program</c><00:11:57.450><c> and</c>

00:11:57.680 --> 00:11:57.690 align:start position:0%
pass you should profile your program and
 

00:11:57.690 --> 00:12:00.320 align:start position:0%
pass you should profile your program and
try<00:11:58.140><c> to</c><00:11:58.200><c> do</c><00:11:58.410><c> manually</c><00:11:59.180><c> some</c><00:12:00.180><c> of</c><00:12:00.270><c> these</c>

00:12:00.320 --> 00:12:00.330 align:start position:0%
try to do manually some of these
 

00:12:00.330 --> 00:12:01.970 align:start position:0%
try to do manually some of these
optimizations<00:12:01.020><c> it's</c><00:12:01.140><c> just</c><00:12:01.350><c> in</c><00:12:01.470><c> the</c><00:12:01.500><c> important</c>

00:12:01.970 --> 00:12:01.980 align:start position:0%
optimizations it's just in the important
 

00:12:01.980 --> 00:12:07.730 align:start position:0%
optimizations it's just in the important
spots<00:12:04.190><c> so</c><00:12:05.190><c> here's</c><00:12:05.370><c> another</c><00:12:05.520><c> example</c><00:12:05.640><c> of</c><00:12:06.740><c> some</c>

00:12:07.730 --> 00:12:07.740 align:start position:0%
spots so here's another example of some
 

00:12:07.740 --> 00:12:10.310 align:start position:0%
spots so here's another example of some
code<00:12:07.950><c> that's</c><00:12:08.160><c> again</c><00:12:08.840><c> just</c><00:12:09.840><c> a</c><00:12:09.930><c> silly</c><00:12:10.140><c> example</c>

00:12:10.310 --> 00:12:10.320 align:start position:0%
code that's again just a silly example
 

00:12:10.320 --> 00:12:12.140 align:start position:0%
code that's again just a silly example
right<00:12:11.040><c> we're</c><00:12:11.190><c> just</c><00:12:11.310><c> going</c><00:12:11.430><c> to</c><00:12:11.460><c> some</c><00:12:11.790><c> a</c><00:12:11.820><c> bunch</c>

00:12:12.140 --> 00:12:12.150 align:start position:0%
right we're just going to some a bunch
 

00:12:12.150 --> 00:12:17.420 align:start position:0%
right we're just going to some a bunch
of<00:12:12.270><c> one</c><00:12:12.480><c> in</c><00:12:12.840><c> this</c><00:12:13.500><c> case</c><00:12:13.740><c> and</c><00:12:15.920><c> the</c><00:12:16.920><c> 970</c>

00:12:17.420 --> 00:12:17.430 align:start position:0%
of one in this case and the 970
 

00:12:17.430 --> 00:12:19.280 align:start position:0%
of one in this case and the 970
architecture<00:12:17.820><c> the</c><00:12:17.970><c> g5</c><00:12:18.330><c> has</c><00:12:18.750><c> two</c><00:12:18.990><c> floating</c>

00:12:19.280 --> 00:12:19.290 align:start position:0%
architecture the g5 has two floating
 

00:12:19.290 --> 00:12:21.440 align:start position:0%
architecture the g5 has two floating
point<00:12:19.530><c> units</c><00:12:19.860><c> and</c><00:12:20.040><c> they're</c><00:12:20.820><c> each</c><00:12:20.940><c> six</c><00:12:21.270><c> stages</c>

00:12:21.440 --> 00:12:21.450 align:start position:0%
point units and they're each six stages
 

00:12:21.450 --> 00:12:24.470 align:start position:0%
point units and they're each six stages
long<00:12:21.810><c> so</c><00:12:22.620><c> this</c><00:12:22.800><c> code</c><00:12:23.070><c> is</c><00:12:23.370><c> only</c><00:12:24.060><c> going</c><00:12:24.240><c> to</c><00:12:24.300><c> get</c>

00:12:24.470 --> 00:12:24.480 align:start position:0%
long so this code is only going to get
 

00:12:24.480 --> 00:12:27.350 align:start position:0%
long so this code is only going to get
approximately<00:12:25.380><c> 1</c><00:12:25.560><c> 12</c><00:12:26.010><c> efficiency</c><00:12:27.000><c> because</c>

00:12:27.350 --> 00:12:27.360 align:start position:0%
approximately 1 12 efficiency because
 

00:12:27.360 --> 00:12:29.270 align:start position:0%
approximately 1 12 efficiency because
every<00:12:27.990><c> instruction</c><00:12:28.350><c> is</c><00:12:28.530><c> dependent</c><00:12:29.070><c> on</c><00:12:29.190><c> the</c>

00:12:29.270 --> 00:12:29.280 align:start position:0%
every instruction is dependent on the
 

00:12:29.280 --> 00:12:32.150 align:start position:0%
every instruction is dependent on the
previous<00:12:29.760><c> some</c><00:12:30.620><c> so</c><00:12:31.620><c> there's</c><00:12:31.800><c> a</c><00:12:31.860><c> simple</c>

00:12:32.150 --> 00:12:32.160 align:start position:0%
previous some so there's a simple
 

00:12:32.160 --> 00:12:35.720 align:start position:0%
previous some so there's a simple
example<00:12:32.420><c> out</c><00:12:33.710><c> the</c><00:12:34.710><c> code</c><00:12:34.920><c> is</c><00:12:35.070><c> exploded</c><00:12:35.580><c> right</c>

00:12:35.720 --> 00:12:35.730 align:start position:0%
example out the code is exploded right
 

00:12:35.730 --> 00:12:38.420 align:start position:0%
example out the code is exploded right
because<00:12:36.710><c> we're</c><00:12:37.710><c> trying</c><00:12:37.950><c> to</c><00:12:38.010><c> fill</c><00:12:38.160><c> all</c><00:12:38.190><c> the</c>

00:12:38.420 --> 00:12:38.430 align:start position:0%
because we're trying to fill all the
 

00:12:38.430 --> 00:12:40.220 align:start position:0%
because we're trying to fill all the
pipeline<00:12:38.790><c> stages</c><00:12:39.030><c> and</c><00:12:39.330><c> here</c><00:12:39.510><c> we</c><00:12:39.870><c> actually</c>

00:12:40.220 --> 00:12:40.230 align:start position:0%
pipeline stages and here we actually
 

00:12:40.230 --> 00:12:43.580 align:start position:0%
pipeline stages and here we actually
only<00:12:40.350><c> unrolled</c><00:12:40.740><c> 28</c><00:12:41.400><c> ways</c><00:12:41.670><c> of</c><00:12:42.030><c> partial</c><00:12:42.630><c> sums</c><00:12:42.660><c> so</c>

00:12:43.580 --> 00:12:43.590 align:start position:0%
only unrolled 28 ways of partial sums so
 

00:12:43.590 --> 00:12:45.560 align:start position:0%
only unrolled 28 ways of partial sums so
we<00:12:43.740><c> wouldn't</c><00:12:44.010><c> fill</c><00:12:44.280><c> all</c><00:12:44.580><c> of</c><00:12:44.610><c> 12</c><00:12:45.090><c> pipeline</c>

00:12:45.560 --> 00:12:45.570 align:start position:0%
we wouldn't fill all of 12 pipeline
 

00:12:45.570 --> 00:12:47.420 align:start position:0%
we wouldn't fill all of 12 pipeline
flopsy<00:12:45.990><c> you</c><00:12:46.260><c> would</c><00:12:46.380><c> actually</c><00:12:46.620><c> want</c><00:12:46.710><c> to</c><00:12:46.830><c> do</c><00:12:46.950><c> 12</c>

00:12:47.420 --> 00:12:47.430 align:start position:0%
flopsy you would actually want to do 12
 

00:12:47.430 --> 00:12:49.190 align:start position:0%
flopsy you would actually want to do 12
in<00:12:47.700><c> order</c><00:12:47.910><c> to</c><00:12:48.000><c> maximize</c><00:12:48.450><c> your</c><00:12:48.630><c> gains</c><00:12:48.870><c> on</c><00:12:49.110><c> the</c>

00:12:49.190 --> 00:12:49.200 align:start position:0%
in order to maximize your gains on the
 

00:12:49.200 --> 00:12:51.500 align:start position:0%
in order to maximize your gains on the
g5<00:12:49.700><c> so</c><00:12:50.700><c> you</c><00:12:50.790><c> can</c><00:12:50.940><c> think</c><00:12:51.030><c> of</c><00:12:51.150><c> the</c><00:12:51.240><c> floating</c>

00:12:51.500 --> 00:12:51.510 align:start position:0%
g5 so you can think of the floating
 

00:12:51.510 --> 00:12:53.840 align:start position:0%
g5 so you can think of the floating
point<00:12:51.720><c> unit</c><00:12:51.750><c> says</c><00:12:52.200><c> either</c><00:12:52.710><c> 112</c><00:12:53.580><c> stage</c>

00:12:53.840 --> 00:12:53.850 align:start position:0%
point unit says either 112 stage
 

00:12:53.850 --> 00:12:58.850 align:start position:0%
point unit says either 112 stage
pipeline<00:12:54.180><c> or</c><00:12:54.860><c> 12</c><00:12:55.860><c> single</c><00:12:56.820><c> units</c><00:12:57.680><c> but</c><00:12:58.680><c> they're</c>

00:12:58.850 --> 00:12:58.860 align:start position:0%
pipeline or 12 single units but they're
 

00:12:58.860 --> 00:13:00.830 align:start position:0%
pipeline or 12 single units but they're
all<00:12:58.950><c> going</c><00:12:59.070><c> to</c><00:12:59.130><c> operate</c><00:12:59.430><c> in</c><00:12:59.550><c> parallel</c><00:13:00.000><c> so</c><00:13:00.180><c> this</c>

00:13:00.830 --> 00:13:00.840 align:start position:0%
all going to operate in parallel so this
 

00:13:00.840 --> 00:13:03.230 align:start position:0%
all going to operate in parallel so this
code<00:13:01.050><c> turns</c><00:13:02.010><c> out</c><00:13:02.100><c> to</c><00:13:02.220><c> be</c><00:13:02.280><c> 10</c><00:13:02.520><c> times</c><00:13:02.760><c> faster</c>

00:13:03.230 --> 00:13:03.240 align:start position:0%
code turns out to be 10 times faster
 

00:13:03.240 --> 00:13:05.480 align:start position:0%
code turns out to be 10 times faster
just<00:13:03.600><c> using</c><00:13:03.900><c> partial</c><00:13:04.110><c> sums</c><00:13:04.440><c> instead</c><00:13:04.830><c> of</c><00:13:04.920><c> one</c>

00:13:05.480 --> 00:13:05.490 align:start position:0%
just using partial sums instead of one
 

00:13:05.490 --> 00:13:09.270 align:start position:0%
just using partial sums instead of one
variable

00:13:09.270 --> 00:13:09.280 align:start position:0%
 
 

00:13:09.280 --> 00:13:11.200 align:start position:0%
 
the<00:13:10.280><c> other</c><00:13:10.400><c> big</c><00:13:10.610><c> thing</c><00:13:10.790><c> you</c><00:13:10.910><c> have</c><00:13:11.000><c> to</c><00:13:11.060><c> worry</c>

00:13:11.200 --> 00:13:11.210 align:start position:0%
the other big thing you have to worry
 

00:13:11.210 --> 00:13:12.910 align:start position:0%
the other big thing you have to worry
about<00:13:11.390><c> when</c><00:13:11.720><c> you're</c><00:13:11.870><c> optimizing</c><00:13:12.230><c> code</c><00:13:12.650><c> and</c>

00:13:12.910 --> 00:13:12.920 align:start position:0%
about when you're optimizing code and
 

00:13:12.920 --> 00:13:14.740 align:start position:0%
about when you're optimizing code and
this<00:13:13.340><c> goes</c><00:13:13.520><c> for</c><00:13:13.700><c> all</c><00:13:13.730><c> architectures</c><00:13:14.450><c> because</c>

00:13:14.740 --> 00:13:14.750 align:start position:0%
this goes for all architectures because
 

00:13:14.750 --> 00:13:18.160 align:start position:0%
this goes for all architectures because
particularly<00:13:15.500><c> that</c><00:13:16.220><c> on</c><00:13:16.430><c> a</c><00:13:16.460><c> g5</c><00:13:16.880><c> because</c><00:13:17.360><c> the</c><00:13:17.840><c> g5</c>

00:13:18.160 --> 00:13:18.170 align:start position:0%
particularly that on a g5 because the g5
 

00:13:18.170 --> 00:13:20.800 align:start position:0%
particularly that on a g5 because the g5
core<00:13:18.440><c> is</c><00:13:18.560><c> so</c><00:13:18.710><c> good</c><00:13:18.950><c> it</c><00:13:19.760><c> makes</c><00:13:19.940><c> memory</c><00:13:20.360><c> look</c>

00:13:20.800 --> 00:13:20.810 align:start position:0%
core is so good it makes memory look
 

00:13:20.810 --> 00:13:25.120 align:start position:0%
core is so good it makes memory look
really<00:13:21.200><c> really</c><00:13:21.410><c> slow</c><00:13:23.680><c> what</c><00:13:24.680><c> you</c><00:13:24.800><c> have</c><00:13:24.890><c> to</c><00:13:24.950><c> do</c>

00:13:25.120 --> 00:13:25.130 align:start position:0%
really really slow what you have to do
 

00:13:25.130 --> 00:13:27.790 align:start position:0%
really really slow what you have to do
is<00:13:25.340><c> try</c><00:13:25.520><c> to</c><00:13:25.610><c> reduce</c><00:13:26.260><c> operations</c><00:13:27.260><c> where</c><00:13:27.590><c> you're</c>

00:13:27.790 --> 00:13:27.800 align:start position:0%
is try to reduce operations where you're
 

00:13:27.800 --> 00:13:30.280 align:start position:0%
is try to reduce operations where you're
waiting<00:13:28.160><c> on</c><00:13:28.250><c> memory</c><00:13:28.610><c> so</c><00:13:28.940><c> effectively</c><00:13:29.840><c> reduce</c>

00:13:30.280 --> 00:13:30.290 align:start position:0%
waiting on memory so effectively reduce
 

00:13:30.290 --> 00:13:32.230 align:start position:0%
waiting on memory so effectively reduce
your<00:13:30.500><c> latency</c><00:13:30.860><c> there</c><00:13:31.760><c> are</c><00:13:31.820><c> a</c><00:13:31.850><c> couple</c><00:13:31.970><c> of</c><00:13:32.120><c> ways</c>

00:13:32.230 --> 00:13:32.240 align:start position:0%
your latency there are a couple of ways
 

00:13:32.240 --> 00:13:35.320 align:start position:0%
your latency there are a couple of ways
to<00:13:32.270><c> do</c><00:13:32.540><c> that</c><00:13:32.980><c> one</c><00:13:33.980><c> is</c><00:13:34.100><c> to</c><00:13:34.220><c> rely</c><00:13:34.460><c> on</c><00:13:34.730><c> Hardware</c>

00:13:35.320 --> 00:13:35.330 align:start position:0%
to do that one is to rely on Hardware
 

00:13:35.330 --> 00:13:37.900 align:start position:0%
to do that one is to rely on Hardware
prefetch<00:13:35.690><c> engine</c><00:13:36.050><c> and</c><00:13:36.460><c> I'll</c><00:13:37.460><c> show</c><00:13:37.880><c> you</c>

00:13:37.900 --> 00:13:37.910 align:start position:0%
prefetch engine and I'll show you
 

00:13:37.910 --> 00:13:39.790 align:start position:0%
prefetch engine and I'll show you
another<00:13:38.120><c> example</c><00:13:38.270><c> of</c><00:13:38.600><c> that</c><00:13:38.660><c> the</c><00:13:39.530><c> other</c><00:13:39.680><c> thing</c>

00:13:39.790 --> 00:13:39.800 align:start position:0%
another example of that the other thing
 

00:13:39.800 --> 00:13:41.590 align:start position:0%
another example of that the other thing
you<00:13:39.890><c> can</c><00:13:39.920><c> do</c><00:13:40.130><c> is</c><00:13:40.430><c> use</c><00:13:40.730><c> software</c><00:13:41.120><c> prefetch</c>

00:13:41.590 --> 00:13:41.600 align:start position:0%
you can do is use software prefetch
 

00:13:41.600 --> 00:13:43.330 align:start position:0%
you can do is use software prefetch
instructions<00:13:42.200><c> to</c><00:13:42.380><c> get</c><00:13:42.560><c> the</c><00:13:42.680><c> data</c><00:13:42.860><c> before</c><00:13:43.130><c> you</c>

00:13:43.330 --> 00:13:43.340 align:start position:0%
instructions to get the data before you
 

00:13:43.340 --> 00:13:45.660 align:start position:0%
instructions to get the data before you
actually<00:13:43.490><c> need</c><00:13:43.760><c> to</c><00:13:43.790><c> use</c><00:13:43.940><c> it</c><00:13:44.210><c> for</c><00:13:44.240><c> computations</c>

00:13:45.660 --> 00:13:45.670 align:start position:0%
actually need to use it for computations
 

00:13:45.670 --> 00:13:48.130 align:start position:0%
actually need to use it for computations
for<00:13:46.670><c> example</c><00:13:47.210><c> if</c><00:13:47.300><c> you're</c><00:13:47.420><c> in</c><00:13:47.540><c> a</c><00:13:47.600><c> loop</c><00:13:47.840><c> you</c><00:13:48.110><c> can</c>

00:13:48.130 --> 00:13:48.140 align:start position:0%
for example if you're in a loop you can
 

00:13:48.140 --> 00:13:49.870 align:start position:0%
for example if you're in a loop you can
batch<00:13:48.470><c> all</c><00:13:48.710><c> your</c><00:13:48.860><c> loads</c><00:13:49.100><c> together</c><00:13:49.460><c> at</c><00:13:49.610><c> the</c><00:13:49.700><c> top</c>

00:13:49.870 --> 00:13:49.880 align:start position:0%
batch all your loads together at the top
 

00:13:49.880 --> 00:13:51.730 align:start position:0%
batch all your loads together at the top
of<00:13:49.910><c> the</c><00:13:50.060><c> loop</c><00:13:50.210><c> do</c><00:13:50.690><c> a</c><00:13:50.720><c> bunch</c><00:13:50.960><c> of</c><00:13:51.050><c> math</c><00:13:51.260><c> and</c><00:13:51.530><c> then</c>

00:13:51.730 --> 00:13:51.740 align:start position:0%
of the loop do a bunch of math and then
 

00:13:51.740 --> 00:13:53.380 align:start position:0%
of the loop do a bunch of math and then
do<00:13:51.890><c> stores</c><00:13:52.250><c> at</c><00:13:52.430><c> the</c><00:13:52.520><c> bottom</c><00:13:52.820><c> that's</c><00:13:53.090><c> going</c><00:13:53.330><c> to</c>

00:13:53.380 --> 00:13:53.390 align:start position:0%
do stores at the bottom that's going to
 

00:13:53.390 --> 00:13:55.390 align:start position:0%
do stores at the bottom that's going to
perform<00:13:53.690><c> better</c><00:13:53.930><c> than</c><00:13:54.200><c> doing</c><00:13:54.400><c> serial</c>

00:13:55.390 --> 00:13:55.400 align:start position:0%
perform better than doing serial
 

00:13:55.400 --> 00:13:59.700 align:start position:0%
perform better than doing serial
operations<00:13:55.910><c> of</c><00:13:56.030><c> load</c><00:13:56.270><c> maps</c><00:13:56.600><c> store</c><00:13:57.020><c> I</c>

00:13:59.700 --> 00:13:59.710 align:start position:0%
 
 

00:13:59.710 --> 00:14:02.110 align:start position:0%
 
mentioned<00:14:00.710><c> that</c><00:14:00.740><c> the</c><00:14:01.370><c> data</c><00:14:01.550><c> cache</c><00:14:01.850><c> is</c>

00:14:02.110 --> 00:14:02.120 align:start position:0%
mentioned that the data cache is
 

00:14:02.120 --> 00:14:05.170 align:start position:0%
mentioned that the data cache is
different<00:14:02.810><c> on</c><00:14:02.930><c> the</c><00:14:03.200><c> g5</c><00:14:03.530><c> than</c><00:14:03.740><c> the</c><00:14:03.860><c> g4</c><00:14:04.250><c> and</c><00:14:04.460><c> the</c>

00:14:05.170 --> 00:14:05.180 align:start position:0%
different on the g5 than the g4 and the
 

00:14:05.180 --> 00:14:06.880 align:start position:0%
different on the g5 than the g4 and the
biggest<00:14:05.330><c> difference</c><00:14:05.840><c> is</c><00:14:06.020><c> the</c><00:14:06.470><c> cache</c><00:14:06.650><c> line</c>

00:14:06.880 --> 00:14:06.890 align:start position:0%
biggest difference is the cache line
 

00:14:06.890 --> 00:14:09.970 align:start position:0%
biggest difference is the cache line
size<00:14:06.920><c> so</c><00:14:07.820><c> it's</c><00:14:08.060><c> four</c><00:14:08.270><c> times</c><00:14:08.450><c> as</c><00:14:08.750><c> big</c><00:14:08.960><c> what</c><00:14:09.890><c> does</c>

00:14:09.970 --> 00:14:09.980 align:start position:0%
size so it's four times as big what does
 

00:14:09.980 --> 00:14:11.770 align:start position:0%
size so it's four times as big what does
that<00:14:10.010><c> mean</c><00:14:10.310><c> well</c><00:14:10.670><c> it</c><00:14:10.760><c> means</c><00:14:10.790><c> you</c><00:14:11.270><c> might</c><00:14:11.510><c> get</c>

00:14:11.770 --> 00:14:11.780 align:start position:0%
that mean well it means you might get
 

00:14:11.780 --> 00:14:14.230 align:start position:0%
that mean well it means you might get
one<00:14:11.990><c> fourth</c><00:14:12.440><c> the</c><00:14:12.590><c> cache</c><00:14:12.770><c> misses</c><00:14:13.010><c> if</c><00:14:13.460><c> your</c><00:14:14.060><c> data</c>

00:14:14.230 --> 00:14:14.240 align:start position:0%
one fourth the cache misses if your data
 

00:14:14.240 --> 00:14:16.690 align:start position:0%
one fourth the cache misses if your data
is<00:14:14.360><c> organized</c><00:14:14.840><c> nicely</c><00:14:15.350><c> it</c><00:14:16.100><c> may</c><00:14:16.280><c> also</c><00:14:16.400><c> mean</c>

00:14:16.690 --> 00:14:16.700 align:start position:0%
is organized nicely it may also mean
 

00:14:16.700 --> 00:14:18.340 align:start position:0%
is organized nicely it may also mean
that<00:14:16.730><c> you're</c><00:14:16.970><c> getting</c><00:14:17.120><c> really</c><00:14:17.930><c> terrible</c>

00:14:18.340 --> 00:14:18.350 align:start position:0%
that you're getting really terrible
 

00:14:18.350 --> 00:14:20.610 align:start position:0%
that you're getting really terrible
performance<00:14:18.890><c> if</c><00:14:19.070><c> you're</c><00:14:19.310><c> accessing</c><00:14:19.580><c> one</c><00:14:19.940><c> bite</c>

00:14:20.610 --> 00:14:20.620 align:start position:0%
performance if you're accessing one bite
 

00:14:20.620 --> 00:14:23.560 align:start position:0%
performance if you're accessing one bite
skipping<00:14:21.620><c> 127</c><00:14:22.520><c> and</c><00:14:22.730><c> accessing</c><00:14:23.150><c> another</c><00:14:23.360><c> one</c>

00:14:23.560 --> 00:14:23.570 align:start position:0%
skipping 127 and accessing another one
 

00:14:23.570 --> 00:14:25.750 align:start position:0%
skipping 127 and accessing another one
bite<00:14:23.810><c> at</c><00:14:24.050><c> that</c><00:14:24.830><c> point</c><00:14:25.220><c> you're</c><00:14:25.310><c> getting</c><00:14:25.430><c> less</c>

00:14:25.750 --> 00:14:25.760 align:start position:0%
bite at that point you're getting less
 

00:14:25.760 --> 00:14:29.370 align:start position:0%
bite at that point you're getting less
than<00:14:26.000><c> 1</c><00:14:26.150><c> percent</c><00:14:26.480><c> efficiency</c><00:14:26.870><c> from</c><00:14:27.140><c> your</c><00:14:27.260><c> cash</c>

00:14:29.370 --> 00:14:29.380 align:start position:0%
than 1 percent efficiency from your cash
 

00:14:29.380 --> 00:14:31.570 align:start position:0%
than 1 percent efficiency from your cash
so<00:14:30.380><c> what</c><00:14:30.620><c> you</c><00:14:30.710><c> want</c><00:14:30.860><c> to</c><00:14:30.920><c> do</c><00:14:31.010><c> and</c><00:14:31.220><c> this</c><00:14:31.280><c> is</c><00:14:31.340><c> sort</c>

00:14:31.570 --> 00:14:31.580 align:start position:0%
so what you want to do and this is sort
 

00:14:31.580 --> 00:14:34.360 align:start position:0%
so what you want to do and this is sort
of<00:14:31.670><c> basic</c><00:14:32.180><c> CS</c><00:14:32.480><c> right</c><00:14:33.140><c> pack</c><00:14:33.980><c> your</c><00:14:34.010><c> data</c>

00:14:34.360 --> 00:14:34.370 align:start position:0%
of basic CS right pack your data
 

00:14:34.370 --> 00:14:37.720 align:start position:0%
of basic CS right pack your data
together<00:14:34.580><c> to</c><00:14:35.270><c> maximize</c><00:14:35.450><c> its</c><00:14:36.020><c> locality</c><00:14:36.460><c> so</c><00:14:37.460><c> as</c>

00:14:37.720 --> 00:14:37.730 align:start position:0%
together to maximize its locality so as
 

00:14:37.730 --> 00:14:41.290 align:start position:0%
together to maximize its locality so as
you<00:14:37.760><c> walk</c><00:14:38.030><c> through</c><00:14:38.300><c> your</c><00:14:38.980><c> array</c><00:14:40.000><c> you</c><00:14:41.000><c> want</c><00:14:41.180><c> to</c>

00:14:41.290 --> 00:14:41.300 align:start position:0%
you walk through your array you want to
 

00:14:41.300 --> 00:14:42.790 align:start position:0%
you walk through your array you want to
be<00:14:41.390><c> stepping</c><00:14:41.810><c> sequentially</c><00:14:42.410><c> rather</c><00:14:42.620><c> than</c>

00:14:42.790 --> 00:14:42.800 align:start position:0%
be stepping sequentially rather than
 

00:14:42.800 --> 00:14:45.520 align:start position:0%
be stepping sequentially rather than
jumping<00:14:43.010><c> around</c><00:14:43.750><c> this</c><00:14:44.750><c> as</c><00:14:45.020><c> an</c><00:14:45.200><c> additional</c>

00:14:45.520 --> 00:14:45.530 align:start position:0%
jumping around this as an additional
 

00:14:45.530 --> 00:14:47.920 align:start position:0%
jumping around this as an additional
benefit<00:14:46.100><c> of</c><00:14:46.420><c> triggering</c><00:14:47.420><c> the</c><00:14:47.600><c> hardware</c>

00:14:47.920 --> 00:14:47.930 align:start position:0%
benefit of triggering the hardware
 

00:14:47.930 --> 00:14:51.340 align:start position:0%
benefit of triggering the hardware
memory<00:14:48.260><c> the</c><00:14:48.650><c> hardware</c><00:14:49.460><c> prefetcher</c><00:14:49.840><c> so</c><00:14:50.840><c> the</c>

00:14:51.340 --> 00:14:51.350 align:start position:0%
memory the hardware prefetcher so the
 

00:14:51.350 --> 00:14:53.050 align:start position:0%
memory the hardware prefetcher so the
CPU<00:14:51.710><c> is</c><00:14:51.830><c> automatically</c><00:14:52.340><c> going</c><00:14:52.550><c> to</c><00:14:52.640><c> detect</c>

00:14:53.050 --> 00:14:53.060 align:start position:0%
CPU is automatically going to detect
 

00:14:53.060 --> 00:14:54.820 align:start position:0%
CPU is automatically going to detect
that<00:14:53.330><c> you're</c><00:14:53.540><c> walking</c><00:14:53.840><c> a</c><00:14:54.200><c> straight</c><00:14:54.410><c> line</c>

00:14:54.820 --> 00:14:54.830 align:start position:0%
that you're walking a straight line
 

00:14:54.830 --> 00:14:56.320 align:start position:0%
that you're walking a straight line
either<00:14:55.040><c> up</c><00:14:55.280><c> or</c><00:14:55.400><c> down</c><00:14:55.460><c> through</c><00:14:55.790><c> memory</c><00:14:56.120><c> and</c>

00:14:56.320 --> 00:14:56.330 align:start position:0%
either up or down through memory and
 

00:14:56.330 --> 00:14:58.210 align:start position:0%
either up or down through memory and
start<00:14:57.050><c> prefetching</c><00:14:57.440><c> cache</c><00:14:57.740><c> lines</c><00:14:58.010><c> from</c>

00:14:58.210 --> 00:14:58.220 align:start position:0%
start prefetching cache lines from
 

00:14:58.220 --> 00:15:02.140 align:start position:0%
start prefetching cache lines from
memory<00:14:58.550><c> into</c><00:14:58.580><c> the</c><00:14:58.850><c> cache</c><00:15:00.670><c> so</c><00:15:01.670><c> again</c><00:15:01.880><c> here's</c>

00:15:02.140 --> 00:15:02.150 align:start position:0%
memory into the cache so again here's
 

00:15:02.150 --> 00:15:05.230 align:start position:0%
memory into the cache so again here's
another<00:15:02.360><c> simple</c><00:15:03.020><c> example</c><00:15:03.080><c> as</c><00:15:03.700><c> a</c><00:15:04.700><c> classic</c>

00:15:05.230 --> 00:15:05.240 align:start position:0%
another simple example as a classic
 

00:15:05.240 --> 00:15:07.930 align:start position:0%
another simple example as a classic
two-dimensional<00:15:06.140><c> array</c><00:15:06.580><c> where</c><00:15:07.580><c> we're</c>

00:15:07.930 --> 00:15:07.940 align:start position:0%
two-dimensional array where we're
 

00:15:07.940 --> 00:15:10.270 align:start position:0%
two-dimensional array where we're
walking<00:15:08.600><c> the</c><00:15:08.720><c> wrong</c><00:15:08.840><c> way</c><00:15:09.110><c> through</c><00:15:09.410><c> it</c><00:15:09.500><c> we're</c>

00:15:10.270 --> 00:15:10.280 align:start position:0%
walking the wrong way through it we're
 

00:15:10.280 --> 00:15:12.910 align:start position:0%
walking the wrong way through it we're
iterating<00:15:10.610><c> on</c><00:15:10.970><c> the</c><00:15:11.090><c> columns</c><00:15:11.540><c> or</c><00:15:11.750><c> rather</c><00:15:12.680><c> the</c>

00:15:12.910 --> 00:15:12.920 align:start position:0%
iterating on the columns or rather the
 

00:15:12.920 --> 00:15:16.600 align:start position:0%
iterating on the columns or rather the
rows<00:15:13.100><c> rather</c><00:15:14.060><c> than</c><00:15:14.240><c> a</c><00:15:14.330><c> columns</c><00:15:15.250><c> so</c><00:15:16.250><c> we're</c>

00:15:16.600 --> 00:15:16.610 align:start position:0%
rows rather than a columns so we're
 

00:15:16.610 --> 00:15:19.510 align:start position:0%
rows rather than a columns so we're
skipping<00:15:16.850><c> large</c><00:15:17.540><c> chunks</c><00:15:17.930><c> of</c><00:15:18.020><c> memory</c><00:15:18.200><c> in</c><00:15:18.530><c> this</c>

00:15:19.510 --> 00:15:19.520 align:start position:0%
skipping large chunks of memory in this
 

00:15:19.520 --> 00:15:20.990 align:start position:0%
skipping large chunks of memory in this
case<00:15:19.670><c> what</c><00:15:19.880><c> you'd</c><00:15:20.030><c> want</c><00:15:20.150><c> to</c><00:15:20.240><c> do</c><00:15:20.390><c> is</c>

00:15:20.990 --> 00:15:21.000 align:start position:0%
case what you'd want to do is
 

00:15:21.000 --> 00:15:24.080 align:start position:0%
case what you'd want to do is
switch<00:15:21.360><c> the</c><00:15:21.690><c> four</c><00:15:22.620><c> loops</c><00:15:22.860><c> so</c><00:15:23.760><c> that</c><00:15:23.910><c> you</c><00:15:23.970><c> could</c>

00:15:24.080 --> 00:15:24.090 align:start position:0%
switch the four loops so that you could
 

00:15:24.090 --> 00:15:26.420 align:start position:0%
switch the four loops so that you could
sequentially<00:15:25.020><c> access</c><00:15:25.470><c> every</c><00:15:25.950><c> element</c><00:15:26.280><c> in</c>

00:15:26.420 --> 00:15:26.430 align:start position:0%
sequentially access every element in
 

00:15:26.430 --> 00:15:29.690 align:start position:0%
sequentially access every element in
this<00:15:26.580><c> array</c><00:15:27.290><c> so</c><00:15:28.290><c> any</c><00:15:28.590><c> guesses</c><00:15:28.950><c> on</c><00:15:29.070><c> how</c><00:15:29.520><c> much</c>

00:15:29.690 --> 00:15:29.700 align:start position:0%
this array so any guesses on how much
 

00:15:29.700 --> 00:15:31.940 align:start position:0%
this array so any guesses on how much
faster<00:15:29.940><c> this</c><00:15:30.270><c> is</c><00:15:30.420><c> going</c><00:15:30.570><c> to</c><00:15:30.630><c> be</c><00:15:30.950><c> big</c>

00:15:31.940 --> 00:15:31.950 align:start position:0%
faster this is going to be big
 

00:15:31.950 --> 00:15:35.480 align:start position:0%
faster this is going to be big
difference<00:15:32.340><c> right</c><00:15:33.350><c> and</c><00:15:34.350><c> so</c><00:15:34.860><c> this</c><00:15:35.010><c> is</c><00:15:35.130><c> simple</c>

00:15:35.480 --> 00:15:35.490 align:start position:0%
difference right and so this is simple
 

00:15:35.490 --> 00:15:38.990 align:start position:0%
difference right and so this is simple
stuff<00:15:35.730><c> but</c><00:15:36.180><c> 30</c><00:15:36.420><c> times</c><00:15:36.690><c> faster</c><00:15:37.230><c> if</c><00:15:37.460><c> you</c><00:15:38.460><c> do</c><00:15:38.610><c> the</c>

00:15:38.990 --> 00:15:39.000 align:start position:0%
stuff but 30 times faster if you do the
 

00:15:39.000 --> 00:15:41.260 align:start position:0%
stuff but 30 times faster if you do the
right<00:15:39.180><c> thing</c><00:15:39.420><c> rather</c><00:15:40.050><c> than</c><00:15:40.170><c> the</c><00:15:40.380><c> wrong</c><00:15:40.530><c> thing</c>

00:15:41.260 --> 00:15:41.270 align:start position:0%
right thing rather than the wrong thing
 

00:15:41.270 --> 00:15:44.570 align:start position:0%
right thing rather than the wrong thing
so<00:15:42.270><c> it</c><00:15:42.360><c> highlights</c><00:15:42.930><c> the</c><00:15:43.220><c> problem</c><00:15:44.220><c> of</c><00:15:44.340><c> how</c>

00:15:44.570 --> 00:15:44.580 align:start position:0%
so it highlights the problem of how
 

00:15:44.580 --> 00:15:48.830 align:start position:0%
so it highlights the problem of how
important<00:15:45.180><c> accessing</c><00:15:45.780><c> memory</c><00:15:45.930><c> is</c><00:15:47.630><c> so</c><00:15:48.630><c> I</c><00:15:48.690><c> just</c>

00:15:48.830 --> 00:15:48.840 align:start position:0%
important accessing memory is so I just
 

00:15:48.840 --> 00:15:50.180 align:start position:0%
important accessing memory is so I just
want<00:15:48.960><c> to</c><00:15:48.990><c> summarize</c><00:15:49.170><c> some</c><00:15:49.620><c> of</c><00:15:49.770><c> the</c><00:15:49.920><c> things</c><00:15:50.100><c> you</c>

00:15:50.180 --> 00:15:50.190 align:start position:0%
want to summarize some of the things you
 

00:15:50.190 --> 00:15:51.590 align:start position:0%
want to summarize some of the things you
should<00:15:50.430><c> be</c><00:15:50.460><c> doing</c><00:15:50.520><c> and</c><00:15:50.970><c> looking</c><00:15:51.270><c> at</c><00:15:51.390><c> while</c>

00:15:51.590 --> 00:15:51.600 align:start position:0%
should be doing and looking at while
 

00:15:51.600 --> 00:15:54.140 align:start position:0%
should be doing and looking at while
you're<00:15:51.720><c> trying</c><00:15:51.870><c> to</c><00:15:51.990><c> optimize</c><00:15:52.080><c> code</c><00:15:52.970><c> the</c><00:15:53.970><c> first</c>

00:15:54.140 --> 00:15:54.150 align:start position:0%
you're trying to optimize code the first
 

00:15:54.150 --> 00:15:55.490 align:start position:0%
you're trying to optimize code the first
thing<00:15:54.330><c> to</c><00:15:54.420><c> do</c><00:15:54.540><c> is</c><00:15:54.570><c> try</c><00:15:54.840><c> to</c><00:15:54.870><c> unroll</c><00:15:55.260><c> and</c>

00:15:55.490 --> 00:15:55.500 align:start position:0%
thing to do is try to unroll and
 

00:15:55.500 --> 00:15:58.760 align:start position:0%
thing to do is try to unroll and
schedule<00:15:55.920><c> important</c><00:15:56.550><c> loops</c><00:15:57.620><c> because</c><00:15:58.620><c> you</c>

00:15:58.760 --> 00:15:58.770 align:start position:0%
schedule important loops because you
 

00:15:58.770 --> 00:16:00.140 align:start position:0%
schedule important loops because you
have<00:15:58.890><c> all</c><00:15:59.070><c> these</c><00:15:59.190><c> execution</c><00:15:59.760><c> units</c><00:15:59.970><c> the</c>

00:16:00.140 --> 00:16:00.150 align:start position:0%
have all these execution units the
 

00:16:00.150 --> 00:16:01.760 align:start position:0%
have all these execution units the
independent<00:16:00.660><c> floating</c><00:16:01.020><c> point</c><00:16:01.290><c> units</c><00:16:01.560><c> the</c>

00:16:01.760 --> 00:16:01.770 align:start position:0%
independent floating point units the
 

00:16:01.770 --> 00:16:04.220 align:start position:0%
independent floating point units the
independent<00:16:02.250><c> load</c><00:16:02.400><c> store</c><00:16:02.670><c> units</c><00:16:03.080><c> you</c><00:16:04.080><c> have</c>

00:16:04.220 --> 00:16:04.230 align:start position:0%
independent load store units you have
 

00:16:04.230 --> 00:16:08.540 align:start position:0%
independent load store units you have
hundreds<00:16:04.950><c> of</c><00:16:05.010><c> instructions</c><00:16:05.520><c> in</c><00:16:05.640><c> flight</c><00:16:07.550><c> it's</c>

00:16:08.540 --> 00:16:08.550 align:start position:0%
hundreds of instructions in flight it's
 

00:16:08.550 --> 00:16:10.010 align:start position:0%
hundreds of instructions in flight it's
like<00:16:08.790><c> this</c><00:16:09.000><c> number</c><00:16:09.180><c> is</c><00:16:09.300><c> actually</c><00:16:09.420><c> out</c><00:16:09.780><c> of</c><00:16:09.870><c> date</c>

00:16:10.010 --> 00:16:10.020 align:start position:0%
like this number is actually out of date
 

00:16:10.020 --> 00:16:11.720 align:start position:0%
like this number is actually out of date
as<00:16:10.140><c> well</c><00:16:10.170><c> you</c><00:16:10.560><c> can</c><00:16:10.710><c> now</c><00:16:10.830><c> use</c><00:16:11.130><c> altivec</c><00:16:11.520><c> to</c>

00:16:11.720 --> 00:16:11.730 align:start position:0%
as well you can now use altivec to
 

00:16:11.730 --> 00:16:13.970 align:start position:0%
as well you can now use altivec to
calculate<00:16:12.240><c> more</c><00:16:12.930><c> than</c><00:16:13.080><c> 36</c><00:16:13.500><c> gigaflops</c><00:16:13.890><c> per</c>

00:16:13.970 --> 00:16:13.980 align:start position:0%
calculate more than 36 gigaflops per
 

00:16:13.980 --> 00:16:17.090 align:start position:0%
calculate more than 36 gigaflops per
second<00:16:14.610><c> at</c><00:16:15.540><c> two</c><00:16:15.720><c> and</c><00:16:15.810><c> a</c><00:16:15.870><c> half</c><00:16:15.990><c> gigahertz</c><00:16:16.290><c> this</c>

00:16:17.090 --> 00:16:17.100 align:start position:0%
second at two and a half gigahertz this
 

00:16:17.100 --> 00:16:18.590 align:start position:0%
second at two and a half gigahertz this
is<00:16:17.250><c> of</c><00:16:17.370><c> course</c><00:16:17.550><c> the</c><00:16:17.850><c> best</c><00:16:17.970><c> solution</c><00:16:18.420><c> if</c><00:16:18.510><c> you</c>

00:16:18.590 --> 00:16:18.600 align:start position:0%
is of course the best solution if you
 

00:16:18.600 --> 00:16:20.740 align:start position:0%
is of course the best solution if you
have<00:16:18.750><c> code</c><00:16:19.050><c> that's</c><00:16:19.290><c> just</c><00:16:19.770><c> massively</c><00:16:20.430><c> parallel</c>

00:16:20.740 --> 00:16:20.750 align:start position:0%
have code that's just massively parallel
 

00:16:20.750 --> 00:16:22.850 align:start position:0%
have code that's just massively parallel
you<00:16:21.750><c> can</c><00:16:21.900><c> operate</c><00:16:22.230><c> on</c><00:16:22.380><c> all</c><00:16:22.530><c> the</c><00:16:22.650><c> elements</c>

00:16:22.850 --> 00:16:22.860 align:start position:0%
you can operate on all the elements
 

00:16:22.860 --> 00:16:27.170 align:start position:0%
you can operate on all the elements
simultaneously<00:16:25.400><c> for</c><00:16:26.400><c> those</c><00:16:26.580><c> of</c><00:16:26.700><c> you</c><00:16:26.790><c> writing</c>

00:16:27.170 --> 00:16:27.180 align:start position:0%
simultaneously for those of you writing
 

00:16:27.180 --> 00:16:30.590 align:start position:0%
simultaneously for those of you writing
floating-point<00:16:27.990><c> code</c><00:16:28.640><c> the</c><00:16:29.640><c> g5</c><00:16:29.970><c> has</c><00:16:30.240><c> a</c>

00:16:30.590 --> 00:16:30.600 align:start position:0%
floating-point code the g5 has a
 

00:16:30.600 --> 00:16:32.090 align:start position:0%
floating-point code the g5 has a
hardware<00:16:31.050><c> square</c><00:16:31.290><c> root</c><00:16:31.410><c> instruction</c><00:16:31.920><c> which</c>

00:16:32.090 --> 00:16:32.100 align:start position:0%
hardware square root instruction which
 

00:16:32.100 --> 00:16:34.490 align:start position:0%
hardware square root instruction which
can<00:16:32.250><c> be</c><00:16:32.339><c> enabled</c><00:16:32.520><c> with</c><00:16:32.820><c> GCC</c><00:16:33.150><c> with</c><00:16:33.570><c> this</c><00:16:34.200><c> Power</c>

00:16:34.490 --> 00:16:34.500 align:start position:0%
can be enabled with GCC with this Power
 

00:16:34.500 --> 00:16:38.960 align:start position:0%
can be enabled with GCC with this Power
PC<00:16:34.650><c> GP</c><00:16:35.310><c> opt</c><00:16:35.550><c> flag</c><00:16:36.170><c> xlc</c><00:16:37.170><c> will</c><00:16:37.440><c> recognize</c><00:16:37.970><c> that</c>

00:16:38.960 --> 00:16:38.970 align:start position:0%
PC GP opt flag xlc will recognize that
 

00:16:38.970 --> 00:16:40.520 align:start position:0%
PC GP opt flag xlc will recognize that
this<00:16:39.120><c> instruction</c><00:16:39.390><c> is</c><00:16:39.810><c> available</c><00:16:40.230><c> if</c><00:16:40.410><c> you</c>

00:16:40.520 --> 00:16:40.530 align:start position:0%
this instruction is available if you
 

00:16:40.530 --> 00:16:43.310 align:start position:0%
this instruction is available if you
specify<00:16:40.980><c> the</c><00:16:41.040><c> g5</c><00:16:41.430><c> architecture</c><00:16:42.030><c> this</c><00:16:43.020><c> has</c>

00:16:43.310 --> 00:16:43.320 align:start position:0%
specify the g5 architecture this has
 

00:16:43.320 --> 00:16:45.620 align:start position:0%
specify the g5 architecture this has
made<00:16:43.530><c> a</c><00:16:43.560><c> very</c><00:16:44.040><c> large</c><00:16:44.700><c> difference</c><00:16:45.180><c> in</c><00:16:45.360><c> some</c>

00:16:45.620 --> 00:16:45.630 align:start position:0%
made a very large difference in some
 

00:16:45.630 --> 00:16:47.540 align:start position:0%
made a very large difference in some
rate<00:16:45.900><c> racers</c><00:16:46.320><c> and</c><00:16:46.589><c> renders</c><00:16:46.890><c> and</c><00:16:47.280><c> other</c>

00:16:47.540 --> 00:16:47.550 align:start position:0%
rate racers and renders and other
 

00:16:47.550 --> 00:16:49.040 align:start position:0%
rate racers and renders and other
programs<00:16:47.760><c> that</c><00:16:48.060><c> have</c><00:16:48.180><c> looked</c><00:16:48.390><c> at</c><00:16:48.570><c> that</c><00:16:48.839><c> have</c>

00:16:49.040 --> 00:16:49.050 align:start position:0%
programs that have looked at that have
 

00:16:49.050 --> 00:16:52.480 align:start position:0%
programs that have looked at that have
heavy<00:16:49.320><c> dependence</c><00:16:49.860><c> on</c><00:16:50.130><c> square</c><00:16:50.460><c> root</c><00:16:51.320><c> if</c>

00:16:52.480 --> 00:16:52.490 align:start position:0%
heavy dependence on square root if
 

00:16:52.490 --> 00:16:55.730 align:start position:0%
heavy dependence on square root if
you're<00:16:53.490><c> using</c><00:16:53.670><c> 64-bit</c><00:16:54.300><c> integers</c><00:16:54.990><c> long</c><00:16:55.560><c> long</c>

00:16:55.730 --> 00:16:55.740 align:start position:0%
you're using 64-bit integers long long
 

00:16:55.740 --> 00:17:00.170 align:start position:0%
you're using 64-bit integers long long
cincy<00:16:56.960><c> you</c><00:16:57.960><c> can</c><00:16:58.080><c> turn</c><00:16:58.230><c> on</c><00:16:58.380><c> flags</c><00:16:58.770><c> to</c><00:16:59.550><c> specify</c>

00:17:00.170 --> 00:17:00.180 align:start position:0%
cincy you can turn on flags to specify
 

00:17:00.180 --> 00:17:02.660 align:start position:0%
cincy you can turn on flags to specify
that<00:17:00.330><c> you</c><00:17:00.450><c> have</c><00:17:00.690><c> a</c><00:17:00.960><c> 64-bit</c><00:17:01.800><c> machine</c><00:17:02.130><c> because</c>

00:17:02.660 --> 00:17:02.670 align:start position:0%
that you have a 64-bit machine because
 

00:17:02.670 --> 00:17:05.120 align:start position:0%
that you have a 64-bit machine because
you<00:17:02.790><c> g5</c><00:17:03.300><c> truly</c><00:17:03.660><c> does</c><00:17:03.810><c> have</c><00:17:03.990><c> 64-bit</c><00:17:04.589><c> integer</c>

00:17:05.120 --> 00:17:05.130 align:start position:0%
you g5 truly does have 64-bit integer
 

00:17:05.130 --> 00:17:07.819 align:start position:0%
you g5 truly does have 64-bit integer
registers<00:17:05.780><c> this</c><00:17:06.780><c> can</c><00:17:06.959><c> be</c><00:17:06.990><c> a</c><00:17:07.079><c> huge</c><00:17:07.530><c> difference</c>

00:17:07.819 --> 00:17:07.829 align:start position:0%
registers this can be a huge difference
 

00:17:07.829 --> 00:17:11.179 align:start position:0%
registers this can be a huge difference
for<00:17:08.160><c> code</c><00:17:09.170><c> compared</c><00:17:10.170><c> to</c><00:17:10.350><c> actually</c><00:17:10.920><c> breaking</c>

00:17:11.179 --> 00:17:11.189 align:start position:0%
for code compared to actually breaking
 

00:17:11.189 --> 00:17:14.210 align:start position:0%
for code compared to actually breaking
up<00:17:11.400><c> into</c><00:17:11.640><c> 32</c><00:17:11.970><c> byte</c><00:17:12.329><c> chunks</c><00:17:12.750><c> or</c><00:17:13.290><c> 32-bit</c><00:17:13.860><c> chunks</c>

00:17:14.210 --> 00:17:14.220 align:start position:0%
up into 32 byte chunks or 32-bit chunks
 

00:17:14.220 --> 00:17:17.870 align:start position:0%
up into 32 byte chunks or 32-bit chunks
sorry

00:17:17.870 --> 00:17:17.880 align:start position:0%
 
 

00:17:17.880 --> 00:17:21.569 align:start position:0%
 
so<00:17:18.880><c> again</c><00:17:19.059><c> the</c><00:17:19.449><c> system</c><00:17:19.870><c> as</c><00:17:20.049><c> and</c><00:17:20.769><c> the</c><00:17:20.889><c> chip</c><00:17:21.069><c> were</c>

00:17:21.569 --> 00:17:21.579 align:start position:0%
so again the system as and the chip were
 

00:17:21.579 --> 00:17:23.309 align:start position:0%
so again the system as and the chip were
designed<00:17:22.000><c> for</c><00:17:22.240><c> high</c><00:17:22.360><c> bandwidth</c><00:17:22.750><c> they</c><00:17:23.259><c> were</c>

00:17:23.309 --> 00:17:23.319 align:start position:0%
designed for high bandwidth they were
 

00:17:23.319 --> 00:17:24.960 align:start position:0%
designed for high bandwidth they were
designed<00:17:23.529><c> to</c><00:17:23.889><c> do</c><00:17:24.159><c> lots</c><00:17:24.459><c> of</c><00:17:24.639><c> things</c><00:17:24.699><c> in</c>

00:17:24.960 --> 00:17:24.970 align:start position:0%
designed to do lots of things in
 

00:17:24.970 --> 00:17:27.059 align:start position:0%
designed to do lots of things in
parallel<00:17:25.500><c> it's</c><00:17:26.500><c> part</c><00:17:26.709><c> of</c><00:17:26.740><c> the</c><00:17:26.829><c> server</c>

00:17:27.059 --> 00:17:27.069 align:start position:0%
parallel it's part of the server
 

00:17:27.069 --> 00:17:29.850 align:start position:0%
parallel it's part of the server
heritage<00:17:27.669><c> coming</c><00:17:28.269><c> from</c><00:17:28.389><c> the</c><00:17:28.509><c> power</c><00:17:28.659><c> for</c><00:17:28.990><c> you</c>

00:17:29.850 --> 00:17:29.860 align:start position:0%
heritage coming from the power for you
 

00:17:29.860 --> 00:17:31.620 align:start position:0%
heritage coming from the power for you
have<00:17:29.980><c> 40</c><00:17:30.250><c> gigabytes</c><00:17:30.639><c> per</c><00:17:30.820><c> second</c><00:17:31.179><c> to</c><00:17:31.269><c> the</c><00:17:31.360><c> l1</c>

00:17:31.620 --> 00:17:31.630 align:start position:0%
have 40 gigabytes per second to the l1
 

00:17:31.630 --> 00:17:33.570 align:start position:0%
have 40 gigabytes per second to the l1
cache<00:17:31.840><c> up</c><00:17:32.169><c> to</c><00:17:32.409><c> 80</c><00:17:32.559><c> gigabytes</c><00:17:32.889><c> per</c><00:17:33.220><c> second</c>

00:17:33.570 --> 00:17:33.580 align:start position:0%
cache up to 80 gigabytes per second
 

00:17:33.580 --> 00:17:35.759 align:start position:0%
cache up to 80 gigabytes per second
between<00:17:33.789><c> the</c><00:17:33.970><c> caches</c><00:17:34.360><c> and</c><00:17:34.539><c> up</c><00:17:35.470><c> to</c><00:17:35.590><c> five</c>

00:17:35.759 --> 00:17:35.769 align:start position:0%
between the caches and up to five
 

00:17:35.769 --> 00:17:37.470 align:start position:0%
between the caches and up to five
gigabytes<00:17:36.159><c> per</c><00:17:36.460><c> second</c><00:17:36.820><c> to</c><00:17:37.000><c> and</c><00:17:37.149><c> from</c><00:17:37.269><c> main</c>

00:17:37.470 --> 00:17:37.480 align:start position:0%
gigabytes per second to and from main
 

00:17:37.480 --> 00:17:41.519 align:start position:0%
gigabytes per second to and from main
memory<00:17:38.340><c> and</c><00:17:39.340><c> the</c><00:17:39.509><c> way</c><00:17:40.509><c> you</c><00:17:40.570><c> want</c><00:17:40.840><c> to</c><00:17:41.019><c> take</c>

00:17:41.519 --> 00:17:41.529 align:start position:0%
memory and the way you want to take
 

00:17:41.529 --> 00:17:42.779 align:start position:0%
memory and the way you want to take
advantage<00:17:41.919><c> of</c><00:17:41.980><c> all</c><00:17:42.100><c> this</c><00:17:42.220><c> theoretical</c>

00:17:42.779 --> 00:17:42.789 align:start position:0%
advantage of all this theoretical
 

00:17:42.789 --> 00:17:44.399 align:start position:0%
advantage of all this theoretical
throughput<00:17:42.940><c> and</c><00:17:43.360><c> put</c><00:17:43.509><c> it</c><00:17:43.600><c> into</c><00:17:43.720><c> practice</c><00:17:43.960><c> is</c>

00:17:44.399 --> 00:17:44.409 align:start position:0%
throughput and put it into practice is
 

00:17:44.409 --> 00:17:46.470 align:start position:0%
throughput and put it into practice is
to<00:17:45.009><c> take</c><00:17:45.190><c> advantage</c><00:17:45.580><c> of</c><00:17:45.669><c> hardware</c><00:17:46.059><c> prefetch</c>

00:17:46.470 --> 00:17:46.480 align:start position:0%
to take advantage of hardware prefetch
 

00:17:46.480 --> 00:17:48.509 align:start position:0%
to take advantage of hardware prefetch
engines<00:17:46.899><c> so</c><00:17:47.710><c> these</c><00:17:47.860><c> will</c><00:17:48.009><c> start</c><00:17:48.250><c> scooping</c>

00:17:48.509 --> 00:17:48.519 align:start position:0%
engines so these will start scooping
 

00:17:48.519 --> 00:17:50.310 align:start position:0%
engines so these will start scooping
data<00:17:48.850><c> out</c><00:17:49.029><c> of</c><00:17:49.059><c> main</c><00:17:49.330><c> memory</c><00:17:49.360><c> and</c><00:17:49.779><c> bringing</c><00:17:50.080><c> to</c>

00:17:50.310 --> 00:17:50.320 align:start position:0%
data out of main memory and bringing to
 

00:17:50.320 --> 00:17:53.210 align:start position:0%
data out of main memory and bringing to
cash<00:17:50.559><c> before</c><00:17:50.860><c> you</c><00:17:51.129><c> actually</c><00:17:51.309><c> need</c><00:17:51.639><c> it</c><00:17:51.929><c> and</c>

00:17:53.210 --> 00:17:53.220 align:start position:0%
cash before you actually need it and
 

00:17:53.220 --> 00:17:56.820 align:start position:0%
cash before you actually need it and
that's<00:17:54.220><c> all</c><00:17:54.580><c> I</c><00:17:54.639><c> have</c><00:17:54.850><c> so</c><00:17:55.450><c> with</c><00:17:55.690><c> that</c><00:17:55.840><c> I'd</c><00:17:56.769><c> like</c>

00:17:56.820 --> 00:17:56.830 align:start position:0%
that's all I have so with that I'd like
 

00:17:56.830 --> 00:17:59.129 align:start position:0%
that's all I have so with that I'd like
to<00:17:56.950><c> introduce</c><00:17:57.190><c> Steve</c><00:17:57.610><c> vaquita</c><00:17:57.940><c> from</c><00:17:58.450><c> the</c><00:17:58.809><c> IBM</c>

00:17:59.129 --> 00:17:59.139 align:start position:0%
to introduce Steve vaquita from the IBM
 

00:17:59.139 --> 00:18:08.299 align:start position:0%
to introduce Steve vaquita from the IBM
compiler<00:17:59.559><c> team</c><00:18:04.830><c> learning</c><00:18:05.830><c> all</c><00:18:06.240><c> good</c><00:18:07.240><c> morning</c>

00:18:08.299 --> 00:18:08.309 align:start position:0%
compiler team learning all good morning
 

00:18:08.309 --> 00:18:11.369 align:start position:0%
compiler team learning all good morning
I'm<00:18:09.309><c> actually</c><00:18:09.669><c> very</c><00:18:10.029><c> excited</c><00:18:10.330><c> to</c><00:18:10.690><c> be</c><00:18:10.840><c> here</c><00:18:11.139><c> as</c>

00:18:11.369 --> 00:18:11.379 align:start position:0%
I'm actually very excited to be here as
 

00:18:11.379 --> 00:18:14.369 align:start position:0%
I'm actually very excited to be here as
we<00:18:12.159><c> have</c><00:18:12.279><c> now</c><00:18:12.429><c> introduced</c><00:18:13.000><c> our</c><00:18:13.210><c> Excel</c><00:18:13.779><c> C</c><00:18:14.139><c> C++</c>

00:18:14.369 --> 00:18:14.379 align:start position:0%
we have now introduced our Excel C C++
 

00:18:14.379 --> 00:18:16.980 align:start position:0%
we have now introduced our Excel C C++
and<00:18:14.649><c> Fortran</c><00:18:15.340><c> compilers</c><00:18:15.940><c> for</c><00:18:16.179><c> the</c><00:18:16.690><c> macro</c>

00:18:16.980 --> 00:18:16.990 align:start position:0%
and Fortran compilers for the macro
 

00:18:16.990 --> 00:18:19.230 align:start position:0%
and Fortran compilers for the macro
effects<00:18:17.320><c> or</c><00:18:17.980><c> of</c><00:18:18.250><c> what</c><00:18:18.460><c> so</c><00:18:18.610><c> it's</c><00:18:18.759><c> 10</c><00:18:18.970><c> my</c>

00:18:19.230 --> 00:18:19.240 align:start position:0%
effects or of what so it's 10 my
 

00:18:19.240 --> 00:18:25.279 align:start position:0%
effects or of what so it's 10 my
apologies<00:18:21.659><c> so</c><00:18:22.659><c> I</c><00:18:22.690><c> be</c><00:18:22.960><c> in</c><00:18:23.049><c> compiler</c><00:18:23.440><c> technology</c>

00:18:25.279 --> 00:18:25.289 align:start position:0%
apologies so I be in compiler technology
 

00:18:25.289 --> 00:18:27.119 align:start position:0%
apologies so I be in compiler technology
we've<00:18:26.289><c> been</c><00:18:26.409><c> in</c><00:18:26.529><c> the</c><00:18:26.740><c> business</c><00:18:26.919><c> of</c>

00:18:27.119 --> 00:18:27.129 align:start position:0%
we've been in the business of
 

00:18:27.129 --> 00:18:29.279 align:start position:0%
we've been in the business of
compilation<00:18:27.909><c> technologies</c><00:18:28.480><c> for</c><00:18:28.690><c> over</c><00:18:28.840><c> 15</c>

00:18:29.279 --> 00:18:29.289 align:start position:0%
compilation technologies for over 15
 

00:18:29.289 --> 00:18:33.149 align:start position:0%
compilation technologies for over 15
years<00:18:29.500><c> and</c><00:18:30.090><c> exploiting</c><00:18:31.559><c> primarily</c><00:18:32.559><c> PowerPC</c>

00:18:33.149 --> 00:18:33.159 align:start position:0%
years and exploiting primarily PowerPC
 

00:18:33.159 --> 00:18:36.330 align:start position:0%
years and exploiting primarily PowerPC
technology<00:18:34.139><c> but</c><00:18:35.139><c> we</c><00:18:35.259><c> also</c><00:18:35.409><c> been</c><00:18:35.679><c> on</c><00:18:35.860><c> about</c>

00:18:36.330 --> 00:18:36.340 align:start position:0%
technology but we also been on about
 

00:18:36.340 --> 00:18:38.639 align:start position:0%
technology but we also been on about
enough<00:18:36.580><c> nine</c><00:18:36.909><c> other</c><00:18:37.179><c> platforms</c><00:18:37.870><c> mainly</c><00:18:38.289><c> IBM</c>

00:18:38.639 --> 00:18:38.649 align:start position:0%
enough nine other platforms mainly IBM
 

00:18:38.649 --> 00:18:42.360 align:start position:0%
enough nine other platforms mainly IBM
platforms<00:18:39.690><c> in</c><00:18:40.710><c> among</c><00:18:41.710><c> all</c><00:18:41.860><c> this</c><00:18:42.039><c> technology</c>

00:18:42.360 --> 00:18:42.370 align:start position:0%
platforms in among all this technology
 

00:18:42.370 --> 00:18:44.909 align:start position:0%
platforms in among all this technology
we've<00:18:42.850><c> got</c><00:18:43.029><c> numerous</c><00:18:43.539><c> types</c><00:18:44.019><c> of</c><00:18:44.230><c> optimization</c>

00:18:44.909 --> 00:18:44.919 align:start position:0%
we've got numerous types of optimization
 

00:18:44.919 --> 00:18:48.119 align:start position:0%
we've got numerous types of optimization
patents<00:18:45.370><c> that</c><00:18:45.750><c> truly</c><00:18:46.750><c> exploit</c><00:18:47.169><c> the</c><00:18:47.559><c> PowerPC</c>

00:18:48.119 --> 00:18:48.129 align:start position:0%
patents that truly exploit the PowerPC
 

00:18:48.129 --> 00:18:52.560 align:start position:0%
patents that truly exploit the PowerPC
technology<00:18:49.950><c> our</c><00:18:50.950><c> goal</c><00:18:51.220><c> in</c><00:18:51.399><c> arc</c><00:18:51.759><c> and</c><00:18:52.179><c> the</c><00:18:52.269><c> idea</c>

00:18:52.560 --> 00:18:52.570 align:start position:0%
technology our goal in arc and the idea
 

00:18:52.570 --> 00:18:55.169 align:start position:0%
technology our goal in arc and the idea
compiler<00:18:53.049><c> team</c><00:18:53.679><c> is</c><00:18:53.950><c> actually</c><00:18:54.370><c> threefold</c><00:18:54.759><c> the</c>

00:18:55.169 --> 00:18:55.179 align:start position:0%
compiler team is actually threefold the
 

00:18:55.179 --> 00:18:57.600 align:start position:0%
compiler team is actually threefold the
first<00:18:55.389><c> one</c><00:18:55.600><c> is</c><00:18:55.629><c> to</c><00:18:56.230><c> exploit</c><00:18:56.799><c> the</c><00:18:57.009><c> hardware</c><00:18:57.429><c> are</c>

00:18:57.600 --> 00:18:57.610 align:start position:0%
first one is to exploit the hardware are
 

00:18:57.610 --> 00:19:01.529 align:start position:0%
first one is to exploit the hardware are
our<00:18:58.029><c> actual</c><00:18:58.960><c> key</c><00:18:59.440><c> here</c><00:18:59.830><c> is</c><00:18:59.860><c> to</c><00:19:00.309><c> drive</c><00:19:01.059><c> out</c><00:19:01.299><c> the</c>

00:19:01.529 --> 00:19:01.539 align:start position:0%
our actual key here is to drive out the
 

00:19:01.539 --> 00:19:03.570 align:start position:0%
our actual key here is to drive out the
you<00:19:01.779><c> know</c><00:19:01.840><c> the</c><00:19:01.990><c> maximum</c><00:19:02.860><c> performance</c><00:19:03.039><c> we</c><00:19:03.460><c> can</c>

00:19:03.570 --> 00:19:03.580 align:start position:0%
you know the maximum performance we can
 

00:19:03.580 --> 00:19:06.860 align:start position:0%
you know the maximum performance we can
possibly<00:19:03.789><c> get</c><00:19:04.120><c> out</c><00:19:04.389><c> of</c><00:19:04.720><c> the</c><00:19:05.169><c> g5</c><00:19:05.559><c> processor</c>

00:19:06.860 --> 00:19:06.870 align:start position:0%
possibly get out of the g5 processor
 

00:19:06.870 --> 00:19:09.389 align:start position:0%
possibly get out of the g5 processor
among<00:19:07.870><c> these</c><00:19:08.049><c> things</c><00:19:08.289><c> then</c><00:19:08.440><c> we</c><00:19:08.559><c> have</c><00:19:09.220><c> an</c>

00:19:09.389 --> 00:19:09.399 align:start position:0%
among these things then we have an
 

00:19:09.399 --> 00:19:11.430 align:start position:0%
among these things then we have an
extensive<00:19:09.610><c> portfolio</c><00:19:10.120><c> of</c><00:19:10.600><c> optimizations</c>

00:19:11.430 --> 00:19:11.440 align:start position:0%
extensive portfolio of optimizations
 

00:19:11.440 --> 00:19:13.470 align:start position:0%
extensive portfolio of optimizations
these<00:19:12.429><c> include</c><00:19:12.879><c> things</c><00:19:13.360><c> like</c>

00:19:13.470 --> 00:19:13.480 align:start position:0%
these include things like
 

00:19:13.480 --> 00:19:15.720 align:start position:0%
these include things like
interprocedural<00:19:14.470><c> analysis</c><00:19:15.220><c> which</c><00:19:15.490><c> does</c>

00:19:15.720 --> 00:19:15.730 align:start position:0%
interprocedural analysis which does
 

00:19:15.730 --> 00:19:20.430 align:start position:0%
interprocedural analysis which does
whole<00:19:16.149><c> loop</c><00:19:16.360><c> from</c><00:19:17.279><c> program</c><00:19:18.509><c> analysis</c><00:19:19.509><c> it</c><00:19:20.049><c> has</c>

00:19:20.430 --> 00:19:20.440 align:start position:0%
whole loop from program analysis it has
 

00:19:20.440 --> 00:19:25.590 align:start position:0%
whole loop from program analysis it has
the<00:19:21.929><c> profile</c><00:19:22.929><c> directed</c><00:19:23.320><c> feedback</c><00:19:24.600><c> loop</c>

00:19:25.590 --> 00:19:25.600 align:start position:0%
the profile directed feedback loop
 

00:19:25.600 --> 00:19:27.360 align:start position:0%
the profile directed feedback loop
optimizations<00:19:26.379><c> for</c><00:19:26.470><c> parallels</c><00:19:27.129><c> and</c>

00:19:27.360 --> 00:19:27.370 align:start position:0%
optimizations for parallels and
 

00:19:27.370 --> 00:19:30.060 align:start position:0%
optimizations for parallels and
instructions<00:19:28.330><c> and</c><00:19:28.600><c> all</c><00:19:29.169><c> for</c><00:19:29.470><c> locality</c>

00:19:30.060 --> 00:19:30.070 align:start position:0%
instructions and all for locality
 

00:19:30.070 --> 00:19:33.710 align:start position:0%
instructions and all for locality
scheduling

00:19:33.710 --> 00:19:33.720 align:start position:0%
 
 

00:19:33.720 --> 00:19:38.190 align:start position:0%
 
and<00:19:35.850><c> one</c><00:19:36.850><c> of</c><00:19:36.940><c> the</c><00:19:37.000><c> things</c><00:19:37.060><c> that</c><00:19:37.300><c> we</c><00:19:37.480><c> do</c><00:19:37.660><c> regular</c>

00:19:38.190 --> 00:19:38.200 align:start position:0%
and one of the things that we do regular
 

00:19:38.200 --> 00:19:40.170 align:start position:0%
and one of the things that we do regular
is<00:19:38.380><c> we</c><00:19:38.770><c> actually</c><00:19:38.890><c> work</c><00:19:39.220><c> very</c><00:19:39.550><c> closely</c><00:19:39.880><c> with</c>

00:19:40.170 --> 00:19:40.180 align:start position:0%
is we actually work very closely with
 

00:19:40.180 --> 00:19:43.050 align:start position:0%
is we actually work very closely with
the<00:19:40.630><c> the</c><00:19:41.200><c> chip</c><00:19:41.680><c> architecture</c><00:19:42.250><c> team</c><00:19:42.460><c> where</c>

00:19:43.050 --> 00:19:43.060 align:start position:0%
the the chip architecture team where
 

00:19:43.060 --> 00:19:45.330 align:start position:0%
the the chip architecture team where
we've<00:19:43.360><c> been</c><00:19:43.480><c> working</c><00:19:43.720><c> with</c><00:19:43.930><c> with</c><00:19:44.710><c> the</c><00:19:44.920><c> core</c>

00:19:45.330 --> 00:19:45.340 align:start position:0%
we've been working with with the core
 

00:19:45.340 --> 00:19:46.650 align:start position:0%
we've been working with with the core
team<00:19:45.520><c> that</c><00:19:45.790><c> actually</c><00:19:45.850><c> developed</c><00:19:46.330><c> the</c><00:19:46.420><c> chips</c>

00:19:46.650 --> 00:19:46.660 align:start position:0%
team that actually developed the chips
 

00:19:46.660 --> 00:19:50.250 align:start position:0%
team that actually developed the chips
and<00:19:47.250><c> provide</c><00:19:48.250><c> them</c><00:19:48.550><c> with</c><00:19:48.880><c> information</c><00:19:49.570><c> as</c><00:19:50.230><c> to</c>

00:19:50.250 --> 00:19:50.260 align:start position:0%
and provide them with information as to
 

00:19:50.260 --> 00:19:51.990 align:start position:0%
and provide them with information as to
what<00:19:50.800><c> ways</c><00:19:51.070><c> that</c><00:19:51.310><c> they</c><00:19:51.430><c> may</c><00:19:51.580><c> want</c><00:19:51.730><c> to</c><00:19:51.820><c> change</c>

00:19:51.990 --> 00:19:52.000 align:start position:0%
what ways that they may want to change
 

00:19:52.000 --> 00:19:54.870 align:start position:0%
what ways that they may want to change
the<00:19:52.330><c> actual</c><00:19:52.420><c> chip</c><00:19:52.930><c> versus</c><00:19:53.620><c> also</c><00:19:54.010><c> the</c><00:19:54.520><c> type</c><00:19:54.850><c> of</c>

00:19:54.870 --> 00:19:54.880 align:start position:0%
the actual chip versus also the type of
 

00:19:54.880 --> 00:19:57.360 align:start position:0%
the actual chip versus also the type of
information<00:19:55.210><c> that</c><00:19:55.510><c> we</c><00:19:56.110><c> can</c><00:19:56.290><c> exploit</c><00:19:56.620><c> within</c>

00:19:57.360 --> 00:19:57.370 align:start position:0%
information that we can exploit within
 

00:19:57.370 --> 00:20:03.000 align:start position:0%
information that we can exploit within
our<00:19:57.490><c> own</c><00:19:57.520><c> compilers</c><00:20:01.530><c> the</c><00:20:02.530><c> second</c><00:20:02.830><c> thing</c><00:20:02.980><c> that</c>

00:20:03.000 --> 00:20:03.010 align:start position:0%
our own compilers the second thing that
 

00:20:03.010 --> 00:20:05.630 align:start position:0%
our own compilers the second thing that
our<00:20:03.190><c> compiler</c><00:20:03.790><c> group</c><00:20:03.970><c> really</c><00:20:04.300><c> focused</c><00:20:04.660><c> on</c><00:20:04.750><c> is</c>

00:20:05.630 --> 00:20:05.640 align:start position:0%
our compiler group really focused on is
 

00:20:05.640 --> 00:20:10.110 align:start position:0%
our compiler group really focused on is
specifications<00:20:06.640><c> and</c><00:20:06.790><c> standards</c><00:20:08.040><c> for</c><00:20:09.040><c> our</c><00:20:09.700><c> CMT</c>

00:20:10.110 --> 00:20:10.120 align:start position:0%
specifications and standards for our CMT
 

00:20:10.120 --> 00:20:15.750 align:start position:0%
specifications and standards for our CMT
plus<00:20:10.330><c> plus</c><00:20:10.570><c> we</c><00:20:11.050><c> are</c><00:20:11.370><c> si</c><00:20:12.370><c> si</c><00:20:12.910><c> 1999</c><00:20:13.900><c> and</c><00:20:14.140><c> C++</c><00:20:14.770><c> 1998</c>

00:20:15.750 --> 00:20:15.760 align:start position:0%
plus plus we are si si 1999 and C++ 1998
 

00:20:15.760 --> 00:20:19.560 align:start position:0%
plus plus we are si si 1999 and C++ 1998
compliant<00:20:16.480><c> for</c><00:20:17.440><c> fortran</c><00:20:17.860><c> word</c><00:20:18.130><c> fortune</c><00:20:18.760><c> 70</c><00:20:19.210><c> 90</c>

00:20:19.560 --> 00:20:19.570 align:start position:0%
compliant for fortran word fortune 70 90
 

00:20:19.570 --> 00:20:24.570 align:start position:0%
compliant for fortran word fortune 70 90
95<00:20:20.080><c> and</c><00:20:20.440><c> partial</c><00:20:21.040><c> 2003</c><00:20:22.140><c> we</c><00:20:23.140><c> also</c><00:20:23.290><c> have</c><00:20:23.580><c> openmp</c>

00:20:24.570 --> 00:20:24.580 align:start position:0%
95 and partial 2003 we also have openmp
 

00:20:24.580 --> 00:20:28.440 align:start position:0%
95 and partial 2003 we also have openmp
support<00:20:26.250><c> primary</c><00:20:27.250><c> that</c><00:20:27.430><c> what</c><00:20:27.880><c> that</c><00:20:28.030><c> was</c>

00:20:28.440 --> 00:20:28.450 align:start position:0%
support primary that what that was
 

00:20:28.450 --> 00:20:30.240 align:start position:0%
support primary that what that was
introduced<00:20:28.870><c> on</c><00:20:29.020><c> the</c><00:20:29.080><c> ax</c><00:20:29.470><c> platforms</c><00:20:29.980><c> and</c><00:20:30.130><c> we're</c>

00:20:30.240 --> 00:20:30.250 align:start position:0%
introduced on the ax platforms and we're
 

00:20:30.250 --> 00:20:32.310 align:start position:0%
introduced on the ax platforms and we're
bringing<00:20:30.550><c> it</c><00:20:30.820><c> over</c><00:20:30.880><c> to</c><00:20:31.330><c> the</c><00:20:31.480><c> mac</c><00:20:31.630><c> OS</c><00:20:31.840><c> x</c><00:20:31.960><c> also</c>

00:20:32.310 --> 00:20:32.320 align:start position:0%
bringing it over to the mac OS x also
 

00:20:32.320 --> 00:20:36.090 align:start position:0%
bringing it over to the mac OS x also
our<00:20:33.840><c> developers</c><00:20:34.840><c> within</c><00:20:35.170><c> our</c><00:20:35.320><c> C</c><00:20:35.500><c> C++</c><00:20:35.800><c> and</c>

00:20:36.090 --> 00:20:36.100 align:start position:0%
our developers within our C C++ and
 

00:20:36.100 --> 00:20:40.200 align:start position:0%
our developers within our C C++ and
Fortran<00:20:36.580><c> teams</c><00:20:36.850><c> are</c><00:20:38.250><c> also</c><00:20:39.250><c> representative</c><00:20:40.030><c> on</c>

00:20:40.200 --> 00:20:40.210 align:start position:0%
Fortran teams are also representative on
 

00:20:40.210 --> 00:20:43.050 align:start position:0%
Fortran teams are also representative on
the<00:20:40.270><c> standards</c><00:20:40.870><c> committee</c><00:20:41.730><c> there</c><00:20:42.730><c> are</c><00:20:42.910><c> also</c>

00:20:43.050 --> 00:20:43.060 align:start position:0%
the standards committee there are also
 

00:20:43.060 --> 00:20:44.970 align:start position:0%
the standards committee there are also
not<00:20:43.300><c> only</c><00:20:43.540><c> on</c><00:20:43.630><c> the</c><00:20:43.750><c> iso</c><00:20:44.050><c> standards</c><00:20:44.590><c> for</c><00:20:44.680><c> me</c><00:20:44.770><c> but</c>

00:20:44.970 --> 00:20:44.980 align:start position:0%
not only on the iso standards for me but
 

00:20:44.980 --> 00:20:49.820 align:start position:0%
not only on the iso standards for me but
they're<00:20:45.100><c> also</c><00:20:45.250><c> on</c><00:20:45.610><c> the</c><00:20:45.910><c> openmp</c><00:20:47.160><c> consortium</c><00:20:48.160><c> so</c>

00:20:49.820 --> 00:20:49.830 align:start position:0%
they're also on the openmp consortium so
 

00:20:49.830 --> 00:20:52.340 align:start position:0%
they're also on the openmp consortium so
being<00:20:50.830><c> really</c><00:20:51.190><c> focused</c><00:20:51.580><c> on</c><00:20:51.700><c> compatibility</c>

00:20:52.340 --> 00:20:52.350 align:start position:0%
being really focused on compatibility
 

00:20:52.350 --> 00:20:56.880 align:start position:0%
being really focused on compatibility
and<00:20:53.350><c> also</c><00:20:53.920><c> on</c><00:20:54.100><c> standard</c><00:20:55.060><c> specification</c><00:20:55.890><c> our</c>

00:20:56.880 --> 00:20:56.890 align:start position:0%
and also on standard specification our
 

00:20:56.890 --> 00:20:58.470 align:start position:0%
and also on standard specification our
compiler<00:20:57.280><c> develop</c><00:20:57.670><c> the</c><00:20:57.760><c> source</c><00:20:58.000><c> code</c><00:20:58.180><c> for</c><00:20:58.360><c> art</c>

00:20:58.470 --> 00:20:58.480 align:start position:0%
compiler develop the source code for art
 

00:20:58.480 --> 00:21:00.360 align:start position:0%
compiler develop the source code for art
that<00:20:58.960><c> can</c><00:20:59.110><c> be</c><00:20:59.320><c> pumped</c><00:20:59.710><c> through</c><00:20:59.800><c> our</c><00:20:59.890><c> compilers</c>

00:21:00.360 --> 00:21:00.370 align:start position:0%
that can be pumped through our compilers
 

00:21:00.370 --> 00:21:02.640 align:start position:0%
that can be pumped through our compilers
are<00:21:00.520><c> easily</c><00:21:01.300><c> portable</c><00:21:01.720><c> between</c><00:21:02.170><c> numerous</c>

00:21:02.640 --> 00:21:02.650 align:start position:0%
are easily portable between numerous
 

00:21:02.650 --> 00:21:05.580 align:start position:0%
are easily portable between numerous
platforms<00:21:03.190><c> for</c><00:21:03.730><c> example</c><00:21:04.090><c> Mac</c><00:21:04.330><c> OS</c><00:21:04.540><c> X</c><00:21:04.660><c> Linux</c><00:21:05.020><c> ax</c>

00:21:05.580 --> 00:21:05.590 align:start position:0%
platforms for example Mac OS X Linux ax
 

00:21:05.590 --> 00:21:10.290 align:start position:0%
platforms for example Mac OS X Linux ax
and<00:21:06.480><c> our</c><00:21:07.480><c> mainframe</c><00:21:07.750><c> 0s</c><00:21:08.910><c> the</c><00:21:09.910><c> third</c><00:21:10.150><c> thing</c>

00:21:10.290 --> 00:21:10.300 align:start position:0%
and our mainframe 0s the third thing
 

00:21:10.300 --> 00:21:13.800 align:start position:0%
and our mainframe 0s the third thing
that<00:21:10.360><c> we're</c><00:21:10.540><c> really</c><00:21:10.720><c> focused</c><00:21:11.140><c> on</c><00:21:11.260><c> is</c><00:21:11.940><c> is</c><00:21:12.940><c> the</c>

00:21:13.800 --> 00:21:13.810 align:start position:0%
that we're really focused on is is the
 

00:21:13.810 --> 00:21:17.730 align:start position:0%
that we're really focused on is is the
customer<00:21:14.650><c> care</c><00:21:15.720><c> we</c><00:21:16.720><c> work</c><00:21:16.900><c> very</c><00:21:16.930><c> closely</c><00:21:17.350><c> with</c>

00:21:17.730 --> 00:21:17.740 align:start position:0%
customer care we work very closely with
 

00:21:17.740 --> 00:21:20.880 align:start position:0%
customer care we work very closely with
various<00:21:18.400><c> ISVs</c><00:21:19.030><c> and</c><00:21:19.330><c> also</c><00:21:19.650><c> customers</c><00:21:20.650><c> on</c>

00:21:20.880 --> 00:21:20.890 align:start position:0%
various ISVs and also customers on
 

00:21:20.890 --> 00:21:22.740 align:start position:0%
various ISVs and also customers on
tuning<00:21:21.340><c> the</c><00:21:21.460><c> code</c><00:21:21.670><c> matter</c><00:21:22.300><c> of</c><00:21:22.360><c> fact</c><00:21:22.510><c> we're</c>

00:21:22.740 --> 00:21:22.750 align:start position:0%
tuning the code matter of fact we're
 

00:21:22.750 --> 00:21:26.430 align:start position:0%
tuning the code matter of fact we're
down<00:21:22.990><c> in</c><00:21:23.020><c> the</c><00:21:23.200><c> optimization</c><00:21:23.680><c> lab</c><00:21:25.230><c> all</c><00:21:26.230><c> this</c>

00:21:26.430 --> 00:21:26.440 align:start position:0%
down in the optimization lab all this
 

00:21:26.440 --> 00:21:28.890 align:start position:0%
down in the optimization lab all this
week<00:21:26.650><c> and</c><00:21:27.180><c> some</c><00:21:28.180><c> of</c><00:21:28.270><c> our</c><00:21:28.360><c> engineers</c><00:21:28.510><c> have</c><00:21:28.870><c> been</c>

00:21:28.890 --> 00:21:28.900 align:start position:0%
week and some of our engineers have been
 

00:21:28.900 --> 00:21:30.450 align:start position:0%
week and some of our engineers have been
working<00:21:29.020><c> very</c><00:21:29.290><c> closely</c><00:21:29.650><c> with</c><00:21:29.860><c> people</c><00:21:30.400><c> that</c>

00:21:30.450 --> 00:21:30.460 align:start position:0%
working very closely with people that
 

00:21:30.460 --> 00:21:31.530 align:start position:0%
working very closely with people that
have<00:21:30.520><c> brought</c><00:21:30.730><c> in</c><00:21:30.880><c> their</c><00:21:30.970><c> code</c><00:21:31.210><c> and</c><00:21:31.450><c> we've</c>

00:21:31.530 --> 00:21:31.540 align:start position:0%
have brought in their code and we've
 

00:21:31.540 --> 00:21:33.600 align:start position:0%
have brought in their code and we've
actually<00:21:31.900><c> seen</c><00:21:32.560><c> markups</c><00:21:33.040><c> from</c><00:21:33.310><c> anywhere</c>

00:21:33.600 --> 00:21:33.610 align:start position:0%
actually seen markups from anywhere
 

00:21:33.610 --> 00:21:35.160 align:start position:0%
actually seen markups from anywhere
between<00:21:33.760><c> twenty</c><00:21:34.210><c> percent</c><00:21:34.540><c> and</c><00:21:34.750><c> two</c><00:21:34.960><c> hundred</c>

00:21:35.160 --> 00:21:35.170 align:start position:0%
between twenty percent and two hundred
 

00:21:35.170 --> 00:21:36.870 align:start position:0%
between twenty percent and two hundred
percent<00:21:35.530><c> even</c><00:21:36.040><c> in</c><00:21:36.130><c> a</c><00:21:36.190><c> short</c><00:21:36.460><c> period</c><00:21:36.490><c> of</c><00:21:36.790><c> time</c>

00:21:36.870 --> 00:21:36.880 align:start position:0%
percent even in a short period of time
 

00:21:36.880 --> 00:21:39.300 align:start position:0%
percent even in a short period of time
by<00:21:37.330><c> using</c><00:21:37.900><c> our</c><00:21:38.110><c> compilers</c><00:21:38.620><c> to</c><00:21:38.830><c> exploit</c><00:21:39.130><c> their</c>

00:21:39.300 --> 00:21:39.310 align:start position:0%
by using our compilers to exploit their
 

00:21:39.310 --> 00:21:44.880 align:start position:0%
by using our compilers to exploit their
code

00:21:44.880 --> 00:21:44.890 align:start position:0%
 
 

00:21:44.890 --> 00:21:48.580 align:start position:0%
 
so<00:21:45.890><c> for</c><00:21:46.580><c> the</c><00:21:46.820><c> C</c><00:21:46.970><c> C++</c><00:21:47.210><c> and</c><00:21:47.690><c> Fortran</c><00:21:48.170><c> compilers</c>

00:21:48.580 --> 00:21:48.590 align:start position:0%
so for the C C++ and Fortran compilers
 

00:21:48.590 --> 00:21:52.450 align:start position:0%
so for the C C++ and Fortran compilers
on<00:21:48.800><c> Mac</c><00:21:49.250><c> OS</c><00:21:49.280><c> 10</c><00:21:50.050><c> they</c><00:21:51.050><c> are</c><00:21:51.200><c> based</c><00:21:51.560><c> on</c><00:21:51.830><c> our</c><00:21:52.280><c> act</c>

00:21:52.450 --> 00:21:52.460 align:start position:0%
on Mac OS 10 they are based on our act
 

00:21:52.460 --> 00:21:56.080 align:start position:0%
on Mac OS 10 they are based on our act
ra<00:21:52.700><c> X</c><00:21:53.210><c> and</c><00:21:53.420><c> Linux</c><00:21:53.660><c> compilers</c><00:21:54.260><c> on</c><00:21:55.010><c> ax</c><00:21:55.460><c> and</c><00:21:55.790><c> Linux</c>

00:21:56.080 --> 00:21:56.090 align:start position:0%
ra X and Linux compilers on ax and Linux
 

00:21:56.090 --> 00:21:58.240 align:start position:0%
ra X and Linux compilers on ax and Linux
we<00:21:56.330><c> call</c><00:21:56.510><c> it</c><00:21:56.630><c> right</c><00:21:56.750><c> now</c><00:21:56.930><c> visual</c><00:21:57.440><c> HD</c><00:21:57.770><c> plus</c><00:21:58.010><c> plus</c>

00:21:58.240 --> 00:21:58.250 align:start position:0%
we call it right now visual HD plus plus
 

00:21:58.250 --> 00:22:00.850 align:start position:0%
we call it right now visual HD plus plus
so<00:21:58.670><c> the</c><00:21:58.790><c> visual</c><00:21:59.030><c> a</c><00:21:59.090><c> C++</c><00:21:59.630><c> those</c><00:22:00.110><c> platforms</c><00:22:00.410><c> are</c>

00:22:00.850 --> 00:22:00.860 align:start position:0%
so the visual a C++ those platforms are
 

00:22:00.860 --> 00:22:02.980 align:start position:0%
so the visual a C++ those platforms are
essentially<00:22:01.460><c> the</c><00:22:01.490><c> same</c><00:22:01.610><c> compilers</c><00:22:02.450><c> that</c><00:22:02.900><c> we</c>

00:22:02.980 --> 00:22:02.990 align:start position:0%
essentially the same compilers that we
 

00:22:02.990 --> 00:22:06.550 align:start position:0%
essentially the same compilers that we
have<00:22:03.170><c> for</c><00:22:03.440><c> Mac</c><00:22:03.980><c> OS</c><00:22:04.010><c> 10</c><00:22:04.430><c> platform</c><00:22:05.020><c> so</c><00:22:06.020><c> this</c><00:22:06.170><c> this</c>

00:22:06.550 --> 00:22:06.560 align:start position:0%
have for Mac OS 10 platform so this this
 

00:22:06.560 --> 00:22:09.190 align:start position:0%
have for Mac OS 10 platform so this this
actually<00:22:07.120><c> leverages</c><00:22:08.120><c> all</c><00:22:08.510><c> the</c><00:22:08.720><c> proven</c>

00:22:09.190 --> 00:22:09.200 align:start position:0%
actually leverages all the proven
 

00:22:09.200 --> 00:22:11.470 align:start position:0%
actually leverages all the proven
optimizations<00:22:10.190><c> and</c><00:22:10.480><c> language</c>

00:22:11.470 --> 00:22:11.480 align:start position:0%
optimizations and language
 

00:22:11.480 --> 00:22:12.880 align:start position:0%
optimizations and language
specifications<00:22:12.230><c> that</c><00:22:12.350><c> we've</c><00:22:12.710><c> already</c>

00:22:12.880 --> 00:22:12.890 align:start position:0%
specifications that we've already
 

00:22:12.890 --> 00:22:15.640 align:start position:0%
specifications that we've already
introduced<00:22:13.400><c> on</c><00:22:13.550><c> those</c><00:22:13.700><c> platforms</c><00:22:14.530><c> some</c><00:22:15.530><c> of</c>

00:22:15.640 --> 00:22:15.650 align:start position:0%
introduced on those platforms some of
 

00:22:15.650 --> 00:22:17.440 align:start position:0%
introduced on those platforms some of
the<00:22:15.710><c> common</c><00:22:15.980><c> things</c><00:22:16.130><c> between</c><00:22:16.550><c> our</c><00:22:16.880><c> XL</c><00:22:17.180><c> C</c><00:22:17.300><c> and</c>

00:22:17.440 --> 00:22:17.450 align:start position:0%
the common things between our XL C and
 

00:22:17.450 --> 00:22:20.590 align:start position:0%
the common things between our XL C and
C++<00:22:17.570><c> compilers</c><00:22:18.260><c> and</c><00:22:18.430><c> Fortran</c><00:22:19.430><c> is</c><00:22:19.610><c> as</c><00:22:20.450><c> I</c>

00:22:20.590 --> 00:22:20.600 align:start position:0%
C++ compilers and Fortran is as I
 

00:22:20.600 --> 00:22:22.330 align:start position:0%
C++ compilers and Fortran is as I
mentioned<00:22:20.630><c> already</c><00:22:20.990><c> exploitation</c><00:22:21.800><c> of</c><00:22:21.890><c> the</c><00:22:22.040><c> g5</c>

00:22:22.330 --> 00:22:22.340 align:start position:0%
mentioned already exploitation of the g5
 

00:22:22.340 --> 00:22:25.240 align:start position:0%
mentioned already exploitation of the g5
architecture<00:22:23.590><c> we</c><00:22:24.590><c> are</c><00:22:24.710><c> integrated</c><00:22:25.220><c> with</c>

00:22:25.240 --> 00:22:25.250 align:start position:0%
architecture we are integrated with
 

00:22:25.250 --> 00:22:29.620 align:start position:0%
architecture we are integrated with
Xcode<00:22:26.650><c> symbolic</c><00:22:27.650><c> language</c><00:22:27.830><c> GTV</c><00:22:28.370><c> and</c><00:22:28.580><c> also</c><00:22:29.390><c> we</c>

00:22:29.620 --> 00:22:29.630 align:start position:0%
Xcode symbolic language GTV and also we
 

00:22:29.630 --> 00:22:32.500 align:start position:0%
Xcode symbolic language GTV and also we
support<00:22:30.140><c> a</c><00:22:30.350><c> number</c><00:22:30.770><c> of</c><00:22:30.860><c> the</c><00:22:31.060><c> apples</c><00:22:32.060><c> profiling</c>

00:22:32.500 --> 00:22:32.510 align:start position:0%
support a number of the apples profiling
 

00:22:32.510 --> 00:22:34.210 align:start position:0%
support a number of the apples profiling
tools<00:22:32.690><c> the</c><00:22:32.990><c> shark</c><00:22:33.410><c> one</c><00:22:33.590><c> in</c><00:22:33.680><c> particular</c><00:22:33.830><c> is</c>

00:22:34.210 --> 00:22:34.220 align:start position:0%
tools the shark one in particular is
 

00:22:34.220 --> 00:22:37.300 align:start position:0%
tools the shark one in particular is
just<00:22:34.940><c> an</c><00:22:35.150><c> outstanding</c><00:22:35.860><c> expanding</c><00:22:36.860><c> tool</c><00:22:37.070><c> and</c>

00:22:37.300 --> 00:22:37.310 align:start position:0%
just an outstanding expanding tool and
 

00:22:37.310 --> 00:22:40.030 align:start position:0%
just an outstanding expanding tool and
helping<00:22:37.640><c> tune</c><00:22:37.850><c> your</c><00:22:38.060><c> code</c><00:22:38.270><c> you</c><00:22:38.990><c> know</c><00:22:39.440><c> for</c><00:22:39.920><c> sure</c>

00:22:40.030 --> 00:22:40.040 align:start position:0%
helping tune your code you know for sure
 

00:22:40.040 --> 00:22:41.350 align:start position:0%
helping tune your code you know for sure
even<00:22:40.250><c> ourselves</c><00:22:40.430><c> we</c><00:22:40.820><c> wish</c><00:22:41.000><c> that</c><00:22:41.210><c> was</c>

00:22:41.350 --> 00:22:41.360 align:start position:0%
even ourselves we wish that was
 

00:22:41.360 --> 00:22:45.220 align:start position:0%
even ourselves we wish that was
available<00:22:41.450><c> in</c><00:22:41.840><c> summer</c><00:22:42.110><c> IBM's</c><00:22:42.440><c> platform</c><00:22:44.230><c> among</c>

00:22:45.220 --> 00:22:45.230 align:start position:0%
available in summer IBM's platform among
 

00:22:45.230 --> 00:22:46.960 align:start position:0%
available in summer IBM's platform among
the<00:22:45.350><c> two</c><00:22:46.070><c> other</c><00:22:46.220><c> things</c><00:22:46.430><c> that</c><00:22:46.550><c> we</c><00:22:46.610><c> have</c><00:22:46.760><c> is</c>

00:22:46.960 --> 00:22:46.970 align:start position:0%
the two other things that we have is
 

00:22:46.970 --> 00:22:48.760 align:start position:0%
the two other things that we have is
part<00:22:47.360><c> of</c><00:22:47.510><c> what</c><00:22:47.840><c> we</c><00:22:47.930><c> call</c><00:22:48.050><c> it</c><00:22:48.170><c> the</c><00:22:48.200><c> technology</c>

00:22:48.760 --> 00:22:48.770 align:start position:0%
part of what we call it the technology
 

00:22:48.770 --> 00:22:52.630 align:start position:0%
part of what we call it the technology
preview<00:22:48.980><c> so</c><00:22:49.280><c> these</c><00:22:49.400><c> are</c><00:22:50.770><c> features</c><00:22:51.770><c> that</c><00:22:52.070><c> we</c>

00:22:52.630 --> 00:22:52.640 align:start position:0%
preview so these are features that we
 

00:22:52.640 --> 00:22:54.940 align:start position:0%
preview so these are features that we
are<00:22:52.820><c> actually</c><00:22:53.120><c> looking</c><00:22:53.540><c> at</c><00:22:53.900><c> trying</c><00:22:54.290><c> to</c><00:22:54.590><c> bring</c>

00:22:54.940 --> 00:22:54.950 align:start position:0%
are actually looking at trying to bring
 

00:22:54.950 --> 00:22:56.710 align:start position:0%
are actually looking at trying to bring
in<00:22:55.130><c> to</c><00:22:55.340><c> our</c><00:22:55.460><c> product</c><00:22:55.880><c> although</c><00:22:56.270><c> they're</c><00:22:56.510><c> there</c>

00:22:56.710 --> 00:22:56.720 align:start position:0%
in to our product although they're there
 

00:22:56.720 --> 00:22:58.540 align:start position:0%
in to our product although they're there
right<00:22:56.750><c> now</c><00:22:57.230><c> they're</c><00:22:57.560><c> not</c><00:22:57.710><c> formally</c><00:22:58.100><c> supported</c>

00:22:58.540 --> 00:22:58.550 align:start position:0%
right now they're not formally supported
 

00:22:58.550 --> 00:23:01.060 align:start position:0%
right now they're not formally supported
and<00:22:58.730><c> in</c><00:22:59.000><c> particular</c><00:22:59.360><c> is</c><00:22:59.810><c> the</c><00:23:00.020><c> openmp</c><00:23:00.380><c> so</c><00:23:00.890><c> our</c>

00:23:01.060 --> 00:23:01.070 align:start position:0%
and in particular is the openmp so our
 

00:23:01.070 --> 00:23:02.950 align:start position:0%
and in particular is the openmp so our
direction<00:23:01.400><c> is</c><00:23:01.640><c> to</c><00:23:01.850><c> have</c><00:23:02.240><c> full</c><00:23:02.450><c> support</c><00:23:02.810><c> for</c>

00:23:02.950 --> 00:23:02.960 align:start position:0%
direction is to have full support for
 

00:23:02.960 --> 00:23:05.980 align:start position:0%
direction is to have full support for
open<00:23:03.260><c> NP</c><00:23:03.500><c> 2</c><00:23:03.860><c> point</c><00:23:04.130><c> 0</c><00:23:04.220><c> and</c><00:23:05.210><c> the</c><00:23:05.690><c> other</c><00:23:05.810><c> one</c><00:23:05.960><c> is</c>

00:23:05.980 --> 00:23:05.990 align:start position:0%
open NP 2 point 0 and the other one is
 

00:23:05.990 --> 00:23:11.770 align:start position:0%
open NP 2 point 0 and the other one is
automatic<00:23:06.800><c> parallelization</c><00:23:10.780><c> specifically</c>

00:23:11.770 --> 00:23:11.780 align:start position:0%
automatic parallelization specifically
 

00:23:11.780 --> 00:23:13.630 align:start position:0%
automatic parallelization specifically
then<00:23:11.930><c> for</c><00:23:12.230><c> C</c><00:23:12.380><c> C++</c><00:23:12.620><c> as</c><00:23:13.100><c> I</c><00:23:13.160><c> mentioned</c><00:23:13.490><c> there's</c>

00:23:13.630 --> 00:23:13.640 align:start position:0%
then for C C++ as I mentioned there's
 

00:23:13.640 --> 00:23:16.690 align:start position:0%
then for C C++ as I mentioned there's
the<00:23:13.880><c> standards</c><00:23:14.540><c> compliant</c><00:23:14.930><c> for</c><00:23:15.110><c> 399</c><00:23:15.800><c> and</c><00:23:16.130><c> C++</c>

00:23:16.690 --> 00:23:16.700 align:start position:0%
the standards compliant for 399 and C++
 

00:23:16.700 --> 00:23:21.940 align:start position:0%
the standards compliant for 399 and C++
98<00:23:17.680><c> exploitation</c><00:23:18.680><c> of</c><00:23:18.740><c> altivec</c><00:23:19.990><c> although</c><00:23:20.990><c> that</c>

00:23:21.940 --> 00:23:21.950 align:start position:0%
98 exploitation of altivec although that
 

00:23:21.950 --> 00:23:24.820 align:start position:0%
98 exploitation of altivec although that
the<00:23:22.940><c> this</c><00:23:23.300><c> compiler</c><00:23:23.600><c> II</c><00:23:23.840><c> now</c><00:23:24.050><c> can</c><00:23:24.410><c> actually</c>

00:23:24.820 --> 00:23:24.830 align:start position:0%
the this compiler II now can actually
 

00:23:24.830 --> 00:23:26.830 align:start position:0%
the this compiler II now can actually
generate<00:23:25.040><c> codes</c><00:23:25.550><c> to</c><00:23:25.910><c> the</c><00:23:26.480><c> ultimate</c>

00:23:26.830 --> 00:23:26.840 align:start position:0%
generate codes to the ultimate
 

00:23:26.840 --> 00:23:29.860 align:start position:0%
generate codes to the ultimate
instructions<00:23:28.150><c> one</c><00:23:29.150><c> of</c><00:23:29.240><c> the</c><00:23:29.300><c> things</c><00:23:29.420><c> that</c><00:23:29.570><c> we</c>

00:23:29.860 --> 00:23:29.870 align:start position:0%
instructions one of the things that we
 

00:23:29.870 --> 00:23:33.070 align:start position:0%
instructions one of the things that we
are<00:23:29.900><c> ongoing</c><00:23:30.940><c> looking</c><00:23:31.940><c> at</c><00:23:32.090><c> and</c><00:23:32.420><c> in</c><00:23:32.600><c> our</c><00:23:32.810><c> in</c><00:23:32.990><c> our</c>

00:23:33.070 --> 00:23:33.080 align:start position:0%
are ongoing looking at and in our in our
 

00:23:33.080 --> 00:23:34.360 align:start position:0%
are ongoing looking at and in our in our
research<00:23:33.410><c> and</c><00:23:33.500><c> development</c><00:23:33.920><c> is</c><00:23:34.010><c> the</c>

00:23:34.360 --> 00:23:34.370 align:start position:0%
research and development is the
 

00:23:34.370 --> 00:23:37.270 align:start position:0%
research and development is the
automatic<00:23:35.290><c> symbolization</c><00:23:36.290><c> or</c><00:23:36.620><c> otherwise</c>

00:23:37.270 --> 00:23:37.280 align:start position:0%
automatic symbolization or otherwise
 

00:23:37.280 --> 00:23:39.100 align:start position:0%
automatic symbolization or otherwise
known<00:23:37.520><c> as</c><00:23:37.550><c> automatic</c><00:23:38.150><c> generation</c><00:23:38.300><c> of</c><00:23:38.840><c> Alta</c>

00:23:39.100 --> 00:23:39.110 align:start position:0%
known as automatic generation of Alta
 

00:23:39.110 --> 00:23:40.780 align:start position:0%
known as automatic generation of Alta
tech<00:23:39.260><c> instructions</c><00:23:39.740><c> so</c><00:23:40.250><c> these</c><00:23:40.400><c> are</c><00:23:40.460><c> things</c>

00:23:40.780 --> 00:23:40.790 align:start position:0%
tech instructions so these are things
 

00:23:40.790 --> 00:23:42.460 align:start position:0%
tech instructions so these are things
that<00:23:40.880><c> we</c><00:23:41.000><c> are</c><00:23:41.090><c> definitely</c><00:23:41.510><c> focused</c><00:23:42.020><c> on</c><00:23:42.170><c> and</c>

00:23:42.460 --> 00:23:42.470 align:start position:0%
that we are definitely focused on and
 

00:23:42.470 --> 00:23:46.020 align:start position:0%
that we are definitely focused on and
looking<00:23:42.740><c> at</c><00:23:42.890><c> in</c><00:23:43.300><c> future</c><00:23:44.300><c> releases</c>

00:23:46.020 --> 00:23:46.030 align:start position:0%
looking at in future releases
 

00:23:46.030 --> 00:23:49.030 align:start position:0%
looking at in future releases
compatibility<00:23:47.030><c> with</c><00:23:47.060><c> GCC</c><00:23:47.420><c> 3.3</c><00:23:48.110><c> so</c><00:23:48.770><c> this</c><00:23:48.890><c> is</c>

00:23:49.030 --> 00:23:49.040 align:start position:0%
compatibility with GCC 3.3 so this is
 

00:23:49.040 --> 00:23:50.920 align:start position:0%
compatibility with GCC 3.3 so this is
two<00:23:49.190><c> folds</c><00:23:49.520><c> one</c><00:23:49.550><c> is</c><00:23:49.850><c> we</c><00:23:50.030><c> are</c><00:23:50.180><c> fully</c><00:23:50.450><c> binary</c>

00:23:50.920 --> 00:23:50.930 align:start position:0%
two folds one is we are fully binary
 

00:23:50.930 --> 00:23:53.590 align:start position:0%
two folds one is we are fully binary
compatible<00:23:51.500><c> so</c><00:23:51.680><c> you</c><00:23:51.770><c> can</c><00:23:51.920><c> intermix</c><00:23:52.600><c> GCC</c>

00:23:53.590 --> 00:23:53.600 align:start position:0%
compatible so you can intermix GCC
 

00:23:53.600 --> 00:23:55.000 align:start position:0%
compatible so you can intermix GCC
objects<00:23:54.110><c> with</c><00:23:54.260><c> our</c><00:23:54.440><c> compiler</c>

00:23:55.000 --> 00:23:55.010 align:start position:0%
objects with our compiler
 

00:23:55.010 --> 00:23:57.130 align:start position:0%
objects with our compiler
and<00:23:55.370><c> the</c><00:23:55.490><c> other</c><00:23:55.610><c> one</c><00:23:55.760><c> is</c><00:23:55.790><c> that</c><00:23:56.240><c> we</c><00:23:56.510><c> have</c><00:23:56.810><c> a</c>

00:23:57.130 --> 00:23:57.140 align:start position:0%
and the other one is that we have a
 

00:23:57.140 --> 00:23:59.590 align:start position:0%
and the other one is that we have a
number<00:23:57.860><c> of</c><00:23:58.100><c> language</c><00:23:58.940><c> extensions</c><00:23:59.270><c> that</c><00:23:59.540><c> are</c>

00:23:59.590 --> 00:23:59.600 align:start position:0%
number of language extensions that are
 

00:23:59.600 --> 00:24:02.410 align:start position:0%
number of language extensions that are
GCC<00:24:00.110><c> specific</c><00:24:00.620><c> so</c><00:24:01.040><c> you</c><00:24:01.100><c> can</c><00:24:01.400><c> source</c><00:24:02.240><c> code</c>

00:24:02.410 --> 00:24:02.420 align:start position:0%
GCC specific so you can source code
 

00:24:02.420 --> 00:24:06.610 align:start position:0%
GCC specific so you can source code
compatibility<00:24:04.810><c> for</c><00:24:05.810><c> seed</c><00:24:05.990><c> but</c><00:24:06.110><c> bucks</c><00:24:06.320><c> we</c><00:24:06.470><c> also</c>

00:24:06.610 --> 00:24:06.620 align:start position:0%
compatibility for seed but bucks we also
 

00:24:06.620 --> 00:24:09.610 align:start position:0%
compatibility for seed but bucks we also
have<00:24:06.890><c> an</c><00:24:07.250><c> objective-c</c><00:24:08.350><c> technology</c><00:24:09.350><c> preview</c>

00:24:09.610 --> 00:24:09.620 align:start position:0%
have an objective-c technology preview
 

00:24:09.620 --> 00:24:13.300 align:start position:0%
have an objective-c technology preview
and<00:24:10.580><c> then</c><00:24:11.570><c> for</c><00:24:11.810><c> excel</c><00:24:12.260><c> fortran</c><00:24:12.740><c> as</c><00:24:13.190><c> i</c>

00:24:13.300 --> 00:24:13.310 align:start position:0%
and then for excel fortran as i
 

00:24:13.310 --> 00:24:15.700 align:start position:0%
and then for excel fortran as i
mentioned<00:24:13.610><c> we're</c><00:24:13.700><c> already</c><00:24:13.880><c> the</c><00:24:14.320><c> fortran</c><00:24:15.320><c> 70</c>

00:24:15.700 --> 00:24:15.710 align:start position:0%
mentioned we're already the fortran 70
 

00:24:15.710 --> 00:24:19.500 align:start position:0%
mentioned we're already the fortran 70
90<00:24:15.920><c> 95</c><00:24:16.430><c> and</c><00:24:16.820><c> 2003</c><00:24:17.510><c> partial</c><00:24:18.250><c> we're</c><00:24:19.250><c> also</c>

00:24:19.500 --> 00:24:19.510 align:start position:0%
90 95 and 2003 partial we're also
 

00:24:19.510 --> 00:24:22.030 align:start position:0%
90 95 and 2003 partial we're also
introduced<00:24:20.510><c> many</c><00:24:20.930><c> IBM</c><00:24:21.440><c> and</c><00:24:21.620><c> calm</c><00:24:21.860><c> energy</c>

00:24:22.030 --> 00:24:22.040 align:start position:0%
introduced many IBM and calm energy
 

00:24:22.040 --> 00:24:25.030 align:start position:0%
introduced many IBM and calm energy
standards<00:24:23.020><c> language</c><00:24:24.020><c> extensions</c><00:24:24.320><c> and</c><00:24:24.680><c> these</c>

00:24:25.030 --> 00:24:25.040 align:start position:0%
standards language extensions and these
 

00:24:25.040 --> 00:24:28.000 align:start position:0%
standards language extensions and these
are<00:24:25.220><c> include</c><00:24:25.430><c> some</c><00:24:25.700><c> from</c><00:24:25.970><c> vm</c><00:24:26.480><c> from</c><00:24:26.810><c> 0s</c><00:24:27.740><c> and</c>

00:24:28.000 --> 00:24:28.010 align:start position:0%
are include some from vm from 0s and
 

00:24:28.010 --> 00:24:31.690 align:start position:0%
are include some from vm from 0s and
other<00:24:28.790><c> other</c><00:24:29.740><c> well-known</c><00:24:30.740><c> platforms</c><00:24:31.610><c> for</c>

00:24:31.690 --> 00:24:31.700 align:start position:0%
other other well-known platforms for
 

00:24:31.700 --> 00:24:36.160 align:start position:0%
other other well-known platforms for
fortran<00:24:32.740><c> so</c><00:24:33.790><c> that's</c><00:24:34.790><c> who</c><00:24:35.000><c> is</c><00:24:35.060><c> actually</c><00:24:35.210><c> just</c><00:24:36.020><c> a</c>

00:24:36.160 --> 00:24:36.170 align:start position:0%
fortran so that's who is actually just a
 

00:24:36.170 --> 00:24:38.950 align:start position:0%
fortran so that's who is actually just a
quick<00:24:36.440><c> overview</c><00:24:36.680><c> of</c><00:24:37.160><c> the</c><00:24:37.340><c> CRX</c><00:24:38.090><c> L</c><00:24:38.300><c> C</c><00:24:38.510><c> C++</c><00:24:38.720><c> and</c>

00:24:38.950 --> 00:24:38.960 align:start position:0%
quick overview of the CRX L C C++ and
 

00:24:38.960 --> 00:24:40.780 align:start position:0%
quick overview of the CRX L C C++ and
Fortran<00:24:39.320><c> compilers</c><00:24:39.830><c> if</c><00:24:40.160><c> you</c><00:24:40.400><c> have</c><00:24:40.550><c> any</c>

00:24:40.780 --> 00:24:40.790 align:start position:0%
Fortran compilers if you have any
 

00:24:40.790 --> 00:24:43.510 align:start position:0%
Fortran compilers if you have any
questions<00:24:41.480><c> on</c><00:24:42.290><c> how</c><00:24:42.650><c> to</c><00:24:42.710><c> exploit</c><00:24:43.130><c> your</c><00:24:43.280><c> code</c>

00:24:43.510 --> 00:24:43.520 align:start position:0%
questions on how to exploit your code
 

00:24:43.520 --> 00:24:46.840 align:start position:0%
questions on how to exploit your code
how<00:24:44.450><c> to</c><00:24:44.510><c> gain</c><00:24:45.020><c> even</c><00:24:45.200><c> more</c><00:24:45.850><c> optimization</c>

00:24:46.840 --> 00:24:46.850 align:start position:0%
how to gain even more optimization
 

00:24:46.850 --> 00:24:49.470 align:start position:0%
how to gain even more optimization
capabilities<00:24:47.540><c> and</c><00:24:48.260><c> perform</c><00:24:48.650><c> and</c><00:24:48.770><c> cellular</c><00:24:49.070><c> g5</c>

00:24:49.470 --> 00:24:49.480 align:start position:0%
capabilities and perform and cellular g5
 

00:24:49.480 --> 00:24:51.940 align:start position:0%
capabilities and perform and cellular g5
come<00:24:50.480><c> on</c><00:24:50.600><c> down</c><00:24:50.840><c> to</c><00:24:51.020><c> the</c><00:24:51.050><c> optimization</c><00:24:51.800><c> lab</c>

00:24:51.940 --> 00:24:51.950 align:start position:0%
come on down to the optimization lab
 

00:24:51.950 --> 00:24:53.740 align:start position:0%
come on down to the optimization lab
we're<00:24:52.190><c> and</c><00:24:52.400><c> there's</c><00:24:52.610><c> a</c><00:24:52.670><c> number</c><00:24:52.790><c> of</c><00:24:52.910><c> us</c><00:24:53.240><c> IBM</c><00:24:53.630><c> are</c>

00:24:53.740 --> 00:24:53.750 align:start position:0%
we're and there's a number of us IBM are
 

00:24:53.750 --> 00:24:55.180 align:start position:0%
we're and there's a number of us IBM are
there<00:24:53.930><c> to</c><00:24:54.170><c> help</c><00:24:54.440><c> answer</c><00:24:54.830><c> any</c><00:24:54.860><c> of</c><00:24:55.130><c> your</c>

00:24:55.180 --> 00:24:55.190 align:start position:0%
there to help answer any of your
 

00:24:55.190 --> 00:25:00.220 align:start position:0%
there to help answer any of your
questions<00:24:58.480><c> thanks</c><00:24:59.480><c> all</c><00:24:59.600><c> in</c><00:24:59.720><c> the</c><00:24:59.780><c> next</c><00:24:59.990><c> person</c>

00:25:00.220 --> 00:25:00.230 align:start position:0%
questions thanks all in the next person
 

00:25:00.230 --> 00:25:08.560 align:start position:0%
questions thanks all in the next person
up<00:25:00.290><c> is</c><00:25:00.470><c> Ron</c><00:25:00.980><c> tight</c><00:25:06.100><c> thank</c><00:25:07.100><c> you</c><00:25:07.220><c> Steve</c><00:25:07.570><c> well</c>

00:25:08.560 --> 00:25:08.570 align:start position:0%
up is Ron tight thank you Steve well
 

00:25:08.570 --> 00:25:10.480 align:start position:0%
up is Ron tight thank you Steve well
this<00:25:09.170><c> is</c><00:25:09.290><c> going</c><00:25:09.410><c> to</c><00:25:09.530><c> terrific</c><00:25:09.980><c> here</c><00:25:10.190><c> for</c><00:25:10.400><c> the</c>

00:25:10.480 --> 00:25:10.490 align:start position:0%
this is going to terrific here for the
 

00:25:10.490 --> 00:25:13.060 align:start position:0%
this is going to terrific here for the
g5<00:25:11.000><c> and</c><00:25:11.360><c> I</c><00:25:11.450><c> think</c><00:25:11.750><c> we</c><00:25:11.960><c> all</c><00:25:11.990><c> now</c><00:25:12.410><c> understand</c>

00:25:13.060 --> 00:25:13.070 align:start position:0%
g5 and I think we all now understand
 

00:25:13.070 --> 00:25:16.870 align:start position:0%
g5 and I think we all now understand
what<00:25:13.310><c> kind</c><00:25:13.550><c> of</c><00:25:13.640><c> power</c><00:25:13.910><c> lurks</c><00:25:14.420><c> in</c><00:25:14.750><c> that</c><00:25:14.960><c> box</c><00:25:15.880><c> but</c>

00:25:16.870 --> 00:25:16.880 align:start position:0%
what kind of power lurks in that box but
 

00:25:16.880 --> 00:25:18.850 align:start position:0%
what kind of power lurks in that box but
those<00:25:17.300><c> of</c><00:25:17.510><c> us</c><00:25:17.660><c> who</c><00:25:17.870><c> have</c><00:25:17.990><c> really</c><00:25:18.140><c> worked</c><00:25:18.440><c> a</c><00:25:18.680><c> lot</c>

00:25:18.850 --> 00:25:18.860 align:start position:0%
those of us who have really worked a lot
 

00:25:18.860 --> 00:25:21.370 align:start position:0%
those of us who have really worked a lot
with<00:25:18.920><c> it</c><00:25:19.160><c> understand</c><00:25:19.910><c> what</c><00:25:20.690><c> it</c><00:25:20.810><c> takes</c><00:25:20.840><c> to</c>

00:25:21.370 --> 00:25:21.380 align:start position:0%
with it understand what it takes to
 

00:25:21.380 --> 00:25:24.130 align:start position:0%
with it understand what it takes to
extract<00:25:21.830><c> that</c><00:25:22.010><c> power</c><00:25:22.310><c> and</c><00:25:22.750><c> Sanjay</c><00:25:23.750><c> covered</c>

00:25:24.130 --> 00:25:24.140 align:start position:0%
extract that power and Sanjay covered
 

00:25:24.140 --> 00:25:26.890 align:start position:0%
extract that power and Sanjay covered
some<00:25:24.380><c> of</c><00:25:24.410><c> that</c><00:25:24.620><c> and</c><00:25:25.010><c> of</c><00:25:25.130><c> course</c><00:25:25.430><c> the</c><00:25:25.900><c> apple</c>

00:25:26.890 --> 00:25:26.900 align:start position:0%
some of that and of course the apple
 

00:25:26.900 --> 00:25:28.840 align:start position:0%
some of that and of course the apple
offers<00:25:27.020><c> a</c><00:25:27.230><c> set</c><00:25:27.620><c> of</c><00:25:27.740><c> tools</c><00:25:27.980><c> that</c><00:25:28.280><c> really</c>

00:25:28.840 --> 00:25:28.850 align:start position:0%
offers a set of tools that really
 

00:25:28.850 --> 00:25:31.750 align:start position:0%
offers a set of tools that really
facilitates<00:25:30.160><c> understanding</c><00:25:31.160><c> your</c><00:25:31.280><c> program</c>

00:25:31.750 --> 00:25:31.760 align:start position:0%
facilitates understanding your program
 

00:25:31.760 --> 00:25:34.030 align:start position:0%
facilitates understanding your program
and<00:25:31.940><c> being</c><00:25:32.150><c> able</c><00:25:32.300><c> to</c><00:25:32.630><c> a</c><00:25:32.660><c> grizzly</c><00:25:33.440><c> allow</c><00:25:33.800><c> it</c><00:25:34.010><c> to</c>

00:25:34.030 --> 00:25:34.040 align:start position:0%
and being able to a grizzly allow it to
 

00:25:34.040 --> 00:25:37.390 align:start position:0%
and being able to a grizzly allow it to
extract<00:25:34.670><c> that</c><00:25:34.850><c> power</c><00:25:35.150><c> I</c><00:25:35.860><c> want</c><00:25:36.860><c> to</c><00:25:36.920><c> talk</c><00:25:37.130><c> today</c>

00:25:37.390 --> 00:25:37.400 align:start position:0%
extract that power I want to talk today
 

00:25:37.400 --> 00:25:40.990 align:start position:0%
extract that power I want to talk today
about<00:25:38.680><c> what</c><00:25:39.680><c> the</c><00:25:39.830><c> compiler</c><00:25:40.190><c> can</c><00:25:40.580><c> do</c><00:25:40.730><c> to</c><00:25:40.880><c> get</c>

00:25:40.990 --> 00:25:41.000 align:start position:0%
about what the compiler can do to get
 

00:25:41.000 --> 00:25:42.850 align:start position:0%
about what the compiler can do to get
you<00:25:41.150><c> started</c><00:25:41.480><c> on</c><00:25:41.720><c> that</c><00:25:41.900><c> path</c><00:25:42.200><c> because</c><00:25:42.680><c> not</c>

00:25:42.850 --> 00:25:42.860 align:start position:0%
you started on that path because not
 

00:25:42.860 --> 00:25:45.460 align:start position:0%
you started on that path because not
everyone<00:25:43.310><c> is</c><00:25:43.520><c> is</c><00:25:43.700><c> ready</c><00:25:44.480><c> to</c><00:25:44.780><c> step</c><00:25:45.080><c> up</c><00:25:45.290><c> and</c>

00:25:45.460 --> 00:25:45.470 align:start position:0%
everyone is is ready to step up and
 

00:25:45.470 --> 00:25:47.650 align:start position:0%
everyone is is ready to step up and
start<00:25:45.800><c> tuning</c><00:25:46.160><c> their</c><00:25:46.520><c> program</c><00:25:47.060><c> and</c><00:25:47.240><c> changing</c>

00:25:47.650 --> 00:25:47.660 align:start position:0%
start tuning their program and changing
 

00:25:47.660 --> 00:25:49.320 align:start position:0%
start tuning their program and changing
the<00:25:47.780><c> algorithms</c><00:25:48.320><c> and</c><00:25:48.500><c> so</c><00:25:48.710><c> forth</c><00:25:49.040><c> and</c><00:25:49.220><c> so</c>

00:25:49.320 --> 00:25:49.330 align:start position:0%
the algorithms and so forth and so
 

00:25:49.330 --> 00:25:52.000 align:start position:0%
the algorithms and so forth and so
Sanjay<00:25:50.330><c> mentioned</c><00:25:50.900><c> a</c><00:25:51.080><c> number</c><00:25:51.260><c> of</c><00:25:51.410><c> compiler</c>

00:25:52.000 --> 00:25:52.010 align:start position:0%
Sanjay mentioned a number of compiler
 

00:25:52.010 --> 00:25:54.520 align:start position:0%
Sanjay mentioned a number of compiler
options<00:25:52.640><c> that</c><00:25:53.330><c> can</c><00:25:53.510><c> help</c><00:25:53.780><c> you</c><00:25:53.990><c> in</c><00:25:54.140><c> certain</c>

00:25:54.520 --> 00:25:54.530 align:start position:0%
options that can help you in certain
 

00:25:54.530 --> 00:25:56.740 align:start position:0%
options that can help you in certain
situations<00:25:54.800><c> and</c><00:25:55.640><c> what</c><00:25:55.820><c> we</c><00:25:56.000><c> have</c><00:25:56.240><c> done</c><00:25:56.480><c> within</c>

00:25:56.740 --> 00:25:56.750 align:start position:0%
situations and what we have done within
 

00:25:56.750 --> 00:25:59.170 align:start position:0%
situations and what we have done within
the<00:25:56.930><c> compiler</c><00:25:57.410><c> group</c><00:25:57.740><c> is</c><00:25:57.980><c> actually</c><00:25:58.940><c> put</c>

00:25:59.170 --> 00:25:59.180 align:start position:0%
the compiler group is actually put
 

00:25:59.180 --> 00:26:02.350 align:start position:0%
the compiler group is actually put
together<00:25:59.360><c> a</c><00:25:59.720><c> mode</c><00:26:00.110><c> we</c><00:26:00.380><c> call</c><00:26:00.620><c> dash</c><00:26:00.860><c> fast</c><00:26:01.280><c> and</c><00:26:01.850><c> I</c>

00:26:02.350 --> 00:26:02.360 align:start position:0%
together a mode we call dash fast and I
 

00:26:02.360 --> 00:26:05.200 align:start position:0%
together a mode we call dash fast and I
want<00:26:02.570><c> to</c><00:26:02.630><c> talk</c><00:26:02.840><c> about</c><00:26:02.870><c> that</c><00:26:03.140><c> today</c><00:26:03.620><c> i</c><00:26:04.580><c> also</c>

00:26:05.200 --> 00:26:05.210 align:start position:0%
want to talk about that today i also
 

00:26:05.210 --> 00:26:07.270 align:start position:0%
want to talk about that today i also
want<00:26:05.600><c> to</c><00:26:05.690><c> talk</c><00:26:05.900><c> about</c><00:26:05.930><c> feedback</c><00:26:06.650><c> directed</c>

00:26:07.270 --> 00:26:07.280 align:start position:0%
want to talk about feedback directed
 

00:26:07.280 --> 00:26:08.159 align:start position:0%
want to talk about feedback directed
optimization

00:26:08.159 --> 00:26:08.169 align:start position:0%
optimization
 

00:26:08.169 --> 00:26:10.799 align:start position:0%
optimization
which<00:26:08.529><c> is</c><00:26:08.710><c> another</c><00:26:08.950><c> component</c><00:26:09.789><c> of</c><00:26:10.419><c> the</c><00:26:10.600><c> dash</c>

00:26:10.799 --> 00:26:10.809 align:start position:0%
which is another component of the dash
 

00:26:10.809 --> 00:26:12.450 align:start position:0%
which is another component of the dash
fast<00:26:11.139><c> mode</c><00:26:11.499><c> that</c><00:26:11.830><c> can</c><00:26:12.070><c> help</c><00:26:12.249><c> you</c>

00:26:12.450 --> 00:26:12.460 align:start position:0%
fast mode that can help you
 

00:26:12.460 --> 00:26:15.299 align:start position:0%
fast mode that can help you
significantly<00:26:13.299><c> and</c><00:26:14.139><c> then</c><00:26:14.710><c> of</c><00:26:14.889><c> course</c><00:26:15.129><c> you've</c>

00:26:15.299 --> 00:26:15.309 align:start position:0%
significantly and then of course you've
 

00:26:15.309 --> 00:26:17.009 align:start position:0%
significantly and then of course you've
all<00:26:15.669><c> heard</c><00:26:16.029><c> the</c><00:26:16.269><c> announcement</c><00:26:16.690><c> this</c><00:26:16.960><c> week</c>

00:26:17.009 --> 00:26:17.019 align:start position:0%
all heard the announcement this week
 

00:26:17.019 --> 00:26:19.649 align:start position:0%
all heard the announcement this week
that<00:26:17.559><c> that</c><00:26:18.129><c> we're</c><00:26:18.340><c> on</c><00:26:18.489><c> the</c><00:26:18.669><c> past</c><00:26:18.940><c> to</c><00:26:19.299><c> deliver</c>

00:26:19.649 --> 00:26:19.659 align:start position:0%
that that we're on the past to deliver
 

00:26:19.659 --> 00:26:23.310 align:start position:0%
that that we're on the past to deliver
with<00:26:19.899><c> Tiger</c><00:26:20.470><c> our</c><00:26:21.309><c> initial</c><00:26:21.669><c> cut</c><00:26:22.210><c> at</c><00:26:22.509><c> out</c><00:26:22.929><c> of</c>

00:26:23.310 --> 00:26:23.320 align:start position:0%
with Tiger our initial cut at out of
 

00:26:23.320 --> 00:26:25.289 align:start position:0%
with Tiger our initial cut at out of
vectorization<00:26:23.649><c> and</c><00:26:24.369><c> I</c><00:26:24.429><c> want</c><00:26:24.639><c> to</c><00:26:24.700><c> talk</c><00:26:24.909><c> about</c>

00:26:25.289 --> 00:26:25.299 align:start position:0%
vectorization and I want to talk about
 

00:26:25.299 --> 00:26:29.940 align:start position:0%
vectorization and I want to talk about
exactly<00:26:26.169><c> what</c><00:26:26.409><c> that</c><00:26:26.590><c> is</c><00:26:27.570><c> so</c><00:26:28.570><c> GCC</c><00:26:29.289><c> in</c><00:26:29.559><c> the</c><00:26:29.739><c> dash</c>

00:26:29.940 --> 00:26:29.950 align:start position:0%
exactly what that is so GCC in the dash
 

00:26:29.950 --> 00:26:35.249 align:start position:0%
exactly what that is so GCC in the dash
fast<00:26:30.340><c> mode</c><00:26:32.580><c> could</c><00:26:33.580><c> I</c><00:26:33.669><c> just</c><00:26:33.700><c> askn</c><00:26:34.509><c> in</c><00:26:34.779><c> here</c><00:26:35.080><c> if</c>

00:26:35.249 --> 00:26:35.259 align:start position:0%
fast mode could I just askn in here if
 

00:26:35.259 --> 00:26:38.700 align:start position:0%
fast mode could I just askn in here if
anyone's<00:26:35.679><c> using</c><00:26:35.889><c> this</c><00:26:36.249><c> mood</c><00:26:36.489><c> today</c><00:26:36.789><c> ah</c><00:26:37.710><c> gee</c>

00:26:38.700 --> 00:26:38.710 align:start position:0%
anyone's using this mood today ah gee
 

00:26:38.710 --> 00:26:42.570 align:start position:0%
anyone's using this mood today ah gee
amazing<00:26:40.230><c> we've</c><00:26:41.230><c> had</c><00:26:41.379><c> so</c><00:26:41.590><c> little</c><00:26:41.769><c> feedback</c><00:26:42.129><c> on</c>

00:26:42.570 --> 00:26:42.580 align:start position:0%
amazing we've had so little feedback on
 

00:26:42.580 --> 00:26:45.210 align:start position:0%
amazing we've had so little feedback on
how<00:26:42.609><c> it</c><00:26:43.029><c> has</c><00:26:43.359><c> been</c><00:26:44.139><c> working</c><00:26:44.559><c> for</c><00:26:44.739><c> people</c><00:26:45.070><c> that</c>

00:26:45.210 --> 00:26:45.220 align:start position:0%
how it has been working for people that
 

00:26:45.220 --> 00:26:47.129 align:start position:0%
how it has been working for people that
we've<00:26:45.399><c> wondered</c><00:26:45.639><c> if</c><00:26:45.879><c> aunt</c><00:26:46.090><c> went</c><00:26:46.389><c> using</c><00:26:46.869><c> it</c><00:26:47.019><c> and</c>

00:26:47.129 --> 00:26:47.139 align:start position:0%
we've wondered if aunt went using it and
 

00:26:47.139 --> 00:26:48.599 align:start position:0%
we've wondered if aunt went using it and
that's<00:26:47.289><c> why</c><00:26:47.499><c> we</c><00:26:47.619><c> wanted</c><00:26:47.859><c> to</c><00:26:47.919><c> talk</c><00:26:48.159><c> about</c><00:26:48.190><c> it</c>

00:26:48.599 --> 00:26:48.609 align:start position:0%
that's why we wanted to talk about it
 

00:26:48.609 --> 00:26:52.080 align:start position:0%
that's why we wanted to talk about it
today<00:26:49.559><c> the</c><00:26:50.559><c> dash</c><00:26:50.769><c> bass</c><00:26:51.100><c> mode</c><00:26:51.460><c> is</c><00:26:51.700><c> really</c><00:26:52.059><c> a</c>

00:26:52.080 --> 00:26:52.090 align:start position:0%
today the dash bass mode is really a
 

00:26:52.090 --> 00:26:54.899 align:start position:0%
today the dash bass mode is really a
collection<00:26:52.779><c> of</c><00:26:52.960><c> a</c><00:26:53.799><c> lot</c><00:26:54.279><c> of</c><00:26:54.429><c> the</c><00:26:54.519><c> compiler</c>

00:26:54.899 --> 00:26:54.909 align:start position:0%
collection of a lot of the compiler
 

00:26:54.909 --> 00:26:57.509 align:start position:0%
collection of a lot of the compiler
options<00:26:55.539><c> but</c><00:26:55.840><c> in</c><00:26:56.109><c> many</c><00:26:56.619><c> ways</c><00:26:56.710><c> it's</c><00:26:57.129><c> more</c><00:26:57.340><c> than</c>

00:26:57.509 --> 00:26:57.519 align:start position:0%
options but in many ways it's more than
 

00:26:57.519 --> 00:27:01.590 align:start position:0%
options but in many ways it's more than
just<00:26:57.580><c> a</c><00:26:57.909><c> collection</c><00:26:58.090><c> of</c><00:26:58.480><c> options</c><00:26:59.669><c> it's</c><00:27:00.669><c> we</c><00:27:01.389><c> put</c>

00:27:01.590 --> 00:27:01.600 align:start position:0%
just a collection of options it's we put
 

00:27:01.600 --> 00:27:04.080 align:start position:0%
just a collection of options it's we put
them<00:27:01.779><c> together</c><00:27:02.109><c> in</c><00:27:02.710><c> a</c><00:27:02.859><c> homogeneous</c><00:27:03.249><c> type</c><00:27:03.879><c> of</c>

00:27:04.080 --> 00:27:04.090 align:start position:0%
them together in a homogeneous type of
 

00:27:04.090 --> 00:27:06.810 align:start position:0%
them together in a homogeneous type of
fashion<00:27:04.570><c> to</c><00:27:04.779><c> our</c><00:27:05.049><c> best</c><00:27:05.320><c> ability</c><00:27:05.889><c> to</c><00:27:06.580><c> target</c>

00:27:06.810 --> 00:27:06.820 align:start position:0%
fashion to our best ability to target
 

00:27:06.820 --> 00:27:09.029 align:start position:0%
fashion to our best ability to target
tell<00:27:07.450><c> you</c><00:27:07.570><c> what</c><00:27:07.749><c> i</c><00:27:07.779><c> would</c><00:27:08.019><c> call</c><00:27:08.230><c> typical</c>

00:27:09.029 --> 00:27:09.039 align:start position:0%
tell you what i would call typical
 

00:27:09.039 --> 00:27:11.789 align:start position:0%
tell you what i would call typical
applications<00:27:09.330><c> and</c><00:27:10.330><c> of</c><00:27:10.840><c> course</c><00:27:10.869><c> we</c><00:27:11.619><c> all</c><00:27:11.769><c> know</c>

00:27:11.789 --> 00:27:11.799 align:start position:0%
applications and of course we all know
 

00:27:11.799 --> 00:27:13.619 align:start position:0%
applications and of course we all know
there's<00:27:12.309><c> nothing</c><00:27:12.669><c> like</c><00:27:13.210><c> a</c><00:27:13.269><c> typical</c>

00:27:13.619 --> 00:27:13.629 align:start position:0%
there's nothing like a typical
 

00:27:13.629 --> 00:27:16.729 align:start position:0%
there's nothing like a typical
application<00:27:14.619><c> but</c><00:27:14.889><c> in</c><00:27:15.279><c> this</c><00:27:15.759><c> case</c><00:27:15.999><c> I</c><00:27:16.269><c> mean</c>

00:27:16.729 --> 00:27:16.739 align:start position:0%
application but in this case I mean
 

00:27:16.739 --> 00:27:19.919 align:start position:0%
application but in this case I mean
applications<00:27:17.739><c> that</c><00:27:18.009><c> are</c><00:27:18.749><c> computationally</c><00:27:19.749><c> in</c>

00:27:19.919 --> 00:27:19.929 align:start position:0%
applications that are computationally in
 

00:27:19.929 --> 00:27:24.109 align:start position:0%
applications that are computationally in
10<00:27:20.230><c> inch</c><00:27:21.090><c> intensive</c><00:27:22.090><c> so</c><00:27:22.779><c> to</c><00:27:22.840><c> do</c><00:27:23.230><c> do</c><00:27:23.799><c> a</c><00:27:23.830><c> lot</c><00:27:24.039><c> of</c>

00:27:24.109 --> 00:27:24.119 align:start position:0%
10 inch intensive so to do do a lot of
 

00:27:24.119 --> 00:27:26.460 align:start position:0%
10 inch intensive so to do do a lot of
mathematical<00:27:25.119><c> computation</c><00:27:25.929><c> we've</c><00:27:26.109><c> tried</c><00:27:26.440><c> to</c>

00:27:26.460 --> 00:27:26.470 align:start position:0%
mathematical computation we've tried to
 

00:27:26.470 --> 00:27:29.009 align:start position:0%
mathematical computation we've tried to
target<00:27:27.070><c> a</c><00:27:27.159><c> mode</c><00:27:27.399><c> that</c><00:27:27.759><c> will</c><00:27:28.239><c> give</c><00:27:28.539><c> you</c><00:27:28.659><c> a</c><00:27:28.690><c> first</c>

00:27:29.009 --> 00:27:29.019 align:start position:0%
target a mode that will give you a first
 

00:27:29.019 --> 00:27:30.659 align:start position:0%
target a mode that will give you a first
step<00:27:29.320><c> into</c><00:27:29.649><c> getting</c><00:27:30.279><c> some</c><00:27:30.489><c> of</c><00:27:30.580><c> the</c>

00:27:30.659 --> 00:27:30.669 align:start position:0%
step into getting some of the
 

00:27:30.669 --> 00:27:34.830 align:start position:0%
step into getting some of the
performance<00:27:31.769><c> however</c><00:27:32.769><c> the</c><00:27:33.190><c> details</c><00:27:33.639><c> of</c><00:27:34.299><c> when</c>

00:27:34.830 --> 00:27:34.840 align:start position:0%
performance however the details of when
 

00:27:34.840 --> 00:27:36.509 align:start position:0%
performance however the details of when
you<00:27:34.960><c> use</c><00:27:35.169><c> that</c><00:27:35.200><c> modes</c><00:27:35.649><c> important</c><00:27:36.279><c> so</c><00:27:36.460><c> you</c>

00:27:36.509 --> 00:27:36.519 align:start position:0%
you use that modes important so you
 

00:27:36.519 --> 00:27:39.690 align:start position:0%
you use that modes important so you
can't<00:27:37.169><c> totally</c><00:27:38.169><c> say</c><00:27:38.619><c> I</c><00:27:38.649><c> don't</c><00:27:38.830><c> understand</c><00:27:39.519><c> my</c>

00:27:39.690 --> 00:27:39.700 align:start position:0%
can't totally say I don't understand my
 

00:27:39.700 --> 00:27:41.279 align:start position:0%
can't totally say I don't understand my
program<00:27:40.179><c> and</c><00:27:40.330><c> what's</c><00:27:40.509><c> going</c><00:27:40.809><c> on</c><00:27:40.960><c> in</c><00:27:41.139><c> my</c>

00:27:41.279 --> 00:27:41.289 align:start position:0%
program and what's going on in my
 

00:27:41.289 --> 00:27:43.499 align:start position:0%
program and what's going on in my
program<00:27:41.769><c> and</c><00:27:41.950><c> so</c><00:27:42.580><c> I'll</c><00:27:42.759><c> talk</c><00:27:42.999><c> a</c><00:27:43.029><c> little</c><00:27:43.299><c> bit</c>

00:27:43.499 --> 00:27:43.509 align:start position:0%
program and so I'll talk a little bit
 

00:27:43.509 --> 00:27:46.019 align:start position:0%
program and so I'll talk a little bit
about<00:27:43.749><c> the</c><00:27:44.019><c> details</c><00:27:44.470><c> that</c><00:27:44.889><c> are</c><00:27:45.070><c> important</c><00:27:45.669><c> and</c>

00:27:46.019 --> 00:27:46.029 align:start position:0%
about the details that are important and
 

00:27:46.029 --> 00:27:49.560 align:start position:0%
about the details that are important and
give<00:27:46.809><c> you</c><00:27:46.989><c> a</c><00:27:47.379><c> good</c><00:27:47.830><c> feel</c><00:27:48.100><c> at</c><00:27:48.369><c> least</c><00:27:48.549><c> four</c><00:27:49.269><c> dash</c>

00:27:49.560 --> 00:27:49.570 align:start position:0%
give you a good feel at least four dash
 

00:27:49.570 --> 00:27:51.389 align:start position:0%
give you a good feel at least four dash
baths<00:27:49.929><c> and</c><00:27:50.200><c> what</c><00:27:50.350><c> it's</c><00:27:50.499><c> trying</c><00:27:50.710><c> to</c><00:27:50.919><c> do</c><00:27:51.129><c> and</c>

00:27:51.389 --> 00:27:51.399 align:start position:0%
baths and what it's trying to do and
 

00:27:51.399 --> 00:27:54.389 align:start position:0%
baths and what it's trying to do and
then<00:27:51.999><c> finally</c><00:27:52.720><c> there</c><00:27:53.169><c> is</c><00:27:53.200><c> a</c><00:27:53.350><c> variant</c><00:27:53.980><c> of</c><00:27:54.159><c> dash</c>

00:27:54.389 --> 00:27:54.399 align:start position:0%
then finally there is a variant of dash
 

00:27:54.399 --> 00:27:57.419 align:start position:0%
then finally there is a variant of dash
fast<00:27:54.820><c> called</c><00:27:55.299><c> dash</c><00:27:55.600><c> fast</c><00:27:55.929><c> and</c><00:27:56.769><c> and</c><00:27:56.919><c> that's</c>

00:27:57.419 --> 00:27:57.429 align:start position:0%
fast called dash fast and and that's
 

00:27:57.429 --> 00:27:59.039 align:start position:0%
fast called dash fast and and that's
really<00:27:57.700><c> what</c><00:27:57.940><c> you</c><00:27:57.999><c> should</c><00:27:58.359><c> be</c><00:27:58.480><c> using</c><00:27:58.720><c> if</c>

00:27:59.039 --> 00:27:59.049 align:start position:0%
really what you should be using if
 

00:27:59.049 --> 00:28:01.499 align:start position:0%
really what you should be using if
you're<00:27:59.289><c> working</c><00:27:59.769><c> with</c><00:28:00.070><c> C++</c><00:28:00.820><c> there</c><00:28:01.239><c> are</c><00:28:01.359><c> some</c>

00:28:01.499 --> 00:28:01.509 align:start position:0%
you're working with C++ there are some
 

00:28:01.509 --> 00:28:03.869 align:start position:0%
you're working with C++ there are some
things<00:28:01.720><c> that</c><00:28:01.899><c> we</c><00:28:02.139><c> do</c><00:28:02.320><c> slightly</c><00:28:03.129><c> different</c><00:28:03.669><c> to</c>

00:28:03.869 --> 00:28:03.879 align:start position:0%
things that we do slightly different to
 

00:28:03.879 --> 00:28:05.999 align:start position:0%
things that we do slightly different to
try<00:28:04.149><c> and</c><00:28:04.269><c> address</c><00:28:04.629><c> performance</c><00:28:05.350><c> in</c><00:28:05.529><c> the</c><00:28:05.649><c> c++</c>

00:28:05.999 --> 00:28:06.009 align:start position:0%
try and address performance in the c++
 

00:28:06.009 --> 00:28:09.210 align:start position:0%
try and address performance in the c++
world<00:28:06.730><c> so</c><00:28:07.720><c> what</c><00:28:07.929><c> are</c><00:28:08.049><c> some</c><00:28:08.080><c> of</c><00:28:08.409><c> the</c><00:28:08.529><c> specifics</c>

00:28:09.210 --> 00:28:09.220 align:start position:0%
world so what are some of the specifics
 

00:28:09.220 --> 00:28:12.930 align:start position:0%
world so what are some of the specifics
about<00:28:10.109><c> dash</c><00:28:11.109><c> fast</c><00:28:11.440><c> mode</c><00:28:11.830><c> what</c><00:28:12.190><c> what</c><00:28:12.580><c> are</c><00:28:12.789><c> we</c>

00:28:12.930 --> 00:28:12.940 align:start position:0%
about dash fast mode what what are we
 

00:28:12.940 --> 00:28:15.359 align:start position:0%
about dash fast mode what what are we
trying<00:28:13.179><c> to</c><00:28:13.419><c> actually</c><00:28:13.539><c> attack</c><00:28:14.109><c> well</c><00:28:14.950><c> Sanjay</c>

00:28:15.359 --> 00:28:15.369 align:start position:0%
trying to actually attack well Sanjay
 

00:28:15.369 --> 00:28:16.979 align:start position:0%
trying to actually attack well Sanjay
talked<00:28:15.730><c> about</c><00:28:16.059><c> and</c><00:28:16.299><c> others</c><00:28:16.570><c> have</c><00:28:16.749><c> talked</c>

00:28:16.979 --> 00:28:16.989 align:start position:0%
talked about and others have talked
 

00:28:16.989 --> 00:28:20.100 align:start position:0%
talked about and others have talked
about<00:28:17.200><c> the</c><00:28:17.619><c> deeply</c><00:28:18.190><c> pipeline</c><00:28:18.759><c> nature</c>

00:28:20.100 --> 00:28:20.110 align:start position:0%
about the deeply pipeline nature
 

00:28:20.110 --> 00:28:24.180 align:start position:0%
about the deeply pipeline nature
the<00:28:21.150><c> architecture</c><00:28:22.150><c> and</c><00:28:22.179><c> the</c><00:28:22.530><c> wide</c><00:28:23.530><c> functional</c>

00:28:24.180 --> 00:28:24.190 align:start position:0%
the architecture and the wide functional
 

00:28:24.190 --> 00:28:26.850 align:start position:0%
the architecture and the wide functional
units<00:28:24.580><c> and</c><00:28:24.850><c> so</c><00:28:25.450><c> one</c><00:28:25.630><c> of</c><00:28:25.660><c> the</c><00:28:25.870><c> things</c><00:28:25.900><c> that</c><00:28:26.380><c> you</c>

00:28:26.850 --> 00:28:26.860 align:start position:0%
units and so one of the things that you
 

00:28:26.860 --> 00:28:29.039 align:start position:0%
units and so one of the things that you
have<00:28:27.010><c> to</c><00:28:27.070><c> really</c><00:28:27.340><c> be</c><00:28:27.460><c> concerned</c><00:28:28.179><c> about</c><00:28:28.390><c> to</c><00:28:28.870><c> get</c>

00:28:29.039 --> 00:28:29.049 align:start position:0%
have to really be concerned about to get
 

00:28:29.049 --> 00:28:31.440 align:start position:0%
have to really be concerned about to get
performance<00:28:29.710><c> is</c><00:28:29.890><c> keeping</c><00:28:30.880><c> the</c><00:28:30.970><c> pipeline</c>

00:28:31.440 --> 00:28:31.450 align:start position:0%
performance is keeping the pipeline
 

00:28:31.450 --> 00:28:34.350 align:start position:0%
performance is keeping the pipeline
field<00:28:31.840><c> as</c><00:28:32.320><c> we</c><00:28:32.710><c> call</c><00:28:32.980><c> it</c><00:28:33.010><c> and</c><00:28:33.460><c> so</c><00:28:33.700><c> there</c><00:28:34.240><c> are</c><00:28:34.330><c> a</c>

00:28:34.350 --> 00:28:34.360 align:start position:0%
field as we call it and so there are a
 

00:28:34.360 --> 00:28:36.930 align:start position:0%
field as we call it and so there are a
number<00:28:34.420><c> of</c><00:28:34.630><c> optimizations</c><00:28:35.559><c> some</c><00:28:35.950><c> that</c><00:28:36.460><c> Sanjay</c>

00:28:36.930 --> 00:28:36.940 align:start position:0%
number of optimizations some that Sanjay
 

00:28:36.940 --> 00:28:39.539 align:start position:0%
number of optimizations some that Sanjay
mentioned<00:28:37.540><c> that</c><00:28:38.080><c> we</c><00:28:38.470><c> have</c><00:28:39.070><c> brought</c><00:28:39.280><c> together</c>

00:28:39.539 --> 00:28:39.549 align:start position:0%
mentioned that we have brought together
 

00:28:39.549 --> 00:28:42.060 align:start position:0%
mentioned that we have brought together
to<00:28:40.059><c> try</c><00:28:40.270><c> and</c><00:28:40.299><c> keep</c><00:28:40.540><c> this</c><00:28:40.780><c> pipeline</c><00:28:41.110><c> field</c><00:28:41.740><c> so</c>

00:28:42.060 --> 00:28:42.070 align:start position:0%
to try and keep this pipeline field so
 

00:28:42.070 --> 00:28:44.460 align:start position:0%
to try and keep this pipeline field so
we're<00:28:42.280><c> feeding</c><00:28:42.549><c> this</c><00:28:42.850><c> monster</c><00:28:43.420><c> at</c><00:28:43.630><c> the</c><00:28:44.170><c> speed</c>

00:28:44.460 --> 00:28:44.470 align:start position:0%
we're feeding this monster at the speed
 

00:28:44.470 --> 00:28:47.580 align:start position:0%
we're feeding this monster at the speed
it<00:28:44.620><c> would</c><00:28:44.740><c> like</c><00:28:44.920><c> to</c><00:28:45.100><c> be</c><00:28:45.250><c> fed</c><00:28:45.549><c> I</c><00:28:46.320><c> want</c><00:28:47.320><c> to</c><00:28:47.380><c> talk</c><00:28:47.559><c> a</c>

00:28:47.580 --> 00:28:47.590 align:start position:0%
it would like to be fed I want to talk a
 

00:28:47.590 --> 00:28:49.530 align:start position:0%
it would like to be fed I want to talk a
little<00:28:47.860><c> bit</c><00:28:48.070><c> about</c><00:28:48.309><c> standard</c><00:28:48.850><c> conformance</c>

00:28:49.530 --> 00:28:49.540 align:start position:0%
little bit about standard conformance
 

00:28:49.540 --> 00:28:51.000 align:start position:0%
little bit about standard conformance
and<00:28:49.750><c> some</c><00:28:50.020><c> of</c><00:28:50.110><c> the</c><00:28:50.170><c> things</c><00:28:50.470><c> that</c><00:28:50.679><c> we</c><00:28:50.799><c> do</c><00:28:50.980><c> to</c>

00:28:51.000 --> 00:28:51.010 align:start position:0%
and some of the things that we do to
 

00:28:51.010 --> 00:28:55.320 align:start position:0%
and some of the things that we do to
relax<00:28:51.460><c> the</c><00:28:52.950><c> rules</c><00:28:53.950><c> so</c><00:28:54.370><c> that</c><00:28:54.400><c> the</c><00:28:54.669><c> compiler</c><00:28:54.970><c> can</c>

00:28:55.320 --> 00:28:55.330 align:start position:0%
relax the rules so that the compiler can
 

00:28:55.330 --> 00:28:57.090 align:start position:0%
relax the rules so that the compiler can
actually<00:28:55.690><c> do</c><00:28:55.840><c> a</c><00:28:55.870><c> better</c><00:28:56.110><c> job</c><00:28:56.200><c> for</c><00:28:56.440><c> you</c><00:28:56.919><c> in</c>

00:28:57.090 --> 00:28:57.100 align:start position:0%
actually do a better job for you in
 

00:28:57.100 --> 00:28:59.909 align:start position:0%
actually do a better job for you in
terms<00:28:57.340><c> of</c><00:28:57.580><c> optimization</c><00:28:58.480><c> and</c><00:28:58.690><c> then</c><00:28:59.410><c> finally</c>

00:28:59.909 --> 00:28:59.919 align:start position:0%
terms of optimization and then finally
 

00:28:59.919 --> 00:29:03.510 align:start position:0%
terms of optimization and then finally
of<00:28:59.950><c> course</c><00:29:00.100><c> the</c><00:29:00.610><c> g5</c><00:29:01.000><c> instruction</c><00:29:01.660><c> set</c><00:29:02.280><c> this</c><00:29:03.280><c> is</c>

00:29:03.510 --> 00:29:03.520 align:start position:0%
of course the g5 instruction set this is
 

00:29:03.520 --> 00:29:09.180 align:start position:0%
of course the g5 instruction set this is
a<00:29:03.840><c> presentation</c><00:29:04.840><c> on</c><00:29:04.929><c> the</c><00:29:05.470><c> g5</c><00:29:06.660><c> so</c><00:29:07.740><c> to</c><00:29:08.740><c> start</c><00:29:08.980><c> off</c>

00:29:09.180 --> 00:29:09.190 align:start position:0%
a presentation on the g5 so to start off
 

00:29:09.190 --> 00:29:11.640 align:start position:0%
a presentation on the g5 so to start off
with<00:29:09.520><c> I</c><00:29:09.940><c> don't</c><00:29:10.630><c> know</c><00:29:10.750><c> how</c><00:29:10.929><c> many</c><00:29:10.960><c> of</c><00:29:11.290><c> you</c><00:29:11.440><c> have</c>

00:29:11.640 --> 00:29:11.650 align:start position:0%
with I don't know how many of you have
 

00:29:11.650 --> 00:29:14.330 align:start position:0%
with I don't know how many of you have
ventured<00:29:11.980><c> into</c><00:29:12.400><c> the</c><00:29:12.610><c> dash</c><00:29:13.000><c> 0</c><00:29:13.240><c> 3</c><00:29:13.600><c> level</c>

00:29:14.330 --> 00:29:14.340 align:start position:0%
ventured into the dash 0 3 level
 

00:29:14.340 --> 00:29:17.250 align:start position:0%
ventured into the dash 0 3 level
optimization<00:29:15.340><c> mode</c><00:29:15.690><c> but</c><00:29:16.690><c> I</c><00:29:16.720><c> want</c><00:29:16.900><c> you</c><00:29:17.080><c> to</c><00:29:17.200><c> know</c>

00:29:17.250 --> 00:29:17.260 align:start position:0%
optimization mode but I want you to know
 

00:29:17.260 --> 00:29:19.169 align:start position:0%
optimization mode but I want you to know
that's<00:29:17.650><c> just</c><00:29:17.770><c> the</c><00:29:18.130><c> starting</c><00:29:18.490><c> point</c><00:29:18.549><c> for</c><00:29:19.000><c> dash</c>

00:29:19.169 --> 00:29:19.179 align:start position:0%
that's just the starting point for dash
 

00:29:19.179 --> 00:29:21.690 align:start position:0%
that's just the starting point for dash
fast<00:29:19.510><c> and</c><00:29:19.929><c> so</c><00:29:20.140><c> you'll</c><00:29:20.770><c> get</c><00:29:20.950><c> that</c><00:29:21.220><c> with</c><00:29:21.460><c> dash</c>

00:29:21.690 --> 00:29:21.700 align:start position:0%
fast and so you'll get that with dash
 

00:29:21.700 --> 00:29:24.600 align:start position:0%
fast and so you'll get that with dash
fast<00:29:22.120><c> and</c><00:29:22.480><c> along</c><00:29:23.380><c> with</c><00:29:23.410><c> that</c><00:29:23.590><c> come</c><00:29:24.100><c> a</c><00:29:24.309><c> couple</c>

00:29:24.600 --> 00:29:24.610 align:start position:0%
fast and along with that come a couple
 

00:29:24.610 --> 00:29:27.299 align:start position:0%
fast and along with that come a couple
important<00:29:25.270><c> options</c><00:29:25.750><c> one</c><00:29:26.500><c> is</c><00:29:26.530><c> in</c><00:29:26.919><c> lighting</c>

00:29:27.299 --> 00:29:27.309 align:start position:0%
important options one is in lighting
 

00:29:27.309 --> 00:29:30.299 align:start position:0%
important options one is in lighting
functions<00:29:27.880><c> and</c><00:29:28.240><c> basically</c><00:29:29.049><c> and</c><00:29:29.799><c> you</c><00:29:30.160><c> may</c>

00:29:30.299 --> 00:29:30.309 align:start position:0%
functions and basically and you may
 

00:29:30.309 --> 00:29:32.220 align:start position:0%
functions and basically and you may
understand<00:29:30.820><c> this</c><00:29:30.970><c> but</c><00:29:31.179><c> basically</c><00:29:31.630><c> that</c><00:29:31.929><c> says</c>

00:29:32.220 --> 00:29:32.230 align:start position:0%
understand this but basically that says
 

00:29:32.230 --> 00:29:35.280 align:start position:0%
understand this but basically that says
within<00:29:32.650><c> a</c><00:29:32.740><c> computational</c><00:29:33.580><c> unit</c><00:29:33.870><c> the</c><00:29:34.870><c> compiler</c>

00:29:35.280 --> 00:29:35.290 align:start position:0%
within a computational unit the compiler
 

00:29:35.290 --> 00:29:39.570 align:start position:0%
within a computational unit the compiler
can<00:29:36.150><c> do</c><00:29:37.150><c> some</c><00:29:37.390><c> heuristics</c><00:29:37.990><c> to</c><00:29:38.080><c> determine</c><00:29:38.799><c> how</c>

00:29:39.570 --> 00:29:39.580 align:start position:0%
can do some heuristics to determine how
 

00:29:39.580 --> 00:29:41.400 align:start position:0%
can do some heuristics to determine how
to<00:29:39.610><c> inline</c><00:29:40.210><c> functions</c><00:29:40.840><c> within</c><00:29:41.110><c> that</c>

00:29:41.400 --> 00:29:41.410 align:start position:0%
to inline functions within that
 

00:29:41.410 --> 00:29:44.340 align:start position:0%
to inline functions within that
computational<00:29:42.220><c> unit</c><00:29:42.490><c> and</c><00:29:43.299><c> the</c><00:29:43.720><c> real</c><00:29:43.900><c> purpose</c>

00:29:44.340 --> 00:29:44.350 align:start position:0%
computational unit and the real purpose
 

00:29:44.350 --> 00:29:46.799 align:start position:0%
computational unit and the real purpose
behind<00:29:44.590><c> the</c><00:29:44.919><c> compiler</c><00:29:45.460><c> doing</c><00:29:45.940><c> that</c><00:29:46.150><c> is</c><00:29:46.450><c> that</c>

00:29:46.799 --> 00:29:46.809 align:start position:0%
behind the compiler doing that is that
 

00:29:46.809 --> 00:29:48.870 align:start position:0%
behind the compiler doing that is that
the<00:29:46.960><c> more</c><00:29:47.140><c> code</c><00:29:47.470><c> that</c><00:29:47.740><c> the</c><00:29:47.890><c> compiler</c><00:29:48.250><c> can</c><00:29:48.669><c> also</c>

00:29:48.870 --> 00:29:48.880 align:start position:0%
the more code that the compiler can also
 

00:29:48.880 --> 00:29:52.620 align:start position:0%
the more code that the compiler can also
have<00:29:49.299><c> an</c><00:29:50.169><c> inline</c><00:29:50.679><c> view</c><00:29:51.010><c> of</c><00:29:51.190><c> the</c><00:29:51.400><c> better</c><00:29:51.640><c> all</c><00:29:52.299><c> of</c>

00:29:52.620 --> 00:29:52.630 align:start position:0%
have an inline view of the better all of
 

00:29:52.630 --> 00:29:55.140 align:start position:0%
have an inline view of the better all of
the<00:29:52.750><c> optimizations</c><00:29:53.140><c> can</c><00:29:54.010><c> can</c><00:29:54.429><c> be</c><00:29:54.730><c> performed</c>

00:29:55.140 --> 00:29:55.150 align:start position:0%
the optimizations can can be performed
 

00:29:55.150 --> 00:29:57.330 align:start position:0%
the optimizations can can be performed
and<00:29:55.480><c> so</c><00:29:55.720><c> the</c><00:29:56.350><c> bigger</c><00:29:56.590><c> view</c><00:29:56.950><c> that</c><00:29:57.190><c> the</c>

00:29:57.330 --> 00:29:57.340 align:start position:0%
and so the bigger view that the
 

00:29:57.340 --> 00:29:59.490 align:start position:0%
and so the bigger view that the
optimizer<00:29:57.880><c> has</c><00:29:58.299><c> the</c><00:29:59.049><c> better</c><00:29:59.230><c> the</c>

00:29:59.490 --> 00:29:59.500 align:start position:0%
optimizer has the better the
 

00:29:59.500 --> 00:30:02.460 align:start position:0%
optimizer has the better the
optimization<00:30:00.340><c> the</c><00:30:01.000><c> second</c><00:30:01.450><c> is</c><00:30:01.630><c> rename</c>

00:30:02.460 --> 00:30:02.470 align:start position:0%
optimization the second is rename
 

00:30:02.470 --> 00:30:05.520 align:start position:0%
optimization the second is rename
registers<00:30:03.270><c> option</c><00:30:04.270><c> and</c><00:30:04.660><c> what</c><00:30:04.929><c> this</c><00:30:05.110><c> simply</c>

00:30:05.520 --> 00:30:05.530 align:start position:0%
registers option and what this simply
 

00:30:05.530 --> 00:30:07.560 align:start position:0%
registers option and what this simply
does<00:30:05.770><c> is</c><00:30:06.130><c> it</c><00:30:06.400><c> gives</c><00:30:06.669><c> the</c><00:30:06.880><c> compiler</c><00:30:07.360><c> more</c>

00:30:07.560 --> 00:30:07.570 align:start position:0%
does is it gives the compiler more
 

00:30:07.570 --> 00:30:09.390 align:start position:0%
does is it gives the compiler more
freedom<00:30:08.049><c> in</c><00:30:08.200><c> terms</c><00:30:08.530><c> of</c><00:30:08.740><c> its</c><00:30:08.919><c> register</c>

00:30:09.390 --> 00:30:09.400 align:start position:0%
freedom in terms of its register
 

00:30:09.400 --> 00:30:12.539 align:start position:0%
freedom in terms of its register
allocation<00:30:09.940><c> and</c><00:30:10.330><c> it</c><00:30:11.140><c> does</c><00:30:11.320><c> at</c><00:30:11.830><c> the</c><00:30:12.010><c> expense</c><00:30:12.370><c> of</c>

00:30:12.539 --> 00:30:12.549 align:start position:0%
allocation and it does at the expense of
 

00:30:12.549 --> 00:30:15.990 align:start position:0%
allocation and it does at the expense of
you<00:30:12.760><c> being</c><00:30:12.940><c> able</c><00:30:13.270><c> to</c><00:30:13.419><c> debug</c><00:30:13.809><c> your</c><00:30:13.990><c> code</c><00:30:14.049><c> but</c><00:30:15.000><c> if</c>

00:30:15.990 --> 00:30:16.000 align:start position:0%
you being able to debug your code but if
 

00:30:16.000 --> 00:30:18.810 align:start position:0%
you being able to debug your code but if
you're<00:30:16.270><c> on</c><00:30:16.630><c> this</c><00:30:17.200><c> ragged</c><00:30:17.799><c> edge</c><00:30:17.980><c> of</c><00:30:18.400><c> trying</c><00:30:18.700><c> to</c>

00:30:18.810 --> 00:30:18.820 align:start position:0%
you're on this ragged edge of trying to
 

00:30:18.820 --> 00:30:21.419 align:start position:0%
you're on this ragged edge of trying to
get<00:30:18.970><c> optimum</c><00:30:19.419><c> performance</c><00:30:19.630><c> that</c><00:30:20.290><c> is</c><00:30:20.559><c> one</c><00:30:21.309><c> of</c>

00:30:21.419 --> 00:30:21.429 align:start position:0%
get optimum performance that is one of
 

00:30:21.429 --> 00:30:25.980 align:start position:0%
get optimum performance that is one of
the<00:30:22.559><c> pitfalls</c><00:30:23.559><c> you</c><00:30:24.010><c> have</c><00:30:24.160><c> to</c><00:30:24.309><c> deal</c><00:30:24.520><c> with</c><00:30:24.990><c> the</c>

00:30:25.980 --> 00:30:25.990 align:start position:0%
the pitfalls you have to deal with the
 

00:30:25.990 --> 00:30:29.010 align:start position:0%
the pitfalls you have to deal with the
second<00:30:26.440><c> capability</c><00:30:27.130><c> that</c><00:30:27.730><c> I</c><00:30:27.790><c> want</c><00:30:28.059><c> to</c><00:30:28.179><c> talk</c>

00:30:29.010 --> 00:30:29.020 align:start position:0%
second capability that I want to talk
 

00:30:29.020 --> 00:30:31.840 align:start position:0%
second capability that I want to talk
about<00:30:29.050><c> is</c><00:30:29.530><c> enter</c><00:30:30.100><c> module</c><00:30:30.520><c> and</c><00:30:30.669><c> lining</c><00:30:31.120><c> are</c>

00:30:31.840 --> 00:30:31.850 align:start position:0%
about is enter module and lining are
 

00:30:31.850 --> 00:30:34.750 align:start position:0%
about is enter module and lining are
function<00:30:32.780><c> inlining</c><00:30:33.370><c> across</c><00:30:34.370><c> the</c><00:30:34.580><c> whole</c>

00:30:34.750 --> 00:30:34.760 align:start position:0%
function inlining across the whole
 

00:30:34.760 --> 00:30:38.560 align:start position:0%
function inlining across the whole
program<00:30:35.030><c> and</c><00:30:36.070><c> what</c><00:30:37.070><c> that</c><00:30:37.250><c> does</c><00:30:37.520><c> for</c><00:30:37.580><c> the</c>

00:30:38.560 --> 00:30:38.570 align:start position:0%
program and what that does for the
 

00:30:38.570 --> 00:30:40.600 align:start position:0%
program and what that does for the
inlining<00:30:38.960><c> the</c><00:30:39.289><c> previous</c><00:30:39.679><c> inlining</c><00:30:40.100><c> option</c>

00:30:40.600 --> 00:30:40.610 align:start position:0%
inlining the previous inlining option
 

00:30:40.610 --> 00:30:44.830 align:start position:0%
inlining the previous inlining option
look<00:30:40.789><c> at</c><00:30:40.970><c> one</c><00:30:41.120><c> computational</c><00:30:41.990><c> unit</c><00:30:42.039><c> the</c><00:30:43.840><c> inter</c>

00:30:44.830 --> 00:30:44.840 align:start position:0%
look at one computational unit the inter
 

00:30:44.840 --> 00:30:46.990 align:start position:0%
look at one computational unit the inter
module<00:30:45.260><c> function</c><00:30:45.710><c> inlining</c><00:30:45.950><c> looks</c><00:30:46.640><c> at</c><00:30:46.880><c> the</c>

00:30:46.990 --> 00:30:47.000 align:start position:0%
module function inlining looks at the
 

00:30:47.000 --> 00:30:49.180 align:start position:0%
module function inlining looks at the
whole<00:30:47.210><c> program</c><00:30:47.510><c> and</c><00:30:47.960><c> so</c><00:30:48.530><c> it</c><00:30:48.650><c> gives</c><00:30:48.799><c> you</c><00:30:48.980><c> that</c>

00:30:49.180 --> 00:30:49.190 align:start position:0%
whole program and so it gives you that
 

00:30:49.190 --> 00:30:52.240 align:start position:0%
whole program and so it gives you that
many<00:30:49.520><c> more</c><00:30:49.730><c> opportunities</c><00:30:50.120><c> to</c><00:30:51.080><c> consider</c><00:30:52.010><c> in</c>

00:30:52.240 --> 00:30:52.250 align:start position:0%
many more opportunities to consider in
 

00:30:52.250 --> 00:30:54.580 align:start position:0%
many more opportunities to consider in
lining<00:30:52.700><c> throughout</c><00:30:53.090><c> your</c><00:30:53.330><c> program</c><00:30:53.570><c> and</c><00:30:53.990><c> once</c>

00:30:54.580 --> 00:30:54.590 align:start position:0%
lining throughout your program and once
 

00:30:54.590 --> 00:30:56.409 align:start position:0%
lining throughout your program and once
again<00:30:54.740><c> there</c><00:30:55.100><c> are</c><00:30:55.160><c> heuristics</c><00:30:55.370><c> that</c><00:30:55.910><c> we</c><00:30:56.210><c> have</c>

00:30:56.409 --> 00:30:56.419 align:start position:0%
again there are heuristics that we have
 

00:30:56.419 --> 00:30:59.470 align:start position:0%
again there are heuristics that we have
determined<00:30:57.220><c> are</c><00:30:58.220><c> the</c><00:30:58.700><c> best</c><00:30:58.970><c> when</c><00:30:59.330><c> you're</c>

00:30:59.470 --> 00:30:59.480 align:start position:0%
determined are the best when you're
 

00:30:59.480 --> 00:31:02.500 align:start position:0%
determined are the best when you're
making<00:30:59.840><c> guesses</c><00:31:00.110><c> about</c><00:31:00.350><c> inlining</c><00:31:01.330><c> and</c><00:31:02.330><c> you</c>

00:31:02.500 --> 00:31:02.510 align:start position:0%
making guesses about inlining and you
 

00:31:02.510 --> 00:31:05.020 align:start position:0%
making guesses about inlining and you
really<00:31:02.690><c> don't</c><00:31:02.960><c> know</c><00:31:03.880><c> what</c><00:31:04.880><c> there</c><00:31:05.000><c> are</c>

00:31:05.020 --> 00:31:05.030 align:start position:0%
really don't know what there are
 

00:31:05.030 --> 00:31:07.360 align:start position:0%
really don't know what there are
functions<00:31:05.480><c> call</c><00:31:05.780><c> it</c><00:31:05.900><c> a</c><00:31:05.960><c> lot</c><00:31:06.169><c> or</c><00:31:06.350><c> not</c><00:31:06.559><c> I'll</c><00:31:07.070><c> be</c>

00:31:07.360 --> 00:31:07.370 align:start position:0%
functions call it a lot or not I'll be
 

00:31:07.370 --> 00:31:08.860 align:start position:0%
functions call it a lot or not I'll be
mentioning<00:31:07.549><c> another</c><00:31:08.120><c> feature</c><00:31:08.390><c> a</c><00:31:08.539><c> little</c>

00:31:08.860 --> 00:31:08.870 align:start position:0%
mentioning another feature a little
 

00:31:08.870 --> 00:31:11.130 align:start position:0%
mentioning another feature a little
later<00:31:09.049><c> on</c><00:31:09.289><c> though</c><00:31:09.530><c> that</c><00:31:09.770><c> deals</c><00:31:10.429><c> with</c><00:31:10.610><c> that</c>

00:31:11.130 --> 00:31:11.140 align:start position:0%
later on though that deals with that
 

00:31:11.140 --> 00:31:14.440 align:start position:0%
later on though that deals with that
this<00:31:12.140><c> is</c><00:31:12.320><c> a</c><00:31:12.580><c> command</c><00:31:13.580><c> line</c><00:31:13.789><c> then</c><00:31:14.059><c> that</c><00:31:14.299><c> would</c>

00:31:14.440 --> 00:31:14.450 align:start position:0%
this is a command line then that would
 

00:31:14.450 --> 00:31:18.690 align:start position:0%
this is a command line then that would
represent<00:31:14.630><c> you</c><00:31:17.230><c> implementing</c><00:31:18.230><c> animodule</c>

00:31:18.690 --> 00:31:18.700 align:start position:0%
represent you implementing animodule
 

00:31:18.700 --> 00:31:21.700 align:start position:0%
represent you implementing animodule
function<00:31:19.700><c> inlining</c><00:31:19.909><c> and</c><00:31:20.480><c> basically</c><00:31:21.470><c> that's</c>

00:31:21.700 --> 00:31:21.710 align:start position:0%
function inlining and basically that's
 

00:31:21.710 --> 00:31:23.740 align:start position:0%
function inlining and basically that's
triggered<00:31:22.250><c> by</c><00:31:22.400><c> putting</c><00:31:22.760><c> all</c><00:31:22.940><c> of</c><00:31:22.970><c> your</c><00:31:23.330><c> your</c>

00:31:23.740 --> 00:31:23.750 align:start position:0%
triggered by putting all of your your
 

00:31:23.750 --> 00:31:25.930 align:start position:0%
triggered by putting all of your your
compilation<00:31:24.590><c> units</c><00:31:24.919><c> on</c><00:31:25.130><c> the</c><00:31:25.280><c> same</c><00:31:25.520><c> compile</c>

00:31:25.930 --> 00:31:25.940 align:start position:0%
compilation units on the same compile
 

00:31:25.940 --> 00:31:28.000 align:start position:0%
compilation units on the same compile
line<00:31:26.210><c> so</c><00:31:26.600><c> the</c><00:31:26.809><c> compiler</c><00:31:27.169><c> can</c><00:31:27.530><c> look</c><00:31:27.710><c> at</c><00:31:27.830><c> them</c>

00:31:28.000 --> 00:31:28.010 align:start position:0%
line so the compiler can look at them
 

00:31:28.010 --> 00:31:33.279 align:start position:0%
line so the compiler can look at them
all<00:31:28.159><c> at</c><00:31:28.340><c> once</c><00:31:30.669><c> the</c><00:31:31.669><c> next</c><00:31:32.090><c> and</c><00:31:32.539><c> Sanjay</c><00:31:32.990><c> talked</c>

00:31:33.279 --> 00:31:33.289 align:start position:0%
all at once the next and Sanjay talked
 

00:31:33.289 --> 00:31:35.350 align:start position:0%
all at once the next and Sanjay talked
about<00:31:33.620><c> this</c><00:31:33.890><c> has</c><00:31:34.220><c> to</c><00:31:34.520><c> do</c><00:31:34.669><c> with</c><00:31:34.700><c> loop</c><00:31:35.120><c> unrolling</c>

00:31:35.350 --> 00:31:35.360 align:start position:0%
about this has to do with loop unrolling
 

00:31:35.360 --> 00:31:38.590 align:start position:0%
about this has to do with loop unrolling
it<00:31:35.990><c> and</c><00:31:36.230><c> the</c><00:31:37.070><c> compiler</c><00:31:37.460><c> can</c><00:31:37.820><c> actually</c><00:31:38.210><c> do</c><00:31:38.419><c> that</c>

00:31:38.590 --> 00:31:38.600 align:start position:0%
it and the compiler can actually do that
 

00:31:38.600 --> 00:31:41.730 align:start position:0%
it and the compiler can actually do that
loop<00:31:38.840><c> unrolling</c><00:31:39.080><c> for</c><00:31:39.740><c> you</c><00:31:39.950><c> once</c><00:31:40.909><c> again</c><00:31:41.299><c> a</c><00:31:41.330><c> very</c>

00:31:41.730 --> 00:31:41.740 align:start position:0%
loop unrolling for you once again a very
 

00:31:41.740 --> 00:31:45.130 align:start position:0%
loop unrolling for you once again a very
simple-minded<00:31:42.740><c> loop</c><00:31:43.130><c> but</c><00:31:43.520><c> it</c><00:31:43.669><c> will</c><00:31:44.630><c> serve</c><00:31:44.900><c> as</c>

00:31:45.130 --> 00:31:45.140 align:start position:0%
simple-minded loop but it will serve as
 

00:31:45.140 --> 00:31:48.310 align:start position:0%
simple-minded loop but it will serve as
a<00:31:45.169><c> representation</c><00:31:45.919><c> here</c><00:31:46.760><c> the</c><00:31:47.630><c> compiler</c><00:31:48.049><c> can</c>

00:31:48.310 --> 00:31:48.320 align:start position:0%
a representation here the compiler can
 

00:31:48.320 --> 00:31:50.919 align:start position:0%
a representation here the compiler can
actually<00:31:48.710><c> deal</c><00:31:49.429><c> with</c><00:31:49.460><c> more</c><00:31:50.090><c> complex</c><00:31:50.600><c> loops</c>

00:31:50.919 --> 00:31:50.929 align:start position:0%
actually deal with more complex loops
 

00:31:50.929 --> 00:31:54.039 align:start position:0%
actually deal with more complex loops
but<00:31:51.850><c> inlining</c><00:31:52.850><c> simply</c><00:31:53.390><c> means</c><00:31:53.600><c> that</c><00:31:53.750><c> it</c>

00:31:54.039 --> 00:31:54.049 align:start position:0%
but inlining simply means that it
 

00:31:54.049 --> 00:31:56.140 align:start position:0%
but inlining simply means that it
reduces<00:31:54.559><c> the</c><00:31:54.740><c> number</c><00:31:54.860><c> of</c><00:31:55.070><c> iterations</c><00:31:55.700><c> of</c><00:31:56.000><c> the</c>

00:31:56.140 --> 00:31:56.150 align:start position:0%
reduces the number of iterations of the
 

00:31:56.150 --> 00:31:59.610 align:start position:0%
reduces the number of iterations of the
loop<00:31:56.360><c> and</c><00:31:56.720><c> it</c><00:31:57.230><c> puts</c><00:31:57.559><c> various</c><00:31:58.549><c> iterations</c>

00:31:59.610 --> 00:31:59.620 align:start position:0%
loop and it puts various iterations
 

00:31:59.620 --> 00:32:02.950 align:start position:0%
loop and it puts various iterations
actually<00:32:00.620><c> in</c><00:32:00.740><c> line</c><00:32:00.980><c> and</c><00:32:01.309><c> so</c><00:32:02.030><c> once</c><00:32:02.210><c> again</c><00:32:02.419><c> what</c>

00:32:02.950 --> 00:32:02.960 align:start position:0%
actually in line and so once again what
 

00:32:02.960 --> 00:32:04.960 align:start position:0%
actually in line and so once again what
you're<00:32:03.140><c> doing</c><00:32:03.380><c> is</c><00:32:03.530><c> cutting</c><00:32:03.799><c> down</c><00:32:04.159><c> on</c><00:32:04.490><c> the</c><00:32:04.700><c> on</c>

00:32:04.960 --> 00:32:04.970 align:start position:0%
you're doing is cutting down on the on
 

00:32:04.970 --> 00:32:08.080 align:start position:0%
you're doing is cutting down on the on
the<00:32:05.390><c> branching</c><00:32:05.929><c> operations</c><00:32:06.860><c> and</c><00:32:07.250><c> trying</c><00:32:07.970><c> to</c>

00:32:08.080 --> 00:32:08.090 align:start position:0%
the branching operations and trying to
 

00:32:08.090 --> 00:32:11.169 align:start position:0%
the branching operations and trying to
give<00:32:08.270><c> the</c><00:32:08.990><c> scheduler</c><00:32:09.650><c> more</c><00:32:10.340><c> opportunities</c>

00:32:11.169 --> 00:32:11.179 align:start position:0%
give the scheduler more opportunities
 

00:32:11.179 --> 00:32:13.240 align:start position:0%
give the scheduler more opportunities
for<00:32:11.210><c> scheduling</c><00:32:11.990><c> the</c><00:32:12.169><c> other</c><00:32:12.320><c> operations</c><00:32:13.010><c> in</c>

00:32:13.240 --> 00:32:13.250 align:start position:0%
for scheduling the other operations in
 

00:32:13.250 --> 00:32:17.230 align:start position:0%
for scheduling the other operations in
the<00:32:13.280><c> functional</c><00:32:13.850><c> unit</c><00:32:15.789><c> there</c><00:32:16.789><c> is</c><00:32:16.970><c> another</c>

00:32:17.230 --> 00:32:17.240 align:start position:0%
the functional unit there is another
 

00:32:17.240 --> 00:32:20.830 align:start position:0%
the functional unit there is another
form<00:32:17.600><c> of</c><00:32:17.780><c> loop</c><00:32:18.590><c> unrolling</c><00:32:19.010><c> that</c><00:32:19.820><c> the</c><00:32:20.330><c> compiler</c>

00:32:20.830 --> 00:32:20.840 align:start position:0%
form of loop unrolling that the compiler
 

00:32:20.840 --> 00:32:23.409 align:start position:0%
form of loop unrolling that the compiler
does<00:32:21.080><c> called</c><00:32:21.530><c> Luke</c><00:32:21.770><c> peeling</c><00:32:22.309><c> and</c><00:32:22.549><c> in</c><00:32:23.120><c> that</c>

00:32:23.409 --> 00:32:23.419 align:start position:0%
does called Luke peeling and in that
 

00:32:23.419 --> 00:32:25.659 align:start position:0%
does called Luke peeling and in that
situation<00:32:24.169><c> you</c><00:32:24.530><c> can</c><00:32:24.830><c> see</c><00:32:25.010><c> here</c><00:32:25.190><c> we</c><00:32:25.340><c> have</c><00:32:25.520><c> an</c>

00:32:25.659 --> 00:32:25.669 align:start position:0%
situation you can see here we have an
 

00:32:25.669 --> 00:32:27.490 align:start position:0%
situation you can see here we have an
even<00:32:25.909><c> smaller</c><00:32:26.059><c> loop</c><00:32:26.510><c> and</c><00:32:27.049><c> these</c><00:32:27.260><c> two</c>

00:32:27.490 --> 00:32:27.500 align:start position:0%
even smaller loop and these two
 

00:32:27.500 --> 00:32:30.100 align:start position:0%
even smaller loop and these two
occurring<00:32:28.070><c> code</c><00:32:28.400><c> and</c><00:32:28.700><c> the</c><00:32:29.360><c> compiler</c><00:32:29.750><c> will</c>

00:32:30.100 --> 00:32:30.110 align:start position:0%
occurring code and the compiler will
 

00:32:30.110 --> 00:32:33.279 align:start position:0%
occurring code and the compiler will
simply<00:32:30.530><c> unroll</c><00:32:31.010><c> the</c><00:32:31.640><c> entire</c><00:32:31.970><c> loop</c><00:32:32.840><c> and</c>

00:32:33.279 --> 00:32:33.289 align:start position:0%
simply unroll the entire loop and
 

00:32:33.289 --> 00:32:38.919 align:start position:0%
simply unroll the entire loop and
laminate<00:32:33.830><c> the</c><00:32:34.039><c> loop</c><00:32:34.549><c> all</c><00:32:34.760><c> together</c>

00:32:38.919 --> 00:32:38.929 align:start position:0%
 
 

00:32:38.929 --> 00:32:42.409 align:start position:0%
 
the<00:32:39.929><c> next</c><00:32:40.200><c> option</c><00:32:40.380><c> is</c><00:32:40.830><c> a</c><00:32:41.100><c> loop</c><00:32:41.429><c> transposition</c>

00:32:42.409 --> 00:32:42.419 align:start position:0%
the next option is a loop transposition
 

00:32:42.419 --> 00:32:46.389 align:start position:0%
the next option is a loop transposition
and<00:32:42.659><c> we</c><00:32:42.750><c> have</c><00:32:42.960><c> several</c><00:32:43.640><c> loop</c><00:32:44.690><c> transpositions</c>

00:32:46.389 --> 00:32:46.399 align:start position:0%
and we have several loop transpositions
 

00:32:46.399 --> 00:32:49.730 align:start position:0%
and we have several loop transpositions
this<00:32:47.399><c> is</c><00:32:47.610><c> similar</c><00:32:48.360><c> to</c><00:32:48.539><c> put</c><00:32:48.840><c> Sanjay</c><00:32:49.529><c> was</c>

00:32:49.730 --> 00:32:49.740 align:start position:0%
this is similar to put Sanjay was
 

00:32:49.740 --> 00:32:52.279 align:start position:0%
this is similar to put Sanjay was
talking<00:32:50.220><c> about</c><00:32:50.429><c> and</c><00:32:50.669><c> I</c><00:32:50.850><c> think</c><00:32:50.880><c> he</c><00:32:51.330><c> indicated</c>

00:32:52.279 --> 00:32:52.289 align:start position:0%
talking about and I think he indicated
 

00:32:52.289 --> 00:32:55.159 align:start position:0%
talking about and I think he indicated
you<00:32:52.529><c> could</c><00:32:53.059><c> turn</c><00:32:54.059><c> on</c><00:32:54.269><c> this</c><00:32:54.390><c> option</c><00:32:54.960><c> but</c>

00:32:55.159 --> 00:32:55.169 align:start position:0%
you could turn on this option but
 

00:32:55.169 --> 00:32:57.259 align:start position:0%
you could turn on this option but
basically<00:32:55.590><c> we</c><00:32:55.860><c> have</c><00:32:55.890><c> a</c><00:32:56.070><c> double</c><00:32:56.429><c> nested</c><00:32:57.090><c> loop</c>

00:32:57.259 --> 00:32:57.269 align:start position:0%
basically we have a double nested loop
 

00:32:57.269 --> 00:32:59.840 align:start position:0%
basically we have a double nested loop
here<00:32:57.600><c> and</c><00:32:57.809><c> it</c><00:32:58.649><c> is</c><00:32:58.679><c> stepping</c><00:32:59.220><c> through</c><00:32:59.460><c> memory</c>

00:32:59.840 --> 00:32:59.850 align:start position:0%
here and it is stepping through memory
 

00:32:59.850 --> 00:33:02.139 align:start position:0%
here and it is stepping through memory
and<00:33:00.090><c> fairly</c><00:33:00.480><c> large</c><00:33:00.690><c> increments</c><00:33:01.380><c> in</c><00:33:01.500><c> this</c><00:33:01.679><c> case</c>

00:33:02.139 --> 00:33:02.149 align:start position:0%
and fairly large increments in this case
 

00:33:02.149 --> 00:33:06.320 align:start position:0%
and fairly large increments in this case
1335<00:33:03.149><c> and</c><00:33:03.860><c> that</c><00:33:04.860><c> has</c><00:33:05.100><c> a</c><00:33:05.130><c> terrible</c><00:33:05.580><c> effect</c><00:33:05.760><c> on</c>

00:33:06.320 --> 00:33:06.330 align:start position:0%
1335 and that has a terrible effect on
 

00:33:06.330 --> 00:33:09.080 align:start position:0%
1335 and that has a terrible effect on
on<00:33:06.630><c> the</c><00:33:07.110><c> paging</c><00:33:07.590><c> within</c><00:33:07.980><c> the</c><00:33:08.100><c> machine</c><00:33:08.490><c> and</c><00:33:08.789><c> so</c>

00:33:09.080 --> 00:33:09.090 align:start position:0%
on the paging within the machine and so
 

00:33:09.090 --> 00:33:12.019 align:start position:0%
on the paging within the machine and so
for<00:33:09.390><c> data</c><00:33:09.630><c> locality</c><00:33:10.169><c> reasons</c><00:33:10.950><c> we</c><00:33:11.610><c> include</c>

00:33:12.019 --> 00:33:12.029 align:start position:0%
for data locality reasons we include
 

00:33:12.029 --> 00:33:15.590 align:start position:0%
for data locality reasons we include
this<00:33:12.409><c> loop</c><00:33:13.409><c> transpose</c><00:33:14.100><c> function</c><00:33:14.789><c> and</c><00:33:15.269><c> what</c><00:33:15.480><c> it</c>

00:33:15.590 --> 00:33:15.600 align:start position:0%
this loop transpose function and what it
 

00:33:15.600 --> 00:33:17.299 align:start position:0%
this loop transpose function and what it
will<00:33:15.720><c> do</c><00:33:15.960><c> is</c><00:33:15.990><c> the</c><00:33:16.350><c> compiler</c><00:33:16.710><c> is</c><00:33:16.919><c> able</c><00:33:17.190><c> to</c>

00:33:17.299 --> 00:33:17.309 align:start position:0%
will do is the compiler is able to
 

00:33:17.309 --> 00:33:21.049 align:start position:0%
will do is the compiler is able to
recognize<00:33:17.850><c> that</c><00:33:18.200><c> situation</c><00:33:19.200><c> and</c><00:33:19.429><c> actually</c><00:33:20.429><c> do</c>

00:33:21.049 --> 00:33:21.059 align:start position:0%
recognize that situation and actually do
 

00:33:21.059 --> 00:33:22.820 align:start position:0%
recognize that situation and actually do
the<00:33:21.210><c> transposition</c><00:33:21.659><c> of</c><00:33:22.110><c> the</c><00:33:22.169><c> loop</c><00:33:22.409><c> so</c><00:33:22.799><c> that</c>

00:33:22.820 --> 00:33:22.830 align:start position:0%
the transposition of the loop so that
 

00:33:22.830 --> 00:33:26.090 align:start position:0%
the transposition of the loop so that
now<00:33:23.250><c> we're</c><00:33:24.090><c> incrementing</c><00:33:24.630><c> in</c><00:33:25.110><c> increments</c><00:33:25.830><c> of</c>

00:33:26.090 --> 00:33:26.100 align:start position:0%
now we're incrementing in increments of
 

00:33:26.100 --> 00:33:33.049 align:start position:0%
now we're incrementing in increments of
1<00:33:27.000><c> throughout</c><00:33:27.510><c> the</c><00:33:27.750><c> memory</c><00:33:31.880><c> we</c><00:33:32.880><c> have</c><00:33:33.029><c> a</c>

00:33:33.049 --> 00:33:33.059 align:start position:0%
1 throughout the memory we have a
 

00:33:33.059 --> 00:33:35.450 align:start position:0%
1 throughout the memory we have a
specialized<00:33:33.720><c> optimization</c><00:33:34.649><c> called</c><00:33:34.919><c> loop</c><00:33:35.190><c> two</c>

00:33:35.450 --> 00:33:35.460 align:start position:0%
specialized optimization called loop two
 

00:33:35.460 --> 00:33:39.129 align:start position:0%
specialized optimization called loop two
men<00:33:35.669><c> set</c><00:33:36.000><c> and</c><00:33:36.330><c> what</c><00:33:37.019><c> that</c><00:33:37.200><c> is</c><00:33:37.230><c> is</c><00:33:37.470><c> if</c><00:33:38.399><c> you</c><00:33:38.610><c> have</c>

00:33:39.129 --> 00:33:39.139 align:start position:0%
men set and what that is is if you have
 

00:33:39.139 --> 00:33:41.240 align:start position:0%
men set and what that is is if you have
initialization<00:33:40.139><c> types</c><00:33:40.409><c> of</c><00:33:40.649><c> arrays</c><00:33:40.950><c> where</c>

00:33:41.240 --> 00:33:41.250 align:start position:0%
initialization types of arrays where
 

00:33:41.250 --> 00:33:44.629 align:start position:0%
initialization types of arrays where
you're<00:33:41.429><c> initializing</c><00:33:42.090><c> things</c><00:33:42.360><c> to</c><00:33:42.690><c> 20</c><00:33:43.639><c> the</c>

00:33:44.629 --> 00:33:44.639 align:start position:0%
you're initializing things to 20 the
 

00:33:44.639 --> 00:33:46.549 align:start position:0%
you're initializing things to 20 the
compiler<00:33:45.029><c> actually</c><00:33:45.330><c> will</c><00:33:45.720><c> transform</c><00:33:46.260><c> that</c>

00:33:46.549 --> 00:33:46.559 align:start position:0%
compiler actually will transform that
 

00:33:46.559 --> 00:33:49.340 align:start position:0%
compiler actually will transform that
into<00:33:46.620><c> a</c><00:33:46.950><c> call</c><00:33:47.190><c> to</c><00:33:47.340><c> memset</c><00:33:47.820><c> and</c><00:33:48.120><c> memset</c><00:33:48.659><c> on</c><00:33:48.899><c> each</c>

00:33:49.340 --> 00:33:49.350 align:start position:0%
into a call to memset and memset on each
 

00:33:49.350 --> 00:33:51.919 align:start position:0%
into a call to memset and memset on each
of<00:33:49.590><c> our</c><00:33:49.710><c> architectures</c><00:33:50.700><c> including</c><00:33:51.330><c> the</c><00:33:51.480><c> G</c><00:33:51.659><c> fly</c>

00:33:51.919 --> 00:33:51.929 align:start position:0%
of our architectures including the G fly
 

00:33:51.929 --> 00:33:55.250 align:start position:0%
of our architectures including the G fly
has<00:33:52.710><c> been</c><00:33:52.980><c> highly</c><00:33:53.429><c> tuned</c><00:33:53.760><c> in</c><00:33:54.450><c> such</c><00:33:54.960><c> a</c><00:33:54.990><c> way</c><00:33:55.230><c> that</c>

00:33:55.250 --> 00:33:55.260 align:start position:0%
has been highly tuned in such a way that
 

00:33:55.260 --> 00:33:59.180 align:start position:0%
has been highly tuned in such a way that
that<00:33:55.860><c> you</c><00:33:56.039><c> you</c><00:33:56.730><c> can't</c><00:33:56.970><c> beat</c><00:33:57.240><c> it</c><00:33:57.269><c> with</c><00:33:58.190><c> with</c>

00:33:59.180 --> 00:33:59.190 align:start position:0%
that you you can't beat it with with
 

00:33:59.190 --> 00:34:02.720 align:start position:0%
that you you can't beat it with with
your<00:33:59.399><c> own</c><00:33:59.519><c> code</c><00:33:59.909><c> and</c><00:34:00.470><c> last</c><00:34:01.470><c> we</c><00:34:02.309><c> talked</c><00:34:02.549><c> about</c>

00:34:02.720 --> 00:34:02.730 align:start position:0%
your own code and last we talked about
 

00:34:02.730 --> 00:34:05.570 align:start position:0%
your own code and last we talked about
tuning<00:34:03.389><c> for</c><00:34:03.630><c> g5</c><00:34:04.080><c> and</c><00:34:04.110><c> tuning</c><00:34:04.799><c> for</c><00:34:04.980><c> g5</c><00:34:05.370><c> is</c>

00:34:05.570 --> 00:34:05.580 align:start position:0%
tuning for g5 and tuning for g5 is
 

00:34:05.580 --> 00:34:07.460 align:start position:0%
tuning for g5 and tuning for g5 is
really<00:34:05.909><c> important</c><00:34:06.450><c> because</c><00:34:06.570><c> it</c><00:34:06.960><c> tells</c><00:34:06.990><c> the</c>

00:34:07.460 --> 00:34:07.470 align:start position:0%
really important because it tells the
 

00:34:07.470 --> 00:34:12.109 align:start position:0%
really important because it tells the
compiler<00:34:08.599><c> this</c><00:34:09.599><c> is</c><00:34:09.780><c> a</c><00:34:09.810><c> g5</c><00:34:10.290><c> architecture</c><00:34:11.280><c> the</c>

00:34:12.109 --> 00:34:12.119 align:start position:0%
compiler this is a g5 architecture the
 

00:34:12.119 --> 00:34:14.300 align:start position:0%
compiler this is a g5 architecture the
compiler<00:34:12.629><c> understands</c><00:34:13.349><c> then</c><00:34:13.560><c> of</c><00:34:13.830><c> how</c><00:34:14.250><c> to</c>

00:34:14.300 --> 00:34:14.310 align:start position:0%
compiler understands then of how to
 

00:34:14.310 --> 00:34:16.460 align:start position:0%
compiler understands then of how to
schedule<00:34:14.700><c> instructions</c><00:34:15.510><c> for</c><00:34:15.810><c> the</c><00:34:15.929><c> maximum</c>

00:34:16.460 --> 00:34:16.470 align:start position:0%
schedule instructions for the maximum
 

00:34:16.470 --> 00:34:19.040 align:start position:0%
schedule instructions for the maximum
grouping<00:34:16.980><c> so</c><00:34:17.580><c> that</c><00:34:17.820><c> we</c><00:34:18.000><c> can</c><00:34:18.210><c> keep</c><00:34:18.450><c> all</c><00:34:18.780><c> of</c><00:34:18.810><c> the</c>

00:34:19.040 --> 00:34:19.050 align:start position:0%
grouping so that we can keep all of the
 

00:34:19.050 --> 00:34:21.470 align:start position:0%
grouping so that we can keep all of the
functional<00:34:19.500><c> units</c><00:34:19.919><c> going</c><00:34:20.399><c> as</c><00:34:20.970><c> much</c><00:34:21.300><c> as</c>

00:34:21.470 --> 00:34:21.480 align:start position:0%
functional units going as much as
 

00:34:21.480 --> 00:34:23.750 align:start position:0%
functional units going as much as
possible<00:34:21.690><c> in</c><00:34:22.139><c> parallel</c><00:34:22.649><c> so</c><00:34:22.679><c> we're</c><00:34:23.580><c> really</c>

00:34:23.750 --> 00:34:23.760 align:start position:0%
possible in parallel so we're really
 

00:34:23.760 --> 00:34:27.500 align:start position:0%
possible in parallel so we're really
extracting<00:34:24.510><c> the</c><00:34:24.659><c> power</c><00:34:24.899><c> of</c><00:34:25.520><c> the</c><00:34:26.520><c> having</c><00:34:27.419><c> a</c>

00:34:27.500 --> 00:34:27.510 align:start position:0%
extracting the power of the having a
 

00:34:27.510 --> 00:34:31.879 align:start position:0%
extracting the power of the having a
wide<00:34:27.750><c> functional</c><00:34:28.470><c> unit</c><00:34:28.830><c> set</c><00:34:30.859><c> okay</c><00:34:31.859><c> i</c>

00:34:31.879 --> 00:34:31.889 align:start position:0%
wide functional unit set okay i
 

00:34:31.889 --> 00:34:36.020 align:start position:0%
wide functional unit set okay i
mentioned<00:34:32.760><c> standard</c><00:34:33.240><c> conformance</c><00:34:33.929><c> and</c><00:34:35.000><c> so</c><00:34:36.000><c> i</c>

00:34:36.020 --> 00:34:36.030 align:start position:0%
mentioned standard conformance and so i
 

00:34:36.030 --> 00:34:39.290 align:start position:0%
mentioned standard conformance and so i
have<00:34:36.210><c> a</c><00:34:36.240><c> couple</c><00:34:36.480><c> relaxation</c><00:34:37.730><c> rules</c><00:34:38.730><c> here</c><00:34:39.089><c> one</c>

00:34:39.290 --> 00:34:39.300 align:start position:0%
have a couple relaxation rules here one
 

00:34:39.300 --> 00:34:42.230 align:start position:0%
have a couple relaxation rules here one
of<00:34:39.330><c> them</c><00:34:39.629><c> is</c><00:34:39.869><c> having</c><00:34:40.800><c> to</c><00:34:40.950><c> do</c><00:34:41.099><c> with</c><00:34:41.399><c> an</c><00:34:41.879><c> option</c>

00:34:42.230 --> 00:34:42.240 align:start position:0%
of them is having to do with an option
 

00:34:42.240 --> 00:34:45.589 align:start position:0%
of them is having to do with an option
called<00:34:42.300><c> strict</c><00:34:42.810><c> aliasing</c><00:34:42.990><c> and</c><00:34:44.000><c> aliasing</c><00:34:45.000><c> is</c>

00:34:45.589 --> 00:34:45.599 align:start position:0%
called strict aliasing and aliasing is
 

00:34:45.599 --> 00:34:47.389 align:start position:0%
called strict aliasing and aliasing is
the<00:34:45.839><c> situation</c><00:34:46.560><c> where</c>

00:34:47.389 --> 00:34:47.399 align:start position:0%
the situation where
 

00:34:47.399 --> 00:34:49.700 align:start position:0%
the situation where
you<00:34:47.789><c> have</c><00:34:48.000><c> point2</c><00:34:48.690><c> pointers</c><00:34:49.200><c> than</c><00:34:49.500><c> those</c>

00:34:49.700 --> 00:34:49.710 align:start position:0%
you have point2 pointers than those
 

00:34:49.710 --> 00:34:51.680 align:start position:0%
you have point2 pointers than those
pointers<00:34:50.190><c> are</c><00:34:50.460><c> actually</c><00:34:50.819><c> pointing</c><00:34:51.299><c> to</c><00:34:51.510><c> the</c>

00:34:51.680 --> 00:34:51.690 align:start position:0%
pointers are actually pointing to the
 

00:34:51.690 --> 00:34:55.940 align:start position:0%
pointers are actually pointing to the
same<00:34:51.899><c> object</c><00:34:52.470><c> so</c><00:34:53.069><c> those</c><00:34:53.279><c> objects</c><00:34:53.730><c> are</c><00:34:54.950><c> then</c>

00:34:55.940 --> 00:34:55.950 align:start position:0%
same object so those objects are then
 

00:34:55.950 --> 00:34:59.059 align:start position:0%
same object so those objects are then
alias<00:34:56.549><c> and</c><00:34:56.879><c> the</c><00:34:57.420><c> compiler</c><00:34:57.930><c> often</c><00:34:58.410><c> can't</c><00:34:58.770><c> tell</c>

00:34:59.059 --> 00:34:59.069 align:start position:0%
alias and the compiler often can't tell
 

00:34:59.069 --> 00:35:00.950 align:start position:0%
alias and the compiler often can't tell
well<00:34:59.520><c> even</c><00:34:59.730><c> if</c><00:35:00.000><c> there</c><00:35:00.210><c> are</c><00:35:00.240><c> different</c><00:35:00.750><c> data</c>

00:35:00.950 --> 00:35:00.960 align:start position:0%
well even if there are different data
 

00:35:00.960 --> 00:35:05.450 align:start position:0%
well even if there are different data
types<00:35:01.109><c> if</c><00:35:02.069><c> in</c><00:35:02.309><c> fact</c><00:35:03.260><c> the</c><00:35:04.260><c> objects</c><00:35:04.799><c> are</c><00:35:04.920><c> aliased</c>

00:35:05.450 --> 00:35:05.460 align:start position:0%
types if in fact the objects are aliased
 

00:35:05.460 --> 00:35:07.039 align:start position:0%
types if in fact the objects are aliased
and<00:35:05.700><c> so</c><00:35:05.849><c> it</c><00:35:06.000><c> has</c><00:35:06.180><c> to</c><00:35:06.210><c> make</c><00:35:06.480><c> the</c><00:35:06.690><c> assumption</c>

00:35:07.039 --> 00:35:07.049 align:start position:0%
and so it has to make the assumption
 

00:35:07.049 --> 00:35:10.670 align:start position:0%
and so it has to make the assumption
that<00:35:07.230><c> they</c><00:35:07.619><c> are</c><00:35:08.150><c> well</c><00:35:09.170><c> you</c><00:35:10.170><c> can</c><00:35:10.380><c> help</c><00:35:10.529><c> the</c>

00:35:10.670 --> 00:35:10.680 align:start position:0%
that they are well you can help the
 

00:35:10.680 --> 00:35:12.920 align:start position:0%
that they are well you can help the
compiler<00:35:11.069><c> out</c><00:35:11.369><c> by</c><00:35:11.730><c> if</c><00:35:12.089><c> you</c><00:35:12.390><c> know</c><00:35:12.599><c> in</c><00:35:12.900><c> your</c>

00:35:12.920 --> 00:35:12.930 align:start position:0%
compiler out by if you know in your
 

00:35:12.930 --> 00:35:14.750 align:start position:0%
compiler out by if you know in your
program<00:35:13.529><c> and</c><00:35:13.710><c> this</c><00:35:13.859><c> is</c><00:35:14.039><c> when</c><00:35:14.190><c> your</c><00:35:14.339><c> program</c>

00:35:14.750 --> 00:35:14.760 align:start position:0%
program and this is when your program
 

00:35:14.760 --> 00:35:18.529 align:start position:0%
program and this is when your program
knowledge<00:35:15.680><c> items</c><00:35:16.680><c> if</c><00:35:16.920><c> you</c><00:35:17.430><c> know</c><00:35:17.579><c> that</c><00:35:17.609><c> your</c>

00:35:18.529 --> 00:35:18.539 align:start position:0%
knowledge items if you know that your
 

00:35:18.539 --> 00:35:20.420 align:start position:0%
knowledge items if you know that your
pointers<00:35:18.990><c> are</c><00:35:19.230><c> never</c><00:35:19.440><c> alias</c><00:35:19.920><c> within</c><00:35:20.309><c> your</c>

00:35:20.420 --> 00:35:20.430 align:start position:0%
pointers are never alias within your
 

00:35:20.430 --> 00:35:22.730 align:start position:0%
pointers are never alias within your
program<00:35:20.670><c> you</c><00:35:21.390><c> can</c><00:35:21.569><c> tell</c><00:35:21.839><c> the</c><00:35:21.990><c> compiler</c><00:35:22.319><c> use</c>

00:35:22.730 --> 00:35:22.740 align:start position:0%
program you can tell the compiler use
 

00:35:22.740 --> 00:35:26.180 align:start position:0%
program you can tell the compiler use
strict<00:35:23.130><c> aliasing</c><00:35:23.930><c> assumptions</c><00:35:24.930><c> here</c><00:35:25.289><c> and</c><00:35:25.500><c> so</c>

00:35:26.180 --> 00:35:26.190 align:start position:0%
strict aliasing assumptions here and so
 

00:35:26.190 --> 00:35:30.740 align:start position:0%
strict aliasing assumptions here and so
in<00:35:26.369><c> the</c><00:35:26.520><c> example</c><00:35:29.029><c> basically</c><00:35:30.029><c> what</c><00:35:30.270><c> this</c><00:35:30.420><c> means</c>

00:35:30.740 --> 00:35:30.750 align:start position:0%
in the example basically what this means
 

00:35:30.750 --> 00:35:33.190 align:start position:0%
in the example basically what this means
is<00:35:31.109><c> and</c><00:35:31.440><c> this</c><00:35:31.619><c> is</c><00:35:31.680><c> a</c><00:35:31.890><c> very</c><00:35:32.039><c> simple</c><00:35:32.460><c> example</c>

00:35:33.190 --> 00:35:33.200 align:start position:0%
is and this is a very simple example
 

00:35:33.200 --> 00:35:35.870 align:start position:0%
is and this is a very simple example
strict<00:35:34.200><c> aliasing</c><00:35:34.380><c> tells</c><00:35:35.010><c> the</c><00:35:35.220><c> compiler</c><00:35:35.549><c> by</c>

00:35:35.870 --> 00:35:35.880 align:start position:0%
strict aliasing tells the compiler by
 

00:35:35.880 --> 00:35:39.980 align:start position:0%
strict aliasing tells the compiler by
the<00:35:35.940><c> way</c><00:35:36.210><c> that</c><00:35:36.510><c> that</c><00:35:36.960><c> if</c><00:35:38.180><c> pointers</c><00:35:39.180><c> are</c><00:35:39.450><c> of</c><00:35:39.630><c> a</c>

00:35:39.980 --> 00:35:39.990 align:start position:0%
the way that that if pointers are of a
 

00:35:39.990 --> 00:35:42.349 align:start position:0%
the way that that if pointers are of a
different<00:35:40.140><c> data</c><00:35:40.680><c> type</c><00:35:41.099><c> they</c><00:35:41.640><c> will</c><00:35:41.910><c> not</c><00:35:42.089><c> be</c><00:35:42.329><c> a</c>

00:35:42.349 --> 00:35:42.359 align:start position:0%
different data type they will not be a
 

00:35:42.359 --> 00:35:44.950 align:start position:0%
different data type they will not be a
less<00:35:42.750><c> you</c><00:35:42.990><c> can</c><00:35:43.140><c> assume</c><00:35:43.500><c> they're</c><00:35:43.710><c> not</c><00:35:43.890><c> alias</c><00:35:44.339><c> so</c>

00:35:44.950 --> 00:35:44.960 align:start position:0%
less you can assume they're not alias so
 

00:35:44.960 --> 00:35:49.099 align:start position:0%
less you can assume they're not alias so
in<00:35:45.960><c> this</c><00:35:46.319><c> particular</c><00:35:46.559><c> case</c><00:35:47.220><c> here</c><00:35:48.109><c> without</c>

00:35:49.099 --> 00:35:49.109 align:start position:0%
in this particular case here without
 

00:35:49.109 --> 00:35:51.410 align:start position:0%
in this particular case here without
strict<00:35:49.680><c> aliasing</c><00:35:49.920><c> we</c><00:35:50.549><c> would</c><00:35:50.760><c> actually</c><00:35:51.180><c> have</c>

00:35:51.410 --> 00:35:51.420 align:start position:0%
strict aliasing we would actually have
 

00:35:51.420 --> 00:35:54.019 align:start position:0%
strict aliasing we would actually have
to<00:35:51.450><c> reload</c><00:35:52.079><c> the</c><00:35:52.349><c> ti</c><00:35:52.589><c> with</c><00:35:53.099><c> one</c><00:35:53.430><c> before</c><00:35:53.849><c> we</c>

00:35:54.019 --> 00:35:54.029 align:start position:0%
to reload the ti with one before we
 

00:35:54.029 --> 00:35:57.620 align:start position:0%
to reload the ti with one before we
return<00:35:54.359><c> p</c><00:35:54.809><c> I</c><00:35:55.670><c> by</c><00:35:56.670><c> saying</c><00:35:57.059><c> strict</c><00:35:57.420><c> aliasing</c>

00:35:57.620 --> 00:35:57.630 align:start position:0%
return p I by saying strict aliasing
 

00:35:57.630 --> 00:36:00.920 align:start position:0%
return p I by saying strict aliasing
we're<00:35:58.230><c> able</c><00:35:58.410><c> to</c><00:35:59.450><c> understand</c><00:36:00.450><c> that</c><00:36:00.690><c> we</c><00:36:00.809><c> don't</c>

00:36:00.920 --> 00:36:00.930 align:start position:0%
we're able to understand that we don't
 

00:36:00.930 --> 00:36:02.660 align:start position:0%
we're able to understand that we don't
have<00:36:01.140><c> to</c><00:36:01.260><c> worry</c><00:36:01.440><c> about</c><00:36:01.589><c> reloading</c><00:36:02.099><c> that</c><00:36:02.430><c> and</c>

00:36:02.660 --> 00:36:02.670 align:start position:0%
have to worry about reloading that and
 

00:36:02.670 --> 00:36:04.700 align:start position:0%
have to worry about reloading that and
in<00:36:02.789><c> fact</c><00:36:02.819><c> can</c><00:36:03.240><c> be</c><00:36:03.270><c> put</c><00:36:03.599><c> into</c><00:36:03.750><c> a</c><00:36:03.900><c> registering</c>

00:36:04.700 --> 00:36:04.710 align:start position:0%
in fact can be put into a registering
 

00:36:04.710 --> 00:36:08.539 align:start position:0%
in fact can be put into a registering
and<00:36:05.210><c> return</c><00:36:06.210><c> that</c><00:36:06.510><c> way</c><00:36:06.920><c> so</c><00:36:07.920><c> this</c><00:36:08.130><c> can</c><00:36:08.339><c> have</c><00:36:08.520><c> a</c>

00:36:08.539 --> 00:36:08.549 align:start position:0%
and return that way so this can have a
 

00:36:08.549 --> 00:36:11.180 align:start position:0%
and return that way so this can have a
interestingly<00:36:09.510><c> up</c><00:36:10.170><c> in</c><00:36:10.380><c> many</c><00:36:10.619><c> programs</c><00:36:11.099><c> a</c>

00:36:11.180 --> 00:36:11.190 align:start position:0%
interestingly up in many programs a
 

00:36:11.190 --> 00:36:18.289 align:start position:0%
interestingly up in many programs a
pretty<00:36:11.849><c> big</c><00:36:12.029><c> impact</c><00:36:15.410><c> the</c><00:36:16.410><c> second</c><00:36:17.029><c> that</c><00:36:18.029><c> falls</c>

00:36:18.289 --> 00:36:18.299 align:start position:0%
pretty big impact the second that falls
 

00:36:18.299 --> 00:36:21.200 align:start position:0%
pretty big impact the second that falls
within<00:36:18.569><c> the</c><00:36:18.779><c> area</c><00:36:19.049><c> of</c><00:36:19.260><c> conformance</c><00:36:19.950><c> is</c><00:36:20.250><c> our</c>

00:36:21.200 --> 00:36:21.210 align:start position:0%
within the area of conformance is our
 

00:36:21.210 --> 00:36:24.529 align:start position:0%
within the area of conformance is our
fast<00:36:21.660><c> NASA</c><00:36:22.020><c> option</c><00:36:22.920><c> and</c><00:36:23.130><c> fast</c><00:36:23.760><c> math</c><00:36:24.059><c> you</c>

00:36:24.529 --> 00:36:24.539 align:start position:0%
fast NASA option and fast math you
 

00:36:24.539 --> 00:36:26.420 align:start position:0%
fast NASA option and fast math you
should<00:36:24.779><c> understand</c><00:36:25.349><c> is</c><00:36:25.470><c> not</c><00:36:25.710><c> I</c><00:36:25.740><c> Tripoli</c>

00:36:26.420 --> 00:36:26.430 align:start position:0%
should understand is not I Tripoli
 

00:36:26.430 --> 00:36:30.109 align:start position:0%
should understand is not I Tripoli
conform<00:36:26.940><c> it</c><00:36:27.119><c> but</c><00:36:27.900><c> by</c><00:36:28.380><c> the</c><00:36:28.440><c> way</c><00:36:28.770><c> almost</c><00:36:29.549><c> all</c>

00:36:30.109 --> 00:36:30.119 align:start position:0%
conform it but by the way almost all
 

00:36:30.119 --> 00:36:32.809 align:start position:0%
conform it but by the way almost all
code<00:36:30.650><c> doesn't</c><00:36:31.650><c> require</c><00:36:31.920><c> actually</c>

00:36:32.809 --> 00:36:32.819 align:start position:0%
code doesn't require actually
 

00:36:32.819 --> 00:36:36.230 align:start position:0%
code doesn't require actually
conformance<00:36:33.510><c> and</c><00:36:33.799><c> you</c><00:36:34.799><c> know</c><00:36:35.010><c> that</c><00:36:35.279><c> if</c><00:36:35.520><c> it</c><00:36:36.000><c> does</c>

00:36:36.230 --> 00:36:36.240 align:start position:0%
conformance and you know that if it does
 

00:36:36.240 --> 00:36:41.180 align:start position:0%
conformance and you know that if it does
and<00:36:36.660><c> so</c><00:36:36.869><c> by</c><00:36:37.559><c> relaxing</c><00:36:38.250><c> that</c><00:36:38.700><c> rule</c><00:36:39.799><c> that</c><00:36:40.799><c> we</c>

00:36:41.180 --> 00:36:41.190 align:start position:0%
and so by relaxing that rule that we
 

00:36:41.190 --> 00:36:43.670 align:start position:0%
and so by relaxing that rule that we
relax<00:36:41.549><c> that</c><00:36:41.819><c> back</c><00:36:42.089><c> to</c><00:36:42.450><c> the</c><00:36:42.900><c> compiler</c><00:36:43.319><c> can</c>

00:36:43.670 --> 00:36:43.680 align:start position:0%
relax that back to the compiler can
 

00:36:43.680 --> 00:36:47.870 align:start position:0%
relax that back to the compiler can
assume<00:36:44.099><c> that</c><00:36:45.029><c> the</c><00:36:46.069><c> associative</c><00:36:47.069><c> distributive</c>

00:36:47.870 --> 00:36:47.880 align:start position:0%
assume that the associative distributive
 

00:36:47.880 --> 00:36:50.750 align:start position:0%
assume that the associative distributive
and<00:36:48.240><c> community</c><00:36:48.869><c> principles</c><00:36:49.650><c> hold</c><00:36:50.010><c> and</c><00:36:50.369><c> so</c><00:36:50.579><c> it</c>

00:36:50.750 --> 00:36:50.760 align:start position:0%
and community principles hold and so it
 

00:36:50.760 --> 00:36:53.460 align:start position:0%
and community principles hold and so it
can<00:36:50.970><c> actually</c><00:36:51.480><c> rearrange</c><00:36:52.289><c> code</c><00:36:52.770><c> and</c>

00:36:53.460 --> 00:36:53.470 align:start position:0%
can actually rearrange code and
 

00:36:53.470 --> 00:36:55.859 align:start position:0%
can actually rearrange code and
and<00:36:53.560><c> the</c><00:36:53.980><c> fashion</c><00:36:54.490><c> that</c><00:36:54.670><c> I</c><00:36:54.700><c> show</c><00:36:55.090><c> here</c><00:36:55.420><c> on</c><00:36:55.480><c> the</c>

00:36:55.859 --> 00:36:55.869 align:start position:0%
and the fashion that I show here on the
 

00:36:55.869 --> 00:37:01.320 align:start position:0%
and the fashion that I show here on the
on<00:36:56.859><c> the</c><00:36:56.920><c> screen</c><00:36:58.349><c> to</c><00:36:59.349><c> best</c><00:36:59.710><c> utilize</c><00:37:00.330><c> the</c>

00:37:01.320 --> 00:37:01.330 align:start position:0%
on the screen to best utilize the
 

00:37:01.330 --> 00:37:04.920 align:start position:0%
on the screen to best utilize the
scheduling<00:37:01.840><c> of</c><00:37:01.990><c> math</c><00:37:02.290><c> and</c><00:37:03.000><c> the</c><00:37:04.000><c> computation</c>

00:37:04.920 --> 00:37:04.930 align:start position:0%
scheduling of math and the computation
 

00:37:04.930 --> 00:37:07.380 align:start position:0%
scheduling of math and the computation
of<00:37:05.050><c> these</c><00:37:05.619><c> operations</c><00:37:06.400><c> within</c><00:37:06.670><c> the</c><00:37:06.970><c> system</c>

00:37:07.380 --> 00:37:07.390 align:start position:0%
of these operations within the system
 

00:37:07.390 --> 00:37:09.810 align:start position:0%
of these operations within the system
this<00:37:08.020><c> is</c><00:37:08.230><c> another</c><00:37:08.500><c> one</c><00:37:08.800><c> that</c><00:37:08.830><c> can</c><00:37:09.220><c> really</c><00:37:09.460><c> win</c>

00:37:09.810 --> 00:37:09.820 align:start position:0%
this is another one that can really win
 

00:37:09.820 --> 00:37:13.290 align:start position:0%
this is another one that can really win
for<00:37:10.119><c> you</c><00:37:10.330><c> and</c><00:37:11.290><c> if</c><00:37:11.800><c> you</c><00:37:12.010><c> really</c><00:37:12.849><c> don't</c><00:37:13.000><c> need</c><00:37:13.240><c> to</c>

00:37:13.290 --> 00:37:13.300 align:start position:0%
for you and if you really don't need to
 

00:37:13.300 --> 00:37:15.900 align:start position:0%
for you and if you really don't need to
understand<00:37:14.020><c> whether</c><00:37:14.380><c> on</c><00:37:15.070><c> the</c><00:37:15.369><c> boundary</c>

00:37:15.900 --> 00:37:15.910 align:start position:0%
understand whether on the boundary
 

00:37:15.910 --> 00:37:18.270 align:start position:0%
understand whether on the boundary
conditions<00:37:16.030><c> that</c><00:37:16.930><c> it's</c><00:37:17.170><c> not</c><00:37:17.349><c> a</c><00:37:17.410><c> number</c><00:37:17.859><c> it</c><00:37:18.099><c> is</c>

00:37:18.270 --> 00:37:18.280 align:start position:0%
conditions that it's not a number it is
 

00:37:18.280 --> 00:37:21.990 align:start position:0%
conditions that it's not a number it is
a<00:37:18.310><c> number</c><00:37:18.730><c> or</c><00:37:18.880><c> its</c><00:37:19.060><c> infinity</c><00:37:20.280><c> then</c><00:37:21.280><c> you</c><00:37:21.700><c> should</c>

00:37:21.990 --> 00:37:22.000 align:start position:0%
a number or its infinity then you should
 

00:37:22.000 --> 00:37:24.750 align:start position:0%
a number or its infinity then you should
try<00:37:22.270><c> using</c><00:37:22.540><c> fast</c><00:37:22.990><c> math</c><00:37:23.290><c> and</c><00:37:23.619><c> try</c><00:37:23.859><c> that</c><00:37:24.070><c> in</c><00:37:24.430><c> your</c>

00:37:24.750 --> 00:37:24.760 align:start position:0%
try using fast math and try that in your
 

00:37:24.760 --> 00:37:28.650 align:start position:0%
try using fast math and try that in your
program<00:37:26.520><c> hardware</c><00:37:27.520><c> specifically</c><00:37:28.359><c> and</c><00:37:28.510><c> of</c>

00:37:28.650 --> 00:37:28.660 align:start position:0%
program hardware specifically and of
 

00:37:28.660 --> 00:37:33.180 align:start position:0%
program hardware specifically and of
course<00:37:28.960><c> we</c><00:37:29.140><c> we</c><00:37:29.830><c> say</c><00:37:30.690><c> mcp</c><00:37:31.690><c> you</c><00:37:31.840><c> it</c><00:37:31.990><c> goes</c><00:37:32.170><c> g5</c><00:37:32.740><c> and</c>

00:37:33.180 --> 00:37:33.190 align:start position:0%
course we we say mcp you it goes g5 and
 

00:37:33.190 --> 00:37:36.420 align:start position:0%
course we we say mcp you it goes g5 and
in<00:37:33.730><c> the</c><00:37:34.000><c> GCC</c><00:37:34.420><c> compiler</c><00:37:34.780><c> that</c><00:37:35.170><c> says</c><00:37:35.650><c> you</c><00:37:35.920><c> can</c>

00:37:36.420 --> 00:37:36.430 align:start position:0%
in the GCC compiler that says you can
 

00:37:36.430 --> 00:37:39.270 align:start position:0%
in the GCC compiler that says you can
you're<00:37:36.730><c> perfectly</c><00:37:37.210><c> free</c><00:37:37.570><c> to</c><00:37:37.690><c> use</c><00:37:38.410><c> any</c><00:37:38.710><c> g5</c>

00:37:39.270 --> 00:37:39.280 align:start position:0%
you're perfectly free to use any g5
 

00:37:39.280 --> 00:37:42.480 align:start position:0%
you're perfectly free to use any g5
instructions<00:37:40.150><c> that</c><00:37:40.540><c> are</c><00:37:40.570><c> available</c><00:37:40.780><c> and</c><00:37:41.500><c> then</c>

00:37:42.480 --> 00:37:42.490 align:start position:0%
instructions that are available and then
 

00:37:42.490 --> 00:37:45.420 align:start position:0%
instructions that are available and then
in<00:37:43.030><c> line</c><00:37:43.359><c> floor</c><00:37:43.780><c> happens</c><00:37:44.470><c> to</c><00:37:44.650><c> make</c><00:37:44.770><c> use</c><00:37:45.040><c> of</c><00:37:45.070><c> a</c>

00:37:45.420 --> 00:37:45.430 align:start position:0%
in line floor happens to make use of a
 

00:37:45.430 --> 00:37:47.430 align:start position:0%
in line floor happens to make use of a
couple<00:37:45.760><c> of</c><00:37:45.849><c> specialized</c><00:37:46.359><c> instructions</c><00:37:47.200><c> in</c>

00:37:47.430 --> 00:37:47.440 align:start position:0%
couple of specialized instructions in
 

00:37:47.440 --> 00:37:50.810 align:start position:0%
couple of specialized instructions in
the<00:37:47.560><c> g5</c><00:37:48.010><c> to</c><00:37:48.760><c> actually</c><00:37:49.150><c> in</c><00:37:49.330><c> line</c><00:37:49.570><c> the</c><00:37:49.780><c> floor</c>

00:37:50.810 --> 00:37:50.820 align:start position:0%
the g5 to actually in line the floor
 

00:37:50.820 --> 00:37:54.599 align:start position:0%
the g5 to actually in line the floor
intrinsic<00:37:51.820><c> right</c><00:37:52.119><c> in</c><00:37:52.300><c> right</c><00:37:53.050><c> in</c><00:37:53.260><c> line</c><00:37:53.609><c> the</c>

00:37:54.599 --> 00:37:54.609 align:start position:0%
intrinsic right in right in line the
 

00:37:54.609 --> 00:37:57.240 align:start position:0%
intrinsic right in right in line the
next<00:37:54.880><c> three</c><00:37:55.180><c> have</c><00:37:55.420><c> to</c><00:37:55.450><c> do</c><00:37:55.810><c> with</c><00:37:56.230><c> alignment</c><00:37:56.800><c> and</c>

00:37:57.240 --> 00:37:57.250 align:start position:0%
next three have to do with alignment and
 

00:37:57.250 --> 00:37:58.589 align:start position:0%
next three have to do with alignment and
one<00:37:57.400><c> of</c><00:37:57.520><c> the</c><00:37:57.640><c> things</c><00:37:57.670><c> that</c><00:37:58.030><c> we've</c><00:37:58.330><c> learned</c>

00:37:58.589 --> 00:37:58.599 align:start position:0%
one of the things that we've learned
 

00:37:58.599 --> 00:38:03.240 align:start position:0%
one of the things that we've learned
about<00:37:59.380><c> the</c><00:38:00.099><c> g5</c><00:38:00.640><c> is</c><00:38:01.119><c> that</c><00:38:01.510><c> it's</c><00:38:02.440><c> very</c><00:38:02.619><c> sensitive</c>

00:38:03.240 --> 00:38:03.250 align:start position:0%
about the g5 is that it's very sensitive
 

00:38:03.250 --> 00:38:05.490 align:start position:0%
about the g5 is that it's very sensitive
to<00:38:03.730><c> alignment</c><00:38:04.089><c> and</c><00:38:04.510><c> you</c><00:38:04.540><c> can</c><00:38:04.839><c> you</c><00:38:05.170><c> can</c><00:38:05.349><c> make</c>

00:38:05.490 --> 00:38:05.500 align:start position:0%
to alignment and you can you can make
 

00:38:05.500 --> 00:38:07.859 align:start position:0%
to alignment and you can you can make
dramatic<00:38:05.730><c> improvements</c><00:38:06.730><c> in</c><00:38:06.940><c> your</c><00:38:07.540><c> code</c>

00:38:07.859 --> 00:38:07.869 align:start position:0%
dramatic improvements in your code
 

00:38:07.869 --> 00:38:11.880 align:start position:0%
dramatic improvements in your code
performance<00:38:08.560><c> if</c><00:38:08.800><c> you</c><00:38:09.060><c> try</c><00:38:10.060><c> to</c><00:38:10.119><c> to</c><00:38:10.900><c> deliver</c>

00:38:11.880 --> 00:38:11.890 align:start position:0%
performance if you try to to deliver
 

00:38:11.890 --> 00:38:14.460 align:start position:0%
performance if you try to to deliver
well<00:38:12.670><c> aligned</c><00:38:13.060><c> types</c><00:38:13.480><c> of</c><00:38:13.780><c> data</c><00:38:14.020><c> and</c><00:38:14.260><c> will</c>

00:38:14.460 --> 00:38:14.470 align:start position:0%
well aligned types of data and will
 

00:38:14.470 --> 00:38:18.420 align:start position:0%
well aligned types of data and will
aligned<00:38:14.800><c> code</c><00:38:15.400><c> in</c><00:38:15.730><c> this</c><00:38:16.330><c> case</c><00:38:17.099><c> we're</c><00:38:18.099><c> aligning</c>

00:38:18.420 --> 00:38:18.430 align:start position:0%
aligned code in this case we're aligning
 

00:38:18.430 --> 00:38:21.630 align:start position:0%
aligned code in this case we're aligning
loops<00:38:18.970><c> jumps</c><00:38:19.720><c> and</c><00:38:19.930><c> functions</c><00:38:20.410><c> all</c><00:38:20.680><c> on</c><00:38:20.890><c> 16</c><00:38:21.400><c> byte</c>

00:38:21.630 --> 00:38:21.640 align:start position:0%
loops jumps and functions all on 16 byte
 

00:38:21.640 --> 00:38:24.900 align:start position:0%
loops jumps and functions all on 16 byte
boundaries<00:38:22.210><c> and</c><00:38:22.510><c> yes</c><00:38:23.290><c> this</c><00:38:23.980><c> does</c><00:38:24.250><c> cause</c><00:38:24.609><c> some</c>

00:38:24.900 --> 00:38:24.910 align:start position:0%
boundaries and yes this does cause some
 

00:38:24.910 --> 00:38:26.820 align:start position:0%
boundaries and yes this does cause some
bloat<00:38:25.119><c> in</c><00:38:25.240><c> your</c><00:38:25.359><c> program</c><00:38:25.839><c> but</c><00:38:26.560><c> our</c><00:38:26.589><c> experience</c>

00:38:26.820 --> 00:38:26.830 align:start position:0%
bloat in your program but our experience
 

00:38:26.830 --> 00:38:29.790 align:start position:0%
bloat in your program but our experience
is<00:38:27.520><c> that</c><00:38:27.580><c> the</c><00:38:28.240><c> performance</c><00:38:28.690><c> far</c><00:38:29.290><c> outweighs</c>

00:38:29.790 --> 00:38:29.800 align:start position:0%
is that the performance far outweighs
 

00:38:29.800 --> 00:38:32.609 align:start position:0%
is that the performance far outweighs
the<00:38:30.250><c> bloke</c><00:38:30.520><c> that</c><00:38:30.550><c> you</c><00:38:31.000><c> get</c><00:38:31.240><c> and</c><00:38:31.480><c> the</c><00:38:32.349><c> size</c>

00:38:32.609 --> 00:38:32.619 align:start position:0%
the bloke that you get and the size
 

00:38:32.619 --> 00:38:35.700 align:start position:0%
the bloke that you get and the size
increase<00:38:33.130><c> in</c><00:38:33.400><c> the</c><00:38:33.520><c> program</c><00:38:34.200><c> the</c><00:38:35.200><c> last</c><00:38:35.440><c> item</c>

00:38:35.700 --> 00:38:35.710 align:start position:0%
increase in the program the last item
 

00:38:35.710 --> 00:38:39.329 align:start position:0%
increase in the program the last item
there<00:38:36.070><c> Emmaline</c><00:38:36.970><c> natural</c><00:38:37.540><c> says</c><00:38:38.040><c> all</c><00:38:39.040><c> right</c>

00:38:39.329 --> 00:38:39.339 align:start position:0%
there Emmaline natural says all right
 

00:38:39.339 --> 00:38:41.370 align:start position:0%
there Emmaline natural says all right
align<00:38:39.849><c> all</c><00:38:40.089><c> data</c><00:38:40.330><c> types</c><00:38:40.690><c> on</c><00:38:40.990><c> their</c><00:38:41.140><c> natural</c>

00:38:41.370 --> 00:38:41.380 align:start position:0%
align all data types on their natural
 

00:38:41.380 --> 00:38:44.970 align:start position:0%
align all data types on their natural
boundary<00:38:42.720><c> so</c><00:38:43.720><c> you</c><00:38:43.810><c> have</c><00:38:43.960><c> to</c><00:38:44.080><c> be</c><00:38:44.109><c> cognizant</c><00:38:44.680><c> of</c>

00:38:44.970 --> 00:38:44.980 align:start position:0%
boundary so you have to be cognizant of
 

00:38:44.980 --> 00:38:46.950 align:start position:0%
boundary so you have to be cognizant of
that<00:38:45.040><c> if</c><00:38:45.369><c> you're</c><00:38:45.609><c> concerned</c><00:38:46.359><c> about</c><00:38:46.570><c> data</c>

00:38:46.950 --> 00:38:46.960 align:start position:0%
that if you're concerned about data
 

00:38:46.960 --> 00:38:48.540 align:start position:0%
that if you're concerned about data
being<00:38:47.230><c> packed</c><00:38:47.500><c> together</c><00:38:47.680><c> and</c><00:38:48.160><c> things</c><00:38:48.339><c> of</c><00:38:48.520><c> that</c>

00:38:48.540 --> 00:38:48.550 align:start position:0%
being packed together and things of that
 

00:38:48.550 --> 00:38:51.960 align:start position:0%
being packed together and things of that
nature<00:38:48.700><c> because</c><00:38:49.830><c> data</c><00:38:50.830><c> types</c><00:38:51.190><c> will</c><00:38:51.520><c> then</c><00:38:51.760><c> be</c>

00:38:51.960 --> 00:38:51.970 align:start position:0%
nature because data types will then be
 

00:38:51.970 --> 00:38:57.470 align:start position:0%
nature because data types will then be
aligned<00:38:52.690><c> with</c><00:38:53.200><c> perhaps</c><00:38:54.450><c> gaps</c><00:38:55.450><c> in</c><00:38:55.780><c> them</c><00:38:56.400><c> I</c>

00:38:57.470 --> 00:38:57.480 align:start position:0%
aligned with perhaps gaps in them I
 

00:38:57.480 --> 00:39:00.450 align:start position:0%
aligned with perhaps gaps in them I
would<00:38:58.480><c> just</c><00:38:58.690><c> encourage</c><00:38:58.839><c> you</c><00:38:59.320><c> in</c><00:38:59.619><c> moving</c><00:39:00.190><c> out</c>

00:39:00.450 --> 00:39:00.460 align:start position:0%
would just encourage you in moving out
 

00:39:00.460 --> 00:39:04.890 align:start position:0%
would just encourage you in moving out
so<00:39:01.150><c> the</c><00:39:01.390><c> dash</c><00:39:01.599><c> bass</c><00:39:01.900><c> part</c><00:39:02.380><c> of</c><00:39:02.530><c> this</c><00:39:02.710><c> that</c><00:39:03.900><c> you</c>

00:39:04.890 --> 00:39:04.900 align:start position:0%
so the dash bass part of this that you
 

00:39:04.900 --> 00:39:07.020 align:start position:0%
so the dash bass part of this that you
should<00:39:05.140><c> give</c><00:39:05.680><c> that</c><00:39:05.830><c> a</c><00:39:05.890><c> try</c>

00:39:07.020 --> 00:39:07.030 align:start position:0%
should give that a try
 

00:39:07.030 --> 00:39:08.910 align:start position:0%
should give that a try
free<00:39:07.210><c> to</c><00:39:07.330><c> give</c><00:39:07.510><c> us</c><00:39:07.540><c> feedback</c><00:39:07.900><c> in</c><00:39:08.440><c> terms</c><00:39:08.470><c> of</c>

00:39:08.910 --> 00:39:08.920 align:start position:0%
free to give us feedback in terms of
 

00:39:08.920 --> 00:39:12.050 align:start position:0%
free to give us feedback in terms of
problems<00:39:09.370><c> you</c><00:39:09.490><c> have</c><00:39:10.230><c> one</c><00:39:11.230><c> of</c><00:39:11.350><c> the</c><00:39:11.470><c> things</c><00:39:11.740><c> that</c>

00:39:12.050 --> 00:39:12.060 align:start position:0%
problems you have one of the things that
 

00:39:12.060 --> 00:39:15.210 align:start position:0%
problems you have one of the things that
it<00:39:13.060><c> can</c><00:39:13.120><c> help</c><00:39:13.540><c> you</c><00:39:13.660><c> trigger</c><00:39:14.230><c> is</c><00:39:14.620><c> the</c><00:39:15.010><c> needs</c>

00:39:15.210 --> 00:39:15.220 align:start position:0%
it can help you trigger is the needs
 

00:39:15.220 --> 00:39:18.150 align:start position:0%
it can help you trigger is the needs
we're<00:39:15.490><c> going</c><00:39:15.790><c> the</c><00:39:16.300><c> next</c><00:39:16.570><c> step</c><00:39:16.810><c> of</c><00:39:16.990><c> analysis</c><00:39:17.260><c> if</c>

00:39:18.150 --> 00:39:18.160 align:start position:0%
we're going the next step of analysis if
 

00:39:18.160 --> 00:39:20.520 align:start position:0%
we're going the next step of analysis if
in<00:39:18.550><c> fact</c><00:39:18.760><c> you</c><00:39:18.910><c> use</c><00:39:19.150><c> dash</c><00:39:19.450><c> bass</c><00:39:19.810><c> and</c><00:39:20.230><c> you</c><00:39:20.350><c> don't</c>

00:39:20.520 --> 00:39:20.530 align:start position:0%
in fact you use dash bass and you don't
 

00:39:20.530 --> 00:39:24.210 align:start position:0%
in fact you use dash bass and you don't
see<00:39:20.770><c> speed</c><00:39:21.400><c> up</c><00:39:21.580><c> with</c><00:39:22.360><c> in</c><00:39:22.540><c> your</c><00:39:22.750><c> code</c><00:39:23.020><c> then</c><00:39:23.440><c> you</c>

00:39:24.210 --> 00:39:24.220 align:start position:0%
see speed up with in your code then you
 

00:39:24.220 --> 00:39:26.490 align:start position:0%
see speed up with in your code then you
should<00:39:24.460><c> be</c><00:39:24.640><c> thinking</c><00:39:25.540><c> that</c><00:39:25.780><c> well</c><00:39:25.990><c> maybe</c><00:39:26.320><c> I've</c>

00:39:26.490 --> 00:39:26.500 align:start position:0%
should be thinking that well maybe I've
 

00:39:26.500 --> 00:39:28.440 align:start position:0%
should be thinking that well maybe I've
got<00:39:26.680><c> some</c><00:39:26.860><c> algorithmic</c><00:39:27.280><c> problems</c><00:39:27.940><c> or</c><00:39:28.210><c> some</c>

00:39:28.440 --> 00:39:28.450 align:start position:0%
got some algorithmic problems or some
 

00:39:28.450 --> 00:39:31.650 align:start position:0%
got some algorithmic problems or some
memory<00:39:29.640><c> accessing</c><00:39:30.640><c> problems</c><00:39:31.120><c> that</c><00:39:31.390><c> are</c><00:39:31.540><c> the</c>

00:39:31.650 --> 00:39:31.660 align:start position:0%
memory accessing problems that are the
 

00:39:31.660 --> 00:39:33.510 align:start position:0%
memory accessing problems that are the
real<00:39:31.870><c> performance</c><00:39:32.080><c> killers</c><00:39:32.920><c> and</c><00:39:33.130><c> so</c><00:39:33.310><c> there's</c>

00:39:33.510 --> 00:39:33.520 align:start position:0%
real performance killers and so there's
 

00:39:33.520 --> 00:39:34.800 align:start position:0%
real performance killers and so there's
no<00:39:33.640><c> way</c><00:39:33.820><c> that</c><00:39:34.000><c> compiler</c><00:39:34.390><c> is</c><00:39:34.540><c> going</c><00:39:34.750><c> to</c>

00:39:34.800 --> 00:39:34.810 align:start position:0%
no way that compiler is going to
 

00:39:34.810 --> 00:39:37.260 align:start position:0%
no way that compiler is going to
optimize<00:39:35.320><c> you</c><00:39:35.530><c> out</c><00:39:35.710><c> of</c><00:39:35.890><c> this</c><00:39:36.070><c> you</c><00:39:36.760><c> will</c><00:39:37.000><c> have</c>

00:39:37.260 --> 00:39:37.270 align:start position:0%
optimize you out of this you will have
 

00:39:37.270 --> 00:39:40.740 align:start position:0%
optimize you out of this you will have
to<00:39:37.450><c> go</c><00:39:37.630><c> to</c><00:39:37.690><c> the</c><00:39:38.500><c> shark</c><00:39:38.830><c> ER</c><00:39:39.100><c> and</c><00:39:40.000><c> try</c><00:39:40.690><c> and</c>

00:39:40.740 --> 00:39:40.750 align:start position:0%
to go to the shark ER and try and
 

00:39:40.750 --> 00:39:42.990 align:start position:0%
to go to the shark ER and try and
understand<00:39:41.410><c> the</c><00:39:41.860><c> program</c><00:39:42.130><c> and</c><00:39:42.520><c> what's</c>

00:39:42.990 --> 00:39:43.000 align:start position:0%
understand the program and what's
 

00:39:43.000 --> 00:39:47.400 align:start position:0%
understand the program and what's
causing<00:39:43.510><c> that</c><00:39:43.540><c> to</c><00:39:43.690><c> happen</c><00:39:45.780><c> next</c><00:39:46.780><c> thing</c><00:39:47.080><c> I</c><00:39:47.200><c> want</c>

00:39:47.400 --> 00:39:47.410 align:start position:0%
causing that to happen next thing I want
 

00:39:47.410 --> 00:39:50.280 align:start position:0%
causing that to happen next thing I want
to<00:39:47.470><c> talk</c><00:39:47.680><c> about</c><00:39:47.710><c> is</c><00:39:48.630><c> feedback</c><00:39:49.630><c> directed</c>

00:39:50.280 --> 00:39:50.290 align:start position:0%
to talk about is feedback directed
 

00:39:50.290 --> 00:39:53.250 align:start position:0%
to talk about is feedback directed
optimization<00:39:51.280><c> and</c><00:39:51.550><c> and</c><00:39:51.790><c> feedback</c><00:39:52.720><c> directed</c>

00:39:53.250 --> 00:39:53.260 align:start position:0%
optimization and and feedback directed
 

00:39:53.260 --> 00:39:56.220 align:start position:0%
optimization and and feedback directed
optimization<00:39:54.070><c> is</c><00:39:54.310><c> really</c><00:39:54.790><c> an</c><00:39:55.230><c> optimization</c>

00:39:56.220 --> 00:39:56.230 align:start position:0%
optimization is really an optimization
 

00:39:56.230 --> 00:39:59.520 align:start position:0%
optimization is really an optimization
that<00:39:56.470><c> allows</c><00:39:56.800><c> you</c><00:39:57.160><c> to</c><00:39:57.570><c> tell</c><00:39:58.570><c> the</c><00:39:58.750><c> compiler</c><00:39:59.170><c> in</c>

00:39:59.520 --> 00:39:59.530 align:start position:0%
that allows you to tell the compiler in
 

00:39:59.530 --> 00:40:01.980 align:start position:0%
that allows you to tell the compiler in
more<00:39:59.770><c> detail</c><00:40:00.310><c> exactly</c><00:40:00.610><c> how</c><00:40:01.270><c> you</c><00:40:01.330><c> expect</c><00:40:01.870><c> your</c>

00:40:01.980 --> 00:40:01.990 align:start position:0%
more detail exactly how you expect your
 

00:40:01.990 --> 00:40:05.370 align:start position:0%
more detail exactly how you expect your
code<00:40:02.290><c> to</c><00:40:02.320><c> to</c><00:40:03.250><c> execute</c><00:40:04.000><c> and</c><00:40:04.270><c> the</c><00:40:04.300><c> compiler</c><00:40:05.110><c> will</c>

00:40:05.370 --> 00:40:05.380 align:start position:0%
code to to execute and the compiler will
 

00:40:05.380 --> 00:40:07.740 align:start position:0%
code to to execute and the compiler will
take<00:40:05.650><c> that</c><00:40:05.860><c> knowledge</c><00:40:06.130><c> into</c><00:40:06.730><c> account</c><00:40:07.420><c> and</c>

00:40:07.740 --> 00:40:07.750 align:start position:0%
take that knowledge into account and
 

00:40:07.750 --> 00:40:11.190 align:start position:0%
take that knowledge into account and
will<00:40:08.560><c> do</c><00:40:08.710><c> a</c><00:40:08.740><c> better</c><00:40:08.950><c> job</c><00:40:09.070><c> of</c><00:40:09.310><c> optimizing</c><00:40:10.200><c> it's</c>

00:40:11.190 --> 00:40:11.200 align:start position:0%
will do a better job of optimizing it's
 

00:40:11.200 --> 00:40:16.860 align:start position:0%
will do a better job of optimizing it's
used<00:40:12.120><c> number</c><00:40:13.120><c> 14</c><00:40:13.720><c> in</c><00:40:13.900><c> lining</c><00:40:15.480><c> the</c><00:40:16.480><c> concern</c>

00:40:16.860 --> 00:40:16.870 align:start position:0%
used number 14 in lining the concern
 

00:40:16.870 --> 00:40:18.750 align:start position:0%
used number 14 in lining the concern
about<00:40:17.050><c> in</c><00:40:17.350><c> lining</c><00:40:17.770><c> and</c><00:40:17.920><c> it</c><00:40:18.040><c> was</c><00:40:18.160><c> mentioned</c><00:40:18.640><c> by</c>

00:40:18.750 --> 00:40:18.760 align:start position:0%
about in lining and it was mentioned by
 

00:40:18.760 --> 00:40:21.450 align:start position:0%
about in lining and it was mentioned by
Sanjay<00:40:19.330><c> is</c><00:40:19.570><c> that</c><00:40:19.930><c> boy</c><00:40:20.200><c> if</c><00:40:20.380><c> you</c><00:40:20.410><c> over</c><00:40:20.800><c> in</c><00:40:21.280><c> line</c>

00:40:21.450 --> 00:40:21.460 align:start position:0%
Sanjay is that boy if you over in line
 

00:40:21.460 --> 00:40:23.790 align:start position:0%
Sanjay is that boy if you over in line
you<00:40:21.670><c> can</c><00:40:21.880><c> kill</c><00:40:22.120><c> performance</c><00:40:22.690><c> as</c><00:40:22.870><c> well</c><00:40:23.140><c> well</c>

00:40:23.790 --> 00:40:23.800 align:start position:0%
you can kill performance as well well
 

00:40:23.800 --> 00:40:26.760 align:start position:0%
you can kill performance as well well
using<00:40:23.980><c> feedback</c><00:40:24.430><c> directed</c><00:40:25.150><c> optimization</c><00:40:26.080><c> we</c>

00:40:26.760 --> 00:40:26.770 align:start position:0%
using feedback directed optimization we
 

00:40:26.770 --> 00:40:30.510 align:start position:0%
using feedback directed optimization we
actually<00:40:27.040><c> tell</c><00:40:27.640><c> the</c><00:40:27.970><c> compiler</c><00:40:29.010><c> from</c><00:40:30.010><c> results</c>

00:40:30.510 --> 00:40:30.520 align:start position:0%
actually tell the compiler from results
 

00:40:30.520 --> 00:40:32.760 align:start position:0%
actually tell the compiler from results
from<00:40:30.640><c> a</c><00:40:30.760><c> training</c><00:40:31.090><c> line</c><00:40:31.420><c> exactly</c><00:40:32.140><c> how</c><00:40:32.710><c> many</c>

00:40:32.760 --> 00:40:32.770 align:start position:0%
from a training line exactly how many
 

00:40:32.770 --> 00:40:34.980 align:start position:0%
from a training line exactly how many
times<00:40:33.250><c> that</c><00:40:33.520><c> a</c><00:40:33.580><c> call</c><00:40:33.880><c> site</c><00:40:34.180><c> was</c><00:40:34.450><c> a</c><00:40:34.480><c> function</c>

00:40:34.980 --> 00:40:34.990 align:start position:0%
times that a call site was a function
 

00:40:34.990 --> 00:40:38.010 align:start position:0%
times that a call site was a function
called<00:40:35.290><c> how</c><00:40:36.070><c> many</c><00:40:36.250><c> loops</c><00:40:36.640><c> are</c><00:40:37.090><c> in</c><00:40:37.840><c> an</c>

00:40:38.010 --> 00:40:38.020 align:start position:0%
called how many loops are in an
 

00:40:38.020 --> 00:40:41.070 align:start position:0%
called how many loops are in an
iteration<00:40:38.500><c> that</c><00:40:39.490><c> has</c><00:40:39.820><c> a</c><00:40:39.850><c> function</c><00:40:40.480><c> inside</c><00:40:40.870><c> of</c>

00:40:41.070 --> 00:40:41.080 align:start position:0%
iteration that has a function inside of
 

00:40:41.080 --> 00:40:44.010 align:start position:0%
iteration that has a function inside of
that<00:40:41.230><c> loop</c><00:40:41.500><c> and</c><00:40:42.490><c> so</c><00:40:42.970><c> you</c><00:40:43.030><c> can</c><00:40:43.270><c> make</c><00:40:43.450><c> very</c><00:40:43.690><c> good</c>

00:40:44.010 --> 00:40:44.020 align:start position:0%
that loop and so you can make very good
 

00:40:44.020 --> 00:40:47.490 align:start position:0%
that loop and so you can make very good
decisions<00:40:45.010><c> in</c><00:40:45.520><c> terms</c><00:40:45.580><c> of</c><00:40:46.090><c> performance</c><00:40:46.540><c> versus</c>

00:40:47.490 --> 00:40:47.500 align:start position:0%
decisions in terms of performance versus
 

00:40:47.500 --> 00:40:49.920 align:start position:0%
decisions in terms of performance versus
size<00:40:47.770><c> trade-off</c><00:40:48.490><c> as</c><00:40:48.790><c> opposed</c><00:40:49.480><c> to</c><00:40:49.630><c> using</c>

00:40:49.920 --> 00:40:49.930 align:start position:0%
size trade-off as opposed to using
 

00:40:49.930 --> 00:40:55.290 align:start position:0%
size trade-off as opposed to using
guesses<00:40:50.700><c> which</c><00:40:51.700><c> are</c><00:40:51.880><c> the</c><00:40:52.030><c> normal</c><00:40:54.300><c> parameters</c>

00:40:55.290 --> 00:40:55.300 align:start position:0%
guesses which are the normal parameters
 

00:40:55.300 --> 00:40:58.020 align:start position:0%
guesses which are the normal parameters
that<00:40:55.720><c> we</c><00:40:55.870><c> look</c><00:40:56.080><c> at</c><00:40:56.320><c> the</c><00:40:57.070><c> second</c><00:40:57.460><c> thing</c><00:40:57.640><c> is</c><00:40:57.790><c> used</c>

00:40:58.020 --> 00:40:58.030 align:start position:0%
that we look at the second thing is used
 

00:40:58.030 --> 00:41:00.150 align:start position:0%
that we look at the second thing is used
for<00:40:58.330><c> is</c><00:40:58.690><c> what</c><00:40:59.020><c> we</c><00:40:59.170><c> call</c><00:40:59.440><c> hot</c><00:40:59.710><c> and</c><00:40:59.890><c> cold</c>

00:41:00.150 --> 00:41:00.160 align:start position:0%
for is what we call hot and cold
 

00:41:00.160 --> 00:41:02.220 align:start position:0%
for is what we call hot and cold
partitioning<00:41:00.970><c> and</c><00:41:01.150><c> hot</c><00:41:01.870><c> and</c><00:41:01.990><c> cold</c>

00:41:02.220 --> 00:41:02.230 align:start position:0%
partitioning and hot and cold
 

00:41:02.230 --> 00:41:04.440 align:start position:0%
partitioning and hot and cold
partitioning<00:41:03.070><c> the</c><00:41:03.550><c> best</c><00:41:03.760><c> example</c><00:41:04.360><c> I</c><00:41:04.390><c> would</c>

00:41:04.440 --> 00:41:04.450 align:start position:0%
partitioning the best example I would
 

00:41:04.450 --> 00:41:07.080 align:start position:0%
partitioning the best example I would
have<00:41:04.810><c> for</c><00:41:05.050><c> that</c><00:41:05.200><c> is</c><00:41:05.500><c> an</c><00:41:05.770><c> if</c><00:41:06.220><c> statement</c><00:41:06.370><c> okay</c>

00:41:07.080 --> 00:41:07.090 align:start position:0%
have for that is an if statement okay
 

00:41:07.090 --> 00:41:09.690 align:start position:0%
have for that is an if statement okay
you<00:41:07.150><c> have</c><00:41:07.420><c> two</c><00:41:07.660><c> branches</c><00:41:08.260><c> and</c><00:41:08.560><c> one</c><00:41:09.400><c> of</c><00:41:09.550><c> those</c>

00:41:09.690 --> 00:41:09.700 align:start position:0%
you have two branches and one of those
 

00:41:09.700 --> 00:41:12.120 align:start position:0%
you have two branches and one of those
gets<00:41:10.330><c> executed</c><00:41:10.720><c> predominantly</c><00:41:11.710><c> and</c><00:41:12.040><c> the</c>

00:41:12.120 --> 00:41:12.130 align:start position:0%
gets executed predominantly and the
 

00:41:12.130 --> 00:41:15.360 align:start position:0%
gets executed predominantly and the
other<00:41:12.280><c> one</c><00:41:12.520><c> is</c><00:41:13.350><c> only</c><00:41:14.350><c> occasionally</c><00:41:15.160><c> maybe</c>

00:41:15.360 --> 00:41:15.370 align:start position:0%
other one is only occasionally maybe
 

00:41:15.370 --> 00:41:16.529 align:start position:0%
other one is only occasionally maybe
only<00:41:15.670><c> in</c><00:41:15.880><c> and</c><00:41:16.090><c> Eric</c>

00:41:16.529 --> 00:41:16.539 align:start position:0%
only in and Eric
 

00:41:16.539 --> 00:41:19.919 align:start position:0%
only in and Eric
addition<00:41:16.900><c> so</c><00:41:17.559><c> we</c><00:41:18.369><c> tag</c><00:41:18.640><c> the</c><00:41:18.880><c> the</c><00:41:19.209><c> hot</c><00:41:19.419><c> one</c><00:41:19.689><c> and</c>

00:41:19.919 --> 00:41:19.929 align:start position:0%
addition so we tag the the hot one and
 

00:41:19.929 --> 00:41:21.719 align:start position:0%
addition so we tag the the hot one and
we<00:41:20.019><c> start</c><00:41:20.319><c> grouping</c><00:41:20.619><c> the</c><00:41:20.949><c> hot</c><00:41:21.130><c> code</c><00:41:21.429><c> together</c>

00:41:21.719 --> 00:41:21.729 align:start position:0%
we start grouping the hot code together
 

00:41:21.729 --> 00:41:24.299 align:start position:0%
we start grouping the hot code together
and<00:41:22.269><c> we</c><00:41:22.689><c> take</c><00:41:22.929><c> the</c><00:41:23.079><c> cold</c><00:41:23.380><c> code</c><00:41:23.709><c> and</c><00:41:24.009><c> we</c><00:41:24.099><c> move</c>

00:41:24.299 --> 00:41:24.309 align:start position:0%
and we take the cold code and we move
 

00:41:24.309 --> 00:41:26.069 align:start position:0%
and we take the cold code and we move
that<00:41:24.549><c> off</c><00:41:24.759><c> together</c><00:41:25.059><c> at</c><00:41:25.479><c> the</c><00:41:25.689><c> end</c><00:41:25.719><c> of</c><00:41:25.959><c> the</c>

00:41:26.069 --> 00:41:26.079 align:start position:0%
that off together at the end of the
 

00:41:26.079 --> 00:41:28.289 align:start position:0%
that off together at the end of the
program<00:41:26.499><c> and</c><00:41:26.679><c> so</c><00:41:27.130><c> we</c><00:41:27.249><c> help</c><00:41:27.459><c> to</c><00:41:27.489><c> contact</c><00:41:28.150><c> the</c>

00:41:28.289 --> 00:41:28.299 align:start position:0%
program and so we help to contact the
 

00:41:28.299 --> 00:41:30.989 align:start position:0%
program and so we help to contact the
program<00:41:28.719><c> down</c><00:41:28.900><c> and</c><00:41:29.140><c> keep</c><00:41:29.259><c> the</c><00:41:29.439><c> footprint</c><00:41:29.999><c> for</c>

00:41:30.989 --> 00:41:30.999 align:start position:0%
program down and keep the footprint for
 

00:41:30.999 --> 00:41:34.109 align:start position:0%
program down and keep the footprint for
that<00:41:31.239><c> program</c><00:41:31.890><c> so</c><00:41:32.890><c> that</c><00:41:32.919><c> we</c><00:41:33.249><c> reduce</c><00:41:33.609><c> paging</c>

00:41:34.109 --> 00:41:34.119 align:start position:0%
that program so that we reduce paging
 

00:41:34.119 --> 00:41:38.459 align:start position:0%
that program so that we reduce paging
once<00:41:34.329><c> again</c><00:41:36.029><c> in</c><00:41:37.029><c> operation</c><00:41:38.019><c> there</c><00:41:38.349><c> are</c><00:41:38.439><c> a</c>

00:41:38.459 --> 00:41:38.469 align:start position:0%
once again in operation there are a
 

00:41:38.469 --> 00:41:43.579 align:start position:0%
once again in operation there are a
couple<00:41:38.679><c> of</c><00:41:38.979><c> flags</c><00:41:39.219><c> that</c><00:41:39.489><c> you</c><00:41:39.699><c> used</c><00:41:40.019><c> to</c><00:41:41.579><c> do</c><00:41:42.579><c> this</c>

00:41:43.579 --> 00:41:43.589 align:start position:0%
couple of flags that you used to do this
 

00:41:43.589 --> 00:41:46.679 align:start position:0%
couple of flags that you used to do this
so<00:41:44.589><c> first</c><00:41:44.979><c> you</c><00:41:45.189><c> would</c><00:41:45.369><c> use</c><00:41:45.999><c> the</c><00:41:46.329><c> create</c>

00:41:46.679 --> 00:41:46.689 align:start position:0%
so first you would use the create
 

00:41:46.689 --> 00:41:48.329 align:start position:0%
so first you would use the create
profile<00:41:47.169><c> flag</c><00:41:47.499><c> and</c><00:41:47.890><c> you</c><00:41:48.009><c> would</c><00:41:48.160><c> actually</c>

00:41:48.329 --> 00:41:48.339 align:start position:0%
profile flag and you would actually
 

00:41:48.339 --> 00:41:51.380 align:start position:0%
profile flag and you would actually
create<00:41:48.789><c> an</c><00:41:49.059><c> executable</c><00:41:49.779><c> that</c><00:41:50.529><c> is</c>

00:41:51.380 --> 00:41:51.390 align:start position:0%
create an executable that is
 

00:41:51.390 --> 00:41:54.390 align:start position:0%
create an executable that is
instrumented<00:41:52.390><c> such</c><00:41:53.169><c> that</c><00:41:53.439><c> it</c><00:41:53.589><c> can</c><00:41:53.619><c> gather</c><00:41:54.039><c> the</c>

00:41:54.390 --> 00:41:54.400 align:start position:0%
instrumented such that it can gather the
 

00:41:54.400 --> 00:41:57.839 align:start position:0%
instrumented such that it can gather the
profiling<00:41:54.999><c> information</c><00:41:55.900><c> you</c><00:41:56.890><c> run</c><00:41:57.189><c> that</c><00:41:57.429><c> with</c>

00:41:57.839 --> 00:41:57.849 align:start position:0%
profiling information you run that with
 

00:41:57.849 --> 00:42:00.949 align:start position:0%
profiling information you run that with
a<00:41:57.880><c> training</c><00:41:58.449><c> set</c><00:41:58.719><c> of</c><00:41:58.869><c> data</c><00:41:59.140><c> then</c><00:42:00.069><c> you</c><00:42:00.309><c> you</c>

00:42:00.949 --> 00:42:00.959 align:start position:0%
a training set of data then you you
 

00:42:00.959 --> 00:42:04.679 align:start position:0%
a training set of data then you you
rebuild<00:42:01.959><c> your</c><00:42:02.079><c> program</c><00:42:02.910><c> optimizing</c><00:42:03.910><c> it</c><00:42:04.089><c> using</c>

00:42:04.679 --> 00:42:04.689 align:start position:0%
rebuild your program optimizing it using
 

00:42:04.689 --> 00:42:08.159 align:start position:0%
rebuild your program optimizing it using
the<00:42:04.719><c> profile</c><00:42:05.289><c> that</c><00:42:05.499><c> you</c><00:42:05.679><c> just</c><00:42:05.859><c> created</c><00:42:07.169><c> not</c>

00:42:08.159 --> 00:42:08.169 align:start position:0%
the profile that you just created not
 

00:42:08.169 --> 00:42:10.109 align:start position:0%
the profile that you just created not
all<00:42:08.349><c> applications</c><00:42:09.130><c> i</c><00:42:09.309><c> realize</c><00:42:09.759><c> win</c>

00:42:10.109 --> 00:42:10.119 align:start position:0%
all applications i realize win
 

00:42:10.119 --> 00:42:13.189 align:start position:0%
all applications i realize win
themselves<00:42:10.359><c> to</c><00:42:11.049><c> to</c><00:42:11.709><c> this</c><00:42:12.160><c> type</c><00:42:12.400><c> of</c><00:42:12.429><c> profiling</c>

00:42:13.189 --> 00:42:13.199 align:start position:0%
themselves to to this type of profiling
 

00:42:13.199 --> 00:42:16.939 align:start position:0%
themselves to to this type of profiling
maybe<00:42:14.199><c> it's</c><00:42:14.380><c> an</c><00:42:14.559><c> interactive</c><00:42:14.859><c> type</c><00:42:15.459><c> of</c>

00:42:16.939 --> 00:42:16.949 align:start position:0%
maybe it's an interactive type of
 

00:42:16.949 --> 00:42:19.019 align:start position:0%
maybe it's an interactive type of
application<00:42:17.949><c> but</c><00:42:18.130><c> certainly</c><00:42:18.519><c> if</c><00:42:18.729><c> you</c><00:42:18.759><c> have</c>

00:42:19.019 --> 00:42:19.029 align:start position:0%
application but certainly if you have
 

00:42:19.029 --> 00:42:21.179 align:start position:0%
application but certainly if you have
computationally<00:42:19.989><c> intensive</c><00:42:20.949><c> applications</c>

00:42:21.179 --> 00:42:21.189 align:start position:0%
computationally intensive applications
 

00:42:21.189 --> 00:42:24.779 align:start position:0%
computationally intensive applications
that<00:42:21.999><c> work</c><00:42:22.150><c> on</c><00:42:22.390><c> large</c><00:42:22.659><c> data</c><00:42:23.019><c> sets</c><00:42:23.789><c> taking</c>

00:42:24.779 --> 00:42:24.789 align:start position:0%
that work on large data sets taking
 

00:42:24.789 --> 00:42:27.359 align:start position:0%
that work on large data sets taking
advantage<00:42:25.419><c> of</c><00:42:25.689><c> trying</c><00:42:25.929><c> to</c><00:42:26.169><c> train</c><00:42:26.529><c> the</c><00:42:26.769><c> the</c>

00:42:27.359 --> 00:42:27.369 align:start position:0%
advantage of trying to train the the
 

00:42:27.369 --> 00:42:29.699 align:start position:0%
advantage of trying to train the the
application<00:42:28.150><c> the</c><00:42:28.359><c> compiler</c><00:42:28.779><c> to</c><00:42:29.079><c> optimize</c><00:42:29.469><c> the</c>

00:42:29.699 --> 00:42:29.709 align:start position:0%
application the compiler to optimize the
 

00:42:29.709 --> 00:42:32.669 align:start position:0%
application the compiler to optimize the
application<00:42:30.369><c> for</c><00:42:30.609><c> that</c><00:42:30.640><c> is</c><00:42:31.029><c> really</c><00:42:31.839><c> a</c><00:42:31.869><c> great</c>

00:42:32.669 --> 00:42:32.679 align:start position:0%
application for that is really a great
 

00:42:32.679 --> 00:42:35.880 align:start position:0%
application for that is really a great
thing<00:42:33.069><c> to</c><00:42:33.339><c> do</c><00:42:33.640><c> well</c><00:42:34.239><c> worth</c><00:42:34.419><c> the</c><00:42:34.449><c> effort</c><00:42:34.890><c> then</c>

00:42:35.880 --> 00:42:35.890 align:start position:0%
thing to do well worth the effort then
 

00:42:35.890 --> 00:42:37.529 align:start position:0%
thing to do well worth the effort then
finally<00:42:36.189><c> i</c><00:42:36.400><c> want</c><00:42:36.609><c> to</c><00:42:36.729><c> talk</c><00:42:36.880><c> about</c><00:42:36.939><c> out</c><00:42:37.390><c> of</c>

00:42:37.529 --> 00:42:37.539 align:start position:0%
finally i want to talk about out of
 

00:42:37.539 --> 00:42:40.229 align:start position:0%
finally i want to talk about out of
vectorization<00:42:37.869><c> and</c><00:42:38.739><c> just</c><00:42:39.549><c> out</c><00:42:39.729><c> of</c><00:42:39.880><c> curiosity</c>

00:42:40.229 --> 00:42:40.239 align:start position:0%
vectorization and just out of curiosity
 

00:42:40.239 --> 00:42:43.469 align:start position:0%
vectorization and just out of curiosity
how<00:42:40.719><c> many</c><00:42:40.779><c> are</c><00:42:41.559><c> using</c><00:42:42.159><c> the</c><00:42:42.309><c> altivec</c><00:42:42.759><c> processor</c>

00:42:43.469 --> 00:42:43.479 align:start position:0%
how many are using the altivec processor
 

00:42:43.479 --> 00:42:46.409 align:start position:0%
how many are using the altivec processor
today<00:42:43.839><c> okay</c><00:42:44.739><c> we</c><00:42:44.919><c> have</c><00:42:45.069><c> quite</c><00:42:45.729><c> a</c><00:42:45.759><c> few</c><00:42:45.880><c> hardy</c>

00:42:46.409 --> 00:42:46.419 align:start position:0%
today okay we have quite a few hardy
 

00:42:46.419 --> 00:42:48.959 align:start position:0%
today okay we have quite a few hardy
souls<00:42:46.749><c> but</c><00:42:47.499><c> you</c><00:42:47.650><c> also</c><00:42:47.799><c> understand</c><00:42:48.609><c> that</c><00:42:48.759><c> it</c>

00:42:48.959 --> 00:42:48.969 align:start position:0%
souls but you also understand that it
 

00:42:48.969 --> 00:42:51.179 align:start position:0%
souls but you also understand that it
doesn't<00:42:49.329><c> come</c><00:42:49.509><c> for</c><00:42:49.689><c> free</c><00:42:49.749><c> it</c><00:42:50.140><c> takes</c><00:42:50.409><c> it</c><00:42:51.159><c> takes</c>

00:42:51.179 --> 00:42:51.189 align:start position:0%
doesn't come for free it takes it takes
 

00:42:51.189 --> 00:42:55.709 align:start position:0%
doesn't come for free it takes it takes
so<00:42:51.729><c> work</c><00:42:52.209><c> to</c><00:42:52.509><c> program</c><00:42:53.319><c> it</c><00:42:53.529><c> today</c><00:42:53.949><c> what</c><00:42:54.939><c> we</c><00:42:55.329><c> are</c>

00:42:55.709 --> 00:42:55.719 align:start position:0%
so work to program it today what we are
 

00:42:55.719 --> 00:42:57.719 align:start position:0%
so work to program it today what we are
doing<00:42:55.929><c> is</c><00:42:56.289><c> we're</c><00:42:56.559><c> trying</c><00:42:56.739><c> to</c><00:42:56.979><c> open</c><00:42:57.339><c> up</c><00:42:57.519><c> the</c>

00:42:57.719 --> 00:42:57.729 align:start position:0%
doing is we're trying to open up the
 

00:42:57.729 --> 00:43:00.539 align:start position:0%
doing is we're trying to open up the
Vista<00:42:58.150><c> of</c><00:42:58.269><c> using</c><00:42:58.779><c> the</c><00:42:58.929><c> altivec</c><00:42:59.499><c> to</c><00:43:00.099><c> a</c><00:43:00.130><c> broader</c>

00:43:00.539 --> 00:43:00.549 align:start position:0%
Vista of using the altivec to a broader
 

00:43:00.549 --> 00:43:04.499 align:start position:0%
Vista of using the altivec to a broader
scope<00:43:01.029><c> of</c><00:43:01.299><c> folks</c><00:43:02.140><c> and</c><00:43:02.469><c> so</c><00:43:03.179><c> areas</c><00:43:04.179><c> where</c><00:43:04.479><c> you</c>

00:43:04.499 --> 00:43:04.509 align:start position:0%
scope of folks and so areas where you
 

00:43:04.509 --> 00:43:06.989 align:start position:0%
scope of folks and so areas where you
may<00:43:04.839><c> not</c><00:43:05.049><c> in</c><00:43:05.319><c> fact</c><00:43:05.380><c> want</c><00:43:06.130><c> to</c><00:43:06.219><c> spend</c><00:43:06.459><c> the</c><00:43:06.609><c> effort</c>

00:43:06.989 --> 00:43:06.999 align:start position:0%
may not in fact want to spend the effort
 

00:43:06.999 --> 00:43:10.409 align:start position:0%
may not in fact want to spend the effort
tuning<00:43:07.809><c> it</c><00:43:07.959><c> yourself</c><00:43:08.499><c> so</c><00:43:09.400><c> what</c><00:43:10.029><c> is</c><00:43:10.179><c> out</c><00:43:10.390><c> of</c>

00:43:10.409 --> 00:43:10.419 align:start position:0%
tuning it yourself so what is out of
 

00:43:10.419 --> 00:43:13.620 align:start position:0%
tuning it yourself so what is out of
vectorization<00:43:10.900><c> it's</c><00:43:11.859><c> simply</c><00:43:12.429><c> the</c><00:43:12.969><c> compiler</c>

00:43:13.620 --> 00:43:13.630 align:start position:0%
vectorization it's simply the compiler
 

00:43:13.630 --> 00:43:17.519 align:start position:0%
vectorization it's simply the compiler
being<00:43:13.900><c> able</c><00:43:14.259><c> to</c><00:43:14.439><c> transform</c><00:43:15.659><c> serial</c><00:43:16.659><c> oops</c><00:43:16.869><c> into</c>

00:43:17.519 --> 00:43:17.529 align:start position:0%
being able to transform serial oops into
 

00:43:17.529 --> 00:43:22.559 align:start position:0%
being able to transform serial oops into
vector<00:43:17.859><c> risible</c><00:43:18.339><c> loops</c><00:43:19.650><c> and</c><00:43:21.419><c> what</c><00:43:22.419><c> are</c>

00:43:22.559 --> 00:43:22.569 align:start position:0%
vector risible loops and what are
 

00:43:22.569 --> 00:43:25.380 align:start position:0%
vector risible loops and what are
vectors<00:43:23.309><c> for</c><00:43:24.309><c> those</c><00:43:24.459><c> who</c><00:43:24.699><c> don't</c><00:43:24.880><c> know</c><00:43:25.029><c> that</c>

00:43:25.380 --> 00:43:25.390 align:start position:0%
vectors for those who don't know that
 

00:43:25.390 --> 00:43:29.519 align:start position:0%
vectors for those who don't know that
well<00:43:26.140><c> vectors</c><00:43:26.919><c> 128</c><00:43:27.759><c> bits</c><00:43:28.089><c> it</c><00:43:28.749><c> can</c><00:43:29.019><c> be</c><00:43:29.169><c> operated</c>

00:43:29.519 --> 00:43:29.529 align:start position:0%
well vectors 128 bits it can be operated
 

00:43:29.529 --> 00:43:30.200 align:start position:0%
well vectors 128 bits it can be operated
on

00:43:30.200 --> 00:43:30.210 align:start position:0%
on
 

00:43:30.210 --> 00:43:32.480 align:start position:0%
on
and<00:43:30.780><c> a</c><00:43:30.960><c> number</c><00:43:31.290><c> of</c><00:43:31.410><c> different</c><00:43:31.830><c> sizes</c><00:43:32.130><c> for</c>

00:43:32.480 --> 00:43:32.490 align:start position:0%
and a number of different sizes for
 

00:43:32.490 --> 00:43:36.589 align:start position:0%
and a number of different sizes for
integers<00:43:33.300><c> and</c><00:43:33.690><c> floating-point</c><00:43:34.290><c> in</c><00:43:34.830><c> and</c><00:43:35.599><c> bit</c>

00:43:36.589 --> 00:43:36.599 align:start position:0%
integers and floating-point in and bit
 

00:43:36.599 --> 00:43:40.390 align:start position:0%
integers and floating-point in and bit
operations<00:43:37.320><c> and</c><00:43:37.619><c> so</c><00:43:37.830><c> forth</c><00:43:38.390><c> all</c><00:43:39.390><c> of</c><00:43:39.690><c> those</c>

00:43:40.390 --> 00:43:40.400 align:start position:0%
operations and so forth all of those
 

00:43:40.400 --> 00:43:42.589 align:start position:0%
operations and so forth all of those
operations<00:43:41.400><c> within</c><00:43:41.700><c> that</c><00:43:42.000><c> hundred</c><00:43:42.390><c> and</c>

00:43:42.589 --> 00:43:42.599 align:start position:0%
operations within that hundred and
 

00:43:42.599 --> 00:43:45.140 align:start position:0%
operations within that hundred and
twenty<00:43:43.260><c> eight</c><00:43:43.380><c> bits</c><00:43:43.760><c> actually</c><00:43:44.760><c> occur</c><00:43:45.000><c> in</c>

00:43:45.140 --> 00:43:45.150 align:start position:0%
twenty eight bits actually occur in
 

00:43:45.150 --> 00:43:47.480 align:start position:0%
twenty eight bits actually occur in
parallel<00:43:45.630><c> and</c><00:43:45.660><c> so</c><00:43:46.050><c> therein</c><00:43:46.560><c> lies</c><00:43:46.770><c> the</c><00:43:46.830><c> speed</c>

00:43:47.480 --> 00:43:47.490 align:start position:0%
parallel and so therein lies the speed
 

00:43:47.490 --> 00:43:51.680 align:start position:0%
parallel and so therein lies the speed
up<00:43:49.160><c> just</c><00:43:50.160><c> a</c><00:43:50.280><c> quick</c><00:43:50.520><c> overview</c><00:43:50.670><c> the</c><00:43:51.210><c> types</c><00:43:51.480><c> of</c>

00:43:51.680 --> 00:43:51.690 align:start position:0%
up just a quick overview the types of
 

00:43:51.690 --> 00:43:54.800 align:start position:0%
up just a quick overview the types of
operations<00:43:52.170><c> are</c><00:43:53.240><c> arithmetic</c><00:43:54.240><c> logical</c>

00:43:54.800 --> 00:43:54.810 align:start position:0%
operations are arithmetic logical
 

00:43:54.810 --> 00:43:57.320 align:start position:0%
operations are arithmetic logical
compare<00:43:55.400><c> rotating</c><00:43:56.400><c> shift</c><00:43:56.700><c> but</c><00:43:56.970><c> they're</c><00:43:57.180><c> all</c>

00:43:57.320 --> 00:43:57.330 align:start position:0%
compare rotating shift but they're all
 

00:43:57.330 --> 00:43:59.810 align:start position:0%
compare rotating shift but they're all
done<00:43:57.599><c> within</c><00:43:57.869><c> the</c><00:43:58.230><c> vector</c><00:43:58.890><c> unit</c><00:43:59.460><c> and</c><00:43:59.730><c> of</c>

00:43:59.810 --> 00:43:59.820 align:start position:0%
done within the vector unit and of
 

00:43:59.820 --> 00:44:02.030 align:start position:0%
done within the vector unit and of
course<00:44:00.060><c> the</c><00:44:00.210><c> data</c><00:44:00.420><c> types</c><00:44:00.780><c> we</c><00:44:01.560><c> just</c><00:44:01.800><c> talked</c>

00:44:02.030 --> 00:44:02.040 align:start position:0%
course the data types we just talked
 

00:44:02.040 --> 00:44:06.349 align:start position:0%
course the data types we just talked
about<00:44:02.190><c> so</c><00:44:03.030><c> in</c><00:44:03.510><c> your</c><00:44:04.849><c> DVD</c><00:44:05.849><c> that</c><00:44:06.089><c> you've</c>

00:44:06.349 --> 00:44:06.359 align:start position:0%
about so in your DVD that you've
 

00:44:06.359 --> 00:44:09.560 align:start position:0%
about so in your DVD that you've
received<00:44:06.830><c> there</c><00:44:07.830><c> is</c><00:44:08.010><c> a</c><00:44:08.040><c> preview</c><00:44:08.940><c> compiler</c><00:44:09.420><c> a</c>

00:44:09.560 --> 00:44:09.570 align:start position:0%
received there is a preview compiler a
 

00:44:09.570 --> 00:44:11.810 align:start position:0%
received there is a preview compiler a
preview<00:44:10.200><c> of</c><00:44:10.260><c> the</c><00:44:10.440><c> three</c><00:44:10.680><c> dot</c><00:44:10.859><c> five</c><00:44:11.099><c> compiler</c>

00:44:11.810 --> 00:44:11.820 align:start position:0%
preview of the three dot five compiler
 

00:44:11.820 --> 00:44:16.490 align:start position:0%
preview of the three dot five compiler
and<00:44:12.380><c> that</c><00:44:13.380><c> is</c><00:44:13.619><c> a</c><00:44:13.730><c> first</c><00:44:15.050><c> introduction</c><00:44:16.050><c> to</c><00:44:16.080><c> you</c>

00:44:16.490 --> 00:44:16.500 align:start position:0%
and that is a first introduction to you
 

00:44:16.500 --> 00:44:19.880 align:start position:0%
and that is a first introduction to you
of<00:44:16.830><c> the</c><00:44:17.790><c> auto</c><00:44:18.060><c> vectorization</c><00:44:18.750><c> it</c><00:44:19.650><c> has</c>

00:44:19.880 --> 00:44:19.890 align:start position:0%
of the auto vectorization it has
 

00:44:19.890 --> 00:44:23.150 align:start position:0%
of the auto vectorization it has
limitations<00:44:20.460><c> and</c><00:44:21.119><c> and</c><00:44:21.420><c> our</c><00:44:21.960><c> goal</c><00:44:22.589><c> is</c><00:44:22.859><c> to</c>

00:44:23.150 --> 00:44:23.160 align:start position:0%
limitations and and our goal is to
 

00:44:23.160 --> 00:44:25.579 align:start position:0%
limitations and and our goal is to
really<00:44:23.369><c> work</c><00:44:23.970><c> on</c><00:44:24.180><c> those</c><00:44:24.390><c> limitations</c><00:44:24.900><c> between</c>

00:44:25.579 --> 00:44:25.589 align:start position:0%
really work on those limitations between
 

00:44:25.589 --> 00:44:27.770 align:start position:0%
really work on those limitations between
now<00:44:25.830><c> and</c><00:44:26.070><c> the</c><00:44:26.130><c> time</c><00:44:26.160><c> it's</c><00:44:26.609><c> released</c><00:44:27.000><c> with</c><00:44:27.390><c> with</c>

00:44:27.770 --> 00:44:27.780 align:start position:0%
now and the time it's released with with
 

00:44:27.780 --> 00:44:31.339 align:start position:0%
now and the time it's released with with
Tiger<00:44:28.260><c> but</c><00:44:28.859><c> today</c><00:44:29.190><c> what</c><00:44:29.490><c> can</c><00:44:29.520><c> it</c><00:44:29.849><c> handle</c><00:44:30.060><c> I</c><00:44:30.450><c> can</c>

00:44:31.339 --> 00:44:31.349 align:start position:0%
Tiger but today what can it handle I can
 

00:44:31.349 --> 00:44:33.740 align:start position:0%
Tiger but today what can it handle I can
handle<00:44:31.530><c> loops</c><00:44:31.890><c> with</c><00:44:32.220><c> both</c><00:44:33.000><c> known</c><00:44:33.300><c> and</c><00:44:33.330><c> unknown</c>

00:44:33.740 --> 00:44:33.750 align:start position:0%
handle loops with both known and unknown
 

00:44:33.750 --> 00:44:36.680 align:start position:0%
handle loops with both known and unknown
bounds<00:44:34.619><c> and</c><00:44:34.800><c> there's</c><00:44:35.040><c> different</c><00:44:35.520><c> codes</c><00:44:36.510><c> that</c>

00:44:36.680 --> 00:44:36.690 align:start position:0%
bounds and there's different codes that
 

00:44:36.690 --> 00:44:39.680 align:start position:0%
bounds and there's different codes that
we<00:44:36.839><c> have</c><00:44:36.990><c> to</c><00:44:37.140><c> generate</c><00:44:37.380><c> to</c><00:44:37.859><c> discover</c><00:44:38.369><c> the</c><00:44:38.760><c> loop</c>

00:44:39.680 --> 00:44:39.690 align:start position:0%
we have to generate to discover the loop
 

00:44:39.690 --> 00:44:42.470 align:start position:0%
we have to generate to discover the loop
iteration<00:44:40.260><c> counter</c><00:44:40.980><c> at</c><00:44:41.400><c> runtime</c><00:44:41.820><c> if</c><00:44:42.270><c> they're</c>

00:44:42.470 --> 00:44:42.480 align:start position:0%
iteration counter at runtime if they're
 

00:44:42.480 --> 00:44:45.470 align:start position:0%
iteration counter at runtime if they're
not<00:44:42.660><c> known</c><00:44:43.099><c> loops</c><00:44:44.099><c> with</c><00:44:44.339><c> even</c><00:44:44.670><c> an</c><00:44:44.820><c> odd</c><00:44:44.970><c> vector</c>

00:44:45.470 --> 00:44:45.480 align:start position:0%
not known loops with even an odd vector
 

00:44:45.480 --> 00:44:49.520 align:start position:0%
not known loops with even an odd vector
links<00:44:46.400><c> loops</c><00:44:47.400><c> with</c><00:44:48.020><c> conditionals</c><00:44:49.020><c> and</c><00:44:49.230><c> those</c>

00:44:49.520 --> 00:44:49.530 align:start position:0%
links loops with conditionals and those
 

00:44:49.530 --> 00:44:52.990 align:start position:0%
links loops with conditionals and those
particularly<00:44:50.750><c> simple</c><00:44:51.750><c> conditionals</c><00:44:52.380><c> and</c>

00:44:52.990 --> 00:44:53.000 align:start position:0%
particularly simple conditionals and
 

00:44:53.000 --> 00:44:56.240 align:start position:0%
particularly simple conditionals and
misaligned<00:44:54.000><c> vectors</c><00:44:54.420><c> on</c><00:44:54.690><c> loads</c><00:44:54.990><c> so</c><00:44:55.500><c> we're</c>

00:44:56.240 --> 00:44:56.250 align:start position:0%
misaligned vectors on loads so we're
 

00:44:56.250 --> 00:44:59.210 align:start position:0%
misaligned vectors on loads so we're
able<00:44:56.490><c> to</c><00:44:56.880><c> to</c><00:44:57.359><c> take</c><00:44:57.630><c> unaligned</c><00:44:58.410><c> vectors</c><00:44:58.920><c> and</c>

00:44:59.210 --> 00:44:59.220 align:start position:0%
able to to take unaligned vectors and
 

00:44:59.220 --> 00:45:01.190 align:start position:0%
able to to take unaligned vectors and
what<00:44:59.700><c> I</c><00:44:59.730><c> mean</c><00:44:59.970><c> by</c><00:45:00.030><c> that</c><00:45:00.210><c> is</c><00:45:00.750><c> once</c><00:45:01.020><c> again</c>

00:45:01.190 --> 00:45:01.200 align:start position:0%
what I mean by that is once again
 

00:45:01.200 --> 00:45:04.849 align:start position:0%
what I mean by that is once again
altivec<00:45:02.089><c> operates</c><00:45:03.089><c> on</c><00:45:03.390><c> a</c><00:45:03.540><c> 16-byte</c><00:45:04.290><c> boundary</c>

00:45:04.849 --> 00:45:04.859 align:start position:0%
altivec operates on a 16-byte boundary
 

00:45:04.859 --> 00:45:07.370 align:start position:0%
altivec operates on a 16-byte boundary
type<00:45:05.580><c> of</c><00:45:05.790><c> veteran</c><00:45:06.390><c> so</c><00:45:06.630><c> if</c><00:45:06.780><c> your</c><00:45:06.960><c> vectors</c>

00:45:07.370 --> 00:45:07.380 align:start position:0%
type of veteran so if your vectors
 

00:45:07.380 --> 00:45:10.550 align:start position:0%
type of veteran so if your vectors
online<00:45:07.920><c> on</c><00:45:08.130><c> on</c><00:45:08.400><c> 16</c><00:45:09.240><c> byte</c><00:45:09.450><c> boundaries</c><00:45:10.050><c> and</c><00:45:10.320><c> and</c>

00:45:10.550 --> 00:45:10.560 align:start position:0%
online on on 16 byte boundaries and and
 

00:45:10.560 --> 00:45:13.849 align:start position:0%
online on on 16 byte boundaries and and
you<00:45:11.250><c> can</c><00:45:11.550><c> get</c><00:45:11.790><c> that</c><00:45:11.849><c> from</c><00:45:12.599><c> malik</c><00:45:12.990><c> to</c><00:45:13.140><c> raise</c><00:45:13.380><c> and</c>

00:45:13.849 --> 00:45:13.859 align:start position:0%
you can get that from malik to raise and
 

00:45:13.859 --> 00:45:16.520 align:start position:0%
you can get that from malik to raise and
of<00:45:13.950><c> course</c><00:45:14.250><c> your</c><00:45:14.880><c> own</c><00:45:15.060><c> arrays</c><00:45:15.420><c> that</c><00:45:15.450><c> you</c><00:45:16.020><c> that</c>

00:45:16.520 --> 00:45:16.530 align:start position:0%
of course your own arrays that you that
 

00:45:16.530 --> 00:45:19.849 align:start position:0%
of course your own arrays that you that
you<00:45:16.880><c> allocate</c><00:45:17.880><c> but</c><00:45:18.690><c> but</c><00:45:19.230><c> we</c><00:45:19.470><c> go</c><00:45:19.619><c> through</c>

00:45:19.849 --> 00:45:19.859 align:start position:0%
you allocate but but we go through
 

00:45:19.859 --> 00:45:22.609 align:start position:0%
you allocate but but we go through
vector<00:45:20.220><c> operations</c><00:45:21.210><c> to</c><00:45:21.810><c> align</c><00:45:22.080><c> them</c><00:45:22.349><c> and</c><00:45:22.530><c> i'll</c>

00:45:22.609 --> 00:45:22.619 align:start position:0%
vector operations to align them and i'll
 

00:45:22.619 --> 00:45:23.990 align:start position:0%
vector operations to align them and i'll
show<00:45:22.650><c> you</c><00:45:22.920><c> a</c><00:45:23.040><c> little</c><00:45:23.280><c> bit</c><00:45:23.369><c> about</c><00:45:23.730><c> the</c>

00:45:23.990 --> 00:45:24.000 align:start position:0%
show you a little bit about the
 

00:45:24.000 --> 00:45:27.410 align:start position:0%
show you a little bit about the
performance<00:45:24.570><c> penalty</c><00:45:25.050><c> that</c><00:45:25.710><c> can</c><00:45:25.890><c> occur</c><00:45:26.420><c> when</c>

00:45:27.410 --> 00:45:27.420 align:start position:0%
performance penalty that can occur when
 

00:45:27.420 --> 00:45:31.670 align:start position:0%
performance penalty that can occur when
you<00:45:27.570><c> do</c><00:45:27.750><c> that</c><00:45:29.240><c> auto</c><00:45:30.240><c> vectorization</c><00:45:31.050><c> has</c>

00:45:31.670 --> 00:45:31.680 align:start position:0%
you do that auto vectorization has
 

00:45:31.680 --> 00:45:33.890 align:start position:0%
you do that auto vectorization has
difficulties<00:45:32.430><c> with</c><00:45:32.640><c> pointers</c><00:45:33.060><c> and</c><00:45:33.330><c> aliasing</c>

00:45:33.890 --> 00:45:33.900 align:start position:0%
difficulties with pointers and aliasing
 

00:45:33.900 --> 00:45:35.570 align:start position:0%
difficulties with pointers and aliasing
well<00:45:34.080><c> I</c><00:45:34.109><c> talked</c><00:45:34.560><c> a</c><00:45:34.680><c> little</c><00:45:34.830><c> bit</c><00:45:35.070><c> about</c><00:45:35.310><c> that</c>

00:45:35.570 --> 00:45:35.580 align:start position:0%
well I talked a little bit about that
 

00:45:35.580 --> 00:45:38.359 align:start position:0%
well I talked a little bit about that
before<00:45:36.230><c> and</c><00:45:37.230><c> the</c><00:45:37.560><c> scalar</c><00:45:37.859><c> part</c><00:45:38.190><c> of</c><00:45:38.280><c> the</c>

00:45:38.359 --> 00:45:38.369 align:start position:0%
before and the scalar part of the
 

00:45:38.369 --> 00:45:39.690 align:start position:0%
before and the scalar part of the
present<00:45:38.849><c> age</c>

00:45:39.690 --> 00:45:39.700 align:start position:0%
present age
 

00:45:39.700 --> 00:45:43.599 align:start position:0%
present age
that's<00:45:40.700><c> true</c><00:45:41.299><c> here</c><00:45:41.599><c> as</c><00:45:41.750><c> well</c><00:45:42.280><c> in</c><00:45:43.280><c> this</c>

00:45:43.599 --> 00:45:43.609 align:start position:0%
that's true here as well in this
 

00:45:43.609 --> 00:45:46.030 align:start position:0%
that's true here as well in this
particular<00:45:43.849><c> example</c><00:45:44.410><c> there</c><00:45:45.410><c> is</c><00:45:45.440><c> no</c><00:45:45.799><c> way</c><00:45:46.010><c> that</c>

00:45:46.030 --> 00:45:46.040 align:start position:0%
particular example there is no way that
 

00:45:46.040 --> 00:45:49.420 align:start position:0%
particular example there is no way that
the<00:45:46.460><c> compiler</c><00:45:46.849><c> unless</c><00:45:47.569><c> a</c><00:45:47.869><c> and</c><00:45:48.530><c> B</c><00:45:48.710><c> are</c><00:45:48.740><c> Global's</c>

00:45:49.420 --> 00:45:49.430 align:start position:0%
the compiler unless a and B are Global's
 

00:45:49.430 --> 00:45:52.210 align:start position:0%
the compiler unless a and B are Global's
our<00:45:50.390><c> local</c><00:45:51.140><c> they're</c><00:45:51.410><c> not</c><00:45:51.559><c> certainly</c><00:45:52.040><c> not</c>

00:45:52.210 --> 00:45:52.220 align:start position:0%
our local they're not certainly not
 

00:45:52.220 --> 00:45:54.609 align:start position:0%
our local they're not certainly not
local<00:45:52.609><c> within</c><00:45:52.970><c> this</c><00:45:53.180><c> function</c><00:45:53.720><c> and</c><00:45:53.960><c> so</c><00:45:54.470><c> unless</c>

00:45:54.609 --> 00:45:54.619 align:start position:0%
local within this function and so unless
 

00:45:54.619 --> 00:45:56.410 align:start position:0%
local within this function and so unless
they're<00:45:54.920><c> got</c><00:45:55.130><c> Global's</c><00:45:55.700><c> there's</c><00:45:55.940><c> no</c><00:45:56.089><c> way</c><00:45:56.270><c> the</c>

00:45:56.410 --> 00:45:56.420 align:start position:0%
they're got Global's there's no way the
 

00:45:56.420 --> 00:45:59.770 align:start position:0%
they're got Global's there's no way the
compiler<00:45:56.960><c> can</c><00:45:57.319><c> discover</c><00:45:57.740><c> that</c><00:45:58.579><c> these</c><00:45:58.819><c> are</c><00:45:59.299><c> not</c>

00:45:59.770 --> 00:45:59.780 align:start position:0%
compiler can discover that these are not
 

00:45:59.780 --> 00:46:01.690 align:start position:0%
compiler can discover that these are not
alias<00:46:00.290><c> and</c><00:46:00.589><c> so</c><00:46:00.770><c> it</c><00:46:00.920><c> will</c><00:46:01.040><c> have</c><00:46:01.190><c> to</c><00:46:01.339><c> make</c><00:46:01.520><c> the</c>

00:46:01.690 --> 00:46:01.700 align:start position:0%
alias and so it will have to make the
 

00:46:01.700 --> 00:46:05.079 align:start position:0%
alias and so it will have to make the
assumption<00:46:02.030><c> they</c><00:46:02.390><c> are</c><00:46:02.770><c> in</c><00:46:03.770><c> today's</c><00:46:04.309><c> world</c><00:46:04.730><c> and</c>

00:46:05.079 --> 00:46:05.089 align:start position:0%
assumption they are in today's world and
 

00:46:05.089 --> 00:46:09.069 align:start position:0%
assumption they are in today's world and
not<00:46:06.079><c> vectorize</c><00:46:06.650><c> this</c><00:46:06.920><c> loop</c><00:46:07.220><c> however</c><00:46:08.180><c> you</c><00:46:09.049><c> can</c>

00:46:09.069 --> 00:46:09.079 align:start position:0%
not vectorize this loop however you can
 

00:46:09.079 --> 00:46:11.049 align:start position:0%
not vectorize this loop however you can
help<00:46:09.410><c> the</c><00:46:09.589><c> compiler</c><00:46:09.980><c> out</c><00:46:10.280><c> in</c><00:46:10.490><c> a</c><00:46:10.609><c> simple</c><00:46:11.030><c> way</c>

00:46:11.049 --> 00:46:11.059 align:start position:0%
help the compiler out in a simple way
 

00:46:11.059 --> 00:46:13.870 align:start position:0%
help the compiler out in a simple way
you<00:46:11.869><c> can</c><00:46:12.440><c> actually</c><00:46:13.010><c> use</c><00:46:13.190><c> the</c><00:46:13.430><c> restrict</c>

00:46:13.870 --> 00:46:13.880 align:start position:0%
you can actually use the restrict
 

00:46:13.880 --> 00:46:16.240 align:start position:0%
you can actually use the restrict
keyword<00:46:14.329><c> and</c><00:46:14.660><c> the</c><00:46:14.750><c> restrict</c><00:46:15.319><c> tells</c><00:46:15.589><c> the</c>

00:46:16.240 --> 00:46:16.250 align:start position:0%
keyword and the restrict tells the
 

00:46:16.250 --> 00:46:19.329 align:start position:0%
keyword and the restrict tells the
compiler<00:46:16.609><c> okay</c><00:46:17.180><c> this</c><00:46:18.140><c> pointer</c><00:46:18.920><c> does</c><00:46:19.130><c> not</c>

00:46:19.329 --> 00:46:19.339 align:start position:0%
compiler okay this pointer does not
 

00:46:19.339 --> 00:46:22.240 align:start position:0%
compiler okay this pointer does not
alias<00:46:19.849><c> with</c><00:46:20.119><c> any</c><00:46:20.329><c> other</c><00:46:20.569><c> 22</c><00:46:21.230><c> object</c><00:46:21.890><c> and</c><00:46:22.069><c> so</c>

00:46:22.240 --> 00:46:22.250 align:start position:0%
alias with any other 22 object and so
 

00:46:22.250 --> 00:46:25.960 align:start position:0%
alias with any other 22 object and so
those<00:46:22.720><c> that's</c><00:46:23.720><c> a</c><00:46:23.900><c> simple</c><00:46:24.260><c> help</c><00:46:24.530><c> it</c><00:46:25.339><c> turns</c><00:46:25.760><c> a</c>

00:46:25.960 --> 00:46:25.970 align:start position:0%
those that's a simple help it turns a
 

00:46:25.970 --> 00:46:28.299 align:start position:0%
those that's a simple help it turns a
loop<00:46:26.150><c> into</c><00:46:26.690><c> one</c><00:46:27.440><c> that</c><00:46:27.619><c> can</c><00:46:27.829><c> be</c><00:46:27.950><c> vectorized</c>

00:46:28.299 --> 00:46:28.309 align:start position:0%
loop into one that can be vectorized
 

00:46:28.309 --> 00:46:32.380 align:start position:0%
loop into one that can be vectorized
that<00:46:28.970><c> can't</c><00:46:29.299><c> today</c><00:46:30.579><c> and</c><00:46:31.579><c> the</c><00:46:31.849><c> next</c><00:46:32.059><c> thing</c><00:46:32.329><c> that</c>

00:46:32.380 --> 00:46:32.390 align:start position:0%
that can't today and the next thing that
 

00:46:32.390 --> 00:46:34.660 align:start position:0%
that can't today and the next thing that
that<00:46:32.960><c> it</c><00:46:33.109><c> has</c><00:46:33.290><c> difficulty</c><00:46:34.010><c> with</c><00:46:34.250><c> that</c><00:46:34.280><c> you</c>

00:46:34.660 --> 00:46:34.670 align:start position:0%
that it has difficulty with that you
 

00:46:34.670 --> 00:46:37.599 align:start position:0%
that it has difficulty with that you
need<00:46:34.849><c> to</c><00:46:34.970><c> watch</c><00:46:35.150><c> out</c><00:46:35.420><c> for</c><00:46:35.450><c> is</c><00:46:35.960><c> that</c><00:46:36.609><c> scalar</c>

00:46:37.599 --> 00:46:37.609 align:start position:0%
need to watch out for is that scalar
 

00:46:37.609 --> 00:46:39.849 align:start position:0%
need to watch out for is that scalar
loops<00:46:37.970><c> may</c><00:46:38.390><c> have</c><00:46:38.599><c> data</c><00:46:38.900><c> dependencies</c><00:46:39.829><c> that</c>

00:46:39.849 --> 00:46:39.859 align:start position:0%
loops may have data dependencies that
 

00:46:39.859 --> 00:46:42.400 align:start position:0%
loops may have data dependencies that
work<00:46:40.400><c> perfectly</c><00:46:40.940><c> fine</c><00:46:41.270><c> when</c><00:46:41.630><c> you're</c><00:46:41.839><c> doing</c><00:46:42.260><c> in</c>

00:46:42.400 --> 00:46:42.410 align:start position:0%
work perfectly fine when you're doing in
 

00:46:42.410 --> 00:46:45.730 align:start position:0%
work perfectly fine when you're doing in
the<00:46:42.530><c> scalar</c><00:46:42.920><c> mode</c><00:46:43.160><c> but</c><00:46:44.030><c> to</c><00:46:44.839><c> try</c><00:46:45.079><c> and</c><00:46:45.230><c> transform</c>

00:46:45.730 --> 00:46:45.740 align:start position:0%
the scalar mode but to try and transform
 

00:46:45.740 --> 00:46:47.920 align:start position:0%
the scalar mode but to try and transform
that<00:46:46.069><c> into</c><00:46:46.130><c> a</c><00:46:46.520><c> vector</c><00:46:46.880><c> type</c><00:46:47.240><c> of</c><00:46:47.450><c> operation</c>

00:46:47.920 --> 00:46:47.930 align:start position:0%
that into a vector type of operation
 

00:46:47.930 --> 00:46:49.690 align:start position:0%
that into a vector type of operation
where<00:46:48.319><c> you</c><00:46:48.440><c> have</c><00:46:48.589><c> a</c><00:46:48.619><c> number</c><00:46:48.920><c> of</c><00:46:49.040><c> elements</c>

00:46:49.690 --> 00:46:49.700 align:start position:0%
where you have a number of elements
 

00:46:49.700 --> 00:46:52.539 align:start position:0%
where you have a number of elements
being<00:46:49.910><c> being</c><00:46:50.680><c> computed</c><00:46:51.680><c> at</c><00:46:51.829><c> the</c><00:46:51.980><c> same</c><00:46:52.250><c> time</c>

00:46:52.539 --> 00:46:52.549 align:start position:0%
being being computed at the same time
 

00:46:52.549 --> 00:46:55.210 align:start position:0%
being being computed at the same time
you<00:46:53.180><c> can't</c><00:46:53.480><c> have</c><00:46:53.750><c> those</c><00:46:53.960><c> dependencies</c><00:46:54.589><c> and</c><00:46:54.980><c> so</c>

00:46:55.210 --> 00:46:55.220 align:start position:0%
you can't have those dependencies and so
 

00:46:55.220 --> 00:46:58.420 align:start position:0%
you can't have those dependencies and so
the<00:46:55.760><c> first</c><00:46:56.349><c> illustration</c><00:46:57.349><c> of</c><00:46:57.589><c> a</c><00:46:57.710><c> loop</c><00:46:57.890><c> here</c><00:46:58.280><c> is</c>

00:46:58.420 --> 00:46:58.430 align:start position:0%
the first illustration of a loop here is
 

00:46:58.430 --> 00:47:00.490 align:start position:0%
the first illustration of a loop here is
one<00:46:58.760><c> in</c><00:46:58.940><c> which</c><00:46:58.970><c> we</c><00:46:59.869><c> simply</c><00:47:00.260><c> couldn't</c>

00:47:00.490 --> 00:47:00.500 align:start position:0%
one in which we simply couldn't
 

00:47:00.500 --> 00:47:03.430 align:start position:0%
one in which we simply couldn't
vectorize<00:47:00.980><c> it</c><00:47:01.190><c> because</c><00:47:01.930><c> you</c><00:47:02.930><c> will</c><00:47:03.109><c> have</c><00:47:03.140><c> this</c>

00:47:03.430 --> 00:47:03.440 align:start position:0%
vectorize it because you will have this
 

00:47:03.440 --> 00:47:06.160 align:start position:0%
vectorize it because you will have this
data<00:47:03.710><c> dependency</c><00:47:04.520><c> and</c><00:47:04.700><c> the</c><00:47:05.299><c> second</c><00:47:05.720><c> one</c><00:47:05.869><c> the</c>

00:47:06.160 --> 00:47:06.170 align:start position:0%
data dependency and the second one the
 

00:47:06.170 --> 00:47:08.049 align:start position:0%
data dependency and the second one the
second<00:47:06.530><c> one</c><00:47:06.559><c> looks</c><00:47:06.890><c> similar</c><00:47:07.309><c> but</c><00:47:07.339><c> in</c><00:47:07.819><c> fact</c>

00:47:08.049 --> 00:47:08.059 align:start position:0%
second one looks similar but in fact
 

00:47:08.059 --> 00:47:10.829 align:start position:0%
second one looks similar but in fact
there's<00:47:08.329><c> no</c><00:47:08.510><c> data</c><00:47:08.750><c> dependency</c><00:47:09.500><c> here</c><00:47:09.770><c> because</c>

00:47:10.829 --> 00:47:10.839 align:start position:0%
there's no data dependency here because
 

00:47:10.839 --> 00:47:16.450 align:start position:0%
there's no data dependency here because
this<00:47:11.839><c> is</c><00:47:12.049><c> all</c><00:47:12.260><c> set</c><00:47:12.530><c> by</c><00:47:12.770><c> N</c><00:47:13.329><c> and</c><00:47:14.619><c> then</c><00:47:15.619><c> misaligned</c>

00:47:16.450 --> 00:47:16.460 align:start position:0%
this is all set by N and then misaligned
 

00:47:16.460 --> 00:47:20.079 align:start position:0%
this is all set by N and then misaligned
vector<00:47:16.880><c> stores</c><00:47:18.069><c> we</c><00:47:19.069><c> simply</c><00:47:19.549><c> can't</c><00:47:19.760><c> handle</c>

00:47:20.079 --> 00:47:20.089 align:start position:0%
vector stores we simply can't handle
 

00:47:20.089 --> 00:47:23.559 align:start position:0%
vector stores we simply can't handle
that<00:47:20.299><c> in</c><00:47:20.420><c> the</c><00:47:20.510><c> preview</c><00:47:20.990><c> we'll</c><00:47:21.589><c> have</c><00:47:22.569><c> that</c>

00:47:23.559 --> 00:47:23.569 align:start position:0%
that in the preview we'll have that
 

00:47:23.569 --> 00:47:27.789 align:start position:0%
that in the preview we'll have that
available<00:47:23.780><c> and</c><00:47:24.530><c> the</c><00:47:24.770><c> in</c><00:47:25.369><c> the</c><00:47:26.119><c> IGM</c><00:47:27.020><c> release</c><00:47:27.410><c> but</c>

00:47:27.789 --> 00:47:27.799 align:start position:0%
available and the in the IGM release but
 

00:47:27.799 --> 00:47:29.920 align:start position:0%
available and the in the IGM release but
if<00:47:28.040><c> you're</c><00:47:28.280><c> going</c><00:47:28.490><c> to</c><00:47:28.609><c> play</c><00:47:28.760><c> with</c><00:47:29.119><c> a</c><00:47:29.420><c> 35</c>

00:47:29.920 --> 00:47:29.930 align:start position:0%
if you're going to play with a 35
 

00:47:29.930 --> 00:47:33.010 align:start position:0%
if you're going to play with a 35
compiler<00:47:30.410><c> be</c><00:47:30.920><c> aware</c><00:47:31.190><c> that</c><00:47:31.579><c> the</c><00:47:32.510><c> vector</c><00:47:32.660><c> that</c>

00:47:33.010 --> 00:47:33.020 align:start position:0%
compiler be aware that the vector that
 

00:47:33.020 --> 00:47:35.490 align:start position:0%
compiler be aware that the vector that
you're<00:47:33.230><c> storing</c><00:47:33.650><c> into</c><00:47:34.250><c> needs</c><00:47:34.819><c> to</c><00:47:35.059><c> be</c>

00:47:35.490 --> 00:47:35.500 align:start position:0%
you're storing into needs to be
 

00:47:35.500 --> 00:47:38.890 align:start position:0%
you're storing into needs to be
correctly<00:47:36.500><c> aligned</c><00:47:36.680><c> in</c><00:47:37.160><c> memory</c><00:47:37.520><c> so</c><00:47:38.510><c> what</c><00:47:38.750><c> is</c>

00:47:38.890 --> 00:47:38.900 align:start position:0%
correctly aligned in memory so what is
 

00:47:38.900 --> 00:47:42.190 align:start position:0%
correctly aligned in memory so what is
using<00:47:39.170><c> the</c><00:47:39.670><c> auto</c><00:47:40.670><c> vectorization</c><00:47:41.359><c> all</c><00:47:41.869><c> about</c>

00:47:42.190 --> 00:47:42.200 align:start position:0%
using the auto vectorization all about
 

00:47:42.200 --> 00:47:44.770 align:start position:0%
using the auto vectorization all about
well<00:47:42.530><c> it's</c><00:47:42.680><c> about</c><00:47:42.829><c> performance</c><00:47:43.640><c> and</c><00:47:43.910><c> so</c><00:47:44.480><c> I</c>

00:47:44.770 --> 00:47:44.780 align:start position:0%
well it's about performance and so I
 

00:47:44.780 --> 00:47:47.220 align:start position:0%
well it's about performance and so I
have<00:47:45.470><c> some</c><00:47:45.859><c> initial</c><00:47:46.160><c> numbers</c><00:47:46.730><c> here</c>

00:47:47.220 --> 00:47:47.230 align:start position:0%
have some initial numbers here
 

00:47:47.230 --> 00:47:49.530 align:start position:0%
have some initial numbers here
and<00:47:47.560><c> these</c><00:47:47.770><c> are</c><00:47:47.830><c> already</c><00:47:48.190><c> out</c><00:47:48.520><c> of</c><00:47:48.640><c> date</c><00:47:48.850><c> as</c><00:47:49.300><c> we</c>

00:47:49.530 --> 00:47:49.540 align:start position:0%
and these are already out of date as we
 

00:47:49.540 --> 00:47:54.150 align:start position:0%
and these are already out of date as we
continue<00:47:50.140><c> to</c><00:47:50.170><c> tune</c><00:47:50.880><c> the</c><00:47:51.880><c> code</c><00:47:52.180><c> but</c><00:47:52.859><c> for</c><00:47:53.859><c> simple</c>

00:47:54.150 --> 00:47:54.160 align:start position:0%
continue to tune the code but for simple
 

00:47:54.160 --> 00:47:56.550 align:start position:0%
continue to tune the code but for simple
types<00:47:54.369><c> of</c><00:47:54.580><c> operations</c><00:47:55.030><c> in</c><00:47:55.510><c> loops</c><00:47:55.810><c> you</c><00:47:56.140><c> can</c><00:47:56.170><c> see</c>

00:47:56.550 --> 00:47:56.560 align:start position:0%
types of operations in loops you can see
 

00:47:56.560 --> 00:47:59.130 align:start position:0%
types of operations in loops you can see
speedups<00:47:57.100><c> here</c><00:47:57.430><c> that</c><00:47:57.640><c> go</c><00:47:57.820><c> all</c><00:47:58.030><c> the</c><00:47:58.150><c> way</c><00:47:58.180><c> to</c><00:47:58.390><c> 14</c>

00:47:59.130 --> 00:47:59.140 align:start position:0%
speedups here that go all the way to 14
 

00:47:59.140 --> 00:48:03.240 align:start position:0%
speedups here that go all the way to 14
times<00:47:59.700><c> and</c><00:48:00.700><c> we're</c><00:48:01.000><c> now</c><00:48:01.150><c> seeing</c><00:48:01.450><c> even</c><00:48:02.250><c> around</c>

00:48:03.240 --> 00:48:03.250 align:start position:0%
times and we're now seeing even around
 

00:48:03.250 --> 00:48:08.520 align:start position:0%
times and we're now seeing even around
20<00:48:03.730><c> times</c><00:48:04.000><c> and</c><00:48:04.869><c> some</c><00:48:05.500><c> of</c><00:48:05.619><c> our</c><00:48:05.740><c> work</c><00:48:07.200><c> if</c><00:48:08.200><c> you</c>

00:48:08.520 --> 00:48:08.530 align:start position:0%
20 times and some of our work if you
 

00:48:08.530 --> 00:48:10.290 align:start position:0%
20 times and some of our work if you
have<00:48:08.680><c> misaligned</c><00:48:09.250><c> data</c><00:48:09.520><c> the</c><00:48:09.820><c> types</c><00:48:10.119><c> of</c>

00:48:10.290 --> 00:48:10.300 align:start position:0%
have misaligned data the types of
 

00:48:10.300 --> 00:48:12.810 align:start position:0%
have misaligned data the types of
impacts<00:48:10.750><c> that</c><00:48:10.990><c> you</c><00:48:11.170><c> can</c><00:48:11.380><c> see</c><00:48:11.619><c> is</c><00:48:12.100><c> you</c><00:48:12.790><c> really</c>

00:48:12.810 --> 00:48:12.820 align:start position:0%
impacts that you can see is you really
 

00:48:12.820 --> 00:48:16.730 align:start position:0%
impacts that you can see is you really
reduce<00:48:13.480><c> the</c><00:48:13.690><c> performance</c><00:48:14.100><c> significantly</c><00:48:15.540><c> now</c>

00:48:16.730 --> 00:48:16.740 align:start position:0%
reduce the performance significantly now
 

00:48:16.740 --> 00:48:20.310 align:start position:0%
reduce the performance significantly now
this<00:48:17.740><c> as</c><00:48:18.010><c> I</c><00:48:18.550><c> said</c><00:48:18.820><c> I</c><00:48:18.850><c> expect</c><00:48:19.420><c> to</c><00:48:19.540><c> improve</c><00:48:19.960><c> we're</c>

00:48:20.310 --> 00:48:20.320 align:start position:0%
this as I said I expect to improve we're
 

00:48:20.320 --> 00:48:23.340 align:start position:0%
this as I said I expect to improve we're
in<00:48:20.440><c> a</c><00:48:20.530><c> very</c><00:48:20.560><c> early</c><00:48:20.920><c> stage</c><00:48:21.869><c> with</c><00:48:22.869><c> Auto</c>

00:48:23.340 --> 00:48:23.350 align:start position:0%
in a very early stage with Auto
 

00:48:23.350 --> 00:48:27.240 align:start position:0%
in a very early stage with Auto
vectorization<00:48:25.170><c> we</c><00:48:26.170><c> have</c><00:48:26.350><c> a</c><00:48:26.380><c> limited</c><00:48:26.859><c> set</c><00:48:27.220><c> of</c>

00:48:27.240 --> 00:48:27.250 align:start position:0%
vectorization we have a limited set of
 

00:48:27.250 --> 00:48:30.240 align:start position:0%
vectorization we have a limited set of
loops<00:48:28.180><c> that</c><00:48:28.540><c> we're</c><00:48:28.720><c> able</c><00:48:28.869><c> to</c><00:48:29.170><c> recognize</c><00:48:29.800><c> and</c>

00:48:30.240 --> 00:48:30.250 align:start position:0%
loops that we're able to recognize and
 

00:48:30.250 --> 00:48:32.609 align:start position:0%
loops that we're able to recognize and
deck<00:48:30.520><c> to</c><00:48:30.670><c> rise</c><00:48:30.850><c> and</c><00:48:31.300><c> so</c><00:48:31.600><c> I</c><00:48:31.869><c> would</c><00:48:32.500><c> encourage</c>

00:48:32.609 --> 00:48:32.619 align:start position:0%
deck to rise and so I would encourage
 

00:48:32.619 --> 00:48:35.820 align:start position:0%
deck to rise and so I would encourage
you<00:48:33.010><c> to</c><00:48:33.550><c> take</c><00:48:33.760><c> a</c><00:48:33.820><c> look</c><00:48:34.090><c> at</c><00:48:34.240><c> this</c><00:48:34.510><c> we</c><00:48:35.380><c> are</c><00:48:35.650><c> really</c>

00:48:35.820 --> 00:48:35.830 align:start position:0%
you to take a look at this we are really
 

00:48:35.830 --> 00:48:38.609 align:start position:0%
you to take a look at this we are really
open<00:48:36.340><c> to</c><00:48:36.369><c> you</c><00:48:36.790><c> sending</c><00:48:37.420><c> us</c><00:48:37.570><c> kernels</c><00:48:38.109><c> of</c><00:48:38.290><c> code</c>

00:48:38.609 --> 00:48:38.619 align:start position:0%
open to you sending us kernels of code
 

00:48:38.619 --> 00:48:40.740 align:start position:0%
open to you sending us kernels of code
of<00:48:39.130><c> things</c><00:48:39.640><c> that</c><00:48:39.880><c> we</c><00:48:40.030><c> don't</c><00:48:40.150><c> seem</c><00:48:40.450><c> to</c><00:48:40.600><c> be</c><00:48:40.720><c> able</c>

00:48:40.740 --> 00:48:40.750 align:start position:0%
of things that we don't seem to be able
 

00:48:40.750 --> 00:48:44.280 align:start position:0%
of things that we don't seem to be able
to<00:48:41.080><c> vectorize</c><00:48:41.440><c> because</c><00:48:42.250><c> we</c><00:48:43.210><c> want</c><00:48:43.420><c> to</c><00:48:43.630><c> build</c><00:48:44.080><c> up</c>

00:48:44.280 --> 00:48:44.290 align:start position:0%
to vectorize because we want to build up
 

00:48:44.290 --> 00:48:46.980 align:start position:0%
to vectorize because we want to build up
and<00:48:44.530><c> mature</c><00:48:44.890><c> that</c><00:48:45.250><c> ability</c><00:48:45.880><c> and</c><00:48:46.119><c> this</c><00:48:46.750><c> will</c><00:48:46.900><c> be</c>

00:48:46.980 --> 00:48:46.990 align:start position:0%
and mature that ability and this will be
 

00:48:46.990 --> 00:48:50.220 align:start position:0%
and mature that ability and this will be
something<00:48:47.230><c> that</c><00:48:47.440><c> we're</c><00:48:47.710><c> working</c><00:48:47.740><c> at</c><00:48:48.280><c> as</c><00:48:49.230><c> you</c>

00:48:50.220 --> 00:48:50.230 align:start position:0%
something that we're working at as you
 

00:48:50.230 --> 00:48:52.410 align:start position:0%
something that we're working at as you
can<00:48:50.410><c> see</c><00:48:50.650><c> though</c><00:48:50.950><c> the</c><00:48:51.310><c> the</c><00:48:51.850><c> reason</c><00:48:52.240><c> we're</c>

00:48:52.410 --> 00:48:52.420 align:start position:0%
can see though the the reason we're
 

00:48:52.420 --> 00:48:54.660 align:start position:0%
can see though the the reason we're
excited<00:48:52.810><c> is</c><00:48:53.230><c> because</c><00:48:53.260><c> this</c><00:48:53.980><c> can</c><00:48:54.220><c> really</c><00:48:54.400><c> offer</c>

00:48:54.660 --> 00:48:54.670 align:start position:0%
excited is because this can really offer
 

00:48:54.670 --> 00:48:56.880 align:start position:0%
excited is because this can really offer
some<00:48:55.060><c> speed</c><00:48:55.390><c> ups</c><00:48:55.600><c> and</c><00:48:55.900><c> particularly</c><00:48:56.440><c> if</c><00:48:56.650><c> you</c>

00:48:56.880 --> 00:48:56.890 align:start position:0%
some speed ups and particularly if you
 

00:48:56.890 --> 00:48:59.910 align:start position:0%
some speed ups and particularly if you
haven't<00:48:57.700><c> already</c><00:48:57.820><c> been</c><00:48:58.480><c> using</c><00:48:58.780><c> the</c><00:48:59.470><c> altivec</c>

00:48:59.910 --> 00:48:59.920 align:start position:0%
haven't already been using the altivec
 

00:48:59.920 --> 00:49:03.240 align:start position:0%
haven't already been using the altivec
processor<00:49:00.550><c> on</c><00:49:01.270><c> your</c><00:49:01.300><c> system</c><00:49:02.109><c> is</c><00:49:02.350><c> sitting</c>

00:49:03.240 --> 00:49:03.250 align:start position:0%
processor on your system is sitting
 

00:49:03.250 --> 00:49:06.180 align:start position:0%
processor on your system is sitting
there<00:49:03.430><c> just</c><00:49:03.700><c> wasting</c><00:49:04.210><c> away</c><00:49:04.330><c> and</c><00:49:04.830><c> you</c><00:49:05.830><c> can</c><00:49:06.040><c> get</c>

00:49:06.180 --> 00:49:06.190 align:start position:0%
there just wasting away and you can get
 

00:49:06.190 --> 00:49:09.900 align:start position:0%
there just wasting away and you can get
some<00:49:06.340><c> real</c><00:49:06.520><c> performance</c><00:49:06.730><c> out</c><00:49:07.330><c> of</c><00:49:07.359><c> it</c><00:49:08.760><c> so</c><00:49:09.760><c> the</c>

00:49:09.900 --> 00:49:09.910 align:start position:0%
some real performance out of it so the
 

00:49:09.910 --> 00:49:14.550 align:start position:0%
some real performance out of it so the
operation<00:49:10.660><c> here</c><00:49:11.080><c> includes</c><00:49:12.840><c> the</c><00:49:13.840><c> enabling</c><00:49:14.380><c> of</c>

00:49:14.550 --> 00:49:14.560 align:start position:0%
operation here includes the enabling of
 

00:49:14.560 --> 00:49:17.670 align:start position:0%
operation here includes the enabling of
a<00:49:15.130><c> couple</c><00:49:15.490><c> of</c><00:49:15.609><c> options</c><00:49:15.820><c> I</c><00:49:16.330><c> believe</c><00:49:16.960><c> that</c><00:49:16.990><c> in</c><00:49:17.380><c> an</c>

00:49:17.670 --> 00:49:17.680 align:start position:0%
a couple of options I believe that in an
 

00:49:17.680 --> 00:49:20.970 align:start position:0%
a couple of options I believe that in an
Xcode<00:49:18.220><c> today</c><00:49:18.640><c> there's</c><00:49:18.940><c> actually</c><00:49:19.480><c> a</c><00:49:19.980><c> option</c>

00:49:20.970 --> 00:49:20.980 align:start position:0%
Xcode today there's actually a option
 

00:49:20.980 --> 00:49:23.010 align:start position:0%
Xcode today there's actually a option
for<00:49:21.160><c> auto</c><00:49:21.340><c> vectorization</c><00:49:21.940><c> that</c><00:49:22.510><c> will</c><00:49:22.660><c> do</c><00:49:22.780><c> that</c>

00:49:23.010 --> 00:49:23.020 align:start position:0%
for auto vectorization that will do that
 

00:49:23.020 --> 00:49:30.030 align:start position:0%
for auto vectorization that will do that
for<00:49:23.050><c> you</c><00:49:23.380><c> and</c><00:49:24.810><c> enable</c><00:49:25.810><c> the</c><00:49:26.260><c> process</c><00:49:28.800><c> so</c><00:49:29.800><c> if</c>

00:49:30.030 --> 00:49:30.040 align:start position:0%
for you and enable the process so if
 

00:49:30.040 --> 00:49:32.070 align:start position:0%
for you and enable the process so if
you're<00:49:30.190><c> looking</c><00:49:30.460><c> for</c><00:49:30.490><c> more</c><00:49:30.790><c> information</c><00:49:31.510><c> you</c>

00:49:32.070 --> 00:49:32.080 align:start position:0%
you're looking for more information you
 

00:49:32.080 --> 00:49:35.730 align:start position:0%
you're looking for more information you
can<00:49:33.040><c> contact</c><00:49:33.280><c> mark</c><00:49:33.820><c> toes</c><00:49:34.119><c> are</c><00:49:34.740><c> Matthew</c>

00:49:35.730 --> 00:49:35.740 align:start position:0%
can contact mark toes are Matthew
 

00:49:35.740 --> 00:49:40.970 align:start position:0%
can contact mark toes are Matthew
Formica<00:49:36.520><c> and</c><00:49:36.820><c> Mark</c><00:49:37.590><c> you</c><00:49:38.590><c> want</c><00:49:38.770><c> to</c><00:49:38.859><c> come</c><00:49:39.010><c> up</c><00:49:39.160><c> and</c>

00:49:40.970 --> 00:49:40.980 align:start position:0%
Formica and Mark you want to come up and
 

00:49:40.980 --> 00:49:44.280 align:start position:0%
Formica and Mark you want to come up and
so<00:49:41.980><c> to</c><00:49:42.040><c> add</c><00:49:43.000><c> to</c><00:49:43.240><c> that</c><00:49:43.270><c> the</c><00:49:43.570><c> reference</c><00:49:43.869><c> library</c>

00:49:44.280 --> 00:49:44.290 align:start position:0%
so to add to that the reference library
 

00:49:44.290 --> 00:49:46.710 align:start position:0%
so to add to that the reference library
some<00:49:44.500><c> documentation</c><00:49:45.040><c> that's</c><00:49:45.310><c> on</c><00:49:45.720><c> apples</c>

00:49:46.710 --> 00:49:46.720 align:start position:0%
some documentation that's on apples
 

00:49:46.720 --> 00:49:49.410 align:start position:0%
some documentation that's on apples
developer<00:49:46.930><c> website</c><00:49:47.609><c> some</c><00:49:48.609><c> tech</c><00:49:48.850><c> notes</c><00:49:49.060><c> that</c>

00:49:49.410 --> 00:49:49.420 align:start position:0%
developer website some tech notes that
 

00:49:49.420 --> 00:49:51.870 align:start position:0%
developer website some tech notes that
are<00:49:49.450><c> written</c><00:49:49.750><c> that</c><00:49:50.710><c> were</c><00:49:50.980><c> posted</c><00:49:51.190><c> since</c><00:49:51.700><c> last</c>

00:49:51.870 --> 00:49:51.880 align:start position:0%
are written that were posted since last
 

00:49:51.880 --> 00:49:53.940 align:start position:0%
are written that were posted since last
developers<00:49:52.869><c> conference</c><00:49:53.080><c> with</c><00:49:53.590><c> a</c><00:49:53.619><c> lot</c><00:49:53.920><c> of</c>

00:49:53.940 --> 00:49:53.950 align:start position:0%
developers conference with a lot of
 

00:49:53.950 --> 00:49:55.330 align:start position:0%
developers conference with a lot of
information<00:49:54.580><c> will</c><00:49:54.790><c> have</c><00:49:54.970><c> a</c>

00:49:55.330 --> 00:49:55.340 align:start position:0%
information will have a
 

00:49:55.340 --> 00:49:57.310 align:start position:0%
information will have a
George<00:49:56.060><c> Warner</c><00:49:56.360><c> up</c><00:49:56.510><c> here</c><00:49:56.720><c> in</c><00:49:56.780><c> a</c><00:49:56.840><c> few</c><00:49:56.960><c> seconds</c>

00:49:57.310 --> 00:49:57.320 align:start position:0%
George Warner up here in a few seconds
 

00:49:57.320 --> 00:50:00.010 align:start position:0%
George Warner up here in a few seconds
with<00:49:57.530><c> the</c><00:49:57.650><c> QA</c><00:49:58.160><c> who</c><00:49:58.850><c> participated</c><00:49:59.570><c> and</c><00:49:59.750><c> writing</c>

00:50:00.010 --> 00:50:00.020 align:start position:0%
with the QA who participated and writing
 

00:50:00.020 --> 00:50:02.290 align:start position:0%
with the QA who participated and writing
some<00:50:00.260><c> of</c><00:50:00.350><c> that</c><00:50:00.440><c> technical</c><00:50:01.370><c> documentation</c><00:50:01.880><c> a</c>

00:50:02.290 --> 00:50:02.300 align:start position:0%
some of that technical documentation a
 

00:50:02.300 --> 00:50:04.030 align:start position:0%
some of that technical documentation a
couple<00:50:03.020><c> of</c><00:50:03.080><c> takeaways</c><00:50:03.290><c> I</c><00:50:03.680><c> want</c><00:50:03.830><c> to</c><00:50:03.890><c> make</c><00:50:04.010><c> sure</c>

00:50:04.030 --> 00:50:04.040 align:start position:0%
couple of takeaways I want to make sure
 

00:50:04.040 --> 00:50:07.900 align:start position:0%
couple of takeaways I want to make sure
you<00:50:04.370><c> go</c><00:50:04.550><c> away</c><00:50:04.760><c> with</c><00:50:04.970><c> this</c><00:50:05.360><c> morning</c><00:50:06.820><c> you</c><00:50:07.820><c> know</c>

00:50:07.900 --> 00:50:07.910 align:start position:0%
you go away with this morning you know
 

00:50:07.910 --> 00:50:09.820 align:start position:0%
you go away with this morning you know
it's<00:50:08.300><c> been</c><00:50:08.510><c> a</c><00:50:08.570><c> year</c><00:50:08.660><c> since</c><00:50:08.930><c> we</c><00:50:09.290><c> introduced</c><00:50:09.650><c> the</c>

00:50:09.820 --> 00:50:09.830 align:start position:0%
it's been a year since we introduced the
 

00:50:09.830 --> 00:50:12.520 align:start position:0%
it's been a year since we introduced the
PowerPC<00:50:10.580><c> chip</c><00:50:10.610><c> as</c><00:50:10.910><c> I</c><00:50:11.000><c> said</c><00:50:11.210><c> earlier</c><00:50:11.470><c> so</c><00:50:12.470><c> you</c>

00:50:12.520 --> 00:50:12.530 align:start position:0%
PowerPC chip as I said earlier so you
 

00:50:12.530 --> 00:50:15.250 align:start position:0%
PowerPC chip as I said earlier so you
should<00:50:12.860><c> be</c><00:50:13.010><c> looking</c><00:50:13.460><c> at</c><00:50:13.760><c> transitioning</c><00:50:14.450><c> your</c>

00:50:15.250 --> 00:50:15.260 align:start position:0%
should be looking at transitioning your
 

00:50:15.260 --> 00:50:17.680 align:start position:0%
should be looking at transitioning your
code<00:50:15.560><c> to</c><00:50:15.590><c> the</c><00:50:16.160><c> g5</c><00:50:16.760><c> you</c><00:50:17.060><c> should</c><00:50:17.210><c> be</c><00:50:17.330><c> looking</c><00:50:17.570><c> at</c>

00:50:17.680 --> 00:50:17.690 align:start position:0%
code to the g5 you should be looking at
 

00:50:17.690 --> 00:50:20.080 align:start position:0%
code to the g5 you should be looking at
optimizing<00:50:18.260><c> the</c><00:50:18.350><c> code</c><00:50:18.560><c> and</c><00:50:19.430><c> making</c><00:50:19.760><c> sure</c><00:50:19.910><c> that</c>

00:50:20.080 --> 00:50:20.090 align:start position:0%
optimizing the code and making sure that
 

00:50:20.090 --> 00:50:22.900 align:start position:0%
optimizing the code and making sure that
it<00:50:20.210><c> performs</c><00:50:20.540><c> that</c><00:50:20.810><c> its</c><00:50:20.990><c> best</c><00:50:21.910><c> optimization</c>

00:50:22.900 --> 00:50:22.910 align:start position:0%
it performs that its best optimization
 

00:50:22.910 --> 00:50:25.600 align:start position:0%
it performs that its best optimization
is<00:50:23.060><c> a</c><00:50:23.350><c> skill</c><00:50:24.350><c> it</c><00:50:24.740><c> is</c><00:50:24.980><c> not</c><00:50:25.160><c> something</c><00:50:25.370><c> that</c>

00:50:25.600 --> 00:50:25.610 align:start position:0%
is a skill it is not something that
 

00:50:25.610 --> 00:50:27.880 align:start position:0%
is a skill it is not something that
comes<00:50:25.730><c> for</c><00:50:25.970><c> free</c><00:50:26.000><c> all</c><00:50:26.750><c> those</c><00:50:26.960><c> tools</c><00:50:27.530><c> that</c><00:50:27.770><c> you</c>

00:50:27.880 --> 00:50:27.890 align:start position:0%
comes for free all those tools that you
 

00:50:27.890 --> 00:50:29.890 align:start position:0%
comes for free all those tools that you
heard<00:50:28.070><c> about</c><00:50:28.190><c> today</c><00:50:28.430><c> and</c><00:50:28.760><c> the</c><00:50:29.300><c> compilers</c><00:50:29.720><c> in</c>

00:50:29.890 --> 00:50:29.900 align:start position:0%
heard about today and the compilers in
 

00:50:29.900 --> 00:50:33.610 align:start position:0%
heard about today and the compilers in
both<00:50:30.080><c> Apple</c><00:50:31.010><c> compilers</c><00:50:31.490><c> as</c><00:50:31.670><c> well</c><00:50:31.850><c> as</c><00:50:32.200><c> IBM</c><00:50:33.200><c> will</c>

00:50:33.610 --> 00:50:33.620 align:start position:0%
both Apple compilers as well as IBM will
 

00:50:33.620 --> 00:50:35.320 align:start position:0%
both Apple compilers as well as IBM will
provide<00:50:33.950><c> a</c><00:50:33.980><c> lot</c><00:50:34.190><c> of</c><00:50:34.220><c> assistance</c><00:50:34.760><c> but</c><00:50:35.030><c> there</c><00:50:35.210><c> is</c>

00:50:35.320 --> 00:50:35.330 align:start position:0%
provide a lot of assistance but there is
 

00:50:35.330 --> 00:50:36.940 align:start position:0%
provide a lot of assistance but there is
some<00:50:35.570><c> times</c><00:50:35.750><c> when</c><00:50:36.050><c> you</c><00:50:36.170><c> need</c><00:50:36.200><c> to</c><00:50:36.500><c> get</c><00:50:36.770><c> in</c><00:50:36.920><c> there</c>

00:50:36.940 --> 00:50:36.950 align:start position:0%
some times when you need to get in there
 

00:50:36.950 --> 00:50:38.410 align:start position:0%
some times when you need to get in there
and<00:50:37.100><c> roll</c><00:50:37.400><c> up</c><00:50:37.490><c> your</c><00:50:37.580><c> sleeves</c><00:50:37.880><c> and</c><00:50:37.970><c> do</c><00:50:38.120><c> the</c><00:50:38.150><c> hard</c>

00:50:38.410 --> 00:50:38.420 align:start position:0%
and roll up your sleeves and do the hard
 

00:50:38.420 --> 00:50:41.680 align:start position:0%
and roll up your sleeves and do the hard
work<00:50:38.680><c> for</c><00:50:39.680><c> that</c><00:50:39.860><c> we</c><00:50:40.070><c> have</c><00:50:40.690><c> optimization</c>

00:50:41.680 --> 00:50:41.690 align:start position:0%
work for that we have optimization
 

00:50:41.690 --> 00:50:44.590 align:start position:0%
work for that we have optimization
workshops<00:50:42.200><c> at</c><00:50:42.470><c> Apple</c><00:50:43.070><c> for</c><00:50:43.940><c> the</c><00:50:44.030><c> past</c><00:50:44.240><c> year</c>

00:50:44.590 --> 00:50:44.600 align:start position:0%
workshops at Apple for the past year
 

00:50:44.600 --> 00:50:48.130 align:start position:0%
workshops at Apple for the past year
we've<00:50:45.470><c> had</c><00:50:45.500><c> over</c><00:50:45.820><c> eight</c><00:50:46.820><c> workshops</c><00:50:47.810><c> one</c><00:50:48.110><c> a</c>

00:50:48.130 --> 00:50:48.140 align:start position:0%
we've had over eight workshops one a
 

00:50:48.140 --> 00:50:51.100 align:start position:0%
we've had over eight workshops one a
month<00:50:48.410><c> essentially</c><00:50:49.510><c> helping</c><00:50:50.510><c> developers</c>

00:50:51.100 --> 00:50:51.110 align:start position:0%
month essentially helping developers
 

00:50:51.110 --> 00:50:53.080 align:start position:0%
month essentially helping developers
like<00:50:51.350><c> yourselves</c><00:50:51.440><c> to</c><00:50:52.220><c> work</c><00:50:52.460><c> through</c><00:50:52.880><c> the</c>

00:50:53.080 --> 00:50:53.090 align:start position:0%
like yourselves to work through the
 

00:50:53.090 --> 00:50:55.270 align:start position:0%
like yourselves to work through the
problems<00:50:53.480><c> of</c><00:50:53.600><c> optimizing</c><00:50:54.230><c> your</c><00:50:54.320><c> code</c><00:50:54.560><c> so</c><00:50:55.220><c> i</c>

00:50:55.270 --> 00:50:55.280 align:start position:0%
problems of optimizing your code so i
 

00:50:55.280 --> 00:50:57.160 align:start position:0%
problems of optimizing your code so i
encourage<00:50:55.430><c> you</c><00:50:55.700><c> to</c><00:50:55.790><c> participate</c><00:50:56.480><c> in</c><00:50:56.930><c> those</c>

00:50:57.160 --> 00:50:57.170 align:start position:0%
encourage you to participate in those
 

00:50:57.170 --> 00:50:59.380 align:start position:0%
encourage you to participate in those
workshops<00:50:57.640><c> they're</c><00:50:58.640><c> posted</c><00:50:59.120><c> through</c><00:50:59.300><c> the</c>

00:50:59.380 --> 00:50:59.390 align:start position:0%
workshops they're posted through the
 

00:50:59.390 --> 00:51:02.560 align:start position:0%
workshops they're posted through the
Apple<00:51:00.110><c> Developer</c><00:51:00.290><c> connection</c><00:51:00.920><c> emails</c><00:51:01.570><c> and</c>

00:51:02.560 --> 00:51:02.570 align:start position:0%
Apple Developer connection emails and
 

00:51:02.570 --> 00:51:04.600 align:start position:0%
Apple Developer connection emails and
they'll<00:51:03.110><c> be</c><00:51:03.200><c> continuing</c><00:51:03.980><c> on</c><00:51:04.130><c> throughout</c><00:51:04.460><c> the</c>

00:51:04.600 --> 00:51:04.610 align:start position:0%
they'll be continuing on throughout the
 

00:51:04.610 --> 00:51:06.250 align:start position:0%
they'll be continuing on throughout the
rest<00:51:04.790><c> of</c><00:51:04.880><c> the</c><00:51:04.970><c> year</c><00:51:05.120><c> I'll</c><00:51:05.390><c> have</c><00:51:05.630><c> the</c><00:51:05.840><c> next</c><00:51:06.080><c> one</c>

00:51:06.250 --> 00:51:06.260 align:start position:0%
rest of the year I'll have the next one
 

00:51:06.260 --> 00:51:09.310 align:start position:0%
rest of the year I'll have the next one
starting<00:51:06.770><c> in</c><00:51:06.920><c> August</c><00:51:07.400><c> I</c><00:51:07.790><c> believe</c><00:51:08.330><c> the</c><00:51:08.540><c> first</c>

00:51:09.310 --> 00:51:09.320 align:start position:0%
starting in August I believe the first
 

00:51:09.320 --> 00:51:11.170 align:start position:0%
starting in August I believe the first
or<00:51:09.560><c> second</c><00:51:09.890><c> week</c><00:51:09.980><c> of</c><00:51:10.070><c> august</c><00:51:10.430><c> i</c><00:51:10.640><c> can</c><00:51:11.000><c> remember</c>

00:51:11.170 --> 00:51:11.180 align:start position:0%
or second week of august i can remember
 

00:51:11.180 --> 00:51:15.760 align:start position:0%
or second week of august i can remember
correctly<00:51:13.210><c> the</c><00:51:14.210><c> other</c><00:51:14.360><c> thing</c><00:51:14.570><c> is</c><00:51:14.720><c> that</c><00:51:14.770><c> you</c>

00:51:15.760 --> 00:51:15.770 align:start position:0%
correctly the other thing is that you
 

00:51:15.770 --> 00:51:18.580 align:start position:0%
correctly the other thing is that you
know<00:51:16.240><c> it</c><00:51:17.240><c> does</c><00:51:17.630><c> take</c><00:51:17.840><c> a</c><00:51:17.870><c> lot</c><00:51:18.020><c> of</c><00:51:18.080><c> work</c><00:51:18.260><c> to</c><00:51:18.440><c> do</c>

00:51:18.580 --> 00:51:18.590 align:start position:0%
know it does take a lot of work to do
 

00:51:18.590 --> 00:51:20.890 align:start position:0%
know it does take a lot of work to do
optimization<00:51:19.280><c> work</c><00:51:19.430><c> but</c><00:51:20.420><c> there</c><00:51:20.600><c> are</c><00:51:20.660><c> a</c><00:51:20.690><c> lot</c><00:51:20.870><c> of</c>

00:51:20.890 --> 00:51:20.900 align:start position:0%
optimization work but there are a lot of
 

00:51:20.900 --> 00:51:23.500 align:start position:0%
optimization work but there are a lot of
rewards<00:51:21.140><c> to</c><00:51:21.650><c> it</c><00:51:21.800><c> as</c><00:51:22.010><c> Longet</c><00:51:22.760><c> pointed</c><00:51:23.150><c> out</c><00:51:23.240><c> some</c>

00:51:23.500 --> 00:51:23.510 align:start position:0%
rewards to it as Longet pointed out some
 

00:51:23.510 --> 00:51:26.290 align:start position:0%
rewards to it as Longet pointed out some
of<00:51:23.630><c> the</c><00:51:23.690><c> sample</c><00:51:24.080><c> code</c><00:51:24.940><c> we're</c><00:51:25.940><c> here</c><00:51:26.120><c> to</c><00:51:26.240><c> help</c>

00:51:26.290 --> 00:51:26.300 align:start position:0%
of the sample code we're here to help
 

00:51:26.300 --> 00:51:29.470 align:start position:0%
of the sample code we're here to help
you<00:51:26.600><c> through</c><00:51:26.840><c> those</c><00:51:27.310><c> problems</c><00:51:28.310><c> so</c><00:51:28.640><c> as</c><00:51:29.060><c> Steve</c>

00:51:29.470 --> 00:51:29.480 align:start position:0%
you through those problems so as Steve
 

00:51:29.480 --> 00:51:31.690 align:start position:0%
you through those problems so as Steve
mentioned<00:51:29.620><c> from</c><00:51:30.620><c> IBM</c><00:51:31.100><c> there</c><00:51:31.460><c> is</c><00:51:31.580><c> the</c>

00:51:31.690 --> 00:51:31.700 align:start position:0%
mentioned from IBM there is the
 

00:51:31.700 --> 00:51:34.450 align:start position:0%
mentioned from IBM there is the
optimization<00:51:32.300><c> lap</c><00:51:32.450><c> here</c><00:51:32.750><c> all</c><00:51:33.470><c> week</c><00:51:33.770><c> please</c>

00:51:34.450 --> 00:51:34.460 align:start position:0%
optimization lap here all week please
 

00:51:34.460 --> 00:51:36.820 align:start position:0%
optimization lap here all week please
take<00:51:34.700><c> advantage</c><00:51:34.820><c> of</c><00:51:35.300><c> those</c><00:51:35.480><c> resources</c><00:51:35.830><c> we're</c>

00:51:36.820 --> 00:51:36.830 align:start position:0%
take advantage of those resources we're
 

00:51:36.830 --> 00:51:38.230 align:start position:0%
take advantage of those resources we're
here<00:51:37.070><c> and</c><00:51:37.250><c> committed</c><00:51:37.550><c> to</c><00:51:37.670><c> helping</c><00:51:37.850><c> you</c><00:51:38.030><c> guys</c>

00:51:38.230 --> 00:51:38.240 align:start position:0%
here and committed to helping you guys
 

00:51:38.240 --> 00:51:40.300 align:start position:0%
here and committed to helping you guys
write<00:51:38.600><c> the</c><00:51:38.750><c> best</c><00:51:38.930><c> code</c><00:51:39.260><c> for</c><00:51:39.530><c> this</c><00:51:39.620><c> platform</c><00:51:39.890><c> we</c>

00:51:40.300 --> 00:51:40.310 align:start position:0%
write the best code for this platform we
 

00:51:40.310 --> 00:51:43.030 align:start position:0%
write the best code for this platform we
feel<00:51:40.550><c> that</c><00:51:40.580><c> the</c><00:51:41.240><c> g5</c><00:51:41.840><c> has</c><00:51:42.080><c> a</c><00:51:42.110><c> lot</c><00:51:42.440><c> to</c><00:51:42.620><c> offer</c><00:51:42.740><c> it</c>

00:51:43.030 --> 00:51:43.040 align:start position:0%
feel that the g5 has a lot to offer it
 

00:51:43.040 --> 00:51:46.240 align:start position:0%
feel that the g5 has a lot to offer it
has<00:51:43.160><c> a</c><00:51:43.190><c> lot</c><00:51:43.640><c> of</c><00:51:43.670><c> headroom</c><00:51:43.970><c> to</c><00:51:44.390><c> grow</c><00:51:45.040><c> the</c><00:51:46.040><c> best</c>

00:51:46.240 --> 00:51:46.250 align:start position:0%
has a lot of headroom to grow the best
 

00:51:46.250 --> 00:51:48.550 align:start position:0%
has a lot of headroom to grow the best
applications<00:51:47.090><c> on</c><00:51:47.360><c> the</c><00:51:47.660><c> platform</c><00:51:48.170><c> or</c><00:51:48.350><c> those</c>

00:51:48.550 --> 00:51:48.560 align:start position:0%
applications on the platform or those
 

00:51:48.560 --> 00:51:50.770 align:start position:0%
applications on the platform or those
that<00:51:48.590><c> take</c><00:51:48.890><c> advantage</c><00:51:49.040><c> of</c><00:51:49.460><c> all</c><00:51:49.610><c> the</c><00:51:49.820><c> abilities</c>

00:51:50.770 --> 00:51:50.780 align:start position:0%
that take advantage of all the abilities
 

00:51:50.780 --> 00:51:52.900 align:start position:0%
that take advantage of all the abilities
that<00:51:50.810><c> the</c><00:51:51.200><c> hardware</c><00:51:51.740><c> has</c><00:51:51.950><c> to</c><00:51:52.160><c> offer</c><00:51:52.310><c> so</c><00:51:52.670><c> please</c>

00:51:52.900 --> 00:51:52.910 align:start position:0%
that the hardware has to offer so please
 

00:51:52.910 --> 00:51:54.880 align:start position:0%
that the hardware has to offer so please
again<00:51:53.060><c> make</c><00:51:54.020><c> sure</c><00:51:54.050><c> that</c><00:51:54.350><c> that's</c><00:51:54.440><c> something</c><00:51:54.710><c> in</c>

00:51:54.880 --> 00:51:54.890 align:start position:0%
again make sure that that's something in
 

00:51:54.890 --> 00:51:56.530 align:start position:0%
again make sure that that's something in
mind<00:51:55.100><c> when</c><00:51:55.370><c> you're</c><00:51:55.490><c> looking</c><00:51:56.060><c> at</c><00:51:56.180><c> revenue</c>

00:51:56.530 --> 00:51:56.540 align:start position:0%
mind when you're looking at revenue
 

00:51:56.540 --> 00:51:59.740 align:start position:0%
mind when you're looking at revenue
application<00:51:57.320><c> writing</c><00:51:58.130><c> a</c><00:51:58.220><c> new</c><00:51:58.370><c> application</c><00:51:58.750><c> or</c>

00:51:59.740 --> 00:51:59.750 align:start position:0%
application writing a new application or
 

00:51:59.750 --> 00:52:02.230 align:start position:0%
application writing a new application or
just<00:52:00.560><c> you</c><00:52:00.800><c> know</c><00:52:00.890><c> taking</c><00:52:01.490><c> the</c><00:52:01.640><c> time</c><00:52:01.820><c> to</c><00:52:02.030><c> take</c><00:52:02.210><c> a</c>

00:52:02.230 --> 00:52:02.240 align:start position:0%
just you know taking the time to take a
 

00:52:02.240 --> 00:52:04.430 align:start position:0%
just you know taking the time to take a
look<00:52:02.510><c> at</c><00:52:02.810><c> what</c><00:52:03.050><c> you've</c><00:52:03.170><c> done</c><00:52:03.200><c> in</c><00:52:03.500><c> the</c><00:52:03.530><c> past</c><00:52:03.590><c> and</c>

00:52:04.430 --> 00:52:04.440 align:start position:0%
look at what you've done in the past and
 

00:52:04.440 --> 00:52:07.790 align:start position:0%
look at what you've done in the past and
may<00:52:04.500><c> be</c><00:52:04.589><c> improved</c><00:52:04.950><c> upon</c><00:52:05.250><c> that</c>

