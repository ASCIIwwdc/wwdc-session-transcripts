WEBVTT
Kind: captions
Language: en

00:00:11.760 --> 00:00:16.980 align:start position:0%
 
pair<00:00:12.760><c> of</c><00:00:12.850><c> tools</c><00:00:15.450><c> this</c><00:00:16.450><c> is</c><00:00:16.660><c> what</c><00:00:16.810><c> we're</c><00:00:16.900><c> gonna</c>

00:00:16.980 --> 00:00:16.990 align:start position:0%
pair of tools this is what we're gonna
 

00:00:16.990 --> 00:00:20.940 align:start position:0%
pair of tools this is what we're gonna
explore<00:00:17.380><c> today</c><00:00:18.840><c> I'd</c><00:00:19.840><c> like</c><00:00:19.900><c> to</c><00:00:20.230><c> give</c><00:00:20.439><c> you</c><00:00:20.619><c> some</c>

00:00:20.940 --> 00:00:20.950 align:start position:0%
explore today I'd like to give you some
 

00:00:20.950 --> 00:00:23.130 align:start position:0%
explore today I'd like to give you some
context<00:00:21.759><c> for</c><00:00:21.790><c> this</c><00:00:22.060><c> language</c><00:00:22.330><c> because</c><00:00:22.869><c> I</c><00:00:22.990><c> feel</c>

00:00:23.130 --> 00:00:23.140 align:start position:0%
context for this language because I feel
 

00:00:23.140 --> 00:00:25.470 align:start position:0%
context for this language because I feel
it's<00:00:23.320><c> important</c><00:00:23.860><c> for</c><00:00:24.580><c> understanding</c><00:00:24.669><c> the</c>

00:00:25.470 --> 00:00:25.480 align:start position:0%
it's important for understanding the
 

00:00:25.480 --> 00:00:27.240 align:start position:0%
it's important for understanding the
trick<00:00:25.689><c> the</c><00:00:25.840><c> design</c><00:00:26.500><c> decisions</c><00:00:27.040><c> the</c>

00:00:27.240 --> 00:00:27.250 align:start position:0%
trick the design decisions the
 

00:00:27.250 --> 00:00:30.359 align:start position:0%
trick the design decisions the
trade-offs<00:00:27.669><c> we</c><00:00:27.849><c> made</c><00:00:28.119><c> and</c><00:00:28.390><c> in</c><00:00:29.169><c> fact</c><00:00:29.410><c> the</c><00:00:30.070><c> roots</c>

00:00:30.359 --> 00:00:30.369 align:start position:0%
trade-offs we made and in fact the roots
 

00:00:30.369 --> 00:00:33.960 align:start position:0%
trade-offs we made and in fact the roots
of<00:00:30.669><c> both</c><00:00:31.239><c> of</c><00:00:31.450><c> these</c><00:00:31.540><c> language</c><00:00:32.050><c> languages</c><00:00:32.970><c> if</c>

00:00:33.960 --> 00:00:33.970 align:start position:0%
of both of these language languages if
 

00:00:33.970 --> 00:00:36.150 align:start position:0%
of both of these language languages if
you<00:00:34.180><c> look</c><00:00:34.450><c> at</c><00:00:34.600><c> when</c><00:00:34.780><c> C++</c><00:00:35.500><c> and</c><00:00:35.710><c> Objective</c><00:00:36.130><c> C</c>

00:00:36.150 --> 00:00:36.160 align:start position:0%
you look at when C++ and Objective C
 

00:00:36.160 --> 00:00:39.900 align:start position:0%
you look at when C++ and Objective C
were<00:00:36.730><c> born</c><00:00:37.120><c> they</c><00:00:37.780><c> were</c><00:00:37.809><c> both</c><00:00:38.440><c> born</c><00:00:38.770><c> in</c><00:00:39.070><c> the</c><00:00:39.219><c> mid</c>

00:00:39.900 --> 00:00:39.910 align:start position:0%
were born they were both born in the mid
 

00:00:39.910 --> 00:00:44.130 align:start position:0%
were born they were both born in the mid
80s<00:00:40.239><c> roughly</c><00:00:41.050><c> speaking</c><00:00:41.260><c> and</c><00:00:42.899><c> C++</c><00:00:43.899><c> drew</c>

00:00:44.130 --> 00:00:44.140 align:start position:0%
80s roughly speaking and C++ drew
 

00:00:44.140 --> 00:00:46.619 align:start position:0%
80s roughly speaking and C++ drew
inspiration<00:00:44.379><c> from</c><00:00:44.949><c> Simula</c><00:00:45.429><c> and</c><00:00:45.670><c> objective-c</c>

00:00:46.619 --> 00:00:46.629 align:start position:0%
inspiration from Simula and objective-c
 

00:00:46.629 --> 00:00:48.529 align:start position:0%
inspiration from Simula and objective-c
drew<00:00:46.929><c> inspiration</c><00:00:47.109><c> from</c><00:00:47.530><c> small</c><00:00:47.980><c> talk</c><00:00:48.219><c> and</c>

00:00:48.529 --> 00:00:48.539 align:start position:0%
drew inspiration from small talk and
 

00:00:48.539 --> 00:00:51.389 align:start position:0%
drew inspiration from small talk and
some<00:00:49.539><c> of</c><00:00:49.660><c> the</c><00:00:49.749><c> terminology</c><00:00:50.039><c> features</c><00:00:51.039><c> and</c>

00:00:51.389 --> 00:00:51.399 align:start position:0%
some of the terminology features and
 

00:00:51.399 --> 00:00:53.400 align:start position:0%
some of the terminology features and
mindsets<00:00:51.969><c> and</c><00:00:52.269><c> in</c><00:00:52.539><c> fact</c><00:00:52.719><c> culture</c><00:00:53.230><c> that</c>

00:00:53.400 --> 00:00:53.410 align:start position:0%
mindsets and in fact culture that
 

00:00:53.410 --> 00:00:55.619 align:start position:0%
mindsets and in fact culture that
surround<00:00:53.769><c> these</c><00:00:53.920><c> languages</c><00:00:54.550><c> I</c><00:00:54.760><c> hope</c><00:00:55.480><c> to</c>

00:00:55.619 --> 00:00:55.629 align:start position:0%
surround these languages I hope to
 

00:00:55.629 --> 00:00:58.049 align:start position:0%
surround these languages I hope to
expose<00:00:56.109><c> to</c><00:00:56.379><c> give</c><00:00:56.530><c> you</c><00:00:56.620><c> some</c><00:00:56.859><c> sense</c><00:00:57.159><c> for</c><00:00:57.460><c> why</c>

00:00:58.049 --> 00:00:58.059 align:start position:0%
expose to give you some sense for why
 

00:00:58.059 --> 00:01:00.060 align:start position:0%
expose to give you some sense for why
one<00:00:58.329><c> language</c><00:00:58.719><c> works</c><00:00:58.929><c> one</c><00:00:59.140><c> way</c><00:00:59.170><c> another</c>

00:01:00.060 --> 00:01:00.070 align:start position:0%
one language works one way another
 

00:01:00.070 --> 00:01:01.709 align:start position:0%
one language works one way another
language<00:01:00.309><c> solves</c><00:01:01.149><c> a</c><00:01:01.210><c> different</c><00:01:01.510><c> set</c><00:01:01.690><c> of</c>

00:01:01.709 --> 00:01:01.719 align:start position:0%
language solves a different set of
 

00:01:01.719 --> 00:01:03.930 align:start position:0%
language solves a different set of
problems<00:01:01.989><c> and</c><00:01:02.530><c> why</c><00:01:02.679><c> the</c><00:01:03.069><c> combination</c><00:01:03.699><c> of</c><00:01:03.760><c> them</c>

00:01:03.930 --> 00:01:03.940 align:start position:0%
problems and why the combination of them
 

00:01:03.940 --> 00:01:11.160 align:start position:0%
problems and why the combination of them
is<00:01:04.150><c> actually</c><00:01:04.390><c> pretty</c><00:01:04.780><c> exciting</c><00:01:05.290><c> I</c><00:01:09.570><c> I</c><00:01:10.570><c> also</c>

00:01:11.160 --> 00:01:11.170 align:start position:0%
is actually pretty exciting I I also
 

00:01:11.170 --> 00:01:13.350 align:start position:0%
is actually pretty exciting I I also
want<00:01:11.530><c> to</c><00:01:11.590><c> give</c><00:01:12.190><c> you</c><00:01:12.280><c> many</c><00:01:12.460><c> examples</c><00:01:12.550><c> because</c>

00:01:13.350 --> 00:01:13.360 align:start position:0%
want to give you many examples because
 

00:01:13.360 --> 00:01:15.720 align:start position:0%
want to give you many examples because
if<00:01:13.720><c> we</c><00:01:13.840><c> just</c><00:01:14.020><c> talk</c><00:01:14.260><c> in</c><00:01:14.440><c> the</c><00:01:14.470><c> abstract</c><00:01:15.130><c> you're</c>

00:01:15.720 --> 00:01:15.730 align:start position:0%
if we just talk in the abstract you're
 

00:01:15.730 --> 00:01:16.890 align:start position:0%
if we just talk in the abstract you're
not<00:01:15.880><c> going</c><00:01:16.000><c> to</c><00:01:16.060><c> get</c><00:01:16.150><c> a</c><00:01:16.210><c> good</c><00:01:16.360><c> feel</c><00:01:16.510><c> for</c><00:01:16.570><c> the</c>

00:01:16.890 --> 00:01:16.900 align:start position:0%
not going to get a good feel for the
 

00:01:16.900 --> 00:01:18.600 align:start position:0%
not going to get a good feel for the
language<00:01:17.110><c> the</c><00:01:17.410><c> best</c><00:01:17.590><c> way</c><00:01:17.770><c> to</c><00:01:17.800><c> learn</c><00:01:18.460><c> the</c>

00:01:18.600 --> 00:01:18.610 align:start position:0%
language the best way to learn the
 

00:01:18.610 --> 00:01:19.950 align:start position:0%
language the best way to learn the
language<00:01:18.640><c> is</c><00:01:19.090><c> through</c><00:01:19.270><c> example</c><00:01:19.720><c> so</c><00:01:19.870><c> the</c>

00:01:19.950 --> 00:01:19.960 align:start position:0%
language is through example so the
 

00:01:19.960 --> 00:01:21.840 align:start position:0%
language is through example so the
examples<00:01:20.440><c> I'm</c><00:01:20.560><c> going</c><00:01:20.590><c> to</c><00:01:20.740><c> be</c><00:01:20.860><c> giving</c><00:01:21.010><c> are</c><00:01:21.430><c> from</c>

00:01:21.840 --> 00:01:21.850 align:start position:0%
examples I'm going to be giving are from
 

00:01:21.850 --> 00:01:25.470 align:start position:0%
examples I'm going to be giving are from
WebKit<00:01:22.710><c> Safari</c><00:01:23.710><c> there</c><00:01:24.310><c> are</c><00:01:24.580><c> some</c><00:01:24.970><c> examples</c>

00:01:25.470 --> 00:01:25.480 align:start position:0%
WebKit Safari there are some examples
 

00:01:25.480 --> 00:01:26.970 align:start position:0%
WebKit Safari there are some examples
from<00:01:25.600><c> the</c><00:01:25.780><c> Celestra</c><00:01:26.140><c> application</c><00:01:26.800><c> that</c>

00:01:26.970 --> 00:01:26.980 align:start position:0%
from the Celestra application that
 

00:01:26.980 --> 00:01:28.890 align:start position:0%
from the Celestra application that
you've<00:01:27.100><c> seen</c><00:01:27.370><c> there</c><00:01:27.850><c> are</c><00:01:27.880><c> some</c><00:01:28.090><c> examples</c><00:01:28.630><c> from</c>

00:01:28.890 --> 00:01:28.900 align:start position:0%
you've seen there are some examples from
 

00:01:28.900 --> 00:01:32.010 align:start position:0%
you've seen there are some examples from
our<00:01:29.740><c> developer</c><00:01:30.460><c> examples</c><00:01:30.970><c> so</c><00:01:31.120><c> if</c><00:01:31.270><c> you</c><00:01:31.450><c> want</c><00:01:31.960><c> to</c>

00:01:32.010 --> 00:01:32.020 align:start position:0%
our developer examples so if you want to
 

00:01:32.020 --> 00:01:33.840 align:start position:0%
our developer examples so if you want to
try<00:01:32.260><c> some</c><00:01:32.530><c> of</c><00:01:32.560><c> these</c><00:01:32.740><c> when</c><00:01:33.040><c> you</c><00:01:33.130><c> get</c><00:01:33.280><c> home</c><00:01:33.460><c> you</c>

00:01:33.840 --> 00:01:33.850 align:start position:0%
try some of these when you get home you
 

00:01:33.850 --> 00:01:35.580 align:start position:0%
try some of these when you get home you
can<00:01:34.000><c> go</c><00:01:34.120><c> and</c><00:01:34.300><c> look</c><00:01:34.360><c> at</c><00:01:34.480><c> the</c><00:01:34.630><c> code</c><00:01:34.780><c> that</c><00:01:35.140><c> in</c><00:01:35.380><c> fact</c>

00:01:35.580 --> 00:01:35.590 align:start position:0%
can go and look at the code that in fact
 

00:01:35.590 --> 00:01:37.830 align:start position:0%
can go and look at the code that in fact
we'll<00:01:35.800><c> be</c><00:01:35.920><c> presenting</c><00:01:36.100><c> here</c><00:01:36.550><c> and</c><00:01:36.730><c> and</c><00:01:37.360><c> lastly</c>

00:01:37.830 --> 00:01:37.840 align:start position:0%
we'll be presenting here and and lastly
 

00:01:37.840 --> 00:01:40.590 align:start position:0%
we'll be presenting here and and lastly
I<00:01:37.960><c> want</c><00:01:38.290><c> to</c><00:01:38.350><c> talk</c><00:01:38.410><c> about</c><00:01:38.680><c> some</c><00:01:39.010><c> gotchas</c><00:01:39.510><c> it's</c><00:01:40.510><c> a</c>

00:01:40.590 --> 00:01:40.600 align:start position:0%
I want to talk about some gotchas it's a
 

00:01:40.600 --> 00:01:42.300 align:start position:0%
I want to talk about some gotchas it's a
very<00:01:40.750><c> complex</c><00:01:41.140><c> language</c><00:01:41.590><c> and</c><00:01:41.950><c> there</c><00:01:42.190><c> are</c><00:01:42.280><c> a</c>

00:01:42.300 --> 00:01:42.310 align:start position:0%
very complex language and there are a
 

00:01:42.310 --> 00:01:44.580 align:start position:0%
very complex language and there are a
few<00:01:42.550><c> gotchas</c><00:01:42.940><c> I</c><00:01:43.420><c> don't</c><00:01:44.050><c> think</c><00:01:44.230><c> they</c><00:01:44.290><c> affect</c>

00:01:44.580 --> 00:01:44.590 align:start position:0%
few gotchas I don't think they affect
 

00:01:44.590 --> 00:01:46.410 align:start position:0%
few gotchas I don't think they affect
too<00:01:44.680><c> many</c><00:01:44.830><c> people</c><00:01:45.220><c> but</c><00:01:45.670><c> it's</c><00:01:45.850><c> still</c><00:01:46.060><c> relevant</c>

00:01:46.410 --> 00:01:46.420 align:start position:0%
too many people but it's still relevant
 

00:01:46.420 --> 00:01:48.780 align:start position:0%
too many people but it's still relevant
in<00:01:46.630><c> the</c><00:01:46.780><c> context</c><00:01:47.260><c> of</c><00:01:47.320><c> this</c><00:01:47.470><c> talk</c><00:01:47.710><c> and</c><00:01:47.920><c> lastly</c><00:01:48.760><c> I</c>

00:01:48.780 --> 00:01:48.790 align:start position:0%
in the context of this talk and lastly I
 

00:01:48.790 --> 00:01:50.370 align:start position:0%
in the context of this talk and lastly I
don't<00:01:49.390><c> have</c><00:01:49.480><c> this</c><00:01:49.570><c> on</c><00:01:49.690><c> the</c><00:01:49.780><c> slide</c><00:01:49.960><c> but</c><00:01:50.170><c> I'd</c>

00:01:50.370 --> 00:01:50.380 align:start position:0%
don't have this on the slide but I'd
 

00:01:50.380 --> 00:01:52.320 align:start position:0%
don't have this on the slide but I'd
love<00:01:50.650><c> to</c><00:01:50.710><c> interact</c><00:01:51.460><c> with</c><00:01:51.670><c> you</c><00:01:51.820><c> folks</c><00:01:52.090><c> for</c>

00:01:52.320 --> 00:01:52.330 align:start position:0%
love to interact with you folks for
 

00:01:52.330 --> 00:01:54.390 align:start position:0%
love to interact with you folks for
about<00:01:52.510><c> 15</c><00:01:52.840><c> 20</c><00:01:52.960><c> minutes</c><00:01:53.140><c> so</c><00:01:53.770><c> I'm</c><00:01:53.890><c> hoping</c><00:01:54.280><c> I</c>

00:01:54.390 --> 00:01:54.400 align:start position:0%
about 15 20 minutes so I'm hoping I
 

00:01:54.400 --> 00:01:55.920 align:start position:0%
about 15 20 minutes so I'm hoping I
could<00:01:54.460><c> zoom</c><00:01:54.820><c> through</c><00:01:55.000><c> the</c><00:01:55.120><c> presentation</c><00:01:55.810><c> and</c>

00:01:55.920 --> 00:01:55.930 align:start position:0%
could zoom through the presentation and
 

00:01:55.930 --> 00:01:57.810 align:start position:0%
could zoom through the presentation and
customize<00:01:56.740><c> it</c><00:01:56.770><c> to</c><00:01:57.100><c> what</c><00:01:57.250><c> you</c><00:01:57.280><c> guys</c><00:01:57.490><c> want</c><00:01:57.760><c> to</c>

00:01:57.810 --> 00:01:57.820 align:start position:0%
customize it to what you guys want to
 

00:01:57.820 --> 00:02:02.070 align:start position:0%
customize it to what you guys want to
know<00:01:57.940><c> afterwards</c><00:01:59.910><c> so</c><00:02:00.910><c> to</c><00:02:01.630><c> cut</c><00:02:01.810><c> to</c><00:02:01.840><c> the</c><00:02:02.050><c> chase</c>

00:02:02.070 --> 00:02:02.080 align:start position:0%
know afterwards so to cut to the chase
 

00:02:02.080 --> 00:02:05.340 align:start position:0%
know afterwards so to cut to the chase
why<00:02:02.530><c> why</c><00:02:03.250><c> isn't</c><00:02:03.730><c> cocoa</c><00:02:04.330><c> written</c><00:02:04.600><c> in</c><00:02:04.690><c> C++</c><00:02:05.260><c> we</c>

00:02:05.340 --> 00:02:05.350 align:start position:0%
why why isn't cocoa written in C++ we
 

00:02:05.350 --> 00:02:06.780 align:start position:0%
why why isn't cocoa written in C++ we
wouldn't<00:02:05.680><c> be</c><00:02:05.800><c> here</c><00:02:06.010><c> talking</c><00:02:06.430><c> about</c><00:02:06.520><c> the</c>

00:02:06.780 --> 00:02:06.790 align:start position:0%
wouldn't be here talking about the
 

00:02:06.790 --> 00:02:09.389 align:start position:0%
wouldn't be here talking about the
combined<00:02:07.090><c> languages</c><00:02:07.720><c> if</c><00:02:08.050><c> in</c><00:02:08.500><c> fact</c><00:02:08.709><c> cocoa</c><00:02:09.190><c> was</c>

00:02:09.389 --> 00:02:09.399 align:start position:0%
combined languages if in fact cocoa was
 

00:02:09.399 --> 00:02:12.449 align:start position:0%
combined languages if in fact cocoa was
written<00:02:09.640><c> in</c><00:02:09.819><c> C++</c><00:02:10.509><c> and</c><00:02:10.810><c> the</c><00:02:11.650><c> simple</c><00:02:12.040><c> answer</c><00:02:12.430><c> is</c>

00:02:12.449 --> 00:02:12.459 align:start position:0%
written in C++ and the simple answer is
 

00:02:12.459 --> 00:02:15.630 align:start position:0%
written in C++ and the simple answer is
it<00:02:12.849><c> doesn't</c><00:02:13.180><c> meet</c><00:02:13.330><c> Coco's</c><00:02:13.720><c> needs</c><00:02:14.010><c> so</c><00:02:15.010><c> before</c><00:02:15.610><c> I</c>

00:02:15.630 --> 00:02:15.640 align:start position:0%
it doesn't meet Coco's needs so before I
 

00:02:15.640 --> 00:02:17.880 align:start position:0%
it doesn't meet Coco's needs so before I
explain<00:02:16.180><c> why</c><00:02:16.480><c> it</c><00:02:16.540><c> doesn't</c><00:02:16.900><c> meet</c><00:02:17.200><c> Coco's</c><00:02:17.590><c> needs</c>

00:02:17.880 --> 00:02:17.890 align:start position:0%
explain why it doesn't meet Coco's needs
 

00:02:17.890 --> 00:02:20.039 align:start position:0%
explain why it doesn't meet Coco's needs
I'm<00:02:18.099><c> going</c><00:02:18.280><c> to</c><00:02:18.340><c> try</c><00:02:18.940><c> and</c><00:02:19.090><c> go</c><00:02:19.209><c> through</c><00:02:19.239><c> what</c><00:02:19.810><c> are</c>

00:02:20.039 --> 00:02:20.049 align:start position:0%
I'm going to try and go through what are
 

00:02:20.049 --> 00:02:21.899 align:start position:0%
I'm going to try and go through what are
Coco's<00:02:20.920><c> needs</c><00:02:21.159><c> what</c><00:02:21.370><c> are</c><00:02:21.400><c> the</c><00:02:21.579><c> language</c>

00:02:21.899 --> 00:02:21.909 align:start position:0%
Coco's needs what are the language
 

00:02:21.909 --> 00:02:23.489 align:start position:0%
Coco's needs what are the language
requirements<00:02:22.510><c> want</c><00:02:22.749><c> are</c><00:02:22.930><c> the</c><00:02:23.109><c> runtime</c>

00:02:23.489 --> 00:02:23.499 align:start position:0%
requirements want are the runtime
 

00:02:23.499 --> 00:02:25.710 align:start position:0%
requirements want are the runtime
requirements<00:02:24.219><c> that</c><00:02:24.700><c> we</c><00:02:24.969><c> have</c><00:02:24.999><c> for</c>

00:02:25.710 --> 00:02:25.720 align:start position:0%
requirements that we have for
 

00:02:25.720 --> 00:02:27.960 align:start position:0%
requirements that we have for
go<00:02:25.930><c> to</c><00:02:26.440><c> set</c><00:02:26.650><c> the</c><00:02:26.800><c> stage</c><00:02:27.040><c> for</c><00:02:27.100><c> understanding</c>

00:02:27.960 --> 00:02:27.970 align:start position:0%
go to set the stage for understanding
 

00:02:27.970 --> 00:02:32.400 align:start position:0%
go to set the stage for understanding
the<00:02:28.060><c> language</c><00:02:29.580><c> number</c><00:02:30.580><c> one</c><00:02:31.030><c> easy</c><00:02:32.020><c> to</c><00:02:32.170><c> learn</c>

00:02:32.400 --> 00:02:32.410 align:start position:0%
the language number one easy to learn
 

00:02:32.410 --> 00:02:35.220 align:start position:0%
the language number one easy to learn
less<00:02:33.100><c> is</c><00:02:33.280><c> more</c><00:02:33.580><c> we</c><00:02:34.030><c> want</c><00:02:34.420><c> to</c><00:02:34.570><c> be</c><00:02:34.720><c> able</c><00:02:34.810><c> to</c><00:02:34.930><c> teach</c>

00:02:35.220 --> 00:02:35.230 align:start position:0%
less is more we want to be able to teach
 

00:02:35.230 --> 00:02:37.500 align:start position:0%
less is more we want to be able to teach
someone<00:02:35.560><c> the</c><00:02:36.070><c> language</c><00:02:36.580><c> the</c><00:02:36.760><c> Cocos</c><00:02:37.150><c> written</c>

00:02:37.500 --> 00:02:37.510 align:start position:0%
someone the language the Cocos written
 

00:02:37.510 --> 00:02:40.140 align:start position:0%
someone the language the Cocos written
in<00:02:37.690><c> in</c><00:02:37.900><c> a</c><00:02:37.990><c> week</c><00:02:38.200><c> max</c><00:02:38.920><c> I</c><00:02:39.280><c> think</c><00:02:39.940><c> we're</c><00:02:40.030><c> gonna</c>

00:02:40.140 --> 00:02:40.150 align:start position:0%
in in a week max I think we're gonna
 

00:02:40.150 --> 00:02:42.000 align:start position:0%
in in a week max I think we're gonna
cover<00:02:40.420><c> most</c><00:02:40.750><c> of</c><00:02:40.930><c> the</c><00:02:40.990><c> language</c><00:02:41.380><c> here</c><00:02:41.590><c> fairly</c>

00:02:42.000 --> 00:02:42.010 align:start position:0%
cover most of the language here fairly
 

00:02:42.010 --> 00:02:43.560 align:start position:0%
cover most of the language here fairly
well<00:02:42.190><c> and</c><00:02:42.370><c> I</c><00:02:42.400><c> think</c><00:02:42.460><c> it'll</c><00:02:42.730><c> get</c><00:02:42.850><c> a</c><00:02:42.880><c> feel</c><00:02:43.120><c> for</c><00:02:43.150><c> a</c>

00:02:43.560 --> 00:02:43.570 align:start position:0%
well and I think it'll get a feel for a
 

00:02:43.570 --> 00:02:44.880 align:start position:0%
well and I think it'll get a feel for a
good<00:02:43.810><c> feel</c><00:02:44.020><c> for</c><00:02:44.050><c> objective-c</c>

00:02:44.880 --> 00:02:44.890 align:start position:0%
good feel for objective-c
 

00:02:44.890 --> 00:02:50.010 align:start position:0%
good feel for objective-c
in<00:02:45.850><c> a</c><00:02:46.270><c> couple</c><00:02:46.900><c> of</c><00:02:46.930><c> hours</c><00:02:47.440><c> roughly</c><00:02:47.920><c> but</c><00:02:48.720><c> we</c><00:02:49.720><c> want</c>

00:02:50.010 --> 00:02:50.020 align:start position:0%
in a couple of hours roughly but we want
 

00:02:50.020 --> 00:02:52.920 align:start position:0%
in a couple of hours roughly but we want
people<00:02:50.320><c> to</c><00:02:50.710><c> focus</c><00:02:50.920><c> on</c><00:02:51.310><c> the</c><00:02:51.550><c> API</c><00:02:51.970><c> so</c><00:02:52.450><c> we</c><00:02:52.570><c> want</c><00:02:52.810><c> to</c>

00:02:52.920 --> 00:02:52.930 align:start position:0%
people to focus on the API so we want to
 

00:02:52.930 --> 00:02:55.230 align:start position:0%
people to focus on the API so we want to
take<00:02:53.500><c> the</c><00:02:53.650><c> spotlight</c><00:02:53.950><c> from</c><00:02:54.400><c> the</c><00:02:54.610><c> language</c><00:02:55.060><c> and</c>

00:02:55.230 --> 00:02:55.240 align:start position:0%
take the spotlight from the language and
 

00:02:55.240 --> 00:02:57.120 align:start position:0%
take the spotlight from the language and
move<00:02:55.510><c> it</c><00:02:55.630><c> to</c><00:02:55.750><c> the</c><00:02:55.780><c> frameworks</c><00:02:56.290><c> that's</c><00:02:56.770><c> one</c><00:02:57.040><c> of</c>

00:02:57.120 --> 00:02:57.130 align:start position:0%
move it to the frameworks that's one of
 

00:02:57.130 --> 00:02:59.190 align:start position:0%
move it to the frameworks that's one of
the<00:02:57.220><c> bigger</c><00:02:57.460><c> reasons</c><00:02:57.970><c> we</c><00:02:58.150><c> wanted</c><00:02:58.510><c> it</c><00:02:58.630><c> to</c><00:02:58.810><c> be</c>

00:02:59.190 --> 00:02:59.200 align:start position:0%
the bigger reasons we wanted it to be
 

00:02:59.200 --> 00:03:00.990 align:start position:0%
the bigger reasons we wanted it to be
easy<00:02:59.410><c> to</c><00:02:59.530><c> learn</c><00:02:59.800><c> we</c><00:03:00.010><c> don't</c><00:03:00.250><c> want</c><00:03:00.459><c> you</c><00:03:00.550><c> to</c><00:03:00.640><c> focus</c>

00:03:00.990 --> 00:03:01.000 align:start position:0%
easy to learn we don't want you to focus
 

00:03:01.000 --> 00:03:04.560 align:start position:0%
easy to learn we don't want you to focus
or<00:03:01.209><c> struggle</c><00:03:01.810><c> with</c><00:03:02.110><c> the</c><00:03:02.230><c> language</c><00:03:03.300><c> we</c><00:03:04.300><c> want</c><00:03:04.510><c> to</c>

00:03:04.560 --> 00:03:04.570 align:start position:0%
or struggle with the language we want to
 

00:03:04.570 --> 00:03:08.040 align:start position:0%
or struggle with the language we want to
embrace<00:03:04.780><c> existing</c><00:03:05.410><c> code</c><00:03:05.700><c> this</c><00:03:06.700><c> has</c><00:03:06.880><c> been</c><00:03:07.150><c> part</c>

00:03:08.040 --> 00:03:08.050 align:start position:0%
embrace existing code this has been part
 

00:03:08.050 --> 00:03:09.949 align:start position:0%
embrace existing code this has been part
of<00:03:08.080><c> the</c><00:03:08.200><c> mindset</c><00:03:08.530><c> for</c><00:03:08.709><c> many</c><00:03:09.100><c> years</c><00:03:09.490><c> that</c><00:03:09.670><c> is</c>

00:03:09.949 --> 00:03:09.959 align:start position:0%
of the mindset for many years that is
 

00:03:09.959 --> 00:03:12.870 align:start position:0%
of the mindset for many years that is
this<00:03:10.959><c> isn't</c><00:03:11.380><c> Java</c><00:03:11.709><c> where</c><00:03:12.220><c> we're</c><00:03:12.430><c> trying</c><00:03:12.640><c> to</c>

00:03:12.870 --> 00:03:12.880 align:start position:0%
this isn't Java where we're trying to
 

00:03:12.880 --> 00:03:14.910 align:start position:0%
this isn't Java where we're trying to
basically<00:03:13.180><c> give</c><00:03:13.570><c> you</c><00:03:13.780><c> a</c><00:03:13.810><c> clean</c><00:03:14.350><c> new</c><00:03:14.560><c> world</c>

00:03:14.910 --> 00:03:14.920 align:start position:0%
basically give you a clean new world
 

00:03:14.920 --> 00:03:17.220 align:start position:0%
basically give you a clean new world
that<00:03:15.070><c> you</c><00:03:15.280><c> have</c><00:03:15.310><c> to</c><00:03:15.610><c> conform</c><00:03:16.000><c> to</c><00:03:16.240><c> in</c><00:03:16.660><c> in</c><00:03:17.140><c> a</c>

00:03:17.220 --> 00:03:17.230 align:start position:0%
that you have to conform to in in a
 

00:03:17.230 --> 00:03:19.080 align:start position:0%
that you have to conform to in in a
homogeneous<00:03:17.920><c> way</c><00:03:18.130><c> we</c><00:03:18.340><c> want</c><00:03:18.580><c> you</c><00:03:18.700><c> to</c><00:03:18.790><c> be</c><00:03:18.910><c> able</c>

00:03:19.080 --> 00:03:19.090 align:start position:0%
homogeneous way we want you to be able
 

00:03:19.090 --> 00:03:21.630 align:start position:0%
homogeneous way we want you to be able
to<00:03:19.150><c> bring</c><00:03:19.360><c> over</c><00:03:19.510><c> your</c><00:03:19.690><c> C</c><00:03:19.990><c> code</c><00:03:20.200><c> your</c><00:03:20.680><c> C++</c><00:03:21.370><c> code</c>

00:03:21.630 --> 00:03:21.640 align:start position:0%
to bring over your C code your C++ code
 

00:03:21.640 --> 00:03:23.580 align:start position:0%
to bring over your C code your C++ code
and<00:03:21.820><c> leverage</c><00:03:22.150><c> it</c><00:03:22.270><c> in</c><00:03:22.450><c> the</c><00:03:22.780><c> context</c><00:03:23.350><c> of</c><00:03:23.410><c> this</c>

00:03:23.580 --> 00:03:23.590 align:start position:0%
and leverage it in the context of this
 

00:03:23.590 --> 00:03:28.020 align:start position:0%
and leverage it in the context of this
very<00:03:23.770><c> dynamic</c><00:03:23.950><c> environment</c><00:03:24.600><c> and</c><00:03:26.700><c> lastly</c><00:03:27.700><c> and</c>

00:03:28.020 --> 00:03:28.030 align:start position:0%
very dynamic environment and lastly and
 

00:03:28.030 --> 00:03:30.090 align:start position:0%
very dynamic environment and lastly and
most<00:03:28.060><c> importantly</c><00:03:28.870><c> we</c><00:03:29.200><c> want</c><00:03:29.470><c> a</c><00:03:29.590><c> dynamic</c>

00:03:30.090 --> 00:03:30.100 align:start position:0%
most importantly we want a dynamic
 

00:03:30.100 --> 00:03:32.940 align:start position:0%
most importantly we want a dynamic
object<00:03:30.220><c> model</c><00:03:30.850><c> the</c><00:03:31.510><c> dynamic</c><00:03:31.959><c> object</c><00:03:32.380><c> model</c><00:03:32.769><c> is</c>

00:03:32.940 --> 00:03:32.950 align:start position:0%
object model the dynamic object model is
 

00:03:32.950 --> 00:03:34.770 align:start position:0%
object model the dynamic object model is
what<00:03:33.280><c> enables</c><00:03:33.910><c> many</c><00:03:34.269><c> of</c><00:03:34.450><c> the</c><00:03:34.570><c> cool</c><00:03:34.750><c> features</c>

00:03:34.770 --> 00:03:34.780 align:start position:0%
what enables many of the cool features
 

00:03:34.780 --> 00:03:36.870 align:start position:0%
what enables many of the cool features
that<00:03:35.470><c> you</c><00:03:35.620><c> see</c><00:03:35.860><c> in</c><00:03:35.980><c> these</c><00:03:36.070><c> presentations</c>

00:03:36.870 --> 00:03:36.880 align:start position:0%
that you see in these presentations
 

00:03:36.880 --> 00:03:39.180 align:start position:0%
that you see in these presentations
whether<00:03:37.090><c> it</c><00:03:37.209><c> be</c><00:03:37.330><c> cocoa</c><00:03:37.989><c> bindings</c><00:03:38.560><c> or</c>

00:03:39.180 --> 00:03:39.190 align:start position:0%
whether it be cocoa bindings or
 

00:03:39.190 --> 00:03:41.490 align:start position:0%
whether it be cocoa bindings or
Automator<00:03:39.790><c> many</c><00:03:40.480><c> of</c><00:03:40.690><c> these</c><00:03:40.870><c> very</c><00:03:41.230><c> cool</c>

00:03:41.490 --> 00:03:41.500 align:start position:0%
Automator many of these very cool
 

00:03:41.500 --> 00:03:43.290 align:start position:0%
Automator many of these very cool
features<00:03:41.980><c> are</c><00:03:42.250><c> because</c><00:03:42.640><c> we</c><00:03:42.880><c> have</c><00:03:42.910><c> dynamic</c>

00:03:43.290 --> 00:03:43.300 align:start position:0%
features are because we have dynamic
 

00:03:43.300 --> 00:03:44.970 align:start position:0%
features are because we have dynamic
plumbing<00:03:44.019><c> underneath</c><00:03:44.350><c> the</c><00:03:44.560><c> covers</c><00:03:44.950><c> that</c>

00:03:44.970 --> 00:03:44.980 align:start position:0%
plumbing underneath the covers that
 

00:03:44.980 --> 00:03:47.460 align:start position:0%
plumbing underneath the covers that
actually<00:03:45.610><c> allows</c><00:03:46.300><c> us</c><00:03:46.540><c> to</c><00:03:46.720><c> do</c><00:03:46.870><c> some</c><00:03:47.050><c> very</c><00:03:47.290><c> very</c>

00:03:47.460 --> 00:03:47.470 align:start position:0%
actually allows us to do some very very
 

00:03:47.470 --> 00:03:49.740 align:start position:0%
actually allows us to do some very very
interesting<00:03:47.980><c> things</c><00:03:48.220><c> and</c><00:03:48.580><c> if</c><00:03:49.269><c> you</c><00:03:49.570><c> don't</c>

00:03:49.740 --> 00:03:49.750 align:start position:0%
interesting things and if you don't
 

00:03:49.750 --> 00:03:52.470 align:start position:0%
interesting things and if you don't
write<00:03:50.350><c> frameworks</c><00:03:50.980><c> for</c><00:03:51.130><c> a</c><00:03:51.190><c> living</c><00:03:51.580><c> you</c><00:03:52.209><c> don't</c>

00:03:52.470 --> 00:03:52.480 align:start position:0%
write frameworks for a living you don't
 

00:03:52.480 --> 00:03:54.300 align:start position:0%
write frameworks for a living you don't
sometimes<00:03:52.930><c> think</c><00:03:53.500><c> about</c><00:03:53.739><c> it</c><00:03:53.920><c> so</c><00:03:54.010><c> if</c><00:03:54.100><c> you're</c><00:03:54.160><c> an</c>

00:03:54.300 --> 00:03:54.310 align:start position:0%
sometimes think about it so if you're an
 

00:03:54.310 --> 00:03:57.479 align:start position:0%
sometimes think about it so if you're an
application<00:03:54.850><c> programmer</c><00:03:55.330><c> I'm</c><00:03:55.959><c> hoping</c><00:03:56.769><c> that</c>

00:03:57.479 --> 00:03:57.489 align:start position:0%
application programmer I'm hoping that
 

00:03:57.489 --> 00:03:58.979 align:start position:0%
application programmer I'm hoping that
if<00:03:57.670><c> you</c><00:03:57.790><c> haven't</c><00:03:58.000><c> thought</c><00:03:58.390><c> about</c><00:03:58.600><c> some</c><00:03:58.959><c> of</c>

00:03:58.979 --> 00:03:58.989 align:start position:0%
if you haven't thought about some of
 

00:03:58.989 --> 00:04:00.780 align:start position:0%
if you haven't thought about some of
these<00:03:59.200><c> features</c><00:03:59.470><c> we're</c><00:04:00.250><c> going</c><00:04:00.370><c> to</c><00:04:00.430><c> put</c><00:04:00.640><c> them</c>

00:04:00.780 --> 00:04:00.790 align:start position:0%
these features we're going to put them
 

00:04:00.790 --> 00:04:02.190 align:start position:0%
these features we're going to put them
in<00:04:00.880><c> a</c><00:04:00.940><c> context</c><00:04:01.570><c> that's</c><00:04:01.600><c> going</c><00:04:01.840><c> to</c><00:04:01.900><c> make</c><00:04:02.049><c> them</c>

00:04:02.190 --> 00:04:02.200 align:start position:0%
in a context that's going to make them
 

00:04:02.200 --> 00:04:04.050 align:start position:0%
in a context that's going to make them
much<00:04:02.380><c> more</c><00:04:02.590><c> interesting</c><00:04:03.070><c> to</c><00:04:03.220><c> you</c><00:04:03.370><c> so</c><00:04:03.850><c> it's</c>

00:04:04.050 --> 00:04:04.060 align:start position:0%
much more interesting to you so it's
 

00:04:04.060 --> 00:04:05.310 align:start position:0%
much more interesting to you so it's
very<00:04:04.180><c> it's</c><00:04:04.420><c> very</c><00:04:04.480><c> important</c><00:04:04.959><c> that</c><00:04:05.049><c> we</c><00:04:05.140><c> serve</c>

00:04:05.310 --> 00:04:05.320 align:start position:0%
very it's very important that we serve
 

00:04:05.320 --> 00:04:07.520 align:start position:0%
very it's very important that we serve
the<00:04:05.470><c> frameworks</c><00:04:05.890><c> and</c><00:04:06.100><c> the</c><00:04:06.190><c> interactive</c><00:04:06.489><c> tools</c>

00:04:07.520 --> 00:04:07.530 align:start position:0%
the frameworks and the interactive tools
 

00:04:07.530 --> 00:04:12.000 align:start position:0%
the frameworks and the interactive tools
one<00:04:08.530><c> of</c><00:04:08.620><c> the</c><00:04:08.680><c> runtime</c><00:04:09.160><c> requirements</c><00:04:09.760><c> as</c><00:04:11.010><c> most</c>

00:04:12.000 --> 00:04:12.010 align:start position:0%
one of the runtime requirements as most
 

00:04:12.010 --> 00:04:14.370 align:start position:0%
one of the runtime requirements as most
of<00:04:12.190><c> you</c><00:04:12.310><c> know</c><00:04:12.549><c> in</c><00:04:12.880><c> the</c><00:04:13.180><c> mid-80s</c><00:04:13.570><c> we</c><00:04:14.049><c> weren't</c>

00:04:14.370 --> 00:04:14.380 align:start position:0%
of you know in the mid-80s we weren't
 

00:04:14.380 --> 00:04:16.199 align:start position:0%
of you know in the mid-80s we weren't
dealing<00:04:14.560><c> with</c><00:04:14.860><c> machines</c><00:04:15.070><c> and</c><00:04:15.580><c> memory</c><00:04:15.820><c> models</c>

00:04:16.199 --> 00:04:16.209 align:start position:0%
dealing with machines and memory models
 

00:04:16.209 --> 00:04:19.199 align:start position:0%
dealing with machines and memory models
that<00:04:16.359><c> were</c><00:04:16.479><c> that</c><00:04:17.350><c> were</c><00:04:17.530><c> vast</c><00:04:18.190><c> as</c><00:04:18.729><c> vast</c><00:04:19.060><c> as</c>

00:04:19.199 --> 00:04:19.209 align:start position:0%
that were that were vast as vast as
 

00:04:19.209 --> 00:04:21.360 align:start position:0%
that were that were vast as vast as
today<00:04:19.450><c> for</c><00:04:19.660><c> instance</c><00:04:19.720><c> objective-c</c><00:04:20.470><c> ran</c>

00:04:21.360 --> 00:04:21.370 align:start position:0%
today for instance objective-c ran
 

00:04:21.370 --> 00:04:24.150 align:start position:0%
today for instance objective-c ran
fairly<00:04:22.090><c> well</c><00:04:22.330><c> in</c><00:04:22.570><c> two</c><00:04:22.840><c> megabyte</c><00:04:23.350><c> on</c><00:04:23.590><c> two</c>

00:04:24.150 --> 00:04:24.160 align:start position:0%
fairly well in two megabyte on two
 

00:04:24.160 --> 00:04:27.870 align:start position:0%
fairly well in two megabyte on two
megabyte<00:04:24.610><c> workstations</c><00:04:25.350><c> and</c><00:04:26.490><c> today</c><00:04:27.490><c> as</c><00:04:27.700><c> you</c>

00:04:27.870 --> 00:04:27.880 align:start position:0%
megabyte workstations and today as you
 

00:04:27.880 --> 00:04:31.710 align:start position:0%
megabyte workstations and today as you
know<00:04:27.910><c> most</c><00:04:28.270><c> workstation</c><00:04:28.900><c> chip</c><00:04:29.140><c> with</c><00:04:30.720><c> 256</c>

00:04:31.710 --> 00:04:31.720 align:start position:0%
know most workstation chip with 256
 

00:04:31.720 --> 00:04:34.140 align:start position:0%
know most workstation chip with 256
megabytes<00:04:31.960><c> 512</c><00:04:32.740><c> whatever</c><00:04:33.100><c> quite</c><00:04:33.669><c> a</c><00:04:33.700><c> bit</c><00:04:33.970><c> more</c>

00:04:34.140 --> 00:04:34.150 align:start position:0%
megabytes 512 whatever quite a bit more
 

00:04:34.150 --> 00:04:37.380 align:start position:0%
megabytes 512 whatever quite a bit more
than<00:04:34.210><c> it</c><00:04:34.360><c> was</c><00:04:34.450><c> designed</c><00:04:34.599><c> for</c><00:04:34.930><c> so</c><00:04:36.090><c> it's</c><00:04:37.090><c> very</c>

00:04:37.380 --> 00:04:37.390 align:start position:0%
than it was designed for so it's very
 

00:04:37.390 --> 00:04:39.719 align:start position:0%
than it was designed for so it's very
clear<00:04:37.810><c> that</c><00:04:37.840><c> objective-c</c><00:04:38.740><c> having</c>

00:04:39.719 --> 00:04:39.729 align:start position:0%
clear that objective-c having
 

00:04:39.729 --> 00:04:41.969 align:start position:0%
clear that objective-c having
born<00:04:40.029><c> in</c><00:04:40.270><c> that</c><00:04:40.419><c> age</c><00:04:40.689><c> scales</c><00:04:41.229><c> nicely</c><00:04:41.529><c> to</c>

00:04:41.969 --> 00:04:41.979 align:start position:0%
born in that age scales nicely to
 

00:04:41.979 --> 00:04:46.739 align:start position:0%
born in that age scales nicely to
today's<00:04:42.669><c> machines</c><00:04:44.520><c> it's</c><00:04:45.520><c> very</c><00:04:46.059><c> critical</c><00:04:46.419><c> that</c>

00:04:46.739 --> 00:04:46.749 align:start position:0%
today's machines it's very critical that
 

00:04:46.749 --> 00:04:49.230 align:start position:0%
today's machines it's very critical that
when<00:04:47.169><c> we</c><00:04:47.439><c> ship</c><00:04:47.710><c> new</c><00:04:47.919><c> features</c><00:04:48.430><c> that</c><00:04:48.729><c> we</c><00:04:49.059><c> don't</c>

00:04:49.230 --> 00:04:49.240 align:start position:0%
when we ship new features that we don't
 

00:04:49.240 --> 00:04:52.939 align:start position:0%
when we ship new features that we don't
break<00:04:49.389><c> your</c><00:04:49.599><c> code</c><00:04:49.749><c> okay</c><00:04:50.740><c> now</c><00:04:51.490><c> if</c><00:04:51.849><c> you</c><00:04:52.270><c> look</c><00:04:52.599><c> at</c>

00:04:52.939 --> 00:04:52.949 align:start position:0%
break your code okay now if you look at
 

00:04:52.949 --> 00:04:55.589 align:start position:0%
break your code okay now if you look at
how<00:04:53.949><c> many</c><00:04:54.009><c> releases</c><00:04:54.460><c> of</c><00:04:54.789><c> cocoa</c><00:04:55.180><c> we've</c><00:04:55.330><c> made</c>

00:04:55.589 --> 00:04:55.599 align:start position:0%
how many releases of cocoa we've made
 

00:04:55.599 --> 00:04:57.689 align:start position:0%
how many releases of cocoa we've made
and<00:04:55.779><c> lots</c><00:04:56.169><c> of</c><00:04:56.319><c> frameworks</c><00:04:56.800><c> we've</c><00:04:57.189><c> been</c><00:04:57.430><c> very</c>

00:04:57.689 --> 00:04:57.699 align:start position:0%
and lots of frameworks we've been very
 

00:04:57.699 --> 00:04:59.670 align:start position:0%
and lots of frameworks we've been very
successful<00:04:57.819><c> in</c><00:04:58.539><c> fact</c><00:04:58.809><c> I</c><00:04:58.990><c> think</c><00:04:59.050><c> we</c><00:04:59.289><c> were</c><00:04:59.620><c> the</c>

00:04:59.670 --> 00:04:59.680 align:start position:0%
successful in fact I think we were the
 

00:04:59.680 --> 00:05:02.249 align:start position:0%
successful in fact I think we were the
only<00:04:59.770><c> operating</c><00:05:00.520><c> system</c><00:05:01.059><c> that</c><00:05:01.419><c> I</c><00:05:01.449><c> know</c><00:05:01.629><c> of</c>

00:05:02.249 --> 00:05:02.259 align:start position:0%
only operating system that I know of
 

00:05:02.259 --> 00:05:05.360 align:start position:0%
only operating system that I know of
that<00:05:02.589><c> is</c><00:05:02.999><c> fairly</c><00:05:04.050><c> object-oriented</c><00:05:05.050><c> and</c>

00:05:05.360 --> 00:05:05.370 align:start position:0%
that is fairly object-oriented and
 

00:05:05.370 --> 00:05:09.239 align:start position:0%
that is fairly object-oriented and
hasn't<00:05:06.370><c> in</c><00:05:06.550><c> fact</c><00:05:06.999><c> broken</c><00:05:07.569><c> people</c><00:05:08.069><c> with</c><00:05:09.069><c> some</c>

00:05:09.239 --> 00:05:09.249 align:start position:0%
hasn't in fact broken people with some
 

00:05:09.249 --> 00:05:11.939 align:start position:0%
hasn't in fact broken people with some
regularity<00:05:09.669><c> so</c><00:05:10.020><c> everything's</c><00:05:11.020><c> shared</c><00:05:11.259><c> and</c><00:05:11.620><c> we</c>

00:05:11.939 --> 00:05:11.949 align:start position:0%
regularity so everything's shared and we
 

00:05:11.949 --> 00:05:15.029 align:start position:0%
regularity so everything's shared and we
try<00:05:12.159><c> not</c><00:05:12.339><c> to</c><00:05:12.430><c> break</c><00:05:12.639><c> people</c><00:05:13.889><c> we</c><00:05:14.889><c> have</c><00:05:15.009><c> a</c>

00:05:15.029 --> 00:05:15.039 align:start position:0%
try not to break people we have a
 

00:05:15.039 --> 00:05:18.089 align:start position:0%
try not to break people we have a
sea-based<00:05:15.490><c> API</c><00:05:15.849><c> and</c><00:05:16.330><c> this</c><00:05:17.229><c> again</c><00:05:17.620><c> doesn't</c>

00:05:18.089 --> 00:05:18.099 align:start position:0%
sea-based API and this again doesn't
 

00:05:18.099 --> 00:05:19.799 align:start position:0%
sea-based API and this again doesn't
really<00:05:18.460><c> affect</c><00:05:18.849><c> you</c><00:05:18.969><c> directly</c><00:05:19.270><c> but</c>

00:05:19.799 --> 00:05:19.809 align:start position:0%
really affect you directly but
 

00:05:19.809 --> 00:05:22.170 align:start position:0%
really affect you directly but
indirectly<00:05:20.139><c> that</c><00:05:20.589><c> is</c><00:05:20.830><c> we</c><00:05:21.249><c> feel</c><00:05:21.520><c> strongly</c><00:05:21.909><c> that</c>

00:05:22.170 --> 00:05:22.180 align:start position:0%
indirectly that is we feel strongly that
 

00:05:22.180 --> 00:05:24.119 align:start position:0%
indirectly that is we feel strongly that
objective-c<00:05:22.930><c> has</c><00:05:23.319><c> to</c><00:05:23.439><c> interact</c><00:05:23.680><c> with</c><00:05:23.919><c> other</c>

00:05:24.119 --> 00:05:24.129 align:start position:0%
objective-c has to interact with other
 

00:05:24.129 --> 00:05:26.339 align:start position:0%
objective-c has to interact with other
languages<00:05:24.669><c> so</c><00:05:25.210><c> for</c><00:05:25.419><c> instance</c><00:05:25.749><c> the</c><00:05:25.899><c> first</c><00:05:26.080><c> two</c>

00:05:26.339 --> 00:05:26.349 align:start position:0%
languages so for instance the first two
 

00:05:26.349 --> 00:05:28.379 align:start position:0%
languages so for instance the first two
up<00:05:26.529><c> there</c><00:05:26.680><c> cocoa</c><00:05:27.069><c> Java</c><00:05:27.370><c> is</c><00:05:27.639><c> a</c><00:05:27.969><c> bridge</c><00:05:28.360><c> that</c>

00:05:28.379 --> 00:05:28.389 align:start position:0%
up there cocoa Java is a bridge that
 

00:05:28.389 --> 00:05:30.689 align:start position:0%
up there cocoa Java is a bridge that
Apple<00:05:29.020><c> supports</c><00:05:29.499><c> Apple</c><00:05:29.860><c> script</c><00:05:30.069><c> studio</c><00:05:30.399><c> is</c>

00:05:30.689 --> 00:05:30.699 align:start position:0%
Apple supports Apple script studio is
 

00:05:30.699 --> 00:05:32.700 align:start position:0%
Apple supports Apple script studio is
another<00:05:31.300><c> product</c><00:05:31.569><c> that</c><00:05:31.809><c> allows</c><00:05:32.080><c> you</c><00:05:32.379><c> from</c>

00:05:32.700 --> 00:05:32.710 align:start position:0%
another product that allows you from
 

00:05:32.710 --> 00:05:34.619 align:start position:0%
another product that allows you from
Apple<00:05:33.039><c> script</c><00:05:33.309><c> to</c><00:05:33.460><c> do</c><00:05:33.610><c> cocoa</c><00:05:33.939><c> programming</c><00:05:34.479><c> and</c>

00:05:34.619 --> 00:05:34.629 align:start position:0%
Apple script to do cocoa programming and
 

00:05:34.629 --> 00:05:35.939 align:start position:0%
Apple script to do cocoa programming and
then<00:05:35.080><c> there's</c><00:05:35.259><c> a</c><00:05:35.349><c> whole</c><00:05:35.529><c> bunch</c><00:05:35.559><c> of</c>

00:05:35.939 --> 00:05:35.949 align:start position:0%
then there's a whole bunch of
 

00:05:35.949 --> 00:05:37.860 align:start position:0%
then there's a whole bunch of
third-party<00:05:36.430><c> scripting</c><00:05:36.939><c> languages</c><00:05:37.389><c> Python</c>

00:05:37.860 --> 00:05:37.870 align:start position:0%
third-party scripting languages Python
 

00:05:37.870 --> 00:05:40.980 align:start position:0%
third-party scripting languages Python
for<00:05:38.409><c> objective-c</c><00:05:38.889><c> Ruby</c><00:05:39.339><c> cocoa</c><00:05:39.729><c> Perl</c><00:05:40.059><c> and</c><00:05:40.360><c> in</c>

00:05:40.980 --> 00:05:40.990 align:start position:0%
for objective-c Ruby cocoa Perl and in
 

00:05:40.990 --> 00:05:43.019 align:start position:0%
for objective-c Ruby cocoa Perl and in
fact<00:05:41.199><c> c-sharp</c><00:05:41.680><c> is</c><00:05:41.949><c> is</c><00:05:42.129><c> being</c><00:05:42.610><c> added</c><00:05:42.789><c> to</c><00:05:42.999><c> the</c>

00:05:43.019 --> 00:05:43.029 align:start position:0%
fact c-sharp is is being added to the
 

00:05:43.029 --> 00:05:44.760 align:start position:0%
fact c-sharp is is being added to the
list<00:05:43.149><c> of</c><00:05:43.479><c> languages</c><00:05:43.990><c> that</c><00:05:44.169><c> are</c><00:05:44.409><c> going</c><00:05:44.529><c> to</c><00:05:44.589><c> be</c>

00:05:44.760 --> 00:05:44.770 align:start position:0%
list of languages that are going to be
 

00:05:44.770 --> 00:05:47.159 align:start position:0%
list of languages that are going to be
available<00:05:45.430><c> to</c><00:05:46.029><c> interact</c><00:05:46.389><c> with</c><00:05:46.449><c> cocoa</c><00:05:46.930><c> and</c>

00:05:47.159 --> 00:05:47.169 align:start position:0%
available to interact with cocoa and
 

00:05:47.169 --> 00:05:50.129 align:start position:0%
available to interact with cocoa and
bind<00:05:47.620><c> with</c><00:05:47.800><c> Objective</c><00:05:48.249><c> C</c><00:05:48.279><c> so</c><00:05:49.270><c> we're</c><00:05:49.959><c> really</c>

00:05:50.129 --> 00:05:50.139 align:start position:0%
bind with Objective C so we're really
 

00:05:50.139 --> 00:05:52.739 align:start position:0%
bind with Objective C so we're really
excited<00:05:50.499><c> to</c><00:05:50.860><c> see</c><00:05:51.159><c> third</c><00:05:51.490><c> parties</c><00:05:51.969><c> in</c><00:05:52.209><c> fact</c>

00:05:52.739 --> 00:05:52.749 align:start position:0%
excited to see third parties in fact
 

00:05:52.749 --> 00:05:54.329 align:start position:0%
excited to see third parties in fact
integrate<00:05:53.199><c> with</c><00:05:53.349><c> this</c><00:05:53.469><c> runtime</c><00:05:53.979><c> which</c><00:05:54.159><c> we</c>

00:05:54.329 --> 00:05:54.339 align:start position:0%
integrate with this runtime which we
 

00:05:54.339 --> 00:05:59.309 align:start position:0%
integrate with this runtime which we
consider<00:05:54.849><c> fairly</c><00:05:55.180><c> flexible</c><00:05:57.749><c> so</c><00:05:58.749><c> to</c><00:05:59.110><c> wrap</c><00:05:59.259><c> it</c>

00:05:59.309 --> 00:05:59.319 align:start position:0%
consider fairly flexible so to wrap it
 

00:05:59.319 --> 00:06:02.699 align:start position:0%
consider fairly flexible so to wrap it
up<00:05:59.560><c> it's</c><00:06:00.659><c> designed</c><00:06:01.659><c> to</c><00:06:01.810><c> serve</c><00:06:02.020><c> the</c><00:06:02.050><c> dynamic</c>

00:06:02.699 --> 00:06:02.709 align:start position:0%
up it's designed to serve the dynamic
 

00:06:02.709 --> 00:06:04.139 align:start position:0%
up it's designed to serve the dynamic
frameworks<00:06:03.069><c> and</c><00:06:03.189><c> tools</c><00:06:03.249><c> and</c><00:06:03.610><c> it</c><00:06:03.699><c> enables</c><00:06:04.089><c> you</c>

00:06:04.139 --> 00:06:04.149 align:start position:0%
frameworks and tools and it enables you
 

00:06:04.149 --> 00:06:06.360 align:start position:0%
frameworks and tools and it enables you
to<00:06:04.240><c> integrate</c><00:06:04.509><c> your</c><00:06:04.810><c> C</c><00:06:05.020><c> code</c><00:06:05.259><c> with</c><00:06:05.800><c> cocoa</c><00:06:06.189><c> but</c>

00:06:06.360 --> 00:06:06.370 align:start position:0%
to integrate your C code with cocoa but
 

00:06:06.370 --> 00:06:08.399 align:start position:0%
to integrate your C code with cocoa but
what<00:06:06.490><c> this</c><00:06:06.610><c> talk</c><00:06:06.879><c> is</c><00:06:07.060><c> about</c><00:06:07.089><c> is</c><00:06:07.839><c> Objective</c><00:06:08.379><c> C</c>

00:06:08.399 --> 00:06:08.409 align:start position:0%
what this talk is about is Objective C
 

00:06:08.409 --> 00:06:11.010 align:start position:0%
what this talk is about is Objective C
plus<00:06:08.649><c> plus</c><00:06:08.889><c> which</c><00:06:09.069><c> is</c><00:06:09.219><c> the</c><00:06:09.370><c> same</c><00:06:09.809><c> exact</c><00:06:10.809><c> design</c>

00:06:11.010 --> 00:06:11.020 align:start position:0%
plus plus which is the same exact design
 

00:06:11.020 --> 00:06:13.679 align:start position:0%
plus plus which is the same exact design
point<00:06:11.589><c> okay</c><00:06:12.309><c> it</c><00:06:12.550><c> just</c><00:06:12.789><c> enables</c><00:06:13.389><c> you</c><00:06:13.659><c> to</c>

00:06:13.679 --> 00:06:13.689 align:start position:0%
point okay it just enables you to
 

00:06:13.689 --> 00:06:17.909 align:start position:0%
point okay it just enables you to
integrate<00:06:13.990><c> C++</c><00:06:14.830><c> code</c><00:06:15.099><c> so</c><00:06:15.479><c> it's</c><00:06:16.589><c> it's</c><00:06:17.589><c> it's</c><00:06:17.830><c> not</c>

00:06:17.909 --> 00:06:17.919 align:start position:0%
integrate C++ code so it's it's it's not
 

00:06:17.919 --> 00:06:19.739 align:start position:0%
integrate C++ code so it's it's it's not
as<00:06:18.189><c> if</c><00:06:18.339><c> the</c><00:06:18.490><c> object</c><00:06:18.610><c> modules</c><00:06:19.330><c> are</c><00:06:19.479><c> there</c><00:06:19.659><c> to</c>

00:06:19.739 --> 00:06:19.749 align:start position:0%
as if the object modules are there to
 

00:06:19.749 --> 00:06:20.939 align:start position:0%
as if the object modules are there to
compete<00:06:20.110><c> they're</c><00:06:20.349><c> there</c><00:06:20.529><c> to</c><00:06:20.620><c> work</c><00:06:20.800><c> together</c>

00:06:20.939 --> 00:06:20.949 align:start position:0%
compete they're there to work together
 

00:06:20.949 --> 00:06:25.589 align:start position:0%
compete they're there to work together
so<00:06:22.559><c> now</c><00:06:23.559><c> let's</c><00:06:23.770><c> get</c><00:06:23.889><c> back</c><00:06:24.099><c> to</c><00:06:24.339><c> why</c><00:06:24.490><c> C++</c><00:06:25.180><c> doesn't</c>

00:06:25.589 --> 00:06:25.599 align:start position:0%
so now let's get back to why C++ doesn't
 

00:06:25.599 --> 00:06:26.689 align:start position:0%
so now let's get back to why C++ doesn't
meet<00:06:25.749><c> Coco's</c><00:06:26.139><c> needs</c>

00:06:26.689 --> 00:06:26.699 align:start position:0%
meet Coco's needs
 

00:06:26.699 --> 00:06:30.799 align:start position:0%
meet Coco's needs
it's<00:06:27.699><c> a</c><00:06:27.789><c> strongly</c><00:06:28.270><c> type</c><00:06:28.509><c> static</c><00:06:29.349><c> object</c><00:06:29.800><c> model</c>

00:06:30.799 --> 00:06:30.809 align:start position:0%
it's a strongly type static object model
 

00:06:30.809 --> 00:06:33.689 align:start position:0%
it's a strongly type static object model
this<00:06:31.809><c> is</c><00:06:32.050><c> what</c><00:06:32.080><c> one</c><00:06:32.800><c> of</c><00:06:32.919><c> the</c><00:06:33.009><c> properties</c><00:06:33.490><c> that</c>

00:06:33.689 --> 00:06:33.699 align:start position:0%
this is what one of the properties that
 

00:06:33.699 --> 00:06:35.820 align:start position:0%
this is what one of the properties that
makes<00:06:33.879><c> it</c><00:06:34.059><c> hard</c><00:06:34.270><c> to</c><00:06:34.330><c> evolve</c><00:06:34.809><c> systems</c><00:06:35.319><c> over</c>

00:06:35.820 --> 00:06:35.830 align:start position:0%
makes it hard to evolve systems over
 

00:06:35.830 --> 00:06:39.869 align:start position:0%
makes it hard to evolve systems over
time<00:06:37.620><c> there's</c><00:06:38.620><c> no</c><00:06:38.919><c> runtime</c><00:06:39.339><c> support</c><00:06:39.490><c> for</c>

00:06:39.869 --> 00:06:39.879 align:start position:0%
time there's no runtime support for
 

00:06:39.879 --> 00:06:41.879 align:start position:0%
time there's no runtime support for
dynamic<00:06:40.029><c> loading</c><00:06:40.539><c> a</c><00:06:40.689><c> reflection</c><00:06:41.259><c> again</c><00:06:41.589><c> many</c>

00:06:41.879 --> 00:06:41.889 align:start position:0%
dynamic loading a reflection again many
 

00:06:41.889 --> 00:06:44.070 align:start position:0%
dynamic loading a reflection again many
features<00:06:42.399><c> that</c><00:06:42.969><c> we</c><00:06:43.120><c> provide</c><00:06:43.539><c> in</c><00:06:43.689><c> our</c><00:06:43.809><c> tools</c>

00:06:44.070 --> 00:06:44.080 align:start position:0%
features that we provide in our tools
 

00:06:44.080 --> 00:06:46.139 align:start position:0%
features that we provide in our tools
would<00:06:44.349><c> not</c><00:06:44.559><c> be</c><00:06:44.740><c> possible</c><00:06:45.039><c> with</c><00:06:45.520><c> the</c><00:06:45.669><c> standard</c>

00:06:46.139 --> 00:06:46.149 align:start position:0%
would not be possible with the standard
 

00:06:46.149 --> 00:06:48.809 align:start position:0%
would not be possible with the standard
C++<00:06:46.449><c> definition</c><00:06:47.409><c> as</c><00:06:47.529><c> many</c><00:06:48.279><c> of</c><00:06:48.459><c> you</c><00:06:48.579><c> use</c><00:06:48.789><c> it</c>

00:06:48.809 --> 00:06:48.819 align:start position:0%
C++ definition as many of you use it
 

00:06:48.819 --> 00:06:51.389 align:start position:0%
C++ definition as many of you use it
today<00:06:49.269><c> it</c><00:06:49.479><c> is</c><00:06:49.990><c> possible</c><00:06:50.649><c> to</c><00:06:50.680><c> expand</c><00:06:51.279><c> the</c>

00:06:51.389 --> 00:06:51.399 align:start position:0%
today it is possible to expand the
 

00:06:51.399 --> 00:06:53.640 align:start position:0%
today it is possible to expand the
definition<00:06:51.969><c> but</c><00:06:52.360><c> we've</c><00:06:52.569><c> used</c><00:06:52.839><c> C++</c>

00:06:53.640 --> 00:06:53.650 align:start position:0%
definition but we've used C++
 

00:06:53.650 --> 00:06:55.950 align:start position:0%
definition but we've used C++
as<00:06:53.710><c> a</c><00:06:53.770><c> standard</c><00:06:54.070><c> language</c><00:06:54.400><c> which</c><00:06:54.850><c> we</c><00:06:55.000><c> try</c><00:06:55.720><c> not</c>

00:06:55.950 --> 00:06:55.960 align:start position:0%
as a standard language which we try not
 

00:06:55.960 --> 00:07:00.360 align:start position:0%
as a standard language which we try not
to<00:06:56.199><c> extend</c><00:06:57.419><c> and</c><00:06:58.470><c> run</c><00:06:59.470><c> time</c><00:06:59.650><c> model</c><00:06:59.979><c> is</c><00:07:00.070><c> fragile</c>

00:07:00.360 --> 00:07:00.370 align:start position:0%
to extend and run time model is fragile
 

00:07:00.370 --> 00:07:02.670 align:start position:0%
to extend and run time model is fragile
and<00:07:00.729><c> compiler</c><00:07:01.150><c> dependent</c><00:07:01.600><c> this</c><00:07:02.139><c> is</c><00:07:02.350><c> a</c><00:07:02.380><c> feature</c>

00:07:02.670 --> 00:07:02.680 align:start position:0%
and compiler dependent this is a feature
 

00:07:02.680 --> 00:07:05.129 align:start position:0%
and compiler dependent this is a feature
which<00:07:03.009><c> is</c><00:07:03.190><c> hurt</c><00:07:03.490><c> C++</c><00:07:04.180><c> significantly</c><00:07:04.780><c> one</c><00:07:05.020><c> of</c>

00:07:05.129 --> 00:07:05.139 align:start position:0%
which is hurt C++ significantly one of
 

00:07:05.139 --> 00:07:08.700 align:start position:0%
which is hurt C++ significantly one of
the<00:07:05.460><c> reasons</c><00:07:06.460><c> Java</c><00:07:06.820><c> is</c><00:07:07.210><c> is</c><00:07:07.840><c> so</c><00:07:08.020><c> popular</c><00:07:08.530><c> today</c>

00:07:08.700 --> 00:07:08.710 align:start position:0%
the reasons Java is is so popular today
 

00:07:08.710 --> 00:07:10.560 align:start position:0%
the reasons Java is is so popular today
is<00:07:09.009><c> because</c><00:07:09.310><c> it</c><00:07:09.460><c> doesn't</c><00:07:09.669><c> suffer</c><00:07:10.150><c> from</c><00:07:10.330><c> this</c>

00:07:10.560 --> 00:07:10.570 align:start position:0%
is because it doesn't suffer from this
 

00:07:10.570 --> 00:07:13.980 align:start position:0%
is because it doesn't suffer from this
ok<00:07:11.490><c> shared</c><00:07:12.490><c> libraries</c><00:07:13.030><c> are</c><00:07:13.180><c> critical</c><00:07:13.630><c> for</c>

00:07:13.980 --> 00:07:13.990 align:start position:0%
ok shared libraries are critical for
 

00:07:13.990 --> 00:07:16.740 align:start position:0%
ok shared libraries are critical for
deploying<00:07:14.410><c> code</c><00:07:14.740><c> and</c><00:07:15.039><c> it</c><00:07:15.759><c> contributes</c><00:07:16.600><c> to</c>

00:07:16.740 --> 00:07:16.750 align:start position:0%
deploying code and it contributes to
 

00:07:16.750 --> 00:07:18.900 align:start position:0%
deploying code and it contributes to
this<00:07:16.900><c> culture</c><00:07:17.259><c> of</c><00:07:17.289><c> code</c><00:07:17.590><c> copying</c><00:07:18.070><c> right</c><00:07:18.550><c> where</c>

00:07:18.900 --> 00:07:18.910 align:start position:0%
this culture of code copying right where
 

00:07:18.910 --> 00:07:20.580 align:start position:0%
this culture of code copying right where
if<00:07:19.180><c> you</c><00:07:19.419><c> can't</c><00:07:19.690><c> share</c><00:07:19.900><c> something</c><00:07:20.350><c> and</c><00:07:20.500><c> not</c>

00:07:20.580 --> 00:07:20.590 align:start position:0%
if you can't share something and not
 

00:07:20.590 --> 00:07:22.529 align:start position:0%
if you can't share something and not
break<00:07:20.860><c> it</c><00:07:21.070><c> you</c><00:07:21.460><c> want</c><00:07:21.669><c> to</c><00:07:21.759><c> own</c><00:07:21.910><c> it</c><00:07:21.940><c> you</c><00:07:22.240><c> want</c><00:07:22.449><c> to</c>

00:07:22.529 --> 00:07:22.539 align:start position:0%
break it you want to own it you want to
 

00:07:22.539 --> 00:07:24.570 align:start position:0%
break it you want to own it you want to
copy<00:07:22.750><c> it</c><00:07:22.930><c> in</c><00:07:23.139><c> yourself</c><00:07:23.289><c> so</c><00:07:23.800><c> in</c><00:07:23.949><c> fact</c><00:07:24.190><c> you</c><00:07:24.400><c> won't</c>

00:07:24.570 --> 00:07:24.580 align:start position:0%
copy it in yourself so in fact you won't
 

00:07:24.580 --> 00:07:27.090 align:start position:0%
copy it in yourself so in fact you won't
break<00:07:24.789><c> and</c><00:07:25.090><c> in</c><00:07:25.570><c> fact</c><00:07:25.840><c> if</c><00:07:26.110><c> you</c><00:07:26.500><c> have</c><00:07:26.860><c> many</c>

00:07:27.090 --> 00:07:27.100 align:start position:0%
break and in fact if you have many
 

00:07:27.100 --> 00:07:29.129 align:start position:0%
break and in fact if you have many
applications<00:07:27.820><c> using</c><00:07:28.150><c> many</c><00:07:28.419><c> large</c><00:07:28.660><c> frameworks</c>

00:07:29.129 --> 00:07:29.139 align:start position:0%
applications using many large frameworks
 

00:07:29.139 --> 00:07:30.840 align:start position:0%
applications using many large frameworks
and<00:07:29.289><c> they're</c><00:07:29.410><c> all</c><00:07:29.500><c> copied</c><00:07:30.010><c> you</c><00:07:30.490><c> can</c><00:07:30.639><c> imagine</c>

00:07:30.840 --> 00:07:30.850 align:start position:0%
and they're all copied you can imagine
 

00:07:30.850 --> 00:07:32.490 align:start position:0%
and they're all copied you can imagine
what<00:07:31.180><c> the</c><00:07:31.300><c> memory</c><00:07:31.479><c> footprint</c><00:07:31.900><c> of</c><00:07:32.050><c> your</c><00:07:32.169><c> system</c>

00:07:32.490 --> 00:07:32.500 align:start position:0%
what the memory footprint of your system
 

00:07:32.500 --> 00:07:37.620 align:start position:0%
what the memory footprint of your system
would<00:07:32.620><c> be</c><00:07:32.770><c> like</c><00:07:34.080><c> so</c><00:07:35.550><c> objective</c><00:07:36.550><c> C++</c><00:07:37.270><c> design</c>

00:07:37.620 --> 00:07:37.630 align:start position:0%
would be like so objective C++ design
 

00:07:37.630 --> 00:07:41.310 align:start position:0%
would be like so objective C++ design
points<00:07:38.580><c> peaceful</c><00:07:39.580><c> coexistence</c><00:07:39.930><c> right</c><00:07:40.930><c> we</c>

00:07:41.310 --> 00:07:41.320 align:start position:0%
points peaceful coexistence right we
 

00:07:41.320 --> 00:07:44.219 align:start position:0%
points peaceful coexistence right we
want<00:07:41.530><c> to</c><00:07:41.620><c> use</c><00:07:41.740><c> C++</c><00:07:42.370><c> as</c><00:07:42.550><c> the</c><00:07:42.669><c> base</c><00:07:42.880><c> and</c><00:07:43.229><c> the</c>

00:07:44.219 --> 00:07:44.229 align:start position:0%
want to use C++ as the base and the
 

00:07:44.229 --> 00:07:45.870 align:start position:0%
want to use C++ as the base and the
parser<00:07:44.740><c> has</c><00:07:44.770><c> been</c><00:07:45.010><c> modified</c><00:07:45.460><c> to</c><00:07:45.490><c> layer</c>

00:07:45.870 --> 00:07:45.880 align:start position:0%
parser has been modified to layer
 

00:07:45.880 --> 00:07:49.740 align:start position:0%
parser has been modified to layer
Objective<00:07:46.449><c> C</c><00:07:46.479><c> atop</c><00:07:47.199><c> C++</c><00:07:47.919><c> one</c><00:07:48.639><c> of</c><00:07:48.760><c> the</c><00:07:48.970><c> smartest</c>

00:07:49.740 --> 00:07:49.750 align:start position:0%
Objective C atop C++ one of the smartest
 

00:07:49.750 --> 00:07:52.110 align:start position:0%
Objective C atop C++ one of the smartest
things<00:07:49.840><c> I</c><00:07:50.110><c> think</c><00:07:50.169><c> we</c><00:07:50.440><c> did</c><00:07:50.680><c> was</c><00:07:50.949><c> many</c><00:07:51.729><c> years</c><00:07:52.000><c> ago</c>

00:07:52.110 --> 00:07:52.120 align:start position:0%
things I think we did was many years ago
 

00:07:52.120 --> 00:07:54.029 align:start position:0%
things I think we did was many years ago
was<00:07:52.539><c> we</c><00:07:52.690><c> implemented</c><00:07:53.229><c> Objective</c><00:07:53.680><c> C</c><00:07:53.710><c> in</c><00:07:53.919><c> the</c>

00:07:54.029 --> 00:07:54.039 align:start position:0%
was we implemented Objective C in the
 

00:07:54.039 --> 00:07:56.010 align:start position:0%
was we implemented Objective C in the
canoe<00:07:54.250><c> compiler</c><00:07:54.789><c> and</c><00:07:54.940><c> that</c><00:07:55.509><c> that</c><00:07:55.750><c> work</c>

00:07:56.010 --> 00:07:56.020 align:start position:0%
canoe compiler and that that work
 

00:07:56.020 --> 00:08:00.629 align:start position:0%
canoe compiler and that that work
happened<00:07:56.500><c> in</c><00:07:56.620><c> 88</c><00:07:56.919><c> roughly</c><00:07:57.490><c> and</c><00:07:59.370><c> that</c><00:08:00.370><c> work</c>

00:08:00.629 --> 00:08:00.639 align:start position:0%
happened in 88 roughly and that work
 

00:08:00.639 --> 00:08:02.820 align:start position:0%
happened in 88 roughly and that work
along<00:08:01.060><c> with</c><00:08:01.090><c> the</c><00:08:01.300><c> C++</c><00:08:01.960><c> work</c><00:08:02.229><c> that</c><00:08:02.440><c> was</c><00:08:02.560><c> going</c>

00:08:02.820 --> 00:08:02.830 align:start position:0%
along with the C++ work that was going
 

00:08:02.830 --> 00:08:05.850 align:start position:0%
along with the C++ work that was going
on<00:08:02.919><c> enabled</c><00:08:03.849><c> us</c><00:08:04.030><c> to</c><00:08:04.060><c> marry</c><00:08:04.510><c> them</c><00:08:04.870><c> with</c><00:08:05.530><c> fairly</c>

00:08:05.850 --> 00:08:05.860 align:start position:0%
on enabled us to marry them with fairly
 

00:08:05.860 --> 00:08:10.740 align:start position:0%
on enabled us to marry them with fairly
low<00:08:06.130><c> effort</c><00:08:08.580><c> both</c><00:08:09.580><c> runtime</c><00:08:10.060><c> systems</c><00:08:10.510><c> are</c>

00:08:10.740 --> 00:08:10.750 align:start position:0%
low effort both runtime systems are
 

00:08:10.750 --> 00:08:11.790 align:start position:0%
low effort both runtime systems are
unchanged

00:08:11.790 --> 00:08:11.800 align:start position:0%
unchanged
 

00:08:11.800 --> 00:08:14.040 align:start position:0%
unchanged
ok<00:08:12.310><c> the</c><00:08:12.460><c> native</c><00:08:12.729><c> ABI</c><00:08:13.030><c> the</c><00:08:13.210><c> semantics</c><00:08:13.870><c> and</c><00:08:13.960><c> the</c>

00:08:14.040 --> 00:08:14.050 align:start position:0%
ok the native ABI the semantics and the
 

00:08:14.050 --> 00:08:16.320 align:start position:0%
ok the native ABI the semantics and the
performance<00:08:14.710><c> that</c><00:08:14.770><c> you</c><00:08:14.949><c> expect</c><00:08:15.400><c> from</c><00:08:15.430><c> C++</c><00:08:16.150><c> is</c>

00:08:16.320 --> 00:08:16.330 align:start position:0%
performance that you expect from C++ is
 

00:08:16.330 --> 00:08:18.450 align:start position:0%
performance that you expect from C++ is
what<00:08:16.810><c> you</c><00:08:16.960><c> get</c><00:08:17.139><c> it's</c><00:08:17.710><c> not</c><00:08:17.979><c> like</c><00:08:18.250><c> we're</c>

00:08:18.450 --> 00:08:18.460 align:start position:0%
what you get it's not like we're
 

00:08:18.460 --> 00:08:20.640 align:start position:0%
what you get it's not like we're
changing<00:08:18.940><c> the</c><00:08:19.030><c> way</c><00:08:19.180><c> you</c><00:08:19.659><c> do</c><00:08:19.840><c> virtual</c><00:08:20.289><c> function</c>

00:08:20.640 --> 00:08:20.650 align:start position:0%
changing the way you do virtual function
 

00:08:20.650 --> 00:08:23.339 align:start position:0%
changing the way you do virtual function
dispatch<00:08:21.099><c> or</c><00:08:21.340><c> any</c><00:08:21.490><c> other</c><00:08:21.729><c> things</c><00:08:22.000><c> in</c><00:08:22.120><c> C++</c><00:08:22.690><c> we</c>

00:08:23.339 --> 00:08:23.349 align:start position:0%
dispatch or any other things in C++ we
 

00:08:23.349 --> 00:08:26.189 align:start position:0%
dispatch or any other things in C++ we
are<00:08:23.560><c> letting</c><00:08:24.159><c> C++</c><00:08:24.970><c> have</c><00:08:25.360><c> its</c><00:08:25.539><c> own</c><00:08:25.690><c> turf</c><00:08:25.960><c> and</c>

00:08:26.189 --> 00:08:26.199 align:start position:0%
are letting C++ have its own turf and
 

00:08:26.199 --> 00:08:27.810 align:start position:0%
are letting C++ have its own turf and
Objective<00:08:26.710><c> C</c><00:08:26.740><c> have</c><00:08:27.010><c> its</c><00:08:27.159><c> own</c><00:08:27.280><c> turf</c><00:08:27.520><c> and</c><00:08:27.760><c> we</c>

00:08:27.810 --> 00:08:27.820 align:start position:0%
Objective C have its own turf and we
 

00:08:27.820 --> 00:08:32.810 align:start position:0%
Objective C have its own turf and we
think<00:08:28.030><c> that</c><00:08:28.180><c> works</c><00:08:28.360><c> very</c><00:08:28.510><c> nicely</c><00:08:31.289><c> now</c>

00:08:32.810 --> 00:08:32.820 align:start position:0%
think that works very nicely now
 

00:08:32.820 --> 00:08:36.600 align:start position:0%
think that works very nicely now
subclassing<00:08:33.820><c> across</c><00:08:34.180><c> object</c><00:08:34.839><c> models</c><00:08:35.229><c> is</c><00:08:35.610><c> not</c>

00:08:36.600 --> 00:08:36.610 align:start position:0%
subclassing across object models is not
 

00:08:36.610 --> 00:08:38.790 align:start position:0%
subclassing across object models is not
supported<00:08:37.260><c> aggregation</c><00:08:38.260><c> we</c><00:08:38.380><c> think</c><00:08:38.620><c> works</c>

00:08:38.790 --> 00:08:38.800 align:start position:0%
supported aggregation we think works
 

00:08:38.800 --> 00:08:43.500 align:start position:0%
supported aggregation we think works
great<00:08:39.070><c> for</c><00:08:39.099><c> this</c><00:08:39.870><c> now</c><00:08:40.919><c> in</c><00:08:41.940><c> the</c><00:08:42.940><c> early</c><00:08:43.270><c> days</c>

00:08:43.500 --> 00:08:43.510 align:start position:0%
great for this now in the early days
 

00:08:43.510 --> 00:08:47.100 align:start position:0%
great for this now in the early days
when<00:08:44.140><c> we</c><00:08:45.029><c> used</c><00:08:46.029><c> to</c><00:08:46.150><c> present</c><00:08:46.570><c> this</c><00:08:46.690><c> language</c>

00:08:47.100 --> 00:08:47.110 align:start position:0%
when we used to present this language
 

00:08:47.110 --> 00:08:48.780 align:start position:0%
when we used to present this language
people<00:08:47.350><c> got</c><00:08:47.709><c> really</c><00:08:47.950><c> freaked</c><00:08:48.220><c> out</c><00:08:48.339><c> by</c><00:08:48.610><c> that</c>

00:08:48.780 --> 00:08:48.790 align:start position:0%
people got really freaked out by that
 

00:08:48.790 --> 00:08:51.510 align:start position:0%
people got really freaked out by that
they<00:08:49.000><c> said</c><00:08:49.209><c> God</c><00:08:49.810><c> you</c><00:08:49.870><c> can't</c><00:08:50.140><c> subclass</c><00:08:50.709><c> is</c><00:08:51.010><c> it</c>

00:08:51.510 --> 00:08:51.520 align:start position:0%
they said God you can't subclass is it
 

00:08:51.520 --> 00:08:53.579 align:start position:0%
they said God you can't subclass is it
really<00:08:51.730><c> useful</c><00:08:52.120><c> if</c><00:08:52.270><c> you</c><00:08:52.360><c> can't</c><00:08:52.600><c> subclass</c><00:08:53.110><c> well</c>

00:08:53.579 --> 00:08:53.589 align:start position:0%
really useful if you can't subclass well
 

00:08:53.589 --> 00:08:55.230 align:start position:0%
really useful if you can't subclass well
I<00:08:53.650><c> think</c><00:08:53.709><c> what's</c><00:08:54.220><c> happened</c><00:08:54.610><c> over</c><00:08:54.670><c> time</c><00:08:55.029><c> is</c>

00:08:55.230 --> 00:08:55.240 align:start position:0%
I think what's happened over time is
 

00:08:55.240 --> 00:08:57.060 align:start position:0%
I think what's happened over time is
people<00:08:55.450><c> actually</c><00:08:55.810><c> have</c><00:08:56.140><c> learned</c><00:08:56.410><c> through</c>

00:08:57.060 --> 00:08:57.070 align:start position:0%
people actually have learned through
 

00:08:57.070 --> 00:08:59.340 align:start position:0%
people actually have learned through
many<00:08:57.400><c> iterations</c><00:08:57.790><c> of</c><00:08:58.510><c> designing</c><00:08:58.990><c> object</c>

00:08:59.340 --> 00:08:59.350 align:start position:0%
many iterations of designing object
 

00:08:59.350 --> 00:09:02.699 align:start position:0%
many iterations of designing object
systems<00:08:59.709><c> that</c><00:09:00.279><c> inheritance</c><00:09:01.000><c> is</c><00:09:01.270><c> is</c><00:09:01.690><c> often</c><00:09:02.560><c> not</c>

00:09:02.699 --> 00:09:02.709 align:start position:0%
systems that inheritance is is often not
 

00:09:02.709 --> 00:09:04.290 align:start position:0%
systems that inheritance is is often not
the<00:09:02.890><c> best</c><00:09:03.100><c> tool</c><00:09:03.370><c> for</c><00:09:03.400><c> performing</c><00:09:03.730><c> something</c>

00:09:04.290 --> 00:09:04.300 align:start position:0%
the best tool for performing something
 

00:09:04.300 --> 00:09:06.360 align:start position:0%
the best tool for performing something
so<00:09:04.630><c> one</c><00:09:05.020><c> things</c><00:09:05.230><c> I'm</c><00:09:05.350><c> going</c><00:09:05.440><c> to</c><00:09:05.500><c> talk</c><00:09:05.709><c> about</c><00:09:06.130><c> is</c>

00:09:06.360 --> 00:09:06.370 align:start position:0%
so one things I'm going to talk about is
 

00:09:06.370 --> 00:09:07.470 align:start position:0%
so one things I'm going to talk about is
how<00:09:07.060><c> in</c>

00:09:07.470 --> 00:09:07.480 align:start position:0%
how in
 

00:09:07.480 --> 00:09:10.139 align:start position:0%
how in
Cocco<00:09:08.230><c> uses</c><00:09:08.529><c> delegation</c><00:09:09.250><c> composition</c><00:09:10.029><c> and</c>

00:09:10.139 --> 00:09:10.149 align:start position:0%
Cocco uses delegation composition and
 

00:09:10.149 --> 00:09:12.600 align:start position:0%
Cocco uses delegation composition and
aggregation<00:09:10.269><c> as</c><00:09:11.130><c> programming</c><00:09:12.130><c> idioms</c><00:09:12.430><c> and</c>

00:09:12.600 --> 00:09:12.610 align:start position:0%
aggregation as programming idioms and
 

00:09:12.610 --> 00:09:15.060 align:start position:0%
aggregation as programming idioms and
tools<00:09:12.850><c> which</c><00:09:13.540><c> in</c><00:09:13.810><c> fact</c><00:09:14.170><c> again</c><00:09:14.620><c> make</c><00:09:14.860><c> it</c><00:09:14.980><c> a</c>

00:09:15.060 --> 00:09:15.070 align:start position:0%
tools which in fact again make it a
 

00:09:15.070 --> 00:09:16.620 align:start position:0%
tools which in fact again make it a
natural<00:09:15.459><c> marriage</c><00:09:15.699><c> because</c><00:09:16.209><c> we</c><00:09:16.389><c> don't</c>

00:09:16.620 --> 00:09:16.630 align:start position:0%
natural marriage because we don't
 

00:09:16.630 --> 00:09:18.329 align:start position:0%
natural marriage because we don't
require<00:09:16.899><c> sub</c><00:09:17.260><c> classing</c><00:09:17.709><c> just</c><00:09:17.889><c> by</c><00:09:18.010><c> virtue</c><00:09:18.070><c> of</c>

00:09:18.329 --> 00:09:18.339 align:start position:0%
require sub classing just by virtue of
 

00:09:18.339 --> 00:09:22.410 align:start position:0%
require sub classing just by virtue of
our<00:09:18.550><c> dinette</c><00:09:18.880><c> dynamism</c><00:09:20.370><c> so</c><00:09:21.370><c> sub</c><00:09:22.089><c> classing</c>

00:09:22.410 --> 00:09:22.420 align:start position:0%
our dinette dynamism so sub classing
 

00:09:22.420 --> 00:09:25.050 align:start position:0%
our dinette dynamism so sub classing
isn't<00:09:22.660><c> supported</c><00:09:23.170><c> so</c><00:09:23.920><c> why</c><00:09:24.130><c> don't</c><00:09:24.490><c> we</c><00:09:24.550><c> unify</c>

00:09:25.050 --> 00:09:25.060 align:start position:0%
isn't supported so why don't we unify
 

00:09:25.060 --> 00:09:28.769 align:start position:0%
isn't supported so why don't we unify
the<00:09:25.120><c> object</c><00:09:25.630><c> models</c><00:09:26.430><c> people</c><00:09:27.430><c> sometimes</c><00:09:28.420><c> ask</c>

00:09:28.769 --> 00:09:28.779 align:start position:0%
the object models people sometimes ask
 

00:09:28.779 --> 00:09:31.769 align:start position:0%
the object models people sometimes ask
who<00:09:29.709><c> haven't</c><00:09:30.130><c> carefully</c><00:09:30.970><c> considered</c><00:09:31.510><c> some</c><00:09:31.750><c> of</c>

00:09:31.769 --> 00:09:31.779 align:start position:0%
who haven't carefully considered some of
 

00:09:31.779 --> 00:09:33.829 align:start position:0%
who haven't carefully considered some of
the<00:09:31.870><c> implications</c><00:09:32.589><c> why</c><00:09:32.920><c> don't</c><00:09:33.130><c> we</c><00:09:33.279><c> just</c>

00:09:33.829 --> 00:09:33.839 align:start position:0%
the implications why don't we just
 

00:09:33.839 --> 00:09:38.879 align:start position:0%
the implications why don't we just
change<00:09:35.040><c> C++</c><00:09:36.040><c> to</c><00:09:36.490><c> work</c><00:09:36.699><c> like</c><00:09:36.910><c> Objective</c><00:09:37.420><c> C</c><00:09:37.889><c> well</c>

00:09:38.879 --> 00:09:38.889 align:start position:0%
change C++ to work like Objective C well
 

00:09:38.889 --> 00:09:40.530 align:start position:0%
change C++ to work like Objective C well
there<00:09:39.040><c> are</c><00:09:39.130><c> systems</c><00:09:39.610><c> that</c><00:09:39.699><c> have</c><00:09:39.880><c> been</c><00:09:40.089><c> tried</c>

00:09:40.530 --> 00:09:40.540 align:start position:0%
there are systems that have been tried
 

00:09:40.540 --> 00:09:43.199 align:start position:0%
there are systems that have been tried
over<00:09:40.570><c> time</c><00:09:41.290><c> some</c><00:09:41.829><c> is</c><00:09:42.130><c> one</c><00:09:42.519><c> of</c><00:09:42.639><c> them</c><00:09:42.760><c> the</c><00:09:42.880><c> system</c>

00:09:43.199 --> 00:09:43.209 align:start position:0%
over time some is one of them the system
 

00:09:43.209 --> 00:09:45.150 align:start position:0%
over time some is one of them the system
object<00:09:43.570><c> model</c><00:09:43.899><c> that</c><00:09:44.050><c> Apple</c><00:09:44.500><c> and</c><00:09:44.589><c> IBM</c><00:09:44.680><c> worked</c>

00:09:45.150 --> 00:09:45.160 align:start position:0%
object model that Apple and IBM worked
 

00:09:45.160 --> 00:09:47.699 align:start position:0%
object model that Apple and IBM worked
on<00:09:45.310><c> years</c><00:09:45.850><c> ago</c><00:09:46.000><c> and</c><00:09:46.480><c> even</c><00:09:46.839><c> come</c><00:09:47.290><c> to</c><00:09:47.320><c> some</c>

00:09:47.699 --> 00:09:47.709 align:start position:0%
on years ago and even come to some
 

00:09:47.709 --> 00:09:50.189 align:start position:0%
on years ago and even come to some
extent<00:09:48.130><c> by</c><00:09:48.310><c> Microsoft</c><00:09:49.120><c> that</c><00:09:49.420><c> are</c><00:09:49.870><c> actually</c>

00:09:50.189 --> 00:09:50.199 align:start position:0%
extent by Microsoft that are actually
 

00:09:50.199 --> 00:09:52.920 align:start position:0%
extent by Microsoft that are actually
systems<00:09:50.709><c> designed</c><00:09:51.279><c> to</c><00:09:51.670><c> try</c><00:09:51.940><c> and</c><00:09:52.149><c> fix</c><00:09:52.480><c> some</c><00:09:52.899><c> of</c>

00:09:52.920 --> 00:09:52.930 align:start position:0%
systems designed to try and fix some of
 

00:09:52.930 --> 00:09:55.139 align:start position:0%
systems designed to try and fix some of
the<00:09:53.139><c> problems</c><00:09:53.170><c> with</c><00:09:53.889><c> deploying</c><00:09:54.220><c> C++</c><00:09:54.880><c> shared</c>

00:09:55.139 --> 00:09:55.149 align:start position:0%
the problems with deploying C++ shared
 

00:09:55.149 --> 00:09:57.360 align:start position:0%
the problems with deploying C++ shared
shared<00:09:55.690><c> objects</c><00:09:56.230><c> and</c><00:09:56.500><c> the</c><00:09:56.680><c> static</c><00:09:57.010><c> object</c>

00:09:57.360 --> 00:09:57.370 align:start position:0%
shared objects and the static object
 

00:09:57.370 --> 00:10:00.960 align:start position:0%
shared objects and the static object
model<00:09:57.699><c> it</c><00:09:58.360><c> turns</c><00:09:58.690><c> out</c><00:09:58.930><c> that</c><00:09:59.760><c> because</c><00:10:00.760><c> they</c>

00:10:00.960 --> 00:10:00.970 align:start position:0%
model it turns out that because they
 

00:10:00.970 --> 00:10:03.000 align:start position:0%
model it turns out that because they
were<00:10:01.060><c> unsuccessful</c><00:10:01.360><c> we</c><00:10:01.899><c> chose</c><00:10:02.110><c> not</c><00:10:02.320><c> to</c><00:10:02.380><c> to</c><00:10:02.860><c> go</c>

00:10:03.000 --> 00:10:03.010 align:start position:0%
were unsuccessful we chose not to to go
 

00:10:03.010 --> 00:10:05.129 align:start position:0%
were unsuccessful we chose not to to go
that<00:10:03.190><c> path</c><00:10:03.430><c> rather</c><00:10:03.910><c> Mary</c><00:10:04.360><c> Objective</c><00:10:04.959><c> C</c><00:10:04.990><c> and</c>

00:10:05.129 --> 00:10:05.139 align:start position:0%
that path rather Mary Objective C and
 

00:10:05.139 --> 00:10:08.730 align:start position:0%
that path rather Mary Objective C and
C++<00:10:05.500><c> as</c><00:10:06.070><c> we've</c><00:10:06.250><c> done</c><00:10:06.990><c> so</c><00:10:07.990><c> let's</c><00:10:08.440><c> go</c><00:10:08.589><c> through</c>

00:10:08.730 --> 00:10:08.740 align:start position:0%
C++ as we've done so let's go through
 

00:10:08.740 --> 00:10:12.269 align:start position:0%
C++ as we've done so let's go through
the<00:10:08.829><c> benefits</c><00:10:09.010><c> it's</c><00:10:09.639><c> portable</c><00:10:10.060><c> it's</c><00:10:11.279><c> amazing</c>

00:10:12.269 --> 00:10:12.279 align:start position:0%
the benefits it's portable it's amazing
 

00:10:12.279 --> 00:10:15.689 align:start position:0%
the benefits it's portable it's amazing
how<00:10:12.610><c> even</c><00:10:13.410><c> changing</c><00:10:14.410><c> initialization</c><00:10:15.370><c> order</c>

00:10:15.689 --> 00:10:15.699 align:start position:0%
how even changing initialization order
 

00:10:15.699 --> 00:10:17.579 align:start position:0%
how even changing initialization order
of<00:10:15.880><c> the</c><00:10:16.389><c> order</c><00:10:16.690><c> on</c><00:10:16.810><c> which</c><00:10:16.839><c> constructors</c><00:10:17.560><c> are</c>

00:10:17.579 --> 00:10:17.589 align:start position:0%
of the order on which constructors are
 

00:10:17.589 --> 00:10:20.250 align:start position:0%
of the order on which constructors are
run<00:10:17.920><c> that</c><00:10:18.699><c> that</c><00:10:19.149><c> breaks</c><00:10:19.660><c> some</c><00:10:19.899><c> of</c><00:10:19.930><c> you</c><00:10:20.110><c> guys</c>

00:10:20.250 --> 00:10:20.260 align:start position:0%
run that that breaks some of you guys
 

00:10:20.260 --> 00:10:22.259 align:start position:0%
run that that breaks some of you guys
out<00:10:20.529><c> there</c><00:10:20.560><c> we</c><00:10:20.920><c> I</c><00:10:21.160><c> work</c><00:10:21.579><c> in</c><00:10:21.699><c> the</c><00:10:21.819><c> tools</c><00:10:22.029><c> team</c>

00:10:22.259 --> 00:10:22.269 align:start position:0%
out there we I work in the tools team
 

00:10:22.269 --> 00:10:24.960 align:start position:0%
out there we I work in the tools team
where<00:10:22.449><c> we're</c><00:10:22.600><c> constantly</c><00:10:22.779><c> looking</c><00:10:23.380><c> at</c><00:10:23.970><c> easier</c>

00:10:24.960 --> 00:10:24.970 align:start position:0%
where we're constantly looking at easier
 

00:10:24.970 --> 00:10:26.519 align:start position:0%
where we're constantly looking at easier
ways<00:10:25.240><c> to</c><00:10:25.269><c> port</c><00:10:25.779><c> your</c><00:10:25.810><c> apps</c><00:10:26.110><c> and</c><00:10:26.350><c> what</c>

00:10:26.519 --> 00:10:26.529 align:start position:0%
ways to port your apps and what
 

00:10:26.529 --> 00:10:28.430 align:start position:0%
ways to port your apps and what
headbutts<00:10:26.949><c> you</c><00:10:27.069><c> bump</c><00:10:27.279><c> into</c><00:10:27.459><c> and</c>

00:10:28.430 --> 00:10:28.440 align:start position:0%
headbutts you bump into and
 

00:10:28.440 --> 00:10:31.319 align:start position:0%
headbutts you bump into and
initialization<00:10:29.440><c> order</c><00:10:30.130><c> isn't</c><00:10:30.430><c> something</c>

00:10:31.319 --> 00:10:31.329 align:start position:0%
initialization order isn't something
 

00:10:31.329 --> 00:10:33.210 align:start position:0%
initialization order isn't something
that<00:10:31.600><c> the</c><00:10:31.720><c> standard</c><00:10:32.139><c> dictates</c><00:10:32.560><c> that</c><00:10:32.889><c> is</c><00:10:33.069><c> it</c>

00:10:33.210 --> 00:10:33.220 align:start position:0%
that the standard dictates that is it
 

00:10:33.220 --> 00:10:35.280 align:start position:0%
that the standard dictates that is it
says<00:10:33.430><c> each</c><00:10:33.910><c> system</c><00:10:34.389><c> can</c><00:10:34.569><c> do</c><00:10:34.690><c> it</c><00:10:34.810><c> however</c><00:10:34.930><c> it</c>

00:10:35.280 --> 00:10:35.290 align:start position:0%
says each system can do it however it
 

00:10:35.290 --> 00:10:37.199 align:start position:0%
says each system can do it however it
wants<00:10:35.440><c> well</c><00:10:36.190><c> in</c><00:10:36.399><c> fact</c><00:10:36.639><c> by</c><00:10:36.760><c> the</c><00:10:36.790><c> letter</c><00:10:37.060><c> of</c><00:10:37.180><c> the</c>

00:10:37.199 --> 00:10:37.209 align:start position:0%
wants well in fact by the letter of the
 

00:10:37.209 --> 00:10:37.439 align:start position:0%
wants well in fact by the letter of the
law

00:10:37.439 --> 00:10:37.449 align:start position:0%
law
 

00:10:37.449 --> 00:10:40.500 align:start position:0%
law
we<00:10:37.750><c> we</c><00:10:38.110><c> work</c><00:10:38.260><c> just</c><00:10:38.470><c> fine</c><00:10:38.709><c> however</c><00:10:39.010><c> we</c><00:10:39.970><c> again</c>

00:10:40.500 --> 00:10:40.510 align:start position:0%
we we work just fine however we again
 

00:10:40.510 --> 00:10:42.540 align:start position:0%
we we work just fine however we again
break<00:10:40.930><c> some</c><00:10:41.139><c> of</c><00:10:41.260><c> your</c><00:10:41.380><c> code</c><00:10:41.589><c> because</c><00:10:42.040><c> we</c><00:10:42.279><c> don't</c>

00:10:42.540 --> 00:10:42.550 align:start position:0%
break some of your code because we don't
 

00:10:42.550 --> 00:10:45.449 align:start position:0%
break some of your code because we don't
do<00:10:42.730><c> it</c><00:10:42.910><c> in</c><00:10:43.089><c> a</c><00:10:44.079><c> specific</c><00:10:44.290><c> way</c><00:10:44.680><c> that</c><00:10:44.829><c> let's</c><00:10:45.339><c> say</c>

00:10:45.449 --> 00:10:45.459 align:start position:0%
do it in a specific way that let's say
 

00:10:45.459 --> 00:10:48.990 align:start position:0%
do it in a specific way that let's say
was<00:10:45.579><c> born</c><00:10:45.760><c> on</c><00:10:45.940><c> Windows</c><00:10:46.269><c> or</c><00:10:46.569><c> Linux</c><00:10:46.829><c> so</c><00:10:47.829><c> again</c><00:10:48.130><c> we</c>

00:10:48.990 --> 00:10:49.000 align:start position:0%
was born on Windows or Linux so again we
 

00:10:49.000 --> 00:10:51.360 align:start position:0%
was born on Windows or Linux so again we
want<00:10:49.300><c> to</c><00:10:49.360><c> make</c><00:10:49.660><c> things</c><00:10:50.230><c> portable</c><00:10:50.889><c> and</c><00:10:51.100><c> if</c>

00:10:51.360 --> 00:10:51.370 align:start position:0%
want to make things portable and if
 

00:10:51.370 --> 00:10:52.949 align:start position:0%
want to make things portable and if
initialization<00:10:52.060><c> order</c><00:10:52.240><c> is</c><00:10:52.300><c> a</c><00:10:52.360><c> problem</c><00:10:52.690><c> if</c><00:10:52.839><c> we</c>

00:10:52.949 --> 00:10:52.959 align:start position:0%
initialization order is a problem if we
 

00:10:52.959 --> 00:10:54.600 align:start position:0%
initialization order is a problem if we
change<00:10:53.170><c> the</c><00:10:53.290><c> way</c><00:10:53.410><c> dispatch</c><00:10:53.800><c> work</c><00:10:54.069><c> believe</c><00:10:54.430><c> me</c>

00:10:54.600 --> 00:10:54.610 align:start position:0%
change the way dispatch work believe me
 

00:10:54.610 --> 00:10:58.019 align:start position:0%
change the way dispatch work believe me
we<00:10:54.699><c> break</c><00:10:54.850><c> all</c><00:10:55.120><c> of</c><00:10:55.269><c> you</c><00:10:55.360><c> so</c><00:10:55.829><c> performance</c><00:10:57.029><c> the</c>

00:10:58.019 --> 00:10:58.029 align:start position:0%
we break all of you so performance the
 

00:10:58.029 --> 00:11:00.389 align:start position:0%
we break all of you so performance the
the<00:10:58.480><c> performance</c><00:10:58.899><c> of</c><00:10:59.319><c> an</c><00:10:59.560><c> application</c><00:11:00.220><c> is</c>

00:11:00.389 --> 00:11:00.399 align:start position:0%
the performance of an application is
 

00:11:00.399 --> 00:11:02.309 align:start position:0%
the performance of an application is
often<00:11:01.029><c> dictated</c><00:11:01.449><c> by</c><00:11:01.750><c> the</c><00:11:01.810><c> way</c><00:11:02.079><c> it</c><00:11:02.170><c> does</c>

00:11:02.309 --> 00:11:02.319 align:start position:0%
often dictated by the way it does
 

00:11:02.319 --> 00:11:03.780 align:start position:0%
often dictated by the way it does
dispatch<00:11:02.769><c> the</c><00:11:03.040><c> fine-grained</c><00:11:03.250><c> model</c>

00:11:03.780 --> 00:11:03.790 align:start position:0%
dispatch the fine-grained model
 

00:11:03.790 --> 00:11:05.100 align:start position:0%
dispatch the fine-grained model
coarse-grained<00:11:04.240><c> model</c><00:11:04.540><c> of</c><00:11:04.630><c> the</c><00:11:04.720><c> object</c>

00:11:05.100 --> 00:11:05.110 align:start position:0%
coarse-grained model of the object
 

00:11:05.110 --> 00:11:08.579 align:start position:0%
coarse-grained model of the object
orientation<00:11:05.529><c> and</c><00:11:06.329><c> objective-c</c><00:11:07.329><c> is</c><00:11:07.660><c> just</c>

00:11:08.579 --> 00:11:08.589 align:start position:0%
orientation and objective-c is just
 

00:11:08.589 --> 00:11:10.439 align:start position:0%
orientation and objective-c is just
designed<00:11:09.040><c> for</c><00:11:09.370><c> more</c><00:11:09.579><c> coarse-grained</c><00:11:10.000><c> mid</c>

00:11:10.439 --> 00:11:10.449 align:start position:0%
designed for more coarse-grained mid
 

00:11:10.449 --> 00:11:12.150 align:start position:0%
designed for more coarse-grained mid
grain<00:11:10.690><c> dynamism</c><00:11:11.260><c> and</c><00:11:11.649><c> not</c><00:11:11.829><c> the</c><00:11:12.010><c> very</c>

00:11:12.150 --> 00:11:12.160 align:start position:0%
grain dynamism and not the very
 

00:11:12.160 --> 00:11:14.400 align:start position:0%
grain dynamism and not the very
fine-grain<00:11:12.790><c> stuff</c><00:11:13.420><c> that</c><00:11:13.630><c> people</c><00:11:13.899><c> use</c><00:11:14.110><c> C++</c>

00:11:14.400 --> 00:11:14.410 align:start position:0%
fine-grain stuff that people use C++
 

00:11:14.410 --> 00:11:16.769 align:start position:0%
fine-grain stuff that people use C++
before<00:11:15.190><c> so</c><00:11:15.640><c> it</c><00:11:15.790><c> would</c><00:11:15.910><c> be</c><00:11:16.060><c> naive</c><00:11:16.449><c> to</c><00:11:16.750><c> think</c>

00:11:16.769 --> 00:11:16.779 align:start position:0%
before so it would be naive to think
 

00:11:16.779 --> 00:11:18.929 align:start position:0%
before so it would be naive to think
that<00:11:17.079><c> the</c><00:11:17.350><c> same</c><00:11:17.560><c> performance</c><00:11:18.010><c> considerations</c>

00:11:18.929 --> 00:11:18.939 align:start position:0%
that the same performance considerations
 

00:11:18.939 --> 00:11:20.790 align:start position:0%
that the same performance considerations
that<00:11:19.029><c> we</c><00:11:19.209><c> apply</c><00:11:19.480><c> to</c><00:11:19.510><c> a</c><00:11:19.630><c> dynamic</c><00:11:19.870><c> more</c>

00:11:20.790 --> 00:11:20.800 align:start position:0%
that we apply to a dynamic more
 

00:11:20.800 --> 00:11:21.780 align:start position:0%
that we apply to a dynamic more
coarse-grained<00:11:21.189><c> object</c>

00:11:21.780 --> 00:11:21.790 align:start position:0%
coarse-grained object
 

00:11:21.790 --> 00:11:25.230 align:start position:0%
coarse-grained object
apply<00:11:22.270><c> to</c><00:11:22.330><c> a</c><00:11:22.480><c> fine</c><00:11:22.750><c> grain</c><00:11:22.990><c> once</c><00:11:23.230><c> oh</c><00:11:23.730><c> and</c><00:11:24.730><c> and</c>

00:11:25.230 --> 00:11:25.240 align:start position:0%
apply to a fine grain once oh and and
 

00:11:25.240 --> 00:11:28.050 align:start position:0%
apply to a fine grain once oh and and
thirdly<00:11:25.570><c> we</c><00:11:26.290><c> want</c><00:11:26.530><c> to</c><00:11:26.650><c> be</c><00:11:26.770><c> pragmatic</c><00:11:27.060><c> someone</c>

00:11:28.050 --> 00:11:28.060 align:start position:0%
thirdly we want to be pragmatic someone
 

00:11:28.060 --> 00:11:30.840 align:start position:0%
thirdly we want to be pragmatic someone
said<00:11:28.240><c> to</c><00:11:28.270><c> me</c><00:11:28.390><c> outside</c><00:11:29.080><c> the</c><00:11:29.260><c> other</c><00:11:29.380><c> day</c><00:11:29.650><c> how</c><00:11:30.040><c> one</c>

00:11:30.840 --> 00:11:30.850 align:start position:0%
said to me outside the other day how one
 

00:11:30.850 --> 00:11:32.490 align:start position:0%
said to me outside the other day how one
of<00:11:30.970><c> the</c><00:11:31.120><c> beauties</c><00:11:31.570><c> of</c><00:11:31.600><c> coming</c><00:11:32.290><c> to</c><00:11:32.380><c> this</c>

00:11:32.490 --> 00:11:32.500 align:start position:0%
of the beauties of coming to this
 

00:11:32.500 --> 00:11:34.050 align:start position:0%
of the beauties of coming to this
conference<00:11:32.890><c> and</c><00:11:33.130><c> seeing</c><00:11:33.400><c> what</c><00:11:33.550><c> Apple</c><00:11:33.850><c> does</c>

00:11:34.050 --> 00:11:34.060 align:start position:0%
conference and seeing what Apple does
 

00:11:34.060 --> 00:11:36.810 align:start position:0%
conference and seeing what Apple does
and<00:11:34.390><c> seeing</c><00:11:34.600><c> Steve's</c><00:11:35.200><c> Keena</c><00:11:35.500><c> keynote</c><00:11:36.100><c> is</c><00:11:36.280><c> how</c>

00:11:36.810 --> 00:11:36.820 align:start position:0%
and seeing Steve's Keena keynote is how
 

00:11:36.820 --> 00:11:39.270 align:start position:0%
and seeing Steve's Keena keynote is how
we<00:11:37.080><c> we're</c><00:11:38.080><c> very</c><00:11:38.320><c> good</c><00:11:38.530><c> at</c><00:11:38.590><c> finding</c><00:11:38.890><c> the</c><00:11:39.130><c> sweet</c>

00:11:39.270 --> 00:11:39.280 align:start position:0%
we we're very good at finding the sweet
 

00:11:39.280 --> 00:11:41.640 align:start position:0%
we we're very good at finding the sweet
spot<00:11:39.540><c> right</c><00:11:40.540><c> and</c><00:11:40.750><c> that's</c><00:11:41.020><c> why</c><00:11:41.140><c> we're</c><00:11:41.320><c> able</c><00:11:41.410><c> to</c>

00:11:41.640 --> 00:11:41.650 align:start position:0%
spot right and that's why we're able to
 

00:11:41.650 --> 00:11:44.280 align:start position:0%
spot right and that's why we're able to
make<00:11:41.770><c> releases</c><00:11:42.250><c> on</c><00:11:42.340><c> a</c><00:11:42.370><c> yearly</c><00:11:42.640><c> basis</c><00:11:43.150><c> and</c><00:11:43.290><c> and</c>

00:11:44.280 --> 00:11:44.290 align:start position:0%
make releases on a yearly basis and and
 

00:11:44.290 --> 00:11:45.990 align:start position:0%
make releases on a yearly basis and and
show<00:11:44.560><c> you</c><00:11:44.620><c> guys</c><00:11:44.740><c> cool</c><00:11:45.070><c> stuff</c><00:11:45.340><c> is</c><00:11:45.520><c> because</c><00:11:45.820><c> we</c>

00:11:45.990 --> 00:11:46.000 align:start position:0%
show you guys cool stuff is because we
 

00:11:46.000 --> 00:11:47.580 align:start position:0%
show you guys cool stuff is because we
find<00:11:46.330><c> the</c><00:11:46.450><c> sweet</c><00:11:46.660><c> spot</c><00:11:46.690><c> and</c><00:11:47.200><c> I</c><00:11:47.380><c> think</c>

00:11:47.580 --> 00:11:47.590 align:start position:0%
find the sweet spot and I think
 

00:11:47.590 --> 00:11:49.740 align:start position:0%
find the sweet spot and I think
objective-c<00:11:48.070><c> is</c><00:11:48.160><c> a</c><00:11:48.280><c> c++</c><00:11:49.000><c> is</c><00:11:49.120><c> a</c><00:11:49.180><c> good</c><00:11:49.300><c> example</c>

00:11:49.740 --> 00:11:49.750 align:start position:0%
objective-c is a c++ is a good example
 

00:11:49.750 --> 00:11:50.070 align:start position:0%
objective-c is a c++ is a good example
of<00:11:49.780><c> that</c>

00:11:50.070 --> 00:11:50.080 align:start position:0%
of that
 

00:11:50.080 --> 00:11:54.120 align:start position:0%
of that
it's<00:11:50.320><c> pragmatic</c><00:11:50.980><c> and</c><00:11:51.100><c> it</c><00:11:51.190><c> works</c><00:11:51.400><c> so</c><00:11:52.860><c> now</c><00:11:53.860><c> let's</c>

00:11:54.120 --> 00:11:54.130 align:start position:0%
it's pragmatic and it works so now let's
 

00:11:54.130 --> 00:11:55.590 align:start position:0%
it's pragmatic and it works so now let's
go<00:11:54.280><c> into</c><00:11:54.310><c> the</c><00:11:54.520><c> code</c><00:11:54.760><c> section</c><00:11:55.210><c> of</c><00:11:55.330><c> the</c><00:11:55.420><c> talk</c>

00:11:55.590 --> 00:11:55.600 align:start position:0%
go into the code section of the talk
 

00:11:55.600 --> 00:12:00.360 align:start position:0%
go into the code section of the talk
here<00:11:56.260><c> is</c><00:11:56.470><c> hello</c><00:11:57.250><c> world</c><00:11:57.520><c> in</c><00:11:57.790><c> four</c><00:11:58.360><c> dialects</c><00:11:59.370><c> you</c>

00:12:00.360 --> 00:12:00.370 align:start position:0%
here is hello world in four dialects you
 

00:12:00.370 --> 00:12:03.450 align:start position:0%
here is hello world in four dialects you
have<00:12:00.550><c> the</c><00:12:00.790><c> first</c><00:12:01.350><c> header</c><00:12:02.350><c> files</c><00:12:02.650><c> stood</c><00:12:03.280><c> I</c><00:12:03.430><c> oh</c>

00:12:03.450 --> 00:12:03.460 align:start position:0%
have the first header files stood I oh
 

00:12:03.460 --> 00:12:04.890 align:start position:0%
have the first header files stood I oh
you<00:12:03.970><c> guys</c><00:12:04.090><c> are</c><00:12:04.270><c> all</c><00:12:04.360><c> familiar</c><00:12:04.510><c> with</c><00:12:04.810><c> that</c>

00:12:04.890 --> 00:12:04.900 align:start position:0%
you guys are all familiar with that
 

00:12:04.900 --> 00:12:06.030 align:start position:0%
you guys are all familiar with that
there's<00:12:05.290><c> iostream</c>

00:12:06.030 --> 00:12:06.040 align:start position:0%
there's iostream
 

00:12:06.040 --> 00:12:08.010 align:start position:0%
there's iostream
and<00:12:06.220><c> then</c><00:12:06.310><c> there's</c><00:12:06.490><c> foundation</c><00:12:07.060><c> so</c><00:12:07.540><c> you</c><00:12:07.840><c> can</c>

00:12:08.010 --> 00:12:08.020 align:start position:0%
and then there's foundation so you can
 

00:12:08.020 --> 00:12:10.140 align:start position:0%
and then there's foundation so you can
see<00:12:08.200><c> the</c><00:12:08.320><c> standard</c><00:12:08.710><c> printf</c><00:12:09.130><c> hello</c><00:12:09.250><c> world</c><00:12:09.640><c> you</c>

00:12:10.140 --> 00:12:10.150 align:start position:0%
see the standard printf hello world you
 

00:12:10.150 --> 00:12:12.270 align:start position:0%
see the standard printf hello world you
can<00:12:10.330><c> see</c><00:12:10.510><c> the</c><00:12:10.720><c> C++</c><00:12:11.350><c> version</c><00:12:11.560><c> it's</c><00:12:12.010><c> in</c><00:12:12.130><c> all</c><00:12:12.250><c> the</c>

00:12:12.270 --> 00:12:12.280 align:start position:0%
can see the C++ version it's in all the
 

00:12:12.280 --> 00:12:15.870 align:start position:0%
can see the C++ version it's in all the
C++<00:12:12.520><c> books</c><00:12:13.240><c> then</c><00:12:13.870><c> there's</c><00:12:14.200><c> a</c><00:12:14.290><c> couple</c><00:12:14.500><c> a</c><00:12:15.250><c> couple</c>

00:12:15.870 --> 00:12:15.880 align:start position:0%
C++ books then there's a couple a couple
 

00:12:15.880 --> 00:12:17.070 align:start position:0%
C++ books then there's a couple a couple
more<00:12:16.000><c> statements</c><00:12:16.450><c> that</c><00:12:16.510><c> give</c><00:12:16.720><c> you</c><00:12:16.900><c> the</c>

00:12:17.070 --> 00:12:17.080 align:start position:0%
more statements that give you the
 

00:12:17.080 --> 00:12:19.380 align:start position:0%
more statements that give you the
objective-c<00:12:17.800><c> version</c><00:12:18.280><c> now</c><00:12:18.400><c> that's</c><00:12:19.030><c> string</c>

00:12:19.380 --> 00:12:19.390 align:start position:0%
objective-c version now that's string
 

00:12:19.390 --> 00:12:20.880 align:start position:0%
objective-c version now that's string
constant<00:12:19.930><c> for</c><00:12:20.080><c> those</c><00:12:20.200><c> of</c><00:12:20.380><c> you</c><00:12:20.500><c> who</c><00:12:20.650><c> haven't</c>

00:12:20.880 --> 00:12:20.890 align:start position:0%
constant for those of you who haven't
 

00:12:20.890 --> 00:12:23.150 align:start position:0%
constant for those of you who haven't
seen<00:12:21.070><c> Objective</c><00:12:21.610><c> C</c><00:12:21.640><c> a</c><00:12:21.940><c> string</c><00:12:22.540><c> constant</c>

00:12:23.150 --> 00:12:23.160 align:start position:0%
seen Objective C a string constant
 

00:12:23.160 --> 00:12:27.930 align:start position:0%
seen Objective C a string constant
preceded<00:12:24.160><c> by</c><00:12:24.190><c> an</c><00:12:24.430><c> @</c><00:12:24.550><c> sign</c><00:12:24.820><c> is</c><00:12:25.860><c> a</c><00:12:26.940><c> constant</c>

00:12:27.930 --> 00:12:27.940 align:start position:0%
preceded by an @ sign is a constant
 

00:12:27.940 --> 00:12:30.060 align:start position:0%
preceded by an @ sign is a constant
string<00:12:28.180><c> object</c><00:12:28.660><c> the</c><00:12:29.560><c> compiler</c><00:12:30.010><c> is</c>

00:12:30.060 --> 00:12:30.070 align:start position:0%
string object the compiler is
 

00:12:30.070 --> 00:12:32.700 align:start position:0%
string object the compiler is
responsible<00:12:30.700><c> for</c><00:12:30.730><c> creating</c><00:12:31.000><c> it</c><00:12:31.420><c> and</c><00:12:31.560><c> you</c><00:12:32.560><c> can</c>

00:12:32.700 --> 00:12:32.710 align:start position:0%
responsible for creating it and you can
 

00:12:32.710 --> 00:12:34.950 align:start position:0%
responsible for creating it and you can
see<00:12:32.860><c> it's</c><00:12:33.010><c> initialized</c><00:12:33.700><c> there</c><00:12:33.970><c> and</c><00:12:34.180><c> then</c>

00:12:34.950 --> 00:12:34.960 align:start position:0%
see it's initialized there and then
 

00:12:34.960 --> 00:12:37.380 align:start position:0%
see it's initialized there and then
there's<00:12:35.200><c> the</c><00:12:35.320><c> combination</c><00:12:35.980><c> of</c><00:12:36.100><c> them</c><00:12:36.360><c> which</c><00:12:37.360><c> is</c>

00:12:37.380 --> 00:12:37.390 align:start position:0%
there's the combination of them which is
 

00:12:37.390 --> 00:12:39.570 align:start position:0%
there's the combination of them which is
pretty<00:12:37.570><c> seamless</c><00:12:38.200><c> so</c><00:12:38.350><c> you</c><00:12:38.410><c> have</c><00:12:38.650><c> standard</c><00:12:39.400><c> out</c>

00:12:39.570 --> 00:12:39.580 align:start position:0%
pretty seamless so you have standard out
 

00:12:39.580 --> 00:12:43.500 align:start position:0%
pretty seamless so you have standard out
taking<00:12:40.210><c> as</c><00:12:40.360><c> output</c><00:12:41.220><c> the</c><00:12:42.220><c> C</c><00:12:42.640><c> string</c><00:12:42.940><c> coming</c>

00:12:43.500 --> 00:12:43.510 align:start position:0%
taking as output the C string coming
 

00:12:43.510 --> 00:12:46.980 align:start position:0%
taking as output the C string coming
from<00:12:43.630><c> the</c><00:12:43.750><c> ejecta</c><00:12:44.110><c> C</c><00:12:44.730><c> string</c><00:12:45.730><c> object</c><00:12:46.210><c> and</c><00:12:46.360><c> then</c>

00:12:46.980 --> 00:12:46.990 align:start position:0%
from the ejecta C string object and then
 

00:12:46.990 --> 00:12:48.810 align:start position:0%
from the ejecta C string object and then
outputting<00:12:47.800><c> the</c><00:12:47.830><c> plus</c><00:12:48.070><c> plus</c><00:12:48.310><c> for</c><00:12:48.340><c> the</c><00:12:48.640><c> last</c>

00:12:48.810 --> 00:12:48.820 align:start position:0%
outputting the plus plus for the last
 

00:12:48.820 --> 00:12:50.310 align:start position:0%
outputting the plus plus for the last
version<00:12:49.240><c> so</c><00:12:49.480><c> you</c><00:12:49.570><c> could</c><00:12:49.690><c> see</c><00:12:49.900><c> that</c><00:12:50.080><c> that</c>

00:12:50.310 --> 00:12:50.320 align:start position:0%
version so you could see that that
 

00:12:50.320 --> 00:12:55.110 align:start position:0%
version so you could see that that
that's<00:12:51.010><c> fairly</c><00:12:51.780><c> easy</c><00:12:52.780><c> to</c><00:12:52.990><c> program</c><00:12:53.850><c> so</c><00:12:54.850><c> here's</c>

00:12:55.110 --> 00:12:55.120 align:start position:0%
that's fairly easy to program so here's
 

00:12:55.120 --> 00:12:57.600 align:start position:0%
that's fairly easy to program so here's
just<00:12:55.210><c> how</c><00:12:55.750><c> you</c><00:12:55.810><c> compile</c><00:12:56.380><c> it</c><00:12:56.650><c> just</c><00:12:57.220><c> to</c><00:12:57.310><c> show</c><00:12:57.550><c> you</c>

00:12:57.600 --> 00:12:57.610 align:start position:0%
just how you compile it just to show you
 

00:12:57.610 --> 00:13:01.140 align:start position:0%
just how you compile it just to show you
that<00:12:57.940><c> the</c><00:12:58.060><c> file</c><00:12:58.330><c> the</c><00:12:58.930><c> suffix</c><00:12:59.380><c> is</c><00:12:59.500><c> dot</c><00:12:59.800><c> mm</c><00:13:00.250><c> we</c>

00:13:01.140 --> 00:13:01.150 align:start position:0%
that the file the suffix is dot mm we
 

00:13:01.150 --> 00:13:02.550 align:start position:0%
that the file the suffix is dot mm we
don't<00:13:01.180><c> have</c><00:13:01.360><c> to</c><00:13:01.450><c> get</c><00:13:01.570><c> into</c><00:13:01.780><c> the</c><00:13:01.900><c> details</c><00:13:02.260><c> of</c>

00:13:02.550 --> 00:13:02.560 align:start position:0%
don't have to get into the details of
 

00:13:02.560 --> 00:13:05.550 align:start position:0%
don't have to get into the details of
why<00:13:02.710><c> it's</c><00:13:02.860><c> called</c><00:13:03.010><c> mm</c><00:13:03.850><c> but</c><00:13:04.450><c> it</c><00:13:04.960><c> contains</c><00:13:05.350><c> the</c>

00:13:05.550 --> 00:13:05.560 align:start position:0%
why it's called mm but it contains the
 

00:13:05.560 --> 00:13:08.250 align:start position:0%
why it's called mm but it contains the
mix<00:13:05.740><c> languages</c><00:13:06.280><c> and</c><00:13:06.600><c> it's</c><00:13:07.600><c> linking</c><00:13:07.960><c> against</c>

00:13:08.250 --> 00:13:08.260 align:start position:0%
mix languages and it's linking against
 

00:13:08.260 --> 00:13:10.110 align:start position:0%
mix languages and it's linking against
the<00:13:08.350><c> standard</c><00:13:08.740><c> C++</c><00:13:08.890><c> library</c><00:13:09.340><c> which</c><00:13:09.970><c> is</c><00:13:10.090><c> a</c>

00:13:10.110 --> 00:13:10.120 align:start position:0%
the standard C++ library which is a
 

00:13:10.120 --> 00:13:12.150 align:start position:0%
the standard C++ library which is a
static<00:13:10.420><c> library</c><00:13:10.750><c> not</c><00:13:11.200><c> a</c><00:13:11.230><c> shared</c><00:13:11.500><c> library</c><00:13:11.710><c> and</c>

00:13:12.150 --> 00:13:12.160 align:start position:0%
static library not a shared library and
 

00:13:12.160 --> 00:13:13.830 align:start position:0%
static library not a shared library and
it's<00:13:12.520><c> linking</c><00:13:12.880><c> against</c><00:13:13.180><c> the</c><00:13:13.360><c> frameworks</c>

00:13:13.830 --> 00:13:13.840 align:start position:0%
it's linking against the frameworks
 

00:13:13.840 --> 00:13:16.830 align:start position:0%
it's linking against the frameworks
other<00:13:14.440><c> foundation</c><00:13:14.980><c> framework</c><00:13:15.190><c> so</c><00:13:15.840><c> pretty</c>

00:13:16.830 --> 00:13:16.840 align:start position:0%
other foundation framework so pretty
 

00:13:16.840 --> 00:13:19.290 align:start position:0%
other foundation framework so pretty
easy<00:13:16.960><c> stuff</c><00:13:17.290><c> now</c><00:13:17.830><c> again</c><00:13:18.460><c> one</c><00:13:18.670><c> detail</c><00:13:19.060><c> right</c>

00:13:19.290 --> 00:13:19.300 align:start position:0%
easy stuff now again one detail right
 

00:13:19.300 --> 00:13:21.060 align:start position:0%
easy stuff now again one detail right
now<00:13:19.600><c> we're</c><00:13:19.840><c> shipping</c><00:13:20.260><c> the</c><00:13:20.380><c> standard</c><00:13:20.770><c> C++</c>

00:13:21.060 --> 00:13:21.070 align:start position:0%
now we're shipping the standard C++
 

00:13:21.070 --> 00:13:23.610 align:start position:0%
now we're shipping the standard C++
library<00:13:21.520><c> as</c><00:13:22.150><c> what</c><00:13:22.750><c> we</c><00:13:22.870><c> call</c><00:13:23.050><c> an</c><00:13:23.170><c> archive</c>

00:13:23.610 --> 00:13:23.620 align:start position:0%
library as what we call an archive
 

00:13:23.620 --> 00:13:25.860 align:start position:0%
library as what we call an archive
library<00:13:23.830><c> a</c><00:13:24.100><c> non-shared</c><00:13:24.700><c> library</c><00:13:25.180><c> so</c><00:13:25.570><c> if</c><00:13:25.690><c> you</c>

00:13:25.860 --> 00:13:25.870 align:start position:0%
library a non-shared library so if you
 

00:13:25.870 --> 00:13:28.470 align:start position:0%
library a non-shared library so if you
look<00:13:26.170><c> at</c><00:13:26.350><c> that</c><00:13:26.610><c> executable</c><00:13:27.610><c> it's</c><00:13:28.090><c> actually</c>

00:13:28.470 --> 00:13:28.480 align:start position:0%
look at that executable it's actually
 

00:13:28.480 --> 00:13:30.420 align:start position:0%
look at that executable it's actually
fairly<00:13:28.720><c> big</c><00:13:29.080><c> it</c><00:13:29.260><c> contains</c><00:13:29.650><c> the</c><00:13:30.160><c> whole</c>

00:13:30.420 --> 00:13:30.430 align:start position:0%
fairly big it contains the whole
 

00:13:30.430 --> 00:13:33.690 align:start position:0%
fairly big it contains the whole
standard<00:13:31.180><c> C++</c><00:13:31.480><c> library</c><00:13:32.490><c> contained</c><00:13:33.490><c> within</c>

00:13:33.690 --> 00:13:33.700 align:start position:0%
standard C++ library contained within
 

00:13:33.700 --> 00:13:34.790 align:start position:0%
standard C++ library contained within
the

00:13:34.790 --> 00:13:34.800 align:start position:0%
the
 

00:13:34.800 --> 00:13:36.650 align:start position:0%
the
the<00:13:35.280><c> hello</c><00:13:35.550><c> world</c><00:13:35.820><c> in</c><00:13:36.090><c> a</c><00:13:36.330><c> future</c><00:13:36.630><c> release</c>

00:13:36.650 --> 00:13:36.660 align:start position:0%
the hello world in a future release
 

00:13:36.660 --> 00:13:39.110 align:start position:0%
the hello world in a future release
we're<00:13:37.080><c> going</c><00:13:37.200><c> to</c><00:13:37.290><c> be</c><00:13:37.550><c> releasing</c><00:13:38.550><c> a</c><00:13:38.820><c> shared</c>

00:13:39.110 --> 00:13:39.120 align:start position:0%
we're going to be releasing a shared
 

00:13:39.120 --> 00:13:43.610 align:start position:0%
we're going to be releasing a shared
version<00:13:39.690><c> of</c><00:13:39.810><c> that</c><00:13:41.840><c> now</c><00:13:42.840><c> I</c><00:13:42.870><c> want</c><00:13:43.140><c> to</c><00:13:43.170><c> go</c><00:13:43.290><c> through</c>

00:13:43.610 --> 00:13:43.620 align:start position:0%
version of that now I want to go through
 

00:13:43.620 --> 00:13:48.200 align:start position:0%
version of that now I want to go through
some<00:13:44.060><c> some</c><00:13:45.350><c> you</c><00:13:46.350><c> know</c><00:13:46.470><c> just</c><00:13:46.500><c> syntactic</c><00:13:47.250><c> idioms</c>

00:13:48.200 --> 00:13:48.210 align:start position:0%
some some you know just syntactic idioms
 

00:13:48.210 --> 00:13:49.700 align:start position:0%
some some you know just syntactic idioms
and<00:13:48.570><c> I</c><00:13:48.660><c> also</c><00:13:48.810><c> want</c><00:13:49.050><c> to</c><00:13:49.080><c> go</c><00:13:49.230><c> through</c><00:13:49.470><c> some</c>

00:13:49.700 --> 00:13:49.710 align:start position:0%
and I also want to go through some
 

00:13:49.710 --> 00:13:51.770 align:start position:0%
and I also want to go through some
terminology<00:13:50.520><c> here's</c><00:13:50.970><c> what</c><00:13:51.180><c> a</c><00:13:51.210><c> class</c><00:13:51.510><c> looks</c>

00:13:51.770 --> 00:13:51.780 align:start position:0%
terminology here's what a class looks
 

00:13:51.780 --> 00:13:53.990 align:start position:0%
terminology here's what a class looks
like<00:13:51.960><c> at</c><00:13:52.170><c> interface</c><00:13:52.650><c> so</c><00:13:53.280><c> let's</c><00:13:53.550><c> get</c><00:13:53.730><c> the</c><00:13:53.880><c> @</c>

00:13:53.990 --> 00:13:54.000 align:start position:0%
like at interface so let's get the @
 

00:13:54.000 --> 00:13:55.550 align:start position:0%
like at interface so let's get the @
stuff<00:13:54.360><c> out</c><00:13:54.510><c> of</c><00:13:54.540><c> the</c><00:13:54.750><c> way</c><00:13:54.780><c> why</c><00:13:55.200><c> do</c><00:13:55.260><c> we</c><00:13:55.380><c> use</c><00:13:55.530><c> that</c>

00:13:55.550 --> 00:13:55.560 align:start position:0%
stuff out of the way why do we use that
 

00:13:55.560 --> 00:13:58.430 align:start position:0%
stuff out of the way why do we use that
the<00:13:56.310><c> reason</c><00:13:56.700><c> we</c><00:13:57.090><c> prefix</c><00:13:57.660><c> our</c><00:13:57.810><c> keywords</c><00:13:58.260><c> with</c>

00:13:58.430 --> 00:13:58.440 align:start position:0%
the reason we prefix our keywords with
 

00:13:58.440 --> 00:14:00.500 align:start position:0%
the reason we prefix our keywords with
AD<00:13:58.680><c> is</c><00:13:58.920><c> we</c><00:13:59.310><c> didn't</c><00:13:59.610><c> want</c><00:13:59.790><c> to</c><00:13:59.880><c> break</c><00:14:00.000><c> existing</c>

00:14:00.500 --> 00:14:00.510 align:start position:0%
AD is we didn't want to break existing
 

00:14:00.510 --> 00:14:02.510 align:start position:0%
AD is we didn't want to break existing
code<00:14:00.750><c> it's</c><00:14:01.140><c> that</c><00:14:01.320><c> simple</c><00:14:01.560><c> you</c><00:14:02.190><c> know</c><00:14:02.280><c> some</c>

00:14:02.510 --> 00:14:02.520 align:start position:0%
code it's that simple you know some
 

00:14:02.520 --> 00:14:04.490 align:start position:0%
code it's that simple you know some
people<00:14:02.670><c> get</c><00:14:03.030><c> freaked</c><00:14:03.270><c> out</c><00:14:03.390><c> by</c><00:14:03.480><c> the</c><00:14:03.720><c> @</c><00:14:03.930><c> sign</c><00:14:04.200><c> but</c>

00:14:04.490 --> 00:14:04.500 align:start position:0%
people get freaked out by the @ sign but
 

00:14:04.500 --> 00:14:06.020 align:start position:0%
people get freaked out by the @ sign but
that<00:14:04.650><c> is</c><00:14:04.830><c> the</c><00:14:05.070><c> reason</c><00:14:05.220><c> it's</c><00:14:05.520><c> we</c><00:14:05.640><c> don't</c><00:14:05.820><c> want</c><00:14:05.970><c> to</c>

00:14:06.020 --> 00:14:06.030 align:start position:0%
that is the reason it's we don't want to
 

00:14:06.030 --> 00:14:07.760 align:start position:0%
that is the reason it's we don't want to
break<00:14:06.150><c> code</c><00:14:06.360><c> because</c><00:14:06.750><c> code</c><00:14:07.290><c> contains</c>

00:14:07.760 --> 00:14:07.770 align:start position:0%
break code because code contains
 

00:14:07.770 --> 00:14:11.360 align:start position:0%
break code because code contains
interface<00:14:08.490><c> code</c><00:14:09.120><c> contains</c><00:14:09.630><c> end</c><00:14:10.170><c> and</c><00:14:11.130><c> code</c>

00:14:11.360 --> 00:14:11.370 align:start position:0%
interface code contains end and code
 

00:14:11.370 --> 00:14:14.030 align:start position:0%
interface code contains end and code
contains<00:14:11.790><c> other</c><00:14:12.260><c> keywords</c><00:14:13.260><c> that</c><00:14:13.500><c> we</c><00:14:13.650><c> wanted</c>

00:14:14.030 --> 00:14:14.040 align:start position:0%
contains other keywords that we wanted
 

00:14:14.040 --> 00:14:17.060 align:start position:0%
contains other keywords that we wanted
to<00:14:14.160><c> publish</c><00:14:14.610><c> so</c><00:14:15.110><c> that's</c><00:14:16.110><c> why</c><00:14:16.260><c> we</c><00:14:16.410><c> use</c><00:14:16.440><c> at</c><00:14:16.770><c> and</c>

00:14:17.060 --> 00:14:17.070 align:start position:0%
to publish so that's why we use at and
 

00:14:17.070 --> 00:14:19.910 align:start position:0%
to publish so that's why we use at and
it's<00:14:17.640><c> a</c><00:14:17.790><c> single</c><00:14:18.150><c> inheritance</c><00:14:18.900><c> model</c><00:14:19.080><c> so</c><00:14:19.500><c> right</c>

00:14:19.910 --> 00:14:19.920 align:start position:0%
it's a single inheritance model so right
 

00:14:19.920 --> 00:14:22.370 align:start position:0%
it's a single inheritance model so right
there<00:14:20.190><c> the</c><00:14:20.460><c> supercut</c><00:14:21.330><c> the</c><00:14:21.510><c> class</c><00:14:21.720><c> is</c><00:14:21.900><c> my</c><00:14:22.050><c> class</c>

00:14:22.370 --> 00:14:22.380 align:start position:0%
there the supercut the class is my class
 

00:14:22.380 --> 00:14:25.670 align:start position:0%
there the supercut the class is my class
the<00:14:22.590><c> super</c><00:14:22.860><c> class</c><00:14:23.070><c> is</c><00:14:23.280><c> nsobject</c><00:14:23.990><c> okay</c><00:14:24.990><c> for</c>

00:14:25.670 --> 00:14:25.680 align:start position:0%
the super class is nsobject okay for
 

00:14:25.680 --> 00:14:28.700 align:start position:0%
the super class is nsobject okay for
purposes<00:14:26.010><c> of</c><00:14:26.070><c> this</c><00:14:26.340><c> discussion</c><00:14:27.710><c> objective-c</c>

00:14:28.700 --> 00:14:28.710 align:start position:0%
purposes of this discussion objective-c
 

00:14:28.710 --> 00:14:30.440 align:start position:0%
purposes of this discussion objective-c
is<00:14:28.830><c> single</c><00:14:29.250><c> rooted</c><00:14:29.610><c> it</c><00:14:29.760><c> turns</c><00:14:30.000><c> out</c><00:14:30.180><c> that</c><00:14:30.330><c> you</c>

00:14:30.440 --> 00:14:30.450 align:start position:0%
is single rooted it turns out that you
 

00:14:30.450 --> 00:14:32.540 align:start position:0%
is single rooted it turns out that you
can<00:14:30.690><c> provide</c><00:14:31.170><c> your</c><00:14:31.440><c> own</c><00:14:31.500><c> root</c><00:14:31.800><c> class</c><00:14:32.040><c> but</c>

00:14:32.540 --> 00:14:32.550 align:start position:0%
can provide your own root class but
 

00:14:32.550 --> 00:14:34.130 align:start position:0%
can provide your own root class but
that's<00:14:32.730><c> something</c><00:14:33.060><c> for</c><00:14:33.090><c> an</c><00:14:33.360><c> advanced</c><00:14:33.690><c> session</c>

00:14:34.130 --> 00:14:34.140 align:start position:0%
that's something for an advanced session
 

00:14:34.140 --> 00:14:36.770 align:start position:0%
that's something for an advanced session
that<00:14:34.520><c> that</c><00:14:35.520><c> is</c><00:14:35.610><c> a</c><00:14:35.640><c> topic</c><00:14:35.970><c> for</c><00:14:36.090><c> another</c><00:14:36.270><c> day</c><00:14:36.570><c> so</c>

00:14:36.770 --> 00:14:36.780 align:start position:0%
that that is a topic for another day so
 

00:14:36.780 --> 00:14:41.090 align:start position:0%
that that is a topic for another day so
oh<00:14:38.330><c> just</c><00:14:39.330><c> just</c><00:14:39.690><c> briefly</c><00:14:40.020><c> instance</c><00:14:40.590><c> variables</c>

00:14:41.090 --> 00:14:41.100 align:start position:0%
oh just just briefly instance variables
 

00:14:41.100 --> 00:14:43.490 align:start position:0%
oh just just briefly instance variables
the<00:14:41.250><c> term</c><00:14:41.580><c> instance</c><00:14:42.120><c> variable</c><00:14:42.690><c> is</c><00:14:42.930><c> a</c><00:14:43.050><c> small</c>

00:14:43.490 --> 00:14:43.500 align:start position:0%
the term instance variable is a small
 

00:14:43.500 --> 00:14:48.320 align:start position:0%
the term instance variable is a small
talk<00:14:43.820><c> jargon</c><00:14:44.820><c> or</c><00:14:44.940><c> terminology</c><00:14:45.680><c> in</c><00:14:46.680><c> C++</c><00:14:47.670><c> if</c><00:14:47.970><c> in</c>

00:14:48.320 --> 00:14:48.330 align:start position:0%
talk jargon or terminology in C++ if in
 

00:14:48.330 --> 00:14:50.120 align:start position:0%
talk jargon or terminology in C++ if in
fact<00:14:48.570><c> some</c><00:14:48.870><c> of</c><00:14:48.900><c> you</c><00:14:49.110><c> have</c><00:14:49.350><c> just</c><00:14:49.620><c> programmed</c><00:14:50.010><c> in</c>

00:14:50.120 --> 00:14:50.130 align:start position:0%
fact some of you have just programmed in
 

00:14:50.130 --> 00:14:53.120 align:start position:0%
fact some of you have just programmed in
C++<00:14:50.730><c> you</c><00:14:50.970><c> would</c><00:14:51.930><c> know</c><00:14:52.080><c> that</c><00:14:52.290><c> as</c><00:14:52.470><c> data</c><00:14:52.710><c> members</c>

00:14:53.120 --> 00:14:53.130 align:start position:0%
C++ you would know that as data members
 

00:14:53.130 --> 00:14:55.400 align:start position:0%
C++ you would know that as data members
right<00:14:53.460><c> so</c><00:14:53.670><c> members</c><00:14:54.090><c> data</c><00:14:54.480><c> members</c><00:14:54.900><c> instance</c>

00:14:55.400 --> 00:14:55.410 align:start position:0%
right so members data members instance
 

00:14:55.410 --> 00:14:59.420 align:start position:0%
right so members data members instance
variables<00:14:56.180><c> map</c><00:14:57.180><c> into</c><00:14:57.540><c> the</c><00:14:57.660><c> same</c><00:14:57.870><c> concept</c><00:14:58.560><c> so</c>

00:14:59.420 --> 00:14:59.430 align:start position:0%
variables map into the same concept so
 

00:14:59.430 --> 00:15:04.430 align:start position:0%
variables map into the same concept so
here<00:14:59.700><c> we</c><00:14:59.850><c> have</c><00:15:00.030><c> a</c><00:15:00.600><c> c</c><00:15:01.380><c> type</c><00:15:02.070><c> and</c><00:15:02.370><c> int</c><00:15:02.520><c> named</c><00:15:03.510><c> x</c><00:15:03.780><c> we</c>

00:15:04.430 --> 00:15:04.440 align:start position:0%
here we have a c type and int named x we
 

00:15:04.440 --> 00:15:07.190 align:start position:0%
here we have a c type and int named x we
have<00:15:04.470><c> an</c><00:15:04.650><c> NS</c><00:15:04.890><c> view</c><00:15:05.190><c> name</c><00:15:05.670><c> Y</c><00:15:05.940><c> and</c><00:15:06.240><c> we</c><00:15:06.750><c> have</c><00:15:06.930><c> an</c><00:15:07.080><c> io</c>

00:15:07.190 --> 00:15:07.200 align:start position:0%
have an NS view name Y and we have an io
 

00:15:07.200 --> 00:15:09.350 align:start position:0%
have an NS view name Y and we have an io
stream<00:15:07.650><c> named</c><00:15:07.890><c> s</c><00:15:08.160><c> so</c><00:15:08.370><c> you</c><00:15:08.430><c> can</c><00:15:08.640><c> see</c><00:15:08.790><c> we</c><00:15:08.940><c> have</c><00:15:09.120><c> 3</c>

00:15:09.350 --> 00:15:09.360 align:start position:0%
stream named s so you can see we have 3
 

00:15:09.360 --> 00:15:12.110 align:start position:0%
stream named s so you can see we have 3
different<00:15:09.390><c> declarations</c><00:15:10.260><c> here</c><00:15:10.620><c> that</c><00:15:11.220><c> all</c>

00:15:12.110 --> 00:15:12.120 align:start position:0%
different declarations here that all
 

00:15:12.120 --> 00:15:16.700 align:start position:0%
different declarations here that all
contain<00:15:13.310><c> different</c><00:15:14.310><c> types</c><00:15:15.440><c> here</c><00:15:16.440><c> are</c><00:15:16.530><c> some</c>

00:15:16.700 --> 00:15:16.710 align:start position:0%
contain different types here are some
 

00:15:16.710 --> 00:15:18.590 align:start position:0%
contain different types here are some
methods<00:15:16.890><c> their</c><00:15:17.310><c> instance</c><00:15:17.730><c> methods</c><00:15:18.150><c> and</c><00:15:18.360><c> again</c>

00:15:18.590 --> 00:15:18.600 align:start position:0%
methods their instance methods and again
 

00:15:18.600 --> 00:15:20.570 align:start position:0%
methods their instance methods and again
the<00:15:19.170><c> term</c><00:15:19.320><c> method</c><00:15:19.740><c> comes</c><00:15:19.950><c> from</c><00:15:20.100><c> small</c><00:15:20.340><c> talk</c>

00:15:20.570 --> 00:15:20.580 align:start position:0%
the term method comes from small talk
 

00:15:20.580 --> 00:15:25.430 align:start position:0%
the term method comes from small talk
instance<00:15:21.150><c> method</c><00:15:21.480><c> class</c><00:15:21.720><c> method</c><00:15:22.140><c> in</c><00:15:24.230><c> C++</c><00:15:25.230><c> this</c>

00:15:25.430 --> 00:15:25.440 align:start position:0%
instance method class method in C++ this
 

00:15:25.440 --> 00:15:28.850 align:start position:0%
instance method class method in C++ this
would<00:15:25.620><c> be</c><00:15:26.210><c> member</c><00:15:27.210><c> functions</c><00:15:27.720><c> and</c><00:15:28.050><c> well</c>

00:15:28.850 --> 00:15:28.860 align:start position:0%
would be member functions and well
 

00:15:28.860 --> 00:15:30.440 align:start position:0%
would be member functions and well
non-static<00:15:29.430><c> member</c><00:15:29.700><c> functions</c><00:15:30.090><c> and</c><00:15:30.240><c> member</c>

00:15:30.440 --> 00:15:30.450 align:start position:0%
non-static member functions and member
 

00:15:30.450 --> 00:15:33.170 align:start position:0%
non-static member functions and member
functions<00:15:30.840><c> and</c><00:15:31.190><c> here</c><00:15:32.190><c> we</c><00:15:32.310><c> have</c><00:15:32.460><c> a</c><00:15:32.490><c> set</c><00:15:32.760><c> target</c>

00:15:33.170 --> 00:15:33.180 align:start position:0%
functions and here we have a set target
 

00:15:33.180 --> 00:15:35.330 align:start position:0%
functions and here we have a set target
method<00:15:33.870><c> and</c><00:15:34.080><c> a</c><00:15:34.140><c> set</c><00:15:34.350><c> action</c><00:15:34.530><c> method</c><00:15:34.920><c> now</c>

00:15:35.330 --> 00:15:35.340 align:start position:0%
method and a set action method now
 

00:15:35.340 --> 00:15:37.400 align:start position:0%
method and a set action method now
notice<00:15:35.820><c> the</c><00:15:36.270><c> colons</c><00:15:36.720><c> the</c><00:15:36.990><c> Collinswood</c>

00:15:37.400 --> 00:15:37.410 align:start position:0%
notice the colons the Collinswood
 

00:15:37.410 --> 00:15:38.750 align:start position:0%
notice the colons the Collinswood
separate<00:15:37.920><c> the</c><00:15:38.070><c> key</c><00:15:38.220><c> what's</c><00:15:38.490><c> called</c><00:15:38.670><c> the</c>

00:15:38.750 --> 00:15:38.760 align:start position:0%
separate the key what's called the
 

00:15:38.760 --> 00:15:40.550 align:start position:0%
separate the key what's called the
keyword<00:15:39.060><c> argument</c><00:15:39.540><c> from</c><00:15:39.750><c> the</c><00:15:39.870><c> from</c><00:15:40.470><c> the</c>

00:15:40.550 --> 00:15:40.560 align:start position:0%
keyword argument from the from the
 

00:15:40.560 --> 00:15:42.890 align:start position:0%
keyword argument from the from the
actual<00:15:40.950><c> type</c><00:15:41.250><c> and</c><00:15:41.550><c> the</c><00:15:41.910><c> name</c><00:15:42.090><c> of</c><00:15:42.150><c> the</c><00:15:42.390><c> argument</c>

00:15:42.890 --> 00:15:42.900 align:start position:0%
actual type and the name of the argument
 

00:15:42.900 --> 00:15:45.140 align:start position:0%
actual type and the name of the argument
if<00:15:43.050><c> you</c><00:15:43.680><c> leave</c><00:15:43.890><c> out</c><00:15:43.920><c> the</c><00:15:44.070><c> type</c><00:15:44.430><c> and</c><00:15:44.730><c> Objective</c>

00:15:45.140 --> 00:15:45.150 align:start position:0%
if you leave out the type and Objective
 

00:15:45.150 --> 00:15:47.530 align:start position:0%
if you leave out the type and Objective
C<00:15:45.180><c> it</c><00:15:45.630><c> means</c><00:15:45.930><c> it's</c><00:15:46.200><c> an</c><00:15:46.320><c> ID</c>

00:15:47.530 --> 00:15:47.540 align:start position:0%
C it means it's an ID
 

00:15:47.540 --> 00:15:49.869 align:start position:0%
C it means it's an ID
we'll<00:15:48.079><c> get</c><00:15:48.230><c> into</c><00:15:48.379><c> what</c><00:15:48.619><c> I</c><00:15:48.829><c> deem</c><00:15:49.129><c> Eanes</c><00:15:49.519><c> in</c><00:15:49.639><c> a</c>

00:15:49.869 --> 00:15:49.879 align:start position:0%
we'll get into what I deem Eanes in a
 

00:15:49.879 --> 00:15:50.530 align:start position:0%
we'll get into what I deem Eanes in a
little<00:15:50.089><c> while</c>

00:15:50.530 --> 00:15:50.540 align:start position:0%
little while
 

00:15:50.540 --> 00:15:53.349 align:start position:0%
little while
so<00:15:50.959><c> here</c><00:15:51.319><c> we</c><00:15:51.470><c> have</c><00:15:51.679><c> a</c><00:15:52.160><c> set</c><00:15:52.609><c> cell</c><00:15:52.850><c> class</c><00:15:53.089><c> that's</c>

00:15:53.349 --> 00:15:53.359 align:start position:0%
so here we have a set cell class that's
 

00:15:53.359 --> 00:15:56.289 align:start position:0%
so here we have a set cell class that's
actually<00:15:53.749><c> a</c><00:15:53.779><c> class</c><00:15:54.049><c> object</c><00:15:55.059><c> we'll</c><00:15:56.059><c> get</c><00:15:56.179><c> into</c>

00:15:56.289 --> 00:15:56.299 align:start position:0%
actually a class object we'll get into
 

00:15:56.299 --> 00:15:57.939 align:start position:0%
actually a class object we'll get into
that<00:15:56.509><c> as</c><00:15:56.689><c> well</c><00:15:56.839><c> later</c><00:15:57.109><c> and</c><00:15:57.379><c> selectors</c>

00:15:57.939 --> 00:15:57.949 align:start position:0%
that as well later and selectors
 

00:15:57.949 --> 00:16:00.759 align:start position:0%
that as well later and selectors
selectors<00:15:58.879><c> are</c><00:15:59.059><c> a</c><00:15:59.089><c> unique</c><00:15:59.449><c> name</c><00:15:59.720><c> for</c><00:16:00.049><c> a</c><00:16:00.379><c> method</c>

00:16:00.759 --> 00:16:00.769 align:start position:0%
selectors are a unique name for a method
 

00:16:00.769 --> 00:16:03.280 align:start position:0%
selectors are a unique name for a method
okay<00:16:01.609><c> so</c><00:16:01.669><c> they're</c><00:16:02.359><c> like</c><00:16:02.629><c> point</c><00:16:02.989><c> they're</c><00:16:03.259><c> like</c>

00:16:03.280 --> 00:16:03.290 align:start position:0%
okay so they're like point they're like
 

00:16:03.290 --> 00:16:05.439 align:start position:0%
okay so they're like point they're like
pointers<00:16:04.189><c> to</c><00:16:04.309><c> functions</c><00:16:04.339><c> except</c><00:16:05.329><c> they</c>

00:16:05.439 --> 00:16:05.449 align:start position:0%
pointers to functions except they
 

00:16:05.449 --> 00:16:07.329 align:start position:0%
pointers to functions except they
represent<00:16:05.929><c> the</c><00:16:06.049><c> name</c><00:16:06.290><c> and</c><00:16:06.589><c> they're</c><00:16:07.009><c> unique</c>

00:16:07.329 --> 00:16:07.339 align:start position:0%
represent the name and they're unique
 

00:16:07.339 --> 00:16:08.919 align:start position:0%
represent the name and they're unique
per<00:16:07.549><c> process</c><00:16:08.029><c> and</c><00:16:08.299><c> we'll</c><00:16:08.419><c> talk</c><00:16:08.600><c> a</c><00:16:08.629><c> little</c><00:16:08.809><c> bit</c>

00:16:08.919 --> 00:16:08.929 align:start position:0%
per process and we'll talk a little bit
 

00:16:08.929 --> 00:16:12.970 align:start position:0%
per process and we'll talk a little bit
later<00:16:09.049><c> about</c><00:16:09.439><c> that</c><00:16:11.079><c> so</c><00:16:12.079><c> so</c><00:16:12.529><c> far</c><00:16:12.709><c> we</c><00:16:12.859><c> have</c><00:16:12.889><c> a</c>

00:16:12.970 --> 00:16:12.980 align:start position:0%
later about that so so far we have a
 

00:16:12.980 --> 00:16:14.439 align:start position:0%
later about that so so far we have a
class<00:16:13.249><c> interface</c><00:16:13.730><c> we</c><00:16:13.939><c> have</c><00:16:13.970><c> instance</c>

00:16:14.439 --> 00:16:14.449 align:start position:0%
class interface we have instance
 

00:16:14.449 --> 00:16:16.119 align:start position:0%
class interface we have instance
variables<00:16:14.839><c> we</c><00:16:14.929><c> have</c><00:16:14.959><c> methods</c><00:16:15.439><c> here's</c><00:16:15.980><c> an</c>

00:16:16.119 --> 00:16:16.129 align:start position:0%
variables we have methods here's an
 

00:16:16.129 --> 00:16:18.749 align:start position:0%
variables we have methods here's an
abstract<00:16:16.609><c> type</c><00:16:16.790><c> declaration</c><00:16:17.509><c> objective-c</c>

00:16:18.749 --> 00:16:18.759 align:start position:0%
abstract type declaration objective-c
 

00:16:18.759 --> 00:16:21.220 align:start position:0%
abstract type declaration objective-c
decided<00:16:19.759><c> to</c><00:16:19.879><c> formalize</c><00:16:20.419><c> the</c><00:16:20.689><c> node</c><00:16:20.869><c> in</c><00:16:21.109><c> the</c>

00:16:21.220 --> 00:16:21.230 align:start position:0%
decided to formalize the node in the
 

00:16:21.230 --> 00:16:23.769 align:start position:0%
decided to formalize the node in the
notion<00:16:21.410><c> of</c><00:16:21.679><c> abstract</c><00:16:22.549><c> types</c><00:16:22.850><c> years</c><00:16:23.209><c> ago</c><00:16:23.480><c> and</c>

00:16:23.769 --> 00:16:23.779 align:start position:0%
notion of abstract types years ago and
 

00:16:23.779 --> 00:16:25.689 align:start position:0%
notion of abstract types years ago and
it's<00:16:24.589><c> been</c><00:16:24.709><c> something</c><00:16:25.069><c> that's</c><00:16:25.279><c> worked</c><00:16:25.519><c> really</c>

00:16:25.689 --> 00:16:25.699 align:start position:0%
it's been something that's worked really
 

00:16:25.699 --> 00:16:28.659 align:start position:0%
it's been something that's worked really
well<00:16:25.819><c> for</c><00:16:26.149><c> us</c><00:16:26.239><c> so</c><00:16:26.299><c> an</c><00:16:26.660><c> abstract</c><00:16:27.109><c> type</c><00:16:27.290><c> is</c><00:16:27.669><c> a</c>

00:16:28.659 --> 00:16:28.669 align:start position:0%
well for us so an abstract type is a
 

00:16:28.669 --> 00:16:31.299 align:start position:0%
well for us so an abstract type is a
type<00:16:29.379><c> where</c><00:16:30.379><c> you</c><00:16:30.410><c> don't</c><00:16:30.739><c> specify</c><00:16:30.980><c> the</c>

00:16:31.299 --> 00:16:31.309 align:start position:0%
type where you don't specify the
 

00:16:31.309 --> 00:16:33.939 align:start position:0%
type where you don't specify the
instance<00:16:31.759><c> variables</c><00:16:32.269><c> you</c><00:16:32.389><c> don't</c><00:16:32.660><c> specify</c><00:16:32.949><c> the</c>

00:16:33.939 --> 00:16:33.949 align:start position:0%
instance variables you don't specify the
 

00:16:33.949 --> 00:16:37.780 align:start position:0%
instance variables you don't specify the
superclass<00:16:35.139><c> you</c><00:16:36.139><c> just</c><00:16:36.529><c> specify</c><00:16:36.769><c> what</c><00:16:37.669><c> the</c>

00:16:37.780 --> 00:16:37.790 align:start position:0%
superclass you just specify what the
 

00:16:37.790 --> 00:16:40.150 align:start position:0%
superclass you just specify what the
operations<00:16:38.509><c> that</c><00:16:39.049><c> are</c><00:16:39.169><c> expected</c><00:16:39.709><c> of</c><00:16:39.799><c> the</c><00:16:39.949><c> type</c>

00:16:40.150 --> 00:16:40.160 align:start position:0%
operations that are expected of the type
 

00:16:40.160 --> 00:16:43.319 align:start position:0%
operations that are expected of the type
are<00:16:40.429><c> so</c><00:16:40.999><c> here's</c><00:16:41.269><c> the</c><00:16:41.389><c> NS</c><00:16:41.660><c> dragging</c><00:16:42.499><c> info</c>

00:16:43.319 --> 00:16:43.329 align:start position:0%
are so here's the NS dragging info
 

00:16:43.329 --> 00:16:46.150 align:start position:0%
are so here's the NS dragging info
protocol<00:16:44.329><c> this</c><00:16:44.749><c> is</c><00:16:44.899><c> a</c><00:16:44.929><c> set</c><00:16:45.199><c> of</c><00:16:45.319><c> methods</c><00:16:45.769><c> which</c>

00:16:46.150 --> 00:16:46.160 align:start position:0%
protocol this is a set of methods which
 

00:16:46.160 --> 00:16:49.210 align:start position:0%
protocol this is a set of methods which
will<00:16:46.549><c> all</c><00:16:46.790><c> can</c><00:16:47.059><c> will</c><00:16:47.989><c> be</c><00:16:48.019><c> given</c><00:16:48.410><c> to</c><00:16:48.949><c> the</c><00:16:49.069><c> app</c>

00:16:49.210 --> 00:16:49.220 align:start position:0%
will all can will be given to the app
 

00:16:49.220 --> 00:16:51.849 align:start position:0%
will all can will be given to the app
kit<00:16:49.519><c> and</c><00:16:49.699><c> they</c><00:16:50.480><c> will</c><00:16:50.689><c> delegate</c><00:16:51.199><c> to</c><00:16:51.679><c> your</c>

00:16:51.849 --> 00:16:51.859 align:start position:0%
kit and they will delegate to your
 

00:16:51.859 --> 00:16:54.999 align:start position:0%
kit and they will delegate to your
object<00:16:53.289><c> here's</c><00:16:54.289><c> an</c><00:16:54.439><c> abstract</c><00:16:54.829><c> type</c>

00:16:54.999 --> 00:16:55.009 align:start position:0%
object here's an abstract type
 

00:16:55.009 --> 00:16:56.679 align:start position:0%
object here's an abstract type
implementation<00:16:55.850><c> so</c><00:16:55.970><c> you</c><00:16:56.029><c> could</c><00:16:56.179><c> see</c><00:16:56.359><c> NS</c>

00:16:56.679 --> 00:16:56.689 align:start position:0%
implementation so you could see NS
 

00:16:56.689 --> 00:16:59.529 align:start position:0%
implementation so you could see NS
string<00:16:56.809><c> it</c><00:16:57.230><c> inherits</c><00:16:57.829><c> from</c><00:16:57.889><c> NS</c><00:16:58.399><c> object</c><00:16:58.579><c> and</c><00:16:59.059><c> it</c>

00:16:59.529 --> 00:16:59.539 align:start position:0%
string it inherits from NS object and it
 

00:16:59.539 --> 00:17:01.749 align:start position:0%
string it inherits from NS object and it
conforms<00:16:59.899><c> to</c><00:17:00.199><c> three</c><00:17:00.529><c> protocols</c><00:17:01.220><c> so</c><00:17:01.399><c> here's</c><00:17:01.639><c> an</c>

00:17:01.749 --> 00:17:01.759 align:start position:0%
conforms to three protocols so here's an
 

00:17:01.759 --> 00:17:04.480 align:start position:0%
conforms to three protocols so here's an
example<00:17:01.850><c> where</c><00:17:02.749><c> objective-c</c><00:17:03.319><c> has</c><00:17:04.010><c> single</c>

00:17:04.480 --> 00:17:04.490 align:start position:0%
example where objective-c has single
 

00:17:04.490 --> 00:17:06.519 align:start position:0%
example where objective-c has single
inheritance<00:17:05.029><c> of</c><00:17:05.179><c> implementation</c><00:17:05.959><c> but</c>

00:17:06.519 --> 00:17:06.529 align:start position:0%
inheritance of implementation but
 

00:17:06.529 --> 00:17:09.009 align:start position:0%
inheritance of implementation but
multiple<00:17:06.980><c> inheritance</c><00:17:07.279><c> of</c><00:17:07.730><c> interface</c><00:17:08.240><c> okay</c>

00:17:09.009 --> 00:17:09.019 align:start position:0%
multiple inheritance of interface okay
 

00:17:09.019 --> 00:17:11.319 align:start position:0%
multiple inheritance of interface okay
which<00:17:09.199><c> is</c><00:17:09.350><c> a</c><00:17:09.380><c> very</c><00:17:09.709><c> common</c><00:17:10.039><c> metaphor</c><00:17:10.850><c> that</c><00:17:11.209><c> we</c>

00:17:11.319 --> 00:17:11.329 align:start position:0%
which is a very common metaphor that we
 

00:17:11.329 --> 00:17:14.049 align:start position:0%
which is a very common metaphor that we
use<00:17:11.569><c> in</c><00:17:11.720><c> cocoa</c><00:17:12.139><c> and</c><00:17:12.380><c> that</c><00:17:13.039><c> works</c><00:17:13.760><c> very</c><00:17:13.970><c> well</c>

00:17:14.049 --> 00:17:14.059 align:start position:0%
use in cocoa and that works very well
 

00:17:14.059 --> 00:17:15.850 align:start position:0%
use in cocoa and that works very well
for<00:17:14.269><c> us</c><00:17:14.480><c> so</c><00:17:14.720><c> here</c><00:17:15.049><c> again</c><00:17:15.199><c> we</c><00:17:15.470><c> have</c><00:17:15.559><c> three</c>

00:17:15.850 --> 00:17:15.860 align:start position:0%
for us so here again we have three
 

00:17:15.860 --> 00:17:20.259 align:start position:0%
for us so here again we have three
different<00:17:16.789><c> interfaces</c><00:17:17.919><c> or</c><00:17:18.919><c> protocols</c><00:17:19.429><c> and</c><00:17:19.699><c> a</c>

00:17:20.259 --> 00:17:20.269 align:start position:0%
different interfaces or protocols and a
 

00:17:20.269 --> 00:17:26.500 align:start position:0%
different interfaces or protocols and a
couple<00:17:20.839><c> methods</c><00:17:21.049><c> there</c><00:17:24.069><c> so</c><00:17:25.069><c> here</c><00:17:25.399><c> is</c><00:17:25.610><c> three</c>

00:17:26.500 --> 00:17:26.510 align:start position:0%
couple methods there so here is three
 

00:17:26.510 --> 00:17:28.320 align:start position:0%
couple methods there so here is three
different<00:17:26.839><c> object</c><00:17:27.199><c> their</c><00:17:27.319><c> declarations</c><00:17:28.130><c> in</c>

00:17:28.320 --> 00:17:28.330 align:start position:0%
different object their declarations in
 

00:17:28.330 --> 00:17:30.490 align:start position:0%
different object their declarations in
C++<00:17:29.330><c> you've</c><00:17:29.510><c> probably</c><00:17:29.659><c> never</c><00:17:29.929><c> seen</c><00:17:30.230><c> anything</c>

00:17:30.490 --> 00:17:30.500 align:start position:0%
C++ you've probably never seen anything
 

00:17:30.500 --> 00:17:33.009 align:start position:0%
C++ you've probably never seen anything
like<00:17:30.679><c> ID</c><00:17:31.070><c> it's</c><00:17:31.519><c> it's</c><00:17:32.120><c> an</c><00:17:32.299><c> object-oriented</c>

00:17:33.009 --> 00:17:33.019 align:start position:0%
like ID it's it's an object-oriented
 

00:17:33.019 --> 00:17:36.730 align:start position:0%
like ID it's it's an object-oriented
void<00:17:33.409><c> star</c><00:17:33.799><c> pretty</c><00:17:34.580><c> much</c><00:17:34.820><c> and</c><00:17:35.090><c> it</c><00:17:35.450><c> says</c><00:17:35.740><c> here</c>

00:17:36.730 --> 00:17:36.740 align:start position:0%
void star pretty much and it says here
 

00:17:36.740 --> 00:17:40.419 align:start position:0%
void star pretty much and it says here
is<00:17:36.889><c> any</c><00:17:37.250><c> object</c><00:17:38.000><c> now</c><00:17:38.870><c> the</c><00:17:38.929><c> difference</c><00:17:39.500><c> is</c><00:17:39.679><c> that</c>

00:17:40.419 --> 00:17:40.429 align:start position:0%
is any object now the difference is that
 

00:17:40.429 --> 00:17:42.850 align:start position:0%
is any object now the difference is that
object<00:17:41.029><c> has</c><00:17:41.179><c> metadata</c><00:17:41.840><c> associated</c><00:17:42.169><c> with</c><00:17:42.710><c> it</c>

00:17:42.850 --> 00:17:42.860 align:start position:0%
object has metadata associated with it
 

00:17:42.860 --> 00:17:45.279 align:start position:0%
object has metadata associated with it
so<00:17:43.039><c> in</c><00:17:43.220><c> fact</c><00:17:43.490><c> it's</c><00:17:44.330><c> not</c><00:17:44.450><c> as</c><00:17:44.690><c> bad</c><00:17:44.899><c> as</c><00:17:45.049><c> a</c><00:17:45.080><c> void</c>

00:17:45.279 --> 00:17:45.289 align:start position:0%
so in fact it's not as bad as a void
 

00:17:45.289 --> 00:17:47.019 align:start position:0%
so in fact it's not as bad as a void
star<00:17:45.620><c> and</c><00:17:45.889><c> that</c><00:17:46.039><c> a</c><00:17:46.190><c> void</c><00:17:46.429><c> star</c><00:17:46.700><c> you</c><00:17:46.880><c> know</c>

00:17:47.019 --> 00:17:47.029 align:start position:0%
star and that a void star you know
 

00:17:47.029 --> 00:17:48.759 align:start position:0%
star and that a void star you know
nothing<00:17:47.419><c> about</c><00:17:47.630><c> it</c><00:17:47.899><c> except</c><00:17:48.260><c> by</c><00:17:48.289><c> looking</c><00:17:48.380><c> at</c>

00:17:48.759 --> 00:17:48.769 align:start position:0%
nothing about it except by looking at
 

00:17:48.769 --> 00:17:51.070 align:start position:0%
nothing about it except by looking at
the<00:17:48.860><c> source</c><00:17:49.070><c> code</c><00:17:49.190><c> at</c><00:17:50.179><c> runtime</c><00:17:50.510><c> you</c><00:17:50.929><c> could</c>

00:17:51.070 --> 00:17:51.080 align:start position:0%
the source code at runtime you could
 

00:17:51.080 --> 00:17:52.960 align:start position:0%
the source code at runtime you could
actually<00:17:51.590><c> infer</c><00:17:52.130><c> what</c><00:17:52.370><c> the</c><00:17:52.490><c> type</c><00:17:52.669><c> of</c><00:17:52.700><c> object</c>

00:17:52.960 --> 00:17:52.970 align:start position:0%
actually infer what the type of object
 

00:17:52.970 --> 00:18:00.159 align:start position:0%
actually infer what the type of object
is<00:17:56.559><c> now</c><00:17:57.559><c> the</c><00:17:57.620><c> second</c><00:17:58.510><c> statement</c><00:17:59.510><c> declaration</c>

00:18:00.159 --> 00:18:00.169 align:start position:0%
is now the second statement declaration
 

00:18:00.169 --> 00:18:00.970 align:start position:0%
is now the second statement declaration
there<00:18:00.440><c> is</c>

00:18:00.970 --> 00:18:00.980 align:start position:0%
there is
 

00:18:00.980 --> 00:18:03.880 align:start position:0%
there is
in<00:18:01.040><c> NS</c><00:18:01.610><c> browser</c><00:18:01.880><c> star</c><00:18:02.330><c> in</c><00:18:02.900><c> objective-c</c><00:18:03.470><c> when</c>

00:18:03.880 --> 00:18:03.890 align:start position:0%
in NS browser star in objective-c when
 

00:18:03.890 --> 00:18:06.970 align:start position:0%
in NS browser star in objective-c when
you<00:18:04.010><c> type</c><00:18:04.370><c> an</c><00:18:04.670><c> object</c><00:18:05.450><c> that's</c><00:18:06.050><c> there</c><00:18:06.470><c> just</c><00:18:06.830><c> for</c>

00:18:06.970 --> 00:18:06.980 align:start position:0%
you type an object that's there just for
 

00:18:06.980 --> 00:18:09.370 align:start position:0%
you type an object that's there just for
documentation<00:18:07.610><c> okay</c><00:18:08.510><c> it's</c><00:18:08.720><c> it</c><00:18:08.930><c> tells</c><00:18:09.200><c> the</c>

00:18:09.370 --> 00:18:09.380 align:start position:0%
documentation okay it's it tells the
 

00:18:09.380 --> 00:18:12.670 align:start position:0%
documentation okay it's it tells the
reader<00:18:09.410><c> that</c><00:18:10.220><c> that</c><00:18:10.520><c> any</c><00:18:10.850><c> browser</c><00:18:11.840><c> is</c><00:18:12.260><c> an</c><00:18:12.440><c> NS</c>

00:18:12.670 --> 00:18:12.680 align:start position:0%
reader that that any browser is an NS
 

00:18:12.680 --> 00:18:15.310 align:start position:0%
reader that that any browser is an NS
browser<00:18:12.920><c> it</c><00:18:13.640><c> doesn't</c><00:18:13.960><c> affect</c><00:18:14.960><c> how</c><00:18:15.260><c> the</c>

00:18:15.310 --> 00:18:15.320 align:start position:0%
browser it doesn't affect how the
 

00:18:15.320 --> 00:18:17.440 align:start position:0%
browser it doesn't affect how the
compiler<00:18:15.920><c> will</c><00:18:16.070><c> do</c><00:18:16.220><c> binding</c><00:18:16.670><c> so</c><00:18:17.000><c> dynamic</c>

00:18:17.440 --> 00:18:17.450 align:start position:0%
compiler will do binding so dynamic
 

00:18:17.450 --> 00:18:18.940 align:start position:0%
compiler will do binding so dynamic
dispatch<00:18:17.810><c> all</c><00:18:18.050><c> the</c><00:18:18.140><c> dynamic</c><00:18:18.530><c> properties</c>

00:18:18.940 --> 00:18:18.950 align:start position:0%
dispatch all the dynamic properties
 

00:18:18.950 --> 00:18:21.190 align:start position:0%
dispatch all the dynamic properties
still<00:18:19.460><c> apply</c><00:18:19.790><c> even</c><00:18:20.330><c> though</c><00:18:20.480><c> it's</c><00:18:20.690><c> been</c><00:18:20.900><c> typed</c>

00:18:21.190 --> 00:18:21.200 align:start position:0%
still apply even though it's been typed
 

00:18:21.200 --> 00:18:24.760 align:start position:0%
still apply even though it's been typed
and<00:18:22.300><c> the</c><00:18:23.300><c> third</c><00:18:23.510><c> declaration</c><00:18:24.200><c> there</c><00:18:24.410><c> says</c><00:18:24.620><c> I</c>

00:18:24.760 --> 00:18:24.770 align:start position:0%
and the third declaration there says I
 

00:18:24.770 --> 00:18:26.800 align:start position:0%
and the third declaration there says I
have<00:18:24.890><c> any</c><00:18:25.130><c> object</c><00:18:25.730><c> that</c><00:18:25.790><c> conforms</c><00:18:26.300><c> to</c><00:18:26.390><c> the</c><00:18:26.540><c> NS</c>

00:18:26.800 --> 00:18:26.810 align:start position:0%
have any object that conforms to the NS
 

00:18:26.810 --> 00:18:29.170 align:start position:0%
have any object that conforms to the NS
dragging<00:18:27.230><c> info</c><00:18:27.470><c> protocol</c><00:18:27.950><c> which</c><00:18:28.220><c> is</c><00:18:28.430><c> what</c><00:18:29.150><c> I</c>

00:18:29.170 --> 00:18:29.180 align:start position:0%
dragging info protocol which is what I
 

00:18:29.180 --> 00:18:31.270 align:start position:0%
dragging info protocol which is what I
just<00:18:29.300><c> showed</c><00:18:29.690><c> in</c><00:18:29.840><c> the</c><00:18:29.900><c> previous</c><00:18:30.080><c> slide</c><00:18:30.350><c> so</c>

00:18:31.270 --> 00:18:31.280 align:start position:0%
just showed in the previous slide so
 

00:18:31.280 --> 00:18:35.230 align:start position:0%
just showed in the previous slide so
that<00:18:32.090><c> means</c><00:18:32.450><c> any</c><00:18:33.130><c> class</c><00:18:34.130><c> that</c><00:18:34.160><c> can</c><00:18:34.640><c> conform</c><00:18:35.120><c> to</c>

00:18:35.230 --> 00:18:35.240 align:start position:0%
that means any class that can conform to
 

00:18:35.240 --> 00:18:37.750 align:start position:0%
that means any class that can conform to
that<00:18:35.270><c> protocol</c><00:18:36.010><c> will</c><00:18:37.010><c> be</c><00:18:37.130><c> accepted</c><00:18:37.580><c> by</c><00:18:37.700><c> the</c>

00:18:37.750 --> 00:18:37.760 align:start position:0%
that protocol will be accepted by the
 

00:18:37.760 --> 00:18:40.360 align:start position:0%
that protocol will be accepted by the
compiler<00:18:38.410><c> what's</c><00:18:39.410><c> really</c><00:18:39.680><c> neat</c><00:18:39.830><c> about</c><00:18:39.860><c> this</c>

00:18:40.360 --> 00:18:40.370 align:start position:0%
compiler what's really neat about this
 

00:18:40.370 --> 00:18:42.910 align:start position:0%
compiler what's really neat about this
again<00:18:41.090><c> is</c><00:18:41.570><c> you</c><00:18:42.110><c> don't</c><00:18:42.350><c> have</c><00:18:42.560><c> to</c><00:18:42.680><c> know</c><00:18:42.890><c> what</c>

00:18:42.910 --> 00:18:42.920 align:start position:0%
again is you don't have to know what
 

00:18:42.920 --> 00:18:45.070 align:start position:0%
again is you don't have to know what
type<00:18:43.370><c> of</c><00:18:43.400><c> object</c><00:18:43.670><c> it</c><00:18:44.090><c> is</c><00:18:44.120><c> now</c><00:18:44.720><c> you</c><00:18:44.780><c> can</c><00:18:44.960><c> even</c>

00:18:45.070 --> 00:18:45.080 align:start position:0%
type of object it is now you can even
 

00:18:45.080 --> 00:18:46.540 align:start position:0%
type of object it is now you can even
provide<00:18:45.470><c> a</c><00:18:45.500><c> list</c><00:18:45.800><c> there</c><00:18:46.010><c> it's</c><00:18:46.280><c> fairly</c>

00:18:46.540 --> 00:18:46.550 align:start position:0%
provide a list there it's fairly
 

00:18:46.550 --> 00:18:49.380 align:start position:0%
provide a list there it's fairly
uncommon<00:18:47.060><c> but</c><00:18:47.750><c> just</c><00:18:48.410><c> as</c><00:18:48.590><c> you</c><00:18:48.620><c> had</c><00:18:48.950><c> a</c><00:18:48.980><c> list</c>

00:18:49.380 --> 00:18:49.390 align:start position:0%
uncommon but just as you had a list
 

00:18:49.390 --> 00:18:52.090 align:start position:0%
uncommon but just as you had a list
within<00:18:50.390><c> the</c><00:18:50.570><c> class</c><00:18:50.780><c> declaration</c><00:18:51.020><c> context</c><00:18:52.010><c> you</c>

00:18:52.090 --> 00:18:52.100 align:start position:0%
within the class declaration context you
 

00:18:52.100 --> 00:18:54.400 align:start position:0%
within the class declaration context you
could<00:18:52.280><c> have</c><00:18:52.430><c> a</c><00:18:52.460><c> list</c><00:18:52.730><c> here</c><00:18:53.060><c> as</c><00:18:53.180><c> well</c><00:18:53.410><c> another</c>

00:18:54.400 --> 00:18:54.410 align:start position:0%
could have a list here as well another
 

00:18:54.410 --> 00:18:57.060 align:start position:0%
could have a list here as well another
point<00:18:54.770><c> as</c><00:18:55.010><c> contrast</c><00:18:55.820><c> to</c><00:18:56.000><c> Java</c><00:18:56.270><c> is</c><00:18:56.570><c> Java</c>

00:18:57.060 --> 00:18:57.070 align:start position:0%
point as contrast to Java is Java
 

00:18:57.070 --> 00:18:59.560 align:start position:0%
point as contrast to Java is Java
integrates<00:18:58.070><c> the</c><00:18:58.340><c> abstract</c><00:18:58.820><c> type</c><00:18:59.060><c> namespace</c>

00:18:59.560 --> 00:18:59.570 align:start position:0%
integrates the abstract type namespace
 

00:18:59.570 --> 00:19:00.940 align:start position:0%
integrates the abstract type namespace
in<00:18:59.780><c> with</c><00:18:59.900><c> the</c><00:19:00.020><c> class</c><00:19:00.230><c> namespace</c><00:19:00.740><c> in</c>

00:19:00.940 --> 00:19:00.950 align:start position:0%
in with the class namespace in
 

00:19:00.950 --> 00:19:03.220 align:start position:0%
in with the class namespace in
objective-c<00:19:01.760><c> they're</c><00:19:02.480><c> separate</c><00:19:02.930><c> so</c><00:19:03.200><c> you</c>

00:19:03.220 --> 00:19:03.230 align:start position:0%
objective-c they're separate so you
 

00:19:03.230 --> 00:19:05.470 align:start position:0%
objective-c they're separate so you
could<00:19:03.470><c> have</c><00:19:03.650><c> an</c><00:19:03.920><c> NS</c><00:19:04.190><c> object</c><00:19:04.370><c> class</c><00:19:04.820><c> and</c><00:19:05.150><c> an</c><00:19:05.240><c> NS</c>

00:19:05.470 --> 00:19:05.480 align:start position:0%
could have an NS object class and an NS
 

00:19:05.480 --> 00:19:07.840 align:start position:0%
could have an NS object class and an NS
object<00:19:05.660><c> protocol</c><00:19:06.290><c> and</c><00:19:06.590><c> so</c><00:19:07.160><c> on</c><00:19:07.280><c> and</c><00:19:07.400><c> so</c><00:19:07.550><c> forth</c>

00:19:07.840 --> 00:19:07.850 align:start position:0%
object protocol and so on and so forth
 

00:19:07.850 --> 00:19:13.210 align:start position:0%
object protocol and so on and so forth
so<00:19:07.910><c> they're</c><00:19:08.180><c> in</c><00:19:08.270><c> separate</c><00:19:08.600><c> namespaces</c><00:19:12.220><c> here</c>

00:19:13.210 --> 00:19:13.220 align:start position:0%
so they're in separate namespaces here
 

00:19:13.220 --> 00:19:14.530 align:start position:0%
so they're in separate namespaces here
we're<00:19:13.670><c> going</c><00:19:13.760><c> to</c><00:19:13.850><c> go</c><00:19:13.970><c> through</c><00:19:14.240><c> message</c>

00:19:14.530 --> 00:19:14.540 align:start position:0%
we're going to go through message
 

00:19:14.540 --> 00:19:15.940 align:start position:0%
we're going to go through message
expressions<00:19:15.080><c> this</c><00:19:15.260><c> is</c><00:19:15.440><c> what</c><00:19:15.560><c> you</c><00:19:15.650><c> see</c><00:19:15.830><c> the</c>

00:19:15.940 --> 00:19:15.950 align:start position:0%
expressions this is what you see the
 

00:19:15.950 --> 00:19:17.770 align:start position:0%
expressions this is what you see the
most<00:19:15.980><c> of</c><00:19:16.400><c> when</c><00:19:16.520><c> you</c><00:19:16.610><c> look</c><00:19:16.760><c> at</c><00:19:16.880><c> an</c><00:19:17.360><c> objective-c</c>

00:19:17.770 --> 00:19:17.780 align:start position:0%
most of when you look at an objective-c
 

00:19:17.780 --> 00:19:20.260 align:start position:0%
most of when you look at an objective-c
program<00:19:18.320><c> here's</c><00:19:18.920><c> the</c><00:19:19.100><c> most</c><00:19:19.280><c> simple</c><00:19:19.730><c> one</c><00:19:19.910><c> we</c>

00:19:20.260 --> 00:19:20.270 align:start position:0%
program here's the most simple one we
 

00:19:20.270 --> 00:19:22.480 align:start position:0%
program here's the most simple one we
have<00:19:20.390><c> my</c><00:19:20.660><c> view</c><00:19:20.960><c> which</c><00:19:21.290><c> is</c><00:19:21.440><c> an</c><00:19:21.560><c> object</c><00:19:21.980><c> and</c><00:19:22.100><c> it's</c>

00:19:22.480 --> 00:19:22.490 align:start position:0%
have my view which is an object and it's
 

00:19:22.490 --> 00:19:24.190 align:start position:0%
have my view which is an object and it's
sending<00:19:22.700><c> the</c><00:19:22.820><c> timer</c><00:19:23.120><c> update</c><00:19:23.540><c> message</c><00:19:23.930><c> there's</c>

00:19:24.190 --> 00:19:24.200 align:start position:0%
sending the timer update message there's
 

00:19:24.200 --> 00:19:26.140 align:start position:0%
sending the timer update message there's
no<00:19:24.380><c> arguments</c><00:19:24.980><c> there</c><00:19:25.160><c> okay</c>

00:19:26.140 --> 00:19:26.150 align:start position:0%
no arguments there okay
 

00:19:26.150 --> 00:19:29.580 align:start position:0%
no arguments there okay
the<00:19:26.660><c> second</c><00:19:27.370><c> its</c><00:19:28.370><c> message</c><00:19:28.820><c> expression</c><00:19:29.330><c> there</c>

00:19:29.580 --> 00:19:29.590 align:start position:0%
the second its message expression there
 

00:19:29.590 --> 00:19:32.530 align:start position:0%
the second its message expression there
well<00:19:30.590><c> is</c><00:19:30.800><c> is</c><00:19:31.220><c> any</c><00:19:31.430><c> browser</c><00:19:31.730><c> sent</c><00:19:32.210><c> the</c><00:19:32.330><c> set</c>

00:19:32.530 --> 00:19:32.540 align:start position:0%
well is is any browser sent the set
 

00:19:32.540 --> 00:19:35.380 align:start position:0%
well is is any browser sent the set
delegate<00:19:33.050><c> object</c><00:19:33.890><c> message</c><00:19:34.640><c> that</c><00:19:34.970><c> takes</c><00:19:35.180><c> one</c>

00:19:35.380 --> 00:19:35.390 align:start position:0%
delegate object message that takes one
 

00:19:35.390 --> 00:19:37.450 align:start position:0%
delegate object message that takes one
argument<00:19:35.420><c> notice</c><00:19:36.200><c> the</c><00:19:36.350><c> colon</c><00:19:36.680><c> separates</c><00:19:37.190><c> the</c>

00:19:37.450 --> 00:19:37.460 align:start position:0%
argument notice the colon separates the
 

00:19:37.460 --> 00:19:39.340 align:start position:0%
argument notice the colon separates the
name<00:19:37.670><c> from</c><00:19:38.060><c> the</c><00:19:38.300><c> actual</c><00:19:38.720><c> argument</c><00:19:39.170><c> in</c><00:19:39.260><c> this</c>

00:19:39.340 --> 00:19:39.350 align:start position:0%
name from the actual argument in this
 

00:19:39.350 --> 00:19:43.060 align:start position:0%
name from the actual argument in this
case<00:19:39.560><c> odd</c><00:19:39.860><c> and</c><00:19:40.720><c> the</c><00:19:41.720><c> third</c><00:19:41.960><c> one</c><00:19:42.200><c> a</c><00:19:42.440><c> common</c>

00:19:43.060 --> 00:19:43.070 align:start position:0%
case odd and the third one a common
 

00:19:43.070 --> 00:19:47.320 align:start position:0%
case odd and the third one a common
idiom<00:19:43.190><c> is</c><00:19:43.580><c> where</c><00:19:44.000><c> the</c><00:19:44.270><c> receiver</c><00:19:44.630><c> is</c><00:19:46.330><c> derived</c>

00:19:47.320 --> 00:19:47.330 align:start position:0%
idiom is where the receiver is derived
 

00:19:47.330 --> 00:19:50.440 align:start position:0%
idiom is where the receiver is derived
from<00:19:47.480><c> a</c><00:19:47.690><c> message</c><00:19:48.020><c> here</c><00:19:48.350><c> self</c><00:19:48.710><c> is</c><00:19:48.950><c> I</c><00:19:49.760><c> think</c><00:19:50.240><c> the</c>

00:19:50.440 --> 00:19:50.450 align:start position:0%
from a message here self is I think the
 

00:19:50.450 --> 00:19:51.880 align:start position:0%
from a message here self is I think the
first<00:19:50.690><c> time</c><00:19:50.840><c> we've</c><00:19:50.990><c> seen</c><00:19:51.020><c> self</c><00:19:51.470><c> self</c><00:19:51.770><c> is</c>

00:19:51.880 --> 00:19:51.890 align:start position:0%
first time we've seen self self is
 

00:19:51.890 --> 00:19:54.940 align:start position:0%
first time we've seen self self is
equivalent<00:19:52.340><c> to</c><00:19:52.370><c> this</c><00:19:52.640><c> in</c><00:19:52.960><c> C++</c><00:19:53.960><c> and</c><00:19:54.170><c> it's</c>

00:19:54.940 --> 00:19:54.950 align:start position:0%
equivalent to this in C++ and it's
 

00:19:54.950 --> 00:19:59.740 align:start position:0%
equivalent to this in C++ and it's
sending<00:19:55.190><c> the</c><00:19:55.340><c> flush</c><00:19:55.640><c> window</c><00:19:56.030><c> message</c><00:19:58.570><c> so</c><00:19:59.570><c> now</c>

00:19:59.740 --> 00:19:59.750 align:start position:0%
sending the flush window message so now
 

00:19:59.750 --> 00:20:01.360 align:start position:0%
sending the flush window message so now
let's<00:20:00.020><c> look</c><00:20:00.110><c> at</c><00:20:00.410><c> some</c><00:20:00.620><c> hybrid</c><00:20:01.010><c> message</c>

00:20:01.360 --> 00:20:01.370 align:start position:0%
let's look at some hybrid message
 

00:20:01.370 --> 00:20:05.620 align:start position:0%
let's look at some hybrid message
expressions<00:20:02.350><c> this</c><00:20:03.350><c> first</c><00:20:03.680><c> one</c><00:20:04.010><c> is</c><00:20:04.330><c> out</c><00:20:05.330><c> of</c><00:20:05.360><c> web</c>

00:20:05.620 --> 00:20:05.630 align:start position:0%
expressions this first one is out of web
 

00:20:05.630 --> 00:20:07.390 align:start position:0%
expressions this first one is out of web
core<00:20:05.870><c> it's</c><00:20:06.320><c> sending</c><00:20:06.590><c> the</c><00:20:06.650><c> message</c><00:20:06.950><c> keyboard</c>

00:20:07.390 --> 00:20:07.400 align:start position:0%
core it's sending the message keyboard
 

00:20:07.400 --> 00:20:11.800 align:start position:0%
core it's sending the message keyboard
UI<00:20:08.240><c> and</c><00:20:08.770><c> you</c><00:20:09.770><c> can</c><00:20:09.950><c> see</c><00:20:10.160><c> that</c><00:20:10.430><c> it's</c><00:20:10.850><c> accessing</c><00:20:11.540><c> a</c>

00:20:11.800 --> 00:20:11.810 align:start position:0%
UI and you can see that it's accessing a
 

00:20:11.810 --> 00:20:14.410 align:start position:0%
UI and you can see that it's accessing a
static<00:20:12.170><c> member</c><00:20:12.350><c> function</c><00:20:12.890><c> bridge</c><00:20:13.160><c> for</c><00:20:13.400><c> widget</c>

00:20:14.410 --> 00:20:14.420 align:start position:0%
static member function bridge for widget
 

00:20:14.420 --> 00:20:18.160 align:start position:0%
static member function bridge for widget
and<00:20:14.510><c> in</c><00:20:14.900><c> this</c><00:20:15.260><c> case</c><00:20:15.500><c> this</c><00:20:15.890><c> is</c><00:20:16.160><c> active</c><00:20:16.970><c> so</c><00:20:17.690><c> this</c>

00:20:18.160 --> 00:20:18.170 align:start position:0%
and in this case this is active so this
 

00:20:18.170 --> 00:20:19.690 align:start position:0%
and in this case this is active so this
is<00:20:18.320><c> just</c><00:20:18.440><c> a</c><00:20:18.560><c> message</c><00:20:18.770><c> expression</c><00:20:19.340><c> I</c><00:20:19.430><c> pulled</c>

00:20:19.690 --> 00:20:19.700 align:start position:0%
is just a message expression I pulled
 

00:20:19.700 --> 00:20:22.060 align:start position:0%
is just a message expression I pulled
out<00:20:19.820><c> of</c><00:20:19.880><c> web</c><00:20:20.150><c> core</c><00:20:20.420><c> to</c><00:20:20.750><c> show</c><00:20:20.960><c> you</c><00:20:21.020><c> how</c><00:20:21.590><c> easy</c><00:20:21.860><c> it</c>

00:20:22.060 --> 00:20:22.070 align:start position:0%
out of web core to show you how easy it
 

00:20:22.070 --> 00:20:24.340 align:start position:0%
out of web core to show you how easy it
is<00:20:22.220><c> to</c><00:20:22.460><c> mix</c><00:20:22.610><c> the</c><00:20:22.880><c> two</c><00:20:22.910><c> two</c><00:20:23.540><c> languages</c><00:20:24.080><c> and</c>

00:20:24.340 --> 00:20:24.350 align:start position:0%
is to mix the two two languages and
 

00:20:24.350 --> 00:20:26.920 align:start position:0%
is to mix the two two languages and
message<00:20:24.650><c> expressions</c><00:20:25.220><c> the</c><00:20:25.820><c> second</c><00:20:26.270><c> one</c><00:20:26.450><c> is</c><00:20:26.720><c> a</c>

00:20:26.920 --> 00:20:26.930 align:start position:0%
message expressions the second one is a
 

00:20:26.930 --> 00:20:30.430 align:start position:0%
message expressions the second one is a
bit<00:20:27.050><c> more</c><00:20:27.230><c> complicated</c><00:20:29.050><c> there</c><00:20:30.050><c> we</c><00:20:30.200><c> have</c><00:20:30.320><c> the</c>

00:20:30.430 --> 00:20:30.440 align:start position:0%
bit more complicated there we have the
 

00:20:30.440 --> 00:20:32.890 align:start position:0%
bit more complicated there we have the
adapter<00:20:30.740><c> sending</c><00:20:31.340><c> the</c><00:20:31.430><c> set</c><00:20:31.670><c> cookies</c><00:20:32.060><c> for</c><00:20:32.300><c> URL</c>

00:20:32.890 --> 00:20:32.900 align:start position:0%
adapter sending the set cookies for URL
 

00:20:32.900 --> 00:20:35.470 align:start position:0%
adapter sending the set cookies for URL
policy<00:20:33.470><c> base</c><00:20:33.650><c> URL</c><00:20:33.980><c> message</c><00:20:34.520><c> and</c><00:20:34.700><c> you</c><00:20:35.150><c> can</c><00:20:35.270><c> see</c>

00:20:35.470 --> 00:20:35.480 align:start position:0%
policy base URL message and you can see
 

00:20:35.480 --> 00:20:37.150 align:start position:0%
policy base URL message and you can see
it's<00:20:35.660><c> interspersed</c><00:20:36.230><c> with</c><00:20:36.380><c> arguments</c><00:20:36.980><c> that</c>

00:20:37.150 --> 00:20:37.160 align:start position:0%
it's interspersed with arguments that
 

00:20:37.160 --> 00:20:40.620 align:start position:0%
it's interspersed with arguments that
are<00:20:37.400><c> in</c><00:20:37.580><c> fact</c><00:20:37.850><c> member</c><00:20:38.450><c> function</c><00:20:38.840><c> calls</c><00:20:39.050><c> okay</c>

00:20:40.620 --> 00:20:40.630 align:start position:0%
are in fact member function calls okay
 

00:20:40.630 --> 00:20:43.870 align:start position:0%
are in fact member function calls okay
so<00:20:41.630><c> fairly</c><00:20:42.320><c> easy</c><00:20:42.620><c> stuff</c><00:20:43.010><c> again</c><00:20:43.400><c> a</c><00:20:43.430><c> message</c>

00:20:43.870 --> 00:20:43.880 align:start position:0%
so fairly easy stuff again a message
 

00:20:43.880 --> 00:20:46.900 align:start position:0%
so fairly easy stuff again a message
expression<00:20:44.450><c> is</c><00:20:44.870><c> an</c><00:20:45.140><c> expression</c><00:20:45.530><c> so</c><00:20:46.250><c> just</c><00:20:46.790><c> as</c>

00:20:46.900 --> 00:20:46.910 align:start position:0%
expression is an expression so just as
 

00:20:46.910 --> 00:20:48.700 align:start position:0%
expression is an expression so just as
you<00:20:47.060><c> call</c><00:20:47.240><c> in</c><00:20:47.390><c> a</c><00:20:47.450><c> function</c><00:20:48.170><c> and</c><00:20:48.380><c> you</c><00:20:48.530><c> could</c>

00:20:48.700 --> 00:20:48.710 align:start position:0%
you call in a function and you could
 

00:20:48.710 --> 00:20:50.530 align:start position:0%
you call in a function and you could
provide<00:20:49.040><c> expressions</c><00:20:49.670><c> to</c><00:20:49.850><c> each</c><00:20:50.000><c> argument</c><00:20:50.480><c> of</c>

00:20:50.530 --> 00:20:50.540 align:start position:0%
provide expressions to each argument of
 

00:20:50.540 --> 00:20:52.300 align:start position:0%
provide expressions to each argument of
the<00:20:50.600><c> function</c><00:20:50.630><c> the</c><00:20:51.320><c> same</c><00:20:51.500><c> things</c><00:20:51.800><c> true</c><00:20:52.010><c> here</c>

00:20:52.300 --> 00:20:52.310 align:start position:0%
the function the same things true here
 

00:20:52.310 --> 00:20:54.120 align:start position:0%
the function the same things true here
that's<00:20:52.490><c> why</c><00:20:52.670><c> the</c><00:20:52.730><c> nesting</c><00:20:53.480><c> works</c><00:20:53.690><c> so</c><00:20:53.840><c> nicely</c>

00:20:54.120 --> 00:20:54.130 align:start position:0%
that's why the nesting works so nicely
 

00:20:54.130 --> 00:20:59.070 align:start position:0%
that's why the nesting works so nicely
there's<00:20:55.130><c> nothing</c><00:20:55.460><c> special</c><00:20:55.670><c> about</c><00:20:55.880><c> it</c><00:20:57.250><c> okay</c>

00:20:59.070 --> 00:20:59.080 align:start position:0%
there's nothing special about it okay
 

00:20:59.080 --> 00:21:02.980 align:start position:0%
there's nothing special about it okay
there<00:21:00.080><c> we</c><00:21:00.170><c> go</c><00:21:00.670><c> so</c><00:21:01.670><c> here</c><00:21:01.970><c> are</c><00:21:02.060><c> some</c><00:21:02.210><c> more</c><00:21:02.480><c> hybrid</c>

00:21:02.980 --> 00:21:02.990 align:start position:0%
there we go so here are some more hybrid
 

00:21:02.990 --> 00:21:05.230 align:start position:0%
there we go so here are some more hybrid
message<00:21:03.320><c> expressions</c><00:21:03.890><c> front</c><00:21:04.130><c> celestia</c><00:21:04.670><c> here</c>

00:21:05.230 --> 00:21:05.240 align:start position:0%
message expressions front celestia here
 

00:21:05.240 --> 00:21:09.160 align:start position:0%
message expressions front celestia here
we<00:21:05.630><c> have</c><00:21:07.060><c> we're</c><00:21:08.060><c> sending</c><00:21:08.300><c> the</c><00:21:08.540><c> star</c><00:21:08.780><c> message</c>

00:21:09.160 --> 00:21:09.170 align:start position:0%
we have we're sending the star message
 

00:21:09.170 --> 00:21:12.040 align:start position:0%
we have we're sending the star message
to<00:21:09.320><c> self</c><00:21:09.590><c> we're</c><00:21:10.550><c> then</c><00:21:10.850><c> dereference</c><00:21:11.660><c> saying</c><00:21:11.870><c> it</c>

00:21:12.040 --> 00:21:12.050 align:start position:0%
to self we're then dereference saying it
 

00:21:12.050 --> 00:21:14.610 align:start position:0%
to self we're then dereference saying it
calling<00:21:12.440><c> the</c><00:21:12.560><c> set</c><00:21:12.740><c> luminosity</c><00:21:13.600><c> member</c>

00:21:14.610 --> 00:21:14.620 align:start position:0%
calling the set luminosity member
 

00:21:14.620 --> 00:21:17.410 align:start position:0%
calling the set luminosity member
function<00:21:15.620><c> and</c><00:21:15.800><c> we're</c><00:21:16.370><c> passing</c><00:21:16.850><c> it</c><00:21:17.000><c> the</c><00:21:17.030><c> float</c>

00:21:17.410 --> 00:21:17.420 align:start position:0%
function and we're passing it the float
 

00:21:17.420 --> 00:21:19.240 align:start position:0%
function and we're passing it the float
value<00:21:17.810><c> from</c><00:21:17.990><c> an</c><00:21:18.140><c> objective-c</c><00:21:18.590><c> message</c>

00:21:19.240 --> 00:21:19.250 align:start position:0%
value from an objective-c message
 

00:21:19.250 --> 00:21:21.250 align:start position:0%
value from an objective-c message
expression<00:21:19.790><c> again</c><00:21:20.510><c> you</c><00:21:20.600><c> could</c><00:21:20.780><c> see</c><00:21:21.050><c> how</c>

00:21:21.250 --> 00:21:21.260 align:start position:0%
expression again you could see how
 

00:21:21.260 --> 00:21:23.380 align:start position:0%
expression again you could see how
natural<00:21:22.250><c> the</c><00:21:22.430><c> given</c><00:21:22.730><c> play</c><00:21:22.940><c> is</c><00:21:23.150><c> there's</c>

00:21:23.380 --> 00:21:23.390 align:start position:0%
natural the given play is there's
 

00:21:23.390 --> 00:21:25.990 align:start position:0%
natural the given play is there's
nothing<00:21:23.720><c> real</c><00:21:24.200><c> really</c><00:21:24.980><c> magic</c><00:21:25.340><c> going</c><00:21:25.520><c> on</c><00:21:25.730><c> and</c>

00:21:25.990 --> 00:21:26.000 align:start position:0%
nothing real really magic going on and
 

00:21:26.000 --> 00:21:30.390 align:start position:0%
nothing real really magic going on and
you<00:21:26.330><c> could</c><00:21:26.480><c> really</c><00:21:26.960><c> see</c><00:21:27.950><c> the</c><00:21:27.980><c> two</c><00:21:28.250><c> languages</c>

00:21:30.390 --> 00:21:30.400 align:start position:0%
you could really see the two languages
 

00:21:30.400 --> 00:21:33.610 align:start position:0%
you could really see the two languages
collaborating<00:21:31.400><c> and</c><00:21:31.600><c> and</c><00:21:32.600><c> working</c><00:21:33.470><c> well</c>

00:21:33.610 --> 00:21:33.620 align:start position:0%
collaborating and and working well
 

00:21:33.620 --> 00:21:35.860 align:start position:0%
collaborating and and working well
together<00:21:33.830><c> here</c><00:21:34.280><c> so</c><00:21:34.730><c> the</c><00:21:35.120><c> second</c><00:21:35.480><c> one</c><00:21:35.600><c> we</c><00:21:35.840><c> have</c>

00:21:35.860 --> 00:21:35.870 align:start position:0%
together here so the second one we have
 

00:21:35.870 --> 00:21:39.100 align:start position:0%
together here so the second one we have
NS<00:21:36.590><c> number</c><00:21:36.740><c> and</c><00:21:37.160><c> you</c><00:21:38.090><c> can</c><00:21:38.240><c> see</c><00:21:38.390><c> the</c><00:21:38.570><c> self</c><00:21:38.810><c> star</c>

00:21:39.100 --> 00:21:39.110 align:start position:0%
NS number and you can see the self star
 

00:21:39.110 --> 00:21:42.120 align:start position:0%
NS number and you can see the self star
and<00:21:39.410><c> it's</c><00:21:39.680><c> sending</c><00:21:39.920><c> the</c><00:21:40.040><c> get</c><00:21:40.250><c> temperature</c><00:21:40.700><c> on</c>

00:21:42.120 --> 00:21:42.130 align:start position:0%
and it's sending the get temperature on
 

00:21:42.130 --> 00:21:45.630 align:start position:0%
and it's sending the get temperature on
member<00:21:43.130><c> function</c><00:21:43.520><c> call</c><00:21:43.730><c> and</c><00:21:43.970><c> the</c><00:21:44.810><c> third</c><00:21:45.050><c> one</c>

00:21:45.630 --> 00:21:45.640 align:start position:0%
member function call and the third one
 

00:21:45.640 --> 00:21:48.670 align:start position:0%
member function call and the third one
we<00:21:46.640><c> have</c><00:21:46.880><c> simply</c><00:21:47.240><c> a</c><00:21:47.270><c> namespace</c><00:21:47.660><c> named</c><00:21:48.140><c> Astro</c>

00:21:48.670 --> 00:21:48.680 align:start position:0%
we have simply a namespace named Astro
 

00:21:48.680 --> 00:21:51.550 align:start position:0%
we have simply a namespace named Astro
and<00:21:48.890><c> there's</c><00:21:49.640><c> just</c><00:21:49.940><c> a</c><00:21:50.030><c> standard</c><00:21:50.510><c> C++</c><00:21:50.840><c> function</c>

00:21:51.550 --> 00:21:51.560 align:start position:0%
and there's just a standard C++ function
 

00:21:51.560 --> 00:21:54.100 align:start position:0%
and there's just a standard C++ function
that's<00:21:51.770><c> embedded</c><00:21:52.010><c> within</c><00:21:52.630><c> the</c><00:21:53.630><c> namespace</c><00:21:54.080><c> a</c>

00:21:54.100 --> 00:21:54.110 align:start position:0%
that's embedded within the namespace a
 

00:21:54.110 --> 00:21:56.020 align:start position:0%
that's embedded within the namespace a
stroke<00:21:54.650><c> called</c><00:21:54.860><c> light-years</c><00:21:55.340><c> two</c><00:21:55.580><c> parsecs</c>

00:21:56.020 --> 00:21:56.030 align:start position:0%
stroke called light-years two parsecs
 

00:21:56.030 --> 00:22:02.940 align:start position:0%
stroke called light-years two parsecs
and<00:21:56.180><c> it's</c><00:21:56.720><c> being</c><00:21:56.990><c> passed</c><00:21:57.230><c> the</c><00:21:57.470><c> float</c><00:21:57.650><c> value</c>

00:22:02.940 --> 00:22:02.950 align:start position:0%
 
 

00:22:02.950 --> 00:22:05.580 align:start position:0%
 
okay<00:22:03.869><c> next</c><00:22:04.869><c> thing</c><00:22:04.989><c> I'd</c><00:22:05.080><c> like</c><00:22:05.109><c> to</c><00:22:05.289><c> talk</c><00:22:05.529><c> about</c>

00:22:05.580 --> 00:22:05.590 align:start position:0%
okay next thing I'd like to talk about
 

00:22:05.590 --> 00:22:09.389 align:start position:0%
okay next thing I'd like to talk about
is<00:22:05.980><c> some</c><00:22:06.190><c> dynamic</c><00:22:06.700><c> idioms</c><00:22:07.059><c> okay</c><00:22:08.399><c> method</c>

00:22:09.389 --> 00:22:09.399 align:start position:0%
is some dynamic idioms okay method
 

00:22:09.399 --> 00:22:11.310 align:start position:0%
is some dynamic idioms okay method
categories<00:22:10.059><c> are</c><00:22:10.269><c> something</c><00:22:10.690><c> we</c><00:22:10.809><c> use</c><00:22:11.049><c> pretty</c>

00:22:11.310 --> 00:22:11.320 align:start position:0%
categories are something we use pretty
 

00:22:11.320 --> 00:22:13.169 align:start position:0%
categories are something we use pretty
extensively<00:22:11.950><c> in</c><00:22:12.159><c> the</c><00:22:12.249><c> application</c><00:22:12.850><c> kit</c><00:22:13.059><c> it</c>

00:22:13.169 --> 00:22:13.179 align:start position:0%
extensively in the application kit it
 

00:22:13.179 --> 00:22:16.019 align:start position:0%
extensively in the application kit it
allows<00:22:13.509><c> us</c><00:22:13.539><c> to</c><00:22:14.499><c> augment</c><00:22:15.009><c> existing</c><00:22:15.249><c> classes</c>

00:22:16.019 --> 00:22:16.029 align:start position:0%
allows us to augment existing classes
 

00:22:16.029 --> 00:22:17.580 align:start position:0%
allows us to augment existing classes
it's<00:22:16.749><c> something</c><00:22:17.080><c> you</c><00:22:17.169><c> don't</c><00:22:17.289><c> see</c><00:22:17.559><c> very</c>

00:22:17.580 --> 00:22:17.590 align:start position:0%
it's something you don't see very
 

00:22:17.590 --> 00:22:19.379 align:start position:0%
it's something you don't see very
commonly<00:22:18.159><c> and</c><00:22:18.639><c> other</c><00:22:18.759><c> object-oriented</c>

00:22:19.379 --> 00:22:19.389 align:start position:0%
commonly and other object-oriented
 

00:22:19.389 --> 00:22:21.210 align:start position:0%
commonly and other object-oriented
languages<00:22:19.869><c> if</c><00:22:20.049><c> you</c><00:22:20.169><c> look</c><00:22:20.350><c> at</c><00:22:20.499><c> Common</c><00:22:20.859><c> Lisp</c><00:22:20.889><c> or</c>

00:22:21.210 --> 00:22:21.220 align:start position:0%
languages if you look at Common Lisp or
 

00:22:21.220 --> 00:22:23.159 align:start position:0%
languages if you look at Common Lisp or
you<00:22:21.730><c> look</c><00:22:21.940><c> at</c><00:22:22.059><c> some</c><00:22:22.210><c> other</c><00:22:22.419><c> more</c><00:22:22.690><c> dynamic</c>

00:22:23.159 --> 00:22:23.169 align:start position:0%
you look at some other more dynamic
 

00:22:23.169 --> 00:22:26.700 align:start position:0%
you look at some other more dynamic
languages<00:22:24.659><c> they're</c><00:22:25.659><c> not</c><00:22:25.809><c> called</c><00:22:26.080><c> categories</c>

00:22:26.700 --> 00:22:26.710 align:start position:0%
languages they're not called categories
 

00:22:26.710 --> 00:22:28.080 align:start position:0%
languages they're not called categories
but<00:22:26.889><c> they</c><00:22:26.950><c> allow</c><00:22:27.190><c> you</c><00:22:27.249><c> to</c><00:22:27.369><c> do</c><00:22:27.549><c> the</c><00:22:27.669><c> same</c><00:22:27.820><c> thing</c>

00:22:28.080 --> 00:22:28.090 align:start position:0%
but they allow you to do the same thing
 

00:22:28.090 --> 00:22:29.310 align:start position:0%
but they allow you to do the same thing
what<00:22:28.239><c> they</c><00:22:28.330><c> allow</c><00:22:28.570><c> you</c><00:22:28.629><c> to</c><00:22:28.779><c> do</c><00:22:28.960><c> is</c><00:22:29.109><c> add</c>

00:22:29.310 --> 00:22:29.320 align:start position:0%
what they allow you to do is add
 

00:22:29.320 --> 00:22:31.889 align:start position:0%
what they allow you to do is add
operations<00:22:30.159><c> to</c><00:22:30.369><c> an</c><00:22:30.460><c> existing</c><00:22:30.909><c> class</c><00:22:31.119><c> so</c>

00:22:31.889 --> 00:22:31.899 align:start position:0%
operations to an existing class so
 

00:22:31.899 --> 00:22:32.789 align:start position:0%
operations to an existing class so
here's<00:22:32.139><c> an</c><00:22:32.259><c> example</c>

00:22:32.789 --> 00:22:32.799 align:start position:0%
here's an example
 

00:22:32.799 --> 00:22:35.190 align:start position:0%
here's an example
we're<00:22:33.369><c> on</c><00:22:33.700><c> the</c><00:22:33.970><c> app</c><00:22:34.090><c> kit</c><00:22:34.389><c> is</c><00:22:34.539><c> adding</c><00:22:34.960><c> some</c>

00:22:35.190 --> 00:22:35.200 align:start position:0%
we're on the app kit is adding some
 

00:22:35.200 --> 00:22:37.769 align:start position:0%
we're on the app kit is adding some
string<00:22:35.559><c> drawing</c><00:22:35.889><c> methods</c><00:22:36.309><c> to</c><00:22:36.909><c> the</c><00:22:36.940><c> foundation</c>

00:22:37.769 --> 00:22:37.779 align:start position:0%
string drawing methods to the foundation
 

00:22:37.779 --> 00:22:40.710 align:start position:0%
string drawing methods to the foundation
string<00:22:38.080><c> object</c><00:22:39.359><c> likewise</c>

00:22:40.710 --> 00:22:40.720 align:start position:0%
string object likewise
 

00:22:40.720 --> 00:22:43.379 align:start position:0%
string object likewise
here's<00:22:41.019><c> an</c><00:22:41.559><c> objective</c><00:22:42.039><c> C++</c><00:22:42.669><c> category</c><00:22:43.210><c> that</c>

00:22:43.379 --> 00:22:43.389 align:start position:0%
here's an objective C++ category that
 

00:22:43.389 --> 00:22:46.889 align:start position:0%
here's an objective C++ category that
Celestia<00:22:43.899><c> adds</c><00:22:44.109><c> to</c><00:22:44.769><c> convert</c><00:22:45.249><c> NS</c><00:22:46.119><c> strings</c><00:22:46.480><c> to</c>

00:22:46.889 --> 00:22:46.899 align:start position:0%
Celestia adds to convert NS strings to
 

00:22:46.899 --> 00:22:53.549 align:start position:0%
Celestia adds to convert NS strings to
and<00:22:47.109><c> from</c><00:22:47.789><c> the</c><00:22:48.789><c> standard</c><00:22:49.179><c> strings</c><00:22:52.169><c> so</c><00:22:53.169><c> I</c><00:22:53.200><c> want</c>

00:22:53.549 --> 00:22:53.559 align:start position:0%
and from the standard strings so I want
 

00:22:53.559 --> 00:22:55.529 align:start position:0%
and from the standard strings so I want
to<00:22:53.619><c> show</c><00:22:53.919><c> you</c><00:22:53.980><c> briefly</c><00:22:54.309><c> how</c><00:22:54.820><c> it</c><00:22:54.850><c> works</c><00:22:55.269><c> because</c>

00:22:55.529 --> 00:22:55.539 align:start position:0%
to show you briefly how it works because
 

00:22:55.539 --> 00:22:58.830 align:start position:0%
to show you briefly how it works because
I<00:22:55.869><c> think</c><00:22:55.929><c> many</c><00:22:56.830><c> people</c><00:22:57.220><c> who</c><00:22:57.340><c> are</c><00:22:57.429><c> new</c><00:22:57.730><c> to</c><00:22:57.840><c> some</c>

00:22:58.830 --> 00:22:58.840 align:start position:0%
I think many people who are new to some
 

00:22:58.840 --> 00:23:00.149 align:start position:0%
I think many people who are new to some
of<00:22:58.960><c> the</c><00:22:59.049><c> dynamic</c><00:22:59.529><c> properties</c><00:22:59.739><c> that</c>

00:23:00.149 --> 00:23:00.159 align:start position:0%
of the dynamic properties that
 

00:23:00.159 --> 00:23:01.950 align:start position:0%
of the dynamic properties that
objective-c<00:23:00.639><c> has</c><00:23:00.940><c> they</c><00:23:01.119><c> get</c><00:23:01.299><c> confused</c><00:23:01.509><c> so</c>

00:23:01.950 --> 00:23:01.960 align:start position:0%
objective-c has they get confused so
 

00:23:01.960 --> 00:23:04.619 align:start position:0%
objective-c has they get confused so
here<00:23:02.259><c> are</c><00:23:02.590><c> three</c><00:23:03.340><c> bodies</c><00:23:03.970><c> of</c><00:23:04.119><c> code</c><00:23:04.330><c> we</c><00:23:04.509><c> have</c>

00:23:04.619 --> 00:23:04.629 align:start position:0%
here are three bodies of code we have
 

00:23:04.629 --> 00:23:07.859 align:start position:0%
here are three bodies of code we have
the<00:23:04.779><c> foundation</c><00:23:05.429><c> where</c><00:23:06.429><c> NS</c><00:23:06.700><c> string</c><00:23:06.820><c> lives</c><00:23:07.210><c> we</c>

00:23:07.859 --> 00:23:07.869 align:start position:0%
the foundation where NS string lives we
 

00:23:07.869 --> 00:23:10.830 align:start position:0%
the foundation where NS string lives we
have<00:23:08.019><c> a</c><00:23:08.259><c> pit</c><00:23:08.619><c> with</c><00:23:09.580><c> a</c><00:23:09.639><c> category</c><00:23:10.059><c> that</c><00:23:10.509><c> you</c><00:23:10.629><c> just</c>

00:23:10.830 --> 00:23:10.840 align:start position:0%
have a pit with a category that you just
 

00:23:10.840 --> 00:23:14.820 align:start position:0%
have a pit with a category that you just
saw<00:23:11.049><c> we</c><00:23:11.859><c> have</c><00:23:12.009><c> Celestia</c><00:23:12.669><c> with</c><00:23:13.419><c> that</c><00:23:13.809><c> on</c><00:23:14.169><c> that</c>

00:23:14.820 --> 00:23:14.830 align:start position:0%
saw we have Celestia with that on that
 

00:23:14.830 --> 00:23:16.799 align:start position:0%
saw we have Celestia with that on that
category<00:23:15.190><c> with</c><00:23:15.489><c> the</c><00:23:15.519><c> two</c><00:23:15.759><c> methods</c><00:23:16.119><c> what</c>

00:23:16.799 --> 00:23:16.809 align:start position:0%
category with the two methods what
 

00:23:16.809 --> 00:23:20.940 align:start position:0%
category with the two methods what
happens<00:23:17.259><c> is</c><00:23:17.499><c> at</c><00:23:17.739><c> runtime</c><00:23:18.279><c> the</c><00:23:19.409><c> runtime</c><00:23:20.409><c> links</c>

00:23:20.940 --> 00:23:20.950 align:start position:0%
happens is at runtime the runtime links
 

00:23:20.950 --> 00:23:23.789 align:start position:0%
happens is at runtime the runtime links
things<00:23:21.220><c> up</c><00:23:21.460><c> and</c><00:23:21.669><c> looks</c><00:23:22.450><c> actually</c><00:23:23.320><c> when</c><00:23:23.679><c> it</c>

00:23:23.789 --> 00:23:23.799 align:start position:0%
things up and looks actually when it
 

00:23:23.799 --> 00:23:26.669 align:start position:0%
things up and looks actually when it
loads<00:23:24.039><c> the</c><00:23:24.399><c> shared</c><00:23:24.639><c> library</c><00:23:25.210><c> it</c><00:23:25.450><c> says</c><00:23:25.929><c> Oh</c><00:23:26.139><c> a</c>

00:23:26.669 --> 00:23:26.679 align:start position:0%
loads the shared library it says Oh a
 

00:23:26.679 --> 00:23:28.830 align:start position:0%
loads the shared library it says Oh a
category<00:23:27.249><c> who</c><00:23:27.460><c> are</c><00:23:27.609><c> you</c><00:23:27.700><c> associated</c><00:23:28.029><c> with</c><00:23:28.480><c> and</c>

00:23:28.830 --> 00:23:28.840 align:start position:0%
category who are you associated with and
 

00:23:28.840 --> 00:23:30.419 align:start position:0%
category who are you associated with and
then<00:23:29.230><c> it</c><00:23:29.379><c> goes</c><00:23:29.559><c> and</c><00:23:29.799><c> looks</c><00:23:29.950><c> up</c><00:23:30.070><c> the</c><00:23:30.190><c> class</c>

00:23:30.419 --> 00:23:30.429 align:start position:0%
then it goes and looks up the class
 

00:23:30.429 --> 00:23:32.519 align:start position:0%
then it goes and looks up the class
dynamically<00:23:31.119><c> and</c><00:23:31.299><c> it</c><00:23:31.600><c> sets</c><00:23:31.869><c> the</c><00:23:32.139><c> method</c>

00:23:32.519 --> 00:23:32.529 align:start position:0%
dynamically and it sets the method
 

00:23:32.529 --> 00:23:34.200 align:start position:0%
dynamically and it sets the method
tables<00:23:32.859><c> accordingly</c><00:23:33.309><c> so</c><00:23:33.639><c> that</c><00:23:33.820><c> you</c><00:23:33.940><c> can</c>

00:23:34.200 --> 00:23:34.210 align:start position:0%
tables accordingly so that you can
 

00:23:34.210 --> 00:23:37.049 align:start position:0%
tables accordingly so that you can
basically<00:23:35.039><c> extend</c><00:23:36.039><c> the</c><00:23:36.159><c> class</c><00:23:36.279><c> methods</c><00:23:36.850><c> in</c><00:23:36.999><c> a</c>

00:23:37.049 --> 00:23:37.059 align:start position:0%
basically extend the class methods in a
 

00:23:37.059 --> 00:23:40.320 align:start position:0%
basically extend the class methods in a
fairly<00:23:37.389><c> seamless</c><00:23:37.809><c> way</c><00:23:38.159><c> here</c><00:23:39.159><c> you</c><00:23:39.309><c> see</c><00:23:39.519><c> the</c><00:23:40.090><c> NS</c>

00:23:40.320 --> 00:23:40.330 align:start position:0%
fairly seamless way here you see the NS
 

00:23:40.330 --> 00:23:42.090 align:start position:0%
fairly seamless way here you see the NS
string<00:23:40.600><c> method</c><00:23:40.929><c> table</c><00:23:41.259><c> points</c><00:23:41.590><c> to</c><00:23:41.739><c> the</c><00:23:41.859><c> string</c>

00:23:42.090 --> 00:23:42.100 align:start position:0%
string method table points to the string
 

00:23:42.100 --> 00:23:44.190 align:start position:0%
string method table points to the string
drawing<00:23:42.399><c> method</c><00:23:42.700><c> table</c><00:23:42.999><c> which</c><00:23:43.119><c> points</c><00:23:43.480><c> to</c><00:23:43.629><c> so</c>

00:23:44.190 --> 00:23:44.200 align:start position:0%
drawing method table which points to so
 

00:23:44.200 --> 00:23:46.440 align:start position:0%
drawing method table which points to so
anything<00:23:45.190><c> in</c><00:23:45.279><c> the</c><00:23:45.369><c> app</c><00:23:45.519><c> kit</c><00:23:45.850><c> all</c><00:23:46.119><c> your</c>

00:23:46.440 --> 00:23:46.450 align:start position:0%
anything in the app kit all your
 

00:23:46.450 --> 00:23:48.779 align:start position:0%
anything in the app kit all your
applications<00:23:46.600><c> get</c><00:23:47.409><c> for</c><00:23:47.649><c> free</c><00:23:47.769><c> if</c><00:23:48.100><c> you</c><00:23:48.340><c> want</c><00:23:48.700><c> to</c>

00:23:48.779 --> 00:23:48.789 align:start position:0%
applications get for free if you want to
 

00:23:48.789 --> 00:23:51.749 align:start position:0%
applications get for free if you want to
have<00:23:48.909><c> a</c><00:23:48.940><c> private</c><00:23:49.330><c> category</c><00:23:50.139><c> as</c><00:23:50.549><c> Celestia</c><00:23:51.549><c> does</c>

00:23:51.749 --> 00:23:51.759 align:start position:0%
have a private category as Celestia does
 

00:23:51.759 --> 00:23:54.330 align:start position:0%
have a private category as Celestia does
that's<00:23:52.269><c> a</c><00:23:52.450><c> category</c><00:23:52.749><c> that</c><00:23:53.080><c> would</c><00:23:53.200><c> be</c><00:23:53.379><c> embodied</c>

00:23:54.330 --> 00:23:54.340 align:start position:0%
that's a category that would be embodied
 

00:23:54.340 --> 00:23:56.430 align:start position:0%
that's a category that would be embodied
with<00:23:54.730><c> the</c><00:23:55.119><c> actual</c><00:23:55.570><c> executable</c><00:23:56.019><c> for</c><00:23:56.350><c> the</c>

00:23:56.430 --> 00:23:56.440 align:start position:0%
with the actual executable for the
 

00:23:56.440 --> 00:23:58.169 align:start position:0%
with the actual executable for the
application<00:23:57.039><c> that</c><00:23:57.220><c> would</c><00:23:57.549><c> obviously</c><00:23:57.700><c> not</c><00:23:58.119><c> be</c>

00:23:58.169 --> 00:23:58.179 align:start position:0%
application that would obviously not be
 

00:23:58.179 --> 00:24:02.639 align:start position:0%
application that would obviously not be
shared<00:23:58.600><c> with</c><00:23:58.749><c> other</c><00:23:59.499><c> executables</c><00:24:01.049><c> and</c><00:24:02.049><c> what</c>

00:24:02.639 --> 00:24:02.649 align:start position:0%
shared with other executables and what
 

00:24:02.649 --> 00:24:05.239 align:start position:0%
shared with other executables and what
what<00:24:03.070><c> this</c><00:24:03.159><c> allows</c><00:24:03.519><c> you</c><00:24:03.850><c> to</c><00:24:03.970><c> associate</c>

00:24:05.239 --> 00:24:05.249 align:start position:0%
what this allows you to associate
 

00:24:05.249 --> 00:24:09.509 align:start position:0%
what this allows you to associate
methods<00:24:06.299><c> with</c><00:24:07.299><c> other</c><00:24:07.659><c> objects</c><00:24:08.440><c> that</c><00:24:09.159><c> work</c><00:24:09.369><c> on</c>

00:24:09.509 --> 00:24:09.519 align:start position:0%
methods with other objects that work on
 

00:24:09.519 --> 00:24:11.339 align:start position:0%
methods with other objects that work on
their<00:24:09.700><c> behalf</c><00:24:09.850><c> so</c><00:24:10.239><c> for</c><00:24:10.509><c> instance</c><00:24:10.869><c> these</c>

00:24:11.339 --> 00:24:11.349 align:start position:0%
their behalf so for instance these
 

00:24:11.349 --> 00:24:13.200 align:start position:0%
their behalf so for instance these
method<00:24:11.739><c> tables</c><00:24:12.099><c> aren't</c><00:24:12.309><c> a</c><00:24:12.429><c> part</c><00:24:12.580><c> of</c><00:24:12.730><c> NS</c><00:24:12.970><c> view</c>

00:24:13.200 --> 00:24:13.210 align:start position:0%
method tables aren't a part of NS view
 

00:24:13.210 --> 00:24:14.489 align:start position:0%
method tables aren't a part of NS view
they're<00:24:13.419><c> not</c><00:24:13.599><c> a</c><00:24:13.629><c> part</c><00:24:13.929><c> of</c><00:24:13.989><c> the</c><00:24:14.109><c> Celestia</c>

00:24:14.489 --> 00:24:14.499 align:start position:0%
they're not a part of the Celestia
 

00:24:14.499 --> 00:24:16.560 align:start position:0%
they're not a part of the Celestia
galaxy<00:24:15.009><c> but</c><00:24:15.549><c> there</c><00:24:15.789><c> are</c><00:24:15.879><c> methods</c>

00:24:16.560 --> 00:24:16.570 align:start position:0%
galaxy but there are methods
 

00:24:16.570 --> 00:24:19.140 align:start position:0%
galaxy but there are methods
the<00:24:16.690><c> galaxy</c><00:24:17.260><c> and</c><00:24:17.530><c> the</c><00:24:17.650><c> view</c><00:24:17.920><c> would</c><00:24:18.610><c> like</c><00:24:18.670><c> to</c>

00:24:19.140 --> 00:24:19.150 align:start position:0%
the galaxy and the view would like to
 

00:24:19.150 --> 00:24:23.630 align:start position:0%
the galaxy and the view would like to
call<00:24:19.390><c> on</c><00:24:19.630><c> behalf</c><00:24:20.080><c> of</c><00:24:20.880><c> the</c><00:24:21.880><c> string</c><00:24:22.120><c> object</c><00:24:22.300><c> so</c>

00:24:23.630 --> 00:24:23.640 align:start position:0%
call on behalf of the string object so
 

00:24:23.640 --> 00:24:25.830 align:start position:0%
call on behalf of the string object so
so<00:24:24.640><c> why</c><00:24:24.820><c> is</c><00:24:24.880><c> all</c><00:24:25.120><c> this</c><00:24:25.240><c> interesting</c><00:24:25.540><c> it's</c>

00:24:25.830 --> 00:24:25.840 align:start position:0%
so why is all this interesting it's
 

00:24:25.840 --> 00:24:27.870 align:start position:0%
so why is all this interesting it's
because<00:24:26.200><c> you</c><00:24:26.380><c> don't</c><00:24:26.650><c> have</c><00:24:26.830><c> control</c><00:24:27.340><c> of</c><00:24:27.370><c> who</c>

00:24:27.870 --> 00:24:27.880 align:start position:0%
because you don't have control of who
 

00:24:27.880 --> 00:24:30.240 align:start position:0%
because you don't have control of who
instantiates<00:24:28.510><c> objects</c><00:24:29.020><c> all</c><00:24:29.140><c> the</c><00:24:29.260><c> time</c><00:24:29.470><c> right</c>

00:24:30.240 --> 00:24:30.250 align:start position:0%
instantiates objects all the time right
 

00:24:30.250 --> 00:24:31.590 align:start position:0%
instantiates objects all the time right
one<00:24:30.460><c> of</c><00:24:30.550><c> the</c><00:24:30.640><c> things</c><00:24:30.850><c> that</c><00:24:31.030><c> frameworks</c><00:24:31.450><c> are</c>

00:24:31.590 --> 00:24:31.600 align:start position:0%
one of the things that frameworks are
 

00:24:31.600 --> 00:24:34.320 align:start position:0%
one of the things that frameworks are
really<00:24:31.840><c> good</c><00:24:32.050><c> at</c><00:24:32.230><c> is</c><00:24:32.470><c> doing</c><00:24:33.430><c> work</c><00:24:33.760><c> on</c><00:24:33.970><c> your</c>

00:24:34.320 --> 00:24:34.330 align:start position:0%
really good at is doing work on your
 

00:24:34.330 --> 00:24:36.090 align:start position:0%
really good at is doing work on your
behalf<00:24:34.480><c> where</c><00:24:34.990><c> you</c><00:24:35.080><c> actually</c><00:24:35.350><c> don't</c><00:24:35.830><c> know</c>

00:24:36.090 --> 00:24:36.100 align:start position:0%
behalf where you actually don't know
 

00:24:36.100 --> 00:24:38.580 align:start position:0%
behalf where you actually don't know
what<00:24:36.790><c> class</c><00:24:37.120><c> is</c><00:24:37.480><c> going</c><00:24:37.750><c> to</c><00:24:37.840><c> be</c><00:24:37.930><c> it</c><00:24:38.110><c> is</c><00:24:38.350><c> going</c><00:24:38.500><c> to</c>

00:24:38.580 --> 00:24:38.590 align:start position:0%
what class is going to be it is going to
 

00:24:38.590 --> 00:24:41.400 align:start position:0%
what class is going to be it is going to
be<00:24:38.740><c> sent</c><00:24:39.010><c> the</c><00:24:39.100><c> message</c><00:24:39.460><c> so</c><00:24:40.090><c> we</c><00:24:41.050><c> think</c><00:24:41.230><c> this</c>

00:24:41.400 --> 00:24:41.410 align:start position:0%
be sent the message so we think this
 

00:24:41.410 --> 00:24:43.290 align:start position:0%
be sent the message so we think this
works<00:24:41.620><c> really</c><00:24:41.800><c> well</c><00:24:42.070><c> and</c><00:24:42.430><c> in</c><00:24:42.670><c> fact</c><00:24:42.880><c> people</c>

00:24:43.290 --> 00:24:43.300 align:start position:0%
works really well and in fact people
 

00:24:43.300 --> 00:24:46.260 align:start position:0%
works really well and in fact people
have<00:24:43.540><c> used</c><00:24:43.720><c> it</c><00:24:43.900><c> in</c><00:24:44.590><c> very</c><00:24:45.580><c> interesting</c><00:24:45.820><c> ways</c><00:24:46.090><c> in</c>

00:24:46.260 --> 00:24:46.270 align:start position:0%
have used it in very interesting ways in
 

00:24:46.270 --> 00:24:50.250 align:start position:0%
have used it in very interesting ways in
various<00:24:46.780><c> applications</c><00:24:48.780><c> so</c><00:24:49.780><c> another</c><00:24:50.020><c> dynamic</c>

00:24:50.250 --> 00:24:50.260 align:start position:0%
various applications so another dynamic
 

00:24:50.260 --> 00:24:53.790 align:start position:0%
various applications so another dynamic
idiom<00:24:50.830><c> we</c><00:24:50.980><c> have</c><00:24:51.100><c> the</c><00:24:51.250><c> set</c><00:24:51.460><c> cell</c><00:24:51.730><c> class</c><00:24:52.800><c> method</c>

00:24:53.790 --> 00:24:53.800 align:start position:0%
idiom we have the set cell class method
 

00:24:53.800 --> 00:24:55.320 align:start position:0%
idiom we have the set cell class method
basically<00:24:54.070><c> classes</c><00:24:54.910><c> are</c><00:24:55.030><c> first-class</c>

00:24:55.320 --> 00:24:55.330 align:start position:0%
basically classes are first-class
 

00:24:55.330 --> 00:24:57.720 align:start position:0%
basically classes are first-class
objects<00:24:55.960><c> in</c><00:24:56.110><c> objective-c</c><00:24:56.560><c> you</c><00:24:57.220><c> can</c><00:24:57.370><c> reason</c>

00:24:57.720 --> 00:24:57.730 align:start position:0%
objects in objective-c you can reason
 

00:24:57.730 --> 00:24:59.460 align:start position:0%
objects in objective-c you can reason
about<00:24:57.790><c> them</c><00:24:58.180><c> if</c><00:24:58.300><c> you</c><00:24:58.390><c> dynamically</c><00:24:58.990><c> load</c><00:24:59.170><c> code</c>

00:24:59.460 --> 00:24:59.470 align:start position:0%
about them if you dynamically load code
 

00:24:59.470 --> 00:25:01.890 align:start position:0%
about them if you dynamically load code
you<00:25:00.010><c> can</c><00:25:00.160><c> find</c><00:25:00.400><c> out</c><00:25:00.550><c> what</c><00:25:00.760><c> classes</c><00:25:01.300><c> are</c><00:25:01.510><c> a</c><00:25:01.540><c> part</c>

00:25:01.890 --> 00:25:01.900 align:start position:0%
you can find out what classes are a part
 

00:25:01.900 --> 00:25:04.830 align:start position:0%
you can find out what classes are a part
of<00:25:02.020><c> that</c><00:25:02.080><c> code</c><00:25:02.440><c> and</c><00:25:02.830><c> and</c><00:25:03.270><c> invoke</c><00:25:04.270><c> methods</c><00:25:04.690><c> on</c>

00:25:04.830 --> 00:25:04.840 align:start position:0%
of that code and and invoke methods on
 

00:25:04.840 --> 00:25:06.870 align:start position:0%
of that code and and invoke methods on
them<00:25:05.080><c> set</c><00:25:05.710><c> cell</c><00:25:05.950><c> class</c><00:25:06.190><c> you</c><00:25:06.430><c> could</c><00:25:06.580><c> reason</c>

00:25:06.870 --> 00:25:06.880 align:start position:0%
them set cell class you could reason
 

00:25:06.880 --> 00:25:08.610 align:start position:0%
them set cell class you could reason
about<00:25:07.060><c> the</c><00:25:07.210><c> superclass</c><00:25:07.660><c> these</c><00:25:08.020><c> are</c><00:25:08.170><c> all</c><00:25:08.290><c> small</c>

00:25:08.610 --> 00:25:08.620 align:start position:0%
about the superclass these are all small
 

00:25:08.620 --> 00:25:10.800 align:start position:0%
about the superclass these are all small
talk<00:25:08.860><c> idioms</c><00:25:09.310><c> that</c><00:25:09.460><c> we</c><00:25:09.670><c> carried</c><00:25:10.030><c> over</c><00:25:10.180><c> into</c>

00:25:10.800 --> 00:25:10.810 align:start position:0%
talk idioms that we carried over into
 

00:25:10.810 --> 00:25:14.580 align:start position:0%
talk idioms that we carried over into
objective-c<00:25:11.500><c> and</c><00:25:12.420><c> these</c><00:25:13.420><c> kind</c><00:25:13.900><c> of</c><00:25:14.110><c> predicate</c>

00:25:14.580 --> 00:25:14.590 align:start position:0%
objective-c and these kind of predicate
 

00:25:14.590 --> 00:25:17.670 align:start position:0%
objective-c and these kind of predicate
to<00:25:15.010><c> basically</c><00:25:15.400><c> ask</c><00:25:15.760><c> is</c><00:25:16.270><c> this</c><00:25:16.900><c> class</c><00:25:17.170><c> a</c><00:25:17.200><c> kind</c><00:25:17.590><c> of</c>

00:25:17.670 --> 00:25:17.680 align:start position:0%
to basically ask is this class a kind of
 

00:25:17.680 --> 00:25:19.560 align:start position:0%
to basically ask is this class a kind of
another<00:25:17.890><c> class</c><00:25:18.070><c> now</c><00:25:18.280><c> notice</c><00:25:18.730><c> the</c><00:25:19.360><c> function</c>

00:25:19.560 --> 00:25:19.570 align:start position:0%
another class now notice the function
 

00:25:19.570 --> 00:25:21.720 align:start position:0%
another class now notice the function
there<00:25:20.050><c> the</c><00:25:20.470><c> function</c><00:25:20.860><c> allows</c><00:25:21.130><c> you</c><00:25:21.340><c> to</c><00:25:21.520><c> take</c><00:25:21.700><c> a</c>

00:25:21.720 --> 00:25:21.730 align:start position:0%
there the function allows you to take a
 

00:25:21.730 --> 00:25:24.500 align:start position:0%
there the function allows you to take a
string<00:25:22.240><c> and</c><00:25:22.600><c> convert</c><00:25:22.750><c> it</c><00:25:23.200><c> into</c><00:25:23.410><c> an</c><00:25:23.890><c> object</c>

00:25:24.500 --> 00:25:24.510 align:start position:0%
string and convert it into an object
 

00:25:24.510 --> 00:25:27.540 align:start position:0%
string and convert it into an object
okay<00:25:25.540><c> that's</c><00:25:26.110><c> another</c><00:25:26.470><c> metaphor</c><00:25:27.370><c> we</c><00:25:27.520><c> use</c>

00:25:27.540 --> 00:25:27.550 align:start position:0%
okay that's another metaphor we use
 

00:25:27.550 --> 00:25:29.370 align:start position:0%
okay that's another metaphor we use
quite<00:25:27.940><c> heavily</c><00:25:28.150><c> because</c><00:25:28.420><c> the</c><00:25:28.660><c> compiler</c><00:25:28.960><c> can't</c>

00:25:29.370 --> 00:25:29.380 align:start position:0%
quite heavily because the compiler can't
 

00:25:29.380 --> 00:25:32.580 align:start position:0%
quite heavily because the compiler can't
always<00:25:29.560><c> know</c><00:25:29.710><c> or</c><00:25:30.340><c> be</c><00:25:30.550><c> told</c><00:25:30.790><c> what</c><00:25:31.120><c> class</c><00:25:31.590><c> often</c>

00:25:32.580 --> 00:25:32.590 align:start position:0%
always know or be told what class often
 

00:25:32.590 --> 00:25:34.470 align:start position:0%
always know or be told what class often
it's<00:25:32.950><c> reading</c><00:25:33.310><c> those</c><00:25:33.460><c> things</c><00:25:33.730><c> from</c><00:25:34.060><c> external</c>

00:25:34.470 --> 00:25:34.480 align:start position:0%
it's reading those things from external
 

00:25:34.480 --> 00:25:39.600 align:start position:0%
it's reading those things from external
files<00:25:34.870><c> like</c><00:25:35.200><c> your</c><00:25:35.350><c> nib</c><00:25:35.530><c> file</c><00:25:37.800><c> so</c><00:25:38.800><c> here</c><00:25:39.130><c> our</c>

00:25:39.600 --> 00:25:39.610 align:start position:0%
files like your nib file so here our
 

00:25:39.610 --> 00:25:41.250 align:start position:0%
files like your nib file so here our
methods<00:25:39.940><c> are</c><00:25:40.060><c> first-class</c><00:25:40.330><c> objects</c><00:25:40.930><c> as</c><00:25:41.050><c> well</c>

00:25:41.250 --> 00:25:41.260 align:start position:0%
methods are first-class objects as well
 

00:25:41.260 --> 00:25:47.700 align:start position:0%
methods are first-class objects as well
and<00:25:44.280><c> here's</c><00:25:45.280><c> a</c><00:25:45.370><c> selector</c><00:25:46.240><c> the</c><00:25:46.930><c> unique</c><00:25:47.200><c> code</c><00:25:47.440><c> so</c>

00:25:47.700 --> 00:25:47.710 align:start position:0%
and here's a selector the unique code so
 

00:25:47.710 --> 00:25:50.010 align:start position:0%
and here's a selector the unique code so
if<00:25:47.950><c> you</c><00:25:48.280><c> want</c><00:25:48.550><c> to</c><00:25:48.640><c> compare</c><00:25:49.270><c> selectors</c><00:25:49.840><c> you</c>

00:25:50.010 --> 00:25:50.020 align:start position:0%
if you want to compare selectors you
 

00:25:50.020 --> 00:25:54.360 align:start position:0%
if you want to compare selectors you
need<00:25:50.290><c> to</c><00:25:51.360><c> convert</c><00:25:52.360><c> them</c><00:25:52.630><c> if</c><00:25:52.980><c> you</c><00:25:53.980><c> want</c><00:25:54.190><c> to</c><00:25:54.250><c> get</c>

00:25:54.360 --> 00:25:54.370 align:start position:0%
need to convert them if you want to get
 

00:25:54.370 --> 00:25:55.890 align:start position:0%
need to convert them if you want to get
a<00:25:54.400><c> method</c><00:25:54.730><c> signature</c><00:25:55.120><c> you</c><00:25:55.210><c> need</c><00:25:55.360><c> a</c><00:25:55.390><c> selector</c>

00:25:55.890 --> 00:25:55.900 align:start position:0%
a method signature you need a selector
 

00:25:55.900 --> 00:25:57.150 align:start position:0%
a method signature you need a selector
so<00:25:56.050><c> in</c><00:25:56.200><c> this</c><00:25:56.290><c> case</c><00:25:56.500><c> it's</c><00:25:56.710><c> already</c><00:25:56.980><c> been</c>

00:25:57.150 --> 00:25:57.160 align:start position:0%
so in this case it's already been
 

00:25:57.160 --> 00:25:59.210 align:start position:0%
so in this case it's already been
converted<00:25:57.520><c> we</c><00:25:58.240><c> send</c><00:25:58.840><c> that</c><00:25:58.930><c> message</c>

00:25:59.210 --> 00:25:59.220 align:start position:0%
converted we send that message
 

00:25:59.220 --> 00:26:01.530 align:start position:0%
converted we send that message
signatures<00:26:00.220><c> contain</c><00:26:00.730><c> the</c><00:26:00.850><c> type</c><00:26:01.060><c> so</c><00:26:01.300><c> if</c><00:26:01.420><c> you're</c>

00:26:01.530 --> 00:26:01.540 align:start position:0%
signatures contain the type so if you're
 

00:26:01.540 --> 00:26:02.670 align:start position:0%
signatures contain the type so if you're
writing<00:26:01.720><c> a</c><00:26:01.870><c> tool</c><00:26:02.050><c> you're</c><00:26:02.380><c> writing</c><00:26:02.620><c> a</c>

00:26:02.670 --> 00:26:02.680 align:start position:0%
writing a tool you're writing a
 

00:26:02.680 --> 00:26:04.140 align:start position:0%
writing a tool you're writing a
framework<00:26:02.950><c> and</c><00:26:03.280><c> you</c><00:26:03.310><c> want</c><00:26:03.520><c> to</c><00:26:03.580><c> know</c><00:26:03.700><c> what</c>

00:26:04.140 --> 00:26:04.150 align:start position:0%
framework and you want to know what
 

00:26:04.150 --> 00:26:07.590 align:start position:0%
framework and you want to know what
types<00:26:04.480><c> the</c><00:26:05.310><c> the</c><00:26:06.310><c> method</c><00:26:06.670><c> takes</c><00:26:06.940><c> the</c><00:26:07.180><c> signature</c>

00:26:07.590 --> 00:26:07.600 align:start position:0%
types the the method takes the signature
 

00:26:07.600 --> 00:26:10.650 align:start position:0%
types the the method takes the signature
is<00:26:07.660><c> really</c><00:26:07.960><c> handy</c><00:26:08.320><c> and</c><00:26:09.270><c> here's</c><00:26:10.270><c> a</c><00:26:10.330><c> net</c>

00:26:10.650 --> 00:26:10.660 align:start position:0%
is really handy and here's a net
 

00:26:10.660 --> 00:26:13.200 align:start position:0%
is really handy and here's a net
selector<00:26:11.110><c> directive</c><00:26:11.590><c> a</c><00:26:11.710><c> selector</c><00:26:12.280><c> is</c><00:26:12.520><c> the</c>

00:26:13.200 --> 00:26:13.210 align:start position:0%
selector directive a selector is the
 

00:26:13.210 --> 00:26:15.210 align:start position:0%
selector directive a selector is the
equivalent<00:26:13.720><c> of</c><00:26:13.750><c> the</c><00:26:13.900><c> function</c><00:26:14.320><c> in</c><00:26:14.530><c> this</c><00:26:14.920><c> slide</c>

00:26:15.210 --> 00:26:15.220 align:start position:0%
equivalent of the function in this slide
 

00:26:15.220 --> 00:26:16.710 align:start position:0%
equivalent of the function in this slide
the<00:26:15.670><c> only</c><00:26:15.880><c> difference</c><00:26:16.270><c> is</c><00:26:16.420><c> you're</c><00:26:16.570><c> telling</c>

00:26:16.710 --> 00:26:16.720 align:start position:0%
the only difference is you're telling
 

00:26:16.720 --> 00:26:18.720 align:start position:0%
the only difference is you're telling
the<00:26:16.930><c> compiler</c><00:26:17.290><c> to</c><00:26:17.680><c> do</c><00:26:18.040><c> it</c><00:26:18.220><c> so</c><00:26:18.340><c> it's</c><00:26:18.490><c> a</c><00:26:18.550><c> little</c>

00:26:18.720 --> 00:26:18.730 align:start position:0%
the compiler to do it so it's a little
 

00:26:18.730 --> 00:26:20.610 align:start position:0%
the compiler to do it so it's a little
more<00:26:18.850><c> optimal</c><00:26:19.480><c> because</c><00:26:19.840><c> you</c><00:26:20.110><c> know</c><00:26:20.290><c> the</c><00:26:20.440><c> name</c>

00:26:20.610 --> 00:26:20.620 align:start position:0%
more optimal because you know the name
 

00:26:20.620 --> 00:26:23.460 align:start position:0%
more optimal because you know the name
in<00:26:20.860><c> this</c><00:26:21.250><c> case</c><00:26:21.490><c> it's</c><00:26:21.700><c> a</c><00:26:21.880><c> lock</c><00:26:22.120><c> so</c><00:26:22.450><c> the</c><00:26:22.660><c> compiler</c>

00:26:23.460 --> 00:26:23.470 align:start position:0%
in this case it's a lock so the compiler
 

00:26:23.470 --> 00:26:25.620 align:start position:0%
in this case it's a lock so the compiler
will<00:26:23.830><c> get</c><00:26:24.250><c> the</c><00:26:24.370><c> unique</c><00:26:24.700><c> code</c><00:26:24.970><c> for</c><00:26:25.000><c> the</c><00:26:25.300><c> a</c><00:26:25.330><c> lock</c>

00:26:25.620 --> 00:26:25.630 align:start position:0%
will get the unique code for the a lock
 

00:26:25.630 --> 00:26:30.180 align:start position:0%
will get the unique code for the a lock
method

00:26:30.180 --> 00:26:30.190 align:start position:0%
 
 

00:26:30.190 --> 00:26:32.799 align:start position:0%
 
delegation<00:26:31.190><c> okay</c><00:26:31.730><c> this</c><00:26:32.000><c> is</c><00:26:32.180><c> something</c><00:26:32.510><c> that</c>

00:26:32.799 --> 00:26:32.809 align:start position:0%
delegation okay this is something that
 

00:26:32.809 --> 00:26:34.930 align:start position:0%
delegation okay this is something that
we<00:26:32.930><c> use</c><00:26:32.960><c> in</c><00:26:33.350><c> notifications</c><00:26:34.130><c> we</c><00:26:34.370><c> use</c><00:26:34.580><c> it</c><00:26:34.730><c> in</c><00:26:34.850><c> the</c>

00:26:34.930 --> 00:26:34.940 align:start position:0%
we use in notifications we use it in the
 

00:26:34.940 --> 00:26:36.940 align:start position:0%
we use in notifications we use it in the
target<00:26:35.300><c> action</c><00:26:35.690><c> paradigm</c><00:26:36.559><c> and</c><00:26:36.860><c> the</c>

00:26:36.940 --> 00:26:36.950 align:start position:0%
target action paradigm and the
 

00:26:36.950 --> 00:26:40.630 align:start position:0%
target action paradigm and the
application<00:26:37.550><c> kit</c><00:26:38.440><c> we</c><00:26:39.440><c> we</c><00:26:39.860><c> do</c><00:26:39.980><c> things</c><00:26:40.220><c> like</c><00:26:40.400><c> oh</c>

00:26:40.630 --> 00:26:40.640 align:start position:0%
application kit we we do things like oh
 

00:26:40.640 --> 00:26:42.400 align:start position:0%
application kit we we do things like oh
if<00:26:40.790><c> your</c><00:26:40.910><c> object</c><00:26:41.059><c> responds</c><00:26:41.660><c> to</c><00:26:41.809><c> this</c><00:26:41.930><c> elector</c>

00:26:42.400 --> 00:26:42.410 align:start position:0%
if your object responds to this elector
 

00:26:42.410 --> 00:26:42.820 align:start position:0%
if your object responds to this elector
wall

00:26:42.820 --> 00:26:42.830 align:start position:0%
wall
 

00:26:42.830 --> 00:26:45.070 align:start position:0%
wall
send<00:26:43.309><c> the</c><00:26:43.400><c> window</c><00:26:43.670><c> didn't</c><00:26:43.940><c> move</c><00:26:44.030><c> message</c><00:26:44.450><c> the</c>

00:26:45.070 --> 00:26:45.080 align:start position:0%
send the window didn't move message the
 

00:26:45.080 --> 00:26:46.990 align:start position:0%
send the window didn't move message the
window<00:26:45.350><c> didn't</c><00:26:45.590><c> move</c><00:26:45.680><c> message</c><00:26:46.100><c> as</c><00:26:46.250><c> part</c><00:26:46.490><c> of</c><00:26:46.580><c> a</c>

00:26:46.990 --> 00:26:47.000 align:start position:0%
window didn't move message as part of a
 

00:26:47.000 --> 00:26:50.860 align:start position:0%
window didn't move message as part of a
protocol<00:26:47.750><c> that</c><00:26:48.250><c> we</c><00:26:49.250><c> publish</c><00:26:49.670><c> for</c><00:26:50.030><c> tracking</c>

00:26:50.860 --> 00:26:50.870 align:start position:0%
protocol that we publish for tracking
 

00:26:50.870 --> 00:26:55.330 align:start position:0%
protocol that we publish for tracking
window<00:26:51.320><c> operations</c><00:26:51.980><c> and</c><00:26:53.380><c> this</c><00:26:54.380><c> is</c><00:26:54.590><c> this</c><00:26:55.130><c> is</c><00:26:55.190><c> a</c>

00:26:55.330 --> 00:26:55.340 align:start position:0%
window operations and this is this is a
 

00:26:55.340 --> 00:26:57.910 align:start position:0%
window operations and this is this is a
perfect<00:26:55.700><c> example</c><00:26:55.760><c> of</c><00:26:56.350><c> code</c><00:26:57.350><c> that</c><00:26:57.710><c> you</c><00:26:57.890><c> don't</c>

00:26:57.910 --> 00:26:57.920 align:start position:0%
perfect example of code that you don't
 

00:26:57.920 --> 00:27:00.250 align:start position:0%
perfect example of code that you don't
often<00:26:58.490><c> write</c><00:26:58.730><c> but</c><00:26:59.300><c> is</c><00:26:59.420><c> written</c><00:26:59.690><c> all</c><00:26:59.900><c> the</c><00:27:00.050><c> time</c>

00:27:00.250 --> 00:27:00.260 align:start position:0%
often write but is written all the time
 

00:27:00.260 --> 00:27:02.049 align:start position:0%
often write but is written all the time
in<00:27:00.470><c> the</c><00:27:00.559><c> framework</c><00:27:00.860><c> to</c><00:27:01.370><c> collaborate</c><00:27:01.910><c> with</c>

00:27:02.049 --> 00:27:02.059 align:start position:0%
in the framework to collaborate with
 

00:27:02.059 --> 00:27:04.480 align:start position:0%
in the framework to collaborate with
your<00:27:02.210><c> objects</c><00:27:02.690><c> so</c><00:27:03.410><c> again</c><00:27:04.010><c> it's</c><00:27:04.190><c> it's</c><00:27:04.370><c> an</c>

00:27:04.480 --> 00:27:04.490 align:start position:0%
your objects so again it's it's an
 

00:27:04.490 --> 00:27:06.580 align:start position:0%
your objects so again it's it's an
interesting<00:27:04.700><c> case</c><00:27:05.120><c> where</c><00:27:05.200><c> until</c><00:27:06.200><c> you</c><00:27:06.350><c> see</c>

00:27:06.580 --> 00:27:06.590 align:start position:0%
interesting case where until you see
 

00:27:06.590 --> 00:27:08.530 align:start position:0%
interesting case where until you see
some<00:27:06.830><c> of</c><00:27:06.860><c> these</c><00:27:07.100><c> idioms</c><00:27:07.550><c> and</c><00:27:07.820><c> metaphors</c><00:27:07.880><c> and</c>

00:27:08.530 --> 00:27:08.540 align:start position:0%
some of these idioms and metaphors and
 

00:27:08.540 --> 00:27:11.049 align:start position:0%
some of these idioms and metaphors and
patterns<00:27:08.929><c> you</c><00:27:09.860><c> don't</c><00:27:10.070><c> appreciate</c><00:27:10.340><c> them</c><00:27:10.880><c> and</c>

00:27:11.049 --> 00:27:11.059 align:start position:0%
patterns you don't appreciate them and
 

00:27:11.059 --> 00:27:14.140 align:start position:0%
patterns you don't appreciate them and
again<00:27:11.900><c> this</c><00:27:12.080><c> is</c><00:27:12.290><c> this</c><00:27:12.920><c> is</c><00:27:13.100><c> one</c><00:27:13.400><c> of</c><00:27:13.429><c> the</c><00:27:13.700><c> reasons</c>

00:27:14.140 --> 00:27:14.150 align:start position:0%
again this is this is one of the reasons
 

00:27:14.150 --> 00:27:15.730 align:start position:0%
again this is this is one of the reasons
when<00:27:14.360><c> you</c><00:27:14.450><c> write</c><00:27:14.630><c> cocoa</c><00:27:15.020><c> programs</c><00:27:15.500><c> you</c><00:27:15.710><c> don't</c>

00:27:15.730 --> 00:27:15.740 align:start position:0%
when you write cocoa programs you don't
 

00:27:15.740 --> 00:27:17.380 align:start position:0%
when you write cocoa programs you don't
find<00:27:16.309><c> you're</c><00:27:16.610><c> overwhelmed</c><00:27:17.300><c> with</c>

00:27:17.380 --> 00:27:17.390 align:start position:0%
find you're overwhelmed with
 

00:27:17.390 --> 00:27:19.540 align:start position:0%
find you're overwhelmed with
sub-classing<00:27:18.230><c> writing</c><00:27:18.890><c> lots</c><00:27:19.040><c> of</c><00:27:19.190><c> different</c>

00:27:19.540 --> 00:27:19.550 align:start position:0%
sub-classing writing lots of different
 

00:27:19.550 --> 00:27:22.330 align:start position:0%
sub-classing writing lots of different
classes<00:27:19.730><c> and</c><00:27:20.300><c> in</c><00:27:20.750><c> fact</c><00:27:21.110><c> ending</c><00:27:21.770><c> up</c><00:27:21.920><c> with</c><00:27:22.100><c> some</c>

00:27:22.330 --> 00:27:22.340 align:start position:0%
classes and in fact ending up with some
 

00:27:22.340 --> 00:27:24.669 align:start position:0%
classes and in fact ending up with some
very<00:27:22.520><c> highly</c><00:27:23.360><c> structured</c><00:27:23.870><c> or</c><00:27:24.230><c> overly</c>

00:27:24.669 --> 00:27:24.679 align:start position:0%
very highly structured or overly
 

00:27:24.679 --> 00:27:27.040 align:start position:0%
very highly structured or overly
structured<00:27:25.040><c> class</c><00:27:25.610><c> hierarchy</c><00:27:26.240><c> it's</c><00:27:26.750><c> fairly</c>

00:27:27.040 --> 00:27:27.050 align:start position:0%
structured class hierarchy it's fairly
 

00:27:27.050 --> 00:27:28.919 align:start position:0%
structured class hierarchy it's fairly
freeform<00:27:27.770><c> it's</c><00:27:27.980><c> it's</c><00:27:28.220><c> it's</c><00:27:28.460><c> more</c>

00:27:28.919 --> 00:27:28.929 align:start position:0%
freeform it's it's it's more
 

00:27:28.929 --> 00:27:34.540 align:start position:0%
freeform it's it's it's more
free-flowing<00:27:32.440><c> so</c><00:27:33.440><c> here</c><00:27:33.679><c> set</c><00:27:33.950><c> target</c><00:27:34.370><c> set</c>

00:27:34.540 --> 00:27:34.550 align:start position:0%
free-flowing so here set target set
 

00:27:34.550 --> 00:27:36.880 align:start position:0%
free-flowing so here set target set
action<00:27:34.760><c> this</c><00:27:35.059><c> is</c><00:27:35.140><c> code</c><00:27:36.140><c> from</c><00:27:36.440><c> the</c><00:27:36.590><c> interface</c>

00:27:36.880 --> 00:27:36.890 align:start position:0%
action this is code from the interface
 

00:27:36.890 --> 00:27:39.910 align:start position:0%
action this is code from the interface
builder<00:27:37.160><c> paradigm</c><00:27:37.760><c> and</c><00:27:38.000><c> this</c><00:27:38.570><c> is</c><00:27:38.830><c> you</c><00:27:39.830><c> know</c>

00:27:39.910 --> 00:27:39.920 align:start position:0%
builder paradigm and this is you know
 

00:27:39.920 --> 00:27:42.730 align:start position:0%
builder paradigm and this is you know
and<00:27:40.520><c> all</c><00:27:40.640><c> of</c><00:27:40.760><c> our</c><00:27:40.850><c> controls</c><00:27:41.330><c> and</c><00:27:41.690><c> then</c><00:27:42.290><c> later</c>

00:27:42.730 --> 00:27:42.740 align:start position:0%
and all of our controls and then later
 

00:27:42.740 --> 00:27:44.080 align:start position:0%
and all of our controls and then later
on<00:27:42.830><c> once</c><00:27:43.220><c> you</c><00:27:43.340><c> have</c><00:27:43.490><c> the</c><00:27:43.610><c> target</c><00:27:43.940><c> in</c><00:27:44.000><c> the</c>

00:27:44.080 --> 00:27:44.090 align:start position:0%
on once you have the target in the
 

00:27:44.090 --> 00:27:45.580 align:start position:0%
on once you have the target in the
action<00:27:44.450><c> you</c><00:27:44.570><c> can</c><00:27:44.720><c> send</c><00:27:44.960><c> the</c><00:27:45.080><c> set</c><00:27:45.260><c> action</c>

00:27:45.580 --> 00:27:45.590 align:start position:0%
action you can send the set action
 

00:27:45.590 --> 00:27:48.940 align:start position:0%
action you can send the set action
method<00:27:46.120><c> accordingly</c><00:27:47.120><c> so</c><00:27:47.480><c> this</c><00:27:47.960><c> is</c><00:27:48.170><c> this</c><00:27:48.890><c> is</c>

00:27:48.940 --> 00:27:48.950 align:start position:0%
method accordingly so this is this is
 

00:27:48.950 --> 00:27:50.740 align:start position:0%
method accordingly so this is this is
the<00:27:49.160><c> dynamic</c><00:27:49.610><c> code</c><00:27:49.790><c> that</c><00:27:50.090><c> we</c><00:27:50.300><c> find</c><00:27:50.540><c> all</c><00:27:50.720><c> over</c>

00:27:50.740 --> 00:27:50.750 align:start position:0%
the dynamic code that we find all over
 

00:27:50.750 --> 00:27:53.320 align:start position:0%
the dynamic code that we find all over
our<00:27:51.110><c> frameworks</c><00:27:51.590><c> that</c><00:27:52.250><c> again</c><00:27:52.790><c> simplifies</c>

00:27:53.320 --> 00:27:53.330 align:start position:0%
our frameworks that again simplifies
 

00:27:53.330 --> 00:27:58.180 align:start position:0%
our frameworks that again simplifies
your<00:27:53.360><c> life</c><00:27:55.450><c> reflection</c><00:27:56.450><c> this</c><00:27:57.080><c> is</c><00:27:57.140><c> this</c><00:27:57.770><c> is</c><00:27:57.980><c> on</c>

00:27:58.180 --> 00:27:58.190 align:start position:0%
your life reflection this is this is on
 

00:27:58.190 --> 00:28:00.700 align:start position:0%
your life reflection this is this is on
the<00:27:58.790><c> hooks</c><00:27:59.000><c> that</c><00:27:59.120><c> support</c><00:27:59.600><c> outlets</c><00:27:59.960><c> bindings</c>

00:28:00.700 --> 00:28:00.710 align:start position:0%
the hooks that support outlets bindings
 

00:28:00.710 --> 00:28:02.799 align:start position:0%
the hooks that support outlets bindings
key<00:28:00.980><c> value</c><00:28:01.309><c> coding</c><00:28:01.730><c> again</c><00:28:02.000><c> cocoa</c><00:28:02.360><c> bindings</c>

00:28:02.799 --> 00:28:02.809 align:start position:0%
key value coding again cocoa bindings
 

00:28:02.809 --> 00:28:04.600 align:start position:0%
key value coding again cocoa bindings
which<00:28:03.020><c> have</c><00:28:03.530><c> been</c><00:28:03.710><c> featured</c><00:28:04.100><c> in</c><00:28:04.250><c> many</c><00:28:04.429><c> of</c><00:28:04.550><c> the</c>

00:28:04.600 --> 00:28:04.610 align:start position:0%
which have been featured in many of the
 

00:28:04.610 --> 00:28:08.200 align:start position:0%
which have been featured in many of the
presentations<00:28:05.330><c> this</c><00:28:05.990><c> is</c><00:28:06.200><c> the</c><00:28:06.350><c> low-level</c><00:28:07.210><c> code</c>

00:28:08.200 --> 00:28:08.210 align:start position:0%
presentations this is the low-level code
 

00:28:08.210 --> 00:28:10.030 align:start position:0%
presentations this is the low-level code
that<00:28:08.480><c> in</c><00:28:08.630><c> fact</c><00:28:08.870><c> supports</c><00:28:09.440><c> those</c><00:28:09.650><c> those</c>

00:28:10.030 --> 00:28:10.040 align:start position:0%
that in fact supports those those
 

00:28:10.040 --> 00:28:12.450 align:start position:0%
that in fact supports those those
metaphors<00:28:10.340><c> so</c><00:28:11.000><c> in</c><00:28:11.120><c> this</c><00:28:11.240><c> case</c><00:28:11.510><c> we</c><00:28:12.230><c> have</c>

00:28:12.450 --> 00:28:12.460 align:start position:0%
metaphors so in this case we have
 

00:28:12.460 --> 00:28:15.669 align:start position:0%
metaphors so in this case we have
selector<00:28:13.460><c> from</c><00:28:13.610><c> string</c><00:28:14.030><c> it</c><00:28:14.780><c> gets</c><00:28:15.050><c> gets</c><00:28:15.500><c> the</c>

00:28:15.669 --> 00:28:15.679 align:start position:0%
selector from string it gets gets the
 

00:28:15.679 --> 00:28:17.590 align:start position:0%
selector from string it gets gets the
selector<00:28:16.160><c> and</c><00:28:16.280><c> then</c><00:28:16.400><c> it</c><00:28:16.520><c> asks</c><00:28:16.760><c> response</c><00:28:17.120><c> to</c><00:28:17.360><c> if</c>

00:28:17.590 --> 00:28:17.600 align:start position:0%
selector and then it asks response to if
 

00:28:17.600 --> 00:28:19.960 align:start position:0%
selector and then it asks response to if
it<00:28:17.720><c> does</c><00:28:17.929><c> respond</c><00:28:18.380><c> to</c><00:28:18.500><c> it</c><00:28:18.770><c> it</c><00:28:19.280><c> performs</c><00:28:19.850><c> a</c>

00:28:19.960 --> 00:28:19.970 align:start position:0%
it does respond to it it performs a
 

00:28:19.970 --> 00:28:22.990 align:start position:0%
it does respond to it it performs a
selector<00:28:20.450><c> if</c><00:28:20.960><c> no</c><00:28:21.410><c> setter</c><00:28:21.920><c> method</c><00:28:22.400><c> has</c><00:28:22.790><c> been</c>

00:28:22.990 --> 00:28:23.000 align:start position:0%
selector if no setter method has been
 

00:28:23.000 --> 00:28:27.490 align:start position:0%
selector if no setter method has been
found<00:28:23.390><c> a</c><00:28:23.920><c> lower-level</c><00:28:24.920><c> hook</c><00:28:25.280><c> is</c><00:28:26.290><c> provided</c><00:28:27.290><c> to</c>

00:28:27.490 --> 00:28:27.500 align:start position:0%
found a lower-level hook is provided to
 

00:28:27.500 --> 00:28:30.370 align:start position:0%
found a lower-level hook is provided to
in<00:28:27.650><c> fact</c><00:28:27.860><c> lookup</c><00:28:28.460><c> the</c><00:28:28.910><c> instance</c><00:28:29.720><c> variable</c><00:28:30.200><c> and</c>

00:28:30.370 --> 00:28:30.380 align:start position:0%
in fact lookup the instance variable and
 

00:28:30.380 --> 00:28:33.100 align:start position:0%
in fact lookup the instance variable and
set<00:28:30.590><c> it</c><00:28:30.710><c> directly</c><00:28:31.190><c> in</c><00:28:31.340><c> the</c><00:28:31.460><c> object</c><00:28:31.970><c> so</c><00:28:32.630><c> the</c>

00:28:33.100 --> 00:28:33.110 align:start position:0%
set it directly in the object so the
 

00:28:33.110 --> 00:28:35.740 align:start position:0%
set it directly in the object so the
simplification<00:28:33.950><c> for</c><00:28:33.980><c> the</c><00:28:34.340><c> programmer</c><00:28:34.790><c> is</c><00:28:35.210><c> you</c>

00:28:35.740 --> 00:28:35.750 align:start position:0%
simplification for the programmer is you
 

00:28:35.750 --> 00:28:37.560 align:start position:0%
simplification for the programmer is you
don't<00:28:35.929><c> have</c><00:28:36.020><c> to</c><00:28:36.290><c> write</c><00:28:36.470><c> setter</c><00:28:36.800><c> methods</c><00:28:37.310><c> the</c>

00:28:37.560 --> 00:28:37.570 align:start position:0%
don't have to write setter methods the
 

00:28:37.570 --> 00:28:40.360 align:start position:0%
don't have to write setter methods the
introspection<00:28:38.570><c> reflection</c><00:28:39.440><c> that's</c><00:28:39.800><c> provided</c>

00:28:40.360 --> 00:28:40.370 align:start position:0%
introspection reflection that's provided
 

00:28:40.370 --> 00:28:41.750 align:start position:0%
introspection reflection that's provided
with<00:28:40.490><c> the</c><00:28:40.640><c> runtime</c><00:28:41.060><c> and</c>

00:28:41.750 --> 00:28:41.760 align:start position:0%
with the runtime and
 

00:28:41.760 --> 00:28:44.270 align:start position:0%
with the runtime and
Abel's<00:28:42.120><c> the</c><00:28:42.330><c> tools</c><00:28:42.630><c> to</c><00:28:43.080><c> basically</c><00:28:43.260><c> poke</c><00:28:43.950><c> at</c>

00:28:44.270 --> 00:28:44.280 align:start position:0%
Abel's the tools to basically poke at
 

00:28:44.280 --> 00:28:46.790 align:start position:0%
Abel's the tools to basically poke at
your<00:28:44.820><c> object</c><00:28:45.330><c> and</c><00:28:45.510><c> set</c><00:28:46.260><c> up</c><00:28:46.380><c> the</c><00:28:46.500><c> connection</c>

00:28:46.790 --> 00:28:46.800 align:start position:0%
your object and set up the connection
 

00:28:46.800 --> 00:28:49.310 align:start position:0%
your object and set up the connection
set<00:28:47.280><c> up</c><00:28:47.400><c> the</c><00:28:47.520><c> binding</c><00:28:47.870><c> without</c><00:28:48.870><c> your</c>

00:28:49.310 --> 00:28:49.320 align:start position:0%
set up the binding without your
 

00:28:49.320 --> 00:28:51.290 align:start position:0%
set up the binding without your
intervention<00:28:49.560><c> it's</c><00:28:50.550><c> nice</c><00:28:50.820><c> to</c><00:28:51.000><c> have</c><00:28:51.150><c> the</c>

00:28:51.290 --> 00:28:51.300 align:start position:0%
intervention it's nice to have the
 

00:28:51.300 --> 00:28:53.120 align:start position:0%
intervention it's nice to have the
opportunity<00:28:51.570><c> to</c><00:28:52.290><c> write</c><00:28:52.620><c> the</c><00:28:52.770><c> setter</c><00:28:53.010><c> but</c>

00:28:53.120 --> 00:28:53.130 align:start position:0%
opportunity to write the setter but
 

00:28:53.130 --> 00:28:59.750 align:start position:0%
opportunity to write the setter but
that's<00:28:53.550><c> not</c><00:28:53.850><c> required</c><00:28:58.190><c> so</c><00:28:59.190><c> let's</c><00:28:59.340><c> see</c><00:28:59.490><c> how</c><00:28:59.700><c> are</c>

00:28:59.750 --> 00:28:59.760 align:start position:0%
that's not required so let's see how are
 

00:28:59.760 --> 00:29:02.270 align:start position:0%
that's not required so let's see how are
we<00:28:59.820><c> doing</c><00:29:00.060><c> on</c><00:29:00.180><c> time</c><00:29:00.270><c> here</c><00:29:00.740><c> so</c><00:29:01.740><c> here</c><00:29:02.040><c> are</c><00:29:02.100><c> some</c>

00:29:02.270 --> 00:29:02.280 align:start position:0%
we doing on time here so here are some
 

00:29:02.280 --> 00:29:04.730 align:start position:0%
we doing on time here so here are some
examples<00:29:02.850><c> from</c><00:29:03.630><c> OpenGL</c><00:29:03.930><c> this</c><00:29:04.380><c> is</c><00:29:04.500><c> on</c><00:29:04.620><c> the</c>

00:29:04.730 --> 00:29:04.740 align:start position:0%
examples from OpenGL this is on the
 

00:29:04.740 --> 00:29:07.100 align:start position:0%
examples from OpenGL this is on the
developer<00:29:05.250><c> disk</c><00:29:05.490><c> here's</c><00:29:06.150><c> an</c><00:29:06.330><c> example</c><00:29:06.690><c> of</c><00:29:06.990><c> a</c>

00:29:07.100 --> 00:29:07.110 align:start position:0%
developer disk here's an example of a
 

00:29:07.110 --> 00:29:10.010 align:start position:0%
developer disk here's an example of a
more<00:29:07.290><c> complete</c><00:29:07.800><c> set</c><00:29:08.220><c> of</c><00:29:08.370><c> code</c><00:29:08.640><c> where</c><00:29:09.630><c> we</c><00:29:09.810><c> have</c>

00:29:10.010 --> 00:29:10.020 align:start position:0%
more complete set of code where we have
 

00:29:10.020 --> 00:29:12.470 align:start position:0%
more complete set of code where we have
a<00:29:10.050><c> value</c><00:29:10.470><c> object</c><00:29:10.650><c> that's</c><00:29:11.340><c> a</c><00:29:11.490><c> cue</c><00:29:11.700><c> matrix</c><00:29:12.120><c> there</c>

00:29:12.470 --> 00:29:12.480 align:start position:0%
a value object that's a cue matrix there
 

00:29:12.480 --> 00:29:17.000 align:start position:0%
a value object that's a cue matrix there
that's<00:29:12.690><c> highlighted</c><00:29:13.640><c> and</c><00:29:15.470><c> it's</c><00:29:16.470><c> surrounded</c>

00:29:17.000 --> 00:29:17.010 align:start position:0%
that's highlighted and it's surrounded
 

00:29:17.010 --> 00:29:19.850 align:start position:0%
that's highlighted and it's surrounded
by<00:29:17.070><c> an</c><00:29:17.610><c> outlet</c><00:29:18.060><c> right</c><00:29:18.300><c> there</c><00:29:19.200><c> from</c><00:29:19.500><c> interface</c>

00:29:19.850 --> 00:29:19.860 align:start position:0%
by an outlet right there from interface
 

00:29:19.860 --> 00:29:21.650 align:start position:0%
by an outlet right there from interface
builder<00:29:20.100><c> mode</c><00:29:20.580><c> alpha</c><00:29:21.030><c> again</c><00:29:21.120><c> this</c><00:29:21.300><c> is</c><00:29:21.450><c> on</c><00:29:21.570><c> your</c>

00:29:21.650 --> 00:29:21.660 align:start position:0%
builder mode alpha again this is on your
 

00:29:21.660 --> 00:29:26.690 align:start position:0%
builder mode alpha again this is on your
disk<00:29:23.720><c> now</c><00:29:24.720><c> just</c><00:29:25.350><c> because</c><00:29:25.680><c> you're</c><00:29:26.070><c> writing</c><00:29:26.550><c> an</c>

00:29:26.690 --> 00:29:26.700 align:start position:0%
disk now just because you're writing an
 

00:29:26.700 --> 00:29:29.360 align:start position:0%
disk now just because you're writing an
objective<00:29:26.850><c> c++</c><00:29:27.780><c> don't</c><00:29:28.230><c> assume</c><00:29:28.530><c> that</c><00:29:28.770><c> all</c><00:29:29.070><c> the</c>

00:29:29.360 --> 00:29:29.370 align:start position:0%
objective c++ don't assume that all the
 

00:29:29.370 --> 00:29:31.520 align:start position:0%
objective c++ don't assume that all the
classes<00:29:29.820><c> have</c><00:29:30.000><c> to</c><00:29:30.030><c> be</c><00:29:30.330><c> mixed</c><00:29:30.570><c> right</c><00:29:31.200><c> here's</c><00:29:31.410><c> an</c>

00:29:31.520 --> 00:29:31.530 align:start position:0%
classes have to be mixed right here's an
 

00:29:31.530 --> 00:29:33.710 align:start position:0%
classes have to be mixed right here's an
example<00:29:31.860><c> where</c><00:29:32.310><c> even</c><00:29:32.880><c> though</c><00:29:33.030><c> we</c><00:29:33.180><c> saw</c><00:29:33.450><c> some</c>

00:29:33.710 --> 00:29:33.720 align:start position:0%
example where even though we saw some
 

00:29:33.720 --> 00:29:35.870 align:start position:0%
example where even though we saw some
hybrid<00:29:34.080><c> code</c><00:29:34.320><c> in</c><00:29:34.470><c> the</c><00:29:34.560><c> previous</c><00:29:34.950><c> slide</c><00:29:35.190><c> this</c>

00:29:35.870 --> 00:29:35.880 align:start position:0%
hybrid code in the previous slide this
 

00:29:35.880 --> 00:29:38.930 align:start position:0%
hybrid code in the previous slide this
class<00:29:36.210><c> is</c><00:29:36.510><c> pure</c><00:29:36.960><c> C++</c><00:29:37.860><c> there's</c><00:29:38.430><c> not</c><00:29:38.730><c> any</c>

00:29:38.930 --> 00:29:38.940 align:start position:0%
class is pure C++ there's not any
 

00:29:38.940 --> 00:29:42.770 align:start position:0%
class is pure C++ there's not any
Objective<00:29:39.480><c> C</c><00:29:39.510><c> in</c><00:29:39.900><c> it</c><00:29:40.050><c> so</c><00:29:40.350><c> a</c><00:29:40.970><c> very</c><00:29:41.970><c> very</c><00:29:42.270><c> common</c>

00:29:42.770 --> 00:29:42.780 align:start position:0%
Objective C in it so a very very common
 

00:29:42.780 --> 00:29:45.140 align:start position:0%
Objective C in it so a very very common
thing<00:29:42.810><c> we</c><00:29:43.320><c> see</c><00:29:43.350><c> out</c><00:29:43.770><c> there</c><00:29:43.800><c> is</c><00:29:44.190><c> people</c><00:29:44.670><c> keeping</c>

00:29:45.140 --> 00:29:45.150 align:start position:0%
thing we see out there is people keeping
 

00:29:45.150 --> 00:29:48.380 align:start position:0%
thing we see out there is people keeping
a<00:29:45.270><c> lot</c><00:29:45.540><c> of</c><00:29:45.750><c> their</c><00:29:45.900><c> C++</c><00:29:46.710><c> let's</c><00:29:47.640><c> say</c><00:29:47.790><c> portable</c>

00:29:48.380 --> 00:29:48.390 align:start position:0%
a lot of their C++ let's say portable
 

00:29:48.390 --> 00:29:50.570 align:start position:0%
a lot of their C++ let's say portable
and<00:29:48.570><c> standard</c><00:29:49.110><c> and</c><00:29:49.320><c> not</c><00:29:49.440><c> mixing</c><00:29:50.040><c> the</c><00:29:50.220><c> models</c>

00:29:50.570 --> 00:29:50.580 align:start position:0%
and standard and not mixing the models
 

00:29:50.580 --> 00:29:52.970 align:start position:0%
and standard and not mixing the models
everywhere<00:29:51.060><c> but</c><00:29:51.480><c> in</c><00:29:51.600><c> fact</c><00:29:51.780><c> just</c><00:29:52.260><c> doing</c><00:29:52.560><c> it</c><00:29:52.680><c> in</c>

00:29:52.970 --> 00:29:52.980 align:start position:0%
everywhere but in fact just doing it in
 

00:29:52.980 --> 00:29:55.520 align:start position:0%
everywhere but in fact just doing it in
very<00:29:53.220><c> special</c><00:29:53.700><c> control</c><00:29:54.060><c> points</c><00:29:54.450><c> right</c><00:29:55.170><c> it's</c>

00:29:55.520 --> 00:29:55.530 align:start position:0%
very special control points right it's
 

00:29:55.530 --> 00:29:56.930 align:start position:0%
very special control points right it's
very<00:29:55.710><c> common</c><00:29:56.100><c> to</c><00:29:56.130><c> want</c><00:29:56.340><c> to</c><00:29:56.430><c> do</c><00:29:56.550><c> a</c><00:29:56.580><c> native</c>

00:29:56.930 --> 00:29:56.940 align:start position:0%
very common to want to do a native
 

00:29:56.940 --> 00:29:59.620 align:start position:0%
very common to want to do a native
interface<00:29:57.300><c> in</c><00:29:57.450><c> cocoa</c><00:29:57.810><c> and</c><00:29:58.160><c> bring</c><00:29:59.160><c> over</c><00:29:59.310><c> your</c>

00:29:59.620 --> 00:29:59.630 align:start position:0%
interface in cocoa and bring over your
 

00:29:59.630 --> 00:30:03.560 align:start position:0%
interface in cocoa and bring over your
your<00:30:00.630><c> C++</c><00:30:01.100><c> engine</c><00:30:02.100><c> so</c><00:30:02.310><c> to</c><00:30:02.370><c> speak</c><00:30:02.730><c> and</c><00:30:02.940><c> in</c><00:30:03.330><c> fact</c>

00:30:03.560 --> 00:30:03.570 align:start position:0%
your C++ engine so to speak and in fact
 

00:30:03.570 --> 00:30:05.870 align:start position:0%
your C++ engine so to speak and in fact
I<00:30:03.840><c> chats</c><00:30:04.290><c> a</c><00:30:04.470><c> good</c><00:30:04.590><c> example</c><00:30:04.950><c> i</c><00:30:05.280><c> chat</c><00:30:05.610><c> is</c><00:30:05.850><c> a</c>

00:30:05.870 --> 00:30:05.880 align:start position:0%
I chats a good example i chat is a
 

00:30:05.880 --> 00:30:09.440 align:start position:0%
I chats a good example i chat is a
wonderful<00:30:06.450><c> cocoa</c><00:30:07.080><c> interface</c><00:30:07.530><c> that</c><00:30:08.340><c> the</c><00:30:09.210><c> chat</c>

00:30:09.440 --> 00:30:09.450 align:start position:0%
wonderful cocoa interface that the chat
 

00:30:09.450 --> 00:30:12.260 align:start position:0%
wonderful cocoa interface that the chat
engine<00:30:09.870><c> is</c><00:30:10.020><c> actually</c><00:30:10.320><c> in</c><00:30:10.440><c> C++</c><00:30:10.980><c> and</c><00:30:11.250><c> they</c><00:30:12.060><c> work</c>

00:30:12.260 --> 00:30:12.270 align:start position:0%
engine is actually in C++ and they work
 

00:30:12.270 --> 00:30:18.320 align:start position:0%
engine is actually in C++ and they work
together<00:30:12.450><c> via</c><00:30:12.870><c> objective</c><00:30:13.350><c> C++</c><00:30:16.820><c> so</c><00:30:17.820><c> here</c><00:30:18.180><c> is</c>

00:30:18.320 --> 00:30:18.330 align:start position:0%
together via objective C++ so here is
 

00:30:18.330 --> 00:30:20.660 align:start position:0%
together via objective C++ so here is
just<00:30:18.960><c> in</c><00:30:19.350><c> the</c><00:30:19.470><c> example</c><00:30:19.890><c> rotating</c><00:30:20.370><c> the</c><00:30:20.490><c> cube</c>

00:30:20.660 --> 00:30:20.670 align:start position:0%
just in the example rotating the cube
 

00:30:20.670 --> 00:30:22.490 align:start position:0%
just in the example rotating the cube
you<00:30:20.880><c> can</c><00:30:21.000><c> see</c><00:30:21.180><c> the</c><00:30:21.360><c> the</c><00:30:21.600><c> one</c><00:30:21.780><c> statement</c><00:30:22.290><c> there</c>

00:30:22.490 --> 00:30:22.500 align:start position:0%
you can see the the one statement there
 

00:30:22.500 --> 00:30:24.920 align:start position:0%
you can see the the one statement there
that<00:30:22.530><c> does</c><00:30:23.280><c> the</c><00:30:23.400><c> multiplication</c><00:30:24.120><c> and</c><00:30:24.360><c> then</c>

00:30:24.920 --> 00:30:24.930 align:start position:0%
that does the multiplication and then
 

00:30:24.930 --> 00:30:27.620 align:start position:0%
that does the multiplication and then
the<00:30:25.350><c> extra</c><00:30:26.280><c> Objective</c><00:30:26.700><c> C</c><00:30:26.730><c> statements</c><00:30:27.420><c> there</c>

00:30:27.620 --> 00:30:27.630 align:start position:0%
the extra Objective C statements there
 

00:30:27.630 --> 00:30:30.110 align:start position:0%
the extra Objective C statements there
to<00:30:27.930><c> do</c><00:30:28.170><c> the</c><00:30:28.320><c> graphics</c><00:30:28.770><c> and</c><00:30:28.950><c> update</c><00:30:29.250><c> the</c><00:30:29.730><c> the</c>

00:30:30.110 --> 00:30:30.120 align:start position:0%
to do the graphics and update the the
 

00:30:30.120 --> 00:30:35.990 align:start position:0%
to do the graphics and update the the
scene<00:30:30.980><c> fairly</c><00:30:31.980><c> straightforward</c><00:30:32.610><c> stuff</c><00:30:35.000><c> now</c>

00:30:35.990 --> 00:30:36.000 align:start position:0%
scene fairly straightforward stuff now
 

00:30:36.000 --> 00:30:37.790 align:start position:0%
scene fairly straightforward stuff now
here's<00:30:36.690><c> an</c><00:30:36.810><c> interesting</c><00:30:36.870><c> one</c><00:30:37.410><c> there</c><00:30:37.650><c> was</c><00:30:37.770><c> a</c>

00:30:37.790 --> 00:30:37.800 align:start position:0%
here's an interesting one there was a
 

00:30:37.800 --> 00:30:40.910 align:start position:0%
here's an interesting one there was a
class<00:30:38.130><c> in</c><00:30:38.430><c> in</c><00:30:38.880><c> this</c><00:30:39.390><c> example</c><00:30:39.810><c> that</c><00:30:40.200><c> was</c>

00:30:40.910 --> 00:30:40.920 align:start position:0%
class in in this example that was
 

00:30:40.920 --> 00:30:43.970 align:start position:0%
class in in this example that was
largely<00:30:41.780><c> C++</c><00:30:42.780><c> but</c><00:30:43.140><c> there's</c><00:30:43.320><c> a</c><00:30:43.380><c> couple</c><00:30:43.530><c> pure</c>

00:30:43.970 --> 00:30:43.980 align:start position:0%
largely C++ but there's a couple pure
 

00:30:43.980 --> 00:30:46.280 align:start position:0%
largely C++ but there's a couple pure
member<00:30:44.310><c> functions</c><00:30:44.760><c> there</c><00:30:45.060><c> that</c><00:30:45.960><c> we're</c><00:30:46.110><c> taking</c>

00:30:46.280 --> 00:30:46.290 align:start position:0%
member functions there that we're taking
 

00:30:46.290 --> 00:30:48.830 align:start position:0%
member functions there that we're taking
objective-c<00:30:47.010><c> objects</c><00:30:47.760><c> selectors</c><00:30:48.390><c> and</c><00:30:48.660><c> in</c>

00:30:48.830 --> 00:30:48.840 align:start position:0%
objective-c objects selectors and in
 

00:30:48.840 --> 00:30:51.380 align:start position:0%
objective-c objects selectors and in
fact<00:30:49.080><c> events</c><00:30:49.470><c> so</c><00:30:50.130><c> I've</c><00:30:50.460><c> highlighted</c><00:30:50.730><c> them</c><00:30:51.120><c> for</c>

00:30:51.380 --> 00:30:51.390 align:start position:0%
fact events so I've highlighted them for
 

00:30:51.390 --> 00:30:54.140 align:start position:0%
fact events so I've highlighted them for
you<00:30:51.600><c> and</c><00:30:51.840><c> you</c><00:30:51.960><c> could</c><00:30:52.140><c> see</c><00:30:52.380><c> that</c><00:30:52.650><c> these</c><00:30:53.370><c> these</c>

00:30:54.140 --> 00:30:54.150 align:start position:0%
you and you could see that these these
 

00:30:54.150 --> 00:30:55.160 align:start position:0%
you and you could see that these these
arguments

00:30:55.160 --> 00:30:55.170 align:start position:0%
arguments
 

00:30:55.170 --> 00:30:57.560 align:start position:0%
arguments
are<00:30:55.290><c> passed</c><00:30:55.590><c> around</c><00:30:55.890><c> as</c><00:30:56.100><c> naturally</c><00:30:56.670><c> as</c><00:30:56.700><c> other</c>

00:30:57.560 --> 00:30:57.570 align:start position:0%
are passed around as naturally as other
 

00:30:57.570 --> 00:31:01.400 align:start position:0%
are passed around as naturally as other
arguments<00:30:58.110><c> would</c><00:30:58.230><c> be</c><00:30:58.440><c> and</c><00:31:00.020><c> so</c><00:31:01.020><c> here's</c><00:31:01.260><c> the</c>

00:31:01.400 --> 00:31:01.410 align:start position:0%
arguments would be and so here's the
 

00:31:01.410 --> 00:31:03.170 align:start position:0%
arguments would be and so here's the
handle<00:31:01.710><c> event</c><00:31:01.980><c> method</c><00:31:02.340><c> so</c><00:31:02.490><c> you</c><00:31:02.550><c> can</c><00:31:02.760><c> see</c><00:31:02.940><c> that</c>

00:31:03.170 --> 00:31:03.180 align:start position:0%
handle event method so you can see that
 

00:31:03.180 --> 00:31:06.170 align:start position:0%
handle event method so you can see that
it<00:31:03.330><c> checks</c><00:31:03.510><c> the</c><00:31:03.630><c> event</c><00:31:04.020><c> type</c><00:31:04.700><c> checks</c><00:31:05.700><c> if</c><00:31:06.030><c> it's</c>

00:31:06.170 --> 00:31:06.180 align:start position:0%
it checks the event type checks if it's
 

00:31:06.180 --> 00:31:07.930 align:start position:0%
it checks the event type checks if it's
a<00:31:06.270><c> scroll</c><00:31:06.510><c> wheel</c><00:31:06.750><c> and</c><00:31:07.110><c> does</c><00:31:07.440><c> the</c><00:31:07.560><c> appropriate</c>

00:31:07.930 --> 00:31:07.940 align:start position:0%
a scroll wheel and does the appropriate
 

00:31:07.940 --> 00:31:11.450 align:start position:0%
a scroll wheel and does the appropriate
operations<00:31:09.830><c> again</c><00:31:10.830><c> very</c><00:31:11.070><c> very</c>

00:31:11.450 --> 00:31:11.460 align:start position:0%
operations again very very
 

00:31:11.460 --> 00:31:15.470 align:start position:0%
operations again very very
straightforward<00:31:11.730><c> okay</c><00:31:13.580><c> so</c><00:31:14.580><c> let's</c><00:31:14.850><c> go</c><00:31:15.090><c> to</c><00:31:15.120><c> the</c>

00:31:15.470 --> 00:31:15.480 align:start position:0%
straightforward okay so let's go to the
 

00:31:15.480 --> 00:31:18.620 align:start position:0%
straightforward okay so let's go to the
next<00:31:15.630><c> example</c><00:31:16.200><c> which</c><00:31:16.350><c> is</c><00:31:16.500><c> Core</c><00:31:16.710><c> Audio</c><00:31:17.540><c> this</c><00:31:18.540><c> is</c>

00:31:18.620 --> 00:31:18.630 align:start position:0%
next example which is Core Audio this is
 

00:31:18.630 --> 00:31:20.510 align:start position:0%
next example which is Core Audio this is
a<00:31:18.720><c> little</c><00:31:18.960><c> bit</c><00:31:19.110><c> more</c><00:31:19.230><c> complicated</c><00:31:19.620><c> this</c><00:31:20.130><c> this</c>

00:31:20.510 --> 00:31:20.520 align:start position:0%
a little bit more complicated this this
 

00:31:20.520 --> 00:31:25.820 align:start position:0%
a little bit more complicated this this
example<00:31:21.890><c> what's</c><00:31:22.890><c> in</c><00:31:23.130><c> orange</c><00:31:23.670><c> are</c><00:31:24.200><c> the</c><00:31:25.200><c> C++</c>

00:31:25.820 --> 00:31:25.830 align:start position:0%
example what's in orange are the C++
 

00:31:25.830 --> 00:31:29.060 align:start position:0%
example what's in orange are the C++
objects<00:31:26.370><c> and</c><00:31:26.610><c> what's</c><00:31:27.270><c> in</c><00:31:27.420><c> blue</c><00:31:27.690><c> are</c><00:31:28.070><c> the</c>

00:31:29.060 --> 00:31:29.070 align:start position:0%
objects and what's in blue are the
 

00:31:29.070 --> 00:31:32.290 align:start position:0%
objects and what's in blue are the
objective-c<00:31:29.520><c> objects</c><00:31:30.090><c> so</c><00:31:30.750><c> here</c><00:31:31.140><c> we</c><00:31:31.320><c> have</c><00:31:31.530><c> a</c>

00:31:32.290 --> 00:31:32.300 align:start position:0%
objective-c objects so here we have a
 

00:31:32.300 --> 00:31:36.380 align:start position:0%
objective-c objects so here we have a
few<00:31:33.300><c> vectors</c><00:31:33.720><c> and</c><00:31:33.930><c> a</c><00:31:34.410><c> map</c><00:31:34.650><c> that</c><00:31:35.070><c> are</c><00:31:35.670><c> C++</c>

00:31:36.380 --> 00:31:36.390 align:start position:0%
few vectors and a map that are C++
 

00:31:36.390 --> 00:31:38.210 align:start position:0%
few vectors and a map that are C++
vectors<00:31:36.810><c> and</c><00:31:36.990><c> map</c><00:31:37.200><c> from</c><00:31:37.410><c> the</c><00:31:37.560><c> standard</c><00:31:37.920><c> C++</c>

00:31:38.210 --> 00:31:38.220 align:start position:0%
vectors and map from the standard C++
 

00:31:38.220 --> 00:31:42.950 align:start position:0%
vectors and map from the standard C++
library<00:31:38.600><c> that</c><00:31:39.600><c> point</c><00:31:40.020><c> off</c><00:31:40.320><c> to</c><00:31:41.930><c> Objective</c><00:31:42.930><c> C</c>

00:31:42.950 --> 00:31:42.960 align:start position:0%
library that point off to Objective C
 

00:31:42.960 --> 00:31:43.730 align:start position:0%
library that point off to Objective C
objects

00:31:43.730 --> 00:31:43.740 align:start position:0%
objects
 

00:31:43.740 --> 00:31:46.070 align:start position:0%
objects
so<00:31:44.100><c> there's</c><00:31:44.370><c> C++</c><00:31:44.970><c> containers</c><00:31:45.510><c> that</c><00:31:45.720><c> point</c><00:31:45.930><c> off</c>

00:31:46.070 --> 00:31:46.080 align:start position:0%
so there's C++ containers that point off
 

00:31:46.080 --> 00:31:51.230 align:start position:0%
so there's C++ containers that point off
to<00:31:46.260><c> Objective</c><00:31:46.680><c> C</c><00:31:46.710><c> objects</c><00:31:49.850><c> here's</c><00:31:50.850><c> the</c>

00:31:51.230 --> 00:31:51.240 align:start position:0%
to Objective C objects here's the
 

00:31:51.240 --> 00:31:53.830 align:start position:0%
to Objective C objects here's the
allocation<00:31:51.810><c> method</c><00:31:52.140><c> so</c><00:31:52.290><c> you</c><00:31:52.350><c> can</c><00:31:52.560><c> see</c><00:31:52.830><c> that</c>

00:31:53.830 --> 00:31:53.840 align:start position:0%
allocation method so you can see that
 

00:31:53.840 --> 00:31:57.290 align:start position:0%
allocation method so you can see that
there's<00:31:54.840><c> a</c><00:31:55.470><c> couple</c><00:31:55.860><c> objective-c</c><00:31:56.760><c> objects</c>

00:31:57.290 --> 00:31:57.300 align:start position:0%
there's a couple objective-c objects
 

00:31:57.300 --> 00:32:00.110 align:start position:0%
there's a couple objective-c objects
being<00:31:57.540><c> allocated</c><00:31:58.170><c> and</c><00:31:58.850><c> initialized</c><00:31:59.850><c> with</c><00:32:00.030><c> the</c>

00:32:00.110 --> 00:32:00.120 align:start position:0%
being allocated and initialized with the
 

00:32:00.120 --> 00:32:02.060 align:start position:0%
being allocated and initialized with the
application<00:32:00.660><c> delegate</c><00:32:01.050><c> and</c><00:32:01.230><c> then</c><00:32:01.830><c> there</c><00:32:02.010><c> are</c>

00:32:02.060 --> 00:32:02.070 align:start position:0%
application delegate and then there are
 

00:32:02.070 --> 00:32:04.220 align:start position:0%
application delegate and then there are
several<00:32:02.280><c> news</c><00:32:02.640><c> which</c><00:32:03.060><c> are</c><00:32:03.300><c> the</c><00:32:03.450><c> vectors</c><00:32:03.840><c> being</c>

00:32:04.220 --> 00:32:04.230 align:start position:0%
several news which are the vectors being
 

00:32:04.230 --> 00:32:07.430 align:start position:0%
several news which are the vectors being
instantiated<00:32:05.360><c> this</c><00:32:06.360><c> is</c><00:32:06.480><c> a</c><00:32:06.510><c> good</c><00:32:06.720><c> time</c><00:32:06.870><c> to</c><00:32:06.930><c> note</c>

00:32:07.430 --> 00:32:07.440 align:start position:0%
instantiated this is a good time to note
 

00:32:07.440 --> 00:32:11.000 align:start position:0%
instantiated this is a good time to note
that<00:32:07.490><c> in</c><00:32:08.510><c> Objective</c><00:32:09.510><c> C</c><00:32:09.540><c> all</c><00:32:09.960><c> objects</c><00:32:10.920><c> are</c>

00:32:11.000 --> 00:32:11.010 align:start position:0%
that in Objective C all objects are
 

00:32:11.010 --> 00:32:13.460 align:start position:0%
that in Objective C all objects are
dynamically<00:32:11.730><c> allocated</c><00:32:12.300><c> okay</c><00:32:12.810><c> or</c><00:32:12.990><c> by</c>

00:32:13.460 --> 00:32:13.470 align:start position:0%
dynamically allocated okay or by
 

00:32:13.470 --> 00:32:16.700 align:start position:0%
dynamically allocated okay or by
reference<00:32:13.980><c> the</c><00:32:14.220><c> only</c><00:32:15.000><c> special</c><00:32:15.690><c> object</c><00:32:16.290><c> is</c><00:32:16.500><c> in</c>

00:32:16.700 --> 00:32:16.710 align:start position:0%
reference the only special object is in
 

00:32:16.710 --> 00:32:18.470 align:start position:0%
reference the only special object is in
a<00:32:16.800><c> string</c><00:32:17.160><c> which</c><00:32:17.400><c> the</c><00:32:17.550><c> compiler</c><00:32:18.000><c> knows</c><00:32:18.180><c> about</c>

00:32:18.470 --> 00:32:18.480 align:start position:0%
a string which the compiler knows about
 

00:32:18.480 --> 00:32:20.810 align:start position:0%
a string which the compiler knows about
so<00:32:18.720><c> it</c><00:32:18.840><c> knows</c><00:32:19.020><c> how</c><00:32:19.050><c> to</c><00:32:19.230><c> create</c><00:32:19.620><c> static</c><00:32:20.520><c> string</c>

00:32:20.810 --> 00:32:20.820 align:start position:0%
so it knows how to create static string
 

00:32:20.820 --> 00:32:22.760 align:start position:0%
so it knows how to create static string
constants<00:32:21.390><c> but</c><00:32:21.570><c> all</c><00:32:21.810><c> other</c><00:32:22.170><c> objective-c</c>

00:32:22.760 --> 00:32:22.770 align:start position:0%
constants but all other objective-c
 

00:32:22.770 --> 00:32:24.950 align:start position:0%
constants but all other objective-c
objects<00:32:23.370><c> that</c><00:32:23.850><c> you</c><00:32:24.000><c> create</c><00:32:24.330><c> are</c><00:32:24.480><c> dynamically</c>

00:32:24.950 --> 00:32:24.960 align:start position:0%
objects that you create are dynamically
 

00:32:24.960 --> 00:32:28.130 align:start position:0%
objects that you create are dynamically
allocated<00:32:25.560><c> in</c><00:32:25.680><c> C++</c><00:32:26.670><c> it's</c><00:32:27.390><c> very</c><00:32:27.600><c> common</c><00:32:28.020><c> to</c><00:32:28.050><c> use</c>

00:32:28.130 --> 00:32:28.140 align:start position:0%
allocated in C++ it's very common to use
 

00:32:28.140 --> 00:32:29.690 align:start position:0%
allocated in C++ it's very common to use
value<00:32:28.650><c> objects</c><00:32:29.100><c> and</c><00:32:29.190><c> we're</c><00:32:29.280><c> going</c><00:32:29.400><c> to</c><00:32:29.430><c> talk</c><00:32:29.670><c> a</c>

00:32:29.690 --> 00:32:29.700 align:start position:0%
value objects and we're going to talk a
 

00:32:29.700 --> 00:32:31.730 align:start position:0%
value objects and we're going to talk a
little<00:32:29.820><c> bit</c><00:32:29.970><c> more</c><00:32:30.060><c> about</c><00:32:30.420><c> that</c><00:32:30.480><c> in</c><00:32:30.870><c> a</c><00:32:30.960><c> bit</c><00:32:30.990><c> but</c>

00:32:31.730 --> 00:32:31.740 align:start position:0%
little bit more about that in a bit but
 

00:32:31.740 --> 00:32:34.850 align:start position:0%
little bit more about that in a bit but
here<00:32:32.130><c> it</c><00:32:32.310><c> so</c><00:32:32.490><c> happens</c><00:32:32.910><c> that</c><00:32:33.000><c> the</c><00:32:33.350><c> new</c><00:32:34.350><c> is</c><00:32:34.680><c> being</c>

00:32:34.850 --> 00:32:34.860 align:start position:0%
here it so happens that the new is being
 

00:32:34.860 --> 00:32:37.100 align:start position:0%
here it so happens that the new is being
used<00:32:35.220><c> and</c><00:32:35.520><c> their</c><00:32:35.850><c> dynamic</c><00:32:36.390><c> as</c><00:32:36.540><c> well</c><00:32:36.750><c> so</c><00:32:36.960><c> all</c>

00:32:37.100 --> 00:32:37.110 align:start position:0%
used and their dynamic as well so all
 

00:32:37.110 --> 00:32:39.380 align:start position:0%
used and their dynamic as well so all
the<00:32:37.230><c> objects</c><00:32:37.680><c> on</c><00:32:37.890><c> this</c><00:32:38.100><c> in</c><00:32:38.520><c> this</c><00:32:38.910><c> method</c><00:32:39.090><c> are</c>

00:32:39.380 --> 00:32:39.390 align:start position:0%
the objects on this in this method are
 

00:32:39.390 --> 00:32:45.380 align:start position:0%
the objects on this in this method are
dynamic<00:32:39.930><c> so</c><00:32:43.370><c> here's</c><00:32:44.370><c> a</c><00:32:44.430><c> simple</c><00:32:44.790><c> little</c><00:32:44.820><c> method</c>

00:32:45.380 --> 00:32:45.390 align:start position:0%
dynamic so here's a simple little method
 

00:32:45.390 --> 00:32:49.750 align:start position:0%
dynamic so here's a simple little method
that<00:32:45.860><c> basically</c><00:32:47.090><c> sends</c><00:32:48.090><c> the</c><00:32:48.180><c> push</c><00:32:48.390><c> back</c><00:32:48.600><c> call</c>

00:32:49.750 --> 00:32:49.760 align:start position:0%
that basically sends the push back call
 

00:32:49.760 --> 00:32:52.610 align:start position:0%
that basically sends the push back call
we're<00:32:50.760><c> and</c><00:32:50.940><c> gives</c><00:32:51.780><c> it</c><00:32:51.870><c> the</c><00:32:51.990><c> window</c><00:32:52.230><c> controller</c>

00:32:52.610 --> 00:32:52.620 align:start position:0%
we're and gives it the window controller
 

00:32:52.620 --> 00:32:54.950 align:start position:0%
we're and gives it the window controller
so<00:32:52.890><c> here's</c><00:32:53.190><c> a</c><00:32:53.280><c> very</c><00:32:53.940><c> simple</c><00:32:54.000><c> example</c><00:32:54.360><c> the</c>

00:32:54.950 --> 00:32:54.960 align:start position:0%
so here's a very simple example the
 

00:32:54.960 --> 00:32:56.450 align:start position:0%
so here's a very simple example the
obviously<00:32:55.230><c> plus</c><00:32:55.440><c> plus</c><00:32:55.680><c> vector</c><00:32:55.890><c> you're</c>

00:32:56.450 --> 00:32:56.460 align:start position:0%
obviously plus plus vector you're
 

00:32:56.460 --> 00:32:58.760 align:start position:0%
obviously plus plus vector you're
pushing<00:32:56.850><c> an</c><00:32:56.940><c> objective-c</c><00:32:57.390><c> object</c><00:32:58.110><c> into</c><00:32:58.740><c> the</c>

00:32:58.760 --> 00:32:58.770 align:start position:0%
pushing an objective-c object into the
 

00:32:58.770 --> 00:33:01.430 align:start position:0%
pushing an objective-c object into the
vector<00:32:59.190><c> now</c><00:32:59.730><c> this</c><00:32:59.970><c> method</c><00:33:00.420><c> has</c><00:33:00.900><c> something</c>

00:33:01.430 --> 00:33:01.440 align:start position:0%
vector now this method has something
 

00:33:01.440 --> 00:33:02.690 align:start position:0%
vector now this method has something
tricky<00:33:01.770><c> about</c><00:33:01.860><c> it</c><00:33:02.040><c> that</c><00:33:02.250><c> we're</c><00:33:02.340><c> going</c><00:33:02.430><c> to</c><00:33:02.490><c> talk</c>

00:33:02.690 --> 00:33:02.700 align:start position:0%
tricky about it that we're going to talk
 

00:33:02.700 --> 00:33:04.250 align:start position:0%
tricky about it that we're going to talk
about<00:33:02.760><c> later</c><00:33:03.240><c> I</c><00:33:03.450><c> don't</c><00:33:03.600><c> want</c><00:33:03.780><c> to</c><00:33:03.840><c> get</c><00:33:03.930><c> into</c><00:33:04.140><c> it</c>

00:33:04.250 --> 00:33:04.260 align:start position:0%
about later I don't want to get into it
 

00:33:04.260 --> 00:33:07.790 align:start position:0%
about later I don't want to get into it
now<00:33:04.290><c> we'll</c><00:33:04.920><c> get</c><00:33:05.040><c> back</c><00:33:05.190><c> to</c><00:33:05.430><c> it</c><00:33:05.750><c> here</c><00:33:06.750><c> is</c><00:33:06.900><c> the</c>

00:33:07.790 --> 00:33:07.800 align:start position:0%
now we'll get back to it here is the
 

00:33:07.800 --> 00:33:09.130 align:start position:0%
now we'll get back to it here is the
destroy

00:33:09.130 --> 00:33:09.140 align:start position:0%
destroy
 

00:33:09.140 --> 00:33:12.560 align:start position:0%
destroy
method<00:33:10.140><c> and</c><00:33:10.400><c> there's</c><00:33:11.400><c> an</c><00:33:11.550><c> iterator</c><00:33:11.940><c> so</c><00:33:12.240><c> just</c>

00:33:12.560 --> 00:33:12.570 align:start position:0%
method and there's an iterator so just
 

00:33:12.570 --> 00:33:14.120 align:start position:0%
method and there's an iterator so just
like<00:33:12.690><c> we</c><00:33:12.810><c> have</c><00:33:12.840><c> vectors</c><00:33:13.290><c> we</c><00:33:13.470><c> have</c><00:33:13.500><c> C++</c>

00:33:14.120 --> 00:33:14.130 align:start position:0%
like we have vectors we have C++
 

00:33:14.130 --> 00:33:16.160 align:start position:0%
like we have vectors we have C++
iterators<00:33:14.700><c> being</c><00:33:15.030><c> used</c><00:33:15.270><c> fairly</c><00:33:15.570><c> naturally</c>

00:33:16.160 --> 00:33:16.170 align:start position:0%
iterators being used fairly naturally
 

00:33:16.170 --> 00:33:19.520 align:start position:0%
iterators being used fairly naturally
it's<00:33:16.590><c> iterating</c><00:33:17.220><c> over</c><00:33:17.700><c> the</c><00:33:18.600><c> vector</c><00:33:18.960><c> and</c><00:33:19.170><c> it's</c>

00:33:19.520 --> 00:33:19.530 align:start position:0%
it's iterating over the vector and it's
 

00:33:19.530 --> 00:33:21.740 align:start position:0%
it's iterating over the vector and it's
checking<00:33:19.890><c> for</c><00:33:20.250><c> the</c><00:33:20.370><c> controller</c><00:33:20.790><c> and</c><00:33:21.120><c> when</c><00:33:21.630><c> it</c>

00:33:21.740 --> 00:33:21.750 align:start position:0%
checking for the controller and when it
 

00:33:21.750 --> 00:33:23.870 align:start position:0%
checking for the controller and when it
finds<00:33:21.990><c> it</c><00:33:22.200><c> it</c><00:33:22.530><c> erases</c><00:33:23.010><c> it</c><00:33:23.160><c> from</c><00:33:23.430><c> the</c><00:33:23.520><c> vector</c>

00:33:23.870 --> 00:33:23.880 align:start position:0%
finds it it erases it from the vector
 

00:33:23.880 --> 00:33:26.420 align:start position:0%
finds it it erases it from the vector
and<00:33:24.230><c> then</c><00:33:25.230><c> it</c><00:33:25.350><c> sends</c><00:33:25.530><c> the</c><00:33:25.710><c> release</c><00:33:26.010><c> message</c>

00:33:26.420 --> 00:33:26.430 align:start position:0%
and then it sends the release message
 

00:33:26.430 --> 00:33:29.300 align:start position:0%
and then it sends the release message
okay<00:33:27.420><c> and</c><00:33:27.630><c> that</c><00:33:28.110><c> sort</c><00:33:28.350><c> of</c><00:33:28.410><c> gives</c><00:33:28.590><c> you</c><00:33:28.830><c> a</c><00:33:28.860><c> hint</c>

00:33:29.300 --> 00:33:29.310 align:start position:0%
okay and that sort of gives you a hint
 

00:33:29.310 --> 00:33:31.490 align:start position:0%
okay and that sort of gives you a hint
on<00:33:29.550><c> where</c><00:33:29.820><c> the</c><00:33:30.000><c> the</c><00:33:30.210><c> trickiness</c><00:33:30.510><c> is</c><00:33:30.930><c> that</c>

00:33:31.490 --> 00:33:31.500 align:start position:0%
on where the the trickiness is that
 

00:33:31.500 --> 00:33:34.340 align:start position:0%
on where the the trickiness is that
Objective<00:33:32.340><c> C</c><00:33:32.370><c> at</c><00:33:33.210><c> least</c><00:33:33.420><c> in</c><00:33:33.540><c> the</c><00:33:33.630><c> context</c><00:33:34.170><c> of</c>

00:33:34.340 --> 00:33:34.350 align:start position:0%
Objective C at least in the context of
 

00:33:34.350 --> 00:33:37.300 align:start position:0%
Objective C at least in the context of
of<00:33:34.830><c> cocoa</c><00:33:35.340><c> uses</c><00:33:36.060><c> a</c><00:33:36.090><c> retain</c><00:33:36.480><c> release</c><00:33:36.750><c> metaphor</c>

00:33:37.300 --> 00:33:37.310 align:start position:0%
of cocoa uses a retain release metaphor
 

00:33:37.310 --> 00:33:41.000 align:start position:0%
of cocoa uses a retain release metaphor
currently<00:33:38.310><c> so</c><00:33:39.050><c> because</c><00:33:40.050><c> all</c><00:33:40.320><c> objects</c><00:33:40.950><c> are</c>

00:33:41.000 --> 00:33:41.010 align:start position:0%
currently so because all objects are
 

00:33:41.010 --> 00:33:43.400 align:start position:0%
currently so because all objects are
dynamically<00:33:41.640><c> allocated</c><00:33:42.270><c> cocoa</c><00:33:42.990><c> gives</c><00:33:43.260><c> you</c>

00:33:43.400 --> 00:33:43.410 align:start position:0%
dynamically allocated cocoa gives you
 

00:33:43.410 --> 00:33:45.500 align:start position:0%
dynamically allocated cocoa gives you
some<00:33:43.710><c> relief</c><00:33:44.100><c> in</c><00:33:44.340><c> trying</c><00:33:44.670><c> to</c><00:33:44.850><c> understand</c><00:33:45.390><c> the</c>

00:33:45.500 --> 00:33:45.510 align:start position:0%
some relief in trying to understand the
 

00:33:45.510 --> 00:33:47.480 align:start position:0%
some relief in trying to understand the
lifetime<00:33:45.960><c> by</c><00:33:46.200><c> providing</c><00:33:46.740><c> a</c><00:33:46.890><c> reference</c>

00:33:47.480 --> 00:33:47.490 align:start position:0%
lifetime by providing a reference
 

00:33:47.490 --> 00:33:50.420 align:start position:0%
lifetime by providing a reference
counting<00:33:48.120><c> metaphor</c><00:33:48.570><c> that</c><00:33:49.080><c> it</c><00:33:49.470><c> it</c><00:33:49.680><c> in</c><00:33:50.130><c> fact</c>

00:33:50.420 --> 00:33:50.430 align:start position:0%
counting metaphor that it it in fact
 

00:33:50.430 --> 00:33:52.070 align:start position:0%
counting metaphor that it it in fact
implements<00:33:51.150><c> and</c><00:33:51.330><c> encourages</c><00:33:51.930><c> you</c><00:33:52.050><c> to</c>

00:33:52.070 --> 00:33:52.080 align:start position:0%
implements and encourages you to
 

00:33:52.080 --> 00:33:57.920 align:start position:0%
implements and encourages you to
implement<00:33:52.620><c> and</c><00:33:52.740><c> this</c><00:33:52.920><c> is</c><00:33:53.100><c> an</c><00:33:53.340><c> example</c><00:33:56.930><c> so</c>

00:33:57.920 --> 00:33:57.930 align:start position:0%
implement and this is an example so
 

00:33:57.930 --> 00:34:06.020 align:start position:0%
implement and this is an example so
let's<00:33:58.530><c> get</c><00:33:58.680><c> into</c><00:33:58.920><c> the</c><00:33:59.010><c> gotchas</c><00:33:59.400><c> now</c><00:34:04.910><c> so</c><00:34:05.910><c> we</c>

00:34:06.020 --> 00:34:06.030 align:start position:0%
let's get into the gotchas now so we
 

00:34:06.030 --> 00:34:08.180 align:start position:0%
let's get into the gotchas now so we
just<00:34:06.060><c> looked</c><00:34:06.480><c> at</c><00:34:06.570><c> c++</c><00:34:07.170><c> containers</c><00:34:07.680><c> of</c><00:34:07.830><c> cocoa</c>

00:34:08.180 --> 00:34:08.190 align:start position:0%
just looked at c++ containers of cocoa
 

00:34:08.190 --> 00:34:10.100 align:start position:0%
just looked at c++ containers of cocoa
objects<00:34:08.670><c> there</c><00:34:08.970><c> i</c><00:34:09.180><c> was</c><00:34:09.510><c> alluding</c><00:34:09.750><c> to</c><00:34:09.900><c> the</c>

00:34:10.100 --> 00:34:10.110 align:start position:0%
objects there i was alluding to the
 

00:34:10.110 --> 00:34:14.180 align:start position:0%
objects there i was alluding to the
Gotcha<00:34:10.520><c> which</c><00:34:11.520><c> is</c><00:34:12.020><c> it's</c><00:34:13.020><c> a</c><00:34:13.170><c> little</c><00:34:13.470><c> bit</c><00:34:13.710><c> sticky</c>

00:34:14.180 --> 00:34:14.190 align:start position:0%
Gotcha which is it's a little bit sticky
 

00:34:14.190 --> 00:34:16.640 align:start position:0%
Gotcha which is it's a little bit sticky
right<00:34:14.580><c> now</c><00:34:14.820><c> mixing</c><00:34:15.810><c> the</c><00:34:16.020><c> retain</c><00:34:16.350><c> release</c>

00:34:16.640 --> 00:34:16.650 align:start position:0%
right now mixing the retain release
 

00:34:16.650 --> 00:34:19.520 align:start position:0%
right now mixing the retain release
metaphor<00:34:17.220><c> with</c><00:34:17.490><c> with</c><00:34:17.730><c> c++</c><00:34:18.420><c> when</c><00:34:19.230><c> the</c><00:34:19.350><c> vector</c>

00:34:19.520 --> 00:34:19.530 align:start position:0%
metaphor with with c++ when the vector
 

00:34:19.530 --> 00:34:21.590 align:start position:0%
metaphor with with c++ when the vector
classes<00:34:20.130><c> were</c><00:34:20.280><c> developed</c><00:34:20.850><c> they</c><00:34:21.390><c> obviously</c>

00:34:21.590 --> 00:34:21.600 align:start position:0%
classes were developed they obviously
 

00:34:21.600 --> 00:34:25.270 align:start position:0%
classes were developed they obviously
didn't<00:34:22.080><c> know</c><00:34:22.140><c> about</c><00:34:22.440><c> objective-c</c><00:34:23.310><c> right</c><00:34:24.060><c> so</c>

00:34:25.270 --> 00:34:25.280 align:start position:0%
didn't know about objective-c right so
 

00:34:25.280 --> 00:34:28.940 align:start position:0%
didn't know about objective-c right so
it's<00:34:26.280><c> hard</c><00:34:26.580><c> to</c><00:34:26.730><c> expect</c><00:34:27.180><c> them</c><00:34:27.540><c> to</c><00:34:27.900><c> know</c><00:34:28.230><c> how</c><00:34:28.920><c> to</c>

00:34:28.940 --> 00:34:28.950 align:start position:0%
it's hard to expect them to know how to
 

00:34:28.950 --> 00:34:32.150 align:start position:0%
it's hard to expect them to know how to
do<00:34:29.370><c> this</c><00:34:29.610><c> and</c><00:34:29.820><c> again</c><00:34:29.910><c> I</c><00:34:30.590><c> as</c><00:34:31.590><c> I</c><00:34:31.830><c> said</c><00:34:31.860><c> before</c>

00:34:32.150 --> 00:34:32.160 align:start position:0%
do this and again I as I said before
 

00:34:32.160 --> 00:34:34.610 align:start position:0%
do this and again I as I said before
both<00:34:32.550><c> runtimes</c><00:34:33.120><c> both</c><00:34:33.450><c> libraries</c><00:34:34.140><c> don't</c><00:34:34.350><c> know</c>

00:34:34.610 --> 00:34:34.620 align:start position:0%
both runtimes both libraries don't know
 

00:34:34.620 --> 00:34:35.770 align:start position:0%
both runtimes both libraries don't know
about<00:34:34.800><c> each</c><00:34:35.100><c> other</c>

00:34:35.770 --> 00:34:35.780 align:start position:0%
about each other
 

00:34:35.780 --> 00:34:38.330 align:start position:0%
about each other
fortunately<00:34:36.780><c> c++</c><00:34:37.650><c> provides</c><00:34:38.070><c> some</c>

00:34:38.330 --> 00:34:38.340 align:start position:0%
fortunately c++ provides some
 

00:34:38.340 --> 00:34:40.850 align:start position:0%
fortunately c++ provides some
interesting<00:34:38.610><c> hooks</c><00:34:39.570><c> to</c><00:34:40.140><c> be</c><00:34:40.260><c> able</c><00:34:40.470><c> to</c><00:34:40.650><c> solve</c>

00:34:40.850 --> 00:34:40.860 align:start position:0%
interesting hooks to be able to solve
 

00:34:40.860 --> 00:34:46.010 align:start position:0%
interesting hooks to be able to solve
this<00:34:41.130><c> problem</c><00:34:41.220><c> I</c><00:34:44.570><c> don't</c><00:34:45.570><c> know</c><00:34:45.660><c> if</c><00:34:45.780><c> you're</c><00:34:45.900><c> able</c>

00:34:46.010 --> 00:34:46.020 align:start position:0%
this problem I don't know if you're able
 

00:34:46.020 --> 00:34:48.040 align:start position:0%
this problem I don't know if you're able
to<00:34:46.170><c> read</c><00:34:46.350><c> the</c><00:34:46.470><c> comments</c><00:34:46.920><c> but</c><00:34:47.100><c> basically</c>

00:34:48.040 --> 00:34:48.050 align:start position:0%
to read the comments but basically
 

00:34:48.050 --> 00:34:51.290 align:start position:0%
to read the comments but basically
what's<00:34:49.050><c> happening</c><00:34:49.530><c> here</c><00:34:49.920><c> is</c><00:34:50.070><c> it's</c><00:34:50.730><c> considered</c>

00:34:51.290 --> 00:34:51.300 align:start position:0%
what's happening here is it's considered
 

00:34:51.300 --> 00:34:53.330 align:start position:0%
what's happening here is it's considered
a<00:34:51.420><c> no-no</c><00:34:51.810><c> in</c><00:34:51.990><c> cocoa</c><00:34:52.440><c> to</c><00:34:52.500><c> transfer</c><00:34:53.160><c> ownership</c>

00:34:53.330 --> 00:34:53.340 align:start position:0%
a no-no in cocoa to transfer ownership
 

00:34:53.340 --> 00:34:57.320 align:start position:0%
a no-no in cocoa to transfer ownership
across<00:34:54.060><c> calls</c><00:34:54.360><c> okay</c><00:34:55.080><c> so</c><00:34:55.650><c> what</c><00:34:56.280><c> I</c><00:34:56.310><c> expected</c><00:34:57.060><c> to</c>

00:34:57.320 --> 00:34:57.330 align:start position:0%
across calls okay so what I expected to
 

00:34:57.330 --> 00:34:59.840 align:start position:0%
across calls okay so what I expected to
when<00:34:58.080><c> I</c><00:34:58.110><c> was</c><00:34:58.230><c> reading</c><00:34:58.380><c> this</c><00:34:58.740><c> this</c><00:34:59.280><c> method</c><00:34:59.520><c> I</c>

00:34:59.840 --> 00:34:59.850 align:start position:0%
when I was reading this this method I
 

00:34:59.850 --> 00:35:04.430 align:start position:0%
when I was reading this this method I
was<00:35:00.030><c> expecting</c><00:35:00.720><c> to</c><00:35:00.960><c> see</c><00:35:01.790><c> a</c><00:35:02.790><c> release</c><00:35:03.600><c> at</c><00:35:04.200><c> the</c>

00:35:04.430 --> 00:35:04.440 align:start position:0%
was expecting to see a release at the
 

00:35:04.440 --> 00:35:06.500 align:start position:0%
was expecting to see a release at the
end<00:35:04.620><c> okay</c><00:35:05.220><c> but</c><00:35:05.370><c> it</c><00:35:05.460><c> doesn't</c><00:35:05.670><c> do</c><00:35:05.880><c> a</c><00:35:05.910><c> release</c><00:35:06.270><c> it</c>

00:35:06.500 --> 00:35:06.510 align:start position:0%
end okay but it doesn't do a release it
 

00:35:06.510 --> 00:35:09.320 align:start position:0%
end okay but it doesn't do a release it
passes<00:35:07.140><c> passes</c><00:35:07.620><c> the</c><00:35:07.950><c> object</c><00:35:08.340><c> on</c><00:35:08.520><c> and</c><00:35:08.820><c> for</c>

00:35:09.320 --> 00:35:09.330 align:start position:0%
passes passes the object on and for
 

00:35:09.330 --> 00:35:12.380 align:start position:0%
passes passes the object on and for
purposes<00:35:09.540><c> of</c><00:35:09.840><c> this</c><00:35:10.020><c> talk</c><00:35:11.030><c> if</c><00:35:12.030><c> you're</c><00:35:12.210><c> not</c>

00:35:12.380 --> 00:35:12.390 align:start position:0%
purposes of this talk if you're not
 

00:35:12.390 --> 00:35:14.240 align:start position:0%
purposes of this talk if you're not
familiar<00:35:12.570><c> with</c><00:35:12.840><c> retain</c><00:35:13.290><c> release</c><00:35:13.650><c> this</c><00:35:14.070><c> is</c>

00:35:14.240 --> 00:35:14.250 align:start position:0%
familiar with retain release this is
 

00:35:14.250 --> 00:35:17.470 align:start position:0%
familiar with retain release this is
probably<00:35:14.790><c> more</c><00:35:15.450><c> than</c><00:35:15.570><c> you</c><00:35:15.690><c> need</c><00:35:15.840><c> to</c><00:35:15.930><c> know</c><00:35:16.080><c> but</c>

00:35:17.470 --> 00:35:17.480 align:start position:0%
probably more than you need to know but
 

00:35:17.480 --> 00:35:22.490 align:start position:0%
probably more than you need to know but
here<00:35:20.120><c> there's</c><00:35:21.120><c> a</c><00:35:21.210><c> manual</c><00:35:21.450><c> release</c><00:35:21.840><c> so</c><00:35:22.170><c> you</c><00:35:22.200><c> saw</c>

00:35:22.490 --> 00:35:22.500 align:start position:0%
here there's a manual release so you saw
 

00:35:22.500 --> 00:35:23.000 align:start position:0%
here there's a manual release so you saw
that

00:35:23.000 --> 00:35:23.010 align:start position:0%
that
 

00:35:23.010 --> 00:35:26.680 align:start position:0%
that
and<00:35:23.100><c> and</c><00:35:23.910><c> it's</c><00:35:24.270><c> just</c><00:35:24.570><c> confusing</c><00:35:25.230><c> okay</c><00:35:25.410><c> and</c><00:35:26.070><c> and</c>

00:35:26.680 --> 00:35:26.690 align:start position:0%
and and it's just confusing okay and and
 

00:35:26.690 --> 00:35:29.180 align:start position:0%
and and it's just confusing okay and and
I've<00:35:27.690><c> talked</c><00:35:28.020><c> to</c><00:35:28.170><c> people</c><00:35:28.200><c> who</c><00:35:28.740><c> use</c><00:35:29.040><c> the</c>

00:35:29.180 --> 00:35:29.190 align:start position:0%
I've talked to people who use the
 

00:35:29.190 --> 00:35:31.970 align:start position:0%
I've talked to people who use the
language<00:35:29.420><c> and</c><00:35:30.420><c> they</c><00:35:30.930><c> want</c><00:35:31.170><c> to</c><00:35:31.230><c> see</c><00:35:31.380><c> this</c><00:35:31.590><c> fixed</c>

00:35:31.970 --> 00:35:31.980 align:start position:0%
language and they want to see this fixed
 

00:35:31.980 --> 00:35:33.680 align:start position:0%
language and they want to see this fixed
so<00:35:32.160><c> one</c><00:35:32.760><c> of</c><00:35:32.880><c> the</c><00:35:32.970><c> things</c><00:35:33.210><c> that</c><00:35:33.390><c> we're</c><00:35:33.510><c> going</c><00:35:33.630><c> to</c>

00:35:33.680 --> 00:35:33.690 align:start position:0%
so one of the things that we're going to
 

00:35:33.690 --> 00:35:36.050 align:start position:0%
so one of the things that we're going to
be<00:35:33.840><c> doing</c><00:35:34.230><c> is</c><00:35:34.530><c> adding</c><00:35:34.890><c> a</c><00:35:35.100><c> smart</c><00:35:35.460><c> pointer</c><00:35:35.850><c> class</c>

00:35:36.050 --> 00:35:36.060 align:start position:0%
be doing is adding a smart pointer class
 

00:35:36.060 --> 00:35:38.750 align:start position:0%
be doing is adding a smart pointer class
to<00:35:36.300><c> automate</c><00:35:36.720><c> the</c><00:35:36.870><c> retain</c><00:35:37.170><c> release</c><00:35:37.890><c> okay</c>

00:35:38.750 --> 00:35:38.760 align:start position:0%
to automate the retain release okay
 

00:35:38.760 --> 00:35:40.670 align:start position:0%
to automate the retain release okay
so<00:35:39.150><c> for</c><00:35:39.390><c> any</c><00:35:39.510><c> of</c><00:35:39.600><c> you</c><00:35:39.810><c> who've</c><00:35:40.050><c> tried</c><00:35:40.290><c> to</c><00:35:40.500><c> do</c>

00:35:40.670 --> 00:35:40.680 align:start position:0%
so for any of you who've tried to do
 

00:35:40.680 --> 00:35:42.440 align:start position:0%
so for any of you who've tried to do
this<00:35:40.860><c> and</c><00:35:41.130><c> have</c><00:35:41.220><c> been</c><00:35:41.370><c> confused</c><00:35:41.850><c> by</c><00:35:41.970><c> it</c>

00:35:42.440 --> 00:35:42.450 align:start position:0%
this and have been confused by it
 

00:35:42.450 --> 00:35:46.130 align:start position:0%
this and have been confused by it
fortunately<00:35:43.790><c> C++</c><00:35:44.790><c> provides</c><00:35:45.450><c> templates</c><00:35:45.990><c> which</c>

00:35:46.130 --> 00:35:46.140 align:start position:0%
fortunately C++ provides templates which
 

00:35:46.140 --> 00:35:49.160 align:start position:0%
fortunately C++ provides templates which
allow<00:35:46.470><c> you</c><00:35:46.530><c> to</c><00:35:46.830><c> customize</c><00:35:47.550><c> the</c><00:35:48.300><c> behavior</c><00:35:48.780><c> of</c>

00:35:49.160 --> 00:35:49.170 align:start position:0%
allow you to customize the behavior of
 

00:35:49.170 --> 00:35:52.310 align:start position:0%
allow you to customize the behavior of
the<00:35:49.410><c> vector</c><00:35:49.740><c> so</c><00:35:50.010><c> for</c><00:35:50.220><c> instance</c><00:35:50.900><c> by</c><00:35:51.900><c> providing</c>

00:35:52.310 --> 00:35:52.320 align:start position:0%
the vector so for instance by providing
 

00:35:52.320 --> 00:35:55.850 align:start position:0%
the vector so for instance by providing
an<00:35:52.500><c> ID</c><00:35:52.680><c> pointer</c><00:35:53.310><c> template</c><00:35:53.930><c> it</c><00:35:54.930><c> allows</c><00:35:55.380><c> it</c>

00:35:55.850 --> 00:35:55.860 align:start position:0%
an ID pointer template it allows it
 

00:35:55.860 --> 00:35:57.680 align:start position:0%
an ID pointer template it allows it
allows<00:35:56.160><c> us</c><00:35:56.190><c> to</c><00:35:56.460><c> solve</c><00:35:56.640><c> this</c><00:35:56.910><c> problem</c><00:35:57.090><c> and</c>

00:35:57.680 --> 00:35:57.690 align:start position:0%
allows us to solve this problem and
 

00:35:57.690 --> 00:35:59.540 align:start position:0%
allows us to solve this problem and
write<00:35:57.870><c> that</c><00:35:58.050><c> code</c><00:35:58.290><c> much</c><00:35:58.590><c> more</c><00:35:58.800><c> naturally</c><00:35:59.340><c> and</c>

00:35:59.540 --> 00:35:59.550 align:start position:0%
write that code much more naturally and
 

00:35:59.550 --> 00:36:03.020 align:start position:0%
write that code much more naturally and
in<00:36:00.150><c> a</c><00:36:00.240><c> much</c><00:36:00.480><c> less</c><00:36:01.010><c> error-prone</c><00:36:02.010><c> fashion</c><00:36:02.730><c> so</c>

00:36:03.020 --> 00:36:03.030 align:start position:0%
in a much less error-prone fashion so
 

00:36:03.030 --> 00:36:05.360 align:start position:0%
in a much less error-prone fashion so
this<00:36:03.540><c> is</c><00:36:03.690><c> a</c><00:36:03.720><c> feature</c><00:36:03.990><c> that</c><00:36:04.170><c> we</c><00:36:04.920><c> expect</c><00:36:05.280><c> to</c>

00:36:05.360 --> 00:36:05.370 align:start position:0%
this is a feature that we expect to
 

00:36:05.370 --> 00:36:07.910 align:start position:0%
this is a feature that we expect to
provide<00:36:05.730><c> for</c><00:36:06.060><c> Tiger</c><00:36:06.450><c> if</c><00:36:06.840><c> not</c><00:36:07.230><c> it's</c><00:36:07.650><c> actually</c>

00:36:07.910 --> 00:36:07.920 align:start position:0%
provide for Tiger if not it's actually
 

00:36:07.920 --> 00:36:10.250 align:start position:0%
provide for Tiger if not it's actually
fairly<00:36:08.520><c> easy</c><00:36:08.670><c> for</c><00:36:09.180><c> you</c><00:36:09.360><c> to</c><00:36:09.570><c> implement</c><00:36:10.140><c> this</c>

00:36:10.250 --> 00:36:10.260 align:start position:0%
fairly easy for you to implement this
 

00:36:10.260 --> 00:36:12.980 align:start position:0%
fairly easy for you to implement this
yourself<00:36:10.440><c> if</c><00:36:10.920><c> you</c><00:36:11.370><c> need</c><00:36:11.610><c> to</c><00:36:11.820><c> do</c><00:36:12.000><c> so</c><00:36:12.270><c> you</c><00:36:12.570><c> know</c>

00:36:12.980 --> 00:36:12.990 align:start position:0%
yourself if you need to do so you know
 

00:36:12.990 --> 00:36:16.250 align:start position:0%
yourself if you need to do so you know
in<00:36:13.140><c> the</c><00:36:13.230><c> short</c><00:36:13.470><c> term</c><00:36:13.790><c> as</c><00:36:14.790><c> I</c><00:36:15.570><c> say</c><00:36:15.780><c> in</c><00:36:15.960><c> the</c><00:36:15.990><c> slide</c>

00:36:16.250 --> 00:36:16.260 align:start position:0%
in the short term as I say in the slide
 

00:36:16.260 --> 00:36:18.770 align:start position:0%
in the short term as I say in the slide
boost<00:36:16.620><c> shared</c><00:36:16.830><c> pointer</c><00:36:17.370><c> might</c><00:36:18.000><c> even</c><00:36:18.180><c> work</c><00:36:18.480><c> for</c>

00:36:18.770 --> 00:36:18.780 align:start position:0%
boost shared pointer might even work for
 

00:36:18.780 --> 00:36:21.050 align:start position:0%
boost shared pointer might even work for
you<00:36:18.960><c> off</c><00:36:19.200><c> the</c><00:36:19.470><c> shelf</c><00:36:19.740><c> if</c><00:36:19.980><c> it</c><00:36:20.400><c> doesn't</c><00:36:20.850><c> then</c><00:36:21.030><c> you</c>

00:36:21.050 --> 00:36:21.060 align:start position:0%
you off the shelf if it doesn't then you
 

00:36:21.060 --> 00:36:25.790 align:start position:0%
you off the shelf if it doesn't then you
could<00:36:21.300><c> adapt</c><00:36:21.600><c> it</c><00:36:21.780><c> to</c><00:36:21.810><c> your</c><00:36:21.930><c> needs</c><00:36:23.690><c> and</c><00:36:24.690><c> so</c><00:36:25.590><c> on</c>

00:36:25.790 --> 00:36:25.800 align:start position:0%
could adapt it to your needs and so on
 

00:36:25.800 --> 00:36:30.580 align:start position:0%
could adapt it to your needs and so on
so<00:36:26.360><c> the</c><00:36:27.360><c> next</c><00:36:27.660><c> gotcha</c><00:36:28.110><c> is</c><00:36:29.240><c> exception</c><00:36:30.240><c> handling</c>

00:36:30.580 --> 00:36:30.590 align:start position:0%
so the next gotcha is exception handling
 

00:36:30.590 --> 00:36:35.840 align:start position:0%
so the next gotcha is exception handling
exception<00:36:31.590><c> handling</c><00:36:34.010><c> is</c><00:36:35.010><c> supported</c><00:36:35.580><c> in</c><00:36:35.700><c> both</c>

00:36:35.840 --> 00:36:35.850 align:start position:0%
exception handling is supported in both
 

00:36:35.850 --> 00:36:39.890 align:start position:0%
exception handling is supported in both
languages<00:36:36.390><c> in</c><00:36:36.570><c> in</c><00:36:37.020><c> in</c><00:36:37.820><c> C++</c><00:36:38.820><c> it's</c><00:36:39.030><c> try</c><00:36:39.630><c> catch</c>

00:36:39.890 --> 00:36:39.900 align:start position:0%
languages in in in C++ it's try catch
 

00:36:39.900 --> 00:36:42.170 align:start position:0%
languages in in in C++ it's try catch
and<00:36:40.200><c> objective-c</c><00:36:40.860><c> it's</c><00:36:41.100><c> a</c><00:36:41.250><c> triac</c><00:36:41.730><c> catch</c><00:36:41.940><c> but</c>

00:36:42.170 --> 00:36:42.180 align:start position:0%
and objective-c it's a triac catch but
 

00:36:42.180 --> 00:36:44.210 align:start position:0%
and objective-c it's a triac catch but
one<00:36:42.360><c> of</c><00:36:42.480><c> the</c><00:36:42.600><c> confusing</c><00:36:42.840><c> things</c><00:36:43.350><c> here</c><00:36:43.620><c> is</c><00:36:43.770><c> if</c>

00:36:44.210 --> 00:36:44.220 align:start position:0%
one of the confusing things here is if
 

00:36:44.220 --> 00:36:47.720 align:start position:0%
one of the confusing things here is if
you<00:36:44.430><c> look</c><00:36:44.460><c> at</c><00:36:44.790><c> these</c><00:36:45.140><c> two</c><00:36:46.140><c> calls</c><00:36:47.040><c> here</c><00:36:47.280><c> one</c><00:36:47.550><c> is</c>

00:36:47.720 --> 00:36:47.730 align:start position:0%
you look at these two calls here one is
 

00:36:47.730 --> 00:36:51.350 align:start position:0%
you look at these two calls here one is
the<00:36:47.970><c> sending</c><00:36:48.930><c> the</c><00:36:49.020><c> process</c><00:36:50.030><c> message</c><00:36:51.030><c> and</c><00:36:51.270><c> the</c>

00:36:51.350 --> 00:36:51.360 align:start position:0%
the sending the process message and the
 

00:36:51.360 --> 00:36:54.760 align:start position:0%
the sending the process message and the
other<00:36:51.390><c> is</c><00:36:51.690><c> timer</c><00:36:51.990><c> update</c><00:36:53.090><c> you</c><00:36:54.090><c> don't</c><00:36:54.390><c> know</c>

00:36:54.760 --> 00:36:54.770 align:start position:0%
other is timer update you don't know
 

00:36:54.770 --> 00:36:58.250 align:start position:0%
other is timer update you don't know
whether<00:36:55.770><c> these</c><00:36:56.190><c> two</c><00:36:56.460><c> calls</c><00:36:56.790><c> are</c><00:36:57.180><c> truly</c><00:36:57.780><c> like</c>

00:36:58.250 --> 00:36:58.260 align:start position:0%
whether these two calls are truly like
 

00:36:58.260 --> 00:37:00.110 align:start position:0%
whether these two calls are truly like
the<00:36:58.410><c> first</c><00:36:58.620><c> one</c><00:36:58.830><c> you</c><00:36:59.250><c> don't</c><00:36:59.340><c> know</c><00:36:59.580><c> if</c><00:36:59.790><c> is</c><00:36:59.940><c> it</c>

00:37:00.110 --> 00:37:00.120 align:start position:0%
the first one you don't know if is it
 

00:37:00.120 --> 00:37:03.140 align:start position:0%
the first one you don't know if is it
C++<00:37:00.780><c> pure</c><00:37:01.290><c> or</c><00:37:01.740><c> is</c><00:37:01.890><c> it</c><00:37:01.980><c> hybrid</c><00:37:02.190><c> right</c><00:37:02.880><c> the</c>

00:37:03.140 --> 00:37:03.150 align:start position:0%
C++ pure or is it hybrid right the
 

00:37:03.150 --> 00:37:05.210 align:start position:0%
C++ pure or is it hybrid right the
second<00:37:03.510><c> one</c><00:37:03.630><c> you</c><00:37:04.110><c> don't</c><00:37:04.290><c> know</c><00:37:04.500><c> is</c><00:37:04.740><c> this</c><00:37:04.890><c> pure</c>

00:37:05.210 --> 00:37:05.220 align:start position:0%
second one you don't know is this pure
 

00:37:05.220 --> 00:37:07.520 align:start position:0%
second one you don't know is this pure
objective-c<00:37:05.850><c> message</c><00:37:06.690><c> sent</c><00:37:06.960><c> that</c><00:37:07.260><c> is</c><00:37:07.380><c> the</c>

00:37:07.520 --> 00:37:07.530 align:start position:0%
objective-c message sent that is the
 

00:37:07.530 --> 00:37:09.500 align:start position:0%
objective-c message sent that is the
method<00:37:07.710><c> on</c><00:37:07.950><c> the</c><00:37:08.070><c> other</c><00:37:08.250><c> end</c><00:37:08.460><c> is</c><00:37:08.760><c> it</c><00:37:09.270><c> pure</c>

00:37:09.500 --> 00:37:09.510 align:start position:0%
method on the other end is it pure
 

00:37:09.510 --> 00:37:12.500 align:start position:0%
method on the other end is it pure
Objective<00:37:10.020><c> C</c><00:37:10.050><c> or</c><00:37:10.530><c> not</c><00:37:10.560><c> right</c><00:37:11.310><c> if</c><00:37:11.580><c> you</c><00:37:12.270><c> know</c>

00:37:12.500 --> 00:37:12.510 align:start position:0%
Objective C or not right if you know
 

00:37:12.510 --> 00:37:14.480 align:start position:0%
Objective C or not right if you know
that<00:37:12.750><c> then</c><00:37:13.200><c> life's</c><00:37:13.500><c> a</c><00:37:13.650><c> little</c><00:37:13.860><c> bit</c><00:37:14.100><c> simpler</c>

00:37:14.480 --> 00:37:14.490 align:start position:0%
that then life's a little bit simpler
 

00:37:14.490 --> 00:37:18.800 align:start position:0%
that then life's a little bit simpler
you<00:37:14.640><c> can</c><00:37:14.790><c> just</c><00:37:15.060><c> wrap</c><00:37:15.300><c> your</c><00:37:15.830><c> C++</c><00:37:17.060><c> call</c><00:37:18.060><c> with</c><00:37:18.630><c> the</c>

00:37:18.800 --> 00:37:18.810 align:start position:0%
you can just wrap your C++ call with the
 

00:37:18.810 --> 00:37:20.690 align:start position:0%
you can just wrap your C++ call with the
try<00:37:19.050><c> catch</c><00:37:19.320><c> and</c><00:37:19.560><c> wrap</c><00:37:20.040><c> your</c><00:37:20.220><c> objective-c</c>

00:37:20.690 --> 00:37:20.700 align:start position:0%
try catch and wrap your objective-c
 

00:37:20.700 --> 00:37:23.020 align:start position:0%
try catch and wrap your objective-c
message<00:37:21.150><c> then</c><00:37:21.390><c> with</c><00:37:21.840><c> that</c><00:37:22.020><c> try</c><00:37:22.230><c> out</c><00:37:22.410><c> catch</c>

00:37:23.020 --> 00:37:23.030 align:start position:0%
message then with that try out catch
 

00:37:23.030 --> 00:37:24.920 align:start position:0%
message then with that try out catch
unfortunately<00:37:24.030><c> in</c><00:37:24.210><c> this</c><00:37:24.330><c> case</c><00:37:24.510><c> they're</c>

00:37:24.920 --> 00:37:24.930 align:start position:0%
unfortunately in this case they're
 

00:37:24.930 --> 00:37:26.720 align:start position:0%
unfortunately in this case they're
hybrid<00:37:25.350><c> which</c><00:37:25.860><c> is</c><00:37:26.010><c> why</c><00:37:26.100><c> I</c><00:37:26.130><c> used</c><00:37:26.370><c> it</c><00:37:26.520><c> as</c><00:37:26.610><c> an</c>

00:37:26.720 --> 00:37:26.730 align:start position:0%
hybrid which is why I used it as an
 

00:37:26.730 --> 00:37:30.590 align:start position:0%
hybrid which is why I used it as an
example<00:37:27.270><c> so</c><00:37:27.980><c> to</c><00:37:28.980><c> solve</c><00:37:29.220><c> this</c><00:37:29.430><c> problem</c><00:37:29.670><c> it's</c>

00:37:30.590 --> 00:37:30.600 align:start position:0%
example so to solve this problem it's
 

00:37:30.600 --> 00:37:32.510 align:start position:0%
example so to solve this problem it's
it's<00:37:30.900><c> straightforward</c><00:37:31.170><c> maybe</c><00:37:31.800><c> initially</c><00:37:32.100><c> non</c>

00:37:32.510 --> 00:37:32.520 align:start position:0%
it's straightforward maybe initially non
 

00:37:32.520 --> 00:37:34.760 align:start position:0%
it's straightforward maybe initially non
obvious<00:37:32.760><c> but</c><00:37:33.180><c> you</c><00:37:33.360><c> you</c><00:37:33.660><c> basically</c><00:37:34.050><c> wrap</c><00:37:34.350><c> the</c>

00:37:34.760 --> 00:37:34.770 align:start position:0%
obvious but you you basically wrap the
 

00:37:34.770 --> 00:37:36.380 align:start position:0%
obvious but you you basically wrap the
first

00:37:36.380 --> 00:37:36.390 align:start position:0%
first
 

00:37:36.390 --> 00:37:39.710 align:start position:0%
first
calls<00:37:36.630><c> in</c><00:37:36.930><c> try-catch</c><00:37:37.769><c> and</c><00:37:38.130><c> that's</c><00:37:38.700><c> the</c><00:37:38.940><c> C++</c>

00:37:39.710 --> 00:37:39.720 align:start position:0%
calls in try-catch and that's the C++
 

00:37:39.720 --> 00:37:42.440 align:start position:0%
calls in try-catch and that's the C++
catch<00:37:40.500><c> right</c><00:37:40.799><c> there</c><00:37:40.829><c> and</c><00:37:41.220><c> then</c><00:37:41.880><c> you</c><00:37:42.029><c> would</c><00:37:42.150><c> rap</c>

00:37:42.440 --> 00:37:42.450 align:start position:0%
catch right there and then you would rap
 

00:37:42.450 --> 00:37:47.509 align:start position:0%
catch right there and then you would rap
without<00:37:43.440><c> trial</c><00:37:43.950><c> catch</c><00:37:44.160><c> okay</c><00:37:45.380><c> now</c><00:37:46.519><c> fortunately</c>

00:37:47.509 --> 00:37:47.519 align:start position:0%
without trial catch okay now fortunately
 

00:37:47.519 --> 00:37:50.990 align:start position:0%
without trial catch okay now fortunately
the<00:37:48.390><c> way</c><00:37:48.510><c> exceptions</c><00:37:49.079><c> are</c><00:37:49.260><c> used</c><00:37:49.559><c> in</c><00:37:50.309><c> Cocoa</c><00:37:50.789><c> and</c>

00:37:50.990 --> 00:37:51.000 align:start position:0%
the way exceptions are used in Cocoa and
 

00:37:51.000 --> 00:37:53.509 align:start position:0%
the way exceptions are used in Cocoa and
C++<00:37:51.690><c> they're</c><00:37:51.960><c> really</c><00:37:52.410><c> used</c><00:37:52.650><c> for</c><00:37:52.950><c> exceptional</c>

00:37:53.509 --> 00:37:53.519 align:start position:0%
C++ they're really used for exceptional
 

00:37:53.519 --> 00:37:57.079 align:start position:0%
C++ they're really used for exceptional
conditions<00:37:54.000><c> as</c><00:37:54.180><c> errors</c><00:37:55.109><c> right</c><00:37:55.769><c> so</c><00:37:56.369><c> you</c><00:37:56.760><c> don't</c>

00:37:57.079 --> 00:37:57.089 align:start position:0%
conditions as errors right so you don't
 

00:37:57.089 --> 00:37:59.359 align:start position:0%
conditions as errors right so you don't
find<00:37:57.510><c> yourself</c><00:37:57.720><c> having</c><00:37:58.349><c> to</c><00:37:58.559><c> write</c><00:37:58.890><c> this</c><00:37:59.160><c> type</c>

00:37:59.359 --> 00:37:59.369 align:start position:0%
find yourself having to write this type
 

00:37:59.369 --> 00:38:02.269 align:start position:0%
find yourself having to write this type
of<00:37:59.549><c> code</c><00:37:59.730><c> very</c><00:37:59.970><c> often</c><00:38:00.450><c> usually</c><00:38:01.349><c> in</c><00:38:01.470><c> Cocoa</c><00:38:02.130><c> in</c>

00:38:02.269 --> 00:38:02.279 align:start position:0%
of code very often usually in Cocoa in
 

00:38:02.279 --> 00:38:05.120 align:start position:0%
of code very often usually in Cocoa in
particular<00:38:02.849><c> you</c><00:38:03.359><c> write</c><00:38:03.569><c> a</c><00:38:03.599><c> you</c><00:38:04.140><c> inherit</c><00:38:04.589><c> an</c>

00:38:05.120 --> 00:38:05.130 align:start position:0%
particular you write a you inherit an
 

00:38:05.130 --> 00:38:06.410 align:start position:0%
particular you write a you inherit an
exception<00:38:05.609><c> handler</c><00:38:06.000><c> from</c><00:38:06.119><c> menace</c>

00:38:06.410 --> 00:38:06.420 align:start position:0%
exception handler from menace
 

00:38:06.420 --> 00:38:08.960 align:start position:0%
exception handler from menace
application<00:38:07.019><c> and</c><00:38:07.309><c> even</c><00:38:08.309><c> if</c><00:38:08.430><c> you</c><00:38:08.579><c> decide</c><00:38:08.940><c> to</c>

00:38:08.960 --> 00:38:08.970 align:start position:0%
application and even if you decide to
 

00:38:08.970 --> 00:38:11.210 align:start position:0%
application and even if you decide to
implement<00:38:09.539><c> your</c><00:38:09.660><c> own</c><00:38:09.859><c> exception</c><00:38:10.859><c> handling</c>

00:38:11.210 --> 00:38:11.220 align:start position:0%
implement your own exception handling
 

00:38:11.220 --> 00:38:15.019 align:start position:0%
implement your own exception handling
you<00:38:12.619><c> usually</c><00:38:13.619><c> do</c><00:38:14.010><c> it</c><00:38:14.160><c> a</c><00:38:14.220><c> very</c><00:38:14.460><c> high</c><00:38:14.640><c> level</c><00:38:15.000><c> of</c>

00:38:15.019 --> 00:38:15.029 align:start position:0%
you usually do it a very high level of
 

00:38:15.029 --> 00:38:17.390 align:start position:0%
you usually do it a very high level of
the<00:38:15.150><c> application</c><00:38:15.809><c> again</c><00:38:16.349><c> it's</c><00:38:16.500><c> not</c><00:38:16.650><c> it's</c><00:38:17.160><c> not</c>

00:38:17.390 --> 00:38:17.400 align:start position:0%
the application again it's not it's not
 

00:38:17.400 --> 00:38:20.950 align:start position:0%
the application again it's not it's not
handled<00:38:17.730><c> for</c><00:38:18.119><c> things</c><00:38:18.359><c> like</c><00:38:18.480><c> file</c><00:38:18.900><c> not</c><00:38:19.109><c> found</c>

00:38:20.950 --> 00:38:20.960 align:start position:0%
handled for things like file not found
 

00:38:20.960 --> 00:38:23.779 align:start position:0%
handled for things like file not found
so<00:38:21.960><c> that</c><00:38:21.990><c> what</c><00:38:22.619><c> I</c><00:38:22.650><c> just</c><00:38:22.859><c> talked</c><00:38:23.099><c> about</c><00:38:23.250><c> was</c>

00:38:23.779 --> 00:38:23.789 align:start position:0%
so that what I just talked about was
 

00:38:23.789 --> 00:38:26.509 align:start position:0%
so that what I just talked about was
sort<00:38:24.180><c> of</c><00:38:24.529><c> education</c><00:38:25.529><c> it</c><00:38:25.680><c> wasn't</c><00:38:25.950><c> it</c><00:38:26.250><c> isn't</c>

00:38:26.509 --> 00:38:26.519 align:start position:0%
sort of education it wasn't it isn't
 

00:38:26.519 --> 00:38:28.009 align:start position:0%
sort of education it wasn't it isn't
really<00:38:26.760><c> a</c><00:38:26.789><c> big</c><00:38:27.029><c> gotcha</c><00:38:27.240><c> it's</c><00:38:27.569><c> just</c><00:38:27.690><c> something</c>

00:38:28.009 --> 00:38:28.019 align:start position:0%
really a big gotcha it's just something
 

00:38:28.019 --> 00:38:29.630 align:start position:0%
really a big gotcha it's just something
did<00:38:28.410><c> you</c><00:38:28.500><c> have</c><00:38:28.619><c> to</c><00:38:28.740><c> think</c><00:38:29.010><c> about</c><00:38:29.130><c> more</c><00:38:29.490><c> of</c><00:38:29.519><c> a</c>

00:38:29.630 --> 00:38:29.640 align:start position:0%
did you have to think about more of a
 

00:38:29.640 --> 00:38:31.569 align:start position:0%
did you have to think about more of a
speed<00:38:29.880><c> bump</c><00:38:30.089><c> this</c><00:38:30.630><c> is</c><00:38:30.690><c> a</c><00:38:30.869><c> gotcha</c>

00:38:31.569 --> 00:38:31.579 align:start position:0%
speed bump this is a gotcha
 

00:38:31.579 --> 00:38:34.700 align:start position:0%
speed bump this is a gotcha
this-this-this<00:38:32.579><c> init</c><00:38:33.510><c> method</c><00:38:33.930><c> does</c>

00:38:34.700 --> 00:38:34.710 align:start position:0%
this-this-this init method does
 

00:38:34.710 --> 00:38:37.160 align:start position:0%
this-this-this init method does
something<00:38:35.010><c> very</c><00:38:35.039><c> bad</c><00:38:35.460><c> basically</c><00:38:36.420><c> it</c><00:38:36.750><c> has</c>

00:38:37.160 --> 00:38:37.170 align:start position:0%
something very bad basically it has
 

00:38:37.170 --> 00:38:39.170 align:start position:0%
something very bad basically it has
there's<00:38:37.440><c> a</c><00:38:37.500><c> value</c><00:38:37.890><c> stack</c><00:38:38.220><c> object</c><00:38:38.789><c> that</c><00:38:39.029><c> I've</c>

00:38:39.170 --> 00:38:39.180 align:start position:0%
there's a value stack object that I've
 

00:38:39.180 --> 00:38:42.859 align:start position:0%
there's a value stack object that I've
declared<00:38:39.539><c> here</c><00:38:39.930><c> and</c><00:38:40.109><c> as</c><00:38:40.740><c> the</c><00:38:41.039><c> comment</c><00:38:41.869><c> says</c>

00:38:42.859 --> 00:38:42.869 align:start position:0%
declared here and as the comment says
 

00:38:42.869 --> 00:38:44.930 align:start position:0%
declared here and as the comment says
the<00:38:43.079><c> destructor</c><00:38:43.619><c> for</c><00:38:43.799><c> stack</c><00:38:44.009><c> object</c><00:38:44.549><c> will</c><00:38:44.910><c> not</c>

00:38:44.930 --> 00:38:44.940 align:start position:0%
the destructor for stack object will not
 

00:38:44.940 --> 00:38:47.809 align:start position:0%
the destructor for stack object will not
be<00:38:45.150><c> called</c><00:38:45.539><c> automatically</c><00:38:46.400><c> when</c><00:38:47.400><c> that</c><00:38:47.609><c> add</c>

00:38:47.809 --> 00:38:47.819 align:start position:0%
be called automatically when that add
 

00:38:47.819 --> 00:38:51.700 align:start position:0%
be called automatically when that add
throw<00:38:48.119><c> happens</c><00:38:48.599><c> okay</c><00:38:49.380><c> the</c><00:38:50.009><c> reason</c><00:38:50.220><c> for</c><00:38:50.789><c> this</c>

00:38:51.700 --> 00:38:51.710 align:start position:0%
throw happens okay the reason for this
 

00:38:51.710 --> 00:38:54.380 align:start position:0%
throw happens okay the reason for this
unfortunately<00:38:52.710><c> is</c><00:38:52.980><c> related</c><00:38:53.880><c> to</c><00:38:53.910><c> the</c><00:38:54.150><c> fact</c>

00:38:54.380 --> 00:38:54.390 align:start position:0%
unfortunately is related to the fact
 

00:38:54.390 --> 00:38:56.509 align:start position:0%
unfortunately is related to the fact
that<00:38:54.630><c> we're</c><00:38:55.079><c> trying</c><00:38:55.109><c> very</c><00:38:55.500><c> hard</c><00:38:55.859><c> to</c><00:38:56.099><c> be</c><00:38:56.190><c> binary</c>

00:38:56.509 --> 00:38:56.519 align:start position:0%
that we're trying very hard to be binary
 

00:38:56.519 --> 00:38:59.059 align:start position:0%
that we're trying very hard to be binary
compatible<00:38:57.299><c> so</c><00:38:57.779><c> that</c><00:38:57.930><c> when</c><00:38:58.049><c> we</c><00:38:58.170><c> added</c><00:38:58.380><c> at</c><00:38:58.740><c> try</c>

00:38:59.059 --> 00:38:59.069 align:start position:0%
compatible so that when we added at try
 

00:38:59.069 --> 00:39:01.849 align:start position:0%
compatible so that when we added at try
at<00:38:59.369><c> catch</c><00:38:59.700><c> last</c><00:39:00.029><c> year</c><00:39:00.480><c> we</c><00:39:00.960><c> actually</c><00:39:01.170><c> use</c><00:39:01.619><c> set</c>

00:39:01.849 --> 00:39:01.859 align:start position:0%
at catch last year we actually use set
 

00:39:01.859 --> 00:39:03.920 align:start position:0%
at catch last year we actually use set
jump<00:39:02.130><c> and</c><00:39:02.279><c> long</c><00:39:02.460><c> jump</c><00:39:02.730><c> which</c><00:39:03.329><c> is</c><00:39:03.509><c> what</c><00:39:03.660><c> we</c><00:39:03.809><c> have</c>

00:39:03.920 --> 00:39:03.930 align:start position:0%
jump and long jump which is what we have
 

00:39:03.930 --> 00:39:06.349 align:start position:0%
jump and long jump which is what we have
been<00:39:04.140><c> using</c><00:39:04.410><c> in</c><00:39:04.650><c> cocoa</c><00:39:05.069><c> and</c><00:39:05.099><c> such</c><00:39:05.849><c> up</c><00:39:06.029><c> and</c><00:39:06.210><c> long</c>

00:39:06.349 --> 00:39:06.359 align:start position:0%
been using in cocoa and such up and long
 

00:39:06.359 --> 00:39:08.749 align:start position:0%
been using in cocoa and such up and long
jump<00:39:06.630><c> do</c><00:39:06.839><c> not</c><00:39:07.079><c> know</c><00:39:07.380><c> about</c><00:39:07.710><c> the</c><00:39:08.099><c> C++</c><00:39:08.700><c> runtime</c>

00:39:08.749 --> 00:39:08.759 align:start position:0%
jump do not know about the C++ runtime
 

00:39:08.759 --> 00:39:13.099 align:start position:0%
jump do not know about the C++ runtime
okay<00:39:09.750><c> so</c><00:39:10.289><c> in</c><00:39:10.650><c> fact</c><00:39:10.920><c> this</c><00:39:11.190><c> is</c><00:39:11.250><c> this</c><00:39:12.150><c> is</c><00:39:12.329><c> a</c><00:39:12.599><c> gotcha</c>

00:39:13.099 --> 00:39:13.109 align:start position:0%
okay so in fact this is this is a gotcha
 

00:39:13.109 --> 00:39:17.630 align:start position:0%
okay so in fact this is this is a gotcha
by<00:39:13.559><c> design</c><00:39:14.059><c> unfortunately</c><00:39:16.339><c> so</c><00:39:17.339><c> what's</c><00:39:17.519><c> the</c>

00:39:17.630 --> 00:39:17.640 align:start position:0%
by design unfortunately so what's the
 

00:39:17.640 --> 00:39:20.509 align:start position:0%
by design unfortunately so what's the
workaround<00:39:18.349><c> the</c><00:39:19.349><c> workaround</c><00:39:19.859><c> fortunately</c><00:39:20.369><c> is</c>

00:39:20.509 --> 00:39:20.519 align:start position:0%
workaround the workaround fortunately is
 

00:39:20.519 --> 00:39:23.749 align:start position:0%
workaround the workaround fortunately is
pretty<00:39:20.700><c> straightforward</c><00:39:21.109><c> my</c><00:39:22.109><c> clicker</c><00:39:22.759><c> OOP</c>

00:39:23.749 --> 00:39:23.759 align:start position:0%
pretty straightforward my clicker OOP
 

00:39:23.759 --> 00:39:24.589 align:start position:0%
pretty straightforward my clicker OOP
okay

00:39:24.589 --> 00:39:24.599 align:start position:0%
okay
 

00:39:24.599 --> 00:39:26.749 align:start position:0%
okay
the<00:39:25.289><c> workaround</c><00:39:25.740><c> is</c><00:39:25.890><c> fairly</c><00:39:26.069><c> simple</c><00:39:26.369><c> all</c><00:39:26.609><c> you</c>

00:39:26.749 --> 00:39:26.759 align:start position:0%
the workaround is fairly simple all you
 

00:39:26.759 --> 00:39:30.230 align:start position:0%
the workaround is fairly simple all you
do<00:39:26.910><c> is</c><00:39:27.119><c> call</c><00:39:27.779><c> the</c><00:39:28.819><c> quality</c><00:39:29.819><c> structure</c>

00:39:30.230 --> 00:39:30.240 align:start position:0%
do is call the quality structure
 

00:39:30.240 --> 00:39:33.079 align:start position:0%
do is call the quality structure
destructor<00:39:31.079><c> manually</c><00:39:31.619><c> not</c><00:39:32.579><c> the</c><00:39:32.730><c> prettiest</c>

00:39:33.079 --> 00:39:33.089 align:start position:0%
destructor manually not the prettiest
 

00:39:33.089 --> 00:39:35.569 align:start position:0%
destructor manually not the prettiest
thing<00:39:33.150><c> but</c><00:39:33.509><c> you</c><00:39:34.019><c> know</c><00:39:34.049><c> C++</c><00:39:34.650><c> allows</c><00:39:35.190><c> you</c><00:39:35.309><c> to</c><00:39:35.430><c> do</c>

00:39:35.569 --> 00:39:35.579 align:start position:0%
thing but you know C++ allows you to do
 

00:39:35.579 --> 00:39:37.549 align:start position:0%
thing but you know C++ allows you to do
that<00:39:35.759><c> and</c><00:39:35.970><c> it's</c><00:39:36.119><c> possible</c><00:39:36.630><c> again</c><00:39:37.289><c> hopefully</c>

00:39:37.549 --> 00:39:37.559 align:start position:0%
that and it's possible again hopefully
 

00:39:37.559 --> 00:39:39.680 align:start position:0%
that and it's possible again hopefully
you<00:39:38.130><c> won't</c><00:39:38.400><c> be</c><00:39:38.640><c> dealing</c><00:39:38.880><c> with</c><00:39:39.089><c> this</c><00:39:39.390><c> this</c><00:39:39.539><c> is</c>

00:39:39.680 --> 00:39:39.690 align:start position:0%
you won't be dealing with this this is
 

00:39:39.690 --> 00:39:41.509 align:start position:0%
you won't be dealing with this this is
more<00:39:39.930><c> a</c><00:39:39.990><c> matter</c><00:39:40.079><c> of</c><00:39:40.319><c> completeness</c><00:39:40.769><c> and</c><00:39:41.130><c> me</c>

00:39:41.509 --> 00:39:41.519 align:start position:0%
more a matter of completeness and me
 

00:39:41.519 --> 00:39:44.089 align:start position:0%
more a matter of completeness and me
being<00:39:41.789><c> entirely</c><00:39:42.150><c> upfront</c><00:39:42.450><c> on</c><00:39:42.990><c> on</c><00:39:43.349><c> some</c><00:39:43.890><c> of</c><00:39:44.009><c> the</c>

00:39:44.089 --> 00:39:44.099 align:start position:0%
being entirely upfront on on some of the
 

00:39:44.099 --> 00:39:46.490 align:start position:0%
being entirely upfront on on some of the
little<00:39:44.250><c> things</c><00:39:44.369><c> that</c><00:39:44.759><c> that</c><00:39:45.089><c> exists</c><00:39:45.630><c> again</c><00:39:46.470><c> I</c>

00:39:46.490 --> 00:39:46.500 align:start position:0%
little things that that exists again I
 

00:39:46.500 --> 00:39:47.960 align:start position:0%
little things that that exists again I
don't<00:39:46.650><c> think</c><00:39:46.829><c> this</c><00:39:47.160><c> really</c><00:39:47.400><c> will</c><00:39:47.549><c> affect</c><00:39:47.849><c> your</c>

00:39:47.960 --> 00:39:47.970 align:start position:0%
don't think this really will affect your
 

00:39:47.970 --> 00:39:48.750 align:start position:0%
don't think this really will affect your
debt

00:39:48.750 --> 00:39:48.760 align:start position:0%
debt
 

00:39:48.760 --> 00:39:52.820 align:start position:0%
debt
day<00:39:48.940><c> to</c><00:39:49.000><c> day</c><00:39:51.270><c> okay</c>

00:39:52.820 --> 00:39:52.830 align:start position:0%
day to day okay
 

00:39:52.830 --> 00:39:58.170 align:start position:0%
day to day okay
errors<00:39:53.830><c> and</c><00:39:53.980><c> warnings</c><00:39:56.580><c> this</c><00:39:57.580><c> is</c><00:39:57.760><c> this</c><00:39:57.970><c> is</c>

00:39:58.170 --> 00:39:58.180 align:start position:0%
errors and warnings this is this is
 

00:39:58.180 --> 00:40:01.230 align:start position:0%
errors and warnings this is this is
probably<00:39:59.110><c> the</c><00:39:59.320><c> biggest</c><00:39:59.470><c> gotcha</c><00:39:59.800><c> that</c><00:40:00.460><c> I</c><00:40:00.790><c> hear</c>

00:40:01.230 --> 00:40:01.240 align:start position:0%
probably the biggest gotcha that I hear
 

00:40:01.240 --> 00:40:04.790 align:start position:0%
probably the biggest gotcha that I hear
complaints<00:40:01.720><c> about</c><00:40:01.840><c> and</c><00:40:02.290><c> it's</c><00:40:02.890><c> because</c><00:40:03.370><c> in</c><00:40:03.610><c> C++</c>

00:40:04.790 --> 00:40:04.800 align:start position:0%
complaints about and it's because in C++
 

00:40:04.800 --> 00:40:07.830 align:start position:0%
complaints about and it's because in C++
value<00:40:05.800><c> objects</c><00:40:06.340><c> are</c><00:40:06.490><c> extremely</c><00:40:07.210><c> common</c><00:40:07.480><c> and</c>

00:40:07.830 --> 00:40:07.840 align:start position:0%
value objects are extremely common and
 

00:40:07.840 --> 00:40:11.460 align:start position:0%
value objects are extremely common and
if<00:40:08.530><c> you</c><00:40:08.680><c> want</c><00:40:08.950><c> to</c><00:40:09.040><c> have</c><00:40:09.220><c> a</c><00:40:09.250><c> value</c><00:40:09.730><c> object</c><00:40:10.320><c> or</c><00:40:11.320><c> an</c>

00:40:11.460 --> 00:40:11.470 align:start position:0%
if you want to have a value object or an
 

00:40:11.470 --> 00:40:13.080 align:start position:0%
if you want to have a value object or an
embedded<00:40:11.920><c> object</c><00:40:12.430><c> that's</c><00:40:12.580><c> part</c><00:40:12.880><c> of</c><00:40:12.970><c> an</c>

00:40:13.080 --> 00:40:13.090 align:start position:0%
embedded object that's part of an
 

00:40:13.090 --> 00:40:16.290 align:start position:0%
embedded object that's part of an
objective-c<00:40:13.540><c> object</c><00:40:14.260><c> you</c><00:40:14.890><c> get</c><00:40:15.130><c> some</c><00:40:16.120><c> really</c>

00:40:16.290 --> 00:40:16.300 align:start position:0%
objective-c object you get some really
 

00:40:16.300 --> 00:40:18.480 align:start position:0%
objective-c object you get some really
bad<00:40:16.510><c> errors</c><00:40:16.930><c> and</c><00:40:17.170><c> warnings</c><00:40:17.620><c> that</c><00:40:17.860><c> basically</c>

00:40:18.480 --> 00:40:18.490 align:start position:0%
bad errors and warnings that basically
 

00:40:18.490 --> 00:40:20.580 align:start position:0%
bad errors and warnings that basically
tell<00:40:18.760><c> you</c><00:40:18.880><c> crazy</c><00:40:19.150><c> things</c><00:40:19.510><c> like</c><00:40:19.630><c> the</c><00:40:20.200><c> V</c><00:40:20.380><c> tape</c>

00:40:20.580 --> 00:40:20.590 align:start position:0%
tell you crazy things like the V tape
 

00:40:20.590 --> 00:40:23.490 align:start position:0%
tell you crazy things like the V tape
the<00:40:21.430><c> V</c><00:40:21.580><c> table</c><00:40:21.970><c> has</c><00:40:22.150><c> virtual</c><00:40:22.690><c> member</c><00:40:22.990><c> functions</c>

00:40:23.490 --> 00:40:23.500 align:start position:0%
the V table has virtual member functions
 

00:40:23.500 --> 00:40:26.130 align:start position:0%
the V table has virtual member functions
and<00:40:24.070><c> all</c><00:40:24.370><c> kinds</c><00:40:24.700><c> of</c><00:40:24.760><c> crazy</c><00:40:25.000><c> stuff</c><00:40:25.120><c> that</c><00:40:25.660><c> it</c>

00:40:26.130 --> 00:40:26.140 align:start position:0%
and all kinds of crazy stuff that it
 

00:40:26.140 --> 00:40:28.020 align:start position:0%
and all kinds of crazy stuff that it
just<00:40:26.560><c> doesn't</c><00:40:26.860><c> make</c><00:40:26.950><c> sense</c><00:40:27.010><c> and</c><00:40:27.520><c> it's</c><00:40:27.670><c> because</c>

00:40:28.020 --> 00:40:28.030 align:start position:0%
just doesn't make sense and it's because
 

00:40:28.030 --> 00:40:30.870 align:start position:0%
just doesn't make sense and it's because
again<00:40:28.480><c> the</c><00:40:28.600><c> object</c><00:40:29.130><c> runtimes</c><00:40:30.130><c> the</c><00:40:30.340><c> two</c><00:40:30.490><c> object</c>

00:40:30.870 --> 00:40:30.880 align:start position:0%
again the object runtimes the two object
 

00:40:30.880 --> 00:40:35.280 align:start position:0%
again the object runtimes the two object
runtimes<00:40:32.040><c> don't</c><00:40:33.360><c> collaborate</c><00:40:34.360><c> when</c><00:40:35.050><c> dealing</c>

00:40:35.280 --> 00:40:35.290 align:start position:0%
runtimes don't collaborate when dealing
 

00:40:35.290 --> 00:40:37.290 align:start position:0%
runtimes don't collaborate when dealing
with<00:40:35.500><c> this</c><00:40:35.740><c> construct</c><00:40:36.310><c> mainly</c><00:40:36.670><c> because</c><00:40:36.820><c> at</c>

00:40:37.290 --> 00:40:37.300 align:start position:0%
with this construct mainly because at
 

00:40:37.300 --> 00:40:39.240 align:start position:0%
with this construct mainly because at
the<00:40:37.480><c> time</c><00:40:37.660><c> we</c><00:40:37.840><c> couldn't</c><00:40:38.050><c> figure</c><00:40:38.260><c> out</c><00:40:38.440><c> how</c><00:40:39.190><c> do</c>

00:40:39.240 --> 00:40:39.250 align:start position:0%
the time we couldn't figure out how do
 

00:40:39.250 --> 00:40:41.910 align:start position:0%
the time we couldn't figure out how do
we<00:40:39.400><c> maintain</c><00:40:40.120><c> the</c><00:40:40.330><c> design</c><00:40:40.690><c> point</c><00:40:40.990><c> of</c><00:40:41.140><c> keeping</c>

00:40:41.910 --> 00:40:41.920 align:start position:0%
we maintain the design point of keeping
 

00:40:41.920 --> 00:40:44.370 align:start position:0%
we maintain the design point of keeping
the<00:40:42.130><c> runtimes</c><00:40:43.000><c> distinct</c><00:40:43.630><c> and</c><00:40:43.750><c> solve</c><00:40:44.230><c> this</c>

00:40:44.370 --> 00:40:44.380 align:start position:0%
the runtimes distinct and solve this
 

00:40:44.380 --> 00:40:46.980 align:start position:0%
the runtimes distinct and solve this
problem<00:40:44.470><c> we</c><00:40:45.370><c> had</c><00:40:45.490><c> incorrectly</c><00:40:46.150><c> assumed</c><00:40:46.600><c> that</c>

00:40:46.980 --> 00:40:46.990 align:start position:0%
problem we had incorrectly assumed that
 

00:40:46.990 --> 00:40:50.430 align:start position:0%
problem we had incorrectly assumed that
it<00:40:47.410><c> was</c><00:40:47.560><c> impossible</c><00:40:48.810><c> fortunately</c><00:40:49.810><c> we</c><00:40:49.930><c> figured</c>

00:40:50.430 --> 00:40:50.440 align:start position:0%
it was impossible fortunately we figured
 

00:40:50.440 --> 00:40:53.370 align:start position:0%
it was impossible fortunately we figured
out<00:40:50.590><c> how</c><00:40:50.920><c> to</c><00:40:50.980><c> do</c><00:40:51.190><c> it</c><00:40:51.400><c> and</c><00:40:52.050><c> we'll</c><00:40:53.050><c> be</c><00:40:53.170><c> providing</c>

00:40:53.370 --> 00:40:53.380 align:start position:0%
out how to do it and we'll be providing
 

00:40:53.380 --> 00:40:57.960 align:start position:0%
out how to do it and we'll be providing
it<00:40:53.830><c> in</c><00:40:53.980><c> a</c><00:40:54.100><c> future</c><00:40:54.400><c> release</c><00:40:55.260><c> for</c><00:40:56.260><c> now</c><00:40:56.970><c> there's</c>

00:40:57.960 --> 00:40:57.970 align:start position:0%
it in a future release for now there's
 

00:40:57.970 --> 00:41:01.860 align:start position:0%
it in a future release for now there's
there's<00:40:58.240><c> a</c><00:40:58.360><c> workaround</c><00:40:59.700><c> right</c><00:41:00.700><c> now</c><00:41:00.940><c> if</c><00:41:01.690><c> you</c>

00:41:01.860 --> 00:41:01.870 align:start position:0%
there's a workaround right now if you
 

00:41:01.870 --> 00:41:03.450 align:start position:0%
there's a workaround right now if you
declare<00:41:02.230><c> them</c><00:41:02.470><c> reference</c><00:41:03.100><c> and</c><00:41:03.340><c> you</c>

00:41:03.450 --> 00:41:03.460 align:start position:0%
declare them reference and you
 

00:41:03.460 --> 00:41:06.600 align:start position:0%
declare them reference and you
instantiate<00:41:03.790><c> them</c><00:41:04.240><c> directly</c><00:41:04.660><c> it's</c><00:41:05.530><c> it</c><00:41:06.370><c> won't</c>

00:41:06.600 --> 00:41:06.610 align:start position:0%
instantiate them directly it's it won't
 

00:41:06.610 --> 00:41:10.440 align:start position:0%
instantiate them directly it's it won't
cause<00:41:06.760><c> you</c><00:41:06.940><c> any</c><00:41:06.970><c> grief</c><00:41:08.520><c> again</c><00:41:09.520><c> because</c><00:41:09.940><c> new</c>

00:41:10.440 --> 00:41:10.450 align:start position:0%
cause you any grief again because new
 

00:41:10.450 --> 00:41:14.850 align:start position:0%
cause you any grief again because new
will<00:41:11.080><c> do</c><00:41:11.230><c> the</c><00:41:11.350><c> correct</c><00:41:11.650><c> thing</c><00:41:11.710><c> and</c><00:41:13.320><c> as</c><00:41:14.320><c> I</c><00:41:14.800><c> said</c>

00:41:14.850 --> 00:41:14.860 align:start position:0%
will do the correct thing and as I said
 

00:41:14.860 --> 00:41:17.460 align:start position:0%
will do the correct thing and as I said
this<00:41:15.220><c> limitation</c><00:41:15.670><c> is</c><00:41:16.060><c> is</c><00:41:16.870><c> going</c><00:41:17.260><c> to</c><00:41:17.350><c> be</c>

00:41:17.460 --> 00:41:17.470 align:start position:0%
this limitation is is going to be
 

00:41:17.470 --> 00:41:19.950 align:start position:0%
this limitation is is going to be
removed<00:41:17.860><c> and</c><00:41:18.100><c> it'll</c><00:41:18.460><c> just</c><00:41:18.730><c> work</c><00:41:18.910><c> as</c><00:41:19.150><c> as</c>

00:41:19.950 --> 00:41:19.960 align:start position:0%
removed and it'll just work as as
 

00:41:19.960 --> 00:41:23.790 align:start position:0%
removed and it'll just work as as
expected<00:41:20.710><c> so</c><00:41:21.420><c> there</c><00:41:22.420><c> are</c><00:41:22.540><c> several</c><00:41:22.800><c> several</c>

00:41:23.790 --> 00:41:23.800 align:start position:0%
expected so there are several several
 

00:41:23.800 --> 00:41:25.230 align:start position:0%
expected so there are several several
people<00:41:24.100><c> anxiously</c><00:41:24.430><c> waiting</c><00:41:24.820><c> for</c><00:41:25.000><c> that</c><00:41:25.090><c> for</c>

00:41:25.230 --> 00:41:25.240 align:start position:0%
people anxiously waiting for that for
 

00:41:25.240 --> 00:41:27.000 align:start position:0%
people anxiously waiting for that for
this<00:41:25.330><c> one</c><00:41:25.540><c> I</c><00:41:25.570><c> know</c><00:41:25.720><c> and</c><00:41:25.990><c> hopefully</c><00:41:26.800><c> I'll</c><00:41:26.980><c> make</c>

00:41:27.000 --> 00:41:27.010 align:start position:0%
this one I know and hopefully I'll make
 

00:41:27.010 --> 00:41:32.580 align:start position:0%
this one I know and hopefully I'll make
their<00:41:27.370><c> lives</c><00:41:27.580><c> easier</c><00:41:30.090><c> so</c><00:41:31.090><c> I</c><00:41:31.450><c> don't</c><00:41:32.260><c> know</c><00:41:32.350><c> if</c><00:41:32.470><c> I</c>

00:41:32.580 --> 00:41:32.590 align:start position:0%
their lives easier so I don't know if I
 

00:41:32.590 --> 00:41:35.300 align:start position:0%
their lives easier so I don't know if I
went<00:41:33.310><c> too</c><00:41:33.430><c> fast</c><00:41:33.700><c> here</c><00:41:34.150><c> we're</c><00:41:34.600><c> going</c><00:41:34.810><c> to</c>

00:41:35.300 --> 00:41:35.310 align:start position:0%
went too fast here we're going to
 

00:41:35.310 --> 00:41:38.340 align:start position:0%
went too fast here we're going to
fortunately<00:41:36.310><c> have</c><00:41:36.460><c> some</c><00:41:36.790><c> some</c><00:41:37.180><c> nice</c><00:41:37.390><c> about</c><00:41:37.930><c> 20</c>

00:41:38.340 --> 00:41:38.350 align:start position:0%
fortunately have some some nice about 20
 

00:41:38.350 --> 00:41:42.120 align:start position:0%
fortunately have some some nice about 20
25<00:41:38.710><c> minutes</c><00:41:38.860><c> left</c><00:41:39.730><c> for</c><00:41:40.270><c> QA</c><00:41:40.870><c> which</c><00:41:41.260><c> I</c><00:41:41.530><c> really</c>

00:41:42.120 --> 00:41:42.130 align:start position:0%
25 minutes left for QA which I really
 

00:41:42.130 --> 00:41:43.890 align:start position:0%
25 minutes left for QA which I really
value<00:41:42.520><c> and</c><00:41:42.760><c> given</c><00:41:42.970><c> the</c><00:41:43.090><c> number</c><00:41:43.420><c> of</c><00:41:43.600><c> people</c>

00:41:43.890 --> 00:41:43.900 align:start position:0%
value and given the number of people
 

00:41:43.900 --> 00:41:45.150 align:start position:0%
value and given the number of people
here<00:41:44.110><c> I'm</c><00:41:44.230><c> sure</c><00:41:44.410><c> there's</c><00:41:44.890><c> plenty</c><00:41:44.980><c> of</c>

00:41:45.150 --> 00:41:45.160 align:start position:0%
here I'm sure there's plenty of
 

00:41:45.160 --> 00:41:47.850 align:start position:0%
here I'm sure there's plenty of
questions<00:41:45.610><c> to</c><00:41:45.760><c> ask</c><00:41:45.910><c> about</c><00:41:46.150><c> this</c><00:41:46.570><c> but</c><00:41:46.780><c> here</c><00:41:47.650><c> on</c>

00:41:47.850 --> 00:41:47.860 align:start position:0%
questions to ask about this but here on
 

00:41:47.860 --> 00:41:51.750 align:start position:0%
questions to ask about this but here on
are<00:41:48.340><c> some</c><00:41:48.550><c> take-home</c><00:41:48.910><c> points</c><00:41:49.240><c> I</c><00:41:50.040><c> think</c><00:41:51.040><c> it's</c>

00:41:51.750 --> 00:41:51.760 align:start position:0%
are some take-home points I think it's
 

00:41:51.760 --> 00:41:53.550 align:start position:0%
are some take-home points I think it's
fairly<00:41:52.030><c> clear</c><00:41:52.180><c> that</c><00:41:52.660><c> doing</c><00:41:52.960><c> this</c><00:41:53.080><c> stuff</c><00:41:53.380><c> is</c>

00:41:53.550 --> 00:41:53.560 align:start position:0%
fairly clear that doing this stuff is
 

00:41:53.560 --> 00:41:55.230 align:start position:0%
fairly clear that doing this stuff is
fairly<00:41:53.740><c> straightforward</c><00:41:54.160><c> the</c><00:41:54.820><c> learning</c>

00:41:55.230 --> 00:41:55.240 align:start position:0%
fairly straightforward the learning
 

00:41:55.240 --> 00:41:57.420 align:start position:0%
fairly straightforward the learning
curve<00:41:55.420><c> if</c><00:41:55.600><c> you're</c><00:41:55.750><c> already</c><00:41:55.960><c> a</c><00:41:56.260><c> C++</c><00:41:56.920><c> programmer</c>

00:41:57.420 --> 00:41:57.430 align:start position:0%
curve if you're already a C++ programmer
 

00:41:57.430 --> 00:42:01.950 align:start position:0%
curve if you're already a C++ programmer
is<00:41:57.700><c> very</c><00:41:58.300><c> low</c><00:41:59.640><c> now</c><00:42:00.640><c> if</c><00:42:00.910><c> you're</c><00:42:01.060><c> not</c><00:42:01.210><c> a</c><00:42:01.270><c> C++</c>

00:42:01.950 --> 00:42:01.960 align:start position:0%
is very low now if you're not a C++
 

00:42:01.960 --> 00:42:02.700 align:start position:0%
is very low now if you're not a C++
program

00:42:02.700 --> 00:42:02.710 align:start position:0%
program
 

00:42:02.710 --> 00:42:04.470 align:start position:0%
program
and<00:42:02.980><c> you're</c><00:42:03.160><c> not</c><00:42:03.280><c> an</c><00:42:03.430><c> objective-c</c><00:42:03.880><c> programmer</c>

00:42:04.470 --> 00:42:04.480 align:start position:0%
and you're not an objective-c programmer
 

00:42:04.480 --> 00:42:07.080 align:start position:0%
and you're not an objective-c programmer
this<00:42:05.230><c> isn't</c><00:42:05.590><c> the</c><00:42:05.650><c> language</c><00:42:06.040><c> for</c><00:42:06.220><c> you</c><00:42:06.370><c> right</c>

00:42:07.080 --> 00:42:07.090 align:start position:0%
this isn't the language for you right
 

00:42:07.090 --> 00:42:18.080 align:start position:0%
this isn't the language for you right
this<00:42:07.630><c> is</c><00:42:07.810><c> this</c><00:42:09.120><c> you</c><00:42:10.120><c> know</c><00:42:10.530><c> yeah</c>

00:42:18.080 --> 00:42:18.090 align:start position:0%
 
 

00:42:18.090 --> 00:42:24.210 align:start position:0%
 
Apple<00:42:19.090><c> is</c><00:42:19.240><c> using</c><00:42:19.660><c> this</c><00:42:19.780><c> extensively</c><00:42:23.220><c> in</c>

00:42:24.210 --> 00:42:24.220 align:start position:0%
Apple is using this extensively in
 

00:42:24.220 --> 00:42:25.860 align:start position:0%
Apple is using this extensively in
almost<00:42:24.520><c> every</c><00:42:24.880><c> part</c><00:42:25.060><c> of</c><00:42:25.210><c> the</c><00:42:25.270><c> company</c><00:42:25.690><c> whether</c>

00:42:25.860 --> 00:42:25.870 align:start position:0%
almost every part of the company whether
 

00:42:25.870 --> 00:42:30.480 align:start position:0%
almost every part of the company whether
it<00:42:26.020><c> be</c><00:42:26.110><c> RI</c><00:42:26.260><c> apps</c><00:42:26.740><c> pro</c><00:42:27.130><c> apps</c><00:42:27.400><c> i</c><00:42:27.670><c> chat</c><00:42:28.150><c> safari</c><00:42:29.490><c> and</c>

00:42:30.480 --> 00:42:30.490 align:start position:0%
it be RI apps pro apps i chat safari and
 

00:42:30.490 --> 00:42:33.270 align:start position:0%
it be RI apps pro apps i chat safari and
many<00:42:31.150><c> third-party</c><00:42:31.750><c> apps</c><00:42:31.930><c> i've</c><00:42:32.170><c> seen</c><00:42:32.440><c> and</c><00:42:32.800><c> many</c>

00:42:33.270 --> 00:42:33.280 align:start position:0%
many third-party apps i've seen and many
 

00:42:33.280 --> 00:42:36.750 align:start position:0%
many third-party apps i've seen and many
that<00:42:34.350><c> that</c><00:42:35.350><c> aren't</c><00:42:35.590><c> public</c><00:42:35.980><c> they're</c><00:42:36.400><c> using</c>

00:42:36.750 --> 00:42:36.760 align:start position:0%
that that aren't public they're using
 

00:42:36.760 --> 00:42:39.510 align:start position:0%
that that aren't public they're using
this<00:42:36.850><c> extensively</c><00:42:37.510><c> and</c><00:42:37.840><c> it</c><00:42:38.710><c> it's</c><00:42:39.160><c> proven</c>

00:42:39.510 --> 00:42:39.520 align:start position:0%
this extensively and it it's proven
 

00:42:39.520 --> 00:42:41.700 align:start position:0%
this extensively and it it's proven
itself<00:42:39.820><c> so</c><00:42:40.300><c> I</c><00:42:40.360><c> feel</c><00:42:40.810><c> really</c><00:42:41.110><c> confident</c><00:42:41.560><c> in</c>

00:42:41.700 --> 00:42:41.710 align:start position:0%
itself so I feel really confident in
 

00:42:41.710 --> 00:42:44.580 align:start position:0%
itself so I feel really confident in
advising<00:42:42.400><c> you</c><00:42:42.730><c> guys</c><00:42:42.910><c> to</c><00:42:43.180><c> use</c><00:42:43.390><c> this</c><00:42:43.630><c> because</c><00:42:44.260><c> I</c>

00:42:44.580 --> 00:42:44.590 align:start position:0%
advising you guys to use this because I
 

00:42:44.590 --> 00:42:46.950 align:start position:0%
advising you guys to use this because I
think<00:42:44.650><c> it's</c><00:42:44.920><c> going</c><00:42:45.040><c> to</c><00:42:45.100><c> save</c><00:42:45.340><c> you</c><00:42:45.490><c> time</c><00:42:45.810><c> and</c><00:42:46.810><c> I</c>

00:42:46.950 --> 00:42:46.960 align:start position:0%
think it's going to save you time and I
 

00:42:46.960 --> 00:42:50.760 align:start position:0%
think it's going to save you time and I
think<00:42:47.020><c> it's</c><00:42:47.860><c> also</c><00:42:48.130><c> going</c><00:42:48.610><c> to</c><00:42:48.730><c> expose</c><00:42:49.770><c> people</c>

00:42:50.760 --> 00:42:50.770 align:start position:0%
think it's also going to expose people
 

00:42:50.770 --> 00:42:53.370 align:start position:0%
think it's also going to expose people
from<00:42:51.190><c> the</c><00:42:51.310><c> C++</c><00:42:51.880><c> language</c><00:42:51.910><c> culture</c><00:42:52.810><c> to</c><00:42:53.200><c> new</c>

00:42:53.370 --> 00:42:53.380 align:start position:0%
from the C++ language culture to new
 

00:42:53.380 --> 00:42:55.650 align:start position:0%
from the C++ language culture to new
metaphors<00:42:53.950><c> new</c><00:42:54.190><c> ways</c><00:42:54.400><c> of</c><00:42:54.640><c> building</c><00:42:55.420><c> systems</c>

00:42:55.650 --> 00:42:55.660 align:start position:0%
metaphors new ways of building systems
 

00:42:55.660 --> 00:43:02.000 align:start position:0%
metaphors new ways of building systems
that<00:42:56.110><c> I</c><00:42:56.380><c> think</c><00:42:56.650><c> will</c><00:42:56.770><c> also</c><00:42:56.890><c> benefit</c><00:42:57.490><c> you</c><00:42:58.590><c> and</c><00:42:59.910><c> I</c>

00:43:02.000 --> 00:43:02.010 align:start position:0%
that I think will also benefit you and I
 

00:43:02.010 --> 00:43:04.670 align:start position:0%
that I think will also benefit you and I
think<00:43:03.010><c> both</c><00:43:03.310><c> languages</c><00:43:03.820><c> compliment</c><00:43:04.360><c> one</c><00:43:04.480><c> each</c>

00:43:04.670 --> 00:43:04.680 align:start position:0%
think both languages compliment one each
 

00:43:04.680 --> 00:43:10.020 align:start position:0%
think both languages compliment one each
each<00:43:05.680><c> other</c><00:43:05.950><c> I</c><00:43:06.220><c> am</c><00:43:07.200><c> I'm</c><00:43:08.200><c> constantly</c><00:43:09.130><c> amazed</c><00:43:09.610><c> at</c>

00:43:10.020 --> 00:43:10.030 align:start position:0%
each other I am I'm constantly amazed at
 

00:43:10.030 --> 00:43:11.700 align:start position:0%
each other I am I'm constantly amazed at
how<00:43:10.660><c> they</c><00:43:10.810><c> really</c><00:43:11.110><c> don't</c><00:43:11.260><c> get</c><00:43:11.470><c> in</c><00:43:11.620><c> each</c>

00:43:11.700 --> 00:43:11.710 align:start position:0%
how they really don't get in each
 

00:43:11.710 --> 00:43:13.590 align:start position:0%
how they really don't get in each
other's<00:43:11.950><c> way</c><00:43:12.130><c> this</c><00:43:12.790><c> wasn't</c><00:43:13.090><c> clear</c><00:43:13.300><c> when</c><00:43:13.480><c> we</c>

00:43:13.590 --> 00:43:13.600 align:start position:0%
other's way this wasn't clear when we
 

00:43:13.600 --> 00:43:15.920 align:start position:0%
other's way this wasn't clear when we
did<00:43:13.750><c> it</c><00:43:13.870><c> many</c><00:43:14.080><c> many</c><00:43:14.260><c> years</c><00:43:14.590><c> ago</c><00:43:14.860><c> and</c><00:43:15.100><c> in</c><00:43:15.520><c> fact</c>

00:43:15.920 --> 00:43:15.930 align:start position:0%
did it many many years ago and in fact
 

00:43:15.930 --> 00:43:18.470 align:start position:0%
did it many many years ago and in fact
you<00:43:16.930><c> know</c><00:43:17.020><c> we</c><00:43:17.350><c> were</c><00:43:17.500><c> concerned</c><00:43:17.920><c> about</c>

00:43:18.470 --> 00:43:18.480 align:start position:0%
you know we were concerned about
 

00:43:18.480 --> 00:43:22.740 align:start position:0%
you know we were concerned about
creating<00:43:19.480><c> a</c><00:43:19.540><c> monster</c><00:43:19.780><c> and</c><00:43:21.360><c> and</c><00:43:22.360><c> I</c><00:43:22.390><c> don't</c><00:43:22.570><c> think</c>

00:43:22.740 --> 00:43:22.750 align:start position:0%
creating a monster and and I don't think
 

00:43:22.750 --> 00:43:24.150 align:start position:0%
creating a monster and and I don't think
we've<00:43:22.870><c> done</c><00:43:22.900><c> so</c><00:43:23.230><c> I</c><00:43:23.260><c> think</c><00:43:23.530><c> this</c><00:43:23.650><c> is</c><00:43:23.770><c> a</c><00:43:23.800><c> very</c>

00:43:24.150 --> 00:43:24.160 align:start position:0%
we've done so I think this is a very
 

00:43:24.160 --> 00:43:28.020 align:start position:0%
we've done so I think this is a very
expressive<00:43:24.730><c> tool</c><00:43:25.090><c> and</c><00:43:25.420><c> I</c><00:43:25.810><c> think</c><00:43:25.840><c> if</c><00:43:26.440><c> if</c><00:43:27.160><c> C++</c>

00:43:28.020 --> 00:43:28.030 align:start position:0%
expressive tool and I think if if C++
 

00:43:28.030 --> 00:43:30.450 align:start position:0%
expressive tool and I think if if C++
would<00:43:28.300><c> have</c><00:43:28.420><c> become</c><00:43:28.810><c> the</c><00:43:29.020><c> next</c><00:43:29.320><c> C</c><00:43:29.590><c> which</c><00:43:30.280><c> is</c>

00:43:30.450 --> 00:43:30.460 align:start position:0%
would have become the next C which is
 

00:43:30.460 --> 00:43:31.560 align:start position:0%
would have become the next C which is
what<00:43:30.640><c> I</c><00:43:30.880><c> thought</c>

00:43:31.560 --> 00:43:31.570 align:start position:0%
what I thought
 

00:43:31.570 --> 00:43:34.350 align:start position:0%
what I thought
15<00:43:31.900><c> years</c><00:43:32.140><c> ago</c><00:43:32.200><c> when</c><00:43:32.980><c> C++</c><00:43:33.700><c> was</c><00:43:33.940><c> being</c>

00:43:34.350 --> 00:43:34.360 align:start position:0%
15 years ago when C++ was being
 

00:43:34.360 --> 00:43:37.110 align:start position:0%
15 years ago when C++ was being
developed<00:43:34.630><c> I</c><00:43:34.960><c> was</c><00:43:35.140><c> fairly</c><00:43:35.800><c> convinced</c><00:43:36.550><c> that</c><00:43:36.730><c> it</c>

00:43:37.110 --> 00:43:37.120 align:start position:0%
developed I was fairly convinced that it
 

00:43:37.120 --> 00:43:39.540 align:start position:0%
developed I was fairly convinced that it
was<00:43:37.420><c> going</c><00:43:37.660><c> to</c><00:43:37.720><c> be</c><00:43:37.900><c> the</c><00:43:38.470><c> next</c><00:43:38.710><c> iteration</c><00:43:39.070><c> of</c><00:43:39.340><c> C</c>

00:43:39.540 --> 00:43:39.550 align:start position:0%
was going to be the next iteration of C
 

00:43:39.550 --> 00:43:41.970 align:start position:0%
was going to be the next iteration of C
then<00:43:40.150><c> this</c><00:43:40.360><c> would</c><00:43:40.540><c> seem</c><00:43:40.720><c> even</c><00:43:41.080><c> more</c><00:43:41.110><c> natural</c><00:43:41.800><c> I</c>

00:43:41.970 --> 00:43:41.980 align:start position:0%
then this would seem even more natural I
 

00:43:41.980 --> 00:43:46.950 align:start position:0%
then this would seem even more natural I
think<00:43:42.250><c> the</c><00:43:42.520><c> only</c><00:43:42.700><c> reason</c><00:43:43.120><c> that</c><00:43:44.100><c> it</c><00:43:45.100><c> even</c><00:43:45.960><c> seems</c>

00:43:46.950 --> 00:43:46.960 align:start position:0%
think the only reason that it even seems
 

00:43:46.960 --> 00:43:49.500 align:start position:0%
think the only reason that it even seems
to<00:43:47.800><c> be</c><00:43:47.920><c> a</c><00:43:47.950><c> little</c><00:43:48.250><c> controversial</c><00:43:48.820><c> is</c><00:43:49.180><c> because</c>

00:43:49.500 --> 00:43:49.510 align:start position:0%
to be a little controversial is because
 

00:43:49.510 --> 00:43:53.130 align:start position:0%
to be a little controversial is because
C++<00:43:50.050><c> didn't</c><00:43:50.350><c> become</c><00:43:51.510><c> formally</c><00:43:52.510><c> the</c><00:43:52.720><c> next</c><00:43:52.990><c> C</c>

00:43:53.130 --> 00:43:53.140 align:start position:0%
C++ didn't become formally the next C
 

00:43:53.140 --> 00:43:56.040 align:start position:0%
C++ didn't become formally the next C
even<00:43:53.350><c> though</c><00:43:53.470><c> it's</c><00:43:53.740><c> the</c><00:43:53.860><c> de-facto</c><00:43:55.050><c> next</c>

00:43:56.040 --> 00:43:56.050 align:start position:0%
even though it's the de-facto next
 

00:43:56.050 --> 00:43:57.450 align:start position:0%
even though it's the de-facto next
iteration<00:43:56.470><c> of</c><00:43:56.530><c> C</c><00:43:56.740><c> and</c><00:43:56.890><c> I</c><00:43:56.950><c> find</c><00:43:57.190><c> most</c><00:43:57.310><c> people</c>

00:43:57.450 --> 00:43:57.460 align:start position:0%
iteration of C and I find most people
 

00:43:57.460 --> 00:44:00.030 align:start position:0%
iteration of C and I find most people
doing<00:43:58.240><c> serious</c><00:43:58.660><c> application</c><00:43:59.590><c> development</c>

00:44:00.030 --> 00:44:00.040 align:start position:0%
doing serious application development
 

00:44:00.040 --> 00:44:04.050 align:start position:0%
doing serious application development
are<00:44:00.420><c> using</c><00:44:01.420><c> it</c><00:44:01.510><c> in</c><00:44:01.630><c> some</c><00:44:01.900><c> way</c><00:44:03.060><c> so</c>

00:44:04.050 --> 00:44:04.060 align:start position:0%
are using it in some way so
 

00:44:04.060 --> 00:44:08.340 align:start position:0%
are using it in some way so
documentation

00:44:08.340 --> 00:44:08.350 align:start position:0%
 
 

00:44:08.350 --> 00:44:12.990 align:start position:0%
 
and<00:44:09.900><c> Matt</c><00:44:10.900><c> Formica</c><00:44:11.470><c> he's</c><00:44:12.430><c> our</c><00:44:12.670><c> tools</c>

00:44:12.990 --> 00:44:13.000 align:start position:0%
and Matt Formica he's our tools
 

00:44:13.000 --> 00:44:15.570 align:start position:0%
and Matt Formica he's our tools
evangelist

