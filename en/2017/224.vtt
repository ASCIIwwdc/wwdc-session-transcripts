WEBVTT

00:00:20.416 --> 00:00:20.906 A:middle
&gt;&gt; Good morning.

00:00:21.516 --> 00:00:24.636 A:middle
[ Applause ]

00:00:25.136 --> 00:00:27.036 A:middle
Welcome to Focus Interaction in

00:00:27.036 --> 00:00:27.876 A:middle
tvOS 11.

00:00:28.826 --> 00:00:30.086 A:middle
My name is Matt, I'm a software

00:00:30.086 --> 00:00:31.736 A:middle
engineer working on UIKit and

00:00:31.736 --> 00:00:33.146 A:middle
I'll be joined later today by my

00:00:33.146 --> 00:00:33.976 A:middle
colleague Jon.

00:00:33.976 --> 00:00:37.016 A:middle
We have a lot to cover today, so

00:00:37.236 --> 00:00:37.916 A:middle
let's get started.

00:00:38.936 --> 00:00:41.126 A:middle
First, we're going to showcase

00:00:41.126 --> 00:00:42.326 A:middle
some of the new features and

00:00:42.326 --> 00:00:44.026 A:middle
enhancements that we've made for

00:00:44.026 --> 00:00:45.636 A:middle
Focus Interaction support in

00:00:45.636 --> 00:00:46.386 A:middle
tvOS 11.

00:00:47.666 --> 00:00:49.056 A:middle
These cover a number of requests

00:00:49.056 --> 00:00:50.156 A:middle
that we've received from you

00:00:50.156 --> 00:00:51.066 A:middle
over the past year.

00:00:52.886 --> 00:00:54.996 A:middle
Next, Focus Interaction support

00:00:55.496 --> 00:00:57.616 A:middle
is now in SceneKit and so we're

00:00:57.616 --> 00:00:58.666 A:middle
going to cover everything that

00:00:58.666 --> 00:01:00.226 A:middle
you need to know in order to get

00:01:00.226 --> 00:01:00.596 A:middle
started.

00:01:02.056 --> 00:01:03.676 A:middle
And finally, we've built some

00:01:03.676 --> 00:01:05.966 A:middle
great new focus debugging tools

00:01:05.966 --> 00:01:07.556 A:middle
in tvOS 11 for helping you

00:01:07.556 --> 00:01:09.966 A:middle
diagnose focus related issues in

00:01:09.966 --> 00:01:10.866 A:middle
your app.

00:01:11.316 --> 00:01:12.266 A:middle
We think these new tools are

00:01:12.266 --> 00:01:14.686 A:middle
going to save you a ton of time.

00:01:15.566 --> 00:01:16.976 A:middle
But before we start it's

00:01:16.976 --> 00:01:18.416 A:middle
important that we review some of

00:01:18.416 --> 00:01:19.986 A:middle
the basics of how the Focus API

00:01:20.096 --> 00:01:21.716 A:middle
works into tvOS 11.

00:01:22.156 --> 00:01:23.376 A:middle
This information is going to be

00:01:23.376 --> 00:01:24.786 A:middle
important throughout our session

00:01:25.676 --> 00:01:25.906 A:middle
today.

00:01:26.276 --> 00:01:27.356 A:middle
From the perspective of the

00:01:27.356 --> 00:01:28.926 A:middle
focus engine your app is app is

00:01:28.926 --> 00:01:31.396 A:middle
made up of focus items and focus

00:01:31.536 --> 00:01:32.256 A:middle
environments.

00:01:33.716 --> 00:01:35.646 A:middle
Focus items are the user

00:01:35.646 --> 00:01:37.006 A:middle
interface elements that are

00:01:37.096 --> 00:01:38.606 A:middle
capable of becoming focused.

00:01:39.386 --> 00:01:41.186 A:middle
They conform to the UIFocusItem

00:01:41.186 --> 00:01:42.036 A:middle
item protocol.

00:01:42.456 --> 00:01:45.496 A:middle
Examples of focus items include

00:01:45.496 --> 00:01:48.976 A:middle
UIViews in UIKit and nodes in

00:01:50.416 --> 00:01:50.856 A:middle
SpriteKit.

00:01:51.166 --> 00:01:53.106 A:middle
Focus environments conform to

00:01:53.106 --> 00:01:54.976 A:middle
the UIFocusEnvironment protocol.

00:01:56.206 --> 00:01:57.426 A:middle
Environments are allowed to

00:01:57.476 --> 00:01:59.196 A:middle
influence the focus behavior in

00:01:59.196 --> 00:02:00.856 A:middle
your application and they also

00:02:00.856 --> 00:02:02.096 A:middle
get notified about focus

00:02:02.096 --> 00:02:02.686 A:middle
updates.

00:02:03.496 --> 00:02:05.496 A:middle
All focus items are also focus

00:02:05.496 --> 00:02:07.446 A:middle
environments, but these also

00:02:07.446 --> 00:02:08.866 A:middle
cover other objects like view

00:02:08.866 --> 00:02:09.446 A:middle
controllers.

00:02:11.096 --> 00:02:13.536 A:middle
Focus items and focus

00:02:13.536 --> 00:02:15.026 A:middle
environments are arranged in a

00:02:15.026 --> 00:02:15.566 A:middle
hierarchy.

00:02:16.196 --> 00:02:17.836 A:middle
In UIKit this hierarchy loosely

00:02:17.836 --> 00:02:19.276 A:middle
follows the view and view

00:02:19.276 --> 00:02:20.846 A:middle
controller hierarchies and in

00:02:20.846 --> 00:02:22.376 A:middle
SpriteKit it follows the node

00:02:22.376 --> 00:02:22.786 A:middle
hierarchy.

00:02:23.596 --> 00:02:25.426 A:middle
This hierarchy is important when

00:02:25.426 --> 00:02:26.516 A:middle
it comes to getting notified

00:02:26.606 --> 00:02:27.656 A:middle
about focus updates.

00:02:28.246 --> 00:02:31.206 A:middle
A focus update can happen in one

00:02:31.206 --> 00:02:31.736 A:middle
of two ways.

00:02:32.596 --> 00:02:34.896 A:middle
First, a user can move focus

00:02:34.896 --> 00:02:36.176 A:middle
geometrically, such as by

00:02:36.176 --> 00:02:38.466 A:middle
swiping on the Siri remote or

00:02:38.466 --> 00:02:39.566 A:middle
your app can trigger a

00:02:39.566 --> 00:02:41.176 A:middle
programmatic focus update, such

00:02:41.176 --> 00:02:42.736 A:middle
as by calling APIs like

00:02:42.786 --> 00:02:43.886 A:middle
setNeedsFocusUpdate.

00:02:44.466 --> 00:02:48.376 A:middle
When a focus update happens, we

00:02:48.376 --> 00:02:50.336 A:middle
notify every focus environment

00:02:50.336 --> 00:02:51.976 A:middle
that contains both the

00:02:52.016 --> 00:02:54.016 A:middle
previously focused item and the

00:02:54.016 --> 00:02:54.936 A:middle
next focused item.

00:02:55.366 --> 00:02:56.816 A:middle
And this includes all common

00:02:56.816 --> 00:02:58.346 A:middle
ancestor environments as well.

00:03:00.856 --> 00:03:02.116 A:middle
We notify environments in

00:03:02.176 --> 00:03:04.516 A:middle
ascending order starting with

00:03:04.516 --> 00:03:06.156 A:middle
the two items that are directly

00:03:06.156 --> 00:03:07.066 A:middle
involved in the update.

00:03:08.346 --> 00:03:09.566 A:middle
Notifications are sent by

00:03:09.566 --> 00:03:11.166 A:middle
calling the didUpdateFocus

00:03:11.166 --> 00:03:12.706 A:middle
method, which is defined on the

00:03:12.706 --> 00:03:14.296 A:middle
UIFocusEnvironment protocol.

00:03:14.856 --> 00:03:17.266 A:middle
And this leads us straight into

00:03:17.266 --> 00:03:19.106 A:middle
our first topic of today, which

00:03:19.106 --> 00:03:20.156 A:middle
is that in tvOS 11 we're

00:03:20.156 --> 00:03:22.456 A:middle
providing a few helpful new ways

00:03:22.456 --> 00:03:23.876 A:middle
to get notified about focus

00:03:23.876 --> 00:03:24.306 A:middle
updates.

00:03:24.886 --> 00:03:26.046 A:middle
Let's jump back to that diagram.

00:03:27.066 --> 00:03:28.066 A:middle
Like I was just saying, we

00:03:28.066 --> 00:03:29.736 A:middle
notify your app using this

00:03:29.736 --> 00:03:31.776 A:middle
didUpdateFocus method defined on

00:03:31.776 --> 00:03:32.996 A:middle
UIFocusEnvironment.

00:03:34.386 --> 00:03:35.606 A:middle
But sometimes there might be

00:03:35.606 --> 00:03:38.416 A:middle
another object in your app not a

00:03:38.416 --> 00:03:40.016 A:middle
focus environment that you don't

00:03:40.016 --> 00:03:41.236 A:middle
want to be loosely coupled to

00:03:41.236 --> 00:03:42.456 A:middle
the rest of your user interface

00:03:42.456 --> 00:03:42.816 A:middle
code.

00:03:43.556 --> 00:03:45.226 A:middle
So, for this case we're

00:03:45.226 --> 00:03:46.846 A:middle
introducing a new foundation

00:03:46.846 --> 00:03:48.306 A:middle
notification type called

00:03:48.306 --> 00:03:50.106 A:middle
UIFocusDidUpdate.

00:03:51.476 --> 00:03:52.646 A:middle
And you can observe this from

00:03:52.646 --> 00:03:53.886 A:middle
anywhere in your app and it will

00:03:53.886 --> 00:03:55.426 A:middle
get sent every time focus

00:03:55.426 --> 00:03:55.926 A:middle
updates.

00:03:56.686 --> 00:03:58.166 A:middle
This notification includes all

00:03:58.166 --> 00:03:59.426 A:middle
the same information that you're

00:03:59.426 --> 00:04:00.456 A:middle
used to getting for a normal

00:04:00.456 --> 00:04:02.236 A:middle
focus update, including a

00:04:02.266 --> 00:04:04.036 A:middle
context that describes the

00:04:04.036 --> 00:04:06.166 A:middle
update, as well as an animation

00:04:06.166 --> 00:04:07.496 A:middle
coordinator for controlling

00:04:07.496 --> 00:04:08.266 A:middle
visual feedback.

00:04:09.036 --> 00:04:11.596 A:middle
You can access both of these

00:04:11.596 --> 00:04:13.906 A:middle
objects using two new user info

00:04:13.906 --> 00:04:15.076 A:middle
keys that we're providing.

00:04:15.596 --> 00:04:17.526 A:middle
The UIFocusUpdateContext key and

00:04:17.756 --> 00:04:19.146 A:middle
the UIFocusUpdate

00:04:19.146 --> 00:04:21.276 A:middle
AnimiationCoordinator key.

00:04:23.156 --> 00:04:25.856 A:middle
We're also introducing another

00:04:25.856 --> 00:04:27.546 A:middle
key notification type related to

00:04:27.546 --> 00:04:29.686 A:middle
focus updates and that's called

00:04:29.686 --> 00:04:32.686 A:middle
UIFocusMovementDidFail and this

00:04:32.686 --> 00:04:34.086 A:middle
notification is sent whenever

00:04:34.086 --> 00:04:36.626 A:middle
the user tries, but fails to

00:04:36.626 --> 00:04:37.826 A:middle
move focus in a certain

00:04:37.826 --> 00:04:38.276 A:middle
direction.

00:04:38.916 --> 00:04:40.676 A:middle
This will only be sent when the

00:04:40.676 --> 00:04:42.786 A:middle
user is trying to move focus not

00:04:42.786 --> 00:04:44.806 A:middle
when your app fails to perform

00:04:44.806 --> 00:04:46.036 A:middle
some kind of programmatic focus

00:04:46.036 --> 00:04:46.386 A:middle
update.

00:04:46.886 --> 00:04:48.086 A:middle
And this is really useful for

00:04:48.086 --> 00:04:49.336 A:middle
cases where you might want to

00:04:49.336 --> 00:04:50.706 A:middle
provide some kind of feedback to

00:04:50.706 --> 00:04:53.306 A:middle
the user when they try to move

00:04:53.306 --> 00:04:54.296 A:middle
focus in a direction that

00:04:54.296 --> 00:04:55.076 A:middle
they're not allowed to.

00:04:55.546 --> 00:04:57.086 A:middle
Now a good example of this is on

00:04:57.086 --> 00:04:59.076 A:middle
Apple TV where VoiceOver will

00:04:59.076 --> 00:05:02.136 A:middle
provide a sound when a user

00:05:02.136 --> 00:05:03.486 A:middle
tries to move focus in a

00:05:03.486 --> 00:05:04.176 A:middle
direction that they're not

00:05:04.176 --> 00:05:04.746 A:middle
allowed to.

00:05:04.846 --> 00:05:06.366 A:middle
And this is a really helpful way

00:05:06.366 --> 00:05:08.136 A:middle
to provide some extra auditory

00:05:08.136 --> 00:05:09.926 A:middle
feedback to visually impaired

00:05:09.926 --> 00:05:11.736 A:middle
users letting them know that

00:05:11.736 --> 00:05:13.066 A:middle
their action was appropriately

00:05:13.066 --> 00:05:14.646 A:middle
received, but that it didn't

00:05:14.646 --> 00:05:15.266 A:middle
have any effect.

00:05:15.886 --> 00:05:18.976 A:middle
So that's it for focus update

00:05:18.976 --> 00:05:19.756 A:middle
notifications.

00:05:20.686 --> 00:05:22.826 A:middle
We're also providing a few new

00:05:22.826 --> 00:05:24.496 A:middle
helpful protocol extensions on

00:05:24.496 --> 00:05:26.086 A:middle
the UIFocusEnvironment and

00:05:26.086 --> 00:05:28.346 A:middle
UIFocusItem protocols to help

00:05:28.346 --> 00:05:29.696 A:middle
you write more succinct and

00:05:29.696 --> 00:05:30.286 A:middle
safer code.

00:05:32.826 --> 00:05:33.986 A:middle
The first of these is a pretty

00:05:33.986 --> 00:05:35.206 A:middle
easy one we're adding an

00:05:35.256 --> 00:05:37.426 A:middle
isFocused property to the

00:05:37.426 --> 00:05:39.376 A:middle
UIFocusItem protocol and this is

00:05:39.376 --> 00:05:41.226 A:middle
just a simple way to check if

00:05:41.276 --> 00:05:42.666 A:middle
any item is currently focused.

00:05:44.506 --> 00:05:45.866 A:middle
We've exposed this property on

00:05:45.866 --> 00:05:48.366 A:middle
UIView since tvOS 9, but now

00:05:48.366 --> 00:05:49.826 A:middle
that we're exposing it on the

00:05:49.826 --> 00:05:51.376 A:middle
protocol UIFocusItem item

00:05:51.376 --> 00:05:53.126 A:middle
directly you can use this with

00:05:53.126 --> 00:05:54.416 A:middle
any type of focus item and that

00:05:54.416 --> 00:05:56.316 A:middle
includes SpriteKit nodes.

00:05:57.316 --> 00:06:00.576 A:middle
We've also added a new contains

00:06:00.576 --> 00:06:02.506 A:middle
method to the UIFocusEnvironment

00:06:02.506 --> 00:06:02.946 A:middle
protocol.

00:06:03.846 --> 00:06:05.146 A:middle
This method allows you to easily

00:06:05.146 --> 00:06:07.156 A:middle
check if one focus environment

00:06:07.246 --> 00:06:08.516 A:middle
contains another focus

00:06:08.516 --> 00:06:10.356 A:middle
environment, but without having

00:06:10.356 --> 00:06:12.456 A:middle
to know the underlying types

00:06:12.526 --> 00:06:14.896 A:middle
involved in the check.

00:06:16.146 --> 00:06:17.026 A:middle
Let's look at an example of

00:06:17.026 --> 00:06:17.256 A:middle
this.

00:06:18.326 --> 00:06:19.996 A:middle
Suppose we want to check if an

00:06:19.996 --> 00:06:21.326 A:middle
item that just got focused is

00:06:21.326 --> 00:06:22.906 A:middle
contained by our current view

00:06:22.906 --> 00:06:23.366 A:middle
controller.

00:06:24.426 --> 00:06:26.376 A:middle
We can accomplish this by simply

00:06:26.376 --> 00:06:27.776 A:middle
calling the contains method on

00:06:27.776 --> 00:06:29.556 A:middle
the view controller itself and

00:06:29.556 --> 00:06:30.906 A:middle
passing in the next focus item

00:06:30.906 --> 00:06:31.376 A:middle
directly.

00:06:32.306 --> 00:06:33.836 A:middle
This will work if that item is a

00:06:33.836 --> 00:06:34.956 A:middle
view, it'll work if it's a

00:06:34.956 --> 00:06:36.206 A:middle
SpriteKit node, it doesn't

00:06:36.206 --> 00:06:37.066 A:middle
matter what the types are

00:06:37.066 --> 00:06:38.656 A:middle
involved, you can just call

00:06:38.656 --> 00:06:40.626 A:middle
contains and it'll just work.

00:06:41.496 --> 00:06:42.886 A:middle
And so, this will hopefully cut

00:06:42.886 --> 00:06:43.796 A:middle
down on the amount of

00:06:43.796 --> 00:06:44.756 A:middle
typecasting that you have to

00:06:44.756 --> 00:06:45.726 A:middle
perform in your code.

00:06:46.726 --> 00:06:48.986 A:middle
So that's it for new protocol

00:06:48.986 --> 00:06:49.506 A:middle
extensions.

00:06:50.956 --> 00:06:51.946 A:middle
For our next enhancements, I'd

00:06:51.946 --> 00:06:53.286 A:middle
like to invite up my colleague

00:06:53.286 --> 00:06:55.146 A:middle
Jon to talk to you about some

00:06:55.146 --> 00:06:56.676 A:middle
new APIs for focus animations.

00:06:57.146 --> 00:07:01.086 A:middle
&gt;&gt; Good morning, last year we

00:07:01.086 --> 00:07:02.886 A:middle
showed you the coordination API

00:07:02.886 --> 00:07:04.616 A:middle
that you can use to keep your

00:07:04.616 --> 00:07:06.146 A:middle
animations in sync with the

00:07:06.146 --> 00:07:07.936 A:middle
system animations during a focus

00:07:07.936 --> 00:07:08.346 A:middle
update.

00:07:09.206 --> 00:07:10.576 A:middle
And this is done by using the

00:07:10.576 --> 00:07:13.126 A:middle
UIFocusAnimationCoordinator that

00:07:13.126 --> 00:07:15.146 A:middle
is provided whenever a focus

00:07:15.146 --> 00:07:16.076 A:middle
update occurs.

00:07:17.616 --> 00:07:18.886 A:middle
Today, I'd like to talk to you

00:07:18.886 --> 00:07:19.766 A:middle
about some enhancements that

00:07:19.766 --> 00:07:22.366 A:middle
we've made to this API in tvOS

00:07:22.366 --> 00:07:22.856 A:middle
11.

00:07:23.616 --> 00:07:25.706 A:middle
But before I get started let's

00:07:25.706 --> 00:07:27.316 A:middle
take a more in-depth look at how

00:07:27.316 --> 00:07:28.476 A:middle
animations work today.

00:07:30.216 --> 00:07:32.176 A:middle
Focus animations are a really

00:07:32.176 --> 00:07:33.826 A:middle
important part of the tvOS user

00:07:33.886 --> 00:07:34.676 A:middle
experience.

00:07:35.046 --> 00:07:36.536 A:middle
Not only do they show your users

00:07:36.536 --> 00:07:38.356 A:middle
where focus has moved they help

00:07:38.356 --> 00:07:39.686 A:middle
them feel more connected with

00:07:39.686 --> 00:07:40.366 A:middle
your content.

00:07:40.736 --> 00:07:43.206 A:middle
But as with most things, timing

00:07:43.206 --> 00:07:43.956 A:middle
is essential.

00:07:43.956 --> 00:07:46.146 A:middle
If the animations are too fast

00:07:46.536 --> 00:07:47.926 A:middle
it creates a jarring effect for

00:07:47.926 --> 00:07:48.596 A:middle
your users.

00:07:48.886 --> 00:07:50.456 A:middle
And if they're too slow well

00:07:50.456 --> 00:07:51.246 A:middle
they're getting in the way.

00:07:52.246 --> 00:07:53.986 A:middle
So, UIKit has a lot of work put

00:07:53.986 --> 00:07:55.326 A:middle
into it to manage these

00:07:55.326 --> 00:07:56.576 A:middle
animations and their timing.

00:07:57.116 --> 00:07:59.646 A:middle
We do a lot of manipulations,

00:07:59.926 --> 00:08:02.516 A:middle
such as duration changes, to

00:08:02.516 --> 00:08:03.786 A:middle
keep the animations feeling

00:08:03.786 --> 00:08:04.216 A:middle
fluid.

00:08:05.126 --> 00:08:06.576 A:middle
Quicker movements through

00:08:06.576 --> 00:08:08.156 A:middle
multiple focus items will result

00:08:08.156 --> 00:08:09.386 A:middle
in quicker animations.

00:08:09.666 --> 00:08:11.196 A:middle
And when we move slowly from one

00:08:11.196 --> 00:08:13.056 A:middle
item to the next we slow down

00:08:13.056 --> 00:08:14.346 A:middle
the animations to match.

00:08:15.356 --> 00:08:16.966 A:middle
When a user moves focus to an

00:08:16.966 --> 00:08:19.156 A:middle
item offscreen we make sure to

00:08:19.156 --> 00:08:21.356 A:middle
add an appropriate delay until

00:08:21.356 --> 00:08:22.556 A:middle
that item is fully visible

00:08:22.636 --> 00:08:24.016 A:middle
before we perform the focusing

00:08:24.016 --> 00:08:24.686 A:middle
animations.

00:08:28.636 --> 00:08:30.116 A:middle
And you might have noticed that

00:08:30.116 --> 00:08:31.636 A:middle
focusing animations and

00:08:31.636 --> 00:08:33.426 A:middle
unfocusing animations have a

00:08:33.426 --> 00:08:34.656 A:middle
different set of timing.

00:08:36.376 --> 00:08:37.756 A:middle
This is because focusing

00:08:37.756 --> 00:08:39.006 A:middle
animations should be prominent

00:08:39.006 --> 00:08:40.206 A:middle
and they should grab the user's

00:08:40.206 --> 00:08:42.106 A:middle
attention, whereas unfocusing

00:08:42.106 --> 00:08:43.676 A:middle
animations should be subtler and

00:08:43.756 --> 00:08:44.786 A:middle
more in the background.

00:08:45.636 --> 00:08:47.616 A:middle
So, you can see here as focus

00:08:47.616 --> 00:08:49.746 A:middle
moves between these items, the

00:08:49.746 --> 00:08:52.206 A:middle
item becoming focused pops up

00:08:52.206 --> 00:08:54.006 A:middle
very quickly and the item

00:08:54.436 --> 00:08:56.636 A:middle
becoming unfocused slowly moves

00:08:56.636 --> 00:08:57.276 A:middle
into the background.

00:08:57.276 --> 00:08:58.326 A:middle
In fact, it leaves a trail

00:08:58.326 --> 00:09:00.286 A:middle
behind it as focus has moved

00:09:00.286 --> 00:09:03.106 A:middle
from it to the next item.

00:09:03.296 --> 00:09:04.056 A:middle
So, when you call

00:09:04.056 --> 00:09:06.506 A:middle
addCoordinatedAnimations to

00:09:06.506 --> 00:09:08.706 A:middle
synchronize your animations we

00:09:08.706 --> 00:09:10.716 A:middle
automatically determine whether

00:09:10.716 --> 00:09:12.376 A:middle
these are focusing or unfocusing

00:09:12.376 --> 00:09:14.976 A:middle
animations based on the focus

00:09:14.976 --> 00:09:15.936 A:middle
environment hierarchy.

00:09:16.216 --> 00:09:17.806 A:middle
So, here's the same diagram Matt

00:09:17.806 --> 00:09:19.836 A:middle
showed earlier for the

00:09:19.836 --> 00:09:21.676 A:middle
didUpdateFocus notifications.

00:09:22.556 --> 00:09:24.006 A:middle
Whenever you call

00:09:24.536 --> 00:09:27.236 A:middle
addCoordinatedAnimations from

00:09:27.236 --> 00:09:28.616 A:middle
either the previously focused

00:09:28.616 --> 00:09:30.346 A:middle
item or any of its direct

00:09:30.346 --> 00:09:32.616 A:middle
ancestors up to but not

00:09:32.616 --> 00:09:33.976 A:middle
including the common parent

00:09:33.976 --> 00:09:36.086 A:middle
environment we consider these

00:09:36.276 --> 00:09:38.016 A:middle
unfocusing animations and we

00:09:38.016 --> 00:09:39.316 A:middle
coordinate them as such.

00:09:40.676 --> 00:09:43.226 A:middle
Conversely, if your animations

00:09:43.226 --> 00:09:45.356 A:middle
are added from either the next

00:09:45.356 --> 00:09:47.256 A:middle
focused item or any of its

00:09:47.256 --> 00:09:48.956 A:middle
direct ancestors we consider

00:09:48.956 --> 00:09:50.696 A:middle
these focusing animations and so

00:09:50.696 --> 00:09:51.956 A:middle
they get that more prominent

00:09:51.956 --> 00:09:52.376 A:middle
timing.

00:09:52.906 --> 00:09:55.386 A:middle
And this works really well.

00:09:56.736 --> 00:09:58.536 A:middle
But in tvOS 11 we're now

00:09:58.536 --> 00:10:00.826 A:middle
allowing you to specifically

00:10:00.826 --> 00:10:03.186 A:middle
target either the focusing or

00:10:03.186 --> 00:10:03.976 A:middle
unfocusing animations.

00:10:04.046 --> 00:10:06.756 A:middle
And we're doing this by adding

00:10:06.756 --> 00:10:08.346 A:middle
two new methods to the UIFocus

00:10:08.346 --> 00:10:09.356 A:middle
AnimationCoordinator,

00:10:09.956 --> 00:10:10.826 A:middle
addCoordinated

00:10:10.826 --> 00:10:12.446 A:middle
FocusingAnimations and

00:10:12.446 --> 00:10:13.236 A:middle
addCoordinated

00:10:13.236 --> 00:10:14.526 A:middle
UnfocusingAnimations.

00:10:16.716 --> 00:10:18.176 A:middle
So, addCoordinated

00:10:18.176 --> 00:10:19.836 A:middle
FocusingAnimations will function

00:10:19.836 --> 00:10:21.966 A:middle
exactly the same as if you call

00:10:21.966 --> 00:10:23.916 A:middle
addCoordinatedAnimations from

00:10:23.916 --> 00:10:25.856 A:middle
within the next focused item or

00:10:25.856 --> 00:10:27.446 A:middle
any of its direct ancestors.

00:10:27.886 --> 00:10:28.826 A:middle
And addCoordinated

00:10:28.826 --> 00:10:30.936 A:middle
UnfocusingAnimations will

00:10:30.936 --> 00:10:31.796 A:middle
function the same as

00:10:31.796 --> 00:10:33.516 A:middle
addCoordinatedAnimations from

00:10:33.516 --> 00:10:35.326 A:middle
within the previous focused item

00:10:35.326 --> 00:10:36.446 A:middle
or its ancestors.

00:10:36.596 --> 00:10:38.906 A:middle
And so, the best way to show you

00:10:38.906 --> 00:10:40.406 A:middle
how this works is with a demo.

00:10:42.616 --> 00:10:43.976 A:middle
So, let's dive right in.

00:10:50.056 --> 00:10:50.826 A:middle
All right, so I'm working a very

00:10:50.826 --> 00:10:52.416 A:middle
simple timeline application that

00:10:52.416 --> 00:10:53.906 A:middle
shows some entries from past

00:10:53.946 --> 00:10:55.036 A:middle
dubdub events and their

00:10:55.036 --> 00:10:55.706 A:middle
keynotes.

00:10:56.506 --> 00:10:58.416 A:middle
And each entry is represented by

00:10:58.416 --> 00:10:59.976 A:middle
this cell that has a number in

00:10:59.976 --> 00:11:03.126 A:middle
it and as we move focus the

00:11:03.126 --> 00:11:05.136 A:middle
corresponding image above moves

00:11:05.136 --> 00:11:06.236 A:middle
down to give a little bit of

00:11:06.236 --> 00:11:06.756 A:middle
emphasis.

00:11:07.136 --> 00:11:11.016 A:middle
As I move through these you

00:11:11.016 --> 00:11:12.416 A:middle
might notice that it feels a

00:11:12.416 --> 00:11:15.146 A:middle
little bit choppy as we move

00:11:15.146 --> 00:11:15.606 A:middle
quickly.

00:11:15.926 --> 00:11:17.726 A:middle
Well let's hop over and take a

00:11:17.726 --> 00:11:20.506 A:middle
look at the code.

00:11:20.506 --> 00:11:22.946 A:middle
And you'll see that everything

00:11:22.946 --> 00:11:24.386 A:middle
is done within the

00:11:24.386 --> 00:11:26.296 A:middle
addCoordinatedAnimations block.

00:11:26.646 --> 00:11:29.286 A:middle
And this is a great use for our

00:11:29.286 --> 00:11:33.146 A:middle
new API, what we have here is

00:11:33.246 --> 00:11:35.326 A:middle
the focusing view and I've

00:11:36.496 --> 00:11:38.026 A:middle
gotten a reference to this by

00:11:38.026 --> 00:11:40.336 A:middle
using the nextFocusedIndexPath

00:11:40.606 --> 00:11:41.886 A:middle
to grab the supplementary view

00:11:41.886 --> 00:11:43.336 A:middle
it corresponds with and I'm

00:11:43.336 --> 00:11:45.266 A:middle
simply doing a transform of 100

00:11:45.266 --> 00:11:46.876 A:middle
points down.

00:11:46.956 --> 00:11:48.456 A:middle
And then similarly for the

00:11:48.456 --> 00:11:50.166 A:middle
unfocusing view the image that's

00:11:50.166 --> 00:11:52.246 A:middle
going back up I get it by using

00:11:52.246 --> 00:11:53.796 A:middle
the previouslyFocusedIndexPath

00:11:54.146 --> 00:11:55.426 A:middle
and then transforming to the

00:11:55.426 --> 00:11:55.946 A:middle
identity.

00:11:57.436 --> 00:12:00.706 A:middle
So instead of using the single

00:12:01.076 --> 00:12:02.676 A:middle
addCoordinatedAnimations call

00:12:03.036 --> 00:12:05.546 A:middle
which in fact makes everything

00:12:05.676 --> 00:12:06.676 A:middle
coordinate alongside the

00:12:06.676 --> 00:12:08.466 A:middle
focusing animations, we can now

00:12:08.466 --> 00:12:14.156 A:middle
split this up into two explicit

00:12:14.156 --> 00:12:17.066 A:middle
calls, one for the focusing

00:12:17.066 --> 00:12:20.726 A:middle
animations for the focusing view

00:12:21.256 --> 00:12:23.236 A:middle
and then one for the unfocusing

00:12:23.236 --> 00:12:24.696 A:middle
animations for the unfocusing

00:12:24.696 --> 00:12:24.926 A:middle
view.

00:12:25.286 --> 00:12:27.786 A:middle
So, now let's rerun this and

00:12:28.876 --> 00:12:29.776 A:middle
take a look.

00:12:36.096 --> 00:12:37.316 A:middle
Now as we move from one item to

00:12:37.316 --> 00:12:38.106 A:middle
the next you can see that the

00:12:38.106 --> 00:12:41.346 A:middle
same trail as focus moves in the

00:12:41.346 --> 00:12:43.936 A:middle
cells itself exists in the image

00:12:43.936 --> 00:12:44.976 A:middle
views themselves and this

00:12:44.976 --> 00:12:46.546 A:middle
creates a much nicer user

00:12:46.546 --> 00:12:48.476 A:middle
experience for your application.

00:12:48.476 --> 00:12:51.806 A:middle
All right, so now let's hope

00:12:51.806 --> 00:12:53.216 A:middle
back over to the slides.

00:12:53.496 --> 00:12:54.626 A:middle
And there's one other thing I'd

00:12:54.626 --> 00:12:55.996 A:middle
like to talk about regarding

00:12:55.996 --> 00:12:56.716 A:middle
animations.

00:12:57.556 --> 00:12:58.516 A:middle
In addition to the two new

00:12:58.516 --> 00:13:00.136 A:middle
methods we're also providing an

00:13:00.136 --> 00:13:01.016 A:middle
instance of the

00:13:01.016 --> 00:13:03.316 A:middle
UIFocusAnimationContext and this

00:13:03.316 --> 00:13:05.366 A:middle
is a new object in tvOS 11 that

00:13:05.366 --> 00:13:07.036 A:middle
gives you some additional timing

00:13:07.036 --> 00:13:08.626 A:middle
information about the animations

00:13:08.626 --> 00:13:12.086 A:middle
occurring which should make

00:13:12.086 --> 00:13:13.696 A:middle
advance animations even easier.

00:13:14.096 --> 00:13:15.806 A:middle
So, let's say we'd like to run

00:13:15.806 --> 00:13:17.216 A:middle
an animation during the second

00:13:17.216 --> 00:13:18.956 A:middle
half of the system focusing

00:13:18.956 --> 00:13:19.596 A:middle
animations.

00:13:20.616 --> 00:13:21.816 A:middle
Well this is very easy to do,

00:13:22.326 --> 00:13:23.406 A:middle
all we need to do is grab the

00:13:23.406 --> 00:13:25.546 A:middle
duration off of the animation

00:13:25.546 --> 00:13:27.936 A:middle
context, divide it by two, and

00:13:27.966 --> 00:13:29.726 A:middle
then pass these values into the

00:13:29.726 --> 00:13:31.836 A:middle
standard UIView animate method

00:13:32.916 --> 00:13:33.716 A:middle
and we're done.

00:13:34.336 --> 00:13:36.016 A:middle
One important point to mention

00:13:36.016 --> 00:13:37.896 A:middle
is the overrideInheritedDuration

00:13:37.896 --> 00:13:39.126 A:middle
option that needs to get passed

00:13:39.126 --> 00:13:40.876 A:middle
in because without this the

00:13:40.876 --> 00:13:42.766 A:middle
nested view based animations are

00:13:42.766 --> 00:13:44.286 A:middle
going to ignore the duration

00:13:44.286 --> 00:13:45.636 A:middle
that you gave and instead use

00:13:45.636 --> 00:13:46.476 A:middle
the outer duration.

00:13:47.526 --> 00:13:49.166 A:middle
But this doesn't just make you

00:13:49.426 --> 00:13:51.406 A:middle
UIVIewAnimation easier it also

00:13:51.406 --> 00:13:53.216 A:middle
provides better non-UIKit

00:13:53.216 --> 00:13:53.586 A:middle
support.

00:13:53.926 --> 00:13:55.256 A:middle
So, if you're using SpriteKit

00:13:55.256 --> 00:13:56.446 A:middle
which is fully supported by the

00:13:56.446 --> 00:13:58.366 A:middle
focus system it allows you to

00:13:58.366 --> 00:14:00.136 A:middle
create a more consistent feel

00:14:00.476 --> 00:14:02.166 A:middle
for your animations using SK

00:14:02.166 --> 00:14:03.196 A:middle
actions for example.

00:14:04.486 --> 00:14:07.416 A:middle
This is an example of using SK

00:14:07.416 --> 00:14:09.236 A:middle
actions to fade the opacity to

00:14:09.236 --> 00:14:11.926 A:middle
50% using the exact same timing

00:14:12.346 --> 00:14:14.396 A:middle
that the system UIKit focusing

00:14:14.396 --> 00:14:15.186 A:middle
animations would.

00:14:15.696 --> 00:14:18.826 A:middle
All right, so the existing API

00:14:19.136 --> 00:14:20.096 A:middle
works really well.

00:14:21.256 --> 00:14:23.926 A:middle
And if you don't have a need to

00:14:23.926 --> 00:14:25.246 A:middle
explicitly target either

00:14:25.246 --> 00:14:27.186 A:middle
focusing or unfocusing continue

00:14:27.186 --> 00:14:29.016 A:middle
using the existing API because

00:14:29.016 --> 00:14:30.266 A:middle
it does the right thing for you.

00:14:31.206 --> 00:14:33.156 A:middle
However, if you need to target

00:14:33.156 --> 00:14:34.786 A:middle
your animations to focusing or

00:14:34.786 --> 00:14:36.866 A:middle
unfocusing regardless of their

00:14:36.866 --> 00:14:38.286 A:middle
association with the focus

00:14:38.286 --> 00:14:40.146 A:middle
environment hierarchy use the

00:14:40.146 --> 00:14:41.446 A:middle
new APIs and you'll be able to

00:14:41.446 --> 00:14:42.486 A:middle
do that to great effect.

00:14:43.096 --> 00:14:45.696 A:middle
And lastly, the focus animation

00:14:45.696 --> 00:14:47.176 A:middle
context is provided for some

00:14:47.176 --> 00:14:48.526 A:middle
additional timing information

00:14:48.816 --> 00:14:49.586 A:middle
which should make advanced

00:14:49.586 --> 00:14:50.736 A:middle
animations even easier.

00:14:51.176 --> 00:14:54.006 A:middle
So, next I'd like to talk about

00:14:54.006 --> 00:14:55.046 A:middle
focus sounds.

00:14:56.086 --> 00:14:57.476 A:middle
Where animations give a visual

00:14:57.476 --> 00:14:58.806 A:middle
representation of the focus

00:14:58.806 --> 00:15:01.016 A:middle
update focus sounds provide an

00:15:01.016 --> 00:15:02.796 A:middle
auditory queue to the user that

00:15:02.796 --> 00:15:03.686 A:middle
focus has moved.

00:15:04.196 --> 00:15:08.396 A:middle
And just like animations there's

00:15:08.396 --> 00:15:10.386 A:middle
some subtlety to sound playback

00:15:10.496 --> 00:15:11.516 A:middle
to create the best user

00:15:11.516 --> 00:15:12.606 A:middle
experience possible.

00:15:14.056 --> 00:15:15.606 A:middle
UIKit performs a number of

00:15:15.606 --> 00:15:18.136 A:middle
volume and panning modifications

00:15:18.136 --> 00:15:19.466 A:middle
to every sound that's played.

00:15:20.426 --> 00:15:22.016 A:middle
So, faster focus movements

00:15:22.266 --> 00:15:25.936 A:middle
result in a quieter sound and

00:15:25.936 --> 00:15:27.706 A:middle
slower focus movements result in

00:15:27.706 --> 00:15:29.956 A:middle
a louder sound, which nicely

00:15:29.956 --> 00:15:31.256 A:middle
complements the same duration

00:15:31.256 --> 00:15:32.436 A:middle
modifications we make to

00:15:32.436 --> 00:15:33.186 A:middle
animations.

00:15:34.146 --> 00:15:36.876 A:middle
We also use the location of the

00:15:36.876 --> 00:15:39.606 A:middle
focusing item onscreen to pan

00:15:39.606 --> 00:15:41.176 A:middle
the volume either stereo left or

00:15:41.176 --> 00:15:41.966 A:middle
stereo right.

00:15:42.276 --> 00:15:43.826 A:middle
So, if you swipe right across

00:15:43.826 --> 00:15:46.036 A:middle
the screen you'll notice sound

00:15:46.036 --> 00:15:47.446 A:middle
starts to pan to the right and

00:15:47.446 --> 00:15:49.336 A:middle
as you swipe back left you'll

00:15:49.336 --> 00:15:51.036 A:middle
notice sound pans to the left

00:15:51.036 --> 00:15:52.356 A:middle
bouncing out when focus is

00:15:52.356 --> 00:15:53.376 A:middle
centered horizontally.

00:15:54.536 --> 00:15:55.996 A:middle
Again, this helps create a much

00:15:55.996 --> 00:15:57.796 A:middle
more immersive user experience.

00:15:58.306 --> 00:16:03.396 A:middle
But a lot of requested that we

00:16:03.396 --> 00:16:04.816 A:middle
allow you to provide custom

00:16:04.816 --> 00:16:06.286 A:middle
focus sounds or to opt out of

00:16:06.286 --> 00:16:08.316 A:middle
the UIKit sounds and started in

00:16:08.316 --> 00:16:10.166 A:middle
tvOS 11 I'm happy to announce

00:16:10.166 --> 00:16:11.096 A:middle
that we're allowing you to do

00:16:11.096 --> 00:16:11.516 A:middle
both.

00:16:12.566 --> 00:16:14.506 A:middle
So, to play custom sounds you

00:16:15.076 --> 00:16:16.746 A:middle
simply need to register your

00:16:16.746 --> 00:16:18.706 A:middle
sound with an identifier and

00:16:19.716 --> 00:16:21.716 A:middle
then provide that identifier

00:16:21.716 --> 00:16:23.326 A:middle
during a focus update that will

00:16:23.326 --> 00:16:24.306 A:middle
play a focus sound.

00:16:24.566 --> 00:16:26.356 A:middle
This is only a user initiated

00:16:26.356 --> 00:16:27.126 A:middle
focus movement.

00:16:27.636 --> 00:16:29.706 A:middle
And then once we have that

00:16:29.706 --> 00:16:31.606 A:middle
identifier we'll play the sound

00:16:31.606 --> 00:16:33.166 A:middle
it's associated with.

00:16:35.556 --> 00:16:39.126 A:middle
To register sounds you'll use a

00:16:39.126 --> 00:16:40.606 A:middle
class method register

00:16:40.606 --> 00:16:42.256 A:middle
soundFileURL for sound

00:16:42.256 --> 00:16:44.106 A:middle
identifier which is exposed on

00:16:44.106 --> 00:16:46.026 A:middle
the new UIFocusSystem, a new

00:16:46.026 --> 00:16:47.466 A:middle
object in tvOS 11.

00:16:48.016 --> 00:16:52.116 A:middle
The sound registration is a

00:16:52.116 --> 00:16:54.016 A:middle
global action, meaning that once

00:16:54.016 --> 00:16:55.716 A:middle
you do it that custom sound is

00:16:55.716 --> 00:16:57.056 A:middle
available throughout your entire

00:16:57.056 --> 00:16:57.676 A:middle
application.

00:16:58.066 --> 00:17:00.926 A:middle
Because of this, you should only

00:17:00.926 --> 00:17:03.806 A:middle
register a sound for a single

00:17:03.806 --> 00:17:04.406 A:middle
identifier.

00:17:05.056 --> 00:17:06.536 A:middle
In fact, reregistering with the

00:17:06.646 --> 00:17:08.086 A:middle
same sound identifier is an

00:17:08.086 --> 00:17:08.456 A:middle
error.

00:17:09.666 --> 00:17:11.026 A:middle
But it's perfectly acceptable

00:17:11.076 --> 00:17:12.696 A:middle
and reasonable to have multiple

00:17:12.696 --> 00:17:14.216 A:middle
sounds in your application, just

00:17:14.216 --> 00:17:15.686 A:middle
give each one of them a unique

00:17:15.686 --> 00:17:16.256 A:middle
identifier.

00:17:16.676 --> 00:17:20.316 A:middle
Because it's global you also

00:17:20.316 --> 00:17:21.576 A:middle
want to register early.

00:17:22.616 --> 00:17:24.216 A:middle
There's a nontrivial performance

00:17:24.216 --> 00:17:25.616 A:middle
cost to setting up your custom

00:17:25.616 --> 00:17:27.386 A:middle
sounds for playback and we want

00:17:27.386 --> 00:17:28.326 A:middle
to make sure there's as much

00:17:28.326 --> 00:17:30.216 A:middle
time between registration and

00:17:30.216 --> 00:17:31.756 A:middle
user focus movement so that

00:17:31.756 --> 00:17:33.216 A:middle
sounds can play seamlessly.

00:17:34.096 --> 00:17:35.796 A:middle
The registration method accepts

00:17:35.936 --> 00:17:38.146 A:middle
all standard iOS file formats

00:17:38.366 --> 00:17:39.636 A:middle
that are locally stored on your

00:17:39.636 --> 00:17:40.176 A:middle
device.

00:17:40.726 --> 00:17:43.546 A:middle
So, when you actually need to

00:17:43.546 --> 00:17:45.816 A:middle
play the sound you'll use the

00:17:45.816 --> 00:17:47.146 A:middle
new optional method on the

00:17:47.146 --> 00:17:49.056 A:middle
UIFocusEnvironment protocol.

00:17:49.996 --> 00:17:51.266 A:middle
So, we call this method

00:17:51.616 --> 00:17:52.376 A:middle
soundIdentifier

00:17:52.376 --> 00:17:53.406 A:middle
ForFocusUpdate.

00:17:53.776 --> 00:17:57.126 A:middle
In the same ascending order that

00:17:57.876 --> 00:17:59.676 A:middle
the didUpdateFocus notifications

00:17:59.676 --> 00:18:00.166 A:middle
are delivered.

00:18:01.246 --> 00:18:02.616 A:middle
And we start by calling this

00:18:02.616 --> 00:18:04.806 A:middle
method on the next focused item.

00:18:05.136 --> 00:18:07.856 A:middle
If the next focused item gives

00:18:08.016 --> 00:18:09.766 A:middle
us a no focus sound identifier

00:18:10.276 --> 00:18:11.686 A:middle
we use that to control sound

00:18:11.686 --> 00:18:13.126 A:middle
playback for this focus update

00:18:13.126 --> 00:18:13.856 A:middle
and then we're done.

00:18:14.836 --> 00:18:16.366 A:middle
However, if we don't get a sound

00:18:16.366 --> 00:18:17.696 A:middle
identifier back from the next

00:18:17.696 --> 00:18:19.626 A:middle
focus item we look to its parent

00:18:20.456 --> 00:18:21.646 A:middle
and we try again.

00:18:22.646 --> 00:18:24.046 A:middle
Now if the parent doesn't return

00:18:24.046 --> 00:18:25.586 A:middle
anything we repeat this process

00:18:25.586 --> 00:18:27.076 A:middle
and we go up to its parent and

00:18:27.076 --> 00:18:28.376 A:middle
we repeat this over and over

00:18:28.376 --> 00:18:29.806 A:middle
until we get to the root focus

00:18:29.806 --> 00:18:31.826 A:middle
environment which if none of

00:18:31.826 --> 00:18:33.136 A:middle
your focus environments have

00:18:33.176 --> 00:18:34.926 A:middle
chosen to provide a custom sound

00:18:35.966 --> 00:18:37.226 A:middle
then we simply use the default

00:18:37.226 --> 00:18:38.606 A:middle
that UIKit would use on its own.

00:18:39.416 --> 00:18:40.116 A:middle
So, there are a number of

00:18:40.116 --> 00:18:41.546 A:middle
options for what values you

00:18:41.546 --> 00:18:42.946 A:middle
might return from sound

00:18:42.946 --> 00:18:44.356 A:middle
identifier for focus update.

00:18:44.886 --> 00:18:47.246 A:middle
Of course, you're able to return

00:18:47.246 --> 00:18:48.476 A:middle
any of the sounds that you had

00:18:48.476 --> 00:18:50.326 A:middle
previously registered and doing

00:18:50.326 --> 00:18:52.996 A:middle
so will play the sound that that

00:18:52.996 --> 00:18:55.316 A:middle
identifier was registered with.

00:18:55.516 --> 00:18:57.096 A:middle
UIKit also provides two sound

00:18:57.096 --> 00:18:59.556 A:middle
identifiers, default and none.

00:19:00.146 --> 00:19:02.446 A:middle
By providing the default sound

00:19:02.446 --> 00:19:04.426 A:middle
identifier it explicitly signals

00:19:04.426 --> 00:19:06.006 A:middle
to UIKit that you want to force

00:19:06.006 --> 00:19:07.766 A:middle
the default sound that UIKit

00:19:07.766 --> 00:19:09.246 A:middle
would play on its own to be

00:19:09.246 --> 00:19:10.736 A:middle
played for this focus update.

00:19:10.986 --> 00:19:13.006 A:middle
Now keep in mind if none of your

00:19:13.006 --> 00:19:14.546 A:middle
environments wish to control

00:19:14.546 --> 00:19:16.606 A:middle
sound for this update then this

00:19:16.606 --> 00:19:18.366 A:middle
is value we'll use anyway.

00:19:18.366 --> 00:19:19.796 A:middle
So, it's probably rare you'll

00:19:19.796 --> 00:19:21.216 A:middle
need to use, this provide this

00:19:21.216 --> 00:19:23.696 A:middle
for the cases that you do.

00:19:23.866 --> 00:19:25.656 A:middle
And last, the non-identifier can

00:19:25.656 --> 00:19:27.376 A:middle
be used to entirely opt out of

00:19:27.436 --> 00:19:29.136 A:middle
focus sounds for this focus

00:19:29.136 --> 00:19:29.496 A:middle
update.

00:19:33.256 --> 00:19:34.716 A:middle
You're able to very easily

00:19:34.716 --> 00:19:37.096 A:middle
conditionally modify which sound

00:19:37.096 --> 00:19:38.986 A:middle
is played and using the same

00:19:38.986 --> 00:19:40.686 A:middle
contains protocol extension that

00:19:40.686 --> 00:19:42.756 A:middle
Matt showed earlier we're able

00:19:42.756 --> 00:19:46.006 A:middle
to determine when focus moves

00:19:46.006 --> 00:19:47.396 A:middle
through a particular environment

00:19:47.396 --> 00:19:49.046 A:middle
and when it does modify the

00:19:49.046 --> 00:19:50.836 A:middle
sound, otherwise deferred to

00:19:50.836 --> 00:19:51.116 A:middle
pair it.

00:19:51.116 --> 00:19:53.906 A:middle
So, I here I have a particular

00:19:53.906 --> 00:19:54.956 A:middle
environment, I'll call it sound

00:19:54.956 --> 00:19:56.536 A:middle
enabled environment where when

00:19:56.536 --> 00:19:57.826 A:middle
focus moves through this

00:19:57.826 --> 00:19:59.146 A:middle
environment I want to play a

00:19:59.236 --> 00:20:01.466 A:middle
sound that I registered with my

00:20:01.466 --> 00:20:02.616 A:middle
custom sound identifier.

00:20:03.626 --> 00:20:04.856 A:middle
Again, it's very easy to do,

00:20:04.856 --> 00:20:07.336 A:middle
take the next focused item and

00:20:07.336 --> 00:20:08.596 A:middle
then just check whether or not

00:20:08.596 --> 00:20:09.866 A:middle
that's contained within the

00:20:09.866 --> 00:20:10.896 A:middle
sound enabled environment.

00:20:11.006 --> 00:20:14.966 A:middle
So, a couple quick points on

00:20:14.966 --> 00:20:16.486 A:middle
opting out of focus sounds.

00:20:17.756 --> 00:20:19.976 A:middle
First, users expect a sound to

00:20:19.976 --> 00:20:21.866 A:middle
be played when focus movement

00:20:21.866 --> 00:20:22.306 A:middle
occurs.

00:20:22.626 --> 00:20:23.836 A:middle
Like I mentioned before, this is

00:20:23.836 --> 00:20:25.136 A:middle
an auditory queue to them that

00:20:25.136 --> 00:20:26.086 A:middle
focus has moved.

00:20:26.876 --> 00:20:28.496 A:middle
So, you should only be opting

00:20:28.496 --> 00:20:30.666 A:middle
out of sounds if the user is

00:20:30.666 --> 00:20:31.916 A:middle
explicitly expected to.

00:20:32.226 --> 00:20:33.646 A:middle
A great example of this might be

00:20:33.646 --> 00:20:36.086 A:middle
an in-game menu where the user

00:20:36.086 --> 00:20:37.816 A:middle
can turn off sounds for your

00:20:37.816 --> 00:20:39.796 A:middle
entire application.

00:20:41.636 --> 00:20:43.486 A:middle
Also, if you were think about

00:20:43.486 --> 00:20:45.196 A:middle
opting out of focus sounds and

00:20:45.196 --> 00:20:46.156 A:middle
then playing your own when a

00:20:46.156 --> 00:20:48.276 A:middle
focus update occurs, I highly

00:20:48.276 --> 00:20:49.636 A:middle
encourage you to use our API

00:20:49.636 --> 00:20:51.966 A:middle
instead because not only do you

00:20:51.966 --> 00:20:53.956 A:middle
get the same volume and panning

00:20:53.956 --> 00:20:55.836 A:middle
adjustments that we perform for

00:20:55.836 --> 00:20:57.736 A:middle
our internal sounds which are

00:20:57.876 --> 00:20:59.606 A:middle
probably very hard to replicate.

00:21:00.796 --> 00:21:02.206 A:middle
We also respect the user's

00:21:02.206 --> 00:21:03.796 A:middle
device settings for playing

00:21:03.796 --> 00:21:04.416 A:middle
these sounds.

00:21:04.996 --> 00:21:06.396 A:middle
So, Apple TV has a setting that

00:21:06.396 --> 00:21:07.206 A:middle
allows you to turn off

00:21:07.206 --> 00:21:08.996 A:middle
navigation sounds for the entire

00:21:08.996 --> 00:21:11.456 A:middle
system and you don't want your

00:21:11.456 --> 00:21:13.086 A:middle
application to be the only one

00:21:13.086 --> 00:21:14.636 A:middle
playing sounds if the user says

00:21:14.636 --> 00:21:15.916 A:middle
they don't want them.

00:21:18.436 --> 00:21:20.066 A:middle
All right, so to recap.

00:21:20.386 --> 00:21:24.576 A:middle
You should use good judgment

00:21:24.826 --> 00:21:26.536 A:middle
when determining when and where

00:21:26.536 --> 00:21:28.386 A:middle
and which sounds to play for

00:21:28.386 --> 00:21:30.156 A:middle
focus update because your sound

00:21:30.156 --> 00:21:31.246 A:middle
should enhance the user

00:21:31.246 --> 00:21:32.776 A:middle
experience they should not

00:21:32.776 --> 00:21:34.086 A:middle
detract from it.

00:21:34.676 --> 00:21:36.446 A:middle
A great example of this might be

00:21:36.446 --> 00:21:37.926 A:middle
differentiating between elements

00:21:37.926 --> 00:21:38.516 A:middle
onscreen.

00:21:38.786 --> 00:21:40.716 A:middle
We do this in UIKit based on the

00:21:40.716 --> 00:21:42.266 A:middle
size of particular items.

00:21:42.656 --> 00:21:45.186 A:middle
So, very large focus items have

00:21:45.186 --> 00:21:47.406 A:middle
a larger, deeper sound and

00:21:47.406 --> 00:21:49.096 A:middle
smaller items have a smaller,

00:21:49.096 --> 00:21:50.126 A:middle
higher pitched sound.

00:21:51.046 --> 00:21:52.676 A:middle
Again, this is all to enhance

00:21:52.676 --> 00:21:53.906 A:middle
the user experience.

00:21:54.416 --> 00:21:56.896 A:middle
All right and with that I'd like

00:21:56.896 --> 00:21:58.236 A:middle
to turn things back over to Matt

00:21:58.756 --> 00:22:00.006 A:middle
who will talk about support for

00:22:00.006 --> 00:22:00.566 A:middle
SceneKit.

00:22:00.566 --> 00:22:00.816 A:middle
Matt.

00:22:01.516 --> 00:22:05.606 A:middle
[ Applause ]

00:22:06.106 --> 00:22:06.406 A:middle
&gt;&gt; Thanks Jon.

00:22:07.896 --> 00:22:09.446 A:middle
All right, I'm excited to

00:22:09.446 --> 00:22:11.526 A:middle
announce that in tvOS 11 we're

00:22:11.526 --> 00:22:12.996 A:middle
now extending focus system

00:22:12.996 --> 00:22:14.656 A:middle
support into the SceneKit

00:22:14.846 --> 00:22:15.306 A:middle
framework.

00:22:16.466 --> 00:22:17.256 A:middle
So, how does this work?

00:22:17.946 --> 00:22:19.606 A:middle
Well if you recall back to tvOS

00:22:19.606 --> 00:22:21.926 A:middle
9 it used to be that UIView was

00:22:21.926 --> 00:22:24.476 A:middle
the only type that was able to

00:22:24.576 --> 00:22:25.126 A:middle
be focused.

00:22:27.026 --> 00:22:28.886 A:middle
In tvOS 10 we introduced this

00:22:28.886 --> 00:22:31.456 A:middle
new UI focused item protocol and

00:22:31.456 --> 00:22:33.146 A:middle
we extended focus interaction

00:22:33.146 --> 00:22:34.986 A:middle
support into SpriteKit by

00:22:34.986 --> 00:22:36.296 A:middle
adopting this protocol on both

00:22:36.296 --> 00:22:38.036 A:middle
UIView and SKNode.

00:22:39.126 --> 00:22:41.326 A:middle
Well now in tvOS 11 we're adding

00:22:41.556 --> 00:22:44.336 A:middle
SCNNode to the UIFocusItem

00:22:44.446 --> 00:22:44.856 A:middle
family.

00:22:45.446 --> 00:22:47.746 A:middle
So, how does this work?

00:22:48.676 --> 00:22:50.266 A:middle
Just like SpriteKit you need to

00:22:50.266 --> 00:22:52.256 A:middle
opt in in order to get focus

00:22:52.256 --> 00:22:53.986 A:middle
support in your SceneKit apps.

00:22:54.466 --> 00:22:55.906 A:middle
This means that nodes are not

00:22:55.906 --> 00:22:57.306 A:middle
focusable by default.

00:22:57.776 --> 00:23:00.516 A:middle
In order to make them focusable

00:23:00.516 --> 00:23:02.016 A:middle
it couldn't be easier, all you

00:23:02.016 --> 00:23:03.636 A:middle
have to do is set the new focus

00:23:03.676 --> 00:23:05.696 A:middle
behavior property to focusable

00:23:05.696 --> 00:23:07.616 A:middle
and that's it, it's that easy.

00:23:08.796 --> 00:23:10.186 A:middle
FocusBehavior is a new property

00:23:10.186 --> 00:23:12.106 A:middle
on SCNNode and we've also made

00:23:12.106 --> 00:23:13.526 A:middle
this property available on

00:23:13.526 --> 00:23:15.206 A:middle
SKNode so now it's even easier

00:23:15.206 --> 00:23:16.546 A:middle
to make your SpriteKit nodes

00:23:16.546 --> 00:23:17.566 A:middle
focusable as well.

00:23:18.236 --> 00:23:21.056 A:middle
But I think it would be a lot

00:23:21.056 --> 00:23:22.396 A:middle
more fun to just show you this

00:23:22.396 --> 00:23:22.976 A:middle
in action with a quick demo.

00:23:27.066 --> 00:23:27.826 A:middle
All right, I've been building a

00:23:27.826 --> 00:23:30.746 A:middle
tic-tac-toe app for tvOS and I

00:23:30.746 --> 00:23:32.576 A:middle
really wanted my app to just

00:23:32.666 --> 00:23:34.956 A:middle
have an extra bit of pop and so

00:23:34.956 --> 00:23:36.186 A:middle
I decided to implement it with

00:23:36.316 --> 00:23:36.776 A:middle
SceneKit.

00:23:37.316 --> 00:23:38.286 A:middle
And so, you can see my

00:23:38.376 --> 00:23:39.766 A:middle
three-dimensional tic-tac-toe

00:23:39.766 --> 00:23:42.356 A:middle
board with full perspective and

00:23:42.356 --> 00:23:43.616 A:middle
I've already implement focus

00:23:43.616 --> 00:23:44.726 A:middle
interaction support in my

00:23:44.726 --> 00:23:45.596 A:middle
tic-tac-toe game.

00:23:46.056 --> 00:23:47.766 A:middle
So, I can move focus around

00:23:47.766 --> 00:23:49.686 A:middle
using any type of input device

00:23:49.866 --> 00:23:50.966 A:middle
to each of the tiles on my

00:23:50.966 --> 00:23:51.286 A:middle
board.

00:23:51.896 --> 00:23:54.176 A:middle
And if I press Select I can drop

00:23:54.176 --> 00:23:56.986 A:middle
an X or an O anywhere on the

00:23:56.986 --> 00:23:59.686 A:middle
tile, on any tile.

00:23:59.906 --> 00:24:00.996 A:middle
So, implementing this couldn't

00:24:00.996 --> 00:24:02.166 A:middle
have been easier, in addition to

00:24:02.166 --> 00:24:03.626 A:middle
just setting up my SceneKit

00:24:03.626 --> 00:24:05.876 A:middle
scene all I had to do was mark

00:24:06.126 --> 00:24:08.266 A:middle
each of the nodes that represent

00:24:08.266 --> 00:24:09.696 A:middle
the tiles on the board as

00:24:09.696 --> 00:24:11.296 A:middle
focusable using that one line

00:24:11.296 --> 00:24:13.086 A:middle
code I showed earlier.

00:24:14.216 --> 00:24:15.636 A:middle
And then provide custom

00:24:15.636 --> 00:24:17.376 A:middle
animations using those same

00:24:17.376 --> 00:24:19.426 A:middle
animation APIs that Jon was just

00:24:19.426 --> 00:24:20.536 A:middle
talking about a moment ago.

00:24:21.446 --> 00:24:22.716 A:middle
And that's really all that we

00:24:22.716 --> 00:24:23.306 A:middle
had to do.

00:24:23.586 --> 00:24:25.076 A:middle
Now we can fully interact with

00:24:25.076 --> 00:24:26.006 A:middle
our SceneKit scene.

00:24:26.586 --> 00:24:27.426 A:middle
And the focus engine

00:24:27.426 --> 00:24:29.616 A:middle
automatically takes care of

00:24:29.616 --> 00:24:30.726 A:middle
everything else for us.

00:24:31.096 --> 00:24:33.276 A:middle
In fact, I added two UIKit

00:24:33.276 --> 00:24:35.116 A:middle
buttons, UI buttons to the

00:24:35.116 --> 00:24:36.986 A:middle
bottom of our SceneKit scene by

00:24:36.986 --> 00:24:38.616 A:middle
just placing them on top of our

00:24:38.616 --> 00:24:40.326 A:middle
SK view and the focus engine

00:24:40.326 --> 00:24:41.596 A:middle
will automatically handle moving

00:24:41.596 --> 00:24:43.656 A:middle
focus between our nodes and

00:24:43.876 --> 00:24:44.526 A:middle
these buttons.

00:24:45.556 --> 00:24:46.906 A:middle
And it'll do the correct thing

00:24:46.906 --> 00:24:48.136 A:middle
no matter whether I'm on the

00:24:48.136 --> 00:24:49.836 A:middle
left or right side of the board

00:24:50.096 --> 00:24:51.586 A:middle
hitting the correct button based

00:24:51.586 --> 00:24:53.366 A:middle
on what's geometrically closer

00:24:54.036 --> 00:24:54.776 A:middle
to our nodes.

00:24:55.276 --> 00:24:58.616 A:middle
And so, that's just a quick demo

00:24:58.616 --> 00:25:02.186 A:middle
of SceneKit support for focus

00:25:02.186 --> 00:25:02.626 A:middle
interaction.

00:25:05.516 --> 00:25:09.546 A:middle
[ Applause ]

00:25:10.046 --> 00:25:11.176 A:middle
There are just a few more things

00:25:11.176 --> 00:25:11.996 A:middle
to keep in mind when

00:25:12.106 --> 00:25:13.356 A:middle
implementing focus interaction

00:25:13.356 --> 00:25:14.846 A:middle
support in your SceneKit apps

00:25:14.846 --> 00:25:15.346 A:middle
and games.

00:25:16.776 --> 00:25:18.976 A:middle
First, SceneKit obviously

00:25:19.036 --> 00:25:20.626 A:middle
operates in three-dimensional

00:25:20.626 --> 00:25:23.106 A:middle
space, but focus interaction

00:25:23.106 --> 00:25:24.516 A:middle
operates in two-dimensional

00:25:24.516 --> 00:25:25.006 A:middle
space.

00:25:25.386 --> 00:25:26.296 A:middle
So how does this work?

00:25:27.216 --> 00:25:28.846 A:middle
Well when a user tries to move

00:25:28.846 --> 00:25:30.406 A:middle
focus in a certain direction

00:25:30.766 --> 00:25:31.936 A:middle
we're going to look for the next

00:25:32.016 --> 00:25:35.016 A:middle
focusable SceneKit node based on

00:25:35.016 --> 00:25:38.146 A:middle
its area as it's drawn onto the

00:25:39.216 --> 00:25:39.386 A:middle
screen.

00:25:39.806 --> 00:25:41.826 A:middle
Second, now that we support

00:25:41.826 --> 00:25:43.496 A:middle
focus interaction in SceneKit

00:25:43.966 --> 00:25:45.336 A:middle
that means we're now also able

00:25:45.336 --> 00:25:46.946 A:middle
to support your focusable

00:25:46.946 --> 00:25:48.576 A:middle
SpriteKit scenes that are

00:25:48.576 --> 00:25:50.236 A:middle
embedded within SceneKit scenes.

00:25:51.016 --> 00:25:52.196 A:middle
And in fact, we automatically

00:25:52.196 --> 00:25:53.736 A:middle
support moving focus between

00:25:53.736 --> 00:25:56.206 A:middle
UIKit, SpriteKit and SceneKit

00:25:56.206 --> 00:25:58.116 A:middle
objects with no extra work

00:25:58.116 --> 00:25:59.206 A:middle
required on your part.

00:26:00.086 --> 00:26:01.676 A:middle
So, you can build your user

00:26:01.676 --> 00:26:03.206 A:middle
interface using whatever tools

00:26:03.206 --> 00:26:04.276 A:middle
make the most sense for

00:26:04.276 --> 00:26:05.116 A:middle
different areas of your

00:26:05.116 --> 00:26:06.486 A:middle
application and focus

00:26:06.486 --> 00:26:07.666 A:middle
interaction support will just

00:26:07.666 --> 00:26:08.546 A:middle
work automatically.

00:26:08.746 --> 00:26:10.626 A:middle
And then finally, all the focus

00:26:10.626 --> 00:26:12.346 A:middle
APIs that we define in UIKit

00:26:12.346 --> 00:26:14.116 A:middle
using the UIFocusItem and

00:26:14.116 --> 00:26:16.116 A:middle
UIFocusEnvironment protocols

00:26:16.356 --> 00:26:18.376 A:middle
also work for SpriteKit and

00:26:18.446 --> 00:26:18.806 A:middle
SceneKit.

00:26:19.486 --> 00:26:20.926 A:middle
And so, those custom sound and

00:26:20.926 --> 00:26:22.396 A:middle
animation APIs like Jon was

00:26:22.396 --> 00:26:24.136 A:middle
explaining earlier, those work

00:26:24.136 --> 00:26:26.266 A:middle
for SceneKit as well and really

00:26:26.266 --> 00:26:27.206 A:middle
helped to create a more

00:26:27.206 --> 00:26:28.416 A:middle
immersive user experience.

00:26:29.856 --> 00:26:31.256 A:middle
To learn more about working with

00:26:31.256 --> 00:26:32.856 A:middle
both SceneKit and SpriteKit we

00:26:32.856 --> 00:26:34.146 A:middle
encourage you to check out some

00:26:34.146 --> 00:26:36.226 A:middle
of these related sessions that

00:26:36.226 --> 00:26:39.396 A:middle
we're putting on this week.

00:26:40.026 --> 00:26:42.126 A:middle
Now for our grand finale today

00:26:42.846 --> 00:26:44.006 A:middle
I'd like to talk about something

00:26:44.006 --> 00:26:45.386 A:middle
that definitely affects all of

00:26:45.386 --> 00:26:46.356 A:middle
us and that's debugging.

00:26:46.916 --> 00:26:48.706 A:middle
I'm happy to say that in tvOS 11

00:26:48.706 --> 00:26:50.436 A:middle
we're introducing some great new

00:26:50.686 --> 00:26:53.116 A:middle
focus debugging tools that we've

00:26:53.116 --> 00:26:54.336 A:middle
built right into UIKit.

00:26:54.976 --> 00:26:57.936 A:middle
And first up is live focus

00:26:57.936 --> 00:26:58.856 A:middle
update logging.

00:27:00.776 --> 00:27:02.186 A:middle
By including the

00:27:02.186 --> 00:27:04.926 A:middle
UIFocusLoggingEnabled option in

00:27:04.926 --> 00:27:06.926 A:middle
your Xcode schemes launch

00:27:06.926 --> 00:27:09.286 A:middle
arguments you can turn on live

00:27:09.286 --> 00:27:10.406 A:middle
focus update logging.

00:27:10.406 --> 00:27:12.456 A:middle
Now what's really helpful about

00:27:12.456 --> 00:27:13.616 A:middle
this is that for each

00:27:13.956 --> 00:27:15.556 A:middle
programmatic focus update that

00:27:15.556 --> 00:27:17.236 A:middle
gets logged we're going to

00:27:17.236 --> 00:27:19.766 A:middle
include a step-by-step outline

00:27:19.976 --> 00:27:21.186 A:middle
of the preferred focus

00:27:21.186 --> 00:27:23.106 A:middle
environment's search logic that

00:27:23.106 --> 00:27:24.546 A:middle
the focus engine used to

00:27:24.546 --> 00:27:26.206 A:middle
determine the next focus item.

00:27:26.426 --> 00:27:27.756 A:middle
And so, this is incredibly

00:27:27.756 --> 00:27:29.886 A:middle
helpful for diagnosing issues

00:27:30.116 --> 00:27:31.066 A:middle
where focus is not

00:27:31.066 --> 00:27:32.626 A:middle
programmatically updating to the

00:27:32.626 --> 00:27:34.246 A:middle
item that we would expect it to.

00:27:34.836 --> 00:27:36.306 A:middle
And because these are logs this

00:27:36.306 --> 00:27:37.556 A:middle
can help you diagnose issues

00:27:37.556 --> 00:27:40.336 A:middle
like focus not updating to the

00:27:40.336 --> 00:27:42.596 A:middle
correct item on app launch and

00:27:42.596 --> 00:27:43.866 A:middle
during transitions.

00:27:44.876 --> 00:27:45.926 A:middle
However, this tool does come

00:27:45.926 --> 00:27:47.996 A:middle
with one warning which is that

00:27:48.226 --> 00:27:49.356 A:middle
please only use this for

00:27:49.356 --> 00:27:49.936 A:middle
debugging.

00:27:50.456 --> 00:27:51.996 A:middle
There is a nontrivial

00:27:51.996 --> 00:27:53.306 A:middle
performance cost that comes with

00:27:53.306 --> 00:27:54.196 A:middle
adding logging to your

00:27:54.196 --> 00:27:55.626 A:middle
application so you never want

00:27:55.626 --> 00:27:56.606 A:middle
this enabled for shipping

00:27:56.606 --> 00:27:57.276 A:middle
applications.

00:27:57.926 --> 00:28:01.856 A:middle
So that's focus update logging.

00:28:03.656 --> 00:28:04.786 A:middle
The next tool that we're

00:28:04.786 --> 00:28:05.726 A:middle
unveiling today is

00:28:05.726 --> 00:28:08.016 A:middle
UIFocusDebugger which is a new

00:28:08.016 --> 00:28:09.686 A:middle
class that we're exposing in

00:28:09.686 --> 00:28:10.706 A:middle
tvOS 11.

00:28:12.326 --> 00:28:14.956 A:middle
UIFocusDebugger is a tool for

00:28:14.956 --> 00:28:16.636 A:middle
diagnosing focus related issues

00:28:16.706 --> 00:28:19.926 A:middle
at runtime in your app and this

00:28:19.926 --> 00:28:20.466 A:middle
is really cool.

00:28:20.466 --> 00:28:21.896 A:middle
It's structured like a miniature

00:28:21.896 --> 00:28:23.636 A:middle
command line tool that's built

00:28:23.636 --> 00:28:25.346 A:middle
right into UIKit available for

00:28:25.346 --> 00:28:26.156 A:middle
you to use.

00:28:26.616 --> 00:28:28.196 A:middle
To take advantage of it all you

00:28:28.196 --> 00:28:29.776 A:middle
need to do is call any of its

00:28:29.776 --> 00:28:32.596 A:middle
methods from LLDB while your app

00:28:32.596 --> 00:28:33.186 A:middle
is paused.

00:28:34.086 --> 00:28:35.046 A:middle
Let's take a look at some of its

00:28:35.046 --> 00:28:35.676 A:middle
capabilities.

00:28:37.696 --> 00:28:39.276 A:middle
The simplest one is that you can

00:28:39.406 --> 00:28:41.196 A:middle
simply call status to quickly

00:28:41.196 --> 00:28:42.226 A:middle
print out the currently focused

00:28:42.226 --> 00:28:43.026 A:middle
item at any time.

00:28:43.096 --> 00:28:45.636 A:middle
And this is often step one in

00:28:45.636 --> 00:28:47.016 A:middle
diagnosing some focus related

00:28:47.016 --> 00:28:48.816 A:middle
issue, especially if you can't

00:28:48.986 --> 00:28:50.196 A:middle
see where the currently focused

00:28:50.196 --> 00:28:52.836 A:middle
item is.

00:28:53.196 --> 00:28:54.686 A:middle
Next, you can use the simulate

00:28:54.686 --> 00:28:56.336 A:middle
focus update request from

00:28:56.336 --> 00:28:58.256 A:middle
environment method to diagnose

00:28:58.306 --> 00:28:59.676 A:middle
issues related to your app's

00:28:59.816 --> 00:29:00.846 A:middle
preferred focus logic.

00:29:01.716 --> 00:29:04.106 A:middle
Calling this method is similar

00:29:04.106 --> 00:29:04.996 A:middle
to calling the

00:29:05.096 --> 00:29:06.916 A:middle
setNeedsFocusUpdate API and

00:29:06.916 --> 00:29:08.546 A:middle
having that focus update execute

00:29:08.546 --> 00:29:09.966 A:middle
on the environment that you pass

00:29:09.966 --> 00:29:10.636 A:middle
in immediately.

00:29:10.636 --> 00:29:13.236 A:middle
But what's great about this is

00:29:13.236 --> 00:29:14.596 A:middle
it outputs that same

00:29:14.596 --> 00:29:16.846 A:middle
step-by-step preferred focus

00:29:16.846 --> 00:29:18.386 A:middle
environment search logic that we

00:29:18.386 --> 00:29:19.996 A:middle
also include in the live focus

00:29:19.996 --> 00:29:20.746 A:middle
update logging.

00:29:21.996 --> 00:29:24.096 A:middle
But with this simulation method

00:29:24.236 --> 00:29:25.816 A:middle
you can simulate any focus

00:29:25.816 --> 00:29:26.736 A:middle
update anywhere in your

00:29:26.736 --> 00:29:27.886 A:middle
application without having to

00:29:27.886 --> 00:29:29.256 A:middle
actually trigger that focus

00:29:29.256 --> 00:29:31.786 A:middle
update manually in your UI.

00:29:31.956 --> 00:29:33.516 A:middle
And so, this helps with quickly

00:29:33.516 --> 00:29:35.246 A:middle
diagnosing different preferred

00:29:35.246 --> 00:29:36.836 A:middle
focus environments issues in

00:29:36.886 --> 00:29:37.716 A:middle
different places of your app.

00:29:42.176 --> 00:29:43.806 A:middle
Personally, my favorite tool in

00:29:43.806 --> 00:29:46.126 A:middle
UIFocusDebugger is this next

00:29:46.126 --> 00:29:47.626 A:middle
method, check focus ability for

00:29:47.626 --> 00:29:47.926 A:middle
item.

00:29:48.606 --> 00:29:50.106 A:middle
And this is used to print out a

00:29:50.106 --> 00:29:52.246 A:middle
list of potential issues that

00:29:52.246 --> 00:29:53.996 A:middle
may cause an item to not be

00:29:53.996 --> 00:29:54.566 A:middle
focusable.

00:29:56.256 --> 00:29:57.436 A:middle
We've all had that kind of issue

00:29:57.436 --> 00:29:58.886 A:middle
where there is some item on the

00:29:58.886 --> 00:30:01.016 A:middle
screen that we expect to be

00:30:01.016 --> 00:30:02.596 A:middle
focusable, but for some reason

00:30:02.596 --> 00:30:03.656 A:middle
we just can't focus on it and we

00:30:03.656 --> 00:30:03.976 A:middle
don't know why.

00:30:04.556 --> 00:30:07.076 A:middle
And in fact, there are many

00:30:07.076 --> 00:30:08.826 A:middle
different reasons why an item

00:30:08.916 --> 00:30:11.126 A:middle
might not be focusable and they

00:30:11.126 --> 00:30:12.616 A:middle
could be issues not just with

00:30:12.616 --> 00:30:14.226 A:middle
that item itself, but with

00:30:14.306 --> 00:30:15.676 A:middle
ancestors of that item that

00:30:15.676 --> 00:30:16.556 A:middle
affect their children.

00:30:17.736 --> 00:30:18.846 A:middle
And so, this is where this new

00:30:18.846 --> 00:30:20.586 A:middle
focusability for item method

00:30:20.826 --> 00:30:21.726 A:middle
really shines.

00:30:22.226 --> 00:30:24.266 A:middle
It will automatically detect and

00:30:24.266 --> 00:30:25.856 A:middle
diagnose all of these potential

00:30:25.856 --> 00:30:27.656 A:middle
issues for you and print out a

00:30:27.656 --> 00:30:29.186 A:middle
list of the issues that it

00:30:29.216 --> 00:30:31.016 A:middle
detects and this allows you to

00:30:31.016 --> 00:30:32.086 A:middle
save a ton of time.

00:30:32.086 --> 00:30:34.236 A:middle
Obviously, investigating all of

00:30:34.236 --> 00:30:36.276 A:middle
these issues on your own would

00:30:36.276 --> 00:30:38.586 A:middle
just be a huge waste of time.

00:30:38.746 --> 00:30:42.286 A:middle
And then finally, like any good

00:30:42.286 --> 00:30:43.896 A:middle
command line tool you can always

00:30:43.896 --> 00:30:45.406 A:middle
just ask UIFocusDebugger for

00:30:45.406 --> 00:30:47.226 A:middle
help and this is going to print

00:30:47.226 --> 00:30:48.576 A:middle
out a detailed list of

00:30:48.576 --> 00:30:50.096 A:middle
instructions for each of the

00:30:50.096 --> 00:30:52.086 A:middle
commands that are available and

00:30:52.086 --> 00:30:53.216 A:middle
so don't worry about remembering

00:30:53.216 --> 00:30:54.546 A:middle
all of these methods right now

00:30:54.656 --> 00:30:56.206 A:middle
because the help command has you

00:30:56.236 --> 00:30:56.556 A:middle
covered.

00:30:58.306 --> 00:31:00.536 A:middle
But the best way to show you all

00:31:00.536 --> 00:31:01.666 A:middle
these new tools is with a quick

00:31:01.666 --> 00:31:01.886 A:middle
demo.

00:31:11.086 --> 00:31:11.756 A:middle
All right, so I'm in the process

00:31:11.756 --> 00:31:12.526 A:middle
of building a new tvOS

00:31:12.526 --> 00:31:14.156 A:middle
application, but I've already

00:31:14.156 --> 00:31:15.636 A:middle
run into some pretty serious

00:31:15.636 --> 00:31:17.056 A:middle
focus related issues so let's

00:31:17.056 --> 00:31:18.736 A:middle
see if we can figure out what's

00:31:19.426 --> 00:31:20.186 A:middle
going on.

00:31:20.186 --> 00:31:22.686 A:middle
I'm going to build and run our

00:31:25.186 --> 00:31:25.486 A:middle
application.

00:31:26.056 --> 00:31:26.886 A:middle
All right, so this is just a

00:31:26.886 --> 00:31:28.436 A:middle
simple app that showcases some

00:31:28.436 --> 00:31:30.156 A:middle
my favorite movies and the first

00:31:30.156 --> 00:31:31.796 A:middle
thing you might notice is that

00:31:31.986 --> 00:31:33.186 A:middle
nothing appears focused

00:31:33.186 --> 00:31:33.766 A:middle
onscreen.

00:31:33.766 --> 00:31:35.236 A:middle
And in fact, if I swipe on the

00:31:35.236 --> 00:31:36.826 A:middle
remote or if I try to move focus

00:31:36.826 --> 00:31:37.776 A:middle
around the screen using the

00:31:37.776 --> 00:31:39.366 A:middle
arrow keys nothing appears

00:31:39.366 --> 00:31:39.806 A:middle
focused.

00:31:40.486 --> 00:31:42.646 A:middle
So, I'm at a loss here, don't

00:31:42.646 --> 00:31:44.086 A:middle
really know what's going, let's

00:31:44.086 --> 00:31:45.466 A:middle
see if UIFocusDebugger can help.

00:31:45.926 --> 00:31:47.346 A:middle
We're going to go back to our

00:31:47.346 --> 00:31:51.546 A:middle
application, pause it, which

00:31:51.546 --> 00:31:54.956 A:middle
will be LLDB and like I was

00:31:54.956 --> 00:31:56.356 A:middle
saying earlier, a good thing to

00:31:56.356 --> 00:31:58.546 A:middle
check is the status of the

00:31:58.546 --> 00:31:59.466 A:middle
current focus system.

00:31:59.466 --> 00:32:00.266 A:middle
So, I'm going to type in

00:32:00.266 --> 00:32:04.756 A:middle
UIFocusDebugger status and these

00:32:04.756 --> 00:32:06.536 A:middle
calls work with both Objective-C

00:32:06.536 --> 00:32:07.826 A:middle
and Swift as well.

00:32:07.826 --> 00:32:11.826 A:middle
And what status is telling me is

00:32:11.826 --> 00:32:13.756 A:middle
that there is an item currently

00:32:13.756 --> 00:32:14.896 A:middle
focused, it's one of those

00:32:14.896 --> 00:32:15.666 A:middle
poster cells.

00:32:17.066 --> 00:32:18.516 A:middle
But obviously, if we take a look

00:32:18.576 --> 00:32:20.356 A:middle
it doesn't appear focused and so

00:32:20.356 --> 00:32:21.666 A:middle
this points to some kind of

00:32:21.666 --> 00:32:23.226 A:middle
potential issue with the visual

00:32:23.226 --> 00:32:24.356 A:middle
appearance of our cells.

00:32:24.826 --> 00:32:26.516 A:middle
Let's go to our storyboard to

00:32:26.516 --> 00:32:27.736 A:middle
see if we can figure out what's

00:32:28.246 --> 00:32:30.926 A:middle
going on.

00:32:31.166 --> 00:32:31.706 A:middle
All right, I've got my

00:32:31.706 --> 00:32:33.456 A:middle
storyboard, let's open up our

00:32:33.456 --> 00:32:36.646 A:middle
collection view and we have a

00:32:36.776 --> 00:32:38.096 A:middle
template for our cell and the

00:32:38.096 --> 00:32:40.256 A:middle
cell contains an image view.

00:32:40.606 --> 00:32:41.766 A:middle
And what we want is for that

00:32:41.766 --> 00:32:43.056 A:middle
image view when the cell is

00:32:43.056 --> 00:32:44.726 A:middle
focused to float up above our

00:32:44.726 --> 00:32:44.906 A:middle
UI.

00:32:47.026 --> 00:32:47.986 A:middle
And now I'm taking a look at

00:32:47.986 --> 00:32:49.536 A:middle
this I noticed that we forgot to

00:32:49.536 --> 00:32:51.076 A:middle
switch on this adjust on

00:32:51.076 --> 00:32:53.036 A:middle
ancestor focus option and this

00:32:53.036 --> 00:32:54.156 A:middle
is what creates that floating

00:32:54.156 --> 00:32:56.106 A:middle
effect and so that's probably

00:32:56.106 --> 00:32:56.586 A:middle
our issue.

00:32:56.586 --> 00:32:58.466 A:middle
Let's rerun our application and

00:32:58.556 --> 00:32:59.656 A:middle
see if that fixes it.

00:33:06.046 --> 00:33:06.716 A:middle
Awesome, now we can move between

00:33:06.716 --> 00:33:08.676 A:middle
these cells, it clearly

00:33:08.676 --> 00:33:09.846 A:middle
indicates which cell is

00:33:09.846 --> 00:33:10.786 A:middle
currently focused with that

00:33:10.846 --> 00:33:12.506 A:middle
floating effect so we're looking

00:33:12.506 --> 00:33:13.046 A:middle
in better shape.

00:33:13.896 --> 00:33:15.166 A:middle
There is another issue with this

00:33:15.166 --> 00:33:16.446 A:middle
allocation though, which is that

00:33:16.446 --> 00:33:18.226 A:middle
I can't seem to focus on this

00:33:18.226 --> 00:33:20.656 A:middle
more info button that's in this

00:33:20.656 --> 00:33:23.476 A:middle
bottom shelf of our app and I

00:33:23.476 --> 00:33:24.236 A:middle
don't really know what's going

00:33:24.236 --> 00:33:25.426 A:middle
on there, there's nothing I can

00:33:25.426 --> 00:33:26.126 A:middle
do from here.

00:33:26.126 --> 00:33:27.106 A:middle
So, let's go back into our

00:33:27.106 --> 00:33:28.926 A:middle
application and see if we can

00:33:28.926 --> 00:33:29.816 A:middle
figure out what's going on.

00:33:30.476 --> 00:33:32.446 A:middle
We're going to go to our

00:33:32.446 --> 00:33:34.236 A:middle
mainViewController, set up

00:33:34.236 --> 00:33:37.006 A:middle
breakpoints, let's trigger that

00:33:37.006 --> 00:33:37.616 A:middle
breakpoints.

00:33:39.096 --> 00:33:40.096 A:middle
All right, so this is a great

00:33:40.096 --> 00:33:41.206 A:middle
opportunity to use that new

00:33:41.206 --> 00:33:42.676 A:middle
check focus ability method.

00:33:43.376 --> 00:33:44.466 A:middle
I'm going to type in P-O

00:33:46.006 --> 00:33:47.066 A:middle
UIFocusDebugger.

00:33:48.446 --> 00:33:49.536 A:middle
What's great is that we get full

00:33:49.536 --> 00:33:52.716 A:middle
autocomplete support and we're

00:33:52.716 --> 00:33:54.446 A:middle
allowed to invoke this, we need

00:33:54.446 --> 00:33:55.116 A:middle
a Swift code.

00:33:56.966 --> 00:33:58.236 A:middle
Let's check the focusability of

00:33:58.236 --> 00:33:59.436 A:middle
our more info button which I

00:33:59.436 --> 00:34:02.216 A:middle
have an outlet referenced to.

00:34:02.996 --> 00:34:04.506 A:middle
All right, so it detected an

00:34:04.506 --> 00:34:05.826 A:middle
issue and what this is telling

00:34:05.826 --> 00:34:07.366 A:middle
us is that the item is being

00:34:07.366 --> 00:34:09.206 A:middle
visually occluded, that's

00:34:09.206 --> 00:34:10.956 A:middle
visually blocked by some other

00:34:10.956 --> 00:34:11.866 A:middle
item on the screen.

00:34:12.506 --> 00:34:14.756 A:middle
And it really helpfully even

00:34:14.916 --> 00:34:16.246 A:middle
printed out a reference to the

00:34:16.246 --> 00:34:18.366 A:middle
item that it thinks is causing

00:34:18.366 --> 00:34:18.756 A:middle
the problem.

00:34:19.526 --> 00:34:20.846 A:middle
Let's go back to our storyboard

00:34:21.386 --> 00:34:22.586 A:middle
to see if we can figure out

00:34:22.586 --> 00:34:22.976 A:middle
what's going on here.

00:34:30.016 --> 00:34:30.436 A:middle
All right, I'm going to go to

00:34:30.466 --> 00:34:30.976 A:middle
our mainViewController.

00:34:35.196 --> 00:34:36.076 A:middle
All right, so here's our more

00:34:36.076 --> 00:34:36.526 A:middle
info button.

00:34:37.416 --> 00:34:41.356 A:middle
So, it said that we were being

00:34:41.356 --> 00:34:43.466 A:middle
visually occluded by some other

00:34:43.466 --> 00:34:46.196 A:middle
item, but I can obviously see

00:34:46.196 --> 00:34:47.756 A:middle
this more info button here so

00:34:47.756 --> 00:34:48.356 A:middle
what's going on.

00:34:49.546 --> 00:34:50.396 A:middle
Well now I'm looking at the

00:34:50.396 --> 00:34:51.776 A:middle
storyboard I notice this other

00:34:51.776 --> 00:34:53.516 A:middle
sibling view to our more info

00:34:53.516 --> 00:34:54.636 A:middle
button and this is a

00:34:54.636 --> 00:34:57.306 A:middle
semitransparent white view that

00:34:57.306 --> 00:34:58.886 A:middle
we use as the background of the

00:34:58.886 --> 00:35:00.546 A:middle
bottom shelf in our application.

00:35:02.156 --> 00:35:03.586 A:middle
And I'm noticing that this view

00:35:03.586 --> 00:35:05.296 A:middle
was accidentally placed on top

00:35:05.296 --> 00:35:06.246 A:middle
of our more info button, but

00:35:06.246 --> 00:35:07.396 A:middle
that was really hard to see

00:35:07.396 --> 00:35:08.926 A:middle
because it's semitransparent.

00:35:09.776 --> 00:35:11.296 A:middle
So, let's try dragging this just

00:35:11.296 --> 00:35:13.526 A:middle
below our more info button and

00:35:13.526 --> 00:35:15.116 A:middle
relaunch our application and see

00:35:15.116 --> 00:35:15.976 A:middle
if that fixes the issue.

00:35:24.436 --> 00:35:25.476 A:middle
All right, let's try that again.

00:35:32.136 --> 00:35:32.846 A:middle
All right, make that a little

00:35:32.846 --> 00:35:33.176 A:middle
bit bigger.

00:35:34.226 --> 00:35:37.136 A:middle
Okay now I can go and focus on

00:35:37.136 --> 00:35:38.426 A:middle
that more info button.

00:35:38.806 --> 00:35:40.046 A:middle
As our application is looking in

00:35:40.046 --> 00:35:41.806 A:middle
better shape now we can start to

00:35:41.806 --> 00:35:43.356 A:middle
move on to the more important

00:35:43.356 --> 00:35:45.166 A:middle
work of building out our new

00:35:45.166 --> 00:35:45.676 A:middle
features.

00:35:45.966 --> 00:35:47.476 A:middle
Let's [inaudible] back to the

00:35:47.476 --> 00:35:47.976 A:middle
presentation.

00:35:48.516 --> 00:35:52.666 A:middle
[ Applause ]

00:35:53.166 --> 00:35:54.696 A:middle
So that's just a quick example

00:35:54.696 --> 00:35:56.466 A:middle
of how UIFocusDebugger helped us

00:35:56.496 --> 00:35:58.256 A:middle
to identify those kinds of

00:35:58.256 --> 00:35:59.756 A:middle
simple mistakes that are easy to

00:35:59.756 --> 00:36:01.636 A:middle
fix, but that can nonetheless

00:36:02.076 --> 00:36:03.666 A:middle
waste a ton of time during

00:36:03.666 --> 00:36:04.966 A:middle
application development as we

00:36:04.966 --> 00:36:06.016 A:middle
try to track them down.

00:36:08.126 --> 00:36:09.976 A:middle
So that's focused debugging in

00:36:09.976 --> 00:36:10.846 A:middle
tvOS 11.

00:36:12.526 --> 00:36:13.846 A:middle
To recap our session for today.

00:36:16.326 --> 00:36:17.666 A:middle
Please take advantage of the new

00:36:17.666 --> 00:36:19.886 A:middle
focus update notifications and

00:36:19.886 --> 00:36:21.196 A:middle
the protocol extension methods

00:36:21.196 --> 00:36:23.246 A:middle
that we're adding in tvOS 11 in

00:36:23.246 --> 00:36:25.126 A:middle
order to accomplish common tasks

00:36:25.276 --> 00:36:26.006 A:middle
with less code.

00:36:28.176 --> 00:36:29.556 A:middle
You can use the new animation

00:36:29.556 --> 00:36:32.116 A:middle
APIs and the custom sound APIs

00:36:32.116 --> 00:36:33.656 A:middle
that Jon was talking about

00:36:33.656 --> 00:36:35.136 A:middle
earlier in this session in order

00:36:35.136 --> 00:36:36.736 A:middle
to provide a more immersive

00:36:36.986 --> 00:36:38.646 A:middle
experience for your apps and

00:36:38.646 --> 00:36:39.106 A:middle
games.

00:36:40.796 --> 00:36:41.786 A:middle
Definitely check out the new

00:36:41.786 --> 00:36:43.026 A:middle
focus interaction support in

00:36:43.116 --> 00:36:43.626 A:middle
SceneKit.

00:36:43.816 --> 00:36:45.306 A:middle
This is a great way to add

00:36:45.306 --> 00:36:46.956 A:middle
interactivity to your SceneKit

00:36:46.956 --> 00:36:47.356 A:middle
games.

00:36:48.696 --> 00:36:50.576 A:middle
And then finally, use the new

00:36:50.576 --> 00:36:52.006 A:middle
focus debugging tools to save

00:36:52.006 --> 00:36:53.306 A:middle
yourself a lot of time.

00:36:55.586 --> 00:36:56.696 A:middle
For more information on today's

00:36:56.696 --> 00:36:57.526 A:middle
session, you can go to

00:36:57.526 --> 00:36:58.816 A:middle
developer.apple.com.

00:37:00.246 --> 00:37:01.546 A:middle
If you're interested in learning

00:37:01.546 --> 00:37:03.046 A:middle
more about developing for tvOS

00:37:03.046 --> 00:37:04.056 A:middle
you can check out some of these

00:37:04.056 --> 00:37:05.176 A:middle
related sessions that we're

00:37:05.176 --> 00:37:05.756 A:middle
putting on this week.

00:37:06.386 --> 00:37:06.976 A:middle
Thank you very much.