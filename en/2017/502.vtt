WEBVTT

00:00:27.096 --> 00:00:27.806 A:middle
&gt;&gt; Hi.

00:00:28.516 --> 00:00:30.636 A:middle
[ Applause ]

00:00:31.136 --> 00:00:32.546 A:middle
&gt;&gt; We love music at Apple.

00:00:33.376 --> 00:00:34.726 A:middle
As Tim said yesterday in the

00:00:34.726 --> 00:00:37.016 A:middle
keynote, it's a fundamental part

00:00:37.016 --> 00:00:37.736 A:middle
of our DNA.

00:00:38.706 --> 00:00:40.646 A:middle
My name is Tim, and I'm here

00:00:40.646 --> 00:00:42.506 A:middle
today to introduce you to

00:00:42.506 --> 00:00:45.766 A:middle
MusicKit, a way for you to

00:00:45.766 --> 00:00:47.876 A:middle
integrate streaming music with

00:00:47.876 --> 00:00:49.166 A:middle
Apple Music content.

00:00:50.546 --> 00:00:51.966 A:middle
With MusicKit, you're going to

00:00:51.966 --> 00:00:57.466 A:middle
get access to artists, albums

00:00:57.466 --> 00:01:03.036 A:middle
and songs, playlists, activities

00:00:57.466 --> 00:01:03.036 A:middle
and songs, playlists, activities

00:01:03.036 --> 00:01:03.756 A:middle
and curators.

00:01:04.686 --> 00:01:06.656 A:middle
We also provide operations for

00:01:06.656 --> 00:01:12.206 A:middle
discovery, like search, and

00:01:12.206 --> 00:01:15.726 A:middle
charts, and if the user

00:01:15.726 --> 00:01:16.726 A:middle
authorizes your app,

00:01:17.586 --> 00:01:19.196 A:middle
personalized recommendations

00:01:19.196 --> 00:01:20.416 A:middle
that are tailored to the user's

00:01:20.416 --> 00:01:20.976 A:middle
taste or their activity.

00:01:26.496 --> 00:01:32.946 A:middle
MusicKit is two things; it's a

00:01:33.186 --> 00:01:36.466 A:middle
collection of client APIs in the

00:01:36.466 --> 00:01:41.426 A:middle
iOS SDK and a set of web

00:01:41.426 --> 00:01:42.586 A:middle
services that provide

00:01:42.586 --> 00:01:43.716 A:middle
personalized and cataloged

00:01:43.716 --> 00:01:43.956 A:middle
content.

00:01:49.356 --> 00:01:51.436 A:middle
I'll be talking about the web

00:01:51.436 --> 00:01:53.696 A:middle
services part, which we call

00:01:54.156 --> 00:01:55.416 A:middle
Apple Music API.

00:01:55.416 --> 00:01:59.596 A:middle
These are some of the topics

00:01:59.596 --> 00:02:00.376 A:middle
I'll be discussing.

00:01:59.596 --> 00:02:00.376 A:middle
I'll be discussing.

00:02:01.006 --> 00:02:02.356 A:middle
I'll go a little into how to

00:02:02.356 --> 00:02:04.656 A:middle
format a request, how we

00:02:04.656 --> 00:02:05.966 A:middle
represent the content with

00:02:05.966 --> 00:02:07.686 A:middle
resources and relationships,

00:02:08.936 --> 00:02:10.376 A:middle
some detail about limits and

00:02:10.376 --> 00:02:11.206 A:middle
pagination.

00:02:12.416 --> 00:02:13.716 A:middle
My colleague Joel will give a

00:02:13.716 --> 00:02:14.286 A:middle
brief demo.

00:02:15.756 --> 00:02:16.846 A:middle
I'll touch on personalized

00:02:16.846 --> 00:02:19.896 A:middle
services; and finally, talk

00:02:19.896 --> 00:02:21.326 A:middle
about how to get access to the

00:02:21.326 --> 00:02:25.036 A:middle
Apple Music API.

00:02:25.266 --> 00:02:27.056 A:middle
No talk about a Web services API

00:02:27.236 --> 00:02:28.956 A:middle
would be complete without

00:02:28.956 --> 00:02:31.326 A:middle
talking about the URL structure.

00:02:32.256 --> 00:02:34.666 A:middle
Apple Music API only supports

00:02:34.666 --> 00:02:37.356 A:middle
the secure HTTPS scheme, and

00:02:37.356 --> 00:02:38.496 A:middle
it's hosted at

00:02:38.496 --> 00:02:41.476 A:middle
api.music.apple.com.

00:02:42.626 --> 00:02:44.586 A:middle
The first element in the URL

00:02:44.586 --> 00:02:46.506 A:middle
path is the version.

00:02:47.586 --> 00:02:48.876 A:middle
Current version is V1, and if we

00:02:49.596 --> 00:02:52.216 A:middle
make significant improvements or

00:02:52.216 --> 00:02:53.486 A:middle
backwards incompatible changes,

00:02:53.486 --> 00:02:53.976 A:middle
we'll bump the version.

00:02:58.286 --> 00:02:59.726 A:middle
The next part of the path is

00:02:59.726 --> 00:03:01.326 A:middle
cataloged, and this just

00:02:59.726 --> 00:03:01.326 A:middle
cataloged, and this just

00:03:01.326 --> 00:03:02.836 A:middle
indicates that this is the Apple

00:03:02.836 --> 00:03:04.396 A:middle
Music streaming content catalog.

00:03:05.736 --> 00:03:10.746 A:middle
A note that not all content is

00:03:10.746 --> 00:03:12.656 A:middle
available in every area or

00:03:12.656 --> 00:03:14.856 A:middle
region of the world, and so we

00:03:14.856 --> 00:03:15.886 A:middle
introduced the concept of

00:03:15.886 --> 00:03:18.936 A:middle
Storefront in the path.

00:03:18.936 --> 00:03:21.946 A:middle
Storefront scopes the catalog to

00:03:21.946 --> 00:03:23.606 A:middle
the area region where content is

00:03:23.606 --> 00:03:25.106 A:middle
available so that you can

00:03:25.106 --> 00:03:27.376 A:middle
provide relevant and playable

00:03:27.376 --> 00:03:27.976 A:middle
music to your users.

00:03:33.136 --> 00:03:35.616 A:middle
The next part is the API.

00:03:35.886 --> 00:03:37.266 A:middle
This just indicates the resource

00:03:37.266 --> 00:03:38.526 A:middle
you'd like to request or the

00:03:38.526 --> 00:03:39.546 A:middle
operations you'd like to

00:03:39.546 --> 00:03:40.086 A:middle
perform.

00:03:41.406 --> 00:03:43.716 A:middle
And finally, we have a set of

00:03:43.716 --> 00:03:45.736 A:middle
parameters that you can use to

00:03:45.736 --> 00:03:46.976 A:middle
filter or expand the request.

00:03:52.156 --> 00:03:53.746 A:middle
Our API is localized.

00:03:54.906 --> 00:03:56.706 A:middle
We support many localizations,

00:03:57.506 --> 00:03:59.236 A:middle
but not all localizations are

00:03:59.236 --> 00:04:00.626 A:middle
supported in every Storefront.

00:03:59.236 --> 00:04:00.626 A:middle
supported in every Storefront.

00:04:01.626 --> 00:04:03.066 A:middle
We provide a mechanism for you

00:04:03.066 --> 00:04:05.626 A:middle
to get which Storefront supports

00:04:05.626 --> 00:04:06.926 A:middle
which localizations.

00:04:08.696 --> 00:04:10.806 A:middle
The API supports limits in

00:04:10.806 --> 00:04:12.206 A:middle
pagination, and I'll go into

00:04:12.206 --> 00:04:13.246 A:middle
some detail later in my

00:04:13.246 --> 00:04:14.856 A:middle
presentation about exactly how

00:04:14.856 --> 00:04:15.416 A:middle
that works.

00:04:16.616 --> 00:04:18.966 A:middle
And finally, every request to

00:04:18.966 --> 00:04:20.286 A:middle
Apple Music API requires a

00:04:20.286 --> 00:04:20.976 A:middle
developer token.

00:04:28.396 --> 00:04:29.746 A:middle
Representing data is an

00:04:29.746 --> 00:04:31.546 A:middle
important consideration for any

00:04:31.546 --> 00:04:31.856 A:middle
API.

00:04:33.266 --> 00:04:34.656 A:middle
We've taken our experience

00:04:34.656 --> 00:04:38.376 A:middle
building the Apple Music app to

00:04:38.376 --> 00:04:40.406 A:middle
give you an API that takes into

00:04:40.406 --> 00:04:42.126 A:middle
consideration ease of use,

00:04:42.586 --> 00:04:44.836 A:middle
flexibility, and performance.

00:04:46.676 --> 00:04:49.346 A:middle
Here, I have the first

00:04:49.346 --> 00:04:50.986 A:middle
representation of a resource,

00:04:50.986 --> 00:04:52.516 A:middle
which we call the identity form.

00:04:53.416 --> 00:04:56.126 A:middle
It includes an ID, a type of

00:04:56.126 --> 00:04:59.796 A:middle
thing that this is, and an href,

00:04:59.796 --> 00:05:01.146 A:middle
which indicates the location in

00:04:59.796 --> 00:05:01.146 A:middle
which indicates the location in

00:05:01.146 --> 00:05:02.376 A:middle
the catalog where you can find

00:05:02.376 --> 00:05:03.016 A:middle
this content.

00:05:04.176 --> 00:05:05.616 A:middle
This isn't very useful for

00:05:05.616 --> 00:05:06.026 A:middle
display.

00:05:07.276 --> 00:05:08.366 A:middle
That's why we have this type,

00:05:09.216 --> 00:05:10.436 A:middle
which is the attributes form.

00:05:10.956 --> 00:05:13.596 A:middle
This includes the identity and a

00:05:13.596 --> 00:05:15.246 A:middle
list of attributes that you can

00:05:15.246 --> 00:05:16.586 A:middle
use to display relevant

00:05:16.586 --> 00:05:17.916 A:middle
information about the content.

00:05:18.526 --> 00:05:19.586 A:middle
This includes things like

00:05:19.586 --> 00:05:21.746 A:middle
artwork and name and

00:05:21.746 --> 00:05:23.616 A:middle
description, and if the content

00:05:23.616 --> 00:05:25.376 A:middle
is playable, it will have an

00:05:25.376 --> 00:05:26.506 A:middle
attribute called play

00:05:26.506 --> 00:05:27.176 A:middle
parameters.

00:05:29.416 --> 00:05:31.366 A:middle
Finally, we have the default

00:05:31.366 --> 00:05:31.706 A:middle
form.

00:05:31.876 --> 00:05:34.156 A:middle
If you ask the Apple Music API

00:05:34.156 --> 00:05:35.776 A:middle
for a collection of things, this

00:05:35.776 --> 00:05:37.076 A:middle
is the default form that you'll

00:05:37.076 --> 00:05:37.346 A:middle
get.

00:05:37.856 --> 00:05:38.876 A:middle
It's the attributes and

00:05:38.876 --> 00:05:39.866 A:middle
relationship form.

00:05:40.576 --> 00:05:41.866 A:middle
This is all of the attributes

00:05:41.866 --> 00:05:44.086 A:middle
required for display plus

00:05:44.086 --> 00:05:45.836 A:middle
collections of content that are

00:05:45.836 --> 00:05:47.196 A:middle
related to this particular

00:05:47.196 --> 00:05:47.796 A:middle
resource.

00:05:48.336 --> 00:05:51.426 A:middle
It's a little bit about

00:05:51.426 --> 00:05:52.306 A:middle
relationships.

00:05:54.106 --> 00:05:55.716 A:middle
Here I have an album resource.

00:05:56.886 --> 00:05:58.456 A:middle
It has three relationships.

00:05:59.926 --> 00:06:01.466 A:middle
The first is a relationship to

00:05:59.926 --> 00:06:01.466 A:middle
The first is a relationship to

00:06:01.466 --> 00:06:02.056 A:middle
tracks.

00:06:02.516 --> 00:06:03.796 A:middle
This is the songs or music

00:06:03.796 --> 00:06:05.026 A:middle
videos that are attached to this

00:06:05.026 --> 00:06:05.366 A:middle
album.

00:06:06.726 --> 00:06:09.066 A:middle
The second is artists, which, of

00:06:09.066 --> 00:06:10.496 A:middle
course, is the artist that

00:06:10.866 --> 00:06:12.636 A:middle
created the song or the album;

00:06:13.916 --> 00:06:14.626 A:middle
and genres.

00:06:15.356 --> 00:06:17.046 A:middle
Genres are just the category of

00:06:17.446 --> 00:06:18.936 A:middle
music that this album belongs

00:06:18.936 --> 00:06:19.106 A:middle
in.

00:06:19.786 --> 00:06:21.206 A:middle
Now, each of these relationships

00:06:21.206 --> 00:06:22.066 A:middle
is of a different type.

00:06:23.286 --> 00:06:26.036 A:middle
The first app for tracks is an

00:06:26.076 --> 00:06:27.506 A:middle
attributes included relation.

00:06:28.546 --> 00:06:29.956 A:middle
It means if you ask for this

00:06:29.956 --> 00:06:31.966 A:middle
album, it's going to return all

00:06:31.966 --> 00:06:33.856 A:middle
of its tracks with their

00:06:33.856 --> 00:06:34.886 A:middle
attributes included.

00:06:35.176 --> 00:06:37.006 A:middle
This means that if you ask for

00:06:37.006 --> 00:06:38.366 A:middle
an album, you could get all of

00:06:38.366 --> 00:06:39.796 A:middle
the data about the songs and its

00:06:39.796 --> 00:06:40.406 A:middle
attributes.

00:06:41.826 --> 00:06:44.096 A:middle
The second type, artist, is

00:06:44.096 --> 00:06:45.016 A:middle
identifiers only.

00:06:45.216 --> 00:06:46.726 A:middle
It means we only return the

00:06:46.726 --> 00:06:49.056 A:middle
identifier form, the location,

00:06:49.056 --> 00:06:50.426 A:middle
and the kind of thing, and where

00:06:50.426 --> 00:06:51.726 A:middle
you can find it in the catalog.

00:06:52.706 --> 00:06:55.186 A:middle
And finally, we have the omitted

00:06:55.186 --> 00:06:55.836 A:middle
by default.

00:06:56.536 --> 00:06:58.316 A:middle
This is not returned in the

00:06:58.316 --> 00:07:00.446 A:middle
default representation, although

00:06:58.316 --> 00:07:00.446 A:middle
default representation, although

00:07:00.446 --> 00:07:01.916 A:middle
the relationship still exists.

00:07:02.836 --> 00:07:03.626 A:middle
So, let's look at this in

00:07:03.626 --> 00:07:04.116 A:middle
practice.

00:07:05.536 --> 00:07:07.886 A:middle
Here, I have a URL to an album,

00:07:08.986 --> 00:07:10.386 A:middle
and you can see that in the

00:07:10.386 --> 00:07:12.426 A:middle
adjacent response tracks have

00:07:12.426 --> 00:07:16.286 A:middle
attributes omitted, and artists

00:07:16.286 --> 00:07:17.626 A:middle
are the identifier form.

00:07:18.516 --> 00:07:19.726 A:middle
So, what if I wanted to make a

00:07:19.726 --> 00:07:21.306 A:middle
single call and get the

00:07:21.346 --> 00:07:24.316 A:middle
attributes for an artist.

00:07:24.316 --> 00:07:25.526 A:middle
I'd simply add the career

00:07:25.526 --> 00:07:28.486 A:middle
parameter, include and specify

00:07:28.486 --> 00:07:29.676 A:middle
the name of the relationship,

00:07:29.986 --> 00:07:31.246 A:middle
which I would like to omit the

00:07:31.246 --> 00:07:32.136 A:middle
attributes for.

00:07:33.786 --> 00:07:35.906 A:middle
And you can see that here we

00:07:35.906 --> 00:07:37.116 A:middle
have omitted the attributes for

00:07:37.116 --> 00:07:38.526 A:middle
the artist, along with the

00:07:38.526 --> 00:07:40.166 A:middle
attribute form for the tracks.

00:07:41.366 --> 00:07:42.456 A:middle
You'll notice in this response

00:07:42.456 --> 00:07:43.716 A:middle
that we don't include genres.

00:07:44.346 --> 00:07:45.326 A:middle
So, how would you include the

00:07:45.326 --> 00:07:46.686 A:middle
attribute form of genres?

00:07:48.036 --> 00:07:49.666 A:middle
You'd simply add genres to the

00:07:49.666 --> 00:07:53.256 A:middle
include career parameter, and

00:07:53.256 --> 00:07:54.836 A:middle
you can see that genres will be

00:07:54.836 --> 00:07:56.876 A:middle
omitted in the attribute form.

00:07:57.406 --> 00:07:59.776 A:middle
So, that's a little bit about

00:07:59.776 --> 00:08:00.966 A:middle
resources and relationships.

00:07:59.776 --> 00:08:00.966 A:middle
resources and relationships.

00:08:00.966 --> 00:08:02.436 A:middle
I'm now going to talk about some

00:08:02.436 --> 00:08:03.536 A:middle
limits and pagination.

00:08:04.876 --> 00:08:06.366 A:middle
So, here are the requests for

00:08:06.366 --> 00:08:07.586 A:middle
the tracks resource for an

00:08:07.586 --> 00:08:07.876 A:middle
album.

00:08:08.156 --> 00:08:10.086 A:middle
This will give me the collection

00:08:11.256 --> 00:08:13.726 A:middle
of songs for this album.

00:08:14.386 --> 00:08:15.876 A:middle
This album happens to have 9.

00:08:16.876 --> 00:08:18.306 A:middle
If I wanted to limit the number

00:08:18.306 --> 00:08:19.646 A:middle
of tracks that I would get back,

00:08:20.126 --> 00:08:22.066 A:middle
I would simply add the limit

00:08:22.066 --> 00:08:25.186 A:middle
career parameter, and let's say

00:08:25.186 --> 00:08:26.586 A:middle
I wanted a page size of 2.

00:08:27.976 --> 00:08:29.336 A:middle
This would give me the first two

00:08:29.336 --> 00:08:32.546 A:middle
songs in this album, and then it

00:08:32.546 --> 00:08:37.126 A:middle
would give me a Next key that

00:08:37.326 --> 00:08:39.155 A:middle
indicates where the rest of

00:08:39.155 --> 00:08:39.996 A:middle
these tracks live.

00:08:41.556 --> 00:08:46.326 A:middle
If I follow this next link, I

00:08:46.546 --> 00:08:48.726 A:middle
will get the rest of the tracks

00:08:48.726 --> 00:08:50.306 A:middle
for this album, songs 3 through

00:08:50.306 --> 00:08:50.626 A:middle
9.

00:08:52.056 --> 00:08:53.786 A:middle
If I wanted to implement a page

00:08:53.786 --> 00:08:57.836 A:middle
size of 2, I would simply add,

00:08:57.836 --> 00:08:59.356 A:middle
again, limit equals 2.

00:09:00.006 --> 00:09:02.016 A:middle
It would give me songs 3 and 4.

00:09:03.366 --> 00:09:06.286 A:middle
Again, a Next reference, with a

00:09:06.286 --> 00:09:07.026 A:middle
URL to where the rest of the

00:09:07.026 --> 00:09:07.976 A:middle
data for this album lives.

00:09:11.276 --> 00:09:12.846 A:middle
So, what does this look like in

00:09:12.846 --> 00:09:13.256 A:middle
practice?

00:09:14.006 --> 00:09:14.556 A:middle
Here it is.

00:09:14.816 --> 00:09:16.726 A:middle
You can see that the Next

00:09:16.726 --> 00:09:18.906 A:middle
reference is a sibling of the

00:09:18.906 --> 00:09:20.046 A:middle
collection of data that comes

00:09:20.086 --> 00:09:22.076 A:middle
back for these tracks.

00:09:23.396 --> 00:09:24.496 A:middle
So, I've talked a little bit

00:09:24.926 --> 00:09:27.416 A:middle
about resources, the

00:09:27.416 --> 00:09:30.196 A:middle
relationships, and pagination.

00:09:30.576 --> 00:09:34.256 A:middle
Let's talk about an operation.

00:09:35.756 --> 00:09:38.026 A:middle
Most of our operations come back

00:09:38.026 --> 00:09:40.686 A:middle
as collections of resources

00:09:40.686 --> 00:09:41.996 A:middle
grouped by the type of thing

00:09:41.996 --> 00:09:42.536 A:middle
that they are.

00:09:43.036 --> 00:09:45.586 A:middle
For example, a search for Khalid

00:09:45.796 --> 00:09:47.426 A:middle
would bring back albums,

00:09:47.946 --> 00:09:50.286 A:middle
artists, songs, and playlists.

00:09:50.796 --> 00:09:52.426 A:middle
If I wanted to limit the type of

00:09:52.426 --> 00:09:53.926 A:middle
things that came back from a

00:09:53.926 --> 00:09:55.796 A:middle
search, I would simply add the

00:09:55.796 --> 00:09:57.436 A:middle
"types" career parameter and

00:09:57.436 --> 00:10:00.186 A:middle
specify the kind of thing that I

00:09:57.436 --> 00:10:00.186 A:middle
specify the kind of thing that I

00:10:00.186 --> 00:10:00.926 A:middle
would like to come back.

00:10:01.766 --> 00:10:04.366 A:middle
Here, I'm asking for albums, and

00:10:04.366 --> 00:10:05.846 A:middle
when I call it, I'll just get a

00:10:05.846 --> 00:10:06.946 A:middle
collection of albums.

00:10:09.196 --> 00:10:10.566 A:middle
And now, I'd like to welcome my

00:10:10.566 --> 00:10:12.076 A:middle
colleague Joel onto the stage to

00:10:12.076 --> 00:10:13.636 A:middle
do a quick Playground demo of a

00:10:13.636 --> 00:10:13.946 A:middle
Search request.

00:10:14.516 --> 00:10:17.686 A:middle
[ Applause ]

00:10:18.186 --> 00:10:20.986 A:middle
&gt;&gt; Thank you, Tim.

00:10:21.216 --> 00:10:22.496 A:middle
Hi, my name is Joel, and I'd

00:10:22.496 --> 00:10:23.826 A:middle
like to show you just how easy

00:10:23.826 --> 00:10:26.186 A:middle
it is to fetch content from

00:10:26.186 --> 00:10:28.706 A:middle
Apple Music to enrich your apps

00:10:28.786 --> 00:10:29.436 A:middle
in Swift.

00:10:31.116 --> 00:10:32.786 A:middle
To do that, I'd like to show you

00:10:32.786 --> 00:10:34.456 A:middle
how to fetch some content from

00:10:34.456 --> 00:10:35.856 A:middle
this catalog search endpoint,

00:10:36.436 --> 00:10:37.986 A:middle
and here we'll be searching for

00:10:38.166 --> 00:10:39.446 A:middle
albums from Khalid.

00:10:40.486 --> 00:10:43.036 A:middle
To do so, we'll simply start

00:10:43.126 --> 00:10:44.856 A:middle
building the URL for this search

00:10:44.856 --> 00:10:46.876 A:middle
request, using URL components,

00:10:47.006 --> 00:10:48.396 A:middle
and one important part of this

00:10:48.396 --> 00:10:51.766 A:middle
URL in the path is the inclusion

00:10:51.766 --> 00:10:53.276 A:middle
of the Storefront county code

00:10:53.766 --> 00:10:54.946 A:middle
corresponding to the user.

00:10:55.436 --> 00:10:58.516 A:middle
Then, you need to add a few

00:10:58.516 --> 00:11:00.256 A:middle
query parameters to this

00:10:58.516 --> 00:11:00.256 A:middle
query parameters to this

00:11:00.256 --> 00:11:02.366 A:middle
request, and we'll do so by

00:11:02.576 --> 00:11:04.406 A:middle
using query items, and we'll

00:11:04.406 --> 00:11:07.286 A:middle
simply set the term to "Kahalid"

00:11:07.666 --> 00:11:09.276 A:middle
and type 2 albums.

00:11:09.846 --> 00:11:12.986 A:middle
Once you have that, you can

00:11:12.986 --> 00:11:14.516 A:middle
construct a fully formed URL,

00:11:15.136 --> 00:11:16.646 A:middle
and then a URL request with

00:11:16.646 --> 00:11:16.936 A:middle
that.

00:11:18.016 --> 00:11:20.316 A:middle
And then, you need to include an

00:11:20.316 --> 00:11:22.546 A:middle
HTTP header to this URL request,

00:11:22.546 --> 00:11:23.626 A:middle
which is the authorization

00:11:23.626 --> 00:11:26.236 A:middle
header, and this is useful to

00:11:26.236 --> 00:11:27.846 A:middle
authenticate your app with Apple

00:11:27.846 --> 00:11:28.426 A:middle
Music API.

00:11:29.906 --> 00:11:31.026 A:middle
Here, we'll be using the

00:11:31.026 --> 00:11:33.236 A:middle
developer token as a part of the

00:11:33.236 --> 00:11:35.536 A:middle
value of this HTTP header with

00:11:35.536 --> 00:11:36.566 A:middle
the "Bearer" prefix.

00:11:37.026 --> 00:11:40.706 A:middle
Next stop, we can load the data,

00:11:40.986 --> 00:11:44.326 A:middle
using URL session, and with this

00:11:44.326 --> 00:11:46.576 A:middle
raw JSON data, we'll simply use

00:11:46.576 --> 00:11:48.486 A:middle
the new JSON Decoder in Swift

00:11:48.486 --> 00:11:51.216 A:middle
4.0 to parse this data, and it

00:11:51.216 --> 00:11:52.686 A:middle
really makes it easy to convert

00:11:52.686 --> 00:11:54.796 A:middle
JSON data into strongly typed

00:11:55.096 --> 00:11:56.076 A:middle
Swift structures.

00:11:56.396 --> 00:11:58.406 A:middle
You can simply define a few

00:11:58.406 --> 00:12:00.096 A:middle
Swift structures that conform to

00:11:58.406 --> 00:12:00.096 A:middle
Swift structures that conform to

00:12:00.096 --> 00:12:03.026 A:middle
the codable protocol, and then

00:12:03.246 --> 00:12:05.396 A:middle
you can feed such structures to

00:12:05.396 --> 00:12:06.296 A:middle
the JSON decoder.

00:12:06.296 --> 00:12:07.596 A:middle
In this case, I'll be passing

00:12:07.596 --> 00:12:08.906 A:middle
the Catalog Search Results

00:12:09.276 --> 00:12:11.356 A:middle
struct to the JSON Decoder,

00:12:11.476 --> 00:12:12.726 A:middle
along with the Search data, and

00:12:13.126 --> 00:12:14.746 A:middle
then I can take a peek into the

00:12:14.746 --> 00:12:15.366 A:middle
results.

00:12:16.026 --> 00:12:17.466 A:middle
So, here, I'll be looking for

00:12:17.466 --> 00:12:18.886 A:middle
the first album in these

00:12:18.886 --> 00:12:20.686 A:middle
results, and let's take a look

00:12:20.686 --> 00:12:23.696 A:middle
at the attributes we get.

00:12:23.886 --> 00:12:25.746 A:middle
Sure enough, we get the American

00:12:25.746 --> 00:12:28.186 A:middle
Teen Album by Khalid, including

00:12:28.186 --> 00:12:30.406 A:middle
the other related attributes.

00:12:31.276 --> 00:12:32.736 A:middle
And as you can see, we also have

00:12:32.736 --> 00:12:33.586 A:middle
some information about the

00:12:33.586 --> 00:12:35.846 A:middle
artwork, and this comes with a

00:12:35.846 --> 00:12:36.236 A:middle
URL.

00:12:36.236 --> 00:12:37.666 A:middle
But if you really take a look at

00:12:37.666 --> 00:12:39.126 A:middle
this URL, it's more of a URL

00:12:39.126 --> 00:12:40.656 A:middle
format string because it allows

00:12:40.656 --> 00:12:42.946 A:middle
you to replace a width and

00:12:42.946 --> 00:12:44.726 A:middle
height token at the end of the

00:12:44.726 --> 00:12:47.126 A:middle
URL with the desired width and

00:12:47.126 --> 00:12:48.736 A:middle
height to match the user end

00:12:48.736 --> 00:12:50.256 A:middle
face in your app.

00:12:50.766 --> 00:12:53.486 A:middle
So, to fetch the artwork for

00:12:53.486 --> 00:12:56.216 A:middle
this album, I just created the

00:12:56.216 --> 00:12:57.966 A:middle
Helper method on this artwork

00:12:57.966 --> 00:12:59.796 A:middle
structure, and it's really

00:12:59.796 --> 00:13:00.476 A:middle
simple.

00:12:59.796 --> 00:13:00.476 A:middle
simple.

00:13:00.616 --> 00:13:01.976 A:middle
We'll just replace the width

00:13:02.046 --> 00:13:06.846 A:middle
token, w with the desired width

00:13:07.306 --> 00:13:10.046 A:middle
here, and then we'll do the same

00:13:10.046 --> 00:13:10.646 A:middle
for the height.

00:13:10.646 --> 00:13:12.446 A:middle
And because most artwork for

00:13:12.446 --> 00:13:13.706 A:middle
music content is perfectly

00:13:13.706 --> 00:13:14.636 A:middle
square, we'll simply use the

00:13:14.636 --> 00:13:15.366 A:middle
same width in height.

00:13:15.366 --> 00:13:18.086 A:middle
And with that, you have a fully

00:13:18.086 --> 00:13:18.726 A:middle
formed URL.

00:13:19.916 --> 00:13:22.606 A:middle
So, here, I just constructed a

00:13:22.606 --> 00:13:26.396 A:middle
URL for this album that has a

00:13:26.396 --> 00:13:28.726 A:middle
width of 1200 pixels, and let's

00:13:28.726 --> 00:13:29.976 A:middle
just take a look at what we get.

00:13:33.686 --> 00:13:34.546 A:middle
Here it is.

00:13:34.546 --> 00:13:35.826 A:middle
This is the album artwork for

00:13:35.826 --> 00:13:37.166 A:middle
this American Teen album by

00:13:37.166 --> 00:13:37.586 A:middle
Khalid.

00:13:37.966 --> 00:13:41.176 A:middle
So, this is how easy it is to

00:13:41.176 --> 00:13:42.576 A:middle
fetch content from Apple Music.

00:13:42.686 --> 00:13:43.916 A:middle
Now, I'd like to head it back to

00:13:43.916 --> 00:13:45.486 A:middle
Tim, and he'll tell you all

00:13:45.486 --> 00:13:46.786 A:middle
about personalized requests.

00:13:46.786 --> 00:13:46.966 A:middle
Thank you.

00:13:47.516 --> 00:13:50.896 A:middle
[ Applause ]

00:13:51.396 --> 00:13:51.876 A:middle
&gt;&gt; Thanks, Joel.

00:13:54.476 --> 00:13:56.286 A:middle
So, I'm going to talk a little

00:13:56.286 --> 00:13:58.016 A:middle
bit about personalized requests

00:13:58.016 --> 00:13:59.286 A:middle
with the Apple Music API.

00:14:00.656 --> 00:14:01.716 A:middle
The URL structure is just a

00:14:01.716 --> 00:14:02.516 A:middle
little bit different.

00:14:03.026 --> 00:14:05.286 A:middle
After the Version, you'll see

00:14:05.286 --> 00:14:06.906 A:middle
that every personalized call

00:14:07.196 --> 00:14:08.046 A:middle
starts with me.

00:14:08.256 --> 00:14:09.656 A:middle
Here, I have a URL that will

00:14:09.656 --> 00:14:10.816 A:middle
give me the recently played

00:14:10.816 --> 00:14:14.486 A:middle
items for a user's account.

00:14:16.116 --> 00:14:18.426 A:middle
So, you'll also notice that the

00:14:18.426 --> 00:14:20.976 A:middle
Storefront part of the path is

00:14:20.976 --> 00:14:21.376 A:middle
missing.

00:14:22.096 --> 00:14:24.416 A:middle
That's because a user's account

00:14:24.516 --> 00:14:26.676 A:middle
is bound to the Storefront, so

00:14:26.676 --> 00:14:28.376 A:middle
they can only play content that

00:14:28.376 --> 00:14:29.646 A:middle
is available in the Storefront,

00:14:29.646 --> 00:14:31.116 A:middle
which their account is

00:14:31.116 --> 00:14:32.506 A:middle
legitimately available for.

00:14:33.856 --> 00:14:36.456 A:middle
So, what do you need to play?

00:14:36.636 --> 00:14:37.396 A:middle
What do you need to get

00:14:37.396 --> 00:14:38.246 A:middle
personalized data?

00:14:38.416 --> 00:14:40.216 A:middle
The user must have an Apple

00:14:40.216 --> 00:14:42.616 A:middle
Music subscription, and every

00:14:42.616 --> 00:14:44.176 A:middle
call to a personalized request

00:14:44.176 --> 00:14:46.316 A:middle
requires two things, the

00:14:46.316 --> 00:14:48.556 A:middle
developer token, and a Music

00:14:48.556 --> 00:14:50.146 A:middle
User token, which Joel will show

00:14:50.146 --> 00:14:51.246 A:middle
you how to get in the latter

00:14:51.246 --> 00:14:52.376 A:middle
half of the presentation.

00:14:55.046 --> 00:14:56.406 A:middle
Now, how do I get access to the

00:14:58.156 --> 00:14:58.276 A:middle
API?

00:14:58.486 --> 00:15:00.636 A:middle
One, you have to be a member of

00:14:58.486 --> 00:15:00.636 A:middle
One, you have to be a member of

00:15:00.636 --> 00:15:01.936 A:middle
the Apple Developer Program.

00:15:04.006 --> 00:15:05.996 A:middle
Second thing you need is a

00:15:05.996 --> 00:15:08.486 A:middle
MusicKit private key.

00:15:08.726 --> 00:15:10.126 A:middle
You can find a MusicKit private

00:15:10.126 --> 00:15:11.856 A:middle
key in the Accounts section of

00:15:11.856 --> 00:15:13.476 A:middle
the Apple Developer Portal in

00:15:13.476 --> 00:15:15.666 A:middle
the Certificates and Identities

00:15:15.666 --> 00:15:15.936 A:middle
area.

00:15:15.936 --> 00:15:17.936 A:middle
Once you have the Music private

00:15:17.936 --> 00:15:19.906 A:middle
key, you can use that to sign

00:15:20.006 --> 00:15:20.986 A:middle
the Developer token.

00:15:21.506 --> 00:15:23.386 A:middle
The Developer token is in JSON

00:15:23.386 --> 00:15:25.866 A:middle
Web Token format, much like the

00:15:25.866 --> 00:15:28.856 A:middle
APNS token, and it's required,

00:15:28.856 --> 00:15:31.256 A:middle
as I mentioned previously, in

00:15:31.256 --> 00:15:32.886 A:middle
the authorization header for

00:15:32.886 --> 00:15:35.246 A:middle
every Apple Music API request.

00:15:37.696 --> 00:15:39.586 A:middle
Just one note about security,

00:15:40.496 --> 00:15:42.016 A:middle
keep you MusicKit private key

00:15:42.016 --> 00:15:42.426 A:middle
secure.

00:15:42.906 --> 00:15:44.796 A:middle
Don't embed it in the binaries

00:15:44.796 --> 00:15:46.226 A:middle
of your application.

00:15:46.686 --> 00:15:48.306 A:middle
What we recommend is that you

00:15:48.306 --> 00:15:50.076 A:middle
dynamically generate your

00:15:50.076 --> 00:15:52.356 A:middle
developer tokens, preferably on

00:15:52.356 --> 00:15:53.436 A:middle
a server that's within your

00:15:53.436 --> 00:15:54.386 A:middle
control and that you have

00:15:54.386 --> 00:15:54.976 A:middle
authorization access for.

00:15:59.486 --> 00:16:01.606 A:middle
Some notes about the format of a

00:15:59.486 --> 00:16:01.606 A:middle
Some notes about the format of a

00:16:01.766 --> 00:16:02.736 A:middle
Developer token.

00:16:04.136 --> 00:16:05.836 A:middle
Developer token has two parts,

00:16:07.346 --> 00:16:10.496 A:middle
required headers, which are the

00:16:10.496 --> 00:16:11.496 A:middle
encryption algorithm.

00:16:11.846 --> 00:16:13.736 A:middle
We only support, ES256 is ou

00:16:13.736 --> 00:16:15.676 A:middle
encryption algorithm, and the

00:16:15.676 --> 00:16:16.566 A:middle
key identifier.

00:16:16.936 --> 00:16:18.656 A:middle
When you download your MusicKit

00:16:18.656 --> 00:16:20.316 A:middle
private key, you can find this

00:16:20.316 --> 00:16:21.846 A:middle
as part of that download.

00:16:23.716 --> 00:16:25.756 A:middle
The second half is the required

00:16:25.756 --> 00:16:26.306 A:middle
claims.

00:16:26.426 --> 00:16:28.146 A:middle
We have three required claims,

00:16:28.446 --> 00:16:32.176 A:middle
an Issuer ID, which is the Team

00:16:32.176 --> 00:16:33.436 A:middle
ID, and you can find this in the

00:16:33.436 --> 00:16:34.876 A:middle
Membership section of the Apple

00:16:34.876 --> 00:16:35.666 A:middle
Developer portal.

00:16:36.706 --> 00:16:38.216 A:middle
We have an issue at time for

00:16:38.216 --> 00:16:40.186 A:middle
this Developer token, which is

00:16:40.186 --> 00:16:43.746 A:middle
in UNIX format; and finally, you

00:16:43.746 --> 00:16:44.836 A:middle
have an expiration.

00:16:46.856 --> 00:16:49.046 A:middle
Tokens can only be generated

00:16:49.046 --> 00:16:51.496 A:middle
that expire 6 months from now.

00:16:52.906 --> 00:16:56.086 A:middle
So, with that, I'm going to turn

00:16:56.086 --> 00:16:56.616 A:middle
over the rest of the

00:16:56.616 --> 00:16:57.646 A:middle
presentation to my colleague,

00:16:57.646 --> 00:16:58.316 A:middle
Joel, and he'll tell you a

00:16:58.316 --> 00:16:59.706 A:middle
little bit about using MusicKit

00:16:59.706 --> 00:16:59.976 A:middle
on iOS.

00:17:00.516 --> 00:17:03.876 A:middle
[ Aapplause ]

00:17:04.376 --> 00:17:04.626 A:middle
&gt;&gt; Thank you.

00:17:05.156 --> 00:17:05.386 A:middle
Thank you.

00:17:05.386 --> 00:17:07.336 A:middle
&gt;&gt; Thank you, Tim.

00:17:07.816 --> 00:17:09.925 A:middle
Hi again. So, I'd like to tell

00:17:09.925 --> 00:17:11.185 A:middle
you all about how you can take

00:17:11.185 --> 00:17:12.826 A:middle
full advantage of MusicKit for

00:17:12.826 --> 00:17:13.935 A:middle
your iOS apps.

00:17:14.746 --> 00:17:16.685 A:middle
And to do that, first, I will

00:17:16.685 --> 00:17:18.175 A:middle
tell you some more about how you

00:17:18.175 --> 00:17:19.616 A:middle
can get full access to Apple

00:17:19.616 --> 00:17:20.185 A:middle
Music API.

00:17:21.336 --> 00:17:23.336 A:middle
Then, I'll tell you what you're

00:17:23.336 --> 00:17:24.435 A:middle
supposed to do if you're faced

00:17:24.435 --> 00:17:25.445 A:middle
with a user who doesn't

00:17:25.445 --> 00:17:26.516 A:middle
currently have an Apple Music

00:17:26.516 --> 00:17:27.165 A:middle
subscription.

00:17:27.876 --> 00:17:28.956 A:middle
And finally, I'll tell you how

00:17:28.956 --> 00:17:31.386 A:middle
you can use the iOS SDK to

00:17:31.806 --> 00:17:34.086 A:middle
initiate and control playback of

00:17:34.136 --> 00:17:35.256 A:middle
subscription and library

00:17:35.256 --> 00:17:35.776 A:middle
content.

00:17:35.776 --> 00:17:38.876 A:middle
So, let's talk about getting

00:17:38.876 --> 00:17:41.346 A:middle
full access to Apple Music API.

00:17:41.876 --> 00:17:43.016 A:middle
The first thing you might wonder

00:17:43.016 --> 00:17:45.356 A:middle
about is authentication, but as

00:17:45.356 --> 00:17:47.296 A:middle
it turns out most users are

00:17:47.296 --> 00:17:49.086 A:middle
already signed in with an iTune

00:17:49.086 --> 00:17:50.796 A:middle
Store account on their iOS

00:17:50.796 --> 00:17:52.546 A:middle
device, and for this reason, you

00:17:52.546 --> 00:17:53.736 A:middle
really don't need to worry about

00:17:53.876 --> 00:17:55.766 A:middle
Prompt User for Credentials.

00:17:56.876 --> 00:17:58.426 A:middle
However, because privacy is such

00:17:58.426 --> 00:18:00.536 A:middle
an important concern on iOS, you

00:17:58.426 --> 00:18:00.536 A:middle
an important concern on iOS, you

00:18:00.536 --> 00:18:02.416 A:middle
really need to get the user's

00:18:02.416 --> 00:18:04.656 A:middle
informed consent before we grant

00:18:04.656 --> 00:18:06.806 A:middle
your app access to Apple Music.

00:18:07.896 --> 00:18:09.886 A:middle
This user consent is very

00:18:09.886 --> 00:18:11.756 A:middle
similar to what ou would request

00:18:11.756 --> 00:18:13.396 A:middle
before getting access to the

00:18:13.636 --> 00:18:15.846 A:middle
user's location or the user's

00:18:15.846 --> 00:18:16.966 A:middle
contact information.

00:18:19.156 --> 00:18:20.856 A:middle
This is also something you need

00:18:20.856 --> 00:18:23.176 A:middle
to request per application and

00:18:23.176 --> 00:18:24.426 A:middle
per iOS device.

00:18:24.516 --> 00:18:26.936 A:middle
So, if your apps, app works on

00:18:26.936 --> 00:18:28.206 A:middle
both iPhone and iPad for the

00:18:28.206 --> 00:18:29.736 A:middle
same user, make sure to request

00:18:29.736 --> 00:18:31.156 A:middle
this user consent separately.

00:18:32.876 --> 00:18:34.816 A:middle
This is what the user consent

00:18:34.816 --> 00:18:38.446 A:middle
dialogue looks like in the Nike

00:18:38.446 --> 00:18:41.876 A:middle
Plus Run Club app, and it's the

00:18:41.956 --> 00:18:43.776 A:middle
standard user consent dialogue

00:18:43.776 --> 00:18:44.536 A:middle
for privacy.

00:18:45.486 --> 00:18:46.676 A:middle
And one important part of it is

00:18:46.676 --> 00:18:48.746 A:middle
the subtitle where the third

00:18:48.746 --> 00:18:50.316 A:middle
party app developer is required

00:18:50.316 --> 00:18:52.316 A:middle
to inform the user as to why it

00:18:52.556 --> 00:18:54.036 A:middle
requires access to the Apple

00:18:54.036 --> 00:18:55.596 A:middle
Music data of the user.

00:18:59.416 --> 00:19:01.756 A:middle
Requesting the user consent is

00:18:59.416 --> 00:19:01.756 A:middle
Requesting the user consent is

00:19:01.756 --> 00:19:03.656 A:middle
needed to get access to both the

00:19:03.656 --> 00:19:05.676 A:middle
device library as well as the

00:19:05.676 --> 00:19:06.736 A:middle
music user token.

00:19:07.256 --> 00:19:09.486 A:middle
You can read the current

00:19:09.486 --> 00:19:11.356 A:middle
authorization status for your

00:19:11.356 --> 00:19:12.186 A:middle
app to see if you've already

00:19:12.186 --> 00:19:13.886 A:middle
been granted this user consent,

00:19:14.496 --> 00:19:16.076 A:middle
and this will not prompt the

00:19:16.076 --> 00:19:17.766 A:middle
user with the dialogue I just

00:19:17.766 --> 00:19:18.236 A:middle
showed you.

00:19:18.536 --> 00:19:19.646 A:middle
However, you can more simply

00:19:19.646 --> 00:19:22.136 A:middle
request authorization, and this

00:19:22.136 --> 00:19:23.966 A:middle
will prompt the user unless your

00:19:23.966 --> 00:19:25.366 A:middle
app has already received this

00:19:26.166 --> 00:19:26.856 A:middle
authorization.

00:19:27.446 --> 00:19:30.476 A:middle
To do so, you can use a class

00:19:30.476 --> 00:19:31.616 A:middle
and distorted framework.

00:19:31.896 --> 00:19:32.306 A:middle
It's called

00:19:32.596 --> 00:19:34.896 A:middle
SKCloudServiceController, and

00:19:34.896 --> 00:19:36.306 A:middle
you can call a method on it, a

00:19:36.306 --> 00:19:38.276 A:middle
class method named Request

00:19:38.276 --> 00:19:39.066 A:middle
Authorization.

00:19:40.256 --> 00:19:41.156 A:middle
We'll call your completion

00:19:41.156 --> 00:19:42.886 A:middle
handler with a status code, and

00:19:42.886 --> 00:19:44.486 A:middle
you know you can proceed to call

00:19:44.686 --> 00:19:46.726 A:middle
Apple Music API if you get the

00:19:46.726 --> 00:19:48.966 A:middle
authorized status code.

00:19:50.196 --> 00:19:51.946 A:middle
Additionally, you will have to

00:19:51.946 --> 00:19:53.846 A:middle
set the NS Apple Music Usage

00:19:53.846 --> 00:19:55.756 A:middle
description field in your Info P

00:19:55.756 --> 00:19:58.006 A:middle
list to populate the subtitle of

00:19:58.006 --> 00:19:59.276 A:middle
the user consent dialogue.

00:20:01.416 --> 00:20:03.296 A:middle
The next important step is to

00:20:03.296 --> 00:20:04.796 A:middle
fetch the subscription status.

00:20:05.196 --> 00:20:06.556 A:middle
To determine if the user is

00:20:06.556 --> 00:20:07.816 A:middle
actually subscribed to Apple

00:20:07.816 --> 00:20:09.826 A:middle
Music, and this is important for

00:20:09.826 --> 00:20:12.226 A:middle
issuing personalized requests to

00:20:12.266 --> 00:20:14.096 A:middle
get at data such as recently

00:20:14.096 --> 00:20:15.766 A:middle
played or heavy rotation, for

00:20:15.766 --> 00:20:16.186 A:middle
example.

00:20:17.006 --> 00:20:19.836 A:middle
However, this is not necessarily

00:20:19.896 --> 00:20:21.766 A:middle
a simple yes and no type of

00:20:21.766 --> 00:20:22.306 A:middle
question.

00:20:22.886 --> 00:20:24.166 A:middle
The subscription status may be

00:20:24.166 --> 00:20:26.856 A:middle
complex because while a user may

00:20:26.856 --> 00:20:27.946 A:middle
be an Apple Music subscriber

00:20:27.946 --> 00:20:30.236 A:middle
because that user may simply pay

00:20:30.236 --> 00:20:31.956 A:middle
the monthly fee, it's also

00:20:31.956 --> 00:20:34.496 A:middle
possible a user is a subscriber

00:20:34.496 --> 00:20:35.496 A:middle
through their carrier.

00:20:36.756 --> 00:20:38.676 A:middle
Additionally, some users can

00:20:38.676 --> 00:20:40.076 A:middle
play subscription content for

00:20:40.076 --> 00:20:41.966 A:middle
Apple Music, and yet your apps

00:20:41.966 --> 00:20:44.306 A:middle
won't be able to add content to

00:20:44.306 --> 00:20:46.556 A:middle
those user's music libraries.

00:20:47.676 --> 00:20:49.236 A:middle
And this is because the iCloud

00:20:49.236 --> 00:20:51.326 A:middle
Music Library feature has to be

00:20:51.326 --> 00:20:52.176 A:middle
enabled separately.

00:20:53.516 --> 00:20:55.836 A:middle
Finally, it's possible you won't

00:20:55.836 --> 00:20:57.076 A:middle
be able to suggest to all of

00:20:57.076 --> 00:20:58.616 A:middle
your users to become Apple Music

00:20:58.616 --> 00:21:00.416 A:middle
subscribers because we don't

00:20:58.616 --> 00:21:00.416 A:middle
subscribers because we don't

00:21:00.416 --> 00:21:01.886 A:middle
offer Apple Music in every

00:21:01.886 --> 00:21:03.666 A:middle
single country, and even in

00:21:03.666 --> 00:21:04.846 A:middle
countries where we do offer

00:21:04.846 --> 00:21:07.296 A:middle
Apple Music, there are settings

00:21:07.296 --> 00:21:09.076 A:middle
such as education settings or

00:21:09.076 --> 00:21:10.866 A:middle
enterprise settings where

00:21:10.866 --> 00:21:11.716 A:middle
becoming an Apple Music

00:21:11.716 --> 00:21:13.036 A:middle
subscriber is actually

00:21:13.036 --> 00:21:13.516 A:middle
restricted.

00:21:14.476 --> 00:21:16.026 A:middle
So, for this reason, we expose

00:21:16.026 --> 00:21:17.496 A:middle
three independent capabilities

00:21:17.496 --> 00:21:18.086 A:middle
you can query.

00:21:18.726 --> 00:21:20.006 A:middle
The music catalog playback

00:21:20.006 --> 00:21:22.376 A:middle
capability, the add to iCloud

00:21:22.376 --> 00:21:24.596 A:middle
Music Library capability, and

00:21:24.746 --> 00:21:25.846 A:middle
you can also tell if the user

00:21:25.846 --> 00:21:26.886 A:middle
can become a subscriber.

00:21:27.866 --> 00:21:29.556 A:middle
So, it's important that you

00:21:29.556 --> 00:21:30.986 A:middle
check these individual

00:21:30.986 --> 00:21:33.666 A:middle
capabilities in your app before

00:21:33.666 --> 00:21:35.256 A:middle
you take an action related to

00:21:35.256 --> 00:21:35.856 A:middle
Apple Music.

00:21:36.086 --> 00:21:37.736 A:middle
So, for example, if you want to

00:21:37.736 --> 00:21:39.166 A:middle
have a Play button in your app

00:21:39.166 --> 00:21:40.686 A:middle
to preview a piece of content

00:21:40.686 --> 00:21:42.046 A:middle
from Apple Music, make sure to

00:21:42.046 --> 00:21:43.556 A:middle
check the music catalog playback

00:21:43.556 --> 00:21:44.116 A:middle
capability.

00:21:44.726 --> 00:21:46.446 A:middle
Conversely, if you want to have

00:21:46.446 --> 00:21:48.426 A:middle
an Add button to add a certain

00:21:48.426 --> 00:21:50.956 A:middle
song to a playlist from the

00:21:50.956 --> 00:21:52.956 A:middle
user's library, make sure that

00:21:52.956 --> 00:21:54.326 A:middle
the Add to iCloud Music Library

00:21:54.556 --> 00:21:55.936 A:middle
capability is enabled.

00:21:57.896 --> 00:21:59.706 A:middle
Fetching the subscription status

00:21:59.706 --> 00:22:01.676 A:middle
information requires the user's

00:21:59.706 --> 00:22:01.676 A:middle
information requires the user's

00:22:01.676 --> 00:22:04.136 A:middle
consent, and you can do it in

00:22:04.136 --> 00:22:05.476 A:middle
code using, again,

00:22:05.476 --> 00:22:06.866 A:middle
SKCloudServiceController.

00:22:07.526 --> 00:22:08.786 A:middle
Here, we'll be calling an

00:22:08.786 --> 00:22:10.966 A:middle
instance method called Request

00:22:10.966 --> 00:22:13.696 A:middle
Capabilities, and we'll call

00:22:13.696 --> 00:22:15.486 A:middle
your completion handler with an

00:22:15.556 --> 00:22:16.976 A:middle
Option set of capabilities.

00:22:18.196 --> 00:22:19.326 A:middle
You can check inside of that

00:22:19.326 --> 00:22:21.396 A:middle
Option set for the presence of

00:22:21.566 --> 00:22:22.936 A:middle
the Music Catalog Playback

00:22:23.126 --> 00:22:24.506 A:middle
capability to check if the user

00:22:24.506 --> 00:22:26.796 A:middle
can play subscription content or

00:22:26.796 --> 00:22:29.276 A:middle
for the presence of Add to Cloud

00:22:29.276 --> 00:22:30.976 A:middle
Music Library to see if your app

00:22:30.976 --> 00:22:32.476 A:middle
can add songs to the Cloud

00:22:32.476 --> 00:22:33.456 A:middle
Library of this user.

00:22:33.926 --> 00:22:37.606 A:middle
Next stop, you might need to

00:22:37.606 --> 00:22:39.156 A:middle
know the Storefront Country

00:22:39.156 --> 00:22:39.406 A:middle
Code.

00:22:39.406 --> 00:22:40.756 A:middle
This is particularly important

00:22:40.756 --> 00:22:43.796 A:middle
for requesting content from the

00:22:43.796 --> 00:22:45.406 A:middle
catalog end points of the Apple

00:22:45.406 --> 00:22:47.376 A:middle
Music API because, as you know,

00:22:47.416 --> 00:22:49.366 A:middle
the Storefront Country Code is

00:22:49.366 --> 00:22:51.436 A:middle
an important part of the past of

00:22:51.576 --> 00:22:52.506 A:middle
those URLs.

00:22:53.496 --> 00:22:54.716 A:middle
To fetch this Storefront Country

00:22:54.716 --> 00:22:56.446 A:middle
Code, you'll be able to use

00:22:56.446 --> 00:22:57.976 A:middle
another instance method of

00:22:57.976 --> 00:22:59.436 A:middle
SKCloudServiceController.

00:23:00.276 --> 00:23:01.836 A:middle
This time it's called Request

00:23:01.836 --> 00:23:04.186 A:middle
Storefront Country Code, and

00:23:04.506 --> 00:23:05.756 A:middle
we'll invoke your Completion

00:23:05.756 --> 00:23:07.556 A:middle
Handler with a two-letter

00:23:07.556 --> 00:23:09.946 A:middle
country code, which you can then

00:23:09.946 --> 00:23:12.186 A:middle
use to build out the URL for

00:23:12.186 --> 00:23:14.826 A:middle
your catalog end point request.

00:23:14.946 --> 00:23:15.926 A:middle
In this case, we're trying to

00:23:15.926 --> 00:23:18.466 A:middle
build the top songs URL, and

00:23:18.466 --> 00:23:20.836 A:middle
this is the particular line that

00:23:20.836 --> 00:23:22.366 A:middle
is relevant where we use the

00:23:22.366 --> 00:23:23.646 A:middle
Storefront Country Code in the

00:23:23.646 --> 00:23:28.986 A:middle
middle of the path of this URL.

00:23:28.986 --> 00:23:30.396 A:middle
Finally, to unlock the full

00:23:30.396 --> 00:23:32.556 A:middle
power of Apple Music API, you

00:23:32.556 --> 00:23:34.476 A:middle
will need to get the music user

00:23:34.476 --> 00:23:36.146 A:middle
token, which is very important

00:23:36.376 --> 00:23:37.416 A:middle
to issue requests for

00:23:37.476 --> 00:23:39.556 A:middle
personalized content, such as

00:23:39.746 --> 00:23:41.516 A:middle
recently played or heavy

00:23:41.516 --> 00:23:42.126 A:middle
rotation.

00:23:42.786 --> 00:23:43.936 A:middle
This is derived from your

00:23:43.936 --> 00:23:46.596 A:middle
developer token, and because

00:23:46.596 --> 00:23:47.976 A:middle
fetching the music user token is

00:23:47.976 --> 00:23:49.456 A:middle
a somewhat expensive operation,

00:23:49.866 --> 00:23:51.276 A:middle
we recommend you cache the music

00:23:51.276 --> 00:23:52.566 A:middle
user token once you've fetched

00:23:52.566 --> 00:23:52.796 A:middle
it.

00:23:52.896 --> 00:23:54.786 A:middle
You can do so using user

00:23:54.786 --> 00:23:57.066 A:middle
defaults, for example, but make

00:23:57.066 --> 00:23:58.466 A:middle
sure not to transfer the music

00:23:58.466 --> 00:23:59.946 A:middle
user token across devices

00:24:00.386 --> 00:24:02.756 A:middle
because you might be violating

00:24:02.756 --> 00:24:05.476 A:middle
user consent if you do so.

00:24:05.696 --> 00:24:07.056 A:middle
Since you'll be caching this

00:24:07.056 --> 00:24:08.816 A:middle
music user token, you should

00:24:08.896 --> 00:24:11.376 A:middle
also be aware of when you should

00:24:11.376 --> 00:24:12.896 A:middle
invalidate this cache and fetch

00:24:12.896 --> 00:24:14.396 A:middle
the music user token again, and

00:24:14.396 --> 00:24:15.476 A:middle
this is typically whenever you

00:24:15.586 --> 00:24:17.546 A:middle
get a forbidden status code from

00:24:17.596 --> 00:24:19.006 A:middle
any of the Apple Music API

00:24:19.126 --> 00:24:21.246 A:middle
endpoints; that is the (403)

00:24:21.246 --> 00:24:23.186 A:middle
HTTP status code.

00:24:23.586 --> 00:24:24.706 A:middle
This could happen in a number of

00:24:24.706 --> 00:24:26.466 A:middle
scenarios, For example, the user

00:24:26.616 --> 00:24:27.836 A:middle
might change the password

00:24:27.836 --> 00:24:29.226 A:middle
associated with the iTunes store

00:24:29.226 --> 00:24:31.766 A:middle
account, or the user might

00:24:31.766 --> 00:24:33.086 A:middle
actually decide to revoke the

00:24:33.086 --> 00:24:34.626 A:middle
user token associated with your

00:24:34.946 --> 00:24:36.886 A:middle
app, or, finally, the user token

00:24:36.886 --> 00:24:37.966 A:middle
could expire naturally.

00:24:39.396 --> 00:24:41.026 A:middle
In all of these cases, make sure

00:24:41.026 --> 00:24:42.796 A:middle
to refetch the music user token

00:24:42.896 --> 00:24:44.956 A:middle
after checking the capabilities

00:24:44.956 --> 00:24:46.856 A:middle
again, just in case the active

00:24:46.856 --> 00:24:48.016 A:middle
iTunes store account has

00:24:48.016 --> 00:24:49.666 A:middle
changed, meanwhile.

00:24:50.256 --> 00:24:52.536 A:middle
So, to fetch the music user

00:24:52.536 --> 00:24:54.456 A:middle
token, we'll be using store

00:24:54.456 --> 00:24:56.456 A:middle
kits, SKCloudServiceController,

00:24:56.456 --> 00:24:56.966 A:middle
once more.

00:24:57.856 --> 00:24:59.156 A:middle
Here, we have another method.

00:24:59.726 --> 00:25:01.746 A:middle
Request user token for developer

00:24:59.726 --> 00:25:01.746 A:middle
Request user token for developer

00:25:01.746 --> 00:25:02.286 A:middle
token.

00:25:02.536 --> 00:25:03.986 A:middle
You'll pass the developer token

00:25:04.366 --> 00:25:06.036 A:middle
as a parameter, and then we'll

00:25:06.036 --> 00:25:07.516 A:middle
invoke our completion handler

00:25:07.786 --> 00:25:09.266 A:middle
and hand you the music user

00:25:09.266 --> 00:25:09.926 A:middle
token.

00:25:10.686 --> 00:25:12.526 A:middle
You can then use that to

00:25:12.916 --> 00:25:14.456 A:middle
properly populate the relevant

00:25:14.456 --> 00:25:16.726 A:middle
HTTP headers in your URL request

00:25:17.216 --> 00:25:19.736 A:middle
and specifically the music token

00:25:20.026 --> 00:25:21.036 A:middle
HTTP header.

00:25:21.386 --> 00:25:24.976 A:middle
Once you've gotten the User

00:25:24.976 --> 00:25:27.776 A:middle
Token and User Consent, you have

00:25:27.776 --> 00:25:29.486 A:middle
full access to Apple Music API,

00:25:29.486 --> 00:25:31.126 A:middle
so you can proceed to build

00:25:31.466 --> 00:25:32.816 A:middle
amazing user experiences for

00:25:32.816 --> 00:25:34.776 A:middle
your apps that keep your users

00:25:34.776 --> 00:25:35.436 A:middle
engaged.

00:25:35.966 --> 00:25:37.216 A:middle
However, sometimes, you'll be

00:25:37.216 --> 00:25:38.956 A:middle
faced with another edge case

00:25:39.386 --> 00:25:40.936 A:middle
when a user is not already an

00:25:40.936 --> 00:25:41.916 A:middle
Apple Music subscriber.

00:25:42.446 --> 00:25:45.106 A:middle
When that's the case, you might

00:25:45.146 --> 00:25:47.416 A:middle
want to show a subscription view

00:25:48.076 --> 00:25:52.526 A:middle
to suggest to the user to join

00:25:52.526 --> 00:25:54.766 A:middle
Apple Music so they can take

00:25:54.846 --> 00:25:57.216 A:middle
part in our trial period, get

00:25:57.216 --> 00:25:59.416 A:middle
access to over 40 million songs,

00:25:59.896 --> 00:26:00.976 A:middle
and also unlock the full

00:25:59.896 --> 00:26:00.976 A:middle
and also unlock the full

00:26:00.976 --> 00:26:02.966 A:middle
potential of your apps.

00:26:03.716 --> 00:26:05.156 A:middle
Additionally, it's particularly

00:26:05.216 --> 00:26:06.846 A:middle
relevant for you as developers

00:26:06.846 --> 00:26:08.326 A:middle
because you can get rewarded for

00:26:08.326 --> 00:26:09.326 A:middle
bringing in Apple Music

00:26:09.326 --> 00:26:11.046 A:middle
subscribers by taking part in

00:26:11.046 --> 00:26:11.976 A:middle
our Affiliate Program.

00:26:15.566 --> 00:26:16.636 A:middle
So, when exactly are you

00:26:16.636 --> 00:26:17.416 A:middle
supposed to show the

00:26:17.416 --> 00:26:18.186 A:middle
Subscription View?

00:26:18.866 --> 00:26:20.036 A:middle
You should do so whenever you

00:26:20.036 --> 00:26:21.196 A:middle
detect that the user cannot

00:26:21.276 --> 00:26:22.806 A:middle
currently playback subscription

00:26:22.806 --> 00:26:23.316 A:middle
content.

00:26:24.276 --> 00:26:25.906 A:middle
But the user can become an Apple

00:26:25.906 --> 00:26:26.746 A:middle
Music subscriber.

00:26:27.316 --> 00:26:28.676 A:middle
In terms of the capabilities we

00:26:28.676 --> 00:26:30.326 A:middle
discussed previously, that means

00:26:30.326 --> 00:26:31.426 A:middle
you need to make sure the music

00:26:31.426 --> 00:26:33.336 A:middle
catalog playback capability is

00:26:33.336 --> 00:26:35.346 A:middle
currently disabled while the

00:26:35.346 --> 00:26:36.716 A:middle
music catalog subscription

00:26:36.716 --> 00:26:39.116 A:middle
eligible capability is enabled.

00:26:39.666 --> 00:26:42.956 A:middle
As a side note, in the very rare

00:26:42.956 --> 00:26:44.676 A:middle
occurrence that the user doesn't

00:26:44.676 --> 00:26:45.856 A:middle
have an active iTunes Store

00:26:45.856 --> 00:26:48.146 A:middle
account on this device, you will

00:26:48.146 --> 00:26:49.946 A:middle
see that status reported the

00:26:49.946 --> 00:26:51.956 A:middle
exact same way, and we will make

00:26:51.956 --> 00:26:53.226 A:middle
sure to include a Sign In button

00:26:53.226 --> 00:26:53.886 A:middle
as part of the Subscription

00:26:53.886 --> 00:26:53.976 A:middle
View.

00:26:58.416 --> 00:26:59.796 A:middle
A subscription view is quite

00:26:59.796 --> 00:27:02.516 A:middle
configurable and, namely, you

00:26:59.796 --> 00:27:02.516 A:middle
configurable and, namely, you

00:27:02.516 --> 00:27:04.006 A:middle
can choose the main message we

00:27:04.006 --> 00:27:04.936 A:middle
convey to the user.

00:27:05.336 --> 00:27:07.146 A:middle
By default, we'll tell the user

00:27:07.146 --> 00:27:08.066 A:middle
Join Apple Music.

00:27:08.816 --> 00:27:10.336 A:middle
But by passing an optional

00:27:10.336 --> 00:27:12.346 A:middle
message identifier, you can

00:27:12.346 --> 00:27:13.966 A:middle
choose a more tailored message

00:27:14.216 --> 00:27:15.346 A:middle
based on the next action you

00:27:15.346 --> 00:27:17.416 A:middle
want to take in your app.

00:27:18.256 --> 00:27:19.916 A:middle
So, we have other values you can

00:27:19.916 --> 00:27:20.846 A:middle
choose from for the message

00:27:20.846 --> 00:27:24.056 A:middle
identifier, such as Connect, and

00:27:24.056 --> 00:27:25.566 A:middle
we'll tell the user connect to

00:27:25.566 --> 00:27:26.126 A:middle
Apple Music.

00:27:26.126 --> 00:27:29.266 A:middle
We also have Add Music, and well

00:27:29.686 --> 00:27:31.996 A:middle
tell the user add all the music

00:27:31.996 --> 00:27:32.426 A:middle
you want.

00:27:33.066 --> 00:27:35.406 A:middle
And we finally have Play Music.

00:27:36.886 --> 00:27:39.126 A:middle
So, make sure to pick the best

00:27:39.126 --> 00:27:40.126 A:middle
message identifier that

00:27:40.126 --> 00:27:41.436 A:middle
corresponds to the next action

00:27:41.436 --> 00:27:43.036 A:middle
you want to take in your app, so

00:27:43.036 --> 00:27:44.656 A:middle
we can choose the right message

00:27:44.656 --> 00:27:45.896 A:middle
that will make the most sense to

00:27:45.896 --> 00:27:46.316 A:middle
the user.

00:27:46.856 --> 00:27:49.596 A:middle
You can also make the

00:27:49.596 --> 00:27:51.716 A:middle
subscription view contextual by

00:27:51.716 --> 00:27:52.946 A:middle
highlighting a certain piece of

00:27:53.016 --> 00:27:55.816 A:middle
content, such as a song, album,

00:27:56.096 --> 00:27:58.016 A:middle
playlist, or radio station.

00:27:58.826 --> 00:28:00.596 A:middle
You can do so by passing an

00:27:58.826 --> 00:28:00.596 A:middle
You can do so by passing an

00:28:00.596 --> 00:28:02.816 A:middle
iTunes item identifier option

00:28:03.616 --> 00:28:05.946 A:middle
which requires a value of tight

00:28:05.946 --> 00:28:07.926 A:middle
string, and that corresponds to

00:28:07.926 --> 00:28:09.766 A:middle
the ID field of the JSON

00:28:09.766 --> 00:28:11.336 A:middle
representation of an Apple Music

00:28:11.576 --> 00:28:12.716 A:middle
API resource.

00:28:14.896 --> 00:28:16.466 A:middle
There are a few more options you

00:28:16.466 --> 00:28:17.366 A:middle
need to be aware of for this

00:28:17.366 --> 00:28:18.126 A:middle
subscription view.

00:28:18.126 --> 00:28:20.146 A:middle
You will have to set the action

00:28:20.196 --> 00:28:22.276 A:middle
to subscribe, and you can also

00:28:22.276 --> 00:28:24.756 A:middle
pass optional affiliate tokens

00:28:24.756 --> 00:28:26.156 A:middle
and campaign tokens if you are

00:28:26.156 --> 00:28:28.096 A:middle
taking part in our Affiliate

00:28:28.096 --> 00:28:29.076 A:middle
Program.

00:28:30.036 --> 00:28:32.686 A:middle
Putting it all together, this is

00:28:32.686 --> 00:28:33.426 A:middle
how you can show the

00:28:33.426 --> 00:28:34.806 A:middle
Subscription view.

00:28:35.656 --> 00:28:38.136 A:middle
We'll instantiating a view

00:28:38.136 --> 00:28:40.306 A:middle
controller from Store Kits SK

00:28:43.016 --> 00:28:45.316 A:middle
CloudServiceSetupViewController,

00:28:46.376 --> 00:28:47.886 A:middle
and you can set yourself up as a

00:28:47.886 --> 00:28:48.966 A:middle
delegate for this

00:28:48.966 --> 00:28:49.556 A:middle
ViewController.

00:28:50.416 --> 00:28:52.286 A:middle
Then, you need to build the list

00:28:52.286 --> 00:28:54.206 A:middle
of options we just discussed.

00:28:54.806 --> 00:28:56.096 A:middle
In this case, we will be setting

00:28:56.096 --> 00:28:58.676 A:middle
the action to subscribe and the

00:28:58.676 --> 00:29:00.356 A:middle
message identifier to play

00:28:58.676 --> 00:29:00.356 A:middle
message identifier to play

00:29:00.356 --> 00:29:04.136 A:middle
music, and you need to call the

00:29:04.136 --> 00:29:06.686 A:middle
load with options method to load

00:29:06.686 --> 00:29:07.826 A:middle
all the content of the

00:29:07.826 --> 00:29:08.496 A:middle
subscription view.

00:29:08.496 --> 00:29:09.586 A:middle
And this is because it's a

00:29:09.586 --> 00:29:11.106 A:middle
server driven view that requires

00:29:11.106 --> 00:29:12.536 A:middle
us to load a certain amount of

00:29:12.536 --> 00:29:13.036 A:middle
content.

00:29:14.466 --> 00:29:15.406 A:middle
Because this process is

00:29:15.406 --> 00:29:17.776 A:middle
asynchronous, we recommend you

00:29:17.776 --> 00:29:19.146 A:middle
show a spinner in your app while

00:29:19.236 --> 00:29:20.956 A:middle
we're loading this content, and

00:29:20.956 --> 00:29:22.136 A:middle
you can do so using

00:29:22.136 --> 00:29:23.636 A:middle
UIActivityIndicatorView.

00:29:24.966 --> 00:29:25.986 A:middle
Once we're done loading all the

00:29:25.986 --> 00:29:27.696 A:middle
content, we'll invoke the

00:29:27.696 --> 00:29:29.466 A:middle
completion handler, and you can

00:29:29.466 --> 00:29:30.796 A:middle
proceed to show the subscription

00:29:30.796 --> 00:29:31.126 A:middle
view.

00:29:31.346 --> 00:29:33.136 A:middle
If it did succeed Boolean, it's

00:29:33.136 --> 00:29:35.666 A:middle
set to true by simply calling

00:29:35.666 --> 00:29:36.906 A:middle
the PresentViewController method

00:29:36.906 --> 00:29:37.656 A:middle
from UIKit.

00:29:38.216 --> 00:29:41.776 A:middle
And that's how you show the

00:29:42.076 --> 00:29:42.886 A:middle
subscription view.

00:29:42.886 --> 00:29:43.956 A:middle
Additionally, if the user

00:29:43.956 --> 00:29:45.566 A:middle
decides to become a subscriber

00:29:45.566 --> 00:29:46.886 A:middle
as a result of this, you can

00:29:47.336 --> 00:29:48.966 A:middle
detect that by observing the

00:29:48.966 --> 00:29:50.306 A:middle
capabilities did change

00:29:50.306 --> 00:29:51.376 A:middle
notification from

00:29:51.376 --> 00:29:53.486 A:middle
SKCloudServiceController, and

00:29:53.486 --> 00:29:54.986 A:middle
you can also detect that the

00:29:54.986 --> 00:29:56.476 A:middle
subscription view was dismissed

00:29:56.476 --> 00:29:58.066 A:middle
using the belated delegate

00:29:58.066 --> 00:29:58.446 A:middle
method.

00:29:58.996 --> 00:30:04.066 A:middle
So, with that, you have all the

00:29:58.996 --> 00:30:04.066 A:middle
So, with that, you have all the

00:30:04.066 --> 00:30:06.106 A:middle
tokens you need to have Apple

00:30:06.106 --> 00:30:08.026 A:middle
Music API, fetch Apple Music

00:30:08.026 --> 00:30:09.226 A:middle
content, and you made sure the

00:30:09.226 --> 00:30:09.976 A:middle
user is a subscriber.

00:30:10.076 --> 00:30:12.496 A:middle
So, we can have some more fun

00:30:12.966 --> 00:30:14.966 A:middle
and actually do some playback of

00:30:14.966 --> 00:30:16.556 A:middle
subscription or library content.

00:30:17.586 --> 00:30:19.236 A:middle
And to do so, we'll switch gears

00:30:19.236 --> 00:30:20.496 A:middle
a little bit and take a look at

00:30:20.496 --> 00:30:21.976 A:middle
another framework in the iOS

00:30:21.976 --> 00:30:23.996 A:middle
SDK, the MediaPlayer framework.

00:30:26.656 --> 00:30:27.856 A:middle
You'll find the MediaPlayer

00:30:27.856 --> 00:30:29.746 A:middle
framework a class named MP

00:30:29.746 --> 00:30:31.826 A:middle
MusicPlayer Controller, which

00:30:31.906 --> 00:30:34.686 A:middle
offers two distinct players that

00:30:34.686 --> 00:30:36.956 A:middle
allow you to control music

00:30:36.986 --> 00:30:38.946 A:middle
playback for two different types

00:30:38.946 --> 00:30:39.806 A:middle
of use cases.

00:30:40.046 --> 00:30:41.696 A:middle
To highlight that, let's start

00:30:41.696 --> 00:30:43.006 A:middle
with an example.

00:30:43.866 --> 00:30:45.546 A:middle
Let's say you're building a

00:30:45.546 --> 00:30:46.636 A:middle
social networking app.

00:30:47.116 --> 00:30:48.106 A:middle
You want to make it easy for

00:30:48.106 --> 00:30:49.636 A:middle
your users to share music

00:30:49.636 --> 00:30:51.496 A:middle
content with their friends, and

00:30:51.496 --> 00:30:52.506 A:middle
so it's important that the

00:30:52.506 --> 00:30:53.736 A:middle
friend receiving such a piece of

00:30:53.736 --> 00:30:57.446 A:middle
content is able to preview that

00:30:57.446 --> 00:31:00.326 A:middle
song or album from your app.

00:30:57.446 --> 00:31:00.326 A:middle
song or album from your app.

00:31:00.416 --> 00:31:02.696 A:middle
However, you should make sure

00:31:02.696 --> 00:31:03.886 A:middle
that the friend receiving this

00:31:03.886 --> 00:31:04.956 A:middle
piece of content can then

00:31:05.006 --> 00:31:06.376 A:middle
benefit from the full feature

00:31:06.376 --> 00:31:08.476 A:middle
set of the music app, allowing

00:31:08.476 --> 00:31:09.756 A:middle
the friend to go back to the

00:31:09.756 --> 00:31:12.176 A:middle
music app and maybe share the

00:31:12.176 --> 00:31:15.046 A:middle
song further, using Connect or

00:31:15.046 --> 00:31:15.426 A:middle
AirDrop.

00:31:17.316 --> 00:31:18.896 A:middle
For such applications, the

00:31:18.896 --> 00:31:20.456 A:middle
system user player might be the

00:31:20.456 --> 00:31:21.666 A:middle
right fit.

00:31:22.236 --> 00:31:24.266 A:middle
However, if you need more

00:31:24.266 --> 00:31:25.796 A:middle
control over the playback

00:31:25.796 --> 00:31:27.666 A:middle
experience, you might want to

00:31:27.666 --> 00:31:28.676 A:middle
take a look at the application

00:31:28.676 --> 00:31:30.256 A:middle
queue player, and a good example

00:31:30.256 --> 00:31:31.876 A:middle
here might be a fitness app.

00:31:32.666 --> 00:31:34.426 A:middle
It's possible you want to have

00:31:34.426 --> 00:31:35.676 A:middle
some music playing in the

00:31:35.676 --> 00:31:38.806 A:middle
background while your user is

00:31:38.956 --> 00:31:42.526 A:middle
running outside, and so you

00:31:42.526 --> 00:31:44.376 A:middle
might want to make sure that the

00:31:44.486 --> 00:31:46.106 A:middle
music matches the pace of the

00:31:46.106 --> 00:31:46.506 A:middle
runner.

00:31:47.636 --> 00:31:49.016 A:middle
You might also want to insert a

00:31:49.056 --> 00:31:50.086 A:middle
power song in the middle of the

00:31:50.086 --> 00:31:51.836 A:middle
playback queue and have your own

00:31:51.836 --> 00:31:53.396 A:middle
customized playback controls.

00:31:53.916 --> 00:31:56.296 A:middle
The application queue player

00:31:56.296 --> 00:31:57.856 A:middle
will allow you to do all of

00:31:58.486 --> 00:31:59.346 A:middle
those things.

00:31:59.536 --> 00:32:00.866 A:middle
Both of these players will do a

00:31:59.536 --> 00:32:00.866 A:middle
Both of these players will do a

00:32:00.866 --> 00:32:02.466 A:middle
lot for you automatically.

00:32:02.786 --> 00:32:04.196 A:middle
They will make sure to populate

00:32:04.196 --> 00:32:05.436 A:middle
the control center in lock

00:32:05.436 --> 00:32:05.856 A:middle
screen.

00:32:07.036 --> 00:32:08.906 A:middle
However, things will be recorded

00:32:08.906 --> 00:32:09.956 A:middle
a bit differently, depending on

00:32:09.956 --> 00:32:11.676 A:middle
the player you pick because the

00:32:11.676 --> 00:32:13.056 A:middle
music app will be recoded as a

00:32:13.056 --> 00:32:14.186 A:middle
Now Playing app with the system

00:32:14.186 --> 00:32:15.816 A:middle
music player, whereas it's going

00:32:15.816 --> 00:32:17.226 A:middle
to be your app recorded as the

00:32:17.226 --> 00:32:18.496 A:middle
Now Playing app if you choose

00:32:18.496 --> 00:32:19.706 A:middle
the application queue player.

00:32:20.096 --> 00:32:22.676 A:middle
And this is because with the

00:32:22.676 --> 00:32:24.856 A:middle
System Music Player, your app is

00:32:24.906 --> 00:32:26.256 A:middle
acting as a simple remote

00:32:26.256 --> 00:32:27.636 A:middle
control of the music app.

00:32:28.446 --> 00:32:29.276 A:middle
Whereas if you use the

00:32:29.276 --> 00:32:31.226 A:middle
application queue player, your

00:32:31.226 --> 00:32:32.946 A:middle
app fully owns the playback

00:32:32.946 --> 00:32:34.556 A:middle
queue completely independent

00:32:35.146 --> 00:32:36.726 A:middle
from the music app.

00:32:38.676 --> 00:32:40.306 A:middle
Both of these players allow you

00:32:40.306 --> 00:32:41.656 A:middle
to control the playback queue

00:32:41.656 --> 00:32:44.256 A:middle
with simple operations such as

00:32:44.346 --> 00:32:45.386 A:middle
completely replacing the

00:32:45.386 --> 00:32:46.616 A:middle
playback queue with a Set Queue

00:32:46.616 --> 00:32:49.266 A:middle
command, and you can also use

00:32:49.266 --> 00:32:51.076 A:middle
the Up Next functionality by

00:32:51.406 --> 00:32:53.876 A:middle
setting content to Play Next or

00:32:53.876 --> 00:32:54.386 A:middle
Play Later.

00:32:54.876 --> 00:32:57.856 A:middle
But with the application queue

00:32:57.856 --> 00:32:59.436 A:middle
player, you can go one step

00:32:59.436 --> 00:33:02.016 A:middle
further by inserting items in

00:32:59.436 --> 00:33:02.016 A:middle
further by inserting items in

00:33:02.016 --> 00:33:03.266 A:middle
the middle of the playback queue

00:33:03.906 --> 00:33:05.176 A:middle
over moving items that are

00:33:05.176 --> 00:33:06.956 A:middle
already in the playback queue.

00:33:08.296 --> 00:33:09.586 A:middle
To achieve some of those

00:33:09.586 --> 00:33:10.646 A:middle
playback queue manipulation

00:33:10.646 --> 00:33:12.836 A:middle
tasks, you'll be using a concept

00:33:12.836 --> 00:33:14.276 A:middle
we call queue descriptors.

00:33:14.746 --> 00:33:16.026 A:middle
We offer three different types

00:33:16.026 --> 00:33:17.456 A:middle
of queue descriptors based on

00:33:17.456 --> 00:33:18.936 A:middle
the type of content you're

00:33:18.936 --> 00:33:19.466 A:middle
dealing with.

00:33:20.506 --> 00:33:22.626 A:middle
The first one is the media item

00:33:22.856 --> 00:33:24.916 A:middle
queue descriptor, and this is

00:33:24.916 --> 00:33:27.336 A:middle
useful if you have an instance

00:33:27.336 --> 00:33:28.826 A:middle
of MPMediaItem or

00:33:28.826 --> 00:33:30.826 A:middle
MPMediaItemCollection, which you

00:33:30.826 --> 00:33:32.286 A:middle
would like to start playback

00:33:32.366 --> 00:33:32.536 A:middle
with.

00:33:32.976 --> 00:33:34.956 A:middle
And typically, you get a hold of

00:33:34.956 --> 00:33:37.716 A:middle
such instances by making device

00:33:37.866 --> 00:33:39.226 A:middle
library queries using

00:33:39.226 --> 00:33:42.356 A:middle
MPMediaQuery, or by presenting

00:33:42.356 --> 00:33:43.656 A:middle
the media picker to allow the

00:33:43.656 --> 00:33:45.296 A:middle
user to select a piece of

00:33:45.296 --> 00:33:46.866 A:middle
content from his library.

00:33:47.366 --> 00:33:50.936 A:middle
For catalog playback, we also

00:33:50.936 --> 00:33:52.626 A:middle
have the store queue descriptor,

00:33:52.836 --> 00:33:55.616 A:middle
and here the data you need to

00:33:55.616 --> 00:33:56.746 A:middle
use the store queue descriptor

00:33:56.746 --> 00:33:58.536 A:middle
is a store ID, and that's a

00:33:58.536 --> 00:34:00.076 A:middle
string that corresponds to the

00:33:58.536 --> 00:34:00.076 A:middle
string that corresponds to the

00:34:00.076 --> 00:34:01.596 A:middle
ID field of the JSON

00:34:01.596 --> 00:34:02.966 A:middle
representation of an Apple Music

00:34:02.966 --> 00:34:03.966 A:middle
API resource.

00:34:05.106 --> 00:34:06.456 A:middle
And this is typically useful for

00:34:06.456 --> 00:34:08.136 A:middle
catalog content such as from

00:34:08.136 --> 00:34:09.076 A:middle
catalog search.

00:34:10.936 --> 00:34:12.886 A:middle
We also have a new queue

00:34:12.886 --> 00:34:14.366 A:middle
descriptor, the playback, the

00:34:14.366 --> 00:34:15.226 A:middle
play parameter's queue

00:34:15.226 --> 00:34:19.005 A:middle
descriptor, and this does

00:34:19.085 --> 00:34:20.045 A:middle
everything the store queue

00:34:20.045 --> 00:34:22.666 A:middle
descriptor does, in addition to

00:34:22.726 --> 00:34:24.335 A:middle
handling personalized content,

00:34:24.516 --> 00:34:26.156 A:middle
such as content from recently

00:34:26.156 --> 00:34:29.416 A:middle
played or heavy rotation, and it

00:34:29.416 --> 00:34:30.916 A:middle
also supports playback of radio

00:34:30.916 --> 00:34:31.476 A:middle
stations.

00:34:32.295 --> 00:34:33.735 A:middle
Here, the data you'll need to

00:34:33.735 --> 00:34:35.106 A:middle
use for the play parameters

00:34:35.106 --> 00:34:37.366 A:middle
queue descriptor is the value

00:34:37.366 --> 00:34:38.886 A:middle
associated with the play params

00:34:39.366 --> 00:34:41.646 A:middle
field in the JSON representation

00:34:41.716 --> 00:34:43.346 A:middle
of an Apple Music API resource.

00:34:43.876 --> 00:34:47.356 A:middle
So, let's take a look at how you

00:34:47.356 --> 00:34:48.716 A:middle
can use those queue descriptors

00:34:48.716 --> 00:34:50.556 A:middle
to control playback in your

00:34:51.056 --> 00:34:51.576 A:middle
apps.

00:34:51.576 --> 00:34:52.596 A:middle
Here, we'll do some simple

00:34:52.596 --> 00:34:54.306 A:middle
playback queue manipulation

00:34:54.306 --> 00:34:55.786 A:middle
tasks, and we'll choose to use

00:34:55.786 --> 00:34:56.766 A:middle
the SystemMusicPlayer.

00:34:58.696 --> 00:35:00.936 A:middle
Both players support simple

00:34:58.696 --> 00:35:00.936 A:middle
Both players support simple

00:35:01.136 --> 00:35:03.856 A:middle
playback tweaks you can apply to

00:35:03.856 --> 00:35:05.616 A:middle
them such as setting the repeat

00:35:05.616 --> 00:35:06.186 A:middle
mode to all.

00:35:06.186 --> 00:35:07.486 A:middle
But you can also change the

00:35:07.486 --> 00:35:08.986 A:middle
shuffle mode if you like.

00:35:09.936 --> 00:35:11.916 A:middle
The first thing we'll do is

00:35:12.386 --> 00:35:13.596 A:middle
change the playback queue,

00:35:13.596 --> 00:35:14.996 A:middle
replace it completely with a

00:35:14.996 --> 00:35:17.576 A:middle
local album represented with an

00:35:17.616 --> 00:35:18.896 A:middle
MPMediaItemCollection.

00:35:19.996 --> 00:35:21.516 A:middle
Because that's the type of data

00:35:21.516 --> 00:35:23.516 A:middle
we have, we'll be using the

00:35:23.516 --> 00:35:25.816 A:middle
MPMediaItem, I'm sorry, the

00:35:25.816 --> 00:35:26.916 A:middle
MediaItemQueueDescriptor.

00:35:28.576 --> 00:35:30.246 A:middle
You can also decide to start

00:35:30.326 --> 00:35:31.766 A:middle
playback with the fourth song of

00:35:31.766 --> 00:35:33.356 A:middle
the album by setting the start

00:35:33.356 --> 00:35:35.646 A:middle
item with the fourth item of the

00:35:35.646 --> 00:35:36.026 A:middle
album.

00:35:36.336 --> 00:35:39.966 A:middle
And you can use that to call the

00:35:39.966 --> 00:35:40.976 A:middle
setQueue method on the player.

00:35:45.436 --> 00:35:47.836 A:middle
You can also use Up Next to add

00:35:47.836 --> 00:35:49.666 A:middle
a song to Play Next using the

00:35:49.666 --> 00:35:51.616 A:middle
prepend method on the player.

00:35:52.726 --> 00:35:54.526 A:middle
And here, we're trying to add a

00:35:54.526 --> 00:35:56.376 A:middle
catalog song to Play Next.

00:35:56.736 --> 00:35:57.946 A:middle
It's represented with a Store

00:35:57.946 --> 00:35:59.936 A:middle
ID, and for this reason, we have

00:35:59.976 --> 00:36:01.006 A:middle
to use the store queue

00:35:59.976 --> 00:36:01.006 A:middle
to use the store queue

00:36:01.006 --> 00:36:01.536 A:middle
descriptor.

00:36:02.066 --> 00:36:06.776 A:middle
But you can also add songs from

00:36:06.776 --> 00:36:08.706 A:middle
recently played, for example, to

00:36:08.706 --> 00:36:10.816 A:middle
the queue, and they'll typically

00:36:10.816 --> 00:36:12.126 A:middle
be represented with play

00:36:12.126 --> 00:36:13.346 A:middle
parameters you can find in the

00:36:13.346 --> 00:36:14.666 A:middle
JSON representation of Apple

00:36:14.666 --> 00:36:15.916 A:middle
Music API resources.

00:36:16.446 --> 00:36:18.346 A:middle
And because that's the data we

00:36:18.346 --> 00:36:19.616 A:middle
have, we'll be using the play

00:36:19.616 --> 00:36:20.676 A:middle
parameters queue descriptor.

00:36:21.146 --> 00:36:24.316 A:middle
Then, in this case, we'll choose

00:36:24.316 --> 00:36:25.836 A:middle
to use it with the append method

00:36:26.066 --> 00:36:28.086 A:middle
of the player to add this song

00:36:28.086 --> 00:36:28.966 A:middle
to Play Later.

00:36:28.966 --> 00:36:32.676 A:middle
If your app requires more

00:36:32.676 --> 00:36:34.026 A:middle
control over the playback queue,

00:36:34.026 --> 00:36:36.606 A:middle
however, you can switch to the

00:36:36.606 --> 00:36:38.656 A:middle
ApplicationQueuePlayer to unlock

00:36:38.656 --> 00:36:39.576 A:middle
some more features.

00:36:41.076 --> 00:36:43.096 A:middle
Mainly, you can call the perform

00:36:43.606 --> 00:36:45.276 A:middle
queue transaction method on the

00:36:45.276 --> 00:36:46.356 A:middle
ApplicationQueuePlayer.

00:36:46.396 --> 00:36:49.386 A:middle
It requires two closures as

00:36:49.386 --> 00:36:50.106 A:middle
parameters.

00:36:50.706 --> 00:36:51.656 A:middle
The first one is the queue

00:36:51.656 --> 00:36:52.386 A:middle
transaction.

00:36:53.466 --> 00:36:55.596 A:middle
We'll be passing a mutable queue

00:36:56.476 --> 00:36:57.886 A:middle
object, which represents the

00:36:57.886 --> 00:36:59.116 A:middle
current state of the playback

00:36:59.116 --> 00:36:59.336 A:middle
queue.

00:37:00.256 --> 00:37:01.806 A:middle
You can call a few methods on

00:37:01.806 --> 00:37:03.086 A:middle
this mutable queue, such as the

00:37:03.086 --> 00:37:04.946 A:middle
remove method to remove the

00:37:04.946 --> 00:37:07.096 A:middle
third item currently in the

00:37:07.096 --> 00:37:07.706 A:middle
playback queue.

00:37:09.176 --> 00:37:10.666 A:middle
You can also call the insert

00:37:10.816 --> 00:37:13.196 A:middle
after method, which we're

00:37:13.196 --> 00:37:14.606 A:middle
calling here to insert an item

00:37:14.606 --> 00:37:16.386 A:middle
after the fifth item of the

00:37:16.386 --> 00:37:16.936 A:middle
playback queue.

00:37:17.946 --> 00:37:20.356 A:middle
Once we're done applying all of

00:37:20.356 --> 00:37:21.366 A:middle
those modifications to the

00:37:21.366 --> 00:37:22.616 A:middle
playback queue, we'll call your

00:37:22.616 --> 00:37:24.446 A:middle
completion handler to let you

00:37:24.446 --> 00:37:24.646 A:middle
know.

00:37:25.226 --> 00:37:28.176 A:middle
And that's an overview of

00:37:28.176 --> 00:37:29.376 A:middle
everything you can do in terms

00:37:29.376 --> 00:37:31.106 A:middle
of playback with Apple Music,

00:37:31.636 --> 00:37:32.836 A:middle
and we can't wait to see the

00:37:32.836 --> 00:37:34.496 A:middle
experiences you'll build in your

00:37:34.496 --> 00:37:34.906 A:middle
apps.

00:37:36.016 --> 00:37:37.526 A:middle
So, let's talk about timeframe.

00:37:38.146 --> 00:37:39.596 A:middle
When can you adopt these APIs in

00:37:39.596 --> 00:37:40.196 A:middle
your apps?

00:37:40.726 --> 00:37:43.466 A:middle
As it turns out, a lot of these

00:37:43.466 --> 00:37:45.246 A:middle
APIs trickled in throughout

00:37:45.246 --> 00:37:47.066 A:middle
several releases, and many of

00:37:47.066 --> 00:37:49.096 A:middle
them are available on iOS 10.3

00:37:49.916 --> 00:37:50.986 A:middle
with a few caveats.

00:37:51.686 --> 00:37:53.266 A:middle
We will begin generating music

00:37:53.356 --> 00:37:55.646 A:middle
user tokens for iOS 10.3 devices

00:37:55.706 --> 00:37:56.486 A:middle
later this fall.

00:37:57.306 --> 00:37:58.836 A:middle
You'll also have to use an

00:37:58.836 --> 00:38:00.736 A:middle
alternate method to get to the

00:37:58.836 --> 00:38:00.736 A:middle
alternate method to get to the

00:38:00.736 --> 00:38:03.166 A:middle
storefront country code, and you

00:38:03.166 --> 00:38:04.646 A:middle
can use, for example, the

00:38:04.646 --> 00:38:06.616 A:middle
current locale's region code as

00:38:06.616 --> 00:38:07.516 A:middle
an approximation.

00:38:08.756 --> 00:38:10.176 A:middle
However, you'll be able to

00:38:10.176 --> 00:38:11.666 A:middle
initiate playback with catalog

00:38:11.666 --> 00:38:13.366 A:middle
content using the store queue

00:38:13.366 --> 00:38:17.376 A:middle
descriptor right on iOS 10.3.

00:38:17.586 --> 00:38:19.626 A:middle
On iOS 11, with beta you have

00:38:19.626 --> 00:38:21.036 A:middle
available to you today, you can

00:38:21.036 --> 00:38:22.516 A:middle
do everything we just discussed

00:38:22.996 --> 00:38:24.346 A:middle
with the exception of play

00:38:24.346 --> 00:38:26.326 A:middle
parameters, queue descriptors,

00:38:26.646 --> 00:38:27.976 A:middle
which will come in a later beta.

00:38:28.516 --> 00:38:31.366 A:middle
And because play parameters

00:38:31.366 --> 00:38:32.706 A:middle
queue descriptors support

00:38:32.706 --> 00:38:33.486 A:middle
everything the store queue

00:38:33.486 --> 00:38:34.976 A:middle
descriptor supports, in addition

00:38:34.976 --> 00:38:36.166 A:middle
to radio stations and

00:38:36.166 --> 00:38:37.696 A:middle
personalized content, if you're

00:38:37.696 --> 00:38:39.326 A:middle
targeting iOS 11 and later, you

00:38:39.326 --> 00:38:40.796 A:middle
should really use that primarily

00:38:40.796 --> 00:38:41.516 A:middle
instead of the store queue

00:38:41.516 --> 00:38:41.976 A:middle
descriptor.

00:38:45.546 --> 00:38:48.376 A:middle
So, to summarize, Apple Music

00:38:48.446 --> 00:38:50.206 A:middle
offers a breadth of content,

00:38:50.206 --> 00:38:52.346 A:middle
over 40 million songs and

00:38:52.626 --> 00:38:53.966 A:middle
personalized recommendations for

00:38:53.966 --> 00:38:55.886 A:middle
your users, and you can use

00:38:55.886 --> 00:38:57.936 A:middle
that, leverage this content to

00:38:57.936 --> 00:38:59.206 A:middle
create immersive experiences in

00:38:59.206 --> 00:39:00.766 A:middle
your apps to keep your users

00:38:59.206 --> 00:39:00.766 A:middle
your apps to keep your users

00:39:00.816 --> 00:39:01.486 A:middle
engaged.

00:39:02.116 --> 00:39:04.746 A:middle
To do that, you'll have to use

00:39:05.036 --> 00:39:06.456 A:middle
StoreKit framework to get the

00:39:06.456 --> 00:39:09.056 A:middle
user's consent and the Music

00:39:09.056 --> 00:39:11.576 A:middle
user token to unlock the full

00:39:11.576 --> 00:39:13.086 A:middle
capabilities of Apple Music API.

00:39:13.226 --> 00:39:15.516 A:middle
And you can call Apple Music

00:39:15.516 --> 00:39:17.756 A:middle
API, fetch the relevant data,

00:39:18.106 --> 00:39:20.956 A:middle
parse it from JSON, and use

00:39:20.956 --> 00:39:22.816 A:middle
MediaPlayer framework to control

00:39:22.816 --> 00:39:24.286 A:middle
playback of this piece of

00:39:24.286 --> 00:39:24.736 A:middle
content.

00:39:26.676 --> 00:39:28.236 A:middle
For more information on

00:39:28.236 --> 00:39:29.726 A:middle
MusicKit, feel free to check out

00:39:29.726 --> 00:39:31.046 A:middle
our developer portal with this

00:39:31.046 --> 00:39:31.666 A:middle
URL.

00:39:32.196 --> 00:39:33.416 A:middle
You also have a few related

00:39:33.416 --> 00:39:33.916 A:middle
sessions.

00:39:33.916 --> 00:39:35.506 A:middle
We just had the What's New in

00:39:35.506 --> 00:39:37.426 A:middle
Audio session in this room.

00:39:37.846 --> 00:39:39.206 A:middle
We'll also have tomorrow

00:39:39.206 --> 00:39:40.076 A:middle
morning, What's New in

00:39:40.076 --> 00:39:41.306 A:middle
Foundation, where you can learn

00:39:41.396 --> 00:39:42.886 A:middle
all about using the new JSON

00:39:42.886 --> 00:39:46.396 A:middle
decoder in Swift 4.0 and on

00:39:46.396 --> 00:39:47.596 A:middle
Thursday, you can learn about

00:39:47.596 --> 00:39:48.666 A:middle
AirPlay 2 as well.

00:39:49.176 --> 00:39:50.416 A:middle
Thank you very much, and enjoy

00:39:50.416 --> 00:39:51.396 A:middle
the rest of the conference.

00:39:52.516 --> 00:40:02.360 A:middle
[ Applause ]
