WEBVTT

00:00:07.516 --> 00:00:19.676 A:middle
[ Background Sounds ]

00:00:20.176 --> 00:00:20.616 A:middle
&gt;&gt; Good morning.

00:00:21.296 --> 00:00:22.156 A:middle
Thank you all for coming.

00:00:23.086 --> 00:00:24.206 A:middle
My name is Ian Parks.

00:00:25.656 --> 00:00:25.946 A:middle
[Applause] Thank you.

00:00:26.516 --> 00:00:28.566 A:middle
[ Applause ]

00:00:29.066 --> 00:00:30.216 A:middle
My name is Ian Parks and I work

00:00:30.216 --> 00:00:31.456 A:middle
on the watchOS software team.

00:00:32.076 --> 00:00:33.266 A:middle
I'm really excited to tell you

00:00:33.266 --> 00:00:35.416 A:middle
what's new in watchOS 4 and what

00:00:35.416 --> 00:00:37.086 A:middle
that's going to mean for you as

00:00:37.086 --> 00:00:38.916 A:middle
developers so you can continue

00:00:38.916 --> 00:00:40.666 A:middle
to deliver fantastic apps on

00:00:40.666 --> 00:00:41.346 A:middle
watchOS.

00:00:41.876 --> 00:00:43.426 A:middle
It's only been two years since

00:00:43.426 --> 00:00:44.886 A:middle
we first released Apple Watch

00:00:45.256 --> 00:00:46.516 A:middle
and the platform has come a long

00:00:46.516 --> 00:00:46.766 A:middle
way.

00:00:47.636 --> 00:00:48.796 A:middle
We're continuing to learn from

00:00:48.796 --> 00:00:50.876 A:middle
our users and how Apple Watch is

00:00:50.876 --> 00:00:52.116 A:middle
continuing to make a difference

00:00:52.116 --> 00:00:53.276 A:middle
in their lives.

00:00:53.496 --> 00:00:55.046 A:middle
And this year we're adding a ton

00:00:55.046 --> 00:00:56.796 A:middle
of new features in watchOS 4.

00:00:56.796 --> 00:00:59.886 A:middle
Like a brand new news app that

00:00:59.886 --> 00:01:01.496 A:middle
lets you browse headlines and

00:01:01.496 --> 00:01:02.656 A:middle
mark the ones you'd like to read

00:01:02.656 --> 00:01:03.006 A:middle
later.

00:01:03.006 --> 00:01:05.286 A:middle
And a totally redesigned music

00:01:05.286 --> 00:01:06.896 A:middle
experience that lets you sync

00:01:06.896 --> 00:01:08.956 A:middle
multiple playlists and it has a

00:01:08.956 --> 00:01:10.526 A:middle
new interface that's both fun

00:01:10.526 --> 00:01:11.496 A:middle
and easy to use.

00:01:16.096 --> 00:01:17.246 A:middle
We were also trying to make

00:01:17.366 --> 00:01:18.636 A:middle
workflows more efficient for

00:01:18.636 --> 00:01:20.926 A:middle
users like being able to access

00:01:20.926 --> 00:01:22.556 A:middle
to the now playing UI right from

00:01:22.556 --> 00:01:26.776 A:middle
inside of a workout as well as

00:01:26.776 --> 00:01:28.586 A:middle
surfacing important information

00:01:28.806 --> 00:01:31.026 A:middle
throughout your day in a new

00:01:31.026 --> 00:01:32.086 A:middle
Siri watch face.

00:01:32.626 --> 00:01:35.746 A:middle
And of course, we're introducing

00:01:35.746 --> 00:01:37.036 A:middle
a ton of new features for

00:01:37.036 --> 00:01:38.896 A:middle
developer so you can continue to

00:01:38.896 --> 00:01:40.396 A:middle
create great watchOS apps.

00:01:40.916 --> 00:01:42.686 A:middle
Now last year we introduced

00:01:42.686 --> 00:01:44.736 A:middle
three guiding principles for how

00:01:44.736 --> 00:01:45.746 A:middle
to create great Watch

00:01:45.746 --> 00:01:46.586 A:middle
experiences.

00:01:47.036 --> 00:01:48.356 A:middle
And we're continuing to pursue

00:01:48.356 --> 00:01:50.586 A:middle
these in our system apps as well

00:01:50.586 --> 00:01:51.866 A:middle
as how we're creating frameworks

00:01:51.866 --> 00:01:52.186 A:middle
for you.

00:01:53.146 --> 00:01:54.726 A:middle
Let's take a moment to look back

00:01:54.726 --> 00:01:55.846 A:middle
at these and see how they're

00:01:55.846 --> 00:01:57.466 A:middle
continuing to drive interactions

00:01:57.616 --> 00:01:58.386 A:middle
in watchOS.

00:02:00.416 --> 00:02:01.886 A:middle
The first is making our app

00:02:01.986 --> 00:02:02.566 A:middle
glanceable.

00:02:03.406 --> 00:02:04.976 A:middle
Interactions on Apple Watch are

00:02:04.976 --> 00:02:05.686 A:middle
very short.

00:02:05.826 --> 00:02:07.486 A:middle
And the screen size is much

00:02:07.486 --> 00:02:08.996 A:middle
smaller than on other platforms.

00:02:08.996 --> 00:02:11.136 A:middle
So we need to carefully consider

00:02:11.136 --> 00:02:13.126 A:middle
what information to present on

00:02:13.126 --> 00:02:15.296 A:middle
the UI and make sure that it's

00:02:15.376 --> 00:02:16.796 A:middle
well designed information so the

00:02:16.796 --> 00:02:19.206 A:middle
user can quickly absorb and

00:02:19.356 --> 00:02:20.526 A:middle
respond to the information.

00:02:27.046 --> 00:02:28.766 A:middle
And the second is making the

00:02:28.766 --> 00:02:29.886 A:middle
information actionable.

00:02:29.986 --> 00:02:32.306 A:middle
And what we mean by this is

00:02:32.336 --> 00:02:34.236 A:middle
bringing pieces that the user

00:02:34.236 --> 00:02:36.126 A:middle
can respond to either within the

00:02:36.126 --> 00:02:37.986 A:middle
application like changing a

00:02:37.986 --> 00:02:40.146 A:middle
music track or sometimes in

00:02:40.146 --> 00:02:41.096 A:middle
their current surroundings.

00:02:41.776 --> 00:02:42.916 A:middle
A quick glance at weather

00:02:42.916 --> 00:02:44.156 A:middle
conditions, for example, can

00:02:44.156 --> 00:02:45.166 A:middle
tell me whether or not I need to

00:02:45.166 --> 00:02:46.566 A:middle
pick up an umbrella on my way

00:02:46.566 --> 00:02:48.646 A:middle
out the door but actionable

00:02:48.646 --> 00:02:50.096 A:middle
information can also come in the

00:02:50.096 --> 00:02:51.226 A:middle
form of audio too.

00:02:52.146 --> 00:02:54.896 A:middle
For instance, I can get in ear

00:02:54.896 --> 00:02:56.436 A:middle
coaching during a workout to

00:02:56.436 --> 00:02:57.616 A:middle
tell me when I've fallen behind

00:02:57.616 --> 00:02:58.176 A:middle
my pace.

00:02:58.716 --> 00:03:00.986 A:middle
And finally responsive.

00:03:02.026 --> 00:03:03.416 A:middle
While performance is a really

00:03:03.416 --> 00:03:05.196 A:middle
crucial metric for watchOS apps,

00:03:05.706 --> 00:03:06.866 A:middle
we mean a bit more when we say

00:03:06.866 --> 00:03:07.606 A:middle
responsive here.

00:03:08.136 --> 00:03:09.986 A:middle
This also means making sure that

00:03:09.986 --> 00:03:12.166 A:middle
your content remains up-to-date

00:03:12.166 --> 00:03:12.636 A:middle
always.

00:03:12.636 --> 00:03:14.146 A:middle
And it also takes into

00:03:14.146 --> 00:03:15.686 A:middle
consideration what the user

00:03:15.686 --> 00:03:17.226 A:middle
might want to do next in your

00:03:17.226 --> 00:03:17.816 A:middle
application.

00:03:18.766 --> 00:03:19.766 A:middle
Let's take a look at a few

00:03:19.766 --> 00:03:21.156 A:middle
examples of how these are

00:03:21.156 --> 00:03:22.406 A:middle
manifesting themselves in

00:03:22.406 --> 00:03:22.976 A:middle
watchOS 4.

00:03:28.246 --> 00:03:29.556 A:middle
So last year, we introduced the

00:03:29.556 --> 00:03:30.906 A:middle
Quick Start workout feature

00:03:31.596 --> 00:03:33.976 A:middle
which let you start the workout

00:03:33.976 --> 00:03:35.946 A:middle
that you most commonly do very

00:03:35.946 --> 00:03:36.366 A:middle
quickly.

00:03:36.926 --> 00:03:38.416 A:middle
The idea being that you're most

00:03:38.416 --> 00:03:39.636 A:middle
commonly going to use the same

00:03:39.636 --> 00:03:40.666 A:middle
workout over and over.

00:03:41.136 --> 00:03:42.826 A:middle
So we let use the same goal that

00:03:42.826 --> 00:03:44.536 A:middle
you've set previously to get

00:03:44.536 --> 00:03:45.846 A:middle
started in just a few seconds

00:03:46.666 --> 00:03:48.426 A:middle
but if you do a rotating set of

00:03:48.426 --> 00:03:49.916 A:middle
workouts like do you do a run

00:03:49.916 --> 00:03:50.466 A:middle
one day?

00:03:50.796 --> 00:03:52.316 A:middle
And you do a swim the next day

00:03:52.316 --> 00:03:53.546 A:middle
and the bicycle ride the day

00:03:53.546 --> 00:03:54.096 A:middle
after that?

00:03:54.576 --> 00:03:55.976 A:middle
First of all, congratulations

00:03:55.976 --> 00:03:56.766 A:middle
because you're getting a lot of

00:03:56.766 --> 00:03:57.446 A:middle
exercise.

00:03:58.186 --> 00:03:59.666 A:middle
But also you're going to have an

00:03:59.666 --> 00:04:01.936 A:middle
extra step every time of setting

00:04:01.936 --> 00:04:02.256 A:middle
a goal.

00:04:02.756 --> 00:04:05.136 A:middle
So in watchOS 4, we've made this

00:04:05.136 --> 00:04:05.836 A:middle
a lot easier.

00:04:06.506 --> 00:04:07.936 A:middle
Every workout will track the

00:04:07.936 --> 00:04:09.746 A:middle
previous goal that you've set

00:04:09.746 --> 00:04:11.846 A:middle
for that workout type and if you

00:04:11.846 --> 00:04:13.406 A:middle
haven't set one, with defaults

00:04:13.406 --> 00:04:14.186 A:middle
to an open goal.

00:04:14.656 --> 00:04:15.696 A:middle
And that means that every

00:04:15.696 --> 00:04:17.126 A:middle
workout type is a Quick Start

00:04:17.126 --> 00:04:17.476 A:middle
workout.

00:04:18.296 --> 00:04:19.596 A:middle
This is a great example of

00:04:19.596 --> 00:04:21.196 A:middle
making the most common action

00:04:21.196 --> 00:04:22.326 A:middle
that the user's going to take

00:04:22.546 --> 00:04:23.946 A:middle
the easiest one for them.

00:04:25.266 --> 00:04:26.446 A:middle
It lets them glance at the UI

00:04:26.446 --> 00:04:28.286 A:middle
and get started very quickly.

00:04:28.866 --> 00:04:31.276 A:middle
And while you're inside of a

00:04:31.276 --> 00:04:33.026 A:middle
workout, you can now add a

00:04:33.026 --> 00:04:34.216 A:middle
second workout into your

00:04:34.216 --> 00:04:34.656 A:middle
routine.

00:04:35.106 --> 00:04:36.316 A:middle
For example, if I wanted to

00:04:36.316 --> 00:04:37.666 A:middle
start with a high intensity

00:04:37.666 --> 00:04:39.596 A:middle
interval training and finish

00:04:39.636 --> 00:04:40.396 A:middle
with a quick run.

00:04:41.366 --> 00:04:43.016 A:middle
This used to be a multistep

00:04:43.016 --> 00:04:44.296 A:middle
process where I would have to

00:04:44.296 --> 00:04:45.246 A:middle
finish my workout.

00:04:45.516 --> 00:04:46.166 A:middle
Then save it.

00:04:46.636 --> 00:04:47.636 A:middle
Then return to the list of

00:04:47.636 --> 00:04:48.256 A:middle
workouts.

00:04:48.256 --> 00:04:49.786 A:middle
I would find the next one that

00:04:49.786 --> 00:04:50.796 A:middle
I'm going to do which is

00:04:50.796 --> 00:04:51.906 A:middle
probably not going to be a Quick

00:04:51.906 --> 00:04:53.016 A:middle
Start workout at that point.

00:04:53.276 --> 00:04:54.666 A:middle
So I'm going to have to set a

00:04:54.666 --> 00:04:55.776 A:middle
goal and then continue.

00:04:56.536 --> 00:04:58.806 A:middle
Now it's just a quick tap to add

00:04:58.886 --> 00:05:00.576 A:middle
the second workout and another

00:05:00.576 --> 00:05:02.186 A:middle
to Quick Start it.

00:05:02.306 --> 00:05:03.586 A:middle
This is a great example of

00:05:03.586 --> 00:05:04.766 A:middle
building a responsive user

00:05:04.766 --> 00:05:07.296 A:middle
experience where it's not just

00:05:07.296 --> 00:05:08.756 A:middle
about updating the data in your

00:05:08.756 --> 00:05:08.956 A:middle
UI.

00:05:09.526 --> 00:05:10.766 A:middle
It's also about thinking about

00:05:10.766 --> 00:05:11.956 A:middle
what the user might want to do

00:05:11.956 --> 00:05:13.286 A:middle
next in your app based on what

00:05:13.286 --> 00:05:13.976 A:middle
you already know.

00:05:19.186 --> 00:05:20.846 A:middle
Now the dock is a great place to

00:05:20.846 --> 00:05:22.766 A:middle
showcase glanceable information

00:05:22.766 --> 00:05:23.706 A:middle
from your app.

00:05:24.196 --> 00:05:25.446 A:middle
And as you saw in the keynote,

00:05:25.686 --> 00:05:27.186 A:middle
we've transitioned the dock from

00:05:27.186 --> 00:05:29.036 A:middle
being a horizontally scrolled to

00:05:29.036 --> 00:05:30.026 A:middle
being vertically scrolled.

00:05:31.116 --> 00:05:32.336 A:middle
As you'll see in one of the UI

00:05:32.336 --> 00:05:33.826 A:middle
updates in WatchKit shortly,

00:05:34.516 --> 00:05:36.106 A:middle
apps should consider what kind

00:05:36.106 --> 00:05:37.926 A:middle
of navigation feels most natural

00:05:37.926 --> 00:05:39.486 A:middle
for your app and transition

00:05:39.486 --> 00:05:39.996 A:middle
accordingly.

00:05:40.116 --> 00:05:41.546 A:middle
So that it's really easy to

00:05:41.546 --> 00:05:42.926 A:middle
navigate your app either with

00:05:42.926 --> 00:05:44.706 A:middle
swipes or by scrolling through

00:05:44.706 --> 00:05:44.976 A:middle
information.

00:05:50.596 --> 00:05:52.466 A:middle
In addition to transitioning to

00:05:52.466 --> 00:05:54.866 A:middle
a vertical orientation, the dock

00:05:54.866 --> 00:05:56.256 A:middle
also now has two modes of

00:05:56.256 --> 00:05:56.776 A:middle
operation.

00:05:57.256 --> 00:05:58.656 A:middle
There's favorites mode and

00:05:58.656 --> 00:05:59.416 A:middle
recents mode.

00:06:00.286 --> 00:06:01.766 A:middle
Favorites mode will be familiar.

00:06:01.886 --> 00:06:03.286 A:middle
It operates just like the dock

00:06:03.346 --> 00:06:05.706 A:middle
does in watchOS 3 where a user

00:06:05.706 --> 00:06:07.596 A:middle
can pick specific apps and the

00:06:07.596 --> 00:06:08.836 A:middle
order in which they'd like them

00:06:08.836 --> 00:06:10.666 A:middle
to appear in the dock as well as

00:06:10.666 --> 00:06:12.256 A:middle
one most recently used slot for

00:06:12.496 --> 00:06:13.826 A:middle
the last app that they've used.

00:06:14.686 --> 00:06:16.736 A:middle
Recents mode will look just like

00:06:16.736 --> 00:06:18.146 A:middle
the app switcher on iOS.

00:06:18.146 --> 00:06:20.216 A:middle
Apps will transition in and out

00:06:20.216 --> 00:06:21.476 A:middle
of the dock as you use them

00:06:21.476 --> 00:06:22.076 A:middle
throughout the day.

00:06:22.136 --> 00:06:23.986 A:middle
And that means that you're more

00:06:23.986 --> 00:06:25.766 A:middle
likely to see your app show up

00:06:25.766 --> 00:06:27.456 A:middle
at some point during the day in

00:06:27.456 --> 00:06:28.176 A:middle
the user's dock.

00:06:28.696 --> 00:06:31.266 A:middle
And that means that it's even

00:06:31.266 --> 00:06:32.616 A:middle
more important to make sure that

00:06:32.616 --> 00:06:34.296 A:middle
you're updating snapshots using

00:06:34.296 --> 00:06:35.836 A:middle
the background snapshot API we

00:06:35.836 --> 00:06:37.446 A:middle
introduced last year in watchOS

00:06:37.486 --> 00:06:37.726 A:middle
3.

00:06:38.546 --> 00:06:39.876 A:middle
We're also making enhancements

00:06:39.876 --> 00:06:40.386 A:middle
to this API.

00:06:40.996 --> 00:06:42.446 A:middle
For example, you can now get a

00:06:42.446 --> 00:06:45.606 A:middle
callback for when you get a

00:06:45.606 --> 00:06:47.296 A:middle
snapshot test to tell whether or

00:06:47.296 --> 00:06:48.886 A:middle
not it's a snapshot that you

00:06:48.886 --> 00:06:50.596 A:middle
have scheduled or one that's

00:06:50.596 --> 00:06:52.206 A:middle
being automatically provided to

00:06:52.206 --> 00:06:53.756 A:middle
you but that's triggered by the

00:06:53.756 --> 00:06:54.156 A:middle
system.

00:06:55.286 --> 00:06:57.286 A:middle
Also remember that apps that

00:06:57.286 --> 00:06:59.046 A:middle
either in complications or in

00:06:59.046 --> 00:07:00.516 A:middle
the dock are launched in the

00:07:00.516 --> 00:07:02.316 A:middle
background and suspended but

00:07:02.316 --> 00:07:03.026 A:middle
kept in memory.

00:07:03.466 --> 00:07:05.496 A:middle
So opening them is really fast.

00:07:05.616 --> 00:07:08.256 A:middle
Now for the rest of our time

00:07:08.256 --> 00:07:09.656 A:middle
here today, we're going to talk

00:07:09.656 --> 00:07:11.116 A:middle
about three topics that we

00:07:11.116 --> 00:07:12.676 A:middle
focused on this year in the

00:07:12.676 --> 00:07:13.286 A:middle
WatchSTK.

00:07:14.446 --> 00:07:16.656 A:middle
The first of them is UI

00:07:16.816 --> 00:07:17.506 A:middle
flexibility.

00:07:17.836 --> 00:07:20.506 A:middle
Giving you more options to

00:07:20.506 --> 00:07:22.166 A:middle
present information and actions

00:07:22.166 --> 00:07:22.806 A:middle
to users.

00:07:24.066 --> 00:07:25.836 A:middle
The second is performance.

00:07:26.466 --> 00:07:27.766 A:middle
So apps always feel as

00:07:27.766 --> 00:07:28.976 A:middle
responsive as possible.

00:07:34.136 --> 00:07:35.196 A:middle
And finally background

00:07:35.196 --> 00:07:37.186 A:middle
processing so the users can

00:07:37.186 --> 00:07:39.406 A:middle
engage in activities beyond the

00:07:39.406 --> 00:07:40.896 A:middle
foreground app experience

00:07:41.596 --> 00:07:43.936 A:middle
whether it's in the dock in a

00:07:43.936 --> 00:07:46.136 A:middle
complication or in an ongoing

00:07:46.136 --> 00:07:46.976 A:middle
task like a workout.

00:07:51.426 --> 00:07:52.506 A:middle
First let's take a look at UI

00:07:52.506 --> 00:07:53.116 A:middle
flexibility.

00:07:53.936 --> 00:07:55.626 A:middle
Now WatchKit provides a focused

00:07:55.626 --> 00:07:57.366 A:middle
set of UI components that have

00:07:57.366 --> 00:07:58.576 A:middle
been optimized for the Watch

00:07:58.576 --> 00:07:58.936 A:middle
screen.

00:07:59.416 --> 00:08:00.506 A:middle
But we want to make sure that

00:08:00.506 --> 00:08:01.836 A:middle
those are flexible enough for

00:08:01.836 --> 00:08:03.146 A:middle
you to create custom user

00:08:03.146 --> 00:08:04.606 A:middle
interfaces that meet the

00:08:04.606 --> 00:08:06.586 A:middle
personality of your app.

00:08:07.706 --> 00:08:09.216 A:middle
Now if you've already created a

00:08:09.216 --> 00:08:10.816 A:middle
Watch app or you're new to

00:08:10.816 --> 00:08:11.996 A:middle
developing on the platform,

00:08:12.186 --> 00:08:13.756 A:middle
you're going to love how easy it

00:08:13.806 --> 00:08:15.026 A:middle
is to take advantage of the new

00:08:15.026 --> 00:08:16.976 A:middle
UI capabilities in watchOS 4.

00:08:16.976 --> 00:08:18.626 A:middle
And if you're a parent, I'm

00:08:18.626 --> 00:08:19.816 A:middle
going to show you how to get

00:08:19.816 --> 00:08:21.316 A:middle
workout credit for the things

00:08:21.316 --> 00:08:22.446 A:middle
you're probably already doing

00:08:22.446 --> 00:08:23.246 A:middle
around the house.

00:08:23.536 --> 00:08:26.616 A:middle
More on that in just a second.

00:08:26.666 --> 00:08:27.736 A:middle
Now I have a 4-year-old and

00:08:27.736 --> 00:08:28.646 A:middle
1-year-old at home.

00:08:28.986 --> 00:08:31.386 A:middle
And often times between work and

00:08:31.386 --> 00:08:33.026 A:middle
wrangling the kids, I don't find

00:08:33.086 --> 00:08:34.526 A:middle
time during the day to do a

00:08:34.526 --> 00:08:36.956 A:middle
formal workout but honestly, a

00:08:36.956 --> 00:08:38.476 A:middle
lot of what I find myself doing

00:08:38.476 --> 00:08:39.676 A:middle
feels an awful lot like a

00:08:39.676 --> 00:08:41.536 A:middle
workout whether it's piggyback

00:08:41.536 --> 00:08:42.806 A:middle
rides or cleaning up toys.

00:08:43.286 --> 00:08:45.296 A:middle
So I created a new app that lets

00:08:45.296 --> 00:08:46.216 A:middle
me track these more

00:08:46.216 --> 00:08:47.546 A:middle
non-traditional workouts.

00:08:47.946 --> 00:08:49.236 A:middle
And we're going to use this as

00:08:49.236 --> 00:08:50.626 A:middle
an example to see some of the

00:08:50.626 --> 00:08:52.656 A:middle
new UI capabilities in watchOS

00:08:52.656 --> 00:08:52.906 A:middle
4.

00:08:52.906 --> 00:08:56.496 A:middle
So here we have a simple

00:08:56.496 --> 00:08:57.786 A:middle
in-workout interface.

00:08:58.226 --> 00:08:59.526 A:middle
It's showing me the calorie

00:08:59.526 --> 00:09:00.896 A:middle
counter in the middle as well as

00:09:00.896 --> 00:09:03.106 A:middle
a time label and a SpriteKit

00:09:03.106 --> 00:09:04.756 A:middle
scene of a child being chased by

00:09:04.756 --> 00:09:05.946 A:middle
their parents around the screen.

00:09:06.996 --> 00:09:08.186 A:middle
This is the kind of interface

00:09:08.186 --> 00:09:09.306 A:middle
that's really hard to do in

00:09:09.306 --> 00:09:10.906 A:middle
watchOS because you can't

00:09:10.906 --> 00:09:12.356 A:middle
overlap interface elements.

00:09:12.726 --> 00:09:13.826 A:middle
So let's take a look at what's

00:09:13.856 --> 00:09:14.536 A:middle
going on here.

00:09:21.096 --> 00:09:22.906 A:middle
So here we have a group in front

00:09:22.956 --> 00:09:24.146 A:middle
containing the labels that I

00:09:24.146 --> 00:09:24.596 A:middle
mentioned.

00:09:24.966 --> 00:09:26.506 A:middle
And that's on top of a SpriteKit

00:09:26.506 --> 00:09:26.766 A:middle
scene.

00:09:27.456 --> 00:09:28.386 A:middle
Now I know you're thinking I

00:09:28.386 --> 00:09:29.676 A:middle
just said you can't overlap

00:09:29.676 --> 00:09:30.596 A:middle
interface elements.

00:09:31.286 --> 00:09:32.946 A:middle
In watchOS 4, we've created a

00:09:32.946 --> 00:09:34.866 A:middle
new group layout that allows you

00:09:34.866 --> 00:09:36.616 A:middle
to do things like this.

00:09:36.766 --> 00:09:37.946 A:middle
Let's take a look at interface

00:09:37.946 --> 00:09:39.276 A:middle
builder to see how you can use

00:09:39.276 --> 00:09:40.146 A:middle
that.

00:09:42.156 --> 00:09:43.886 A:middle
So a new option has been added

00:09:43.886 --> 00:09:44.406 A:middle
to groups.

00:09:44.556 --> 00:09:46.316 A:middle
So in addition to vertical and

00:09:46.316 --> 00:09:47.996 A:middle
horizontal layouts, you can now

00:09:47.996 --> 00:09:48.986 A:middle
select overlap.

00:09:49.116 --> 00:09:51.116 A:middle
And when selected, overlap

00:09:51.116 --> 00:09:52.766 A:middle
groups do not compute offsets

00:09:52.766 --> 00:09:54.146 A:middle
for each individual element.

00:09:54.716 --> 00:09:57.006 A:middle
Instead, you can select their

00:09:57.006 --> 00:09:58.456 A:middle
individual alignments like top,

00:09:58.456 --> 00:09:59.796 A:middle
center, and bottom or left,

00:09:59.796 --> 00:10:01.456 A:middle
center, and right, and the

00:10:01.456 --> 00:10:02.936 A:middle
elements are laid out according

00:10:02.936 --> 00:10:04.476 A:middle
to those in a more absolute

00:10:04.476 --> 00:10:05.536 A:middle
fashion within the group.

00:10:05.926 --> 00:10:09.206 A:middle
And you can also nest groups

00:10:09.206 --> 00:10:11.026 A:middle
within each other like I've done

00:10:11.026 --> 00:10:12.536 A:middle
here with the metrics group,

00:10:12.536 --> 00:10:14.156 A:middle
which contains my labels inside

00:10:14.156 --> 00:10:14.916 A:middle
of a vertical group.

00:10:15.086 --> 00:10:16.836 A:middle
And you can also use [inaudible]

00:10:17.296 --> 00:10:20.566 A:middle
and spacing in order to fine

00:10:20.566 --> 00:10:21.636 A:middle
tune placement within the

00:10:21.636 --> 00:10:22.036 A:middle
groups.

00:10:23.276 --> 00:10:25.646 A:middle
You can also specify z order by

00:10:25.646 --> 00:10:26.826 A:middle
the order in which the elements

00:10:26.826 --> 00:10:28.746 A:middle
appear in the outline view as

00:10:28.746 --> 00:10:29.166 A:middle
seen here.

00:10:29.236 --> 00:10:31.556 A:middle
This is going to make a huge

00:10:31.556 --> 00:10:32.926 A:middle
difference in making it easier

00:10:32.926 --> 00:10:33.926 A:middle
to create custom user

00:10:33.926 --> 00:10:34.616 A:middle
interfaces.

00:10:39.286 --> 00:10:41.136 A:middle
Now in my workout control screen

00:10:41.136 --> 00:10:42.236 A:middle
that you'll see here in a

00:10:42.746 --> 00:10:44.296 A:middle
second, I've now added a water

00:10:44.296 --> 00:10:44.916 A:middle
lock button.

00:10:45.566 --> 00:10:46.816 A:middle
And water lock can be really

00:10:46.816 --> 00:10:48.416 A:middle
helpful for rejecting false

00:10:48.416 --> 00:10:50.236 A:middle
touches from water being on the

00:10:50.236 --> 00:10:50.616 A:middle
screen.

00:10:51.256 --> 00:10:52.456 A:middle
Or in my case because my

00:10:52.456 --> 00:10:53.606 A:middle
daughter's usually trying to eat

00:10:53.606 --> 00:10:55.956 A:middle
my watch [laughter] but

00:10:57.036 --> 00:10:58.766 A:middle
previously in workout apps for

00:10:58.766 --> 00:11:00.486 A:middle
third parties, for a user to

00:11:00.486 --> 00:11:02.226 A:middle
engage water lock you'd have to

00:11:02.346 --> 00:11:04.006 A:middle
start the workout, go back out

00:11:04.006 --> 00:11:05.806 A:middle
to the Watch face, swipe up to

00:11:05.806 --> 00:11:07.266 A:middle
reveal control center, and then

00:11:07.266 --> 00:11:08.226 A:middle
enable water lock.

00:11:08.846 --> 00:11:10.116 A:middle
Then the next time that you

00:11:10.116 --> 00:11:11.406 A:middle
raised your wrist, the workout

00:11:11.406 --> 00:11:12.356 A:middle
app would be on the screen.

00:11:12.896 --> 00:11:13.786 A:middle
We're going to make that a lot

00:11:13.786 --> 00:11:15.666 A:middle
easier in watchOS 4 and now you

00:11:15.666 --> 00:11:17.526 A:middle
can include a button within your

00:11:17.526 --> 00:11:19.336 A:middle
own user interface so that it

00:11:19.336 --> 00:11:20.496 A:middle
fits the personality of your

00:11:21.296 --> 00:11:21.366 A:middle
app.

00:11:22.276 --> 00:11:24.016 A:middle
Now water lock can only be

00:11:24.016 --> 00:11:25.826 A:middle
enabled by developers, never

00:11:25.826 --> 00:11:26.426 A:middle
disabled.

00:11:26.816 --> 00:11:28.356 A:middle
The user has to do that

00:11:28.356 --> 00:11:28.996 A:middle
themselves.

00:11:29.406 --> 00:11:32.376 A:middle
When they try to interact with

00:11:32.376 --> 00:11:33.556 A:middle
the side button or digital

00:11:33.556 --> 00:11:35.596 A:middle
crown, an overlay will appear

00:11:35.596 --> 00:11:36.656 A:middle
just like the one seen here.

00:11:36.976 --> 00:11:38.046 A:middle
It's the same one that's used by

00:11:38.046 --> 00:11:39.226 A:middle
the system currently.

00:11:40.216 --> 00:11:41.696 A:middle
And it tells them how to disable

00:11:41.696 --> 00:11:42.256 A:middle
water lock.

00:11:43.436 --> 00:11:44.746 A:middle
Water lock can be enabled in

00:11:44.746 --> 00:11:46.596 A:middle
workout as well as in one other

00:11:46.596 --> 00:11:47.906 A:middle
session based activity that

00:11:47.906 --> 00:11:49.716 A:middle
we'll get to in a little bit in

00:11:49.716 --> 00:11:50.436 A:middle
the presentation.

00:11:50.916 --> 00:11:52.756 A:middle
And the reason for this is

00:11:52.756 --> 00:11:54.126 A:middle
because apps that are not in a

00:11:54.126 --> 00:11:56.206 A:middle
workout session, after a period

00:11:56.206 --> 00:11:57.766 A:middle
of time and when the wrist has

00:11:57.766 --> 00:11:59.256 A:middle
been dropped, the app will be

00:11:59.256 --> 00:12:00.446 A:middle
suspended in the background.

00:12:00.906 --> 00:12:02.086 A:middle
So when the user raises their

00:12:02.086 --> 00:12:03.576 A:middle
wrist, they won't see the app

00:12:03.576 --> 00:12:05.336 A:middle
anymore and the screen is locked

00:12:05.336 --> 00:12:06.666 A:middle
so they can't open it back up

00:12:07.486 --> 00:12:09.666 A:middle
but with a workout app, the app

00:12:09.666 --> 00:12:11.466 A:middle
will always appear every time

00:12:11.466 --> 00:12:12.796 A:middle
they raise their wrist.

00:12:13.446 --> 00:12:14.486 A:middle
So I can see up-to-date

00:12:14.486 --> 00:12:15.946 A:middle
information in -- from my

00:12:15.946 --> 00:12:18.776 A:middle
workout as I'm going through it

00:12:18.866 --> 00:12:19.766 A:middle
even though the screen is

00:12:19.766 --> 00:12:20.036 A:middle
locked.

00:12:20.646 --> 00:12:21.736 A:middle
Let's take a look at how to

00:12:21.736 --> 00:12:22.846 A:middle
enable this in code.

00:12:28.406 --> 00:12:29.736 A:middle
As you can see, it's pretty

00:12:29.736 --> 00:12:30.616 A:middle
simple to enable.

00:12:30.726 --> 00:12:32.206 A:middle
It's a single call on the shared

00:12:32.206 --> 00:12:32.996 A:middle
extension object.

00:12:33.986 --> 00:12:36.166 A:middle
Now one last thing to note is

00:12:36.166 --> 00:12:38.286 A:middle
that water lock can only be

00:12:38.316 --> 00:12:39.816 A:middle
enabled while the app is in the

00:12:39.816 --> 00:12:40.386 A:middle
foreground.

00:12:40.386 --> 00:12:42.186 A:middle
So the user is always aware of

00:12:42.186 --> 00:12:42.956 A:middle
what's going on.

00:12:43.856 --> 00:12:46.916 A:middle
Now here you can see my app is

00:12:46.916 --> 00:12:48.406 A:middle
giving me a congratulatory fist

00:12:48.406 --> 00:12:50.196 A:middle
bump for figuring out a way to

00:12:50.196 --> 00:12:51.526 A:middle
fit in a workout into my

00:12:51.526 --> 00:12:52.806 A:middle
parenting responsibilities.

00:12:53.656 --> 00:12:55.026 A:middle
Now this might be something that

00:12:55.026 --> 00:12:56.436 A:middle
I'd like to show someone else

00:12:57.026 --> 00:12:58.086 A:middle
but my options are kind of

00:12:58.086 --> 00:12:59.276 A:middle
limited on watchOS.

00:12:59.276 --> 00:13:00.646 A:middle
I can either do this awkward

00:13:00.646 --> 00:13:01.726 A:middle
gesture where I try and keep the

00:13:01.726 --> 00:13:02.966 A:middle
screen on while I turn it away

00:13:02.966 --> 00:13:05.006 A:middle
from myself or I can turn it

00:13:05.006 --> 00:13:06.936 A:middle
over and tap on the screen but

00:13:06.936 --> 00:13:08.346 A:middle
the content is upside down.

00:13:09.406 --> 00:13:11.616 A:middle
In watchOS 4, we're giving you

00:13:11.616 --> 00:13:13.116 A:middle
the ability to turn on auto

00:13:13.116 --> 00:13:13.566 A:middle
rotate.

00:13:14.316 --> 00:13:16.536 A:middle
When enabled, wrist movement

00:13:16.536 --> 00:13:18.166 A:middle
will not turn off the screen.

00:13:18.166 --> 00:13:19.456 A:middle
And we automatically rotate the

00:13:19.456 --> 00:13:20.616 A:middle
content when your wrist is

00:13:20.616 --> 00:13:21.526 A:middle
turned away from you.

00:13:22.076 --> 00:13:24.406 A:middle
This will not keep the screen on

00:13:24.406 --> 00:13:25.166 A:middle
indefinitely.

00:13:25.856 --> 00:13:27.376 A:middle
The idle timer will still sleep

00:13:27.376 --> 00:13:28.946 A:middle
the display after a period of

00:13:28.946 --> 00:13:30.376 A:middle
inactivity but you should have

00:13:30.436 --> 00:13:31.616 A:middle
plenty of time to show the

00:13:31.616 --> 00:13:32.966 A:middle
content on your watch to someone

00:13:32.966 --> 00:13:33.266 A:middle
else.

00:13:34.386 --> 00:13:35.366 A:middle
Let's take a look at the

00:13:35.366 --> 00:13:35.836 A:middle
property.

00:13:36.456 --> 00:13:38.486 A:middle
You're going to start to see a

00:13:38.486 --> 00:13:39.316 A:middle
bit of a theme here.

00:13:39.596 --> 00:13:40.606 A:middle
You don't have to do a lot of

00:13:40.606 --> 00:13:41.926 A:middle
work to take advantage of a lot

00:13:41.926 --> 00:13:42.906 A:middle
of the UI capabilities that

00:13:42.906 --> 00:13:44.476 A:middle
we're adding in watchOS 4.

00:13:45.296 --> 00:13:47.236 A:middle
There's a lot of applications of

00:13:47.236 --> 00:13:47.566 A:middle
this.

00:13:47.616 --> 00:13:48.576 A:middle
So let's take a look at a few

00:13:48.576 --> 00:13:49.136 A:middle
examples.

00:13:50.076 --> 00:13:52.506 A:middle
Proloquo4Text is a text based

00:13:52.506 --> 00:13:54.506 A:middle
communication app that gives

00:13:54.506 --> 00:13:56.176 A:middle
literate children, teens, and

00:13:56.176 --> 00:13:58.206 A:middle
adults the ability to speak

00:13:58.206 --> 00:13:59.386 A:middle
without voice.

00:13:59.826 --> 00:14:01.726 A:middle
The app allows them to tap on

00:14:01.726 --> 00:14:03.596 A:middle
preprogrammed personal phrases

00:14:03.926 --> 00:14:05.026 A:middle
and turn their wrist towards

00:14:05.026 --> 00:14:06.636 A:middle
another person to communicate

00:14:06.776 --> 00:14:07.916 A:middle
with a text on their wrist.

00:14:08.666 --> 00:14:10.556 A:middle
Here I can place my coffee order

00:14:11.406 --> 00:14:12.556 A:middle
by showing my wrist to the

00:14:12.556 --> 00:14:14.146 A:middle
cashier and having the text

00:14:14.146 --> 00:14:15.896 A:middle
remain on screen and upright

00:14:15.896 --> 00:14:17.256 A:middle
when I turn it away from myself.

00:14:17.806 --> 00:14:20.406 A:middle
I can even pay for my order

00:14:20.406 --> 00:14:22.206 A:middle
using the Starbucks app.

00:14:23.026 --> 00:14:24.586 A:middle
Starbucks lets me open my

00:14:24.586 --> 00:14:26.436 A:middle
barcode from my personal card

00:14:26.526 --> 00:14:28.236 A:middle
and have that shown on screen.

00:14:29.316 --> 00:14:30.436 A:middle
Then I can show that to the

00:14:30.436 --> 00:14:32.696 A:middle
scanner at the cashier and have

00:14:32.696 --> 00:14:34.336 A:middle
it remain on screen so that it

00:14:34.336 --> 00:14:35.486 A:middle
can read it.

00:14:35.816 --> 00:14:36.756 A:middle
There's a ton of different

00:14:36.756 --> 00:14:37.716 A:middle
applications of this.

00:14:37.716 --> 00:14:39.146 A:middle
So you should consider what

00:14:39.146 --> 00:14:40.596 A:middle
content in your application

00:14:40.596 --> 00:14:41.436 A:middle
might be applicable.

00:14:42.036 --> 00:14:44.916 A:middle
In our next step, we have a new

00:14:44.916 --> 00:14:46.846 A:middle
style for paging views, a

00:14:46.846 --> 00:14:47.706 A:middle
vertical paging view.

00:14:47.706 --> 00:14:51.116 A:middle
I could have implemented this as

00:14:51.116 --> 00:14:52.736 A:middle
a scroll view but really these

00:14:52.736 --> 00:14:54.126 A:middle
are two distinct pages.

00:14:54.256 --> 00:14:55.446 A:middle
And it's great how they just

00:14:55.446 --> 00:14:56.416 A:middle
snap into place.

00:14:56.946 --> 00:14:58.726 A:middle
It's also really natural to use

00:14:58.726 --> 00:14:59.596 A:middle
with the digital crown.

00:15:00.536 --> 00:15:01.806 A:middle
And the animation between the

00:15:01.806 --> 00:15:03.876 A:middle
pages is very similar to the one

00:15:03.876 --> 00:15:05.456 A:middle
we introduced last year for

00:15:05.456 --> 00:15:07.186 A:middle
performing segues between table

00:15:07.186 --> 00:15:08.916 A:middle
rows in a master detail

00:15:08.916 --> 00:15:10.986 A:middle
application but now you can do

00:15:10.986 --> 00:15:12.546 A:middle
so without using a navigation

00:15:12.546 --> 00:15:12.976 A:middle
controller.

00:15:15.216 --> 00:15:17.196 A:middle
Let's take a look at how you

00:15:17.196 --> 00:15:18.396 A:middle
implement this interface.

00:15:18.976 --> 00:15:21.636 A:middle
So we replaced the reload root

00:15:21.636 --> 00:15:22.886 A:middle
controller's method with a new

00:15:22.886 --> 00:15:24.886 A:middle
one that takes in two key pieces

00:15:24.886 --> 00:15:25.846 A:middle
of new information.

00:15:26.506 --> 00:15:28.156 A:middle
The first is the ability to set

00:15:28.156 --> 00:15:28.986 A:middle
the orientation.

00:15:29.216 --> 00:15:30.676 A:middle
So you use the same method

00:15:30.676 --> 00:15:31.816 A:middle
whether you're doing it in a

00:15:31.816 --> 00:15:33.526 A:middle
horizontal paging view or a

00:15:33.526 --> 00:15:34.416 A:middle
vertical paging view.

00:15:35.516 --> 00:15:36.916 A:middle
And the second one is something

00:15:36.916 --> 00:15:37.946 A:middle
that we've heard a lot of

00:15:37.946 --> 00:15:39.676 A:middle
feedback about and we're excited

00:15:39.676 --> 00:15:40.966 A:middle
to be able to offer in watchOS

00:15:40.966 --> 00:15:41.246 A:middle
4.

00:15:41.346 --> 00:15:42.706 A:middle
And that's the ability to set

00:15:42.706 --> 00:15:44.146 A:middle
the initial page index.

00:15:44.736 --> 00:15:46.256 A:middle
So this is great for things like

00:15:46.256 --> 00:15:47.636 A:middle
workout apps where you want a

00:15:47.636 --> 00:15:48.566 A:middle
main workout UI.

00:15:48.566 --> 00:15:52.726 A:middle
[Applause] I know we've seen

00:15:52.796 --> 00:15:53.686 A:middle
lots of radars.

00:15:54.916 --> 00:15:56.166 A:middle
And you want the control screen

00:15:56.166 --> 00:15:57.476 A:middle
left to center but you want to

00:15:57.476 --> 00:15:58.756 A:middle
load directly into the main

00:15:58.756 --> 00:15:59.326 A:middle
workout UI.

00:16:00.106 --> 00:16:01.186 A:middle
So this allows you to set the

00:16:01.186 --> 00:16:02.676 A:middle
index to wherever you want and

00:16:02.676 --> 00:16:03.826 A:middle
have it load directly there.

00:16:08.046 --> 00:16:09.336 A:middle
Now here we have a history view.

00:16:10.136 --> 00:16:11.536 A:middle
And when doing an interface like

00:16:11.536 --> 00:16:12.956 A:middle
this where we may have hundreds

00:16:12.956 --> 00:16:14.386 A:middle
of records, there's a couple of

00:16:14.386 --> 00:16:15.636 A:middle
things to keep in mind.

00:16:16.166 --> 00:16:17.736 A:middle
The first is storage.

00:16:17.886 --> 00:16:19.136 A:middle
I probably don't want to store

00:16:19.136 --> 00:16:20.486 A:middle
all of my workouts that I've

00:16:20.486 --> 00:16:22.436 A:middle
ever completed on the watch when

00:16:22.436 --> 00:16:24.086 A:middle
I can easily load them using

00:16:24.086 --> 00:16:25.036 A:middle
watch connectivity from the

00:16:25.036 --> 00:16:26.576 A:middle
phone or from a server.

00:16:27.916 --> 00:16:29.526 A:middle
The second is performance.

00:16:30.076 --> 00:16:31.496 A:middle
Loading too many table rows at

00:16:31.496 --> 00:16:34.156 A:middle
once can lead -- load -- lead to

00:16:34.156 --> 00:16:35.476 A:middle
a decrease in performance and

00:16:35.476 --> 00:16:36.476 A:middle
load time for the table.

00:16:42.096 --> 00:16:44.056 A:middle
So here we're now allowing you

00:16:44.186 --> 00:16:45.716 A:middle
to get callbacks for when the

00:16:45.716 --> 00:16:47.356 A:middle
user scrolls to the bottom of

00:16:47.356 --> 00:16:48.466 A:middle
the screen or the top of the

00:16:48.466 --> 00:16:48.896 A:middle
screen.

00:16:48.896 --> 00:16:50.246 A:middle
So you can do things like I have

00:16:50.246 --> 00:16:51.706 A:middle
here where I'm getting the

00:16:51.706 --> 00:16:52.286 A:middle
callback.

00:16:52.686 --> 00:16:54.106 A:middle
I'm loading -- putting on a

00:16:54.106 --> 00:16:55.396 A:middle
loading indicator and then I'm

00:16:55.396 --> 00:16:56.886 A:middle
loading data from the phone.

00:16:57.426 --> 00:17:00.456 A:middle
Let's take a look at how you can

00:17:00.456 --> 00:17:01.676 A:middle
implement these callbacks.

00:17:06.436 --> 00:17:07.736 A:middle
So the first one is the one I

00:17:07.736 --> 00:17:09.016 A:middle
was just using in the last user

00:17:09.016 --> 00:17:09.526 A:middle
interface.

00:17:10.056 --> 00:17:11.806 A:middle
InterfaceOffsetDidScrollToTop.

00:17:12.366 --> 00:17:13.256 A:middle
This gets called when the

00:17:13.256 --> 00:17:14.716 A:middle
animation completes, when the

00:17:14.716 --> 00:17:16.486 A:middle
user scrolls all the way to the

00:17:16.486 --> 00:17:17.246 A:middle
bottom of the screen.

00:17:18.176 --> 00:17:19.306 A:middle
The second is the exact

00:17:19.306 --> 00:17:19.816 A:middle
opposite,

00:17:19.916 --> 00:17:21.766 A:middle
interfaceOffsetDidScrollToTop

00:17:22.046 --> 00:17:22.926 A:middle
which gets called when you

00:17:23.186 --> 00:17:24.196 A:middle
scroll to the top of the screen.

00:17:24.346 --> 00:17:25.666 A:middle
And the last one,

00:17:25.666 --> 00:17:27.286 A:middle
interfaceDidScrollToTop gets

00:17:27.286 --> 00:17:28.926 A:middle
called when the user taps on the

00:17:28.926 --> 00:17:30.506 A:middle
status bar, which scrolls the

00:17:30.506 --> 00:17:31.436 A:middle
interface all the way to the

00:17:31.436 --> 00:17:31.706 A:middle
top.

00:17:32.336 --> 00:17:33.826 A:middle
Now we've also included in a

00:17:33.826 --> 00:17:35.426 A:middle
scroll function, which lets you

00:17:35.426 --> 00:17:38.326 A:middle
pass in an interface element and

00:17:38.386 --> 00:17:40.036 A:middle
have it scrolls to appear at

00:17:40.036 --> 00:17:41.256 A:middle
either the top, center, or

00:17:41.256 --> 00:17:42.066 A:middle
bottom of the screen.

00:17:42.836 --> 00:17:44.606 A:middle
I use that in my history view to

00:17:44.606 --> 00:17:45.736 A:middle
show loading indicator.

00:17:46.506 --> 00:17:47.446 A:middle
When I loaded the group that

00:17:47.446 --> 00:17:49.126 A:middle
contained my animation, it

00:17:49.126 --> 00:17:50.036 A:middle
loaded off screen.

00:17:50.226 --> 00:17:51.836 A:middle
So I passed it into the scroll

00:17:51.836 --> 00:17:54.026 A:middle
method and set it to show at the

00:17:54.026 --> 00:17:54.826 A:middle
bottom of the screen.

00:17:57.996 --> 00:17:58.706 A:middle
All right.

00:17:59.206 --> 00:18:01.076 A:middle
And here we have a reimagined

00:18:01.856 --> 00:18:03.386 A:middle
post workout screen that's been

00:18:03.386 --> 00:18:04.966 A:middle
redesigned as a full screen

00:18:04.966 --> 00:18:05.516 A:middle
animation.

00:18:06.526 --> 00:18:08.726 A:middle
In watchOS 4 for SpriteKit and

00:18:08.726 --> 00:18:10.266 A:middle
SyncIt [phonetic] apps, you can

00:18:10.266 --> 00:18:11.816 A:middle
now make use of the entire

00:18:11.816 --> 00:18:12.276 A:middle
display.

00:18:13.656 --> 00:18:15.516 A:middle
It is still a watch though, so

00:18:15.516 --> 00:18:16.776 A:middle
we are always going to display

00:18:16.776 --> 00:18:18.976 A:middle
the time in the top corner with

00:18:18.976 --> 00:18:20.526 A:middle
a gradient behind it so the user

00:18:20.526 --> 00:18:22.116 A:middle
can always read the display

00:18:22.486 --> 00:18:23.486 A:middle
regardless of the color of

00:18:23.486 --> 00:18:25.046 A:middle
content behind it.

00:18:26.446 --> 00:18:28.026 A:middle
As you can see, there's a lot of

00:18:28.026 --> 00:18:29.856 A:middle
new changes in creating your

00:18:29.856 --> 00:18:31.646 A:middle
user interfaces in watchOS 4.

00:18:31.806 --> 00:18:33.386 A:middle
I encourage you to check out a

00:18:33.386 --> 00:18:35.296 A:middle
session later this week on

00:18:35.956 --> 00:18:38.376 A:middle
planning a great Watch

00:18:38.376 --> 00:18:40.146 A:middle
experience, which will be going

00:18:40.146 --> 00:18:41.726 A:middle
through planning both the

00:18:41.726 --> 00:18:43.006 A:middle
interactions that you should do

00:18:43.006 --> 00:18:44.726 A:middle
on a Watch as well as the design

00:18:44.726 --> 00:18:45.486 A:middle
of the application.

00:18:46.256 --> 00:18:48.236 A:middle
Next, let's take a look at

00:18:48.236 --> 00:18:48.846 A:middle
performance.

00:18:49.576 --> 00:18:51.186 A:middle
Now interactions on watches

00:18:51.186 --> 00:18:52.336 A:middle
we've talked about previously,

00:18:52.476 --> 00:18:54.016 A:middle
are short but numerous.

00:18:54.496 --> 00:18:55.696 A:middle
So we always want to make sure

00:18:55.696 --> 00:18:57.006 A:middle
that we're both preparing ahead

00:18:57.476 --> 00:18:58.746 A:middle
but we're also as responsive as

00:18:58.746 --> 00:18:59.246 A:middle
possible.

00:18:59.786 --> 00:19:02.826 A:middle
And to that end, in watchOS 2,

00:19:03.286 --> 00:19:04.606 A:middle
we moved the extension from

00:19:04.606 --> 00:19:06.146 A:middle
running on the phone to running

00:19:06.146 --> 00:19:06.786 A:middle
on the Watch.

00:19:07.246 --> 00:19:08.606 A:middle
And that did a couple of things.

00:19:08.986 --> 00:19:10.386 A:middle
It meant that you could run the

00:19:10.386 --> 00:19:11.896 A:middle
app when the phone was no longer

00:19:11.896 --> 00:19:13.986 A:middle
present but it also meant lower

00:19:13.986 --> 00:19:15.306 A:middle
latency and communication.

00:19:16.366 --> 00:19:19.146 A:middle
The behind the scenes, the app

00:19:19.406 --> 00:19:21.186 A:middle
and extension are still running

00:19:21.186 --> 00:19:22.856 A:middle
in separate processes where your

00:19:22.856 --> 00:19:24.486 A:middle
code is trying to make updates

00:19:24.616 --> 00:19:25.856 A:middle
and you're responding to events.

00:19:25.856 --> 00:19:27.206 A:middle
So there's latency in the

00:19:27.206 --> 00:19:28.506 A:middle
communication for the inner

00:19:28.506 --> 00:19:29.536 A:middle
process communication between

00:19:29.536 --> 00:19:29.756 A:middle
the two.

00:19:29.756 --> 00:19:32.276 A:middle
With a little bit of magic in

00:19:32.276 --> 00:19:34.916 A:middle
watchOS 4, at run time, we're

00:19:34.916 --> 00:19:36.546 A:middle
loading both the extension and

00:19:36.546 --> 00:19:38.176 A:middle
the app into the same process.

00:19:38.626 --> 00:19:40.246 A:middle
This is going to make a huge

00:19:40.246 --> 00:19:41.346 A:middle
difference in performance of

00:19:41.346 --> 00:19:41.916 A:middle
your apps.

00:19:42.356 --> 00:19:43.736 A:middle
You should see things like lower

00:19:43.736 --> 00:19:45.736 A:middle
touch latency, faster loading of

00:19:45.736 --> 00:19:47.746 A:middle
views as well as higher frame

00:19:47.746 --> 00:19:48.716 A:middle
rates while you're interacting

00:19:48.716 --> 00:19:49.356 A:middle
with the device.

00:19:49.356 --> 00:19:51.746 A:middle
And the best part is you don't

00:19:51.746 --> 00:19:53.056 A:middle
have to do anything for your

00:19:53.056 --> 00:19:54.216 A:middle
users to gain from this.

00:19:54.596 --> 00:19:55.976 A:middle
This is a completely binary

00:19:55.976 --> 00:19:58.066 A:middle
compatible change for all apps

00:19:58.066 --> 00:19:59.216 A:middle
watchOS 2 and later.

00:19:59.956 --> 00:20:01.546 A:middle
That means no updates.

00:20:02.176 --> 00:20:03.166 A:middle
[Applause] No recompiling.

00:20:04.666 --> 00:20:06.446 A:middle
All existing apps either on a

00:20:06.446 --> 00:20:07.966 A:middle
user's device or in the App

00:20:07.966 --> 00:20:09.136 A:middle
Store are just going to start

00:20:09.136 --> 00:20:10.666 A:middle
benefiting in watchOS 4.

00:20:11.656 --> 00:20:12.856 A:middle
This is going to make a huge

00:20:12.856 --> 00:20:13.296 A:middle
difference.

00:20:13.296 --> 00:20:14.106 A:middle
So we can't wait for you to

00:20:14.106 --> 00:20:15.246 A:middle
check it out.

00:20:16.646 --> 00:20:17.826 A:middle
I moved too far away.

00:20:18.456 --> 00:20:20.416 A:middle
And finally let's take a look at

00:20:20.416 --> 00:20:21.336 A:middle
background processing.

00:20:22.196 --> 00:20:23.466 A:middle
Like I said before, it's really

00:20:23.466 --> 00:20:25.046 A:middle
important to prepare ahead of

00:20:25.046 --> 00:20:27.036 A:middle
time and making sure that the

00:20:27.036 --> 00:20:28.446 A:middle
app is always up-to-date

00:20:28.446 --> 00:20:29.636 A:middle
whenever the user wants to look

00:20:29.636 --> 00:20:30.176 A:middle
at their wrist.

00:20:30.876 --> 00:20:31.876 A:middle
And this can be done with a

00:20:31.876 --> 00:20:33.146 A:middle
combination of background

00:20:33.146 --> 00:20:34.676 A:middle
running modes, use of the

00:20:34.676 --> 00:20:36.906 A:middle
complication, and snapshot APIs

00:20:36.906 --> 00:20:38.326 A:middle
as well as some changes that

00:20:38.326 --> 00:20:39.756 A:middle
we're making this year for what

00:20:39.756 --> 00:20:41.436 A:middle
will be called the Frontmost App

00:20:41.436 --> 00:20:41.786 A:middle
State.

00:20:42.306 --> 00:20:43.466 A:middle
We'll get to that in just a few

00:20:43.466 --> 00:20:43.906 A:middle
minutes.

00:20:44.286 --> 00:20:47.646 A:middle
Now last year we introduced the

00:20:47.646 --> 00:20:49.086 A:middle
workout processing background

00:20:49.086 --> 00:20:50.966 A:middle
mode allowing third party apps

00:20:50.966 --> 00:20:52.426 A:middle
to run in the background and

00:20:52.426 --> 00:20:53.996 A:middle
making the app available every

00:20:53.996 --> 00:20:55.096 A:middle
time the user raised their

00:20:55.096 --> 00:20:55.426 A:middle
wrist.

00:20:56.296 --> 00:20:58.086 A:middle
We're continuing to make these

00:20:58.086 --> 00:20:59.936 A:middle
APIs better this year by adding

00:20:59.936 --> 00:21:01.016 A:middle
a few new additions.

00:21:01.856 --> 00:21:03.656 A:middle
The first is a hardware pause

00:21:03.656 --> 00:21:04.576 A:middle
and resume API.

00:21:05.426 --> 00:21:06.646 A:middle
When a user presses the side

00:21:06.646 --> 00:21:07.896 A:middle
button and digital crown at the

00:21:07.896 --> 00:21:11.046 A:middle
same time, an event is generated

00:21:11.046 --> 00:21:12.426 A:middle
that you can respond to in your

00:21:12.426 --> 00:21:13.016 A:middle
application.

00:21:14.516 --> 00:21:15.596 A:middle
That way you can pause and

00:21:15.596 --> 00:21:17.156 A:middle
resume the workout depending on

00:21:17.156 --> 00:21:19.276 A:middle
which state the session is in.

00:21:21.156 --> 00:21:23.256 A:middle
The second is workout segments.

00:21:23.876 --> 00:21:25.136 A:middle
And this allows you -- it's a

00:21:25.136 --> 00:21:26.156 A:middle
new type on the HK [phonetic]

00:21:26.156 --> 00:21:28.586 A:middle
workout event class and this

00:21:28.586 --> 00:21:30.316 A:middle
allows you to mark important

00:21:30.316 --> 00:21:31.756 A:middle
durations of time within your

00:21:31.756 --> 00:21:32.176 A:middle
workout.

00:21:32.886 --> 00:21:34.056 A:middle
This could be used for things

00:21:34.056 --> 00:21:35.166 A:middle
like marking the different

00:21:35.166 --> 00:21:36.256 A:middle
sections of an interval

00:21:36.256 --> 00:21:37.166 A:middle
training, for example.

00:21:37.806 --> 00:21:40.196 A:middle
And last year we started to

00:21:40.196 --> 00:21:41.586 A:middle
track workout routes for

00:21:41.586 --> 00:21:43.666 A:middle
specific types of workouts using

00:21:43.666 --> 00:21:44.946 A:middle
the Apple Workout app.

00:21:45.516 --> 00:21:46.986 A:middle
Now with a user's permission,

00:21:47.406 --> 00:21:48.966 A:middle
you can both read these workout

00:21:49.016 --> 00:21:50.546 A:middle
routes as well as create your

00:21:50.546 --> 00:21:50.736 A:middle
own.

00:21:51.926 --> 00:21:53.056 A:middle
Now if you already have a

00:21:53.056 --> 00:21:53.876 A:middle
workout app or you're

00:21:53.876 --> 00:21:55.506 A:middle
considering making one, you

00:21:55.506 --> 00:21:56.566 A:middle
should check out the what's new

00:21:56.566 --> 00:21:57.716 A:middle
in health session later this

00:21:57.716 --> 00:21:59.196 A:middle
week which will be going through

00:21:59.196 --> 00:22:01.056 A:middle
how to use these APIs as well as

00:22:01.056 --> 00:22:02.366 A:middle
other changes in HealthKit that

00:22:02.366 --> 00:22:03.966 A:middle
you should take advantage of.

00:22:04.956 --> 00:22:06.806 A:middle
Remember also adding a few new

00:22:06.806 --> 00:22:08.266 A:middle
background modes in WatchKit

00:22:08.266 --> 00:22:08.666 A:middle
this year.

00:22:09.286 --> 00:22:10.646 A:middle
The first of which is a location

00:22:10.646 --> 00:22:11.316 A:middle
background mode.

00:22:11.986 --> 00:22:13.166 A:middle
This is great for things like

00:22:13.166 --> 00:22:15.226 A:middle
location based games as well as

00:22:15.226 --> 00:22:17.776 A:middle
turn-by-turn navigation apps.

00:22:17.986 --> 00:22:19.346 A:middle
And similar to workout apps,

00:22:19.416 --> 00:22:20.936 A:middle
it'll always be available every

00:22:20.936 --> 00:22:22.116 A:middle
time the user raises their

00:22:22.116 --> 00:22:22.436 A:middle
wrist.

00:22:22.436 --> 00:22:24.866 A:middle
And if there's something that

00:22:24.866 --> 00:22:26.146 A:middle
you need to alert the user to

00:22:26.146 --> 00:22:27.156 A:middle
like when I've made a wrong

00:22:27.156 --> 00:22:28.726 A:middle
turn, you can use audio and

00:22:28.726 --> 00:22:30.386 A:middle
haptics from the background in

00:22:30.386 --> 00:22:31.416 A:middle
order to get their attention.

00:22:31.966 --> 00:22:34.786 A:middle
And like I had mentioned before,

00:22:34.786 --> 00:22:35.926 A:middle
there was another session based

00:22:35.926 --> 00:22:38.256 A:middle
activity that you can also water

00:22:38.256 --> 00:22:39.556 A:middle
lock mode with and this is --

00:22:39.556 --> 00:22:40.596 A:middle
that's location mode.

00:22:41.066 --> 00:22:42.386 A:middle
So you can use it in conjunction

00:22:42.386 --> 00:22:43.646 A:middle
with water-based activities.

00:22:44.286 --> 00:22:46.906 A:middle
In order to conserve battery

00:22:46.906 --> 00:22:48.906 A:middle
power, though, CPU in the

00:22:48.906 --> 00:22:50.186 A:middle
background is limited.

00:22:50.356 --> 00:22:51.656 A:middle
So you need to monitor what

00:22:51.656 --> 00:22:52.646 A:middle
things need to be done in the

00:22:52.646 --> 00:22:54.166 A:middle
background and what can be saved

00:22:54.226 --> 00:22:54.696 A:middle
for later.

00:22:55.286 --> 00:22:59.586 A:middle
And lastly, you must start the

00:22:59.586 --> 00:23:01.256 A:middle
location session from the

00:23:01.256 --> 00:23:02.716 A:middle
foreground just like a workout

00:23:03.276 --> 00:23:04.996 A:middle
so that the user's always aware

00:23:04.996 --> 00:23:05.796 A:middle
of what's going on.

00:23:06.316 --> 00:23:07.316 A:middle
And while you're accessing

00:23:07.316 --> 00:23:09.096 A:middle
location, there will be a status

00:23:09.096 --> 00:23:11.096 A:middle
indicator and control center so

00:23:11.096 --> 00:23:12.556 A:middle
that they can always monitor

00:23:12.556 --> 00:23:12.976 A:middle
their privacy.

00:23:16.136 --> 00:23:17.536 A:middle
And we've also added in-line

00:23:17.536 --> 00:23:19.136 A:middle
audio recording as well as a

00:23:19.136 --> 00:23:19.916 A:middle
background mode.

00:23:19.976 --> 00:23:22.696 A:middle
And recording has been available

00:23:22.696 --> 00:23:24.616 A:middle
since watchOS 2 but it was only

00:23:24.616 --> 00:23:26.636 A:middle
offered in a modal form where we

00:23:26.636 --> 00:23:27.956 A:middle
would hand a file back to you

00:23:27.956 --> 00:23:29.176 A:middle
after the user had finished

00:23:29.176 --> 00:23:29.876 A:middle
their recording.

00:23:30.536 --> 00:23:31.586 A:middle
You could also continue

00:23:31.586 --> 00:23:32.676 A:middle
recording when the user had

00:23:32.676 --> 00:23:34.006 A:middle
dropped their wrist but it would

00:23:34.006 --> 00:23:35.026 A:middle
keep the screen on for the

00:23:35.026 --> 00:23:35.816 A:middle
entire time.

00:23:36.616 --> 00:23:38.726 A:middle
Now in watchOS 4, we're offering

00:23:38.726 --> 00:23:40.346 A:middle
in-line audio recording to solve

00:23:40.346 --> 00:23:41.356 A:middle
some of these problems.

00:23:43.096 --> 00:23:45.196 A:middle
First, you no longer are limited

00:23:45.196 --> 00:23:46.586 A:middle
to the modal form so you can

00:23:46.586 --> 00:23:47.686 A:middle
create your own custom U

00:23:47.686 --> 00:23:49.176 A:middle
recording controls that fit the

00:23:49.236 --> 00:23:51.186 A:middle
UI of your app.

00:23:51.476 --> 00:23:52.936 A:middle
You can also do in-line audio

00:23:52.936 --> 00:23:53.516 A:middle
recording.

00:23:53.636 --> 00:23:54.746 A:middle
So if you wanted to look for a

00:23:54.746 --> 00:23:56.326 A:middle
certain signature in the audio

00:23:56.676 --> 00:23:57.886 A:middle
or if you wanted to do things

00:23:57.886 --> 00:23:59.066 A:middle
like real time language

00:23:59.066 --> 00:24:00.136 A:middle
translation on the watch.

00:24:01.446 --> 00:24:02.976 A:middle
And you can continue recording

00:24:02.976 --> 00:24:03.976 A:middle
when the user has dropped their

00:24:03.976 --> 00:24:05.416 A:middle
wrist but now it's a full

00:24:05.416 --> 00:24:06.336 A:middle
background mode.

00:24:06.506 --> 00:24:07.666 A:middle
So you don't need to waste the

00:24:07.666 --> 00:24:09.256 A:middle
additional battery power of

00:24:09.256 --> 00:24:10.136 A:middle
keeping the screen on.

00:24:11.416 --> 00:24:12.746 A:middle
Imagine being able to walk into

00:24:12.746 --> 00:24:14.286 A:middle
classroom and record an entire

00:24:14.286 --> 00:24:15.696 A:middle
lecture right from your wrist.

00:24:16.166 --> 00:24:18.746 A:middle
And similar to other background

00:24:18.746 --> 00:24:21.416 A:middle
modes in watchOS, the app will

00:24:21.416 --> 00:24:22.686 A:middle
always appear every time the

00:24:22.686 --> 00:24:23.856 A:middle
user raises their wrist.

00:24:24.296 --> 00:24:26.386 A:middle
It'll be CPU limited and the app

00:24:26.426 --> 00:24:27.876 A:middle
must be started -- the session

00:24:27.876 --> 00:24:28.686 A:middle
must be started from the

00:24:28.686 --> 00:24:29.186 A:middle
foreground.

00:24:30.006 --> 00:24:31.476 A:middle
And while you're doing a

00:24:31.476 --> 00:24:32.956 A:middle
recording, there will be an

00:24:32.956 --> 00:24:34.636 A:middle
indicator on the watch face that

00:24:34.806 --> 00:24:36.556 A:middle
the user can tap on to return to

00:24:36.556 --> 00:24:38.046 A:middle
the recording app.

00:24:40.276 --> 00:24:41.886 A:middle
These background modes are going

00:24:41.886 --> 00:24:43.146 A:middle
to make a huge difference in

00:24:43.146 --> 00:24:45.226 A:middle
doing ongoing tasks in watchOS

00:24:45.226 --> 00:24:45.466 A:middle
4.

00:24:47.336 --> 00:24:48.416 A:middle
All right.

00:24:49.806 --> 00:24:51.406 A:middle
We're also supporting core

00:24:51.406 --> 00:24:53.056 A:middle
Bluetooth on Watch -- in watchOS

00:24:53.056 --> 00:24:53.286 A:middle
4.

00:24:53.686 --> 00:24:53.796 A:middle
This --

00:24:54.516 --> 00:24:57.096 A:middle
[ Applause ]

00:24:57.596 --> 00:24:58.466 A:middle
This means you can connect

00:24:58.556 --> 00:25:00.086 A:middle
directly to the Watch from your

00:25:00.086 --> 00:25:00.706 A:middle
devices.

00:25:01.576 --> 00:25:03.716 A:middle
And get updated data with lower

00:25:03.716 --> 00:25:05.826 A:middle
latency as well as continue use

00:25:05.826 --> 00:25:07.616 A:middle
when the phone is no longer

00:25:07.616 --> 00:25:08.016 A:middle
present.

00:25:08.726 --> 00:25:09.916 A:middle
And previously for Bluetooth

00:25:09.916 --> 00:25:11.366 A:middle
devices, you'd have to connect

00:25:11.366 --> 00:25:13.076 A:middle
with the phone and then shuttle

00:25:13.076 --> 00:25:14.126 A:middle
data over using Watch

00:25:14.126 --> 00:25:14.696 A:middle
connectivity.

00:25:15.236 --> 00:25:16.566 A:middle
Now you should get much faster

00:25:16.566 --> 00:25:16.996 A:middle
updates.

00:25:17.296 --> 00:25:18.686 A:middle
And with core Bluetooth on the

00:25:18.686 --> 00:25:20.366 A:middle
Watch, you can connect up to two

00:25:20.366 --> 00:25:21.076 A:middle
peripherals.

00:25:21.926 --> 00:25:23.116 A:middle
And we're only supporting

00:25:23.116 --> 00:25:24.356 A:middle
central mode which means that

00:25:24.356 --> 00:25:26.126 A:middle
you need to -- you can connect

00:25:26.126 --> 00:25:27.736 A:middle
to other devices but the Watch

00:25:27.736 --> 00:25:29.366 A:middle
cannot be used as a peripheral

00:25:29.366 --> 00:25:29.936 A:middle
itself.

00:25:30.456 --> 00:25:32.206 A:middle
And while you're in the

00:25:32.206 --> 00:25:33.766 A:middle
foreground, there's a minimum

00:25:33.766 --> 00:25:35.536 A:middle
time between samples of 30

00:25:35.536 --> 00:25:37.516 A:middle
milliseconds and when used in

00:25:37.516 --> 00:25:38.816 A:middle
conjunction with the background

00:25:38.816 --> 00:25:41.626 A:middle
mode, that time is limited to

00:25:41.626 --> 00:25:43.106 A:middle
120 milliseconds.

00:25:43.816 --> 00:25:46.336 A:middle
Now when used in conjunction

00:25:46.336 --> 00:25:47.346 A:middle
with a background mode,

00:25:47.976 --> 00:25:49.346 A:middle
background running apps can only

00:25:49.346 --> 00:25:50.656 A:middle
connect not scan.

00:25:50.656 --> 00:25:51.966 A:middle
So you need to do your pairing

00:25:51.966 --> 00:25:53.556 A:middle
and discovery process while the

00:25:53.556 --> 00:25:54.806 A:middle
app is in the foreground.

00:25:58.466 --> 00:26:01.136 A:middle
Now when the app is suspended,

00:26:01.196 --> 00:26:02.006 A:middle
the peripheral will

00:26:02.006 --> 00:26:03.386 A:middle
automatically be disconnected

00:26:03.386 --> 00:26:04.726 A:middle
and we will not wake up the app

00:26:04.726 --> 00:26:06.196 A:middle
for newly advertised values.

00:26:06.386 --> 00:26:08.386 A:middle
So if you need ongoing updates,

00:26:08.386 --> 00:26:09.156 A:middle
you need to use it in

00:26:09.156 --> 00:26:10.226 A:middle
conjunction with the background

00:26:10.266 --> 00:26:10.486 A:middle
mode.

00:26:11.076 --> 00:26:14.336 A:middle
If you want to learn more, you

00:26:14.336 --> 00:26:15.326 A:middle
should check out the core

00:26:15.326 --> 00:26:16.846 A:middle
Bluetooth session later this

00:26:16.846 --> 00:26:18.946 A:middle
week but first let's take a look

00:26:18.946 --> 00:26:20.326 A:middle
at an example of how an app can

00:26:20.516 --> 00:26:22.146 A:middle
make a use of this.

00:26:22.996 --> 00:26:26.086 A:middle
So ReSound Smart 3D is an app

00:26:26.086 --> 00:26:27.736 A:middle
that lets you connect to

00:26:27.736 --> 00:26:29.486 A:middle
Bluetooth enabled hearing aids

00:26:29.486 --> 00:26:30.886 A:middle
so you can change the listening

00:26:30.886 --> 00:26:32.656 A:middle
environment depending on where

00:26:32.656 --> 00:26:33.126 A:middle
you are.

00:26:33.126 --> 00:26:34.886 A:middle
So I can change from an outdoor

00:26:34.886 --> 00:26:36.046 A:middle
listening environment to a

00:26:36.046 --> 00:26:37.646 A:middle
restaurant, which has a pretty

00:26:37.646 --> 00:26:39.466 A:middle
different audio profile just

00:26:39.466 --> 00:26:40.586 A:middle
with a tap on my wrist.

00:26:40.586 --> 00:26:42.916 A:middle
And with watchOS 4, they can

00:26:42.916 --> 00:26:44.466 A:middle
connect directly to the hearing

00:26:44.466 --> 00:26:46.066 A:middle
aids so that they can make

00:26:46.066 --> 00:26:47.816 A:middle
faster updates and they can

00:26:47.816 --> 00:26:49.586 A:middle
continue using the device when

00:26:49.586 --> 00:26:51.076 A:middle
the phone is no longer present.

00:26:51.786 --> 00:26:52.916 A:middle
And that's core Bluetooth.

00:26:53.516 --> 00:26:58.576 A:middle
[ Applause ]

00:26:59.076 --> 00:27:00.066 A:middle
Now I mentioned before though

00:27:00.066 --> 00:27:01.066 A:middle
there's something called the

00:27:01.156 --> 00:27:02.256 A:middle
Frontmost App State.

00:27:02.356 --> 00:27:03.706 A:middle
This is something that we're

00:27:03.706 --> 00:27:05.226 A:middle
really excited about and I think

00:27:05.226 --> 00:27:06.236 A:middle
it's going to change the way

00:27:06.236 --> 00:27:07.486 A:middle
that we think about creating our

00:27:07.486 --> 00:27:08.166 A:middle
Watch apps.

00:27:09.036 --> 00:27:10.666 A:middle
The experience of using a Watch

00:27:10.666 --> 00:27:12.506 A:middle
app is very different from apps

00:27:12.506 --> 00:27:13.636 A:middle
on other platforms.

00:27:14.236 --> 00:27:15.536 A:middle
When I use an iPhone app, for

00:27:15.536 --> 00:27:17.196 A:middle
example, I open the app.

00:27:17.196 --> 00:27:18.846 A:middle
I use it for some period of time

00:27:19.146 --> 00:27:21.086 A:middle
and eventually I close it by

00:27:21.196 --> 00:27:22.056 A:middle
pressing the home button.

00:27:23.456 --> 00:27:25.646 A:middle
On a Watch app, though, I may

00:27:25.646 --> 00:27:27.226 A:middle
use it for a much shorter period

00:27:27.226 --> 00:27:27.626 A:middle
of time.

00:27:27.936 --> 00:27:30.946 A:middle
Perhaps just a few seconds but I

00:27:30.946 --> 00:27:33.266 A:middle
may use the app dozens or more

00:27:33.266 --> 00:27:35.296 A:middle
time within a single session.

00:27:36.046 --> 00:27:37.886 A:middle
For example, I may use the

00:27:37.886 --> 00:27:39.986 A:middle
reminders app to go shopping at

00:27:39.986 --> 00:27:41.846 A:middle
the grocery store to check off

00:27:41.846 --> 00:27:43.006 A:middle
items as I'm putting them in my

00:27:43.006 --> 00:27:43.316 A:middle
cart.

00:27:44.066 --> 00:27:45.556 A:middle
Every time I put something in my

00:27:45.556 --> 00:27:47.656 A:middle
cart, I raise my wrist and the

00:27:47.656 --> 00:27:49.076 A:middle
app is right there where I left

00:27:49.076 --> 00:27:49.166 A:middle
it.

00:27:49.166 --> 00:27:51.046 A:middle
It makes it really easy for me

00:27:51.046 --> 00:27:52.296 A:middle
to find the item that I'd like

00:27:52.296 --> 00:27:54.886 A:middle
to check off and tap it and then

00:27:54.886 --> 00:27:55.976 A:middle
get on with my shopping.

00:27:57.146 --> 00:27:58.746 A:middle
This period where we resumed to

00:27:58.746 --> 00:28:00.486 A:middle
your app rather than the clock

00:28:00.486 --> 00:28:02.376 A:middle
face is what we call the

00:28:02.376 --> 00:28:04.786 A:middle
Frontmost App State.

00:28:05.096 --> 00:28:06.826 A:middle
In watchOS 3, that period of

00:28:06.826 --> 00:28:08.866 A:middle
time was eight minutes between

00:28:08.866 --> 00:28:09.776 A:middle
each wrist raise.

00:28:10.886 --> 00:28:12.466 A:middle
We found that this was often too

00:28:12.466 --> 00:28:13.846 A:middle
long for users and they would

00:28:13.846 --> 00:28:15.686 A:middle
end up in the same app long

00:28:15.686 --> 00:28:16.876 A:middle
after they were finished using

00:28:17.936 --> 00:28:18.016 A:middle
it.

00:28:18.016 --> 00:28:20.416 A:middle
So in watchOS 3.2, we changed

00:28:20.416 --> 00:28:22.156 A:middle
this limit to two minutes.

00:28:22.696 --> 00:28:26.846 A:middle
And that happens between each

00:28:26.846 --> 00:28:27.476 A:middle
wrist raise.

00:28:27.586 --> 00:28:29.606 A:middle
So for the most part, most

00:28:29.606 --> 00:28:31.886 A:middle
activities will remain frontmost

00:28:31.886 --> 00:28:33.526 A:middle
for the entire duration of using

00:28:34.116 --> 00:28:37.126 A:middle
it but we recognize that there's

00:28:37.126 --> 00:28:38.916 A:middle
some use cases in which you will

00:28:38.916 --> 00:28:40.386 A:middle
need more than two minutes

00:28:40.606 --> 00:28:41.736 A:middle
between each wrist raise.

00:28:41.776 --> 00:28:44.076 A:middle
And for that, we're allowing you

00:28:44.076 --> 00:28:45.666 A:middle
to specify when you need to

00:28:45.666 --> 00:28:46.816 A:middle
extend your frontmost time.

00:28:47.366 --> 00:28:49.916 A:middle
And that will change the time

00:28:49.916 --> 00:28:51.686 A:middle
out back from two minutes out to

00:28:51.686 --> 00:28:52.346 A:middle
eight minutes.

00:28:52.586 --> 00:28:54.176 A:middle
So let's take a look at how you

00:28:54.226 --> 00:28:56.306 A:middle
enable this in code.

00:28:56.516 --> 00:28:57.496 A:middle
Like most of the other things

00:28:57.496 --> 00:28:58.446 A:middle
that we've talked about today,

00:28:58.576 --> 00:28:59.856 A:middle
it's a simple call on the shared

00:28:59.856 --> 00:29:00.386 A:middle
extension.

00:29:00.386 --> 00:29:01.496 A:middle
It's a simple property.

00:29:01.986 --> 00:29:03.326 A:middle
You can set to true whenever you

00:29:03.326 --> 00:29:04.606 A:middle
need to extend your frontmost

00:29:04.606 --> 00:29:04.876 A:middle
time.

00:29:05.716 --> 00:29:09.466 A:middle
You must be judicious about this

00:29:09.466 --> 00:29:11.486 A:middle
though because we don't want

00:29:11.486 --> 00:29:13.576 A:middle
users to remain in apps long

00:29:13.576 --> 00:29:15.156 A:middle
after they're finished using

00:29:15.156 --> 00:29:15.386 A:middle
them.

00:29:15.886 --> 00:29:18.106 A:middle
So let's take a look back at my

00:29:18.106 --> 00:29:19.616 A:middle
reminder shopping list example.

00:29:20.736 --> 00:29:22.896 A:middle
When I turn on -- when I open up

00:29:22.896 --> 00:29:23.956 A:middle
the shopping list, I probably

00:29:23.956 --> 00:29:25.406 A:middle
want to turn on and extended

00:29:25.406 --> 00:29:27.886 A:middle
frontmost time so that if I had

00:29:27.886 --> 00:29:29.926 A:middle
like an item between two aisles

00:29:30.196 --> 00:29:31.096 A:middle
that took longer than two

00:29:31.096 --> 00:29:32.166 A:middle
minutes, I wouldn't have to go

00:29:32.166 --> 00:29:33.556 A:middle
back to open up the app.

00:29:34.666 --> 00:29:36.516 A:middle
But as soon as I've finished the

00:29:36.516 --> 00:29:38.126 A:middle
items in my shopping list, it's

00:29:38.126 --> 00:29:39.386 A:middle
probably a good opportunity to

00:29:39.386 --> 00:29:40.936 A:middle
turn off extended frontmost

00:29:40.936 --> 00:29:41.196 A:middle
time.

00:29:41.376 --> 00:29:42.696 A:middle
So that the app will just

00:29:43.076 --> 00:29:44.196 A:middle
automatically close in the

00:29:44.196 --> 00:29:45.376 A:middle
background without the user

00:29:45.376 --> 00:29:46.486 A:middle
having to do anything.

00:29:46.956 --> 00:29:48.986 A:middle
Now in addition to giving you

00:29:48.986 --> 00:29:50.876 A:middle
more flexibility for when you

00:29:50.876 --> 00:29:52.586 A:middle
remain in frontmost, we're also

00:29:52.586 --> 00:29:54.316 A:middle
changing some of the behaviors

00:29:54.316 --> 00:29:56.556 A:middle
of the API so that you can have

00:29:56.586 --> 00:29:58.786 A:middle
more up-to-date information and

00:29:58.786 --> 00:30:00.556 A:middle
meet the expectations of users.

00:30:04.066 --> 00:30:05.406 A:middle
Now you can already extend your

00:30:05.406 --> 00:30:07.126 A:middle
run time by up to 30 seconds

00:30:07.606 --> 00:30:10.336 A:middle
using the expiring activity on

00:30:10.396 --> 00:30:11.266 A:middle
NS [phonetic] process info.

00:30:11.456 --> 00:30:13.286 A:middle
And this is a great opportunity

00:30:13.286 --> 00:30:14.556 A:middle
to do things like networking

00:30:14.556 --> 00:30:15.096 A:middle
tasks.

00:30:15.496 --> 00:30:16.946 A:middle
And we've increased the priority

00:30:16.946 --> 00:30:18.616 A:middle
of this request in watchOS 4 so

00:30:18.746 --> 00:30:20.226 A:middle
that you can do more things in

00:30:20.226 --> 00:30:21.296 A:middle
the time that you've requested.

00:30:21.826 --> 00:30:27.126 A:middle
And if Watch connectivity or url

00:30:27.126 --> 00:30:29.196 A:middle
session data comes into your app

00:30:29.536 --> 00:30:30.566 A:middle
while you're in the frontmost

00:30:30.566 --> 00:30:32.146 A:middle
state, we will immediately

00:30:32.146 --> 00:30:33.996 A:middle
resume your app and in most

00:30:33.996 --> 00:30:35.366 A:middle
cases, the payload will begin

00:30:35.366 --> 00:30:37.206 A:middle
downloading immediately as well.

00:30:38.266 --> 00:30:40.006 A:middle
And if there's important

00:30:40.006 --> 00:30:41.916 A:middle
information that you recognize

00:30:41.916 --> 00:30:43.576 A:middle
in that data, while you're in

00:30:43.576 --> 00:30:44.836 A:middle
the frontmost state if you have

00:30:44.836 --> 00:30:46.956 A:middle
run time, you can play haptics

00:30:47.036 --> 00:30:47.886 A:middle
to alert the user.

00:30:48.416 --> 00:30:51.046 A:middle
And if a notification for your

00:30:51.046 --> 00:30:52.246 A:middle
app comes in while you're in

00:30:52.246 --> 00:30:53.816 A:middle
that state, you could also

00:30:53.816 --> 00:30:54.896 A:middle
handle it using the user

00:30:54.896 --> 00:30:56.726 A:middle
notification API just like you

00:30:56.726 --> 00:30:57.776 A:middle
can when the app is in the

00:30:57.776 --> 00:30:58.286 A:middle
foreground.

00:30:58.836 --> 00:31:01.076 A:middle
Let's take a look at an example

00:31:01.076 --> 00:31:02.066 A:middle
that ties all of these

00:31:02.066 --> 00:31:03.146 A:middle
capabilities together.

00:31:05.116 --> 00:31:06.856 A:middle
So here we have a simple

00:31:06.856 --> 00:31:08.086 A:middle
ride-sharing app.

00:31:08.326 --> 00:31:09.396 A:middle
It's showing me that I have an

00:31:09.396 --> 00:31:11.716 A:middle
expected five-minute wait time.

00:31:12.576 --> 00:31:14.076 A:middle
This is a great opportunity to

00:31:14.076 --> 00:31:15.826 A:middle
turn extended frontmost time on

00:31:15.896 --> 00:31:17.166 A:middle
because I already know it's

00:31:17.166 --> 00:31:18.386 A:middle
pretty likely that the user's

00:31:18.386 --> 00:31:19.486 A:middle
going to need longer than the

00:31:19.486 --> 00:31:20.436 A:middle
two-minute timeout.

00:31:21.676 --> 00:31:23.056 A:middle
It's going to be a bit of a wait

00:31:23.056 --> 00:31:24.016 A:middle
and I probably don't want to

00:31:24.016 --> 00:31:25.176 A:middle
keep my wrist up the entire

00:31:25.176 --> 00:31:25.546 A:middle
time.

00:31:25.996 --> 00:31:27.876 A:middle
So I tap on the request ride

00:31:27.876 --> 00:31:29.476 A:middle
button and drop my wrist.

00:31:30.076 --> 00:31:32.056 A:middle
Now the screen may be off but

00:31:32.056 --> 00:31:33.546 A:middle
I'm definitely not done using

00:31:33.546 --> 00:31:34.516 A:middle
the app because I'm still

00:31:34.516 --> 00:31:35.326 A:middle
waiting for the ride.

00:31:35.416 --> 00:31:37.516 A:middle
And at some point, the server's

00:31:37.516 --> 00:31:38.386 A:middle
going to send a push

00:31:38.386 --> 00:31:39.736 A:middle
notification that'll get

00:31:39.806 --> 00:31:42.046 A:middle
forwarded to my Watch and at

00:31:42.046 --> 00:31:43.706 A:middle
that point, the app can handle

00:31:43.706 --> 00:31:45.696 A:middle
the notification and recognize

00:31:45.696 --> 00:31:46.966 A:middle
that it's important information

00:31:47.316 --> 00:31:49.146 A:middle
and play a haptic to alert me.

00:31:50.306 --> 00:31:51.596 A:middle
When I raise my wrist, the app

00:31:51.596 --> 00:31:53.606 A:middle
has already been updated showing

00:31:53.606 --> 00:31:55.316 A:middle
me important information like

00:31:55.316 --> 00:31:57.016 A:middle
the arrival time as well as the

00:31:57.016 --> 00:31:59.026 A:middle
driver's name and star rating.

00:31:59.286 --> 00:32:00.456 A:middle
Even the ability to call the

00:32:00.456 --> 00:32:00.886 A:middle
driver.

00:32:01.476 --> 00:32:03.896 A:middle
At this point, I should turn off

00:32:03.896 --> 00:32:05.526 A:middle
extended frontmost time because

00:32:05.526 --> 00:32:06.846 A:middle
it's likely that the user's done

00:32:06.846 --> 00:32:09.126 A:middle
using the app for now, at least.

00:32:09.456 --> 00:32:10.736 A:middle
Getting this frontmost state

00:32:10.736 --> 00:32:12.396 A:middle
right will make your app feel

00:32:12.396 --> 00:32:13.016 A:middle
like magic.

00:32:13.946 --> 00:32:15.226 A:middle
Always knowing when the user's

00:32:15.226 --> 00:32:17.126 A:middle
done using your app as well as

00:32:17.126 --> 00:32:18.856 A:middle
when they need more time in it.

00:32:18.986 --> 00:32:20.646 A:middle
And making sure that the data in

00:32:20.646 --> 00:32:22.396 A:middle
your app is up-to-date and

00:32:22.396 --> 00:32:23.756 A:middle
showing just what the user wants

00:32:23.756 --> 00:32:25.216 A:middle
to see for the next time that

00:32:25.216 --> 00:32:26.196 A:middle
they may use their app.

00:32:26.306 --> 00:32:28.306 A:middle
I'd highly encourage you to

00:32:28.306 --> 00:32:29.696 A:middle
check out the session later

00:32:29.696 --> 00:32:32.316 A:middle
today on the life of a watchOS

00:32:32.646 --> 00:32:32.846 A:middle
app.

00:32:33.076 --> 00:32:34.736 A:middle
This will be going into detail

00:32:34.906 --> 00:32:36.446 A:middle
about app life cycle events,

00:32:36.766 --> 00:32:37.946 A:middle
making use of the frontmost

00:32:37.946 --> 00:32:39.346 A:middle
state as well as background

00:32:39.346 --> 00:32:41.226 A:middle
modes and more to make a great

00:32:41.226 --> 00:32:42.116 A:middle
Watch experience.

00:32:42.726 --> 00:32:46.046 A:middle
To summarize, we've added a

00:32:46.046 --> 00:32:47.736 A:middle
bunch of new capabilities to our

00:32:47.736 --> 00:32:49.566 A:middle
user interface components to

00:32:49.566 --> 00:32:51.186 A:middle
make them flexible, to create

00:32:51.216 --> 00:32:53.176 A:middle
custom user interfaces like

00:32:53.176 --> 00:32:54.186 A:middle
overlapping interface

00:32:54.186 --> 00:32:57.116 A:middle
controllers as well as auto

00:32:57.116 --> 00:32:59.626 A:middle
rotate mode.

00:33:00.366 --> 00:33:01.816 A:middle
We're changing the architecture

00:33:01.816 --> 00:33:03.416 A:middle
of Watch apps to make them

00:33:03.416 --> 00:33:05.096 A:middle
perform even better by loading

00:33:05.096 --> 00:33:06.336 A:middle
the extension and an app into

00:33:06.336 --> 00:33:07.856 A:middle
the same process at run time.

00:33:08.386 --> 00:33:10.666 A:middle
And we're adding new background

00:33:10.666 --> 00:33:12.426 A:middle
modes as well as core Bluetooth

00:33:12.426 --> 00:33:14.276 A:middle
support and the changes that we

00:33:14.276 --> 00:33:15.196 A:middle
just went through for the

00:33:15.196 --> 00:33:16.786 A:middle
frontmost app state, which

00:33:16.786 --> 00:33:18.326 A:middle
should make it easier for you to

00:33:18.326 --> 00:33:19.486 A:middle
keep your app up-to-date for

00:33:19.486 --> 00:33:19.966 A:middle
users.

00:33:20.536 --> 00:33:23.016 A:middle
And I mentioned a number of

00:33:23.016 --> 00:33:23.976 A:middle
sessions that you should check

00:33:23.976 --> 00:33:25.716 A:middle
out this week to learn more

00:33:25.716 --> 00:33:26.796 A:middle
about developing on the Watch

00:33:26.826 --> 00:33:27.316 A:middle
platform.

00:33:28.066 --> 00:33:29.566 A:middle
If you want to get more

00:33:29.566 --> 00:33:31.196 A:middle
information like the session

00:33:31.196 --> 00:33:32.956 A:middle
links for videos as well as

00:33:32.956 --> 00:33:34.676 A:middle
other resources, please visit

00:33:34.676 --> 00:33:36.186 A:middle
the developer.apple.com link.

00:33:36.736 --> 00:33:38.166 A:middle
Thank you so much for coming to

00:33:38.166 --> 00:33:39.536 A:middle
hear what's new in watchOS 4.

00:33:39.536 --> 00:33:40.346 A:middle
I can't wait to see what you

00:33:40.346 --> 00:33:40.976 A:middle
guys build next.

00:33:41.516 --> 00:33:45.500 A:middle
[ Applause ]