WEBVTT

00:00:07.516 --> 00:00:21.706 A:middle
[ Background Conversation ]

00:00:22.206 --> 00:00:22.716 A:middle
&gt;&gt; Good morning.

00:00:25.086 --> 00:00:26.006 A:middle
I'm glad you could make it.

00:00:26.576 --> 00:00:27.676 A:middle
My name is Robb, and together

00:00:27.676 --> 00:00:28.786 A:middle
with my coworkers, Wenson and

00:00:28.786 --> 00:00:29.756 A:middle
Tom, I'm going to take you on a

00:00:29.756 --> 00:00:31.326 A:middle
deep dive today through the new

00:00:31.326 --> 00:00:32.486 A:middle
eight drag-and-drop APIs we are

00:00:32.486 --> 00:00:34.216 A:middle
introducing in iOS 11.

00:00:34.476 --> 00:00:36.776 A:middle
So, we have a bunch of new APIs

00:00:36.776 --> 00:00:38.166 A:middle
for you, but I don't want you to

00:00:38.166 --> 00:00:38.866 A:middle
get intimidated.

00:00:39.266 --> 00:00:40.066 A:middle
Even though we have a lot of

00:00:40.066 --> 00:00:41.656 A:middle
ground to cover, you can

00:00:41.656 --> 00:00:44.186 A:middle
gradually adopt these APIs and,

00:00:44.186 --> 00:00:45.466 A:middle
in fact, if you are one of the

00:00:45.466 --> 00:00:47.006 A:middle
few people who use Collection

00:00:47.006 --> 00:00:48.176 A:middle
view or Table view, there is a

00:00:48.176 --> 00:00:49.296 A:middle
dedicated session for you

00:00:49.296 --> 00:00:51.886 A:middle
tomorrow in Hall 2 that you can

00:00:51.886 --> 00:00:53.216 A:middle
check out, and it's followed

00:00:53.216 --> 00:00:54.526 A:middle
back-to-back by one on

00:00:54.576 --> 00:00:55.406 A:middle
NSItemProvider.

00:00:55.786 --> 00:00:57.156 A:middle
If you ever wondered what the U

00:00:57.156 --> 00:00:58.736 A:middle
in UDI stands for, do not miss

00:00:58.736 --> 00:01:00.236 A:middle
this session.

00:01:00.556 --> 00:01:02.126 A:middle
This session, however, is going

00:01:02.126 --> 00:01:03.126 A:middle
to split in two halves.

00:01:03.196 --> 00:01:04.336 A:middle
First, we're going to talk about

00:01:04.336 --> 00:01:05.536 A:middle
the drag side of things, the

00:01:05.536 --> 00:01:06.996 A:middle
drag interactions, it's

00:01:06.996 --> 00:01:08.476 A:middle
delegate, the session, the

00:01:08.476 --> 00:01:09.476 A:middle
associated drag item and

00:01:09.476 --> 00:01:11.006 A:middle
previews, and then Tom is going

00:01:11.006 --> 00:01:12.226 A:middle
to take over in the second half,

00:01:12.226 --> 00:01:13.656 A:middle
and do a similar thing for the

00:01:13.656 --> 00:01:14.256 A:middle
drop side.

00:01:14.376 --> 00:01:16.546 A:middle
So, we have a lot of stuff to

00:01:16.546 --> 00:01:17.756 A:middle
talk about, and we're going to

00:01:17.756 --> 00:01:19.296 A:middle
start with advanced drag

00:01:19.296 --> 00:01:19.926 A:middle
interactions.

00:01:21.156 --> 00:01:22.516 A:middle
So, as you already know, drag

00:01:22.816 --> 00:01:25.016 A:middle
and drop on iOS is not only a

00:01:25.016 --> 00:01:26.106 A:middle
way to share data between

00:01:26.106 --> 00:01:27.676 A:middle
applications, it's also a fluid

00:01:27.676 --> 00:01:29.296 A:middle
user interaction, and with these

00:01:29.296 --> 00:01:32.156 A:middle
kinds of complex user

00:01:32.156 --> 00:01:33.686 A:middle
interactions, consistency is

00:01:33.686 --> 00:01:34.786 A:middle
key, and you achieve this

00:01:34.786 --> 00:01:36.186 A:middle
consistency by using

00:01:36.186 --> 00:01:37.166 A:middle
UIDragInteraction.

00:01:37.206 --> 00:01:38.316 A:middle
You can take one of those and

00:01:38.316 --> 00:01:39.916 A:middle
install it on any of your views.

00:01:39.916 --> 00:01:40.966 A:middle
You don't have to subclass

00:01:40.966 --> 00:01:43.026 A:middle
anything, or even worse, go in

00:01:43.026 --> 00:01:43.796 A:middle
and change the existing

00:01:43.796 --> 00:01:45.096 A:middle
superclass of the custom views.

00:01:45.456 --> 00:01:46.596 A:middle
Just install one of them, and it

00:01:46.596 --> 00:01:47.886 A:middle
will do the necessary gesture

00:01:47.886 --> 00:01:48.716 A:middle
bookkeeping for you.

00:01:49.106 --> 00:01:50.106 A:middle
You do, however, have to

00:01:50.386 --> 00:01:51.346 A:middle
implement

00:01:51.346 --> 00:01:53.716 A:middle
UIDragInteractionDelegate, which

00:01:53.716 --> 00:01:55.426 A:middle
at least return a UIDragItem.

00:01:55.856 --> 00:01:57.386 A:middle
You can [inaudible] into a bunch

00:01:57.386 --> 00:01:59.556 A:middle
of notifications about lifecycle

00:01:59.556 --> 00:02:00.926 A:middle
and perform some animations, and

00:02:00.926 --> 00:02:03.076 A:middle
we'll go over those in a second.

00:02:03.996 --> 00:02:05.196 A:middle
If none of this makes any sense

00:02:05.196 --> 00:02:06.346 A:middle
to you, I would recommend you

00:02:06.346 --> 00:02:07.786 A:middle
catch up on Introducing Drag and

00:02:07.786 --> 00:02:08.976 A:middle
Drop, which is a session we had

00:02:08.976 --> 00:02:10.946 A:middle
yesterday, so if you missed it,

00:02:10.946 --> 00:02:12.456 A:middle
you will have to check out the

00:02:12.456 --> 00:02:14.626 A:middle
video, and that will kind of

00:02:14.626 --> 00:02:15.336 A:middle
cover the basics.

00:02:15.666 --> 00:02:17.176 A:middle
However, if the basics were good

00:02:17.176 --> 00:02:18.696 A:middle
enough, you wouldn't be here

00:02:18.696 --> 00:02:20.096 A:middle
today, so let's look at some of

00:02:20.096 --> 00:02:21.536 A:middle
the behaviors that native

00:02:21.536 --> 00:02:24.116 A:middle
applications in iOS 11 employ,

00:02:24.426 --> 00:02:25.626 A:middle
and what your users will come to

00:02:25.626 --> 00:02:26.676 A:middle
expect of your applications,

00:02:26.676 --> 00:02:27.136 A:middle
going forward.

00:02:27.846 --> 00:02:30.586 A:middle
So, here you see me in Mail, and

00:02:30.586 --> 00:02:31.876 A:middle
you can see that, as I start a

00:02:31.876 --> 00:02:33.446 A:middle
drag with a long press on a

00:02:33.446 --> 00:02:34.516 A:middle
message, I can then tap

00:02:34.886 --> 00:02:36.366 A:middle
subsequent messages and they

00:02:36.366 --> 00:02:39.016 A:middle
will flock to the drag session

00:02:39.016 --> 00:02:40.396 A:middle
that I have already in progress,

00:02:40.396 --> 00:02:41.836 A:middle
so the little batch count keeps

00:02:41.836 --> 00:02:42.346 A:middle
increasing, there.

00:02:42.896 --> 00:02:43.796 A:middle
This is not something you get

00:02:43.796 --> 00:02:45.286 A:middle
out of the box for free, but

00:02:45.286 --> 00:02:46.426 A:middle
it's not very hard to implement,

00:02:46.426 --> 00:02:47.176 A:middle
either, and I'm going to show

00:02:47.176 --> 00:02:47.596 A:middle
you how.

00:02:48.666 --> 00:02:49.726 A:middle
So, in this example, I've

00:02:49.726 --> 00:02:50.556 A:middle
already implemented

00:02:50.556 --> 00:02:51.776 A:middle
UIDragInteractionDelegate,

00:02:52.426 --> 00:02:54.556 A:middle
specifically the required method

00:02:54.556 --> 00:02:55.276 A:middle
dragInteraction

00:02:55.276 --> 00:02:57.076 A:middle
itemsForBeginning session, in

00:02:57.076 --> 00:02:58.866 A:middle
which I create an NSItemProvider

00:02:58.866 --> 00:03:00.796 A:middle
for the message I want to drag,

00:03:01.896 --> 00:03:03.996 A:middle
then I create a UIDragItem with

00:03:03.996 --> 00:03:05.846 A:middle
said itemProvider set to

00:03:05.846 --> 00:03:07.726 A:middle
localObject to the message, so I

00:03:07.726 --> 00:03:09.466 A:middle
can later easily refer back to

00:03:09.466 --> 00:03:11.226 A:middle
the message, and then I return

00:03:11.226 --> 00:03:12.086 A:middle
the dropped-in array.

00:03:13.226 --> 00:03:14.846 A:middle
Now, you could use the exact

00:03:14.846 --> 00:03:15.906 A:middle
same implementation for

00:03:15.906 --> 00:03:17.306 A:middle
dragInteraction itemsForAddingTo

00:03:17.306 --> 00:03:19.106 A:middle
session withTouchAt point, and

00:03:19.106 --> 00:03:19.646 A:middle
that would work.

00:03:20.386 --> 00:03:21.416 A:middle
However, there is some edge

00:03:21.416 --> 00:03:22.886 A:middle
cases that I want you to think

00:03:22.886 --> 00:03:24.416 A:middle
about as you implement flocking

00:03:24.416 --> 00:03:25.836 A:middle
by opting into this method.

00:03:26.646 --> 00:03:28.176 A:middle
First, if you implement this

00:03:28.176 --> 00:03:29.676 A:middle
method, your dragInteraction can

00:03:29.676 --> 00:03:31.126 A:middle
now flock with any other

00:03:31.326 --> 00:03:32.246 A:middle
dragInteraction in your

00:03:32.246 --> 00:03:33.416 A:middle
application, not with

00:03:33.416 --> 00:03:34.216 A:middle
dragInteractions in other

00:03:34.216 --> 00:03:35.246 A:middle
applications, because we

00:03:35.246 --> 00:03:36.086 A:middle
currently don't allow

00:03:36.086 --> 00:03:37.686 A:middle
cross-application flocking, but

00:03:37.686 --> 00:03:38.876 A:middle
that dragInteractionDelegate

00:03:38.876 --> 00:03:40.236 A:middle
that Bob's implementing in that

00:03:40.236 --> 00:03:41.916 A:middle
other department, you can

00:03:41.916 --> 00:03:42.946 A:middle
potentially flock with that, so

00:03:42.946 --> 00:03:43.916 A:middle
you want to be aware.

00:03:44.306 --> 00:03:45.536 A:middle
In this case, I decided that I

00:03:45.536 --> 00:03:46.816 A:middle
only want to flock my messages

00:03:47.256 --> 00:03:51.226 A:middle
with other messages, so I

00:03:51.226 --> 00:03:52.356 A:middle
iterate over all the items in

00:03:52.356 --> 00:03:54.016 A:middle
the session, and if any of them

00:03:54.186 --> 00:03:56.736 A:middle
does not have an NSItemProvider

00:03:56.956 --> 00:03:58.556 A:middle
that has a UDI conforming to

00:03:58.556 --> 00:04:00.136 A:middle
this type, in this example,

00:04:00.136 --> 00:04:01.956 A:middle
private.example.mail, I'll abort

00:04:02.026 --> 00:04:03.876 A:middle
by returning an empty array, and

00:04:03.876 --> 00:04:04.886 A:middle
this will give other gesture

00:04:04.886 --> 00:04:07.086 A:middle
recognizes to recognize the tap

00:04:07.086 --> 00:04:08.256 A:middle
that triggered this flocking

00:04:08.506 --> 00:04:08.936 A:middle
attempt.

00:04:09.516 --> 00:04:12.646 A:middle
Similarly, by default, the same

00:04:13.056 --> 00:04:14.176 A:middle
dragInteraction, therefore the

00:04:14.176 --> 00:04:15.846 A:middle
same UI view can flock multiple

00:04:16.456 --> 00:04:16.726 A:middle
times.

00:04:16.726 --> 00:04:17.936 A:middle
We can't possibly know if that

00:04:17.936 --> 00:04:18.676 A:middle
makes sense for your

00:04:18.676 --> 00:04:21.086 A:middle
application, or if maybe

00:04:21.086 --> 00:04:22.316 A:middle
different regions inside your

00:04:22.316 --> 00:04:23.676 A:middle
view correspond to different

00:04:23.676 --> 00:04:25.456 A:middle
drag items, so you have to tell

00:04:25.456 --> 00:04:25.606 A:middle
us.

00:04:25.686 --> 00:04:26.786 A:middle
And, in this case, I check if

00:04:26.786 --> 00:04:28.226 A:middle
the local object of any of the

00:04:28.226 --> 00:04:29.516 A:middle
other items already in the

00:04:29.516 --> 00:04:30.786 A:middle
session correspond to the

00:04:30.786 --> 00:04:31.896 A:middle
message that I want to check

00:04:31.896 --> 00:04:33.506 A:middle
now, and if it's already there,

00:04:33.716 --> 00:04:34.986 A:middle
I also abort, using an empty

00:04:34.986 --> 00:04:35.236 A:middle
array.

00:04:35.236 --> 00:04:36.616 A:middle
So, this is how you get

00:04:36.616 --> 00:04:37.016 A:middle
flocking.

00:04:38.456 --> 00:04:40.326 A:middle
Another behavior that Mail has

00:04:41.396 --> 00:04:42.346 A:middle
is this.

00:04:42.826 --> 00:04:44.176 A:middle
As I long-press on a thread,

00:04:44.176 --> 00:04:45.976 A:middle
instead of lifting one item that

00:04:45.976 --> 00:04:49.076 A:middle
represents the thread, one item,

00:04:49.446 --> 00:04:51.296 A:middle
I instead lift three that each

00:04:51.296 --> 00:04:52.756 A:middle
represent a message in this

00:04:52.806 --> 00:04:54.016 A:middle
thread, as indicated by the

00:04:54.016 --> 00:04:57.096 A:middle
little blue bubble, there.

00:04:57.096 --> 00:04:58.186 A:middle
As we've already seen,

00:04:58.846 --> 00:05:00.706 A:middle
UIDragInteractionDelegates drag

00:05:00.706 --> 00:05:02.366 A:middle
item itemsForBeginning session

00:05:02.366 --> 00:05:03.666 A:middle
returns an array, so it stands

00:05:03.666 --> 00:05:04.646 A:middle
to reason we can, in fact,

00:05:04.646 --> 00:05:06.276 A:middle
return multiple items here, and

00:05:06.336 --> 00:05:08.416 A:middle
then that's something I'll do

00:05:08.416 --> 00:05:08.626 A:middle
here.

00:05:08.796 --> 00:05:10.466 A:middle
So, I grab all the messages from

00:05:10.466 --> 00:05:13.596 A:middle
my mailThread, I sort them, and

00:05:13.596 --> 00:05:14.646 A:middle
I'll explain why in a second,

00:05:14.916 --> 00:05:18.126 A:middle
and then I return a UIDragItem

00:05:18.126 --> 00:05:19.156 A:middle
for each of them in the exact

00:05:19.156 --> 00:05:20.026 A:middle
same fashion that you've seen

00:05:20.026 --> 00:05:20.336 A:middle
before.

00:05:20.706 --> 00:05:21.716 A:middle
Now, the reason that I'm sorting

00:05:21.716 --> 00:05:23.686 A:middle
them is that the order of the

00:05:23.686 --> 00:05:24.576 A:middle
array that you return here

00:05:24.576 --> 00:05:25.696 A:middle
matters, and it's so that the

00:05:25.696 --> 00:05:27.586 A:middle
last item in the array is going

00:05:27.586 --> 00:05:29.346 A:middle
to be the topmost object of your

00:05:29.346 --> 00:05:30.196 A:middle
lift, and since I want the

00:05:30.196 --> 00:05:31.716 A:middle
newest message first, I sort

00:05:31.716 --> 00:05:33.876 A:middle
them so that the oldest is the

00:05:33.876 --> 00:05:34.596 A:middle
first in the array.

00:05:35.166 --> 00:05:35.966 A:middle
And, this would work.

00:05:36.226 --> 00:05:37.536 A:middle
However, if this was all we

00:05:37.536 --> 00:05:41.006 A:middle
implemented, all the items would

00:05:41.006 --> 00:05:42.996 A:middle
lift with the same preview.

00:05:43.166 --> 00:05:44.016 A:middle
That means they would have the

00:05:44.016 --> 00:05:45.366 A:middle
same visual representation and,

00:05:45.366 --> 00:05:46.856 A:middle
by default, the preview that we

00:05:46.856 --> 00:05:48.846 A:middle
create is going to be based on

00:05:48.846 --> 00:05:49.856 A:middle
the view that the interaction is

00:05:49.856 --> 00:05:51.036 A:middle
installed on, so that would mean

00:05:51.036 --> 00:05:52.146 A:middle
that all three messages would

00:05:52.146 --> 00:05:53.826 A:middle
have the thread as their visual

00:05:53.826 --> 00:05:54.486 A:middle
representation.

00:05:54.746 --> 00:05:56.246 A:middle
And, since I don't want that, I

00:05:56.246 --> 00:05:57.286 A:middle
implement the optional

00:05:57.286 --> 00:05:58.006 A:middle
dragInteraction

00:05:58.006 --> 00:05:59.536 A:middle
previewForLifting item session,

00:05:59.816 --> 00:06:00.956 A:middle
in which I get to return my own

00:06:00.956 --> 00:06:01.476 A:middle
drag preview.

00:06:01.976 --> 00:06:04.096 A:middle
So, what I do here is, I first

00:06:04.096 --> 00:06:05.336 A:middle
attempt to find the message

00:06:05.596 --> 00:06:08.496 A:middle
associated with that item, and

00:06:08.496 --> 00:06:10.456 A:middle
if I have it, I grab its

00:06:10.456 --> 00:06:11.686 A:middle
associated message views through

00:06:11.686 --> 00:06:12.856 A:middle
its helper method I happen to

00:06:12.856 --> 00:06:14.246 A:middle
have, and initialize my

00:06:14.246 --> 00:06:16.186 A:middle
UITargetedDragPreview with that.

00:06:16.186 --> 00:06:18.116 A:middle
And, that would mean that all of

00:06:18.856 --> 00:06:20.286 A:middle
the messages that I'm lifting

00:06:20.286 --> 00:06:21.106 A:middle
would have their own

00:06:21.106 --> 00:06:22.426 A:middle
representation based on the

00:06:22.426 --> 00:06:23.766 A:middle
message view dedicated to them.

00:06:24.556 --> 00:06:26.336 A:middle
And, last but not least, here's

00:06:26.336 --> 00:06:28.806 A:middle
another thing that Mail can do

00:06:28.806 --> 00:06:29.756 A:middle
that is kind of tricky.

00:06:30.966 --> 00:06:32.456 A:middle
You see me here dragging photos

00:06:32.536 --> 00:06:35.146 A:middle
from Photos to Mail, and if you

00:06:35.146 --> 00:06:36.696 A:middle
pay attention, you'll notice

00:06:36.696 --> 00:06:39.786 A:middle
that the photos lift into an

00:06:40.426 --> 00:06:42.066 A:middle
appropriate size for the entire

00:06:42.066 --> 00:06:43.146 A:middle
width of the compose sheet.

00:06:43.806 --> 00:06:45.926 A:middle
So, how is it that Mail already

00:06:45.926 --> 00:06:47.256 A:middle
knows how much room to make, and

00:06:47.256 --> 00:06:48.426 A:middle
where to target the preview?

00:06:48.756 --> 00:06:49.916 A:middle
Is it because the data just

00:06:49.916 --> 00:06:51.226 A:middle
happened to arrive so quickly?

00:06:51.516 --> 00:06:53.746 A:middle
No. You should not make any

00:06:54.106 --> 00:06:55.386 A:middle
assumptions here.

00:06:55.386 --> 00:06:56.826 A:middle
In my demos, the data's going to

00:06:56.826 --> 00:06:58.186 A:middle
arrive in time, but that may not

00:06:58.186 --> 00:07:00.186 A:middle
be the case for your users, and

00:07:00.186 --> 00:07:01.116 A:middle
there's a better way to handle

00:07:01.116 --> 00:07:01.706 A:middle
this situation.

00:07:02.176 --> 00:07:04.176 A:middle
It turns out that NSItemProvider

00:07:05.086 --> 00:07:06.146 A:middle
has a property called

00:07:06.496 --> 00:07:08.356 A:middle
preferredPresentationSize, which

00:07:08.356 --> 00:07:09.436 A:middle
allows you to communicate the

00:07:09.436 --> 00:07:10.726 A:middle
size that you expect something

00:07:10.726 --> 00:07:11.826 A:middle
to be represented at on the

00:07:11.826 --> 00:07:12.926 A:middle
other side, kind of out of

00:07:12.976 --> 00:07:14.686 A:middle
channel, so even though I'm

00:07:14.686 --> 00:07:16.166 A:middle
initializing the NSItemProvider

00:07:16.166 --> 00:07:17.486 A:middle
with the file here, I happen to

00:07:17.486 --> 00:07:18.896 A:middle
know the size, and I can set its

00:07:18.896 --> 00:07:20.016 A:middle
preferredPresentationSize

00:07:20.016 --> 00:07:21.476 A:middle
accordingly, and then Mail is

00:07:21.476 --> 00:07:22.546 A:middle
able to read that out on the

00:07:22.546 --> 00:07:24.126 A:middle
other side, and everything else

00:07:24.126 --> 00:07:24.996 A:middle
is just the same.

00:07:25.616 --> 00:07:27.446 A:middle
Now, you can take my word for it

00:07:27.446 --> 00:07:28.806 A:middle
that this works, but we've only

00:07:28.806 --> 00:07:29.976 A:middle
known each other for what, nine

00:07:29.976 --> 00:07:30.266 A:middle
minutes?

00:07:30.436 --> 00:07:31.956 A:middle
So, Wenson's going to show you a

00:07:31.956 --> 00:07:33.526 A:middle
demo now.

00:07:34.516 --> 00:07:41.636 A:middle
[ Applause ]

00:07:42.136 --> 00:07:42.526 A:middle
&gt;&gt; Alright.

00:07:42.526 --> 00:07:43.156 A:middle
Thank you, Robb.

00:07:48.076 --> 00:07:49.096 A:middle
&gt;&gt; So now, before I jump into

00:07:49.096 --> 00:07:50.356 A:middle
the demo, there's a couple of

00:07:50.356 --> 00:07:51.166 A:middle
things I'd like to say.

00:07:51.716 --> 00:07:53.056 A:middle
All of the sample code that I'm

00:07:53.056 --> 00:07:54.586 A:middle
about to show you will all be

00:07:54.586 --> 00:07:56.426 A:middle
available online, and I strongly

00:07:56.426 --> 00:07:57.346 A:middle
encourage you all to check it

00:07:57.346 --> 00:07:57.636 A:middle
out.

00:07:58.176 --> 00:07:59.536 A:middle
Second of all, we will be going

00:07:59.536 --> 00:08:01.236 A:middle
over not one but two demo apps

00:08:01.236 --> 00:08:01.506 A:middle
today.

00:08:01.966 --> 00:08:03.236 A:middle
First one is called Drag Source,

00:08:03.236 --> 00:08:04.696 A:middle
and it will focus on drag

00:08:04.696 --> 00:08:05.306 A:middle
interactions.

00:08:05.616 --> 00:08:07.346 A:middle
Second one, Drop Destination,

00:08:07.386 --> 00:08:08.676 A:middle
will focus, as you might have

00:08:08.716 --> 00:08:09.876 A:middle
guessed, on the drop side.

00:08:10.456 --> 00:08:12.966 A:middle
So, with that said, let's take a

00:08:12.966 --> 00:08:15.266 A:middle
look at our first demo app.

00:08:15.506 --> 00:08:19.236 A:middle
So, in here, we see four stacks

00:08:19.236 --> 00:08:22.516 A:middle
of images, and currently, we

00:08:22.516 --> 00:08:24.026 A:middle
have implemented very basic

00:08:24.026 --> 00:08:25.996 A:middle
cases of drag interactions, so

00:08:25.996 --> 00:08:27.396 A:middle
we're able to drag a single

00:08:27.396 --> 00:08:28.776 A:middle
image out of each stack.

00:08:29.926 --> 00:08:31.816 A:middle
So, that works great, but it

00:08:31.816 --> 00:08:33.076 A:middle
would be kind of cool if we

00:08:33.076 --> 00:08:34.946 A:middle
could drag an entire stack of

00:08:34.946 --> 00:08:36.876 A:middle
images out as individual items,

00:08:37.066 --> 00:08:37.996 A:middle
one per each image.

00:08:38.766 --> 00:08:39.546 A:middle
So, let's take a look at the

00:08:39.546 --> 00:08:40.786 A:middle
code and see what we can do.

00:08:41.936 --> 00:08:43.726 A:middle
Now, currently, if you look at

00:08:43.726 --> 00:08:45.916 A:middle
this, we just consider the last

00:08:45.916 --> 00:08:47.676 A:middle
image view, and use it to create

00:08:47.676 --> 00:08:50.046 A:middle
a new drag item, just using that

00:08:50.046 --> 00:08:50.776 A:middle
last image view.

00:08:51.426 --> 00:08:52.746 A:middle
Instead, it's a pretty short

00:08:52.746 --> 00:08:55.266 A:middle
stretch to enumerate through all

00:08:55.266 --> 00:08:57.606 A:middle
of our available image views and

00:08:57.606 --> 00:08:59.206 A:middle
return drag item for each one.

00:08:59.206 --> 00:09:00.926 A:middle
So, we're going to do just that,

00:09:01.816 --> 00:09:02.916 A:middle
and now let's see how it

00:09:02.916 --> 00:09:03.436 A:middle
behaves.

00:09:04.506 --> 00:09:05.636 A:middle
So, watch what happens when I

00:09:05.636 --> 00:09:07.306 A:middle
begin a drag on the second stack

00:09:07.306 --> 00:09:07.886 A:middle
of images.

00:09:09.096 --> 00:09:10.196 A:middle
You'll notice that there's a

00:09:10.196 --> 00:09:11.746 A:middle
badge count of three this time.

00:09:11.946 --> 00:09:12.876 A:middle
That indicates that there are

00:09:12.876 --> 00:09:13.996 A:middle
three items in the drag,

00:09:14.296 --> 00:09:15.176 A:middle
corresponding to the three

00:09:15.176 --> 00:09:16.196 A:middle
images in the stack.

00:09:16.816 --> 00:09:18.066 A:middle
Now, if I bring up Photos on my

00:09:18.066 --> 00:09:20.706 A:middle
right side, here, you'll notice

00:09:21.156 --> 00:09:23.496 A:middle
that I can actually drop these

00:09:23.496 --> 00:09:25.266 A:middle
three images into Photos, and

00:09:25.266 --> 00:09:27.976 A:middle
it'll save them as individual

00:09:27.976 --> 00:09:28.346 A:middle
items.

00:09:29.266 --> 00:09:30.356 A:middle
Now, while we're in Photos,

00:09:30.356 --> 00:09:31.166 A:middle
there's something else I'd like

00:09:31.166 --> 00:09:31.646 A:middle
to show you.

00:09:32.046 --> 00:09:34.586 A:middle
So, I've begun a drag on one of

00:09:34.586 --> 00:09:36.636 A:middle
these images, and now, if I tap

00:09:37.296 --> 00:09:38.386 A:middle
on these other two images,

00:09:38.486 --> 00:09:39.676 A:middle
you'll see that we add those to

00:09:39.676 --> 00:09:41.106 A:middle
the existing drag session as

00:09:41.106 --> 00:09:41.616 A:middle
well.

00:09:42.286 --> 00:09:43.506 A:middle
So, as Robb mentioned, this is

00:09:43.506 --> 00:09:44.896 A:middle
not a behavior we get for free.

00:09:45.446 --> 00:09:46.506 A:middle
Luckily, it's pretty easy to

00:09:46.506 --> 00:09:47.916 A:middle
implement, and I'll show you

00:09:47.916 --> 00:09:48.126 A:middle
how.

00:09:48.966 --> 00:09:51.096 A:middle
So, going back to the code, all

00:09:51.096 --> 00:09:51.946 A:middle
we've got to implement is

00:09:51.946 --> 00:09:53.246 A:middle
itemsForAddingTo session.

00:09:54.166 --> 00:09:55.706 A:middle
So, the thing to notice here is

00:09:55.706 --> 00:09:57.286 A:middle
that we can actually use the

00:09:57.286 --> 00:09:59.296 A:middle
exact same logic to construct

00:09:59.296 --> 00:10:01.086 A:middle
drag items in itemsForAddingTo

00:10:01.086 --> 00:10:03.086 A:middle
session as in itemsForBeginning

00:10:03.086 --> 00:10:03.466 A:middle
session.

00:10:04.046 --> 00:10:05.776 A:middle
So, to make this easier for

00:10:05.776 --> 00:10:07.026 A:middle
ourselves, we'll just take the

00:10:07.026 --> 00:10:08.456 A:middle
logic that used to have in

00:10:08.456 --> 00:10:09.746 A:middle
itemsForBeginning session and

00:10:10.086 --> 00:10:11.616 A:middle
introduce a new helper method.

00:10:11.696 --> 00:10:13.466 A:middle
I'm going to call this dragItems

00:10:13.466 --> 00:10:13.946 A:middle
for session.

00:10:15.466 --> 00:10:17.056 A:middle
Then, in both places, when we

00:10:17.056 --> 00:10:18.226 A:middle
are adding to an existing

00:10:18.226 --> 00:10:21.526 A:middle
session, right here, and when we

00:10:21.526 --> 00:10:23.886 A:middle
are creating a new session in

00:10:23.886 --> 00:10:25.716 A:middle
itemsForBeginning session, we'll

00:10:25.716 --> 00:10:27.076 A:middle
simply turn around and call this

00:10:27.076 --> 00:10:27.566 A:middle
new helper.

00:10:27.566 --> 00:10:31.466 A:middle
OK? So, that should give us the

00:10:31.466 --> 00:10:34.236 A:middle
ability to add more images into

00:10:34.236 --> 00:10:36.176 A:middle
our existing drag session, and

00:10:36.176 --> 00:10:38.036 A:middle
as you can see, as I tap on each

00:10:38.036 --> 00:10:39.186 A:middle
of these other three views,

00:10:39.726 --> 00:10:42.116 A:middle
we're able to add all 10 images

00:10:42.116 --> 00:10:43.416 A:middle
into the drag session.

00:10:43.936 --> 00:10:45.216 A:middle
So, that works pretty well, but

00:10:45.586 --> 00:10:46.986 A:middle
there's one caveat.

00:10:47.286 --> 00:10:49.166 A:middle
So, notice here, I'm going to

00:10:49.166 --> 00:10:50.276 A:middle
start a drag on the first stack

00:10:50.276 --> 00:10:51.616 A:middle
of images, and I'm just going to

00:10:51.616 --> 00:10:52.616 A:middle
keep on tapping the first stack

00:10:52.616 --> 00:10:53.196 A:middle
of images.

00:10:54.196 --> 00:10:55.606 A:middle
So, you can see that I'm able to

00:10:55.606 --> 00:10:56.946 A:middle
arbitrarily add a whole ton of

00:10:56.946 --> 00:10:58.546 A:middle
images that I probably shouldn't

00:10:58.546 --> 00:10:59.166 A:middle
be able to add.

00:10:59.526 --> 00:11:00.656 A:middle
This seems like a bug to me.

00:11:00.976 --> 00:11:02.916 A:middle
I have 26 copies of each image

00:11:02.916 --> 00:11:03.916 A:middle
now in the drag session.

00:11:04.416 --> 00:11:06.316 A:middle
So, let's figure out how we can

00:11:06.316 --> 00:11:06.776 A:middle
fix that.

00:11:07.696 --> 00:11:09.396 A:middle
Now, here's our helper that we

00:11:09.396 --> 00:11:11.826 A:middle
just introduced, and what we can

00:11:11.826 --> 00:11:13.496 A:middle
do here is, instead of using all

00:11:13.496 --> 00:11:14.476 A:middle
the imageViews to create

00:11:14.476 --> 00:11:16.126 A:middle
dragItems every single time we

00:11:16.126 --> 00:11:17.816 A:middle
tap, what we're going to do is

00:11:17.886 --> 00:11:19.086 A:middle
filter out the imageViews, so we

00:11:19.086 --> 00:11:20.516 A:middle
don't use an imageView to create

00:11:20.516 --> 00:11:22.106 A:middle
more than one dragItem.

00:11:23.946 --> 00:11:25.606 A:middle
So, with those three lines of

00:11:25.606 --> 00:11:27.636 A:middle
code, I'm going to hop back into

00:11:27.636 --> 00:11:29.866 A:middle
the app and show you how it

00:11:30.786 --> 00:11:30.936 A:middle
works.

00:11:31.086 --> 00:11:33.686 A:middle
OK. So now, I've begun a drag on

00:11:33.686 --> 00:11:34.696 A:middle
the first stack of images, and

00:11:34.696 --> 00:11:35.756 A:middle
I'm going to tap the next three

00:11:35.756 --> 00:11:36.146 A:middle
stacks.

00:11:36.536 --> 00:11:37.666 A:middle
Now, watch what happens when I

00:11:37.666 --> 00:11:38.936 A:middle
try to add more items.

00:11:40.056 --> 00:11:41.486 A:middle
Our bug seems to be fixed.

00:11:41.486 --> 00:11:42.826 A:middle
We can no longer add redundant

00:11:42.826 --> 00:11:44.286 A:middle
items to our drag session.

00:11:44.896 --> 00:11:46.056 A:middle
So, these were just some basics

00:11:46.056 --> 00:11:47.396 A:middle
for manipulating the drag items

00:11:47.396 --> 00:11:48.256 A:middle
that we supplied through our

00:11:48.256 --> 00:11:48.826 A:middle
delegates.

00:11:49.326 --> 00:11:50.426 A:middle
I'd like to now hand it back to

00:11:50.426 --> 00:11:52.646 A:middle
Robb to discuss some of the more

00:11:52.646 --> 00:11:54.176 A:middle
advanced techniques for

00:11:54.176 --> 00:11:55.916 A:middle
customizing animations and drag

00:11:55.916 --> 00:11:56.426 A:middle
previews.

00:11:57.516 --> 00:12:04.546 A:middle
[ Applause ]

00:12:05.046 --> 00:12:07.076 A:middle
&gt;&gt; So, let's add some polish to

00:12:07.076 --> 00:12:07.716 A:middle
our previews.

00:12:09.026 --> 00:12:10.906 A:middle
One thing that's often the case

00:12:10.996 --> 00:12:12.676 A:middle
is that the view that you want

00:12:12.676 --> 00:12:14.956 A:middle
to lift is not quite ready for

00:12:14.956 --> 00:12:16.356 A:middle
prime time, so maybe there's

00:12:16.356 --> 00:12:17.656 A:middle
some highlighting state, or you

00:12:17.656 --> 00:12:18.956 A:middle
have some overlay that you want

00:12:18.956 --> 00:12:19.456 A:middle
to fade out.

00:12:19.866 --> 00:12:21.306 A:middle
And, the lift is actually a

00:12:21.306 --> 00:12:22.956 A:middle
great point to do that, because

00:12:23.286 --> 00:12:24.946 A:middle
during the lift, the view is

00:12:24.946 --> 00:12:26.406 A:middle
still live, so any changes you

00:12:26.406 --> 00:12:28.086 A:middle
make inside of that view will be

00:12:28.086 --> 00:12:29.606 A:middle
reflected during the animation,

00:12:29.606 --> 00:12:31.456 A:middle
and it's only that, at the point

00:12:31.456 --> 00:12:33.696 A:middle
where the user starts moving

00:12:33.696 --> 00:12:35.216 A:middle
their finger that we perform a

00:12:35.216 --> 00:12:37.226 A:middle
snapshot, and that state is what

00:12:37.226 --> 00:12:38.466 A:middle
the user will see for the rest

00:12:38.466 --> 00:12:39.296 A:middle
of the drag interaction.

00:12:40.406 --> 00:12:42.806 A:middle
The way you could animate

00:12:42.806 --> 00:12:45.636 A:middle
alongside the lift is like so.

00:12:46.256 --> 00:12:47.286 A:middle
There is an option delegate

00:12:47.286 --> 00:12:48.406 A:middle
method, dragInteraction

00:12:48.406 --> 00:12:49.796 A:middle
willAnimateLiftWith animator

00:12:49.796 --> 00:12:52.526 A:middle
session, in which you get handed

00:12:52.526 --> 00:12:54.696 A:middle
an animator object, and here I'm

00:12:55.036 --> 00:12:57.206 A:middle
going to just grab all the

00:12:57.206 --> 00:12:58.756 A:middle
messages that I have on the

00:12:58.756 --> 00:13:00.016 A:middle
items in the session, and find

00:13:00.016 --> 00:13:01.356 A:middle
their associated messageViews.

00:13:01.386 --> 00:13:02.826 A:middle
So now, I have an array of

00:13:02.826 --> 00:13:04.296 A:middle
messageViews, and for each of

00:13:04.296 --> 00:13:06.426 A:middle
them, I will just add an

00:13:06.426 --> 00:13:08.406 A:middle
animation to the animator in

00:13:08.406 --> 00:13:09.906 A:middle
which I fade out an overlay by

00:13:09.906 --> 00:13:11.056 A:middle
setting its alpha to zero.

00:13:11.616 --> 00:13:13.266 A:middle
And then, in the completion

00:13:13.266 --> 00:13:14.866 A:middle
block, I will set the alpha back

00:13:14.866 --> 00:13:16.176 A:middle
to one, and what that will do is

00:13:16.216 --> 00:13:18.576 A:middle
that as the view lifts up, the

00:13:18.576 --> 00:13:19.646 A:middle
overlay will fade out.

00:13:19.646 --> 00:13:21.456 A:middle
If the user lets go and the view

00:13:21.456 --> 00:13:22.456 A:middle
settles back into place, the

00:13:22.456 --> 00:13:23.806 A:middle
overlay will fade in, because

00:13:23.806 --> 00:13:24.976 A:middle
the animator is able to

00:13:24.976 --> 00:13:26.206 A:middle
automatically revert this

00:13:26.206 --> 00:13:26.676 A:middle
animation.

00:13:27.026 --> 00:13:28.716 A:middle
Then, when the drag starts, we

00:13:28.716 --> 00:13:30.266 A:middle
will snapshot the view, and

00:13:30.266 --> 00:13:31.536 A:middle
after that, the completion block

00:13:31.536 --> 00:13:33.086 A:middle
will get called, and the overlay

00:13:33.526 --> 00:13:34.896 A:middle
will be reinstalled.

00:13:34.896 --> 00:13:37.436 A:middle
So, that means in the snapshot,

00:13:37.436 --> 00:13:38.636 A:middle
there won't be an overlay, but

00:13:38.636 --> 00:13:39.616 A:middle
in the view that remains inside

00:13:39.616 --> 00:13:40.736 A:middle
the application, there will be.

00:13:41.546 --> 00:13:42.706 A:middle
But, what if the view that

00:13:42.806 --> 00:13:45.356 A:middle
you're lifting, the view that

00:13:45.356 --> 00:13:46.416 A:middle
you're lifting is not the view

00:13:46.416 --> 00:13:47.076 A:middle
that the interaction is

00:13:47.076 --> 00:13:48.306 A:middle
installed on, or what if the

00:13:48.306 --> 00:13:51.266 A:middle
view isn't square, or what else

00:13:51.266 --> 00:13:51.676 A:middle
can we do?

00:13:51.976 --> 00:13:53.056 A:middle
So, we already saw that

00:13:53.056 --> 00:13:54.536 A:middle
UIDragPreview can be initialized

00:13:54.536 --> 00:13:55.756 A:middle
with the view, but there are two

00:13:55.816 --> 00:13:57.466 A:middle
other parameters, and I'll go

00:13:57.466 --> 00:13:58.566 A:middle
over each of them individually.

00:13:58.986 --> 00:14:00.906 A:middle
The first is a parameters object

00:14:00.906 --> 00:14:02.426 A:middle
that allows you to customize the

00:14:02.756 --> 00:14:04.086 A:middle
appearance, and the second one

00:14:04.086 --> 00:14:05.076 A:middle
is a target that's used for

00:14:05.076 --> 00:14:05.536 A:middle
positioning.

00:14:06.496 --> 00:14:07.756 A:middle
So first, the parameters.

00:14:08.036 --> 00:14:09.116 A:middle
That is an instance of

00:14:09.116 --> 00:14:10.786 A:middle
UIDragPreviewParameters, and it

00:14:10.786 --> 00:14:11.676 A:middle
has two properties.

00:14:11.996 --> 00:14:13.136 A:middle
The first is a color, and that's

00:14:13.136 --> 00:14:14.286 A:middle
going to be the background color

00:14:14.286 --> 00:14:15.676 A:middle
of the view that we will install

00:14:15.676 --> 00:14:17.346 A:middle
behind your view, because a lot

00:14:17.346 --> 00:14:18.366 A:middle
of views aren't actually fully

00:14:18.366 --> 00:14:20.486 A:middle
opaque, and it would look not so

00:14:20.486 --> 00:14:21.886 A:middle
good if we just lifted them as

00:14:21.926 --> 00:14:22.256 A:middle
they are.

00:14:22.676 --> 00:14:24.366 A:middle
However, you get to customize

00:14:24.366 --> 00:14:25.776 A:middle
this color in any way you want.

00:14:25.776 --> 00:14:27.536 A:middle
You can make it black, or clear.

00:14:27.536 --> 00:14:30.376 A:middle
You can really go to town, here.

00:14:30.376 --> 00:14:31.516 A:middle
The second property is a little

00:14:31.516 --> 00:14:32.236 A:middle
more complicated.

00:14:32.236 --> 00:14:35.336 A:middle
It's a UIBezierPath that lets us

00:14:35.336 --> 00:14:37.346 A:middle
know what the visible region of

00:14:37.816 --> 00:14:39.396 A:middle
your view should be, so if your

00:14:39.396 --> 00:14:41.426 A:middle
view is not square, you could

00:14:41.426 --> 00:14:42.546 A:middle
set a rounded rectangle here.

00:14:42.906 --> 00:14:44.576 A:middle
But, there are some things to be

00:14:44.576 --> 00:14:44.926 A:middle
aware of.

00:14:45.376 --> 00:14:46.596 A:middle
So, by default, if you don't

00:14:46.596 --> 00:14:48.236 A:middle
supply drag preview parameters,

00:14:48.236 --> 00:14:50.676 A:middle
so you don't set a path on the

00:14:50.746 --> 00:14:52.026 A:middle
drag preview parameters you

00:14:52.026 --> 00:14:53.696 A:middle
supply, we will lift the entire

00:14:53.696 --> 00:14:53.926 A:middle
view.

00:14:54.246 --> 00:14:56.206 A:middle
If you wanted to crop out the

00:14:56.206 --> 00:14:57.786 A:middle
subrect phon, so in this case,

00:14:57.786 --> 00:14:58.856 A:middle
the rounded rectangle with the

00:14:58.856 --> 00:15:00.236 A:middle
kid in it, you could supply a

00:15:00.236 --> 00:15:02.176 A:middle
Bezier path, and it would result

00:15:02.226 --> 00:15:03.136 A:middle
in something like this.

00:15:03.176 --> 00:15:04.976 A:middle
So, it's important, however,

00:15:05.136 --> 00:15:07.476 A:middle
that the Bezier path that you

00:15:07.476 --> 00:15:09.486 A:middle
supply has to make sense within

00:15:09.486 --> 00:15:10.526 A:middle
the coordinate space of the

00:15:10.526 --> 00:15:10.806 A:middle
view.

00:15:10.806 --> 00:15:12.006 A:middle
So, in this case, the bounds

00:15:12.006 --> 00:15:13.176 A:middle
that I initialized this rounded

00:15:13.176 --> 00:15:14.896 A:middle
rectangle with have an origin

00:15:14.896 --> 00:15:16.586 A:middle
that is relative to the origin

00:15:16.856 --> 00:15:18.436 A:middle
of the container, as indicated

00:15:18.436 --> 00:15:20.526 A:middle
in gray, sorry, as, the origin

00:15:20.526 --> 00:15:21.956 A:middle
of the view, as indicated in

00:15:21.956 --> 00:15:23.256 A:middle
gray, so that's the top left

00:15:23.256 --> 00:15:23.586 A:middle
corner.

00:15:24.536 --> 00:15:25.826 A:middle
And, you want to also make note

00:15:25.826 --> 00:15:27.126 A:middle
of the midpoint, because it's

00:15:27.126 --> 00:15:28.306 A:middle
the midpoint of the visible path

00:15:28.306 --> 00:15:29.646 A:middle
that we'll later use for

00:15:29.646 --> 00:15:30.836 A:middle
positioning, when we talk about

00:15:30.836 --> 00:15:31.216 A:middle
target.

00:15:31.976 --> 00:15:33.566 A:middle
So, this is how you would get

00:15:33.606 --> 00:15:35.206 A:middle
this kind of preview.

00:15:35.646 --> 00:15:36.816 A:middle
However, you're not limited to

00:15:36.816 --> 00:15:38.556 A:middle
giving us a path that is smaller

00:15:38.816 --> 00:15:39.426 A:middle
than the view.

00:15:39.486 --> 00:15:41.376 A:middle
You can also give us one that's

00:15:41.376 --> 00:15:41.656 A:middle
bigger.

00:15:41.656 --> 00:15:43.016 A:middle
So, in this case, I chose an

00:15:43.016 --> 00:15:45.196 A:middle
origin that is negative, and it

00:15:45.196 --> 00:15:46.046 A:middle
works in the [inaudible] of the

00:15:46.046 --> 00:15:47.536 A:middle
view, and that would result in

00:15:47.536 --> 00:15:49.086 A:middle
this kind of platter that frames

00:15:49.086 --> 00:15:49.536 A:middle
the picture.

00:15:49.536 --> 00:15:50.526 A:middle
And, the color you see here is

00:15:50.526 --> 00:15:51.906 A:middle
in fact a background color that

00:15:51.906 --> 00:15:52.636 A:middle
defaulted to white.

00:15:53.226 --> 00:15:54.546 A:middle
Now, if you're bold enough to

00:15:54.546 --> 00:15:55.416 A:middle
implement your own text

00:15:55.416 --> 00:15:56.936 A:middle
rendering, there's a dedicated,

00:15:56.936 --> 00:15:59.236 A:middle
thank you, style that you can

00:15:59.236 --> 00:16:01.856 A:middle
use to match the way that we

00:16:01.856 --> 00:16:03.626 A:middle
lift text, so you want to refer

00:16:03.626 --> 00:16:05.816 A:middle
to the documentation for that.

00:16:06.296 --> 00:16:08.336 A:middle
And, the target, so the target

00:16:08.336 --> 00:16:10.696 A:middle
is used to position a transitory

00:16:10.696 --> 00:16:12.266 A:middle
view that we will use to perform

00:16:12.266 --> 00:16:13.376 A:middle
the animation with inside your

00:16:13.376 --> 00:16:13.926 A:middle
view hierarchy.

00:16:14.286 --> 00:16:16.136 A:middle
If you don't supply your target,

00:16:16.136 --> 00:16:17.386 A:middle
we will infer one based on the

00:16:17.386 --> 00:16:18.396 A:middle
superview of the view that you

00:16:18.396 --> 00:16:18.866 A:middle
provided.

00:16:18.866 --> 00:16:20.906 A:middle
That means if you provide a view

00:16:20.906 --> 00:16:22.996 A:middle
as your view in the direct, in

00:16:22.996 --> 00:16:25.026 A:middle
the targeted direct preview, if

00:16:25.706 --> 00:16:27.446 A:middle
that view is not in the view

00:16:27.446 --> 00:16:28.716 A:middle
hierarchy, you will have to

00:16:28.716 --> 00:16:29.436 A:middle
supply your target.

00:16:29.436 --> 00:16:31.396 A:middle
Otherwise, we can infer one.

00:16:31.676 --> 00:16:33.746 A:middle
This UIDragPreviewTarget has

00:16:33.826 --> 00:16:34.426 A:middle
three parameters.

00:16:34.426 --> 00:16:35.336 A:middle
The first is the container.

00:16:35.436 --> 00:16:36.106 A:middle
This is where we're going to

00:16:36.106 --> 00:16:37.576 A:middle
install the view, so you want to

00:16:37.576 --> 00:16:39.366 A:middle
be aware of any add or remove

00:16:39.366 --> 00:16:40.806 A:middle
subview calls in that container.

00:16:42.066 --> 00:16:42.756 A:middle
And, the second one is a

00:16:42.756 --> 00:16:44.116 A:middle
position, and the third is a

00:16:44.116 --> 00:16:44.596 A:middle
transform.

00:16:44.596 --> 00:16:45.686 A:middle
The transform is only relevant

00:16:45.686 --> 00:16:46.916 A:middle
on drop, and it allows you to

00:16:47.136 --> 00:16:49.326 A:middle
rotate or scale on set down.

00:16:49.666 --> 00:16:50.466 A:middle
The position, however, is a

00:16:50.466 --> 00:16:51.376 A:middle
little more tricky.

00:16:52.066 --> 00:16:54.706 A:middle
So, as I mentioned, if you give

00:16:54.706 --> 00:16:56.076 A:middle
us a point in your container, as

00:16:56.076 --> 00:16:57.476 A:middle
indicated in gray, by default we

00:16:57.476 --> 00:16:59.216 A:middle
will center the midpoint of your

00:16:59.216 --> 00:17:01.346 A:middle
view around this position, so if

00:17:01.346 --> 00:17:03.126 A:middle
you don't supply a visible path,

00:17:03.436 --> 00:17:04.276 A:middle
it would look like so.

00:17:04.776 --> 00:17:05.806 A:middle
However, if you do supply a

00:17:05.806 --> 00:17:07.696 A:middle
visible path, then as I said,

00:17:08.216 --> 00:17:10.836 A:middle
the midpoint of the bounds of

00:17:10.836 --> 00:17:12.146 A:middle
this path will be centered

00:17:12.146 --> 00:17:12.836 A:middle
around this point.

00:17:12.836 --> 00:17:14.236 A:middle
So, it's no longer the midpoint

00:17:14.236 --> 00:17:14.766 A:middle
of the view.

00:17:14.766 --> 00:17:16.206 A:middle
It's the midpoint of the visible

00:17:16.206 --> 00:17:16.536 A:middle
path.

00:17:16.566 --> 00:17:17.986 A:middle
And, it also means that if your

00:17:17.986 --> 00:17:18.886 A:middle
path is a little bit more

00:17:18.886 --> 00:17:21.206 A:middle
complicated, such as this one,

00:17:21.276 --> 00:17:22.836 A:middle
where I just unioned two rounded

00:17:22.836 --> 00:17:24.206 A:middle
rectangles together, the

00:17:24.206 --> 00:17:26.416 A:middle
midpoint is now not even in any

00:17:26.416 --> 00:17:27.556 A:middle
of the two rectangles.

00:17:27.556 --> 00:17:28.746 A:middle
It's still the midpoint of the

00:17:28.746 --> 00:17:29.996 A:middle
enclosing bounds of both of

00:17:29.996 --> 00:17:30.486 A:middle
these shapes.

00:17:31.846 --> 00:17:33.506 A:middle
But, if you already had a chance

00:17:33.506 --> 00:17:34.986 A:middle
to look at iOS 11, you have

00:17:34.986 --> 00:17:36.466 A:middle
noticed that a lot of the apps

00:17:36.466 --> 00:17:38.026 A:middle
in the system are actually able

00:17:38.026 --> 00:17:39.926 A:middle
to update the preview after the

00:17:39.926 --> 00:17:41.426 A:middle
lift, so here you can see Maps,

00:17:41.426 --> 00:17:43.676 A:middle
and as I move this little Apple

00:17:44.296 --> 00:17:46.536 A:middle
Park cell around, it gets

00:17:46.536 --> 00:17:47.786 A:middle
replaced by this little map

00:17:47.786 --> 00:17:49.386 A:middle
snippet after the fact.

00:17:49.386 --> 00:17:50.846 A:middle
So, how can we do that?

00:17:50.846 --> 00:17:51.906 A:middle
Well, it turns out, there's a

00:17:51.906 --> 00:17:53.496 A:middle
second preview class in the

00:17:53.496 --> 00:17:54.716 A:middle
systems, next to

00:17:54.716 --> 00:17:55.866 A:middle
UITargetedDragPreview, and that

00:17:55.866 --> 00:17:58.506 A:middle
is UIDragPreview which, as you

00:17:58.506 --> 00:17:59.266 A:middle
might have guessed, is very

00:17:59.266 --> 00:17:59.766 A:middle
similar to

00:17:59.766 --> 00:18:01.766 A:middle
UITargetedDragPreview, but it

00:18:01.766 --> 00:18:03.406 A:middle
doesn't have a target.

00:18:03.586 --> 00:18:04.636 A:middle
All the other semantics still

00:18:04.636 --> 00:18:06.366 A:middle
apply, and the view that you

00:18:06.806 --> 00:18:08.836 A:middle
initialize this preview with may

00:18:08.836 --> 00:18:09.606 A:middle
or may not be in the view

00:18:09.606 --> 00:18:09.976 A:middle
hierarchy.

00:18:09.976 --> 00:18:11.006 A:middle
It's not relevant anymore, at

00:18:11.006 --> 00:18:11.406 A:middle
this point.

00:18:12.696 --> 00:18:14.146 A:middle
But, how will you update this

00:18:14.176 --> 00:18:14.566 A:middle
preview?

00:18:15.116 --> 00:18:17.396 A:middle
First, you want to find a spot

00:18:17.396 --> 00:18:19.366 A:middle
in your session lifecycle where

00:18:19.366 --> 00:18:19.906 A:middle
it's appropriate.

00:18:19.906 --> 00:18:21.526 A:middle
So, in this case, I chose

00:18:21.526 --> 00:18:22.986 A:middle
sessionDidMove, and what I want

00:18:22.986 --> 00:18:24.756 A:middle
to do here is that as the user

00:18:25.086 --> 00:18:26.946 A:middle
moves out of the listView in my

00:18:26.946 --> 00:18:28.716 A:middle
hypothetical Mail app, I want to

00:18:28.716 --> 00:18:29.886 A:middle
replace what they're dragging

00:18:29.886 --> 00:18:31.056 A:middle
with a little envelope graphic.

00:18:31.576 --> 00:18:32.796 A:middle
So first, I perform a hit check

00:18:32.796 --> 00:18:34.456 A:middle
to see if I'm still inside the

00:18:34.456 --> 00:18:35.566 A:middle
listView, and if I am, I just

00:18:35.566 --> 00:18:36.916 A:middle
abort by returning nothing.

00:18:38.126 --> 00:18:39.646 A:middle
And then, I iterate over all the

00:18:39.896 --> 00:18:41.716 A:middle
items that have a message as

00:18:41.716 --> 00:18:43.046 A:middle
their localObject.

00:18:44.116 --> 00:18:45.536 A:middle
I check if I have already

00:18:45.536 --> 00:18:46.776 A:middle
updated this item, because this

00:18:46.776 --> 00:18:47.946 A:middle
operation is not free, and

00:18:47.946 --> 00:18:49.736 A:middle
sessionDidMove may get called

00:18:49.736 --> 00:18:51.336 A:middle
quite frequently, but if I

00:18:51.336 --> 00:18:53.586 A:middle
haven't, then I will set the

00:18:53.586 --> 00:18:54.986 A:middle
previewProvider, and this is a

00:18:54.986 --> 00:18:56.396 A:middle
block that we will later call to

00:18:56.396 --> 00:18:58.206 A:middle
update the preview, and inside

00:18:58.206 --> 00:18:59.166 A:middle
the block, I first create an

00:18:59.166 --> 00:19:00.316 A:middle
imageView with the image I would

00:19:00.316 --> 00:19:02.536 A:middle
like, and then I initialize a

00:19:02.536 --> 00:19:03.976 A:middle
new drag preview with this, and

00:19:03.976 --> 00:19:05.166 A:middle
it's important to realize that

00:19:05.246 --> 00:19:06.886 A:middle
we may not actually call in this

00:19:06.956 --> 00:19:07.256 A:middle
block.

00:19:07.736 --> 00:19:09.766 A:middle
So, if you are lifting many

00:19:09.766 --> 00:19:11.476 A:middle
messages, we may not, we may

00:19:11.476 --> 00:19:12.616 A:middle
decide not to display all of

00:19:12.616 --> 00:19:13.826 A:middle
them, and we wouldn't bother

00:19:13.826 --> 00:19:15.036 A:middle
calling in a preview block for

00:19:15.036 --> 00:19:15.986 A:middle
the views that we don't actually

00:19:15.986 --> 00:19:16.576 A:middle
show on the screen.

00:19:16.576 --> 00:19:18.436 A:middle
And, last but not least, I have

00:19:18.436 --> 00:19:19.296 A:middle
to do some bookkeeping.

00:19:19.676 --> 00:19:21.846 A:middle
So, theory is still second to

00:19:21.846 --> 00:19:23.036 A:middle
practice, and Wenson's going to

00:19:23.036 --> 00:19:24.136 A:middle
give you another demo, and I'll

00:19:24.136 --> 00:19:24.726 A:middle
see you in the last.

00:19:24.726 --> 00:19:25.076 A:middle
Thank you.

00:19:26.516 --> 00:19:30.546 A:middle
[ Applause ]

00:19:31.046 --> 00:19:31.256 A:middle
&gt;&gt; Alright.

00:19:31.566 --> 00:19:32.316 A:middle
Thanks again, Robb.

00:19:32.806 --> 00:19:34.176 A:middle
So now, I'd like to introduce

00:19:34.286 --> 00:19:36.216 A:middle
the second example we are going

00:19:36.216 --> 00:19:37.646 A:middle
to be looking at in Drag Source.

00:19:38.556 --> 00:19:39.266 A:middle
So, check this out.

00:19:40.316 --> 00:19:41.806 A:middle
When I drag on this image of two

00:19:41.806 --> 00:19:44.296 A:middle
QR codes, we have a drag session

00:19:44.296 --> 00:19:45.686 A:middle
that contains two items.

00:19:45.916 --> 00:19:46.996 A:middle
What are these two items?

00:19:46.996 --> 00:19:48.446 A:middle
Well, if I drop it in Photos,

00:19:48.446 --> 00:19:49.486 A:middle
we'll see that it's actually the

00:19:49.486 --> 00:19:50.936 A:middle
cropped images of the QR codes.

00:19:51.196 --> 00:19:51.946 A:middle
So, I've gone ahead and

00:19:51.946 --> 00:19:53.196 A:middle
detected, where are the QR codes

00:19:53.196 --> 00:19:54.746 A:middle
are already in this image?

00:19:55.356 --> 00:19:56.546 A:middle
Now, the thing we can polish

00:19:56.546 --> 00:19:58.576 A:middle
here is the drag preview.

00:19:58.796 --> 00:19:59.496 A:middle
So, we haven't done any

00:19:59.496 --> 00:19:59.976 A:middle
customization yet.

00:20:00.216 --> 00:20:01.866 A:middle
And so, by default, we use the

00:20:01.866 --> 00:20:03.446 A:middle
entire image view to represent

00:20:03.856 --> 00:20:06.176 A:middle
either of the items, either of

00:20:06.396 --> 00:20:07.406 A:middle
the QR codes.

00:20:07.706 --> 00:20:09.336 A:middle
That is, we are actually seeing

00:20:09.556 --> 00:20:11.586 A:middle
the entire image view twice, two

00:20:11.586 --> 00:20:12.536 A:middle
of them stacked on top of each

00:20:12.536 --> 00:20:12.746 A:middle
other.

00:20:13.006 --> 00:20:14.456 A:middle
It would be kind of cool if we

00:20:14.456 --> 00:20:16.026 A:middle
could use just the cropped image

00:20:16.026 --> 00:20:17.336 A:middle
of the QR code as the drag

00:20:17.336 --> 00:20:19.106 A:middle
preview as we are lifting, and

00:20:19.106 --> 00:20:19.956 A:middle
when we are dragging them

00:20:19.956 --> 00:20:20.316 A:middle
around.

00:20:21.076 --> 00:20:22.726 A:middle
So, let's take a look at what we

00:20:22.726 --> 00:20:23.956 A:middle
need to do this.

00:20:25.136 --> 00:20:26.336 A:middle
First thing we're going to do is

00:20:26.336 --> 00:20:27.736 A:middle
implement previewForLifting

00:20:27.736 --> 00:20:29.596 A:middle
item, so in here, we're going to

00:20:29.596 --> 00:20:30.756 A:middle
take some information about the

00:20:30.756 --> 00:20:32.896 A:middle
QR code, namely the cropped

00:20:32.896 --> 00:20:34.526 A:middle
image of the QR code, as well as

00:20:34.526 --> 00:20:35.886 A:middle
some geometry describing where

00:20:35.886 --> 00:20:37.146 A:middle
it is in the image, and we're

00:20:37.146 --> 00:20:38.346 A:middle
going to use it to create a new

00:20:38.346 --> 00:20:39.226 A:middle
UIImageView.

00:20:40.316 --> 00:20:41.346 A:middle
Then, we're going to create a

00:20:41.346 --> 00:20:43.316 A:middle
drag preview target and drag

00:20:43.316 --> 00:20:44.296 A:middle
preview parameters.

00:20:44.626 --> 00:20:45.776 A:middle
Note that right here we set the

00:20:45.776 --> 00:20:47.136 A:middle
visiblePath to a new

00:20:47.136 --> 00:20:48.156 A:middle
UIBezierPath that's a

00:20:48.156 --> 00:20:49.546 A:middle
roundedRect, and that will give

00:20:49.546 --> 00:20:51.006 A:middle
us a nice rounded preview.

00:20:51.566 --> 00:20:52.406 A:middle
So, we combine all of this

00:20:52.406 --> 00:20:53.826 A:middle
information into a new targeted

00:20:53.826 --> 00:20:55.956 A:middle
drag preview, and with this

00:20:55.956 --> 00:20:58.616 A:middle
change, we should see a much

00:20:58.616 --> 00:21:01.276 A:middle
more polished drag preview when

00:21:01.276 --> 00:21:01.546 A:middle
we lift.

00:21:02.216 --> 00:21:03.626 A:middle
Now, check out what happens when

00:21:03.626 --> 00:21:04.366 A:middle
I begin to lift.

00:21:04.966 --> 00:21:06.286 A:middle
So, instead of the entire image

00:21:06.286 --> 00:21:07.666 A:middle
view popping up this time, we

00:21:07.666 --> 00:21:10.496 A:middle
see individual rects for the QR

00:21:10.496 --> 00:21:13.126 A:middle
codes get lifted up, and as I

00:21:13.126 --> 00:21:14.666 A:middle
drag, you can see that these are

00:21:14.666 --> 00:21:16.516 A:middle
the two QR codes flying around,

00:21:17.056 --> 00:21:19.686 A:middle
so that looks pretty good, but

00:21:19.686 --> 00:21:20.706 A:middle
there's something that looks

00:21:20.706 --> 00:21:21.916 A:middle
kind of weird, and I'm about to

00:21:21.916 --> 00:21:22.216 A:middle
show you.

00:21:22.216 --> 00:21:23.266 A:middle
Watch what happens to the QR

00:21:23.266 --> 00:21:24.736 A:middle
codes when I let go.

00:21:25.046 --> 00:21:26.176 A:middle
Now, I've let go somewhere that

00:21:26.176 --> 00:21:26.876 A:middle
doesn't actually accept the

00:21:26.876 --> 00:21:28.456 A:middle
drop, and so we'll do a cancel

00:21:28.456 --> 00:21:28.926 A:middle
animation.

00:21:29.246 --> 00:21:30.476 A:middle
The problem is that we haven't

00:21:30.476 --> 00:21:32.476 A:middle
actually told UIKit where the

00:21:32.656 --> 00:21:34.116 A:middle
drag preview should animate to

00:21:34.116 --> 00:21:34.766 A:middle
when we cancel.

00:21:35.316 --> 00:21:36.376 A:middle
So, let's fix that problem.

00:21:36.376 --> 00:21:38.406 A:middle
We're going to do that by

00:21:38.406 --> 00:21:39.046 A:middle
implementing

00:21:39.046 --> 00:21:40.436 A:middle
previewForCancelling item.

00:21:41.156 --> 00:21:42.746 A:middle
This looks and works a lot like

00:21:42.746 --> 00:21:43.686 A:middle
previewForLifting item.

00:21:44.146 --> 00:21:45.696 A:middle
In fact, observe that if we want

00:21:45.696 --> 00:21:46.946 A:middle
the QR codes to go back to their

00:21:46.946 --> 00:21:48.496 A:middle
original locations, what we can

00:21:48.496 --> 00:21:50.096 A:middle
actually do, similar to what we

00:21:50.096 --> 00:21:51.786 A:middle
did in the first example, is

00:21:51.786 --> 00:21:53.446 A:middle
take our code that used to live

00:21:53.446 --> 00:21:55.176 A:middle
in previewForLifting item and

00:21:55.176 --> 00:21:56.916 A:middle
factor it out into a separate

00:21:56.916 --> 00:21:57.246 A:middle
helper.

00:21:57.286 --> 00:21:58.056 A:middle
So, we're going to call it

00:21:58.056 --> 00:21:59.706 A:middle
dragPreview for item, and what

00:21:59.706 --> 00:22:03.506 A:middle
this is going to do is return

00:22:03.506 --> 00:22:05.256 A:middle
the original location of the QR

00:22:05.256 --> 00:22:07.556 A:middle
codes in both the places where

00:22:07.556 --> 00:22:09.736 A:middle
we are lifting and when we are

00:22:09.736 --> 00:22:10.236 A:middle
cancelling.

00:22:11.166 --> 00:22:12.646 A:middle
So, I'm going to call that

00:22:12.646 --> 00:22:14.576 A:middle
helper in these two places

00:22:15.206 --> 00:22:18.176 A:middle
really fast, and rerun the

00:22:18.176 --> 00:22:18.656 A:middle
application.

00:22:20.966 --> 00:22:22.656 A:middle
Alright. Now, let's see what

00:22:22.656 --> 00:22:23.466 A:middle
happens when I cancel.

00:22:24.436 --> 00:22:25.566 A:middle
And, see that they fly back to

00:22:25.566 --> 00:22:26.876 A:middle
their original locations and

00:22:26.876 --> 00:22:27.576 A:middle
then settle down.

00:22:27.576 --> 00:22:29.346 A:middle
So, that looks so much better

00:22:29.346 --> 00:22:30.856 A:middle
than it did before, but there's

00:22:30.856 --> 00:22:31.806 A:middle
one more thing I'd like to show

00:22:31.806 --> 00:22:31.996 A:middle
you.

00:22:32.626 --> 00:22:35.246 A:middle
So, we're going to hop on over

00:22:35.366 --> 00:22:36.536 A:middle
to the right side, where we have

00:22:36.536 --> 00:22:38.966 A:middle
Photos, and you can notice that,

00:22:38.966 --> 00:22:40.706 A:middle
as I drag some images, we'll

00:22:40.706 --> 00:22:41.796 A:middle
fade out the background of the

00:22:41.796 --> 00:22:43.536 A:middle
image views to kind of indicate

00:22:43.596 --> 00:22:44.806 A:middle
that we are currently dragging

00:22:44.806 --> 00:22:45.926 A:middle
an image from that view.

00:22:46.566 --> 00:22:47.826 A:middle
There are a lot of apps around

00:22:47.826 --> 00:22:49.336 A:middle
the system that do this, and we

00:22:49.336 --> 00:22:50.586 A:middle
can certainly get the same

00:22:50.586 --> 00:22:52.166 A:middle
effect in our own demo app.

00:22:53.076 --> 00:22:53.796 A:middle
So, I'll show you how.

00:22:54.466 --> 00:22:56.956 A:middle
What we're going to do is

00:22:56.956 --> 00:22:58.036 A:middle
implement a few alongside

00:22:58.036 --> 00:22:58.716 A:middle
animations.

00:22:59.156 --> 00:23:00.826 A:middle
So, as we animate the lift, we

00:23:00.826 --> 00:23:02.206 A:middle
get this animator object that

00:23:02.206 --> 00:23:03.686 A:middle
we're able to attach alongside

00:23:03.686 --> 00:23:04.466 A:middle
animations on.

00:23:04.466 --> 00:23:05.646 A:middle
So, we're going to add this new

00:23:05.646 --> 00:23:07.396 A:middle
block that sets our alpha to

00:23:07.396 --> 00:23:10.056 A:middle
0.5, our alpha being the alpha

00:23:10.056 --> 00:23:11.466 A:middle
of the overall image view.

00:23:11.766 --> 00:23:12.796 A:middle
So, we're going to fade out the

00:23:12.796 --> 00:23:13.666 A:middle
image view as the lift is

00:23:13.666 --> 00:23:15.406 A:middle
happening, and as the lift is

00:23:15.406 --> 00:23:16.736 A:middle
canceling, I'm sorry, as the

00:23:16.736 --> 00:23:18.396 A:middle
drag preview is canceling, we

00:23:18.396 --> 00:23:19.656 A:middle
are going to revert the alpha to

00:23:19.656 --> 00:23:20.576 A:middle
1, so we're going to fade the

00:23:20.576 --> 00:23:21.436 A:middle
view back in.

00:23:21.946 --> 00:23:23.266 A:middle
Now, it would be kind of a shame

00:23:23.266 --> 00:23:25.486 A:middle
if our alpha were permanently

00:23:25.486 --> 00:23:27.966 A:middle
ghosted at 0.5, so when the drag

00:23:27.966 --> 00:23:29.756 A:middle
session ends, we've got to be

00:23:29.756 --> 00:23:31.326 A:middle
careful and set our alpha back

00:23:31.326 --> 00:23:33.216 A:middle
to 1, to make sure that we're at

00:23:33.216 --> 00:23:34.506 A:middle
full opacity when the drag

00:23:34.546 --> 00:23:35.086 A:middle
finishes.

00:23:37.216 --> 00:23:39.806 A:middle
So, with those changes, I've

00:23:39.806 --> 00:23:42.056 A:middle
rerun the app, and now watch

00:23:42.056 --> 00:23:42.956 A:middle
what happens when I begin the

00:23:42.956 --> 00:23:43.196 A:middle
lift.

00:23:44.046 --> 00:23:45.326 A:middle
You can see, this nicely

00:23:45.326 --> 00:23:46.976 A:middle
indicates exactly where the QR

00:23:46.976 --> 00:23:48.556 A:middle
codes are by fading out the rest

00:23:48.556 --> 00:23:51.136 A:middle
of the image view, and as I

00:23:51.136 --> 00:23:52.786 A:middle
cancel, you notice that the rest

00:23:52.786 --> 00:23:54.146 A:middle
of the image view fades back in

00:23:54.426 --> 00:23:55.066 A:middle
just as nicely.

00:23:56.316 --> 00:23:57.026 A:middle
So, that's all good and

00:23:57.026 --> 00:23:57.496 A:middle
polished.

00:23:57.756 --> 00:23:58.796 A:middle
Let's look at our third example.

00:23:59.326 --> 00:24:00.776 A:middle
This is Draggable Location Image

00:24:00.776 --> 00:24:03.226 A:middle
View, and in here, the trick is

00:24:03.226 --> 00:24:06.406 A:middle
that we're adding not only the

00:24:06.406 --> 00:24:08.506 A:middle
image as a representation to the

00:24:08.506 --> 00:24:09.656 A:middle
item providers when we start a

00:24:09.656 --> 00:24:11.646 A:middle
drag, but we are also adding the

00:24:11.646 --> 00:24:12.296 A:middle
location.

00:24:12.816 --> 00:24:15.106 A:middle
What that means is that I'm able

00:24:15.106 --> 00:24:16.416 A:middle
to drop into an application that

00:24:16.416 --> 00:24:18.206 A:middle
accepts location, such as Maps,

00:24:18.596 --> 00:24:20.146 A:middle
at it will actually navigate me

00:24:20.206 --> 00:24:21.896 A:middle
and drop a pin at the location

00:24:22.086 --> 00:24:23.236 A:middle
where this photo was taken,

00:24:23.496 --> 00:24:24.516 A:middle
which is, of course, the Golden

00:24:24.516 --> 00:24:25.016 A:middle
Gate Bridge.

00:24:25.496 --> 00:24:26.506 A:middle
So, that looks pretty good,

00:24:26.926 --> 00:24:27.736 A:middle
except for one thing.

00:24:28.726 --> 00:24:29.946 A:middle
Now, when I begin a drag, I

00:24:29.946 --> 00:24:31.106 A:middle
haven't done any customization

00:24:31.106 --> 00:24:32.986 A:middle
around the drag preview, and so

00:24:32.986 --> 00:24:34.456 A:middle
this default drag preview, which

00:24:34.456 --> 00:24:35.356 A:middle
is the entire image view,

00:24:35.556 --> 00:24:36.936 A:middle
doesn't do a really good job of

00:24:36.936 --> 00:24:37.916 A:middle
really highlighting the fact

00:24:38.256 --> 00:24:39.956 A:middle
that we have a location, and not

00:24:39.956 --> 00:24:40.686 A:middle
just an image.

00:24:40.826 --> 00:24:41.556 A:middle
It looks just like we're

00:24:41.556 --> 00:24:42.636 A:middle
dragging an image right now.

00:24:43.456 --> 00:24:44.416 A:middle
So, let's fix that.

00:24:44.676 --> 00:24:45.836 A:middle
Now, we're going to go into

00:24:45.836 --> 00:24:47.006 A:middle
Draggable Location Image View.

00:24:47.006 --> 00:24:48.356 A:middle
This is where our logic is going

00:24:48.446 --> 00:24:49.776 A:middle
to live, and we're going to

00:24:49.776 --> 00:24:51.146 A:middle
implement sessionWillBegin.

00:24:51.676 --> 00:24:53.376 A:middle
So, what do we want to do when

00:24:53.376 --> 00:24:54.376 A:middle
the session is about to begin?

00:24:55.336 --> 00:24:56.536 A:middle
We're going to take our drag

00:24:56.536 --> 00:24:57.676 A:middle
item that we've created, and

00:24:57.796 --> 00:24:58.556 A:middle
we're going to set the

00:24:58.556 --> 00:25:00.116 A:middle
previewProvider property to a

00:25:00.116 --> 00:25:00.756 A:middle
new block.

00:25:01.226 --> 00:25:02.446 A:middle
Now, in this block, what we're

00:25:02.446 --> 00:25:03.696 A:middle
going to do is create a new

00:25:03.696 --> 00:25:04.576 A:middle
LocationPlatterView.

00:25:04.576 --> 00:25:05.596 A:middle
This is just a custom view I

00:25:05.596 --> 00:25:06.926 A:middle
wrote that knows how to

00:25:06.926 --> 00:25:08.466 A:middle
represent both an image, as well

00:25:08.466 --> 00:25:10.226 A:middle
as some text describing the

00:25:10.226 --> 00:25:11.156 A:middle
location of the image.

00:25:11.446 --> 00:25:13.366 A:middle
And, we're going to create a new

00:25:13.366 --> 00:25:14.986 A:middle
UIDragPreview using this

00:25:14.986 --> 00:25:15.616 A:middle
information.

00:25:16.126 --> 00:25:20.346 A:middle
OK. So, with that change, we

00:25:20.346 --> 00:25:21.636 A:middle
should be able to see a much

00:25:21.636 --> 00:25:24.136 A:middle
nicer, hotter representation for

00:25:24.136 --> 00:25:24.816 A:middle
our drag preview.

00:25:25.846 --> 00:25:26.746 A:middle
So, watch what happens when I

00:25:26.746 --> 00:25:27.356 A:middle
begin a lift.

00:25:27.986 --> 00:25:29.066 A:middle
Now, interestingly, there's

00:25:29.166 --> 00:25:30.726 A:middle
actually no difference.

00:25:31.326 --> 00:25:32.886 A:middle
The reason is because we put our

00:25:32.886 --> 00:25:34.936 A:middle
logic into sessionWillBegin, and

00:25:34.936 --> 00:25:36.966 A:middle
the session does not begin until

00:25:36.966 --> 00:25:38.236 A:middle
I actually start moving my

00:25:38.236 --> 00:25:38.586 A:middle
finger.

00:25:39.256 --> 00:25:40.546 A:middle
So now, I'm going to start

00:25:40.546 --> 00:25:41.876 A:middle
moving, and look at that.

00:25:42.036 --> 00:25:43.406 A:middle
The drag preview has now morphed

00:25:43.406 --> 00:25:44.966 A:middle
into this platter representation

00:25:45.176 --> 00:25:46.336 A:middle
that shows both the image.

00:25:47.516 --> 00:25:49.606 A:middle
[ Applause ]

00:25:50.106 --> 00:25:51.266 A:middle
That now shows both the image,

00:25:51.266 --> 00:25:52.646 A:middle
as well as the location, and as

00:25:52.646 --> 00:25:53.766 A:middle
always, I'm able to drop into

00:25:53.766 --> 00:25:54.136 A:middle
Maps.

00:25:54.246 --> 00:25:56.186 A:middle
It'll navigate me and drop a pin

00:25:56.186 --> 00:25:56.346 A:middle
there.

00:25:57.166 --> 00:25:58.236 A:middle
So, we've discussed a number of

00:25:58.296 --> 00:26:00.526 A:middle
the advanced techniques on the

00:26:00.596 --> 00:26:01.906 A:middle
drag interaction side of things.

00:26:02.126 --> 00:26:03.446 A:middle
I would like to now hand it to

00:26:03.446 --> 00:26:05.026 A:middle
my other colleague, Tom, to

00:26:05.026 --> 00:26:06.976 A:middle
discuss some of the advanced

00:26:06.976 --> 00:26:09.416 A:middle
APIs used to customize drop

00:26:09.416 --> 00:26:10.086 A:middle
interactions.

00:26:11.516 --> 00:26:15.016 A:middle
[ Applause ]

00:26:15.516 --> 00:26:17.756 A:middle
&gt;&gt; Thanks, Wenson, for finally

00:26:17.756 --> 00:26:18.756 A:middle
dragging me into this.

00:26:19.486 --> 00:26:20.476 A:middle
No, I'm happy to be here.

00:26:21.996 --> 00:26:23.646 A:middle
So, let's talk about the drop

00:26:23.646 --> 00:26:23.976 A:middle
side.

00:26:24.466 --> 00:26:26.356 A:middle
Let's take a deep dive into a

00:26:26.356 --> 00:26:26.616 A:middle
drop.

00:26:26.616 --> 00:26:28.636 A:middle
We're going to talk about drop

00:26:28.636 --> 00:26:30.616 A:middle
sessions first, and that will

00:26:30.616 --> 00:26:32.306 A:middle
bring us to actually performing

00:26:32.346 --> 00:26:32.736 A:middle
a drop.

00:26:32.736 --> 00:26:34.956 A:middle
So, what is a drop session?

00:26:34.956 --> 00:26:36.396 A:middle
It's the other side of a drag

00:26:36.396 --> 00:26:36.776 A:middle
session.

00:26:36.886 --> 00:26:37.766 A:middle
It gives you access to

00:26:37.766 --> 00:26:39.266 A:middle
everything related to a drop.

00:26:39.806 --> 00:26:41.536 A:middle
You can get access to the drag

00:26:41.536 --> 00:26:42.816 A:middle
location where the user is

00:26:42.816 --> 00:26:44.016 A:middle
dragging inside your view.

00:26:44.016 --> 00:26:46.366 A:middle
It gives you access to the items

00:26:46.366 --> 00:26:48.386 A:middle
in the view, what type of data

00:26:48.386 --> 00:26:50.216 A:middle
is there, and actually their

00:26:50.216 --> 00:26:51.046 A:middle
data in the end.

00:26:51.046 --> 00:26:52.576 A:middle
It gives you access to the

00:26:52.576 --> 00:26:54.376 A:middle
configuration, so you can act

00:26:54.376 --> 00:26:55.116 A:middle
appropriately.

00:26:55.836 --> 00:26:56.986 A:middle
And finally, it gives you access

00:26:56.986 --> 00:26:58.346 A:middle
to the drag session itself when

00:26:58.346 --> 00:26:59.516 A:middle
you're dragging locally, but

00:26:59.516 --> 00:27:00.586 A:middle
more about that later.

00:27:04.476 --> 00:27:06.016 A:middle
One thing to keep in mind about

00:27:06.056 --> 00:27:08.256 A:middle
drop interactions is that only

00:27:08.256 --> 00:27:09.506 A:middle
one interaction would handle

00:27:09.506 --> 00:27:11.036 A:middle
only one active drop session at

00:27:11.036 --> 00:27:11.706 A:middle
the same time.

00:27:12.816 --> 00:27:13.336 A:middle
Why is this?

00:27:13.406 --> 00:27:15.376 A:middle
Because, it would fit most use

00:27:15.506 --> 00:27:16.476 A:middle
case scenarios.

00:27:17.086 --> 00:27:18.766 A:middle
That means that once the user is

00:27:18.766 --> 00:27:20.596 A:middle
dragging around and enters your

00:27:20.596 --> 00:27:23.046 A:middle
interaction, any other session

00:27:23.046 --> 00:27:24.286 A:middle
that comes around and tries to

00:27:24.286 --> 00:27:26.186 A:middle
enter your interaction won't be

00:27:26.186 --> 00:27:26.616 A:middle
picked up.

00:27:27.736 --> 00:27:29.476 A:middle
Remember, you can drag with more

00:27:29.476 --> 00:27:30.436 A:middle
than one finger at the same

00:27:30.436 --> 00:27:30.726 A:middle
time.

00:27:31.816 --> 00:27:32.826 A:middle
Now, if you don't want this

00:27:32.826 --> 00:27:34.376 A:middle
behavior, and you do want more

00:27:34.376 --> 00:27:35.856 A:middle
than one session to be active on

00:27:35.856 --> 00:27:37.046 A:middle
your view at the same time,

00:27:37.326 --> 00:27:38.346 A:middle
there's a few options.

00:27:38.816 --> 00:27:40.236 A:middle
You can add more interactions,

00:27:40.236 --> 00:27:41.336 A:middle
just add a few more drop

00:27:41.336 --> 00:27:42.386 A:middle
interactions, and they will all

00:27:42.386 --> 00:27:43.636 A:middle
be handled at the same time.

00:27:44.096 --> 00:27:45.846 A:middle
They can have the same logic, or

00:27:45.846 --> 00:27:46.936 A:middle
they can have different logic.

00:27:46.936 --> 00:27:47.616 A:middle
Doesn't really matter.

00:27:48.396 --> 00:27:49.456 A:middle
Or, there's a property you can

00:27:49.456 --> 00:27:50.766 A:middle
set on the interaction called

00:27:50.766 --> 00:27:52.666 A:middle
allowSimultaneousDropSessions.

00:27:52.836 --> 00:27:54.356 A:middle
Set it to true, and that will

00:27:54.356 --> 00:27:56.166 A:middle
lift the block on only one

00:27:56.166 --> 00:27:57.826 A:middle
session, and you can handle more

00:27:57.826 --> 00:27:58.926 A:middle
than one session at the same

00:27:58.926 --> 00:27:59.176 A:middle
time.

00:27:59.616 --> 00:28:01.256 A:middle
But, your delegate has to handle

00:28:01.256 --> 00:28:01.916 A:middle
this properly.

00:28:02.006 --> 00:28:05.106 A:middle
Let's talk a bit about how a

00:28:05.106 --> 00:28:05.746 A:middle
drop works.

00:28:05.856 --> 00:28:07.076 A:middle
We've been over this yesterday

00:28:07.076 --> 00:28:08.286 A:middle
in the introductory talk, but

00:28:08.286 --> 00:28:09.116 A:middle
let's gloss over it.

00:28:09.826 --> 00:28:10.986 A:middle
User is dragging something, it's

00:28:11.166 --> 00:28:12.266 A:middle
approaching your view.

00:28:13.126 --> 00:28:14.836 A:middle
Before we do anything, we'll

00:28:14.836 --> 00:28:16.526 A:middle
call canHandle session on your

00:28:16.526 --> 00:28:18.266 A:middle
interaction delegate, and that

00:28:18.266 --> 00:28:20.466 A:middle
will trigger, depending on what

00:28:20.466 --> 00:28:22.226 A:middle
you return here, will allow you

00:28:22.226 --> 00:28:23.546 A:middle
to handle the session or not.

00:28:23.546 --> 00:28:25.546 A:middle
If you return false, it will be

00:28:25.546 --> 00:28:26.826 A:middle
as if the view doesn't appear to

00:28:26.826 --> 00:28:28.206 A:middle
the drop session, and nothing

00:28:28.206 --> 00:28:28.576 A:middle
will happen.

00:28:29.206 --> 00:28:30.776 A:middle
If you return true or do not

00:28:30.816 --> 00:28:32.086 A:middle
implement this, will continue

00:28:32.086 --> 00:28:33.416 A:middle
and call sessionDidEnter to

00:28:33.416 --> 00:28:35.466 A:middle
indicate that the drag has

00:28:35.466 --> 00:28:37.736 A:middle
entered your view.

00:28:37.946 --> 00:28:39.146 A:middle
User then moves their finger

00:28:39.146 --> 00:28:39.996 A:middle
around, and will call

00:28:39.996 --> 00:28:42.286 A:middle
sessionDidUpdate repeatedly, and

00:28:42.286 --> 00:28:43.166 A:middle
you have to return a drop

00:28:43.166 --> 00:28:43.866 A:middle
proposal here.

00:28:44.126 --> 00:28:45.856 A:middle
Now, keep in mind, this will be

00:28:45.856 --> 00:28:48.146 A:middle
called a lot of times, so try to

00:28:48.146 --> 00:28:49.876 A:middle
do at least minimal work here.

00:28:50.266 --> 00:28:51.636 A:middle
Don't do too much, because your

00:28:51.636 --> 00:28:53.546 A:middle
frame rate will suffer and users

00:28:53.546 --> 00:28:54.686 A:middle
don't like that.

00:28:55.856 --> 00:28:57.416 A:middle
When a user lifts their finger,

00:28:57.416 --> 00:28:58.326 A:middle
will execute a drop.

00:28:58.496 --> 00:28:59.476 A:middle
More about that later.

00:29:00.136 --> 00:29:01.666 A:middle
And finally, will call

00:29:01.666 --> 00:29:02.916 A:middle
sessionDidEnd to indicate that

00:29:02.916 --> 00:29:04.466 A:middle
the session has ended and your

00:29:04.466 --> 00:29:05.836 A:middle
interaction, by default, is

00:29:05.836 --> 00:29:07.646 A:middle
ready to accept new sessions

00:29:07.686 --> 00:29:08.016 A:middle
again.

00:29:09.176 --> 00:29:11.186 A:middle
Now, let's pretend that the user

00:29:11.626 --> 00:29:13.376 A:middle
did not lift their finger, and

00:29:13.376 --> 00:29:13.936 A:middle
bring them back.

00:29:15.316 --> 00:29:16.826 A:middle
If they move outside, we'll call

00:29:16.826 --> 00:29:18.266 A:middle
sessionDidExit to indicate that

00:29:18.266 --> 00:29:19.866 A:middle
the session has left your view.

00:29:20.436 --> 00:29:21.536 A:middle
It does not mean that the

00:29:21.596 --> 00:29:22.476 A:middle
session has ended.

00:29:23.016 --> 00:29:24.376 A:middle
It's still going on, so if the

00:29:24.376 --> 00:29:26.656 A:middle
user lifts their finger outside

00:29:26.656 --> 00:29:27.886 A:middle
of your view, we'll call

00:29:27.886 --> 00:29:29.506 A:middle
sessionDidEnd again to indicate

00:29:29.506 --> 00:29:30.696 A:middle
that the session has actually

00:29:30.696 --> 00:29:31.086 A:middle
ended.

00:29:32.356 --> 00:29:34.016 A:middle
Now, let's pretend again that

00:29:34.016 --> 00:29:35.186 A:middle
the user did not lift their

00:29:35.186 --> 00:29:36.206 A:middle
finger, and bring it back,

00:29:37.096 --> 00:29:38.806 A:middle
outside of the view, they bring

00:29:38.806 --> 00:29:40.056 A:middle
it back in again, we'll call

00:29:40.056 --> 00:29:42.086 A:middle
sessionDidEnter again, and start

00:29:42.086 --> 00:29:43.616 A:middle
calling sessionDidUpdate to

00:29:43.616 --> 00:29:45.146 A:middle
update the session and get a

00:29:45.146 --> 00:29:45.826 A:middle
drop proposal.

00:29:47.236 --> 00:29:48.806 A:middle
Now, pretend that the user has

00:29:48.806 --> 00:29:50.666 A:middle
rested on a place inside your

00:29:50.666 --> 00:29:51.896 A:middle
view where you cannot accept a

00:29:51.896 --> 00:29:52.246 A:middle
drop.

00:29:52.686 --> 00:29:54.206 A:middle
You'll return an operation

00:29:54.206 --> 00:29:55.586 A:middle
cancel or forbidden.

00:29:55.586 --> 00:29:57.386 A:middle
If the user then lifts their

00:29:57.386 --> 00:30:00.596 A:middle
finger, we'll call sessionDidEnd

00:30:00.596 --> 00:30:00.976 A:middle
right away.

00:30:01.296 --> 00:30:02.076 A:middle
Nothing happens.

00:30:02.076 --> 00:30:03.446 A:middle
No drop is executed, and we're

00:30:03.446 --> 00:30:06.706 A:middle
just canceling the drop.

00:30:06.846 --> 00:30:08.086 A:middle
Let's focus on this drop

00:30:08.086 --> 00:30:09.166 A:middle
proposal for a second.

00:30:09.596 --> 00:30:10.696 A:middle
I'm not going to talk about the

00:30:10.696 --> 00:30:11.906 A:middle
drop operations that was covered

00:30:11.906 --> 00:30:13.196 A:middle
yesterday in the introductory

00:30:13.196 --> 00:30:14.846 A:middle
talk, but there's two more

00:30:14.846 --> 00:30:15.856 A:middle
properties that might be

00:30:15.856 --> 00:30:16.276 A:middle
interesting.

00:30:16.466 --> 00:30:17.456 A:middle
First, precision mode.

00:30:18.136 --> 00:30:19.586 A:middle
If you set precision mode by

00:30:19.856 --> 00:30:22.206 A:middle
setting isPrecise to true, your

00:30:22.206 --> 00:30:25.396 A:middle
will hit tests inside your view

00:30:25.396 --> 00:30:26.816 A:middle
slightly above the touch of the

00:30:26.816 --> 00:30:27.246 A:middle
user.

00:30:27.416 --> 00:30:29.586 A:middle
So, the actual hit test location

00:30:29.586 --> 00:30:30.996 A:middle
inside your view will be not

00:30:30.996 --> 00:30:32.706 A:middle
under the finger, but slightly

00:30:32.706 --> 00:30:33.006 A:middle
above.

00:30:33.676 --> 00:30:35.216 A:middle
This allows more precise

00:30:35.266 --> 00:30:36.506 A:middle
dropping inside your view,

00:30:36.506 --> 00:30:37.736 A:middle
because the user can actually

00:30:37.736 --> 00:30:39.306 A:middle
see where they are dropping.

00:30:39.706 --> 00:30:41.276 A:middle
A good example is the Text

00:30:41.276 --> 00:30:41.876 A:middle
controls.

00:30:42.126 --> 00:30:43.666 A:middle
They use precision mode to show

00:30:43.666 --> 00:30:45.536 A:middle
with carets where the user will

00:30:45.536 --> 00:30:47.166 A:middle
actually drop the items inside a

00:30:47.166 --> 00:30:48.026 A:middle
Text view.

00:30:48.466 --> 00:30:50.166 A:middle
You can see it here, that the

00:30:50.166 --> 00:30:51.746 A:middle
caret is shown slightly above

00:30:51.746 --> 00:30:53.196 A:middle
the touch where the user is

00:30:53.196 --> 00:30:54.096 A:middle
touching the glass.

00:30:54.596 --> 00:30:55.846 A:middle
If you would not do this, the

00:30:55.846 --> 00:30:57.216 A:middle
caret will be below the finger,

00:30:57.216 --> 00:30:58.306 A:middle
and it will be very hard to

00:30:58.556 --> 00:31:01.466 A:middle
precisely drop inside a specific

00:31:01.506 --> 00:31:02.306 A:middle
point in the text.

00:31:02.946 --> 00:31:03.876 A:middle
So, if you do implement

00:31:03.876 --> 00:31:06.836 A:middle
precision mode, please indicate

00:31:06.836 --> 00:31:08.986 A:middle
some UI at the drop site to

00:31:08.986 --> 00:31:10.406 A:middle
indicate to the user where they

00:31:10.406 --> 00:31:12.356 A:middle
will be dropping this items.

00:31:12.786 --> 00:31:14.506 A:middle
Next up is

00:31:14.506 --> 00:31:16.216 A:middle
prefersFullSizePreview.

00:31:16.766 --> 00:31:18.876 A:middle
This brings us to preview

00:31:18.876 --> 00:31:19.286 A:middle
scaling.

00:31:19.286 --> 00:31:20.296 A:middle
As you might have noticed by

00:31:20.296 --> 00:31:22.786 A:middle
playing around with iOS 11, if

00:31:22.786 --> 00:31:24.036 A:middle
you start to drag something, it

00:31:24.036 --> 00:31:24.996 A:middle
will scale it down.

00:31:24.996 --> 00:31:26.366 A:middle
The system will always scale

00:31:26.366 --> 00:31:26.886 A:middle
things down.

00:31:27.496 --> 00:31:28.386 A:middle
Why do we do this?

00:31:28.476 --> 00:31:29.466 A:middle
Because it doesn't make a lot of

00:31:29.466 --> 00:31:30.896 A:middle
sense to have a big preview

00:31:30.896 --> 00:31:32.346 A:middle
covering the screen and your UI,

00:31:32.536 --> 00:31:33.646 A:middle
because it's interactive.

00:31:34.356 --> 00:31:36.006 A:middle
If you blocked the screen with a

00:31:36.006 --> 00:31:37.716 A:middle
preview that's too large, it's

00:31:37.716 --> 00:31:39.256 A:middle
hard to navigate around, so we

00:31:39.256 --> 00:31:42.026 A:middle
scale those down, but in certain

00:31:42.026 --> 00:31:43.996 A:middle
cases, it might be interesting

00:31:43.996 --> 00:31:45.586 A:middle
to prefer a full-size preview.

00:31:46.016 --> 00:31:47.886 A:middle
For example, you have a list and

00:31:47.886 --> 00:31:49.406 A:middle
this list you can reorder.

00:31:49.406 --> 00:31:50.656 A:middle
So, you pick something up and

00:31:50.746 --> 00:31:51.506 A:middle
try to drag it up.

00:31:52.086 --> 00:31:53.436 A:middle
It would not make sense to scale

00:31:53.436 --> 00:31:55.956 A:middle
that whole item down, so you can

00:31:55.956 --> 00:31:57.666 A:middle
add prefersFullSizePreviews

00:31:57.666 --> 00:31:57.876 A:middle
here.

00:31:58.456 --> 00:31:59.626 A:middle
There's two ways to do this.

00:31:59.716 --> 00:32:00.836 A:middle
At the drag site, there's drag

00:32:00.836 --> 00:32:01.356 A:middle
interaction

00:32:01.356 --> 00:32:03.006 A:middle
prefersFullSizePreviewsFor

00:32:03.006 --> 00:32:03.466 A:middle
session.

00:32:04.176 --> 00:32:05.566 A:middle
Return true here, and we'll try

00:32:05.566 --> 00:32:07.536 A:middle
to keep those previews full

00:32:07.536 --> 00:32:09.636 A:middle
size, and at the drop site, you

00:32:09.636 --> 00:32:11.296 A:middle
can set the flag to true on the

00:32:11.296 --> 00:32:12.096 A:middle
drop proposal.

00:32:12.926 --> 00:32:15.146 A:middle
Note that this is a preference.

00:32:15.856 --> 00:32:18.616 A:middle
You can ask to scale, not to

00:32:18.616 --> 00:32:20.366 A:middle
scale, but we might not always

00:32:20.426 --> 00:32:20.866 A:middle
honor it.

00:32:20.916 --> 00:32:22.326 A:middle
There's certain conditions where

00:32:22.326 --> 00:32:23.726 A:middle
the system will scale down

00:32:23.756 --> 00:32:24.216 A:middle
anyway.

00:32:25.296 --> 00:32:27.026 A:middle
A few of these are flocks.

00:32:27.026 --> 00:32:29.106 A:middle
So, if you add more items to the

00:32:29.106 --> 00:32:31.036 A:middle
drag, we will always scale those

00:32:31.036 --> 00:32:32.846 A:middle
items down, even if you prefer

00:32:32.846 --> 00:32:33.746 A:middle
full-size scaling.

00:32:35.126 --> 00:32:37.316 A:middle
A single preview, if you are

00:32:37.466 --> 00:32:40.066 A:middle
dragging one item and dragging

00:32:40.066 --> 00:32:41.176 A:middle
it outside your app, we will

00:32:41.176 --> 00:32:42.896 A:middle
always scale that down, too.

00:32:43.976 --> 00:32:45.396 A:middle
And finally, once something is

00:32:45.396 --> 00:32:46.836 A:middle
scaled down, we will never scale

00:32:46.836 --> 00:32:47.476 A:middle
it back up again.

00:32:47.526 --> 00:32:48.396 A:middle
So, keep that in mind.

00:32:48.446 --> 00:32:49.846 A:middle
It's a preference, but not

00:32:50.016 --> 00:32:50.906 A:middle
something set in stone.

00:32:51.366 --> 00:32:54.096 A:middle
Let's go to performing a drop.

00:32:54.246 --> 00:32:55.166 A:middle
When you're ready to perform a

00:32:55.166 --> 00:32:56.746 A:middle
drop, user lift their finger,

00:32:57.256 --> 00:33:00.286 A:middle
and we'll have to start loading

00:33:00.286 --> 00:33:01.166 A:middle
the data at this point.

00:33:01.406 --> 00:33:03.146 A:middle
In fact, this is the only moment

00:33:03.146 --> 00:33:04.716 A:middle
in time where you can actually

00:33:04.716 --> 00:33:07.746 A:middle
request data and allow it to

00:33:07.746 --> 00:33:09.886 A:middle
succeed, because in any other of

00:33:09.886 --> 00:33:11.556 A:middle
the lifetime calls, if you try

00:33:11.556 --> 00:33:12.966 A:middle
this, it will always fail.

00:33:12.966 --> 00:33:14.666 A:middle
Only in performDrop you have a

00:33:14.666 --> 00:33:15.746 A:middle
chance of getting data.

00:33:16.366 --> 00:33:17.486 A:middle
There's cooperation required on

00:33:17.486 --> 00:33:18.706 A:middle
the other side, so that's why I

00:33:18.706 --> 00:33:19.836 A:middle
say, "There's only a chance,"

00:33:19.896 --> 00:33:21.276 A:middle
but usually you will get some

00:33:21.276 --> 00:33:21.666 A:middle
data.

00:33:22.286 --> 00:33:23.276 A:middle
These data loads are always

00:33:23.276 --> 00:33:24.716 A:middle
asynchronous, so please don't

00:33:24.716 --> 00:33:25.196 A:middle
block here.

00:33:25.606 --> 00:33:26.836 A:middle
If you block for too long and

00:33:26.836 --> 00:33:28.376 A:middle
you don't know how long this

00:33:28.376 --> 00:33:30.886 A:middle
data will be taking to arrive

00:33:30.886 --> 00:33:32.426 A:middle
there, will kill your app, and

00:33:32.426 --> 00:33:33.416 A:middle
that's not the best user

00:33:33.416 --> 00:33:34.756 A:middle
experience for our users.

00:33:35.026 --> 00:33:35.856 A:middle
So, don't do this.

00:33:36.366 --> 00:33:39.006 A:middle
Load data in the background will

00:33:39.006 --> 00:33:40.856 A:middle
animate the items down into your

00:33:40.856 --> 00:33:42.226 A:middle
view so the user can see you

00:33:42.226 --> 00:33:43.736 A:middle
dropped, and then finally, we'll

00:33:43.736 --> 00:33:44.996 A:middle
call concludeDrop to indicate

00:33:44.996 --> 00:33:46.186 A:middle
that the animation is done, and

00:33:46.376 --> 00:33:47.696 A:middle
as far as the user is concerned,

00:33:47.806 --> 00:33:48.836 A:middle
the drop is finished.

00:33:51.396 --> 00:33:53.116 A:middle
This does not mean that the data

00:33:53.176 --> 00:33:53.726 A:middle
is there yet.

00:33:53.896 --> 00:33:55.356 A:middle
If you can see, the first call

00:33:55.356 --> 00:33:56.456 A:middle
here is still going on.

00:33:56.766 --> 00:33:57.796 A:middle
But, more about that later.

00:33:58.916 --> 00:33:59.696 A:middle
How do you load data?

00:33:59.696 --> 00:34:02.826 A:middle
There's a very useful call on

00:34:02.826 --> 00:34:04.626 A:middle
the session called loadObjects

00:34:04.626 --> 00:34:05.626 A:middle
of class completion.

00:34:06.136 --> 00:34:06.986 A:middle
It's very good to load

00:34:06.986 --> 00:34:07.776 A:middle
homogeneous data.

00:34:07.776 --> 00:34:09.566 A:middle
If you have only images in the

00:34:09.566 --> 00:34:11.596 A:middle
drag or in the drop, and you

00:34:11.596 --> 00:34:12.826 A:middle
know you can only accept those,

00:34:12.826 --> 00:34:14.886 A:middle
use URImage as class here, and

00:34:14.886 --> 00:34:16.246 A:middle
it will give you back a nice

00:34:16.246 --> 00:34:17.946 A:middle
array sorted exactly the same as

00:34:17.946 --> 00:34:19.426 A:middle
the sessions, in the sessions

00:34:19.426 --> 00:34:22.596 A:middle
items array, and we'll give it

00:34:22.596 --> 00:34:23.026 A:middle
right to you.

00:34:23.056 --> 00:34:23.906 A:middle
We'll do the heaving lifting

00:34:23.906 --> 00:34:25.016 A:middle
behind your back, and you'll get

00:34:25.016 --> 00:34:25.806 A:middle
a nice array back.

00:34:26.206 --> 00:34:27.126 A:middle
This completion block will be

00:34:27.126 --> 00:34:28.726 A:middle
called on the main queue, so you

00:34:28.726 --> 00:34:30.246 A:middle
can update URI right away.

00:34:30.856 --> 00:34:32.806 A:middle
If you have more mixed data

00:34:32.806 --> 00:34:33.826 A:middle
here, or you wanted some more

00:34:33.826 --> 00:34:35.546 A:middle
control, you can just iterate

00:34:35.546 --> 00:34:37.446 A:middle
over the session items and load

00:34:37.646 --> 00:34:38.766 A:middle
each of them individually, if

00:34:38.766 --> 00:34:39.126 A:middle
you want.

00:34:39.286 --> 00:34:40.266 A:middle
Use loadObject, or

00:34:40.266 --> 00:34:41.926 A:middle
loadDataRepresentation, or

00:34:41.926 --> 00:34:44.216 A:middle
loadFileRepresentation on the

00:34:44.216 --> 00:34:45.156 A:middle
item provider.

00:34:45.186 --> 00:34:46.266 A:middle
It gives you more fine-grained

00:34:46.266 --> 00:34:47.356 A:middle
control over what you want to

00:34:47.356 --> 00:34:49.336 A:middle
load and how, and it even allows

00:34:49.336 --> 00:34:51.416 A:middle
you to load multiple file

00:34:51.416 --> 00:34:53.116 A:middle
representations for each item,

00:34:53.116 --> 00:34:53.876 A:middle
if you choose to.

00:34:54.946 --> 00:34:55.796 A:middle
Keep in mind that this

00:34:55.796 --> 00:34:56.806 A:middle
completion block will be called

00:34:56.806 --> 00:34:59.496 A:middle
on the background queue, so if

00:34:59.496 --> 00:35:00.806 A:middle
you want to do URI work here,

00:35:00.806 --> 00:35:01.876 A:middle
dispatch to the main queue.

00:35:02.026 --> 00:35:04.536 A:middle
I'm going to hand it over back

00:35:04.536 --> 00:35:06.096 A:middle
to Wenson to show off how that

00:35:06.096 --> 00:35:07.426 A:middle
actually works in practice.

00:35:08.516 --> 00:35:13.546 A:middle
[ Applause ]

00:35:14.046 --> 00:35:14.226 A:middle
&gt;&gt; Alright.

00:35:14.686 --> 00:35:15.206 A:middle
Thanks, Tom.

00:35:15.876 --> 00:35:17.036 A:middle
So now, I'd like to introduce

00:35:17.386 --> 00:35:18.706 A:middle
the second part of our demo.

00:35:19.436 --> 00:35:21.476 A:middle
This is the, this is the second

00:35:21.476 --> 00:35:22.466 A:middle
demo app, called Drop

00:35:22.466 --> 00:35:24.136 A:middle
Destination, and what we'll be

00:35:24.136 --> 00:35:25.696 A:middle
doing here is building a photo

00:35:25.696 --> 00:35:26.836 A:middle
gallery very similar to the

00:35:26.836 --> 00:35:28.216 A:middle
Photos app, where dropping

00:35:28.216 --> 00:35:29.956 A:middle
images will populate this area

00:35:29.956 --> 00:35:31.436 A:middle
with additional Image views.

00:35:32.066 --> 00:35:34.306 A:middle
So, the idea is that this flow

00:35:34.306 --> 00:35:34.816 A:middle
should work.

00:35:34.816 --> 00:35:35.896 A:middle
I should be able to drop here,

00:35:36.256 --> 00:35:37.906 A:middle
and I should see more Image

00:35:37.906 --> 00:35:38.306 A:middle
views.

00:35:38.796 --> 00:35:39.456 A:middle
Now, of course, that didn't

00:35:39.456 --> 00:35:41.156 A:middle
happen, so let's go into the

00:35:41.156 --> 00:35:42.516 A:middle
code and see why that's the

00:35:42.516 --> 00:35:42.826 A:middle
case.

00:35:43.926 --> 00:35:44.846 A:middle
So, this is where most of our

00:35:44.846 --> 00:35:45.796 A:middle
logic is going to live,

00:35:45.796 --> 00:35:47.006 A:middle
Droppable Image Preview

00:35:47.006 --> 00:35:48.736 A:middle
Controller, and here, you can

00:35:48.736 --> 00:35:49.926 A:middle
see that all we've implemented

00:35:49.926 --> 00:35:50.846 A:middle
is sessionDidUpdate.

00:35:51.546 --> 00:35:52.796 A:middle
So, it's no wonder that the drop

00:35:52.796 --> 00:35:53.936 A:middle
doesn't work, because we haven't

00:35:53.936 --> 00:35:55.416 A:middle
actually implemented any drop

00:35:55.416 --> 00:35:55.966 A:middle
handling yet.

00:35:56.256 --> 00:35:57.306 A:middle
I'm going to implement

00:35:57.306 --> 00:35:59.306 A:middle
performDrop right here, and in

00:35:59.556 --> 00:36:01.346 A:middle
this method, we are going to

00:36:01.346 --> 00:36:02.886 A:middle
iterate through all of our items

00:36:02.886 --> 00:36:03.326 A:middle
in the session.

00:36:03.566 --> 00:36:05.126 A:middle
Now, for each item, if we are

00:36:05.126 --> 00:36:06.916 A:middle
able to load a UI image, we're

00:36:06.916 --> 00:36:08.206 A:middle
going to go ahead and insert a

00:36:08.206 --> 00:36:09.296 A:middle
new Image view into our

00:36:09.296 --> 00:36:11.426 A:middle
hierarchy and kick off a load

00:36:11.426 --> 00:36:12.286 A:middle
from the itemProvider.

00:36:12.946 --> 00:36:13.906 A:middle
Now, when the itemProvider is

00:36:13.906 --> 00:36:14.786 A:middle
done loading, we're going to

00:36:14.786 --> 00:36:16.356 A:middle
call back to the main queue and

00:36:16.356 --> 00:36:17.826 A:middle
set the image of the Image view

00:36:17.826 --> 00:36:19.526 A:middle
that we just inserted to this

00:36:19.526 --> 00:36:20.606 A:middle
new image returned by the

00:36:20.606 --> 00:36:21.386 A:middle
itemProvider.

00:36:21.386 --> 00:36:23.986 A:middle
So, with that little change, we

00:36:23.986 --> 00:36:25.966 A:middle
should be able to get this flow,

00:36:25.966 --> 00:36:27.146 A:middle
this basic flow to work.

00:36:27.746 --> 00:36:31.196 A:middle
So, let's see what happens.

00:36:31.716 --> 00:36:33.306 A:middle
Now, the first thing you'll

00:36:33.306 --> 00:36:34.296 A:middle
notice is that now there's a

00:36:34.296 --> 00:36:35.466 A:middle
green plus-three badge.

00:36:35.576 --> 00:36:36.596 A:middle
This indicates that there is

00:36:36.596 --> 00:36:37.806 A:middle
indeed an action to be

00:36:37.806 --> 00:36:39.486 A:middle
performed, and that action, of

00:36:39.486 --> 00:36:41.656 A:middle
course, is inserting new images.

00:36:42.276 --> 00:36:42.916 A:middle
So, that works.

00:36:43.446 --> 00:36:44.286 A:middle
It's very basic, though.

00:36:44.636 --> 00:36:46.476 A:middle
There is now another feature I'd

00:36:46.476 --> 00:36:47.706 A:middle
like to highlight while we're

00:36:47.956 --> 00:36:48.066 A:middle
here.

00:36:48.366 --> 00:36:49.776 A:middle
So, you might have noticed this

00:36:49.916 --> 00:36:50.946 A:middle
area at the bottom that says

00:36:50.946 --> 00:36:52.546 A:middle
Drop here to delete photos.

00:36:53.286 --> 00:36:54.366 A:middle
It does what it says on the tin.

00:36:55.016 --> 00:36:56.326 A:middle
When I drop it here, we remove

00:36:56.326 --> 00:36:57.226 A:middle
it from the top area.

00:36:57.276 --> 00:36:58.886 A:middle
So, that's kind of nice, but the

00:36:58.886 --> 00:36:59.956 A:middle
thing is, we haven't done any

00:36:59.956 --> 00:37:01.386 A:middle
customization around the drop

00:37:01.386 --> 00:37:02.976 A:middle
preview yet, and so by default,

00:37:03.156 --> 00:37:04.666 A:middle
images just kind of fly towards

00:37:04.666 --> 00:37:05.706 A:middle
the center and fade out.

00:37:06.166 --> 00:37:07.456 A:middle
I'm going to now hand it back to

00:37:07.456 --> 00:37:09.376 A:middle
Tom to see what we can do to

00:37:09.376 --> 00:37:09.976 A:middle
make this better.

00:37:10.516 --> 00:37:15.546 A:middle
[ Applause ]

00:37:16.046 --> 00:37:16.786 A:middle
&gt;&gt; Turns out, you don't need a

00:37:16.786 --> 00:37:18.776 A:middle
lot of codes to perform a drop.

00:37:18.776 --> 00:37:20.776 A:middle
So, let's talk about drop

00:37:20.776 --> 00:37:22.426 A:middle
previews and their animations.

00:37:22.946 --> 00:37:25.356 A:middle
Let's bring back this diagram,

00:37:25.356 --> 00:37:28.096 A:middle
but it turns out that it's a bit

00:37:28.096 --> 00:37:29.986 A:middle
more of a simplification, and

00:37:29.986 --> 00:37:30.836 A:middle
there's more going on.

00:37:30.836 --> 00:37:31.836 A:middle
So, let's bring this

00:37:31.836 --> 00:37:33.626 A:middle
concludeDrop to the side, and

00:37:33.626 --> 00:37:35.096 A:middle
let's talk about what's going on

00:37:35.156 --> 00:37:35.646 A:middle
in between.

00:37:36.806 --> 00:37:37.936 A:middle
Started loading our data, and

00:37:38.666 --> 00:37:40.026 A:middle
once we've performed our

00:37:40.026 --> 00:37:42.436 A:middle
completes, we ask you for a

00:37:42.436 --> 00:37:44.056 A:middle
preview for dropping the item by

00:37:44.056 --> 00:37:45.476 A:middle
calling previewForDropping item

00:37:45.476 --> 00:37:46.906 A:middle
with defaultPreview, giving you

00:37:46.906 --> 00:37:47.736 A:middle
a default preview.

00:37:48.306 --> 00:37:49.526 A:middle
You can return a new preview

00:37:49.526 --> 00:37:51.746 A:middle
here, or return the default

00:37:51.746 --> 00:37:53.146 A:middle
preview, or nil, whatever you

00:37:53.146 --> 00:37:53.526 A:middle
want.

00:37:53.826 --> 00:37:54.796 A:middle
More about that later.

00:37:54.796 --> 00:37:58.056 A:middle
So, any of the previews we get,

00:37:58.056 --> 00:38:00.046 A:middle
or the defaults we have, we'll

00:38:00.046 --> 00:38:01.836 A:middle
use these and animate those down

00:38:01.876 --> 00:38:03.846 A:middle
into your view, so the user can

00:38:03.846 --> 00:38:04.926 A:middle
actually see something dropping.

00:38:06.076 --> 00:38:08.056 A:middle
While that's going on, we'll

00:38:08.056 --> 00:38:09.806 A:middle
animate willDropWith animator so

00:38:09.806 --> 00:38:11.216 A:middle
you can animate alongside.

00:38:12.366 --> 00:38:13.746 A:middle
Now, as Robb mentioned before,

00:38:14.656 --> 00:38:16.096 A:middle
same as in the lift side, the

00:38:16.096 --> 00:38:17.296 A:middle
drop side is live, too.

00:38:17.906 --> 00:38:19.586 A:middle
While you're dragging, there is

00:38:19.586 --> 00:38:20.706 A:middle
a snapshot, but while you're

00:38:20.706 --> 00:38:21.956 A:middle
dropping or canceling or

00:38:21.956 --> 00:38:23.536 A:middle
lifting, the view is live, so

00:38:23.536 --> 00:38:25.066 A:middle
you can also update the view you

00:38:25.066 --> 00:38:27.036 A:middle
give us here, or animate

00:38:27.036 --> 00:38:29.526 A:middle
alongside any other UI you have.

00:38:31.676 --> 00:38:33.556 A:middle
Those animations finish, and

00:38:33.696 --> 00:38:34.826 A:middle
we'll call concludeDrop to

00:38:34.826 --> 00:38:36.826 A:middle
indicate to you that the drop is

00:38:36.826 --> 00:38:38.496 A:middle
finished and, as far as the user

00:38:38.496 --> 00:38:39.956 A:middle
is concerned, they can continue

00:38:39.956 --> 00:38:40.976 A:middle
with their business.

00:38:41.956 --> 00:38:46.426 A:middle
Now, again, this does not mean

00:38:46.466 --> 00:38:48.076 A:middle
that the data is already there.

00:38:48.516 --> 00:38:49.846 A:middle
You can see here, and that's

00:38:50.066 --> 00:38:51.746 A:middle
just two examples, there's one

00:38:51.796 --> 00:38:53.086 A:middle
very long load object call

00:38:53.086 --> 00:38:54.186 A:middle
that's going on beyond

00:38:54.326 --> 00:38:54.996 A:middle
concludeDrop.

00:38:55.386 --> 00:38:56.796 A:middle
There's one that, like, ends in

00:38:56.796 --> 00:38:58.466 A:middle
the middle between willAnimate

00:38:58.466 --> 00:39:00.166 A:middle
and previewForDropping, and even

00:39:00.166 --> 00:39:01.646 A:middle
the previews are animating at a

00:39:01.646 --> 00:39:02.916 A:middle
different duration.

00:39:03.256 --> 00:39:04.426 A:middle
That's because, depending on

00:39:04.426 --> 00:39:06.106 A:middle
what target you give us, they

00:39:06.106 --> 00:39:07.656 A:middle
might take longer to travel

00:39:07.656 --> 00:39:07.956 A:middle
there.

00:39:08.776 --> 00:39:09.776 A:middle
Something that's farther away

00:39:09.776 --> 00:39:11.276 A:middle
from the finger will take a

00:39:11.276 --> 00:39:12.336 A:middle
little bit longer than something

00:39:12.336 --> 00:39:13.546 A:middle
that's closer to your finger.

00:39:14.136 --> 00:39:15.016 A:middle
So, keep this in mind.

00:39:15.266 --> 00:39:17.026 A:middle
The animations do not take the

00:39:17.026 --> 00:39:17.586 A:middle
same time.

00:39:17.766 --> 00:39:18.716 A:middle
They are slightly different.

00:39:22.136 --> 00:39:23.866 A:middle
So, we have drop previews, and

00:39:23.866 --> 00:39:25.626 A:middle
as Wenson already showed, we

00:39:25.626 --> 00:39:26.886 A:middle
also have cancel previews.

00:39:26.886 --> 00:39:28.166 A:middle
They look almost exactly the

00:39:28.166 --> 00:39:29.506 A:middle
same, and the same goes for

00:39:29.506 --> 00:39:30.406 A:middle
lifting previews.

00:39:30.406 --> 00:39:32.276 A:middle
It's the same approach, but just

00:39:32.276 --> 00:39:33.206 A:middle
different locations.

00:39:34.636 --> 00:39:36.036 A:middle
Wenson's previews demos showed

00:39:36.036 --> 00:39:37.186 A:middle
that it's probably better to

00:39:37.186 --> 00:39:39.456 A:middle
implement previewForCanceling

00:39:39.456 --> 00:39:40.566 A:middle
item, because it gives a better

00:39:40.566 --> 00:39:41.496 A:middle
user experience.

00:39:41.496 --> 00:39:43.036 A:middle
You can fly back the items.

00:39:43.826 --> 00:39:45.876 A:middle
When you update the UI, you can,

00:39:45.876 --> 00:39:46.866 A:middle
I mean, the user can navigate

00:39:46.866 --> 00:39:48.516 A:middle
around so your original UI can

00:39:48.516 --> 00:39:50.806 A:middle
be very different than the one

00:39:50.806 --> 00:39:52.476 A:middle
that you started at, so keep

00:39:52.476 --> 00:39:56.176 A:middle
this in mind.

00:39:56.356 --> 00:39:56.886 A:middle
Additionally,

00:39:56.886 --> 00:39:58.496 A:middle
willAnimateDropWith animator is

00:39:58.566 --> 00:39:59.376 A:middle
very similar to

00:39:59.376 --> 00:40:00.976 A:middle
willAnimateCancelWith animator.

00:40:01.166 --> 00:40:03.956 A:middle
And again, different occasions,

00:40:03.956 --> 00:40:04.916 A:middle
but the same approach.

00:40:05.486 --> 00:40:07.476 A:middle
The UIDragAnimating protocol

00:40:07.476 --> 00:40:08.816 A:middle
here is very similar to

00:40:08.816 --> 00:40:10.626 A:middle
UIViewPropertyAnimator, so

00:40:10.626 --> 00:40:12.626 A:middle
you'll be right at home, there.

00:40:13.246 --> 00:40:14.986 A:middle
Now, let's talk about this

00:40:14.986 --> 00:40:15.956 A:middle
default preview we give you.

00:40:15.956 --> 00:40:17.016 A:middle
Why do we give it to you?

00:40:17.086 --> 00:40:20.636 A:middle
You could just return it here,

00:40:20.776 --> 00:40:21.556 A:middle
and you get this.

00:40:22.036 --> 00:40:25.206 A:middle
Well, that's fine, but that's

00:40:25.206 --> 00:40:26.086 A:middle
not why we give it to you.

00:40:26.326 --> 00:40:27.726 A:middle
So, if you do want the default

00:40:27.726 --> 00:40:28.816 A:middle
preview, and you want the

00:40:28.816 --> 00:40:31.086 A:middle
default animations, just return

00:40:31.086 --> 00:40:31.516 A:middle
nil here.

00:40:31.516 --> 00:40:32.806 A:middle
That indicates to the system

00:40:33.086 --> 00:40:34.036 A:middle
that you're fine with the

00:40:34.036 --> 00:40:36.066 A:middle
defaults and the system can do

00:40:36.066 --> 00:40:37.556 A:middle
what it wants to animate

00:40:37.556 --> 00:40:38.776 A:middle
everything down, and how it

00:40:38.776 --> 00:40:39.336 A:middle
represents it.

00:40:40.236 --> 00:40:41.316 A:middle
So, why do we give you this

00:40:41.316 --> 00:40:41.996 A:middle
default preview?

00:40:42.986 --> 00:40:44.426 A:middle
Well, you can retarget it.

00:40:44.466 --> 00:40:46.626 A:middle
That's why we, what we want you

00:40:46.626 --> 00:40:46.896 A:middle
to do.

00:40:46.896 --> 00:40:47.946 A:middle
If you retarget it, you know

00:40:47.946 --> 00:40:49.106 A:middle
where it's going to be inside

00:40:49.106 --> 00:40:49.506 A:middle
your view.

00:40:49.856 --> 00:40:51.436 A:middle
We'll animate it down into the

00:40:51.436 --> 00:40:53.516 A:middle
target you specified, and that's

00:40:53.516 --> 00:40:55.016 A:middle
a better experience.

00:40:55.556 --> 00:40:57.056 A:middle
That only works, of course, if

00:40:57.056 --> 00:40:58.266 A:middle
you know where to target to.

00:40:58.266 --> 00:40:59.466 A:middle
If you don't know the location,

00:40:59.806 --> 00:41:00.656 A:middle
you can't retarget.

00:41:02.036 --> 00:41:04.446 A:middle
And finally, you can create your

00:41:04.446 --> 00:41:06.646 A:middle
own custom preview and make your

00:41:06.646 --> 00:41:07.176 A:middle
own UI here.

00:41:07.176 --> 00:41:08.506 A:middle
You're free to do what you want.

00:41:09.326 --> 00:41:11.336 A:middle
The preview you give us will

00:41:11.336 --> 00:41:12.416 A:middle
animate to the target you

00:41:12.416 --> 00:41:13.026 A:middle
specified.

00:41:14.316 --> 00:41:15.566 A:middle
There's a few limits here.

00:41:15.566 --> 00:41:16.906 A:middle
If there's fewer items in the

00:41:16.906 --> 00:41:18.466 A:middle
flock, then we'll ask you a

00:41:18.466 --> 00:41:20.126 A:middle
preview for each of the items

00:41:20.406 --> 00:41:21.456 A:middle
and give you an alongside

00:41:21.456 --> 00:41:23.176 A:middle
animation for each of the items,

00:41:23.176 --> 00:41:25.836 A:middle
so depending on how much they

00:41:25.836 --> 00:41:27.256 A:middle
are, you'll get these.

00:41:27.756 --> 00:41:31.416 A:middle
If there are many items in the

00:41:31.416 --> 00:41:33.776 A:middle
flock, or in the session, then

00:41:33.776 --> 00:41:35.426 A:middle
we'll use the default previews

00:41:35.426 --> 00:41:37.596 A:middle
for all of them, so we won't ask

00:41:37.596 --> 00:41:38.386 A:middle
you for preview.

00:41:39.046 --> 00:41:40.916 A:middle
We do give you one alongside

00:41:40.916 --> 00:41:42.976 A:middle
animation to go with that one

00:41:42.976 --> 00:41:44.696 A:middle
animation for all the items.

00:41:45.346 --> 00:41:47.316 A:middle
Don't take my word for it.

00:41:47.466 --> 00:41:49.046 A:middle
Wenson's going to show how to do

00:41:49.866 --> 00:41:49.976 A:middle
this.

00:41:50.516 --> 00:41:54.226 A:middle
[ Applause ]

00:41:54.726 --> 00:41:55.486 A:middle
&gt;&gt; Thanks again, Tom.

00:41:56.296 --> 00:41:58.206 A:middle
So, to jog your memory, the part

00:41:58.206 --> 00:41:59.776 A:middle
that we'd like to polish is this

00:41:59.776 --> 00:42:00.606 A:middle
drop animation.

00:42:01.406 --> 00:42:02.396 A:middle
Let's find out how to do that.

00:42:03.546 --> 00:42:04.796 A:middle
So, we're now in Droppable

00:42:04.796 --> 00:42:06.616 A:middle
Delete View, and over here,

00:42:07.106 --> 00:42:08.366 A:middle
first thing we're going to do is

00:42:08.366 --> 00:42:09.726 A:middle
implement a previewForDropping.

00:42:11.076 --> 00:42:12.306 A:middle
So, given the item, we're going

00:42:12.306 --> 00:42:13.446 A:middle
to create this drag preview

00:42:13.446 --> 00:42:13.836 A:middle
target.

00:42:14.866 --> 00:42:16.656 A:middle
Now, this looks very similar to

00:42:16.656 --> 00:42:17.896 A:middle
what we've done before, only

00:42:17.896 --> 00:42:19.166 A:middle
this time, we have an explicit

00:42:19.166 --> 00:42:21.316 A:middle
transform set, so what this is

00:42:21.316 --> 00:42:22.956 A:middle
going to do is animate our

00:42:22.956 --> 00:42:24.496 A:middle
default preview's width and

00:42:24.496 --> 00:42:26.546 A:middle
height to 10% of its original

00:42:26.546 --> 00:42:26.936 A:middle
value.

00:42:27.156 --> 00:42:28.366 A:middle
So, you're going to specify that

00:42:28.366 --> 00:42:28.846 A:middle
transform.

00:42:28.846 --> 00:42:29.826 A:middle
We're also going to set the

00:42:29.826 --> 00:42:31.506 A:middle
center to the be the iconView

00:42:31.506 --> 00:42:31.806 A:middle
center.

00:42:31.806 --> 00:42:33.656 A:middle
The iconView is, if you go back

00:42:33.656 --> 00:42:35.336 A:middle
to the app, this little trash

00:42:35.336 --> 00:42:37.056 A:middle
can at the very bottom, here, on

00:42:37.056 --> 00:42:37.466 A:middle
the left.

00:42:38.626 --> 00:42:39.866 A:middle
So, we're going to animate to

00:42:39.866 --> 00:42:41.256 A:middle
there, and we're going to

00:42:41.256 --> 00:42:42.966 A:middle
retarget the default preview to

00:42:42.966 --> 00:42:44.516 A:middle
that location using this target.

00:42:44.746 --> 00:42:46.296 A:middle
But wait, there's more.

00:42:47.086 --> 00:42:49.486 A:middle
We can actually do a little more

00:42:49.486 --> 00:42:50.006 A:middle
polish here.

00:42:50.626 --> 00:42:52.026 A:middle
Let's add an alongside animation

00:42:52.026 --> 00:42:53.016 A:middle
on the drop, as well.

00:42:53.266 --> 00:42:55.686 A:middle
So, let's add a transform to the

00:42:55.686 --> 00:42:57.766 A:middle
iconView to the trash can as the

00:42:57.766 --> 00:42:59.076 A:middle
drop is taking place.

00:42:59.076 --> 00:43:00.106 A:middle
So, we're going to transform it

00:43:00.146 --> 00:43:01.986 A:middle
to 1.25 scale.

00:43:01.986 --> 00:43:03.176 A:middle
That's going to make it grow

00:43:03.176 --> 00:43:04.676 A:middle
slightly, by 25%.

00:43:05.716 --> 00:43:06.836 A:middle
Now, we don't want to have it

00:43:06.836 --> 00:43:09.746 A:middle
permanently at 125% size, so

00:43:09.746 --> 00:43:10.886 A:middle
we're going to set the transform

00:43:10.886 --> 00:43:12.316 A:middle
back to the identity when we

00:43:12.316 --> 00:43:13.646 A:middle
conclude the drop.

00:43:14.586 --> 00:43:16.566 A:middle
So, with these little tweaks,

00:43:17.286 --> 00:43:18.656 A:middle
should be able to see a little

00:43:18.656 --> 00:43:20.006 A:middle
more polished experience.

00:43:20.506 --> 00:43:23.216 A:middle
I'm going to go back and drag

00:43:23.216 --> 00:43:23.826 A:middle
some photos here.

00:43:24.076 --> 00:43:25.386 A:middle
So, pay attention to what

00:43:25.386 --> 00:43:26.916 A:middle
happens to the photo when I drop

00:43:26.916 --> 00:43:27.026 A:middle
it.

00:43:27.886 --> 00:43:29.276 A:middle
You see, this time it goes into

00:43:29.276 --> 00:43:30.736 A:middle
the trash can and disappears.

00:43:31.166 --> 00:43:32.416 A:middle
And, speaking of the trash can,

00:43:32.926 --> 00:43:34.326 A:middle
you also see that kind of grow

00:43:34.326 --> 00:43:36.306 A:middle
in size and then shrink when the

00:43:36.306 --> 00:43:37.256 A:middle
drop is concluded.

00:43:38.296 --> 00:43:39.376 A:middle
So, that looks a lot better than

00:43:39.376 --> 00:43:39.996 A:middle
it did before.

00:43:39.996 --> 00:43:40.176 A:middle
Now.

00:43:41.516 --> 00:43:44.556 A:middle
[ Applause ]

00:43:45.056 --> 00:43:45.816 A:middle
So, I'd like to now show you

00:43:45.816 --> 00:43:47.076 A:middle
something that might not look as

00:43:47.076 --> 00:43:47.266 A:middle
good.

00:43:48.366 --> 00:43:50.396 A:middle
So, in this case, this is the

00:43:50.396 --> 00:43:52.126 A:middle
last panel of Drag Source.

00:43:52.426 --> 00:43:53.676 A:middle
We have Slow Draggable Image

00:43:53.676 --> 00:43:53.926 A:middle
Views.

00:43:53.926 --> 00:43:55.106 A:middle
Now, they're called slow because

00:43:55.106 --> 00:43:56.446 A:middle
they're stimulating items coming

00:43:56.446 --> 00:43:58.726 A:middle
in from a remote server far, far

00:43:58.726 --> 00:43:59.006 A:middle
away.

00:44:00.176 --> 00:44:01.876 A:middle
If I drop these four photos into

00:44:01.876 --> 00:44:03.346 A:middle
here, it's going to take a

00:44:03.346 --> 00:44:04.656 A:middle
really long time to load.

00:44:05.116 --> 00:44:07.296 A:middle
So long, in fact, that we will

00:44:07.296 --> 00:44:08.586 A:middle
begin showing this app modal

00:44:08.586 --> 00:44:10.116 A:middle
dialog that at least allows the

00:44:10.116 --> 00:44:10.856 A:middle
user to cancel.

00:44:12.136 --> 00:44:13.566 A:middle
But, as is the theme of this

00:44:13.566 --> 00:44:15.286 A:middle
presentation, this can also be

00:44:15.286 --> 00:44:16.116 A:middle
customized away.

00:44:16.116 --> 00:44:17.646 A:middle
So, I'm going to hand it back to

00:44:17.646 --> 00:44:19.806 A:middle
Tom to see how we can do that.

00:44:20.516 --> 00:44:24.556 A:middle
[ Applause ]

00:44:25.056 --> 00:44:27.416 A:middle
&gt;&gt; So, how do we deal with slow

00:44:27.416 --> 00:44:28.106 A:middle
data delivery?

00:44:28.686 --> 00:44:31.516 A:middle
Like I mentioned before, data

00:44:31.516 --> 00:44:33.146 A:middle
loads are always asynchronous.

00:44:33.856 --> 00:44:35.026 A:middle
So, there's two disconnected

00:44:35.026 --> 00:44:35.946 A:middle
timelines at play here.

00:44:35.986 --> 00:44:37.896 A:middle
There's data loading, one goal,

00:44:37.896 --> 00:44:39.166 A:middle
and there's animating the drop

00:44:39.166 --> 00:44:40.646 A:middle
previews, and they're not the

00:44:40.646 --> 00:44:40.996 A:middle
same.

00:44:42.016 --> 00:44:43.276 A:middle
Bring back this diagram, you can

00:44:43.396 --> 00:44:45.536 A:middle
clearly see that there's not one

00:44:45.536 --> 00:44:47.276 A:middle
line here that's equally in

00:44:47.276 --> 00:44:47.806 A:middle
size.

00:44:48.486 --> 00:44:49.846 A:middle
The loadObject calls take

00:44:49.846 --> 00:44:51.206 A:middle
different time, and the preview

00:44:51.206 --> 00:44:52.456 A:middle
animations take different time.

00:44:53.126 --> 00:44:55.726 A:middle
And, you can also see that we

00:44:55.816 --> 00:44:56.916 A:middle
don't have data yet at the

00:44:56.916 --> 00:44:58.666 A:middle
moment we ask you for a preview.

00:45:00.836 --> 00:45:02.726 A:middle
One use case for this, or one

00:45:02.956 --> 00:45:04.306 A:middle
case that you might run into if

00:45:04.306 --> 00:45:06.236 A:middle
you drag photos from Photos into

00:45:06.236 --> 00:45:08.136 A:middle
an email, and those photos might

00:45:08.136 --> 00:45:09.606 A:middle
be stored on iCloud, because

00:45:09.606 --> 00:45:10.616 A:middle
we're saving space on your

00:45:10.616 --> 00:45:11.206 A:middle
device.

00:45:12.126 --> 00:45:14.446 A:middle
While you're dropping, well show

00:45:14.446 --> 00:45:16.906 A:middle
the app modal UI, giving the

00:45:16.946 --> 00:45:18.686 A:middle
user some sense of progress and

00:45:18.686 --> 00:45:19.846 A:middle
a way to cancel out.

00:45:21.806 --> 00:45:23.316 A:middle
That's a real-life use case.

00:45:24.786 --> 00:45:26.776 A:middle
So, you saw this Cancel button,

00:45:26.776 --> 00:45:28.666 A:middle
because we don't want to user to

00:45:28.666 --> 00:45:29.586 A:middle
be waiting forever.

00:45:29.766 --> 00:45:31.306 A:middle
We don't know how long the data

00:45:31.306 --> 00:45:32.556 A:middle
will take to arrive.

00:45:33.226 --> 00:45:34.446 A:middle
Might be two seconds, might be

00:45:34.446 --> 00:45:35.056 A:middle
two minutes.

00:45:35.056 --> 00:45:36.586 A:middle
So, we give the user a way to

00:45:36.586 --> 00:45:37.056 A:middle
cancel.

00:45:37.426 --> 00:45:38.946 A:middle
If that happens, we'll call the

00:45:38.946 --> 00:45:40.746 A:middle
completion blocks with nil data

00:45:40.746 --> 00:45:41.996 A:middle
and an error set so you can

00:45:41.996 --> 00:45:43.346 A:middle
detect this.

00:45:43.946 --> 00:45:46.246 A:middle
Additionally, both sessions and

00:45:46.246 --> 00:45:47.346 A:middle
item providers provide

00:45:47.466 --> 00:45:48.326 A:middle
ProgressReporting.

00:45:48.326 --> 00:45:48.816 A:middle
The session is

00:45:48.816 --> 00:45:49.996 A:middle
ProgressReporting, so you can

00:45:50.196 --> 00:45:51.346 A:middle
observe its progress.

00:45:51.646 --> 00:45:53.346 A:middle
And, the item provider load

00:45:53.346 --> 00:45:55.596 A:middle
methods all return a progress

00:45:55.596 --> 00:45:57.366 A:middle
object you can also use.

00:45:59.516 --> 00:46:00.876 A:middle
Progress has a cancellation

00:46:00.876 --> 00:46:02.576 A:middle
handler which is a perfect spot

00:46:02.576 --> 00:46:03.776 A:middle
to handle the cancel.

00:46:04.506 --> 00:46:06.266 A:middle
Add you code there to handle any

00:46:06.266 --> 00:46:08.306 A:middle
of the items coming in and not

00:46:08.306 --> 00:46:09.696 A:middle
being there, and you can remove

00:46:09.696 --> 00:46:11.656 A:middle
them again from your modal.

00:46:13.106 --> 00:46:14.916 A:middle
Now, this also brings us to

00:46:14.916 --> 00:46:16.246 A:middle
showing custom progress, like

00:46:16.246 --> 00:46:17.406 A:middle
Wenson said before.

00:46:17.616 --> 00:46:19.996 A:middle
If you don't want this app modal

00:46:19.996 --> 00:46:21.386 A:middle
UI, you can turn it off by

00:46:21.386 --> 00:46:22.086 A:middle
setting session

00:46:22.176 --> 00:46:23.686 A:middle
progressIndicatorStyle to none,

00:46:23.686 --> 00:46:25.566 A:middle
and then we won't show the UI at

00:46:25.626 --> 00:46:26.286 A:middle
all.

00:46:26.826 --> 00:46:28.406 A:middle
Now, this does mean you have to

00:46:28.406 --> 00:46:29.786 A:middle
provide that experience to the

00:46:29.786 --> 00:46:30.916 A:middle
user, yourself.

00:46:31.296 --> 00:46:32.466 A:middle
You can do this by observing the

00:46:32.466 --> 00:46:33.296 A:middle
progress again.

00:46:33.466 --> 00:46:34.186 A:middle
There's a progress on the

00:46:34.186 --> 00:46:35.786 A:middle
session, and the per-item

00:46:35.786 --> 00:46:36.966 A:middle
progress returned by the item

00:46:36.966 --> 00:46:37.616 A:middle
providers.

00:46:38.406 --> 00:46:39.636 A:middle
If you do this, use this

00:46:39.666 --> 00:46:41.296 A:middle
progress to indicate some UI

00:46:41.296 --> 00:46:43.906 A:middle
there where the user is, where

00:46:44.306 --> 00:46:45.986 A:middle
you can see, for each item, if

00:46:45.986 --> 00:46:47.706 A:middle
it's loading or, in general, for

00:46:47.706 --> 00:46:49.406 A:middle
your view, but please allow the

00:46:49.406 --> 00:46:51.256 A:middle
user to cancel or navigate away,

00:46:51.256 --> 00:46:53.026 A:middle
so they are not blocked on using

00:46:53.026 --> 00:46:53.416 A:middle
your view.

00:46:53.946 --> 00:46:57.466 A:middle
But, the big question remains,

00:46:57.466 --> 00:46:59.126 A:middle
how do I generate a preview if I

00:46:59.126 --> 00:46:59.856 A:middle
don't have any data?

00:47:00.046 --> 00:47:01.186 A:middle
I want to create this custom

00:47:01.186 --> 00:47:02.306 A:middle
preview, but it doesn't work.

00:47:02.736 --> 00:47:04.256 A:middle
Well, turns out, you can't.

00:47:04.476 --> 00:47:05.786 A:middle
If there's no data, you cannot

00:47:06.986 --> 00:47:07.736 A:middle
create a new one.

00:47:08.706 --> 00:47:10.126 A:middle
Just use the default previews.

00:47:10.126 --> 00:47:11.076 A:middle
They're a pretty accurate

00:47:11.076 --> 00:47:12.366 A:middle
representation of what's

00:47:12.366 --> 00:47:13.396 A:middle
actually in the item.

00:47:14.346 --> 00:47:16.256 A:middle
Was set by the drag side, and so

00:47:16.256 --> 00:47:17.636 A:middle
you can actually use this to

00:47:17.636 --> 00:47:18.396 A:middle
animate this down.

00:47:19.026 --> 00:47:21.446 A:middle
We target it, add a transform,

00:47:21.446 --> 00:47:22.936 A:middle
you can change however you want

00:47:23.556 --> 00:47:23.626 A:middle
it.

00:47:25.496 --> 00:47:27.836 A:middle
You can also make a placeholder

00:47:27.996 --> 00:47:28.686 A:middle
progress view.

00:47:29.166 --> 00:47:30.516 A:middle
If you have something that you

00:47:30.516 --> 00:47:32.386 A:middle
want to show, and like, show a

00:47:32.386 --> 00:47:34.226 A:middle
spinner there, that's probably a

00:47:34.226 --> 00:47:36.406 A:middle
good idea, if it makes sense for

00:47:36.406 --> 00:47:36.626 A:middle
your UI.

00:47:36.626 --> 00:47:39.126 A:middle
One of the great things is that

00:47:39.286 --> 00:47:40.556 A:middle
Collection view and Table view

00:47:40.556 --> 00:47:42.086 A:middle
have built-in support for this,

00:47:42.456 --> 00:47:43.656 A:middle
so you don't have to worry about

00:47:43.656 --> 00:47:43.756 A:middle
it.

00:47:43.756 --> 00:47:45.736 A:middle
It's very easy to turn on.

00:47:46.586 --> 00:47:48.716 A:middle
So, I know it's early, tomorrow

00:47:48.716 --> 00:47:51.766 A:middle
at 9 a.m., fourth day of WWDC,

00:47:51.766 --> 00:47:53.116 A:middle
but please come to this session.

00:47:53.116 --> 00:47:56.066 A:middle
It will be worth your time.

00:47:56.286 --> 00:47:57.816 A:middle
So, never assume the data will

00:47:57.816 --> 00:47:58.396 A:middle
be there.

00:47:59.006 --> 00:48:00.616 A:middle
That's the one advice I can give

00:48:00.616 --> 00:48:00.846 A:middle
you.

00:48:01.686 --> 00:48:03.406 A:middle
Even if you are testing, and

00:48:04.256 --> 00:48:06.186 A:middle
locally it might be, the data

00:48:06.186 --> 00:48:07.486 A:middle
might be there right away, this

00:48:07.486 --> 00:48:08.836 A:middle
might not be the case for your

00:48:08.836 --> 00:48:09.416 A:middle
users.

00:48:09.416 --> 00:48:10.766 A:middle
You don't know how it's going to

00:48:10.766 --> 00:48:11.556 A:middle
be in the field.

00:48:12.796 --> 00:48:13.886 A:middle
And, always account for the

00:48:13.886 --> 00:48:14.656 A:middle
worst case.

00:48:15.146 --> 00:48:16.196 A:middle
That's the best approach you can

00:48:16.196 --> 00:48:17.736 A:middle
take, even if it goes fast, does

00:48:17.736 --> 00:48:19.266 A:middle
good, but assume that it's going

00:48:19.266 --> 00:48:20.336 A:middle
to take a while.

00:48:21.516 --> 00:48:23.236 A:middle
If implemented properly, this

00:48:23.236 --> 00:48:24.976 A:middle
could look like this.

00:48:34.046 --> 00:48:35.856 A:middle
Custom preview, custom progress

00:48:35.856 --> 00:48:37.706 A:middle
here, so your user is not

00:48:37.706 --> 00:48:37.966 A:middle
blocked.

00:48:39.936 --> 00:48:41.566 A:middle
Finally, let's talk about how to

00:48:41.566 --> 00:48:43.556 A:middle
improve your in-app experience

00:48:43.596 --> 00:48:45.056 A:middle
by adding drag and drop.

00:48:45.366 --> 00:48:46.216 A:middle
Drag and drop is something you

00:48:46.216 --> 00:48:48.946 A:middle
can use, to use between apps,

00:48:49.026 --> 00:48:50.496 A:middle
but you can also use it to

00:48:50.496 --> 00:48:51.426 A:middle
enhance your own app.

00:48:52.216 --> 00:48:53.886 A:middle
There's a few nice things we

00:48:53.886 --> 00:48:55.736 A:middle
added to accommodate that.

00:48:55.876 --> 00:48:57.476 A:middle
First is localDragSession on

00:48:57.476 --> 00:48:58.466 A:middle
UIDropSession.

00:48:58.786 --> 00:49:00.086 A:middle
This gives you access to the

00:49:00.086 --> 00:49:01.176 A:middle
drag session, as I mentioned

00:49:01.176 --> 00:49:01.876 A:middle
before.

00:49:02.866 --> 00:49:04.536 A:middle
You can access any kind of data

00:49:04.536 --> 00:49:05.276 A:middle
in the drag session.

00:49:05.576 --> 00:49:07.856 A:middle
The items again, any stages that

00:49:07.856 --> 00:49:08.956 A:middle
are, is available.

00:49:09.756 --> 00:49:11.736 A:middle
It only works for in-drag apps.

00:49:11.876 --> 00:49:13.006 A:middle
If you're dragging outside your

00:49:13.006 --> 00:49:14.296 A:middle
app, the drop session will not

00:49:14.296 --> 00:49:16.076 A:middle
have corresponding local drag

00:49:18.216 --> 00:49:18.396 A:middle
session.

00:49:18.556 --> 00:49:19.806 A:middle
Additionally, as Robb showed

00:49:19.806 --> 00:49:21.256 A:middle
before, there's localObject on

00:49:21.256 --> 00:49:22.036 A:middle
UIDragItem.

00:49:23.326 --> 00:49:25.646 A:middle
It's a very good container for

00:49:25.646 --> 00:49:26.446 A:middle
local data.

00:49:26.756 --> 00:49:28.556 A:middle
You can use it to have states,

00:49:28.786 --> 00:49:30.286 A:middle
set some states in

00:49:30.286 --> 00:49:32.456 A:middle
itemsForBeginning session, and

00:49:32.596 --> 00:49:34.056 A:middle
use that state to generate a

00:49:34.056 --> 00:49:35.306 A:middle
lift preview, for example.

00:49:35.756 --> 00:49:37.316 A:middle
Or, you can use it to transfer

00:49:37.316 --> 00:49:38.826 A:middle
data from the drag site to the

00:49:38.826 --> 00:49:39.316 A:middle
drop site.

00:49:39.796 --> 00:49:41.396 A:middle
That's much easier than building

00:49:41.396 --> 00:49:43.276 A:middle
itemProviders that will transfer

00:49:43.276 --> 00:49:44.586 A:middle
your data outside your app.

00:49:45.196 --> 00:49:46.506 A:middle
If you do allow the drag to go

00:49:46.506 --> 00:49:47.716 A:middle
outside your app, you still have

00:49:47.746 --> 00:49:48.646 A:middle
to do that, of course.

00:49:49.176 --> 00:49:51.296 A:middle
And finally, there's

00:49:51.296 --> 00:49:52.956 A:middle
localContext for UIDragSession

00:49:53.286 --> 00:49:55.646 A:middle
which allows you to keep states

00:49:55.696 --> 00:49:57.046 A:middle
for that drag session and the

00:49:57.046 --> 00:49:58.526 A:middle
drop session, of course,

00:49:59.586 --> 00:50:01.276 A:middle
locally, without resorting to

00:50:01.276 --> 00:50:04.086 A:middle
app global states, and it makes

00:50:04.116 --> 00:50:05.396 A:middle
things a bit easier for you.

00:50:08.496 --> 00:50:10.276 A:middle
How do you keep a drag inside

00:50:10.276 --> 00:50:10.576 A:middle
your app?

00:50:11.016 --> 00:50:12.266 A:middle
There's a method you have to

00:50:12.266 --> 00:50:14.316 A:middle
implement on the dragInteraction

00:50:14.316 --> 00:50:15.176 A:middle
delegate called

00:50:15.176 --> 00:50:16.216 A:middle
sessionIsRestrictedTo

00:50:16.216 --> 00:50:17.296 A:middle
DraggingApplication.

00:50:17.736 --> 00:50:19.466 A:middle
If you return true here, then

00:50:19.466 --> 00:50:20.826 A:middle
the drag won't be able to leave

00:50:20.826 --> 00:50:21.176 A:middle
your app.

00:50:21.346 --> 00:50:23.076 A:middle
The user will still be able to

00:50:23.466 --> 00:50:24.526 A:middle
drag outside your app, of

00:50:24.526 --> 00:50:26.336 A:middle
course, but any of the drop

00:50:26.336 --> 00:50:28.116 A:middle
sessions outside your app will

00:50:28.116 --> 00:50:30.006 A:middle
not see the drag.

00:50:30.286 --> 00:50:32.396 A:middle
So, visually, it will look the

00:50:32.396 --> 00:50:33.886 A:middle
same, but nothing will be able

00:50:33.886 --> 00:50:35.546 A:middle
to accept it, only inside your

00:50:35.546 --> 00:50:35.756 A:middle
app.

00:50:35.896 --> 00:50:38.076 A:middle
You can also inspect this on the

00:50:38.076 --> 00:50:39.326 A:middle
drag and the drop session, if

00:50:39.326 --> 00:50:40.356 A:middle
you want to.

00:50:42.716 --> 00:50:45.196 A:middle
One last thing, local drag and

00:50:45.346 --> 00:50:46.866 A:middle
drop for iPhone, this is

00:50:46.866 --> 00:50:47.896 A:middle
disabled by default.

00:50:48.486 --> 00:50:50.206 A:middle
On iPad, it's enabled by

00:50:50.206 --> 00:50:50.616 A:middle
default.

00:50:51.216 --> 00:50:53.496 A:middle
This is because you want your

00:50:53.496 --> 00:50:56.066 A:middle
apps to behave according to size

00:50:56.066 --> 00:50:57.586 A:middle
class so that if you have a side

00:50:57.586 --> 00:50:59.136 A:middle
app, that works, too, but still,

00:50:59.136 --> 00:51:00.346 A:middle
on the iPad, you can drag out

00:51:00.526 --> 00:51:02.546 A:middle
into another app, but an app of

00:51:02.696 --> 00:51:04.396 A:middle
the same size will not work on

00:51:04.486 --> 00:51:04.886 A:middle
iPhone.

00:51:05.396 --> 00:51:06.756 A:middle
So, if you do go on to enable

00:51:06.756 --> 00:51:08.006 A:middle
drag and drop inside your app

00:51:08.006 --> 00:51:09.686 A:middle
also on the phone, you have to

00:51:09.686 --> 00:51:11.786 A:middle
enable it by setting isEnabled

00:51:12.216 --> 00:51:14.176 A:middle
on the drag interaction to true.

00:51:14.356 --> 00:51:16.276 A:middle
That will enable the

00:51:16.276 --> 00:51:17.666 A:middle
interaction, even on the phone.

00:51:17.666 --> 00:51:21.446 A:middle
I'm going to hand it over to

00:51:21.446 --> 00:51:22.676 A:middle
Wenson for a final demo.

00:51:24.516 --> 00:51:28.056 A:middle
[ Applause ]

00:51:28.556 --> 00:51:29.396 A:middle
&gt;&gt; Thanks again, Tom.

00:51:29.776 --> 00:51:30.866 A:middle
So now, we're going to put

00:51:30.866 --> 00:51:31.676 A:middle
together everything we've

00:51:31.676 --> 00:51:33.346 A:middle
learned so far to implement our

00:51:33.346 --> 00:51:34.796 A:middle
own custom progress UI.

00:51:34.796 --> 00:51:36.706 A:middle
Let's just jump right into the

00:51:36.706 --> 00:51:37.036 A:middle
code.

00:51:37.276 --> 00:51:38.556 A:middle
So, we're going back and

00:51:38.556 --> 00:51:40.046 A:middle
revisiting Droppable Image Grid

00:51:40.046 --> 00:51:40.686 A:middle
View Controller.

00:51:41.266 --> 00:51:42.226 A:middle
Now, here's the function that we

00:51:42.226 --> 00:51:43.656 A:middle
implemented earlier for

00:51:43.656 --> 00:51:44.676 A:middle
performDrop.

00:51:44.676 --> 00:51:46.616 A:middle
We're just going to add a few

00:51:46.616 --> 00:51:47.166 A:middle
lines here.

00:51:48.286 --> 00:51:49.746 A:middle
It's going to look something

00:51:50.106 --> 00:51:53.546 A:middle
like this.

00:51:53.686 --> 00:51:54.906 A:middle
First of all, we're going to set

00:51:54.906 --> 00:51:57.216 A:middle
the progressIndicatorStyle to

00:51:57.216 --> 00:51:57.536 A:middle
none.

00:51:57.736 --> 00:51:59.046 A:middle
This is going to instruct UIKit

00:51:59.356 --> 00:52:00.526 A:middle
to not show the app modal

00:52:00.526 --> 00:52:01.036 A:middle
dialog.

00:52:01.516 --> 00:52:03.506 A:middle
Next, we're going to remember a

00:52:03.506 --> 00:52:05.486 A:middle
little bit of state for the drag

00:52:05.486 --> 00:52:06.566 A:middle
item that is being dropped.

00:52:06.706 --> 00:52:08.596 A:middle
Now, the important thing here is

00:52:08.596 --> 00:52:09.566 A:middle
that we're going to remember the

00:52:09.666 --> 00:52:11.656 A:middle
view that we are inserting into

00:52:11.656 --> 00:52:13.006 A:middle
the view hierarchy of the grid,

00:52:13.246 --> 00:52:14.796 A:middle
as well as this progress that's

00:52:14.796 --> 00:52:16.546 A:middle
returned when we load object on

00:52:16.546 --> 00:52:17.176 A:middle
the item provider.

00:52:17.496 --> 00:52:19.156 A:middle
This is going to come in handy

00:52:19.256 --> 00:52:20.566 A:middle
right now when we implement

00:52:20.716 --> 00:52:21.566 A:middle
previewForDropping.

00:52:22.936 --> 00:52:24.296 A:middle
So, the first thing we do here

00:52:24.606 --> 00:52:25.486 A:middle
is we're going to read some

00:52:25.486 --> 00:52:27.566 A:middle
state out of our item states

00:52:27.566 --> 00:52:28.076 A:middle
dictionary.

00:52:28.226 --> 00:52:29.406 A:middle
This is going to describe

00:52:29.746 --> 00:52:31.606 A:middle
information about the item that

00:52:31.606 --> 00:52:32.516 A:middle
is being dropped.

00:52:33.056 --> 00:52:34.386 A:middle
Namely, it will allow us to

00:52:34.386 --> 00:52:35.636 A:middle
create a new progress spinner

00:52:35.636 --> 00:52:35.816 A:middle
view.

00:52:36.306 --> 00:52:37.396 A:middle
This is a custom view that just

00:52:37.396 --> 00:52:39.826 A:middle
knows how to represent a spinner

00:52:40.686 --> 00:52:42.026 A:middle
indicating the progress of a

00:52:42.026 --> 00:52:42.316 A:middle
load.

00:52:43.536 --> 00:52:44.366 A:middle
So, we'll create this custom

00:52:44.366 --> 00:52:44.986 A:middle
view right here.

00:52:45.246 --> 00:52:46.316 A:middle
The rest is very similar to what

00:52:46.316 --> 00:52:46.996 A:middle
you've seen before.

00:52:46.996 --> 00:52:48.166 A:middle
We'll create a target, create a

00:52:48.166 --> 00:52:49.816 A:middle
drag preview using that target

00:52:50.556 --> 00:52:51.456 A:middle
and parameters.

00:52:52.726 --> 00:52:53.706 A:middle
So, consider this.

00:52:54.346 --> 00:52:55.766 A:middle
What happens if the image

00:52:55.766 --> 00:52:57.036 A:middle
actually loads really fast?

00:52:57.176 --> 00:52:59.536 A:middle
What will happen is, we'll show

00:52:59.536 --> 00:53:00.596 A:middle
something at their destination

00:53:01.066 --> 00:53:02.196 A:middle
while the drop is still

00:53:02.196 --> 00:53:03.626 A:middle
animating, so we'll see this

00:53:03.626 --> 00:53:04.626 A:middle
drop preview flying to the

00:53:04.626 --> 00:53:06.196 A:middle
destination that already has

00:53:06.196 --> 00:53:07.616 A:middle
content, and the drop preview is

00:53:07.616 --> 00:53:08.876 A:middle
going to show this spinny

00:53:09.106 --> 00:53:09.846 A:middle
loading progress.

00:53:09.846 --> 00:53:10.516 A:middle
It's going to look kind of

00:53:10.516 --> 00:53:10.826 A:middle
weird.

00:53:11.426 --> 00:53:12.846 A:middle
So, this will handle that edge

00:53:12.846 --> 00:53:13.916 A:middle
case right here.

00:53:14.236 --> 00:53:15.506 A:middle
What we're going to do is set

00:53:15.506 --> 00:53:16.886 A:middle
the alpha of our destination

00:53:16.886 --> 00:53:17.806 A:middle
view to zero, so we're going to

00:53:17.806 --> 00:53:19.096 A:middle
hide whatever we show at our

00:53:19.096 --> 00:53:20.996 A:middle
destination while the drop is

00:53:20.996 --> 00:53:21.656 A:middle
taking place.

00:53:22.316 --> 00:53:23.286 A:middle
Now, when the drop is finished

00:53:23.286 --> 00:53:24.296 A:middle
animating, we're going to set

00:53:24.296 --> 00:53:25.206 A:middle
the alpha back to one, and

00:53:25.206 --> 00:53:26.506 A:middle
what's going to happen is that

00:53:26.506 --> 00:53:27.286 A:middle
the drop preview at the

00:53:27.286 --> 00:53:29.306 A:middle
destination will fade away and

00:53:29.306 --> 00:53:31.756 A:middle
give way to show the actual

00:53:31.756 --> 00:53:32.986 A:middle
destination view underneath,

00:53:32.986 --> 00:53:34.166 A:middle
because we set the alpha to one

00:53:34.326 --> 00:53:34.736 A:middle
this time.

00:53:35.776 --> 00:53:36.536 A:middle
So, that should take care of

00:53:36.536 --> 00:53:36.756 A:middle
that.

00:53:37.306 --> 00:53:38.386 A:middle
There's one last bit of

00:53:38.386 --> 00:53:39.536 A:middle
bookkeeping we should do, and

00:53:40.306 --> 00:53:41.046 A:middle
that's implementing

00:53:41.046 --> 00:53:41.686 A:middle
concludeDrop.

00:53:41.686 --> 00:53:42.826 A:middle
Now, when the drop is finished,

00:53:42.826 --> 00:53:43.896 A:middle
we've just got to do a little

00:53:43.896 --> 00:53:45.376 A:middle
bit of good bookkeeping and

00:53:45.806 --> 00:53:47.796 A:middle
remove all of the items that are

00:53:47.796 --> 00:53:49.076 A:middle
no longer relevant in our

00:53:49.076 --> 00:53:50.376 A:middle
dictionary of item states.

00:53:51.546 --> 00:53:52.726 A:middle
So, that was a lot of, those

00:53:52.796 --> 00:53:53.776 A:middle
were a lot of changes.

00:53:54.766 --> 00:53:55.606 A:middle
Let's see it in action.

00:54:01.066 --> 00:54:02.216 A:middle
So, I'm going to repeat the same

00:54:02.216 --> 00:54:03.656 A:middle
scenario with Slow Draggable

00:54:03.656 --> 00:54:04.206 A:middle
Image Views.

00:54:04.496 --> 00:54:05.286 A:middle
Watch what happens.

00:54:06.396 --> 00:54:07.866 A:middle
This time, we get a different

00:54:07.896 --> 00:54:09.856 A:middle
progress UI for each drop that

00:54:09.856 --> 00:54:11.236 A:middle
is happening, each item that is

00:54:11.236 --> 00:54:13.026 A:middle
being dropped, and that is

00:54:13.026 --> 00:54:14.976 A:middle
really cool, because it allows

00:54:14.976 --> 00:54:16.586 A:middle
us to do things such as this.

00:54:17.136 --> 00:54:19.476 A:middle
If I repeat the same procedure,

00:54:19.716 --> 00:54:20.816 A:middle
you can see that I'm able to do

00:54:20.816 --> 00:54:21.896 A:middle
things like scroll the Image

00:54:21.896 --> 00:54:23.576 A:middle
view, sorry, the Grid view, and

00:54:23.576 --> 00:54:24.776 A:middle
also interact with different

00:54:24.776 --> 00:54:27.056 A:middle
items while the load is

00:54:27.056 --> 00:54:27.426 A:middle
happening.

00:54:28.516 --> 00:54:32.216 A:middle
[ Applause ]

00:54:32.716 --> 00:54:33.686 A:middle
So, that's some really powerful

00:54:33.686 --> 00:54:35.076 A:middle
stuff, and we've come a long way

00:54:35.076 --> 00:54:35.806 A:middle
in today's session.

00:54:36.306 --> 00:54:37.466 A:middle
I would like to now hand it back

00:54:37.466 --> 00:54:39.036 A:middle
to Tom to give a quick recap.

00:54:40.026 --> 00:54:40.856 A:middle
I'll see you at the labs.

00:54:42.516 --> 00:54:46.716 A:middle
[ Applause ]

00:54:47.216 --> 00:54:48.356 A:middle
&gt;&gt; That looks pretty sweet, if

00:54:48.356 --> 00:54:49.016 A:middle
you ask me.

00:54:50.486 --> 00:54:53.166 A:middle
Anyway, we talked about how drag

00:54:53.166 --> 00:54:54.876 A:middle
and drop can be a very powerful

00:54:54.876 --> 00:54:56.366 A:middle
and user-driven input-output

00:54:56.366 --> 00:54:57.276 A:middle
mechanism for your app.

00:54:58.916 --> 00:55:00.666 A:middle
You can create custom and very

00:55:00.666 --> 00:55:02.126 A:middle
stunning visuals on the lift

00:55:02.126 --> 00:55:04.036 A:middle
side, on the drop side, and when

00:55:04.036 --> 00:55:04.656 A:middle
you're canceling.

00:55:05.096 --> 00:55:06.916 A:middle
You can animate a lot.

00:55:07.586 --> 00:55:08.866 A:middle
We talked about how to handle

00:55:08.866 --> 00:55:10.246 A:middle
asynchronous data, and

00:55:10.626 --> 00:55:11.446 A:middle
slow-running data.

00:55:12.216 --> 00:55:13.356 A:middle
And finally, we mentioned how

00:55:13.356 --> 00:55:14.986 A:middle
you can use drag and drop even

00:55:14.986 --> 00:55:16.106 A:middle
inside your app, to make your

00:55:16.106 --> 00:55:17.006 A:middle
app a lot better.

00:55:19.276 --> 00:55:20.496 A:middle
There is some more information

00:55:20.496 --> 00:55:20.756 A:middle
here.

00:55:20.756 --> 00:55:22.506 A:middle
You can re-watch this video, if

00:55:22.506 --> 00:55:23.146 A:middle
you weren't here.

00:55:23.146 --> 00:55:26.306 A:middle
That would be strange, I guess.

00:55:27.916 --> 00:55:29.166 A:middle
There's a few related sessions,

00:55:29.166 --> 00:55:30.356 A:middle
if you missed Introducing Drag

00:55:30.356 --> 00:55:32.616 A:middle
and Drop yesterday, please watch

00:55:32.616 --> 00:55:34.506 A:middle
the video, it's chock full of

00:55:34.506 --> 00:55:35.136 A:middle
information.

00:55:35.786 --> 00:55:37.296 A:middle
Again, there's two sessions

00:55:37.296 --> 00:55:39.306 A:middle
tomorrow, on Collection view and

00:55:39.306 --> 00:55:40.696 A:middle
Table view, and then data

00:55:40.696 --> 00:55:43.276 A:middle
delivery, back to back, in Hall

00:55:43.276 --> 00:55:43.576 A:middle
2.

00:55:43.936 --> 00:55:44.776 A:middle
Thanks for listening.

00:55:44.956 --> 00:55:46.176 A:middle
Enjoy the rest of your WWDC, and

00:55:46.176 --> 00:55:47.386 A:middle
see you around.

00:55:48.516 --> 00:55:51.940 A:middle
[ Applause ]