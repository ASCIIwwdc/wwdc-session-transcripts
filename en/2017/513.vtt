WEBVTT

00:00:18.136 --> 00:00:19.666 A:middle
&gt;&gt; Hi and welcome to session

00:00:19.666 --> 00:00:20.316 A:middle
513.

00:00:20.916 --> 00:00:22.116 A:middle
In this talk you will learn

00:00:22.116 --> 00:00:24.176 A:middle
about the lower level details of

00:00:24.176 --> 00:00:25.846 A:middle
the new High Efficiency Image

00:00:25.846 --> 00:00:28.626 A:middle
File format or HEIF and the many

00:00:28.626 --> 00:00:30.066 A:middle
advantages that this new file

00:00:30.066 --> 00:00:31.776 A:middle
format standard affords.

00:00:32.606 --> 00:00:34.166 A:middle
My name is Davide Concion and I

00:00:34.166 --> 00:00:35.416 A:middle
manage the Image Compression

00:00:35.416 --> 00:00:37.446 A:middle
Team at Apple.

00:00:38.286 --> 00:00:39.916 A:middle
During the talk, we will briefly

00:00:39.916 --> 00:00:41.786 A:middle
touch upon the current de facto

00:00:41.786 --> 00:00:43.386 A:middle
standard for image compression,

00:00:43.866 --> 00:00:45.096 A:middle
a standard that everybody's

00:00:45.096 --> 00:00:46.396 A:middle
familiar with JPEG.

00:00:46.856 --> 00:00:48.356 A:middle
We will go through the

00:00:48.356 --> 00:00:49.606 A:middle
requirements that Apple

00:00:49.606 --> 00:00:51.486 A:middle
identified as mandatory for a

00:00:51.486 --> 00:00:52.526 A:middle
new image format.

00:00:53.886 --> 00:00:55.786 A:middle
We will explain why we think

00:00:55.786 --> 00:00:57.346 A:middle
HEIF is the answer to those

00:00:57.346 --> 00:00:59.236 A:middle
requirements and we will get to

00:00:59.236 --> 00:01:00.876 A:middle
know some of the flexible tools

00:01:01.306 --> 00:01:02.346 A:middle
that HEIF implements.

00:01:02.716 --> 00:01:05.606 A:middle
We will then present the reasons

00:01:05.606 --> 00:01:08.156 A:middle
why Apple thinks HEVC is the

00:01:08.156 --> 00:01:09.926 A:middle
right codec to be used within

00:01:09.926 --> 00:01:11.066 A:middle
the HEIF file format.

00:01:11.996 --> 00:01:13.826 A:middle
Let's start with JPEG.

00:01:15.036 --> 00:01:17.306 A:middle
JPEG is still the most popular

00:01:17.306 --> 00:01:18.976 A:middle
compression technology for

00:01:18.976 --> 00:01:21.276 A:middle
images only present on the web

00:01:21.826 --> 00:01:23.206 A:middle
and on consumer electronics

00:01:23.206 --> 00:01:25.416 A:middle
devices, such as the DSLR

00:01:25.416 --> 00:01:27.246 A:middle
cameras, point-and-shoot cameras

00:01:27.246 --> 00:01:27.906 A:middle
and cell phones.

00:01:28.706 --> 00:01:30.536 A:middle
Cloud services also use JPEG

00:01:30.536 --> 00:01:31.606 A:middle
because of its universal

00:01:31.606 --> 00:01:32.146 A:middle
support.

00:01:33.686 --> 00:01:34.876 A:middle
JPEG though has several

00:01:34.876 --> 00:01:37.556 A:middle
limitations, among those are the

00:01:37.556 --> 00:01:38.596 A:middle
compression efficiency.

00:01:39.156 --> 00:01:40.346 A:middle
Several new compression

00:01:40.346 --> 00:01:42.246 A:middle
algorithms have been developed

00:01:42.246 --> 00:01:44.266 A:middle
in recent years that can shrink

00:01:44.266 --> 00:01:45.706 A:middle
the file size much more than

00:01:45.706 --> 00:01:47.786 A:middle
JPEG and still maintaining the

00:01:47.786 --> 00:01:49.356 A:middle
same objective and subjective

00:01:49.356 --> 00:01:49.876 A:middle
quality.

00:01:51.046 --> 00:01:53.376 A:middle
Auxiliary images like alpha or

00:01:53.376 --> 00:01:55.596 A:middle
depth are not easily supported.

00:01:56.666 --> 00:01:59.406 A:middle
Also, in recent years new ways

00:01:59.406 --> 00:02:01.346 A:middle
to present and display animated

00:02:01.346 --> 00:02:02.876 A:middle
images have been developed.

00:02:03.386 --> 00:02:05.516 A:middle
Apple Live Photo is one of them.

00:02:06.106 --> 00:02:07.786 A:middle
JPEG unfortunately does not

00:02:07.786 --> 00:02:08.786 A:middle
support animation.

00:02:09.306 --> 00:02:13.156 A:middle
Let's look at history map of

00:02:13.156 --> 00:02:14.706 A:middle
compression standards developed

00:02:14.756 --> 00:02:17.846 A:middle
by JPEG and ITU/MPEG.

00:02:19.206 --> 00:02:20.886 A:middle
JPEG is really starting to show

00:02:20.886 --> 00:02:22.666 A:middle
in its years, especially in

00:02:22.666 --> 00:02:24.116 A:middle
terms of compression efficiency

00:02:24.116 --> 00:02:25.636 A:middle
when compared to recent

00:02:25.636 --> 00:02:26.546 A:middle
advancements.

00:02:27.316 --> 00:02:28.526 A:middle
As you can see in the slide,

00:02:29.046 --> 00:02:30.636 A:middle
JPEG has been finalized as a

00:02:30.636 --> 00:02:33.636 A:middle
standard in 1992, a quarter of a

00:02:33.636 --> 00:02:34.376 A:middle
century ago.

00:02:36.136 --> 00:02:37.526 A:middle
Since then, several new

00:02:37.526 --> 00:02:38.886 A:middle
compression standards have been

00:02:38.886 --> 00:02:39.296 A:middle
developed.

00:02:40.136 --> 00:02:42.396 A:middle
The latest one in the least is

00:02:43.126 --> 00:02:43.256 A:middle
HEVC.

00:02:43.896 --> 00:02:45.816 A:middle
And here is HEIF for comparison

00:02:45.816 --> 00:02:47.216 A:middle
in the timeline, which has been

00:02:47.216 --> 00:02:51.646 A:middle
finalized in 2015.

00:02:51.916 --> 00:02:54.256 A:middle
Apple invested a lot of time to

00:02:54.256 --> 00:02:56.376 A:middle
find a successor for JPEG and

00:02:56.376 --> 00:02:57.926 A:middle
many options were evaluated.

00:02:58.446 --> 00:03:00.106 A:middle
The requirements were extensive.

00:03:00.546 --> 00:03:02.486 A:middle
The new format needs to support

00:03:02.486 --> 00:03:03.956 A:middle
all the features available in

00:03:03.956 --> 00:03:06.176 A:middle
JPEG, but at the same time

00:03:06.176 --> 00:03:07.546 A:middle
provide better performance.

00:03:08.026 --> 00:03:09.656 A:middle
It needs to be friendly to

00:03:09.656 --> 00:03:11.406 A:middle
professional photography tools,

00:03:11.406 --> 00:03:13.176 A:middle
the web and the cloud.

00:03:13.596 --> 00:03:16.196 A:middle
The new format also needs to be

00:03:16.196 --> 00:03:18.796 A:middle
flexible and extensible to cope

00:03:18.796 --> 00:03:19.796 A:middle
with the ever-changing

00:03:19.796 --> 00:03:21.136 A:middle
photography ecosystem.

00:03:21.136 --> 00:03:24.836 A:middle
Here is a list of features Apple

00:03:24.836 --> 00:03:26.846 A:middle
considered paramount.

00:03:27.476 --> 00:03:29.866 A:middle
The compression needs to be

00:03:29.866 --> 00:03:32.176 A:middle
state-of-the-art both on the

00:03:32.176 --> 00:03:32.926 A:middle
[inaudible] front.

00:03:33.136 --> 00:03:35.816 A:middle
It needs to be competitive with

00:03:35.816 --> 00:03:38.486 A:middle
natural images, but also when

00:03:38.486 --> 00:03:41.456 A:middle
compressing text or graphics.

00:03:42.006 --> 00:03:45.286 A:middle
The format needs to be friendly

00:03:45.286 --> 00:03:46.876 A:middle
to hardware accelerated and code

00:03:46.876 --> 00:03:49.386 A:middle
and decode operations on modern

00:03:49.476 --> 00:03:51.896 A:middle
CPUs, GPUs and ESPs.

00:03:52.696 --> 00:03:54.356 A:middle
Performance and power is very

00:03:54.356 --> 00:03:55.356 A:middle
high in the list of

00:03:55.426 --> 00:03:56.166 A:middle
requirements.

00:03:56.776 --> 00:04:00.696 A:middle
It needs to support high depth

00:04:01.006 --> 00:04:03.176 A:middle
and wide color gamut which is

00:04:03.176 --> 00:04:05.376 A:middle
the new frontier for images

00:04:05.376 --> 00:04:07.206 A:middle
captured on consumer devices.

00:04:08.466 --> 00:04:09.746 A:middle
It needs to be able to compress

00:04:09.746 --> 00:04:13.266 A:middle
4:4:4 color sampling and also

00:04:13.266 --> 00:04:16.656 A:middle
describe HDR content, including

00:04:16.656 --> 00:04:19.226 A:middle
HDR metadata, transfer function

00:04:19.436 --> 00:04:20.976 A:middle
and color space definitions.

00:04:22.886 --> 00:04:25.186 A:middle
Auxiliary images for example

00:04:25.186 --> 00:04:28.006 A:middle
alpha or depth need to have a

00:04:28.066 --> 00:04:30.206 A:middle
commonly defined place in image

00:04:30.206 --> 00:04:30.756 A:middle
files.

00:04:31.556 --> 00:04:33.436 A:middle
New editing tools will be able

00:04:33.436 --> 00:04:35.266 A:middle
to utilize auxiliary data for

00:04:35.266 --> 00:04:36.956 A:middle
new presentation and editing

00:04:36.956 --> 00:04:37.796 A:middle
experiences.

00:04:38.396 --> 00:04:41.416 A:middle
In recent years, the new ways to

00:04:41.416 --> 00:04:42.816 A:middle
present and display animated

00:04:42.816 --> 00:04:44.006 A:middle
images have been developed.

00:04:44.406 --> 00:04:46.046 A:middle
Apple iPhoto is one example.

00:04:46.706 --> 00:04:48.556 A:middle
Apple iPhoto includes animated

00:04:48.556 --> 00:04:50.426 A:middle
content together with static

00:04:50.426 --> 00:04:50.926 A:middle
images.

00:04:52.006 --> 00:04:54.046 A:middle
The new common format needs to

00:04:54.046 --> 00:04:55.416 A:middle
store animated information

00:04:55.416 --> 00:04:57.416 A:middle
efficiently, ideally using

00:04:57.416 --> 00:04:58.826 A:middle
Tempra compression techniques

00:04:59.216 --> 00:05:01.246 A:middle
and be able to instruct players

00:05:01.246 --> 00:05:02.946 A:middle
about the presentation intention

00:05:03.136 --> 00:05:05.046 A:middle
for example, a looping sequence.

00:05:06.116 --> 00:05:08.536 A:middle
The new format needs also to

00:05:08.536 --> 00:05:10.126 A:middle
support multiple images in the

00:05:10.126 --> 00:05:10.716 A:middle
same file.

00:05:11.006 --> 00:05:14.046 A:middle
For example, multi-exposure

00:05:14.046 --> 00:05:15.756 A:middle
stacks or stereo images.

00:05:16.556 --> 00:05:18.416 A:middle
This is to aid the development

00:05:18.416 --> 00:05:19.676 A:middle
and implementation of new

00:05:19.676 --> 00:05:20.926 A:middle
computational photography

00:05:20.926 --> 00:05:21.656 A:middle
algorithms.

00:05:23.596 --> 00:05:26.216 A:middle
Multiple representations of the

00:05:26.216 --> 00:05:27.326 A:middle
same image matching the same

00:05:27.326 --> 00:05:29.036 A:middle
file are of great importance.

00:05:29.676 --> 00:05:31.526 A:middle
For example, multi-resolution,

00:05:31.526 --> 00:05:32.876 A:middle
including progressively

00:05:32.876 --> 00:05:35.366 A:middle
increasing level of details or

00:05:35.366 --> 00:05:36.526 A:middle
the ability to represent the

00:05:36.526 --> 00:05:37.936 A:middle
same image encoded with

00:05:37.936 --> 00:05:38.846 A:middle
different codecs.

00:05:40.216 --> 00:05:43.006 A:middle
Tiles are an important tool the

00:05:43.006 --> 00:05:44.636 A:middle
new format must implement.

00:05:45.606 --> 00:05:47.596 A:middle
It allows for scalable operation

00:05:47.596 --> 00:05:49.106 A:middle
on image of any size.

00:05:49.446 --> 00:05:50.916 A:middle
We'll be looking into tiles

00:05:50.916 --> 00:05:52.266 A:middle
later in the talk.

00:05:53.366 --> 00:05:56.836 A:middle
The new format needs support for

00:05:56.836 --> 00:05:59.206 A:middle
rich metadata associated to each

00:05:59.206 --> 00:06:00.086 A:middle
image in the file.

00:06:00.306 --> 00:06:02.896 A:middle
And also support for time meta

00:06:03.186 --> 00:06:04.836 A:middle
for example, a sequence of

00:06:04.886 --> 00:06:05.456 A:middle
images.

00:06:06.596 --> 00:06:08.726 A:middle
There is also desire for a new

00:06:08.726 --> 00:06:09.996 A:middle
format to be able to include

00:06:09.996 --> 00:06:12.026 A:middle
other metadata types for

00:06:12.026 --> 00:06:13.646 A:middle
example, audio or text.

00:06:13.916 --> 00:06:17.336 A:middle
Last but not least, the new

00:06:17.336 --> 00:06:19.016 A:middle
format should be flexible and

00:06:19.016 --> 00:06:20.876 A:middle
extensible enough to provide a

00:06:20.876 --> 00:06:22.686 A:middle
solid foundation for the future.

00:06:23.276 --> 00:06:28.396 A:middle
We believe that HEIF is the

00:06:28.396 --> 00:06:29.856 A:middle
answer to all these

00:06:29.856 --> 00:06:30.586 A:middle
requirements.

00:06:32.406 --> 00:06:33.076 A:middle
What is HEIF?

00:06:33.966 --> 00:06:36.176 A:middle
HEIF stands for High Efficiency

00:06:36.176 --> 00:06:37.446 A:middle
Image File Format.

00:06:39.016 --> 00:06:41.176 A:middle
Version one of the spec became

00:06:41.176 --> 00:06:44.846 A:middle
an ISO standard in June of 2015.

00:06:46.426 --> 00:06:48.286 A:middle
Version two should be released

00:06:48.286 --> 00:06:49.236 A:middle
imminently.

00:06:49.826 --> 00:06:53.366 A:middle
A C reference model for HEIF is

00:06:53.366 --> 00:06:55.236 A:middle
available upon request at this

00:06:55.236 --> 00:06:55.556 A:middle
link.

00:06:56.366 --> 00:06:57.696 A:middle
The reference model is meant to

00:06:57.696 --> 00:06:59.256 A:middle
provide guidance for HEIF

00:06:59.256 --> 00:07:01.546 A:middle
implementation and to understand

00:07:01.546 --> 00:07:02.666 A:middle
the specifications.

00:07:03.196 --> 00:07:05.976 A:middle
As a side note, the open source

00:07:05.976 --> 00:07:10.036 A:middle
project GPAC MP4Box has recently

00:07:10.036 --> 00:07:11.586 A:middle
added basic functionality to

00:07:11.586 --> 00:07:12.676 A:middle
part C files.

00:07:13.256 --> 00:07:17.756 A:middle
The vodaworld long time ago

00:07:17.756 --> 00:07:19.486 A:middle
learned that containers and

00:07:19.486 --> 00:07:22.036 A:middle
codes are different entities and

00:07:22.036 --> 00:07:23.586 A:middle
there are several advantages in

00:07:23.586 --> 00:07:24.826 A:middle
keeping them separated.

00:07:25.436 --> 00:07:27.196 A:middle
But historically in the image

00:07:27.196 --> 00:07:29.426 A:middle
world containers and codecs are

00:07:29.476 --> 00:07:31.246 A:middle
tied together and JPEG is no

00:07:31.246 --> 00:07:31.776 A:middle
exception.

00:07:32.546 --> 00:07:33.686 A:middle
It makes sense to make the

00:07:33.686 --> 00:07:35.686 A:middle
distinction in the image world

00:07:36.266 --> 00:07:37.996 A:middle
to get the flexibility to

00:07:37.996 --> 00:07:38.806 A:middle
[inaudible].

00:07:38.806 --> 00:07:40.996 A:middle
HEIF does exactly that, it

00:07:40.996 --> 00:07:42.836 A:middle
specifies a structural format, a

00:07:42.996 --> 00:07:45.546 A:middle
container for individual images,

00:07:45.546 --> 00:07:47.316 A:middle
as well as image sequences.

00:07:48.706 --> 00:07:50.596 A:middle
It is built on top of the widely

00:07:50.596 --> 00:07:53.996 A:middle
used ISO based media file format

00:07:54.396 --> 00:07:55.676 A:middle
which is based on Apple

00:07:55.676 --> 00:07:56.906 A:middle
QuickTime technologies.

00:07:58.016 --> 00:07:59.736 A:middle
It also uses and enhances

00:07:59.736 --> 00:08:01.616 A:middle
structures defined in the MP4

00:08:01.616 --> 00:08:04.576 A:middle
specification and MPEG-21

00:08:04.576 --> 00:08:05.556 A:middle
specifications.

00:08:06.316 --> 00:08:08.676 A:middle
Sequences for example, bursts or

00:08:08.676 --> 00:08:10.996 A:middle
animations are stored as tracks

00:08:11.176 --> 00:08:13.646 A:middle
or time media MP4 style.

00:08:14.616 --> 00:08:17.446 A:middle
Images coded or derived are

00:08:17.446 --> 00:08:20.026 A:middle
stored as items MPEG-21 style.

00:08:20.556 --> 00:08:23.826 A:middle
Any compression codec can be

00:08:23.826 --> 00:08:25.166 A:middle
included in a HEIF container.

00:08:25.956 --> 00:08:27.116 A:middle
The HEIF specification

00:08:27.146 --> 00:08:31.176 A:middle
explicitly mentions HEVC, H264

00:08:31.366 --> 00:08:32.686 A:middle
and JPEG in terms of file

00:08:32.686 --> 00:08:34.746 A:middle
extensions, [inaudible] types

00:08:35.076 --> 00:08:36.586 A:middle
and decoder configuration.

00:08:38.096 --> 00:08:39.746 A:middle
The basic building block of a

00:08:39.746 --> 00:08:42.126 A:middle
HEIF file like the ISO based

00:08:42.126 --> 00:08:43.786 A:middle
media file format is a data

00:08:43.786 --> 00:08:45.166 A:middle
structure called box.

00:08:45.646 --> 00:08:47.736 A:middle
A box is comprised of a

00:08:47.736 --> 00:08:49.586 A:middle
four-character type, for

00:08:49.586 --> 00:08:51.316 A:middle
instance in the example on the

00:08:51.316 --> 00:08:54.856 A:middle
right the ftyp box or the

00:08:54.856 --> 00:08:57.126 A:middle
metabox or the mdat box.

00:08:58.216 --> 00:08:59.736 A:middle
The size of the box in terms of

00:08:59.736 --> 00:09:01.826 A:middle
bytes and the payload of the

00:09:01.826 --> 00:09:02.206 A:middle
box.

00:09:02.786 --> 00:09:06.246 A:middle
The metabox gives a full

00:09:06.246 --> 00:09:08.306 A:middle
description of what is included

00:09:08.306 --> 00:09:08.806 A:middle
in the file.

00:09:09.036 --> 00:09:11.446 A:middle
The handler type of the metabox

00:09:11.596 --> 00:09:15.036 A:middle
for whomever is familiar with

00:09:15.766 --> 00:09:19.296 A:middle
ISOBMFF specification is of type

00:09:19.806 --> 00:09:22.856 A:middle
PICT indicating to a reader that

00:09:22.856 --> 00:09:25.126 A:middle
this metabox handles images.

00:09:25.736 --> 00:09:29.656 A:middle
Before going into the anatomy of

00:09:29.686 --> 00:09:32.136 A:middle
a HEIF file a note on file

00:09:32.136 --> 00:09:32.826 A:middle
extensions.

00:09:34.156 --> 00:09:36.666 A:middle
The standard defines explicitly

00:09:36.666 --> 00:09:38.376 A:middle
the file extension of a HEIF

00:09:38.376 --> 00:09:40.156 A:middle
file depending on the particular

00:09:40.186 --> 00:09:41.996 A:middle
codec being used to compress

00:09:42.056 --> 00:09:43.666 A:middle
single images or sequences.

00:09:44.326 --> 00:09:45.766 A:middle
The list of extensions can be

00:09:45.766 --> 00:09:47.506 A:middle
found in the table above.

00:09:48.126 --> 00:09:51.716 A:middle
iOS 11 can capture and store

00:09:51.716 --> 00:09:54.136 A:middle
HEIF images using the HEVC

00:09:54.336 --> 00:09:54.746 A:middle
codec.

00:09:55.556 --> 00:09:57.346 A:middle
Therefore, the extension you

00:09:57.346 --> 00:09:59.546 A:middle
will be encountering is .HEIC.

00:10:00.936 --> 00:10:04.926 A:middle
In iOS 11 and macOS 10.13 we

00:10:04.926 --> 00:10:07.296 A:middle
support all three single image

00:10:07.296 --> 00:10:09.596 A:middle
HEIF flavors for decoding and

00:10:09.596 --> 00:10:10.096 A:middle
displaying.

00:10:11.066 --> 00:10:13.976 A:middle
Note also that a HEIF file that

00:10:13.976 --> 00:10:16.506 A:middle
includes sequences will have a

00:10:16.506 --> 00:10:18.496 A:middle
different extension than a HEIF

00:10:18.896 --> 00:10:20.806 A:middle
that contains only single

00:10:20.806 --> 00:10:21.346 A:middle
images.

00:10:21.916 --> 00:10:26.946 A:middle
We will now dive into the HEIF

00:10:26.946 --> 00:10:28.556 A:middle
format and its anatomy.

00:10:29.126 --> 00:10:33.266 A:middle
Let's start with the concept of

00:10:33.436 --> 00:10:33.866 A:middle
item.

00:10:36.056 --> 00:10:38.446 A:middle
Every element in a HEIF file is

00:10:38.446 --> 00:10:39.006 A:middle
an item.

00:10:40.186 --> 00:10:42.616 A:middle
There can be coded items for

00:10:42.616 --> 00:10:45.036 A:middle
instance, HEVC encoded frame or

00:10:45.036 --> 00:10:45.656 A:middle
tiles.

00:10:46.996 --> 00:10:49.286 A:middle
There can be derived items for

00:10:49.286 --> 00:10:51.206 A:middle
instance, an image overlay or an

00:10:51.206 --> 00:10:51.866 A:middle
image grid.

00:10:53.426 --> 00:10:55.556 A:middle
There can be metadata items for

00:10:55.556 --> 00:10:59.016 A:middle
instance, EXIF, XMP or MPEG-7

00:10:59.016 --> 00:10:59.576 A:middle
metadata.

00:11:00.226 --> 00:11:03.056 A:middle
Each item can also come with

00:11:03.056 --> 00:11:06.216 A:middle
several properties associated to

00:11:06.766 --> 00:11:06.846 A:middle
it.

00:11:07.166 --> 00:11:09.266 A:middle
Everything is then connected via

00:11:09.266 --> 00:11:11.806 A:middle
structures that link certain

00:11:11.806 --> 00:11:13.506 A:middle
items to other items or

00:11:13.506 --> 00:11:14.176 A:middle
properties.

00:11:16.816 --> 00:11:19.076 A:middle
Images are items and because

00:11:19.076 --> 00:11:20.846 A:middle
multiple images can be stored in

00:11:20.846 --> 00:11:22.896 A:middle
the same file the HEIF standard

00:11:22.896 --> 00:11:24.786 A:middle
differentiates between them by

00:11:24.786 --> 00:11:26.596 A:middle
assigning certain roles.

00:11:26.596 --> 00:11:30.036 A:middle
Some of the roles specified in

00:11:30.036 --> 00:11:32.816 A:middle
HEIF are listed in the table

00:11:32.816 --> 00:11:33.186 A:middle
above.

00:11:33.986 --> 00:11:36.456 A:middle
The primary recovery image is

00:11:36.486 --> 00:11:38.216 A:middle
the representative image of a

00:11:38.216 --> 00:11:38.576 A:middle
file.

00:11:39.596 --> 00:11:40.986 A:middle
The primary image should be

00:11:40.986 --> 00:11:42.526 A:middle
displayed when no other

00:11:42.526 --> 00:11:44.466 A:middle
information is possible or

00:11:44.466 --> 00:11:45.646 A:middle
decodable by a player.

00:11:46.456 --> 00:11:48.966 A:middle
Only one primary image can be

00:11:48.966 --> 00:11:51.746 A:middle
present in a HEIF file.

00:11:51.956 --> 00:11:53.656 A:middle
Other full-resolution images in

00:11:53.656 --> 00:11:55.866 A:middle
HEIF files are called master

00:11:56.146 --> 00:11:56.686 A:middle
images.

00:11:57.996 --> 00:11:59.636 A:middle
The thumbnail is a small

00:11:59.636 --> 00:12:01.166 A:middle
resolution representation of a

00:12:01.166 --> 00:12:01.856 A:middle
master image.

00:12:02.456 --> 00:12:04.336 A:middle
Multiple thumbnails can be

00:12:04.336 --> 00:12:06.296 A:middle
stored in a HEIF for example,

00:12:06.296 --> 00:12:07.346 A:middle
with different sizes.

00:12:08.276 --> 00:12:10.306 A:middle
It's a very useful feature for

00:12:10.306 --> 00:12:11.976 A:middle
progressive decoding and

00:12:11.976 --> 00:12:13.796 A:middle
displaying very high-resolution

00:12:13.796 --> 00:12:14.296 A:middle
images.

00:12:14.856 --> 00:12:18.106 A:middle
The auxiliary image is an image

00:12:18.106 --> 00:12:20.046 A:middle
that complements a master image.

00:12:20.576 --> 00:12:22.426 A:middle
For example, an alpha plane or a

00:12:22.426 --> 00:12:23.046 A:middle
depth map.

00:12:23.826 --> 00:12:25.906 A:middle
Auxiliary images can assist in

00:12:25.906 --> 00:12:28.086 A:middle
displaying master images, but

00:12:28.086 --> 00:12:29.886 A:middle
are not typically displayed.

00:12:30.396 --> 00:12:32.536 A:middle
A hidden image is an image that

00:12:32.536 --> 00:12:33.676 A:middle
should never be displayed.

00:12:33.866 --> 00:12:36.326 A:middle
It can be present in the file

00:12:36.486 --> 00:12:38.786 A:middle
for example, as an input image

00:12:38.786 --> 00:12:39.976 A:middle
of a derived image.

00:12:40.676 --> 00:12:43.506 A:middle
iOS 11 HEIF implementation uses

00:12:43.506 --> 00:12:45.386 A:middle
extensively hidden images which

00:12:45.386 --> 00:12:46.336 A:middle
are called tiles.

00:12:47.056 --> 00:12:49.316 A:middle
Each tile is used to compose the

00:12:49.316 --> 00:12:51.876 A:middle
final master or canvas image.

00:12:52.486 --> 00:12:55.746 A:middle
Now derived manager is an image

00:12:55.746 --> 00:12:58.456 A:middle
that is rendered by an indicated

00:12:58.456 --> 00:13:01.016 A:middle
operation being performed on

00:13:01.016 --> 00:13:02.166 A:middle
other input images.

00:13:02.416 --> 00:13:04.026 A:middle
For instance, the canvas image

00:13:04.026 --> 00:13:06.056 A:middle
described before is rendered

00:13:06.056 --> 00:13:07.476 A:middle
after stitching together

00:13:07.476 --> 00:13:08.436 A:middle
multiple tiles.

00:13:09.816 --> 00:13:11.496 A:middle
Equivalent images are

00:13:11.646 --> 00:13:13.526 A:middle
alternative images for instance,

00:13:13.526 --> 00:13:15.186 A:middle
encoded with a different codec.

00:13:15.896 --> 00:13:17.456 A:middle
A server could distribute the

00:13:17.456 --> 00:13:19.416 A:middle
same input content to players

00:13:19.416 --> 00:13:20.936 A:middle
that may have different decoding

00:13:20.936 --> 00:13:21.666 A:middle
capabilities.

00:13:22.156 --> 00:13:26.326 A:middle
Once the role has been defined

00:13:26.326 --> 00:13:28.886 A:middle
for each image properties can be

00:13:28.886 --> 00:13:29.946 A:middle
associated to them.

00:13:30.956 --> 00:13:32.016 A:middle
Properties are either

00:13:32.016 --> 00:13:34.016 A:middle
descriptive or transformative.

00:13:34.726 --> 00:13:36.416 A:middle
They can also be essential for

00:13:36.416 --> 00:13:37.836 A:middle
example, the codec

00:13:37.836 --> 00:13:39.536 A:middle
initialization info or

00:13:39.536 --> 00:13:40.316 A:middle
nonessential.

00:13:40.876 --> 00:13:43.246 A:middle
The table above provides a

00:13:43.246 --> 00:13:44.386 A:middle
non-exhaustive list of

00:13:44.386 --> 00:13:46.456 A:middle
descriptive properties for

00:13:46.456 --> 00:13:47.946 A:middle
images inside a HEIF file.

00:13:48.786 --> 00:13:50.026 A:middle
All the usual suspect

00:13:50.026 --> 00:13:51.276 A:middle
information can be found in

00:13:51.276 --> 00:13:53.366 A:middle
there like the image size, the

00:13:53.366 --> 00:13:55.636 A:middle
color information, the type of

00:13:55.636 --> 00:13:57.636 A:middle
auxiliary image which can be

00:13:57.636 --> 00:14:00.046 A:middle
alpha or depth and also the

00:14:00.046 --> 00:14:01.556 A:middle
configuration parameters to

00:14:01.556 --> 00:14:02.726 A:middle
initialize the decoder.

00:14:03.296 --> 00:14:05.926 A:middle
The table above provides a

00:14:05.926 --> 00:14:06.866 A:middle
non-exhaustive list of

00:14:06.866 --> 00:14:08.346 A:middle
transformative properties.

00:14:09.036 --> 00:14:10.546 A:middle
The presence of these properties

00:14:10.816 --> 00:14:11.926 A:middle
instructs a HEIF [inaudible]

00:14:12.176 --> 00:14:15.936 A:middle
that the image needs to go

00:14:15.936 --> 00:14:17.836 A:middle
through extra steps before being

00:14:17.836 --> 00:14:18.346 A:middle
displayed.

00:14:18.956 --> 00:14:20.856 A:middle
For example, the clean aperture

00:14:20.856 --> 00:14:23.116 A:middle
property instructs a HEIF reader

00:14:23.596 --> 00:14:26.916 A:middle
that the crop operation must be

00:14:26.916 --> 00:14:28.936 A:middle
performed before rending the

00:14:28.936 --> 00:14:29.686 A:middle
final image.

00:14:30.256 --> 00:14:34.126 A:middle
All the properties for each

00:14:34.126 --> 00:14:36.436 A:middle
image are grouped together in

00:14:36.436 --> 00:14:38.256 A:middle
the same item property box.

00:14:39.366 --> 00:14:41.686 A:middle
Each image can then be

00:14:41.686 --> 00:14:43.746 A:middle
associated to which property via

00:14:43.746 --> 00:14:45.106 A:middle
the association box.

00:14:45.846 --> 00:14:47.916 A:middle
We will use an example to

00:14:47.916 --> 00:14:49.726 A:middle
describe how the association

00:14:49.726 --> 00:14:50.096 A:middle
works.

00:14:51.526 --> 00:14:53.726 A:middle
The above HEIF container on the

00:14:53.726 --> 00:14:56.266 A:middle
left describes the file with one

00:14:56.326 --> 00:14:58.076 A:middle
main image and one thumbnail.

00:14:58.826 --> 00:15:00.896 A:middle
The main image is comprised of

00:15:00.896 --> 00:15:01.766 A:middle
four tiles.

00:15:02.676 --> 00:15:05.796 A:middle
The item property box or ipco

00:15:05.796 --> 00:15:08.596 A:middle
box contains all the decoder

00:15:08.596 --> 00:15:10.356 A:middle
configuration and the sizes of

00:15:10.356 --> 00:15:12.386 A:middle
the main image, the tiles and

00:15:13.506 --> 00:15:15.276 A:middle
the thumbnails.

00:15:15.276 --> 00:15:18.246 A:middle
Note that the order matters for

00:15:18.246 --> 00:15:18.896 A:middle
this box.

00:15:19.426 --> 00:15:24.166 A:middle
The association box or ipma box

00:15:24.566 --> 00:15:27.286 A:middle
on the right groups properties

00:15:27.386 --> 00:15:29.656 A:middle
nicely based on their position

00:15:29.846 --> 00:15:31.436 A:middle
with the item ID in the file.

00:15:31.996 --> 00:15:33.936 A:middle
As explained before, there is a

00:15:33.936 --> 00:15:35.846 A:middle
total of six items in the file,

00:15:36.026 --> 00:15:38.776 A:middle
one image, four tiles and one

00:15:38.776 --> 00:15:39.216 A:middle
thumbnail.

00:15:41.386 --> 00:15:43.786 A:middle
Items 1 through 4 are the tiles,

00:15:44.256 --> 00:15:46.316 A:middle
these are hidden images with

00:15:46.386 --> 00:15:48.926 A:middle
properties in position one, the

00:15:48.926 --> 00:15:50.536 A:middle
decoder configuration and

00:15:50.536 --> 00:15:53.166 A:middle
position two, the size which is

00:15:53.166 --> 00:15:55.756 A:middle
500 by 500 pixel.

00:15:56.666 --> 00:15:58.436 A:middle
Item five is the main image,

00:15:59.576 --> 00:16:01.256 A:middle
only the size property is

00:16:01.256 --> 00:16:03.656 A:middle
defined since this is this is a

00:16:03.656 --> 00:16:04.636 A:middle
derived image.

00:16:05.396 --> 00:16:07.656 A:middle
The size is 1,000 by 1,000

00:16:07.656 --> 00:16:08.196 A:middle
pixels.

00:16:09.746 --> 00:16:11.616 A:middle
Next, we will briefly talk about

00:16:11.616 --> 00:16:13.276 A:middle
image sequences in HEIF.

00:16:13.886 --> 00:16:17.146 A:middle
When sequences are embedded in a

00:16:17.146 --> 00:16:20.496 A:middle
HEIF file the move box and it's

00:16:20.496 --> 00:16:22.676 A:middle
sub boxes are also present in

00:16:22.676 --> 00:16:23.096 A:middle
the file.

00:16:24.436 --> 00:16:26.366 A:middle
The move boxes fully described

00:16:26.366 --> 00:16:28.976 A:middle
in the ISO MP4 file format

00:16:28.976 --> 00:16:30.996 A:middle
specification from which HEIF

00:16:30.996 --> 00:16:31.566 A:middle
derives.

00:16:32.696 --> 00:16:34.436 A:middle
Each sequence of images or

00:16:34.436 --> 00:16:37.326 A:middle
samples is described via the

00:16:37.326 --> 00:16:39.856 A:middle
trak box where all the timing

00:16:39.856 --> 00:16:41.186 A:middle
information to play back the

00:16:41.186 --> 00:16:42.536 A:middle
track is included.

00:16:43.836 --> 00:16:45.626 A:middle
HEIF specifies a new track

00:16:45.626 --> 00:16:49.336 A:middle
handler for picture called pict.

00:16:50.276 --> 00:16:51.796 A:middle
The key difference is that while

00:16:51.796 --> 00:16:53.366 A:middle
the timing information given for

00:16:53.366 --> 00:16:54.976 A:middle
a video or an audio track is

00:16:54.976 --> 00:16:56.556 A:middle
used to synchronize the playback

00:16:57.446 --> 00:16:59.026 A:middle
the timing information an image

00:16:59.026 --> 00:17:01.116 A:middle
sequence track can represent

00:17:01.116 --> 00:17:02.886 A:middle
either the capture time for

00:17:02.886 --> 00:17:04.786 A:middle
example, a burst or the

00:17:04.786 --> 00:17:06.726 A:middle
suggested display time for

00:17:06.726 --> 00:17:08.666 A:middle
example, to derive a slideshow.

00:17:12.316 --> 00:17:14.376 A:middle
Roles can be used for image

00:17:14.376 --> 00:17:15.336 A:middle
sequences to.

00:17:15.676 --> 00:17:17.456 A:middle
For example, a HEIF file could

00:17:17.456 --> 00:17:19.716 A:middle
embed a track of thumbnails or a

00:17:19.716 --> 00:17:21.216 A:middle
track of auxiliary images

00:17:21.216 --> 00:17:22.666 A:middle
associated with the master

00:17:23.416 --> 00:17:23.546 A:middle
track.

00:17:24.936 --> 00:17:26.316 A:middle
One of the most important HEIF

00:17:26.316 --> 00:17:27.836 A:middle
features is the ability to

00:17:27.836 --> 00:17:29.696 A:middle
control the playback by

00:17:29.696 --> 00:17:31.546 A:middle
signaling in the file the intent

00:17:31.546 --> 00:17:32.286 A:middle
of the creator.

00:17:32.866 --> 00:17:34.266 A:middle
For example, an edit list

00:17:34.266 --> 00:17:36.106 A:middle
enables modifying the playback

00:17:36.106 --> 00:17:39.006 A:middle
order and pace of each sample.

00:17:40.076 --> 00:17:42.616 A:middle
HEIF also allows indicating edit

00:17:42.616 --> 00:17:44.406 A:middle
list repetitions for example,

00:17:44.406 --> 00:17:46.306 A:middle
for looping animations.

00:17:47.346 --> 00:17:49.616 A:middle
The repetition can be indicated

00:17:49.616 --> 00:17:51.296 A:middle
to last for a certain duration

00:17:51.436 --> 00:17:52.496 A:middle
or be infinite.

00:17:53.016 --> 00:17:56.636 A:middle
Given that the ISO tracks can be

00:17:56.636 --> 00:17:59.216 A:middle
used in HEIF files interframe

00:17:59.216 --> 00:18:00.946 A:middle
prediction is also available.

00:18:01.276 --> 00:18:03.476 A:middle
Inter prediction is the ability

00:18:03.476 --> 00:18:06.136 A:middle
to remove coded information by

00:18:06.136 --> 00:18:07.736 A:middle
predicting the content of the

00:18:07.736 --> 00:18:09.596 A:middle
current frame from similar

00:18:09.596 --> 00:18:11.036 A:middle
frames in the past or in the

00:18:11.036 --> 00:18:11.446 A:middle
future.

00:18:12.216 --> 00:18:13.616 A:middle
This gives a tremendous

00:18:13.616 --> 00:18:14.706 A:middle
advantage in terms of

00:18:14.706 --> 00:18:15.286 A:middle
compression.

00:18:16.446 --> 00:18:17.936 A:middle
Inter prediction can also

00:18:18.106 --> 00:18:20.616 A:middle
introduce a delay decode time

00:18:21.146 --> 00:18:22.956 A:middle
because the previous frames must

00:18:22.956 --> 00:18:24.616 A:middle
be decoded first before being

00:18:24.616 --> 00:18:25.616 A:middle
able to decode the current

00:18:25.616 --> 00:18:25.876 A:middle
frame.

00:18:26.996 --> 00:18:28.846 A:middle
HEIF allows inter prediction,

00:18:29.186 --> 00:18:31.586 A:middle
but also includes constraints in

00:18:31.586 --> 00:18:33.146 A:middle
the file to limit frame

00:18:33.146 --> 00:18:34.186 A:middle
interdependencies.

00:18:34.706 --> 00:18:36.156 A:middle
For instance, each predicted

00:18:36.156 --> 00:18:38.326 A:middle
image can be restricted to point

00:18:38.326 --> 00:18:40.206 A:middle
only to unknown predicted image

00:18:40.296 --> 00:18:40.896 A:middle
or inter.

00:18:41.516 --> 00:18:42.946 A:middle
In this case, the time to decode

00:18:42.946 --> 00:18:44.626 A:middle
each frame in a sequence becomes

00:18:44.686 --> 00:18:45.546 A:middle
deterministic.

00:18:45.916 --> 00:18:51.116 A:middle
Last but not least, a HEIF image

00:18:51.116 --> 00:18:55.756 A:middle
can be subdivided into tiles.

00:18:55.936 --> 00:18:57.916 A:middle
Tiles are rectangular regions

00:18:57.916 --> 00:18:58.836 A:middle
within an image.

00:18:59.176 --> 00:19:00.776 A:middle
They are completely independent

00:19:00.776 --> 00:19:03.116 A:middle
items in a HEIF file and they

00:19:03.116 --> 00:19:04.986 A:middle
can be of different or same

00:19:04.986 --> 00:19:05.436 A:middle
size.

00:19:06.066 --> 00:19:07.916 A:middle
If their size is different a

00:19:07.916 --> 00:19:09.496 A:middle
relative location property

00:19:09.496 --> 00:19:10.936 A:middle
describes their position in the

00:19:10.936 --> 00:19:11.626 A:middle
final image.

00:19:12.276 --> 00:19:14.046 A:middle
If their size is the same the

00:19:14.046 --> 00:19:14.956 A:middle
final image is described as a

00:19:15.226 --> 00:19:20.546 A:middle
grid. Several reasons why tiles

00:19:20.546 --> 00:19:22.356 A:middle
make HEIF extremely flexible.

00:19:23.216 --> 00:19:25.796 A:middle
A player can exploit parallelism

00:19:25.796 --> 00:19:26.556 A:middle
and decode time.

00:19:26.776 --> 00:19:28.466 A:middle
For example, each tile can be

00:19:28.466 --> 00:19:30.136 A:middle
separately and independently

00:19:30.136 --> 00:19:30.646 A:middle
decoded.

00:19:31.836 --> 00:19:33.476 A:middle
Tiles can be used to reduce

00:19:33.476 --> 00:19:35.586 A:middle
memory consumption when resizing

00:19:35.586 --> 00:19:37.816 A:middle
an image rather than decoding

00:19:37.816 --> 00:19:39.226 A:middle
the whole much and then apply a

00:19:39.226 --> 00:19:41.416 A:middle
rescale operation each tile can

00:19:41.416 --> 00:19:42.886 A:middle
be independently decoded and

00:19:42.886 --> 00:19:44.926 A:middle
rescaled and then placed in a

00:19:44.926 --> 00:19:46.566 A:middle
smaller buffer for rendering.

00:19:47.476 --> 00:19:49.196 A:middle
Cropping becomes very fast

00:19:49.846 --> 00:19:51.096 A:middle
because a player does not need

00:19:51.096 --> 00:19:52.256 A:middle
to decode the whole image to

00:19:52.256 --> 00:19:53.776 A:middle
extract a certain region.

00:19:54.506 --> 00:19:56.046 A:middle
This property is extremely

00:19:56.046 --> 00:19:57.666 A:middle
useful for zooming operation.

00:19:58.506 --> 00:20:00.746 A:middle
For instance, a gigapixel image

00:20:00.746 --> 00:20:02.776 A:middle
could be decoded and displayed

00:20:02.966 --> 00:20:05.056 A:middle
and zoomed in with ease without

00:20:05.056 --> 00:20:06.306 A:middle
the need to decode the whole

00:20:06.306 --> 00:20:08.146 A:middle
image into a multi gigabit

00:20:08.206 --> 00:20:08.636 A:middle
buffer.

00:20:08.636 --> 00:20:13.386 A:middle
Of note, the tiles can be used

00:20:13.386 --> 00:20:16.666 A:middle
also as an encoding tool.

00:20:17.126 --> 00:20:18.966 A:middle
A smart encoder can make

00:20:18.966 --> 00:20:20.676 A:middle
different decision based on the

00:20:20.676 --> 00:20:24.136 A:middle
content of each tile.

00:20:24.706 --> 00:20:26.616 A:middle
Apple HEIF implementation uses

00:20:26.646 --> 00:20:27.836 A:middle
tiles extensively.

00:20:28.466 --> 00:20:30.606 A:middle
Note though that the HEVC

00:20:30.606 --> 00:20:32.476 A:middle
specification also supports

00:20:32.666 --> 00:20:34.786 A:middle
subdividing a frame into tiles

00:20:34.786 --> 00:20:36.186 A:middle
as a parallelization tool.

00:20:36.526 --> 00:20:39.376 A:middle
Apple does not use tiles in HEVC

00:20:39.376 --> 00:20:41.786 A:middle
parlance, but rather each tile

00:20:41.786 --> 00:20:44.636 A:middle
is a whole HEVC frame, we call

00:20:44.636 --> 00:20:45.926 A:middle
them system tiles.

00:20:48.526 --> 00:20:51.236 A:middle
Next, we will talk about HEVC,

00:20:51.296 --> 00:20:53.386 A:middle
the codec Apple has chosen to

00:20:53.386 --> 00:20:54.756 A:middle
compress HEIF photos.

00:20:55.386 --> 00:20:59.306 A:middle
Two of the major reasons for

00:20:59.306 --> 00:21:00.196 A:middle
selecting HEVC.

00:21:00.196 --> 00:21:03.546 A:middle
First, HEVC is the latest

00:21:03.546 --> 00:21:05.796 A:middle
technology in the compression

00:21:05.796 --> 00:21:06.576 A:middle
standard world.

00:21:07.246 --> 00:21:09.526 A:middle
With HEVC we see an average of

00:21:09.616 --> 00:21:11.646 A:middle
2X compression compared to JPEG

00:21:12.166 --> 00:21:13.476 A:middle
containing the same visual

00:21:13.476 --> 00:21:13.956 A:middle
quality.

00:21:14.396 --> 00:21:17.866 A:middle
Second, HEVC hardware support is

00:21:17.866 --> 00:21:19.726 A:middle
becoming available in most CPUs

00:21:19.726 --> 00:21:20.386 A:middle
and GPUs.

00:21:20.966 --> 00:21:22.536 A:middle
For instance, HEVC hardware

00:21:22.536 --> 00:21:24.296 A:middle
support is available from the

00:21:24.296 --> 00:21:26.096 A:middle
sixth generation Intel core

00:21:26.096 --> 00:21:26.806 A:middle
processors.

00:21:27.176 --> 00:21:29.056 A:middle
This means except means

00:21:29.056 --> 00:21:30.886 A:middle
exceptional performance without

00:21:30.886 --> 00:21:33.126 A:middle
sacrificing battery life.

00:21:35.576 --> 00:21:37.606 A:middle
Several inter coding tools have

00:21:37.606 --> 00:21:39.596 A:middle
been added to the standard that

00:21:39.596 --> 00:21:42.276 A:middle
allow HEVC to outperform JPEG.

00:21:42.276 --> 00:21:44.446 A:middle
In the next few slides we will

00:21:44.446 --> 00:21:45.216 A:middle
mention some.

00:21:45.736 --> 00:21:47.426 A:middle
You will notice that the common

00:21:47.546 --> 00:21:49.636 A:middle
theme here is flexibility.

00:21:50.116 --> 00:21:53.316 A:middle
First, the block size.

00:21:54.296 --> 00:21:57.276 A:middle
JPEG divides each image into a

00:21:57.276 --> 00:21:59.816 A:middle
grid of blocks of 8 by 8 pixels.

00:22:00.246 --> 00:22:02.986 A:middle
These blocks are then described

00:22:03.406 --> 00:22:05.846 A:middle
transformed and quantized.

00:22:06.416 --> 00:22:09.476 A:middle
HEVC has the flexibility of

00:22:09.476 --> 00:22:11.356 A:middle
being able to divide an image in

00:22:11.356 --> 00:22:14.526 A:middle
blocks that are 64 by 64 pixels

00:22:14.986 --> 00:22:16.596 A:middle
down to 4 by 4 pixels.

00:22:17.296 --> 00:22:19.116 A:middle
The transform size is also

00:22:19.116 --> 00:22:20.536 A:middle
flexible within the block.

00:22:21.446 --> 00:22:22.996 A:middle
A new optional discrete

00:22:23.076 --> 00:22:24.616 A:middle
[inaudible] transform has been

00:22:24.616 --> 00:22:26.596 A:middle
added to the standard and three

00:22:26.596 --> 00:22:28.196 A:middle
possible scanning orders are

00:22:28.196 --> 00:22:29.706 A:middle
available to group coded

00:22:29.706 --> 00:22:30.406 A:middle
coefficients.

00:22:30.806 --> 00:22:33.646 A:middle
Next, the block prediction.

00:22:34.846 --> 00:22:36.656 A:middle
JPEG allows the top left corner

00:22:36.656 --> 00:22:38.816 A:middle
coefficient also called the DC

00:22:38.816 --> 00:22:40.826 A:middle
component or the constant

00:22:40.826 --> 00:22:43.266 A:middle
component of an 8 by 8 block to

00:22:43.266 --> 00:22:44.736 A:middle
be predicted from the block on

00:22:44.736 --> 00:22:45.126 A:middle
the left.

00:22:45.996 --> 00:22:48.996 A:middle
HEVC adds the flexibility to

00:22:48.996 --> 00:22:51.216 A:middle
predict every pixel value within

00:22:51.216 --> 00:22:51.646 A:middle
a block.

00:22:51.906 --> 00:22:54.556 A:middle
Up to 35 angular predictions are

00:22:54.556 --> 00:22:55.016 A:middle
available.

00:22:55.686 --> 00:22:57.286 A:middle
Being able to remove redundant

00:22:57.286 --> 00:22:59.106 A:middle
information in a block by

00:22:59.106 --> 00:23:01.016 A:middle
exploiting similar information

00:23:01.016 --> 00:23:02.486 A:middle
available in neighboring blocks

00:23:02.886 --> 00:23:04.146 A:middle
is one of the most efficient

00:23:04.146 --> 00:23:05.946 A:middle
tools inside HEVC.

00:23:07.506 --> 00:23:08.296 A:middle
Entropy coding.

00:23:09.416 --> 00:23:11.646 A:middle
JPEG uses Huffman coding as the

00:23:11.646 --> 00:23:13.456 A:middle
engine for statistical encoding.

00:23:13.516 --> 00:23:15.816 A:middle
The idea is to assign variable

00:23:15.816 --> 00:23:17.736 A:middle
length codes to input

00:23:17.736 --> 00:23:18.416 A:middle
coefficient.

00:23:19.596 --> 00:23:21.256 A:middle
With shorter length codes

00:23:21.256 --> 00:23:23.156 A:middle
assigned to coefficients with

00:23:23.156 --> 00:23:24.016 A:middle
higher frequency.

00:23:25.136 --> 00:23:28.006 A:middle
HEVC on the other hand, employs

00:23:28.006 --> 00:23:30.266 A:middle
an arithmetic coder called CABAC

00:23:30.776 --> 00:23:32.506 A:middle
which stands for Context

00:23:32.506 --> 00:23:34.226 A:middle
Adaptive Binary Arithmetic

00:23:34.296 --> 00:23:34.666 A:middle
Coding.

00:23:34.776 --> 00:23:37.766 A:middle
CABAC is notable for providing

00:23:37.766 --> 00:23:39.856 A:middle
much better compression than

00:23:39.856 --> 00:23:41.576 A:middle
most other entropy encoding

00:23:41.576 --> 00:23:42.306 A:middle
algorithms.

00:23:44.656 --> 00:23:45.656 A:middle
Quantization.

00:23:46.566 --> 00:23:48.906 A:middle
Quantization is a [inaudible] C

00:23:48.906 --> 00:23:50.836 A:middle
compression technique achieved

00:23:50.836 --> 00:23:52.656 A:middle
by compressing a range of values

00:23:53.146 --> 00:23:54.696 A:middle
to a single quantum value.

00:23:55.586 --> 00:23:57.856 A:middle
JPEG utilizes global

00:23:57.856 --> 00:24:00.336 A:middle
quantization matrixes for each 8

00:24:00.376 --> 00:24:01.236 A:middle
by 8 block.

00:24:02.376 --> 00:24:04.716 A:middle
HEVC on top of the quantization

00:24:04.716 --> 00:24:07.456 A:middle
matrix adds the flexibility of

00:24:07.456 --> 00:24:08.546 A:middle
assigning a different

00:24:08.546 --> 00:24:10.136 A:middle
quantization parameter for each

00:24:10.136 --> 00:24:10.446 A:middle
block.

00:24:11.186 --> 00:24:12.896 A:middle
This allows smart encoding

00:24:12.896 --> 00:24:15.276 A:middle
algorithms to compress more

00:24:15.356 --> 00:24:17.176 A:middle
areas of an image while the

00:24:17.176 --> 00:24:18.816 A:middle
human visual system is less

00:24:18.816 --> 00:24:22.056 A:middle
susceptible to detect artifacts.

00:24:22.546 --> 00:24:23.796 A:middle
For instance, high-frequency

00:24:23.796 --> 00:24:24.376 A:middle
content.

00:24:24.926 --> 00:24:28.276 A:middle
Next is the blocking, a tool

00:24:28.276 --> 00:24:30.256 A:middle
that is available only in HEVC.

00:24:31.396 --> 00:24:33.806 A:middle
Blocking artifacts are visible

00:24:33.806 --> 00:24:35.996 A:middle
discontinuities occurring at

00:24:35.996 --> 00:24:36.816 A:middle
block boundaries.

00:24:36.816 --> 00:24:39.856 A:middle
The HEVC deblocking filter is a

00:24:39.856 --> 00:24:42.396 A:middle
filter applied to the pixels

00:24:42.626 --> 00:24:44.446 A:middle
around the block edges to

00:24:44.446 --> 00:24:46.296 A:middle
smoothen the transition and get

00:24:46.296 --> 00:24:49.886 A:middle
more pleasing visual results.

00:24:49.886 --> 00:24:51.636 A:middle
SAO which stands for Sample

00:24:51.636 --> 00:24:53.946 A:middle
Adaptive Offset is an extra

00:24:54.106 --> 00:24:56.956 A:middle
filtering step available in HEVC

00:24:57.386 --> 00:24:59.526 A:middle
that is applied to the output of

00:24:59.526 --> 00:25:01.776 A:middle
the deblocking filter to further

00:25:01.776 --> 00:25:02.856 A:middle
improve the quality.

00:25:03.456 --> 00:25:05.166 A:middle
It's a local filter that can

00:25:05.166 --> 00:25:07.996 A:middle
attenuate bringing artifacts or

00:25:08.046 --> 00:25:09.826 A:middle
changes in sample intensity of

00:25:09.826 --> 00:25:11.906 A:middle
some areas of a picture for a

00:25:11.906 --> 00:25:13.086 A:middle
better visual quality.

00:25:14.376 --> 00:25:17.306 A:middle
Both these techniques allow for

00:25:17.486 --> 00:25:19.716 A:middle
more pleasing images, especially

00:25:19.716 --> 00:25:20.836 A:middle
when the compression is very

00:25:20.836 --> 00:25:21.096 A:middle
high.

00:25:22.346 --> 00:25:23.586 A:middle
We have gone through several

00:25:23.586 --> 00:25:25.096 A:middle
HEIF and HEVC features and

00:25:25.096 --> 00:25:27.146 A:middle
tools, I wanted to take a second

00:25:27.146 --> 00:25:29.076 A:middle
to mention a few characteristics

00:25:29.076 --> 00:25:32.436 A:middle
of HEIF files captured on iOS

00:25:32.436 --> 00:25:32.866 A:middle
11.

00:25:33.846 --> 00:25:36.746 A:middle
First, the extension for HEIF

00:25:36.746 --> 00:25:39.446 A:middle
images captured with iOS 11 will

00:25:39.446 --> 00:25:42.316 A:middle
be .HEIC because of the HEVC

00:25:42.316 --> 00:25:43.196 A:middle
codec.

00:25:44.726 --> 00:25:46.936 A:middle
The HEVC profile utilized to

00:25:46.936 --> 00:25:48.766 A:middle
compress images is the main

00:25:48.766 --> 00:25:49.626 A:middle
still profile.

00:25:50.396 --> 00:25:53.206 A:middle
Also, we use HEVC monochrome

00:25:53.206 --> 00:25:54.906 A:middle
profile for depth data.

00:25:57.016 --> 00:25:59.556 A:middle
Images are encoded using tiles

00:25:59.556 --> 00:26:03.686 A:middle
that are 512 by 512 pixels.

00:26:03.756 --> 00:26:05.606 A:middle
They are positioned in a grid

00:26:05.606 --> 00:26:07.026 A:middle
fashion to cover the whole

00:26:07.026 --> 00:26:07.416 A:middle
image.

00:26:08.356 --> 00:26:11.986 A:middle
The thumbnail is a 320 by 240

00:26:11.986 --> 00:26:14.196 A:middle
image HEVC encoded.

00:26:15.326 --> 00:26:17.106 A:middle
It is four times the size of a

00:26:17.106 --> 00:26:20.016 A:middle
common 160 by 120 JPEG thumbnail

00:26:20.096 --> 00:26:22.116 A:middle
and this is to help showing

00:26:22.116 --> 00:26:24.106 A:middle
better thumbnail quality when

00:26:24.106 --> 00:26:26.276 A:middle
images are displayed on modern

00:26:26.276 --> 00:26:28.306 A:middle
screens with high pixel density.

00:26:29.526 --> 00:26:31.726 A:middle
EXIF metadata is part of the

00:26:31.726 --> 00:26:34.156 A:middle
HEIF file like JPEG for backward

00:26:34.156 --> 00:26:34.896 A:middle
compatibility.

00:26:36.586 --> 00:26:39.076 A:middle
Depth data is stored as an

00:26:39.076 --> 00:26:42.636 A:middle
auxiliary image and the metadata

00:26:42.786 --> 00:26:44.676 A:middle
pertinent to depth is stored as

00:26:44.676 --> 00:26:47.686 A:middle
XMP payload associated with the

00:26:47.686 --> 00:26:48.376 A:middle
depth image.

00:26:48.936 --> 00:26:52.886 A:middle
Last, a note about file

00:26:52.886 --> 00:26:53.516 A:middle
creation.

00:26:54.586 --> 00:26:56.626 A:middle
The HEIF standard does not

00:26:56.626 --> 00:26:59.166 A:middle
mandate any order for the boxes

00:26:59.166 --> 00:27:00.776 A:middle
a reader could find at the top

00:27:00.776 --> 00:27:02.776 A:middle
level of a HEIF file, but we

00:27:02.776 --> 00:27:04.496 A:middle
found that ordering them in a

00:27:04.496 --> 00:27:06.556 A:middle
certain way greatly helps

00:27:06.556 --> 00:27:08.056 A:middle
parsers and decoders.

00:27:08.856 --> 00:27:10.206 A:middle
For example, having the

00:27:10.206 --> 00:27:11.846 A:middle
thumbnail early in the file

00:27:11.946 --> 00:27:13.806 A:middle
would allow parsing and display

00:27:14.206 --> 00:27:15.876 A:middle
huge amount of HEIF images

00:27:15.906 --> 00:27:17.726 A:middle
without the need to parse the

00:27:17.816 --> 00:27:18.526 A:middle
whole file.

00:27:19.566 --> 00:27:21.286 A:middle
For [inaudible] transmission or

00:27:21.286 --> 00:27:23.876 A:middle
web application once the metabox

00:27:23.876 --> 00:27:26.096 A:middle
is received all the information

00:27:26.096 --> 00:27:27.626 A:middle
for the file is available and

00:27:27.836 --> 00:27:29.556 A:middle
therefore readers can start

00:27:29.556 --> 00:27:31.716 A:middle
configuring the decoding and

00:27:31.716 --> 00:27:34.676 A:middle
display pipelines before having

00:27:34.676 --> 00:27:35.976 A:middle
received the whole coded data.

00:27:42.046 --> 00:27:43.916 A:middle
Let's summarize what we have

00:27:44.176 --> 00:27:45.626 A:middle
learned today.

00:27:45.806 --> 00:27:47.496 A:middle
The photography world needs a

00:27:47.496 --> 00:27:49.316 A:middle
better image file format to

00:27:49.316 --> 00:27:51.186 A:middle
replace the rather old JPEG.

00:27:51.186 --> 00:27:55.056 A:middle
We looked at the extensive list

00:27:55.056 --> 00:27:58.006 A:middle
of requirements that Apple

00:27:58.006 --> 00:27:59.996 A:middle
considered paramount when

00:27:59.996 --> 00:28:01.126 A:middle
searching for a JPEG

00:28:01.126 --> 00:28:01.856 A:middle
replacement.

00:28:02.456 --> 00:28:06.126 A:middle
We believe HEIF is the answer

00:28:06.126 --> 00:28:07.506 A:middle
for all the requirements.

00:28:08.136 --> 00:28:10.516 A:middle
Its flexibility allows to handle

00:28:10.796 --> 00:28:12.156 A:middle
with ease and elegance the

00:28:12.156 --> 00:28:15.426 A:middle
advancements available in iOS 11

00:28:15.876 --> 00:28:17.786 A:middle
and its extensibility also

00:28:17.786 --> 00:28:19.086 A:middle
allows HEIF to be a solid

00:28:19.086 --> 00:28:20.426 A:middle
foundation for the future.

00:28:21.036 --> 00:28:23.906 A:middle
We then analyzed the various

00:28:23.906 --> 00:28:25.796 A:middle
features available in the HEIF

00:28:25.796 --> 00:28:26.426 A:middle
standard.

00:28:27.446 --> 00:28:29.256 A:middle
And finally, we looked at the

00:28:29.256 --> 00:28:31.576 A:middle
HEVC tools that make it the best

00:28:31.576 --> 00:28:33.536 A:middle
choice, both in terms of

00:28:33.536 --> 00:28:35.346 A:middle
compression efficiency and

00:28:35.346 --> 00:28:37.206 A:middle
friendliness toward hardware

00:28:37.206 --> 00:28:39.506 A:middle
architecture for performance and

00:28:39.506 --> 00:28:39.826 A:middle
power.

00:28:40.236 --> 00:28:43.816 A:middle
For more information, please

00:28:43.816 --> 00:28:46.216 A:middle
visit the URL for the High

00:28:46.216 --> 00:28:48.276 A:middle
Efficiency Image File format

00:28:48.576 --> 00:28:49.906 A:middle
session 513.

00:28:51.326 --> 00:28:52.716 A:middle
And if you're still at the show

00:28:53.166 --> 00:28:55.216 A:middle
we invite you to visit the two

00:28:55.216 --> 00:28:58.256 A:middle
related sessions about HEIF and

00:28:58.876 --> 00:28:59.286 A:middle
HEVC.

00:28:59.936 --> 00:29:01.736 A:middle
Thank you for watching the talk

00:29:01.736 --> 00:29:04.496 A:middle
and enjoy the rest of WWDC 2017.