WEBVTT

00:00:07.516 --> 00:00:16.500 A:middle
[ Cheering ]

00:00:23.516 --> 00:00:26.126 A:middle
[ Applause ]

00:00:26.626 --> 00:00:27.116 A:middle
&gt;&gt; Good morning.

00:00:31.036 --> 00:00:32.375 A:middle
My name is Bruce Nilo.

00:00:32.375 --> 00:00:33.326 A:middle
I'm one of the engineering

00:00:33.326 --> 00:00:34.676 A:middle
managers for UIKit.

00:00:35.936 --> 00:00:36.906 A:middle
And today we're going to be

00:00:36.906 --> 00:00:38.676 A:middle
discussing a new feature you

00:00:38.676 --> 00:00:39.696 A:middle
might've heard that we're

00:00:39.696 --> 00:00:41.226 A:middle
introducing in iOS 11.

00:00:42.256 --> 00:00:43.886 A:middle
This is going to be the first of

00:00:44.006 --> 00:00:45.806 A:middle
four dedicated sessions where

00:00:45.806 --> 00:00:47.406 A:middle
we're going to explore the

00:00:47.406 --> 00:00:49.516 A:middle
breadth and depth of the new

00:00:49.516 --> 00:00:51.236 A:middle
drag-and-drop APIs.

00:00:51.786 --> 00:00:53.296 A:middle
We're going to show you just how

00:00:53.296 --> 00:00:56.586 A:middle
easy it is using these APIs to

00:00:56.586 --> 00:00:58.926 A:middle
add drag and drop to your app in

00:00:58.926 --> 00:01:01.926 A:middle
ways that your users are going

00:00:58.926 --> 00:01:01.926 A:middle
ways that your users are going

00:01:01.926 --> 00:01:02.416 A:middle
to love.

00:01:04.226 --> 00:01:05.876 A:middle
We're going to start by talking

00:01:06.066 --> 00:01:08.666 A:middle
about the goals and concepts

00:01:08.996 --> 00:01:10.176 A:middle
behind drag and drop.

00:01:11.046 --> 00:01:13.366 A:middle
We're going to go deep into some

00:01:13.366 --> 00:01:15.036 A:middle
of the core APIs that you're

00:01:15.036 --> 00:01:18.056 A:middle
going to need to add drag and

00:01:18.056 --> 00:01:19.246 A:middle
drop to your apps.

00:01:19.356 --> 00:01:20.556 A:middle
And then, we're going to follow

00:01:20.556 --> 00:01:21.906 A:middle
that up with a demonstration

00:01:21.906 --> 00:01:23.366 A:middle
showing just how easy they are

00:01:23.366 --> 00:01:23.906 A:middle
to use.

00:01:24.566 --> 00:01:25.946 A:middle
Finally, we're going to wrap up

00:01:25.946 --> 00:01:28.026 A:middle
with some suggestions about what

00:01:28.026 --> 00:01:30.006 A:middle
you can do to quickly adopt this

00:01:30.006 --> 00:01:31.066 A:middle
great, new feature.

00:01:34.196 --> 00:01:35.806 A:middle
So what is drag and drop?

00:01:37.016 --> 00:01:38.366 A:middle
I think we all know that it's a

00:01:38.366 --> 00:01:40.026 A:middle
way to graphically move data

00:01:40.356 --> 00:01:43.546 A:middle
from one application to another

00:01:43.546 --> 00:01:45.146 A:middle
or even within the same

00:01:45.146 --> 00:01:45.896 A:middle
application.

00:01:49.516 --> 00:01:51.426 A:middle
When we set about designing drag

00:01:51.426 --> 00:01:53.156 A:middle
and drop and bringing it to iOS,

00:01:53.156 --> 00:01:54.346 A:middle
we had some goals in mind.

00:01:55.226 --> 00:01:57.426 A:middle
We wanted it to be fast and

00:01:57.426 --> 00:01:58.236 A:middle
responsive.

00:01:59.086 --> 00:02:00.266 A:middle
In particular, we didn't want to

00:01:59.086 --> 00:02:00.266 A:middle
In particular, we didn't want to

00:02:00.266 --> 00:02:01.876 A:middle
move or copy data that we didn't

00:02:01.876 --> 00:02:02.426 A:middle
need to.

00:02:02.426 --> 00:02:04.146 A:middle
Therefore, we leveraged the

00:02:04.146 --> 00:02:05.626 A:middle
capabilities of the new file

00:02:05.626 --> 00:02:08.326 A:middle
system on iOS 11 and we made our

00:02:08.326 --> 00:02:10.506 A:middle
APIs, we structured our APIs in

00:02:10.506 --> 00:02:12.076 A:middle
a way such that we never move

00:02:12.076 --> 00:02:13.756 A:middle
data unless it's requested.

00:02:13.756 --> 00:02:16.426 A:middle
And moreover, they're designed

00:02:16.426 --> 00:02:17.886 A:middle
to deliver the data to your

00:02:17.886 --> 00:02:19.816 A:middle
applications asynchronously so

00:02:19.816 --> 00:02:21.496 A:middle
your apps never block the run

00:02:21.496 --> 00:02:23.156 A:middle
loop and prevent your users from

00:02:23.156 --> 00:02:25.016 A:middle
doing what they want to do.

00:02:25.616 --> 00:02:27.136 A:middle
We also wanted drag and drop to

00:02:27.136 --> 00:02:28.856 A:middle
be secure in a way that the

00:02:28.856 --> 00:02:30.116 A:middle
pasteboard isn't.

00:02:30.686 --> 00:02:32.456 A:middle
In particular, data is only

00:02:32.456 --> 00:02:34.216 A:middle
visible to the destination

00:02:34.216 --> 00:02:36.816 A:middle
application that your user

00:02:36.816 --> 00:02:38.376 A:middle
indicates they want to drop

00:02:38.376 --> 00:02:38.756 A:middle
over.

00:02:39.386 --> 00:02:40.736 A:middle
But that's not all.

00:02:40.976 --> 00:02:41.936 A:middle
We wanted our source

00:02:41.936 --> 00:02:44.136 A:middle
applications to have the ability

00:02:44.136 --> 00:02:46.326 A:middle
to restrict access to their data

00:02:46.656 --> 00:02:50.506 A:middle
to just their app, to other apps

00:02:50.506 --> 00:02:52.046 A:middle
developed by the same team, and

00:02:52.706 --> 00:02:54.886 A:middle
then, of course, to all apps on

00:02:54.886 --> 00:02:55.456 A:middle
the system.

00:02:56.086 --> 00:02:58.936 A:middle
And when we GM, we will also be

00:02:58.936 --> 00:03:01.036 A:middle
supporting manage configuration

00:02:58.936 --> 00:03:01.036 A:middle
supporting manage configuration

00:03:01.096 --> 00:03:02.966 A:middle
for our enterprise customers.

00:03:05.196 --> 00:03:08.466 A:middle
So finally, the most important

00:03:08.466 --> 00:03:10.166 A:middle
thing was that it be a great

00:03:10.166 --> 00:03:11.656 A:middle
Multi-Touch experience.

00:03:12.436 --> 00:03:13.686 A:middle
And to do this, it was clear we

00:03:13.686 --> 00:03:14.906 A:middle
were going to have to reimagine

00:03:14.906 --> 00:03:16.736 A:middle
drag and drop in many important

00:03:16.736 --> 00:03:17.286 A:middle
ways.

00:03:18.036 --> 00:03:20.196 A:middle
So let's take a look at some

00:03:20.196 --> 00:03:22.126 A:middle
aspect of that experience we had

00:03:22.126 --> 00:03:22.616 A:middle
in mind.

00:03:23.746 --> 00:03:25.216 A:middle
And before I start this video,

00:03:25.216 --> 00:03:26.626 A:middle
let me give you some context.

00:03:26.706 --> 00:03:28.456 A:middle
I recently took some pictures of

00:03:28.456 --> 00:03:29.796 A:middle
the Empire State Building in New

00:03:29.796 --> 00:03:31.576 A:middle
York, and in this video, you're

00:03:31.576 --> 00:03:32.986 A:middle
going to see me use a bunch of

00:03:32.986 --> 00:03:35.106 A:middle
different fingers to compose an

00:03:35.106 --> 00:03:36.226 A:middle
email to some friends.

00:03:37.356 --> 00:03:39.186 A:middle
We're going to start off in

00:03:39.186 --> 00:03:40.756 A:middle
Spotlight, where we're going to

00:03:40.756 --> 00:03:43.146 A:middle
drag a link, swipe up the doc,

00:03:43.916 --> 00:03:45.786 A:middle
hover over the Safari icon to

00:03:45.786 --> 00:03:47.526 A:middle
launch it, and drop that link

00:03:47.526 --> 00:03:49.416 A:middle
onto the + button to open up a

00:03:49.416 --> 00:03:50.516 A:middle
tab in Safari.

00:03:51.266 --> 00:03:52.776 A:middle
We're then going to select some

00:03:52.776 --> 00:03:55.716 A:middle
text, long press, and begin to

00:03:55.716 --> 00:03:57.206 A:middle
move and realize that wasn't

00:03:57.206 --> 00:03:59.106 A:middle
really the text I wanted at all.

00:03:59.686 --> 00:04:01.486 A:middle
I can easily cancel the drag,

00:03:59.686 --> 00:04:01.486 A:middle
I can easily cancel the drag,

00:04:01.486 --> 00:04:03.146 A:middle
select the text that I care

00:04:03.146 --> 00:04:03.516 A:middle
about.

00:04:03.516 --> 00:04:05.836 A:middle
And again, the gesture is a long

00:04:05.836 --> 00:04:07.766 A:middle
press where the text lifts up,

00:04:07.766 --> 00:04:10.036 A:middle
followed by a move, at which

00:04:10.066 --> 00:04:11.026 A:middle
point I can interact with the

00:04:11.026 --> 00:04:11.856 A:middle
rest of the system.

00:04:11.946 --> 00:04:13.936 A:middle
I can open the Split so that I

00:04:13.936 --> 00:04:15.456 A:middle
can better see the photos that I

00:04:15.456 --> 00:04:17.966 A:middle
care about, and now I can select

00:04:18.266 --> 00:04:19.586 A:middle
a number of the Empire State

00:04:19.586 --> 00:04:20.486 A:middle
Building photos.

00:04:20.736 --> 00:04:21.935 A:middle
You'll notice that I'm still

00:04:21.935 --> 00:04:23.556 A:middle
dragging the text with my other

00:04:23.556 --> 00:04:26.286 A:middle
hand and I'm adding photos to my

00:04:26.286 --> 00:04:26.556 A:middle
right.

00:04:26.556 --> 00:04:28.176 A:middle
I'm going to hand that

00:04:28.176 --> 00:04:29.796 A:middle
collection of photos to my left

00:04:29.796 --> 00:04:31.596 A:middle
hand so I can better swipe mail

00:04:32.146 --> 00:04:34.656 A:middle
into the right split.

00:04:34.656 --> 00:04:36.296 A:middle
I'm going to pass it over to my

00:04:36.296 --> 00:04:37.766 A:middle
right hand again so that I can

00:04:37.766 --> 00:04:39.326 A:middle
drop them into the mail Compose

00:04:39.326 --> 00:04:39.586 A:middle
sheet.

00:04:40.516 --> 00:04:46.306 A:middle
[ Applause ]

00:04:46.806 --> 00:04:47.936 A:middle
So that's what we mean by a

00:04:48.036 --> 00:04:49.586 A:middle
great Multi-Touch experience.

00:04:49.586 --> 00:04:50.686 A:middle
What did we see?

00:04:50.686 --> 00:04:52.516 A:middle
The interface is alive.

00:04:52.936 --> 00:04:55.036 A:middle
It's deeply integrated with all

00:04:55.036 --> 00:04:55.426 A:middle
of iOS.

00:04:55.646 --> 00:04:57.276 A:middle
You can drag out of Spotlight.

00:04:57.526 --> 00:04:58.886 A:middle
You can bring up the doc.

00:04:59.056 --> 00:05:00.486 A:middle
Indeed, the system UI is

00:04:59.056 --> 00:05:00.486 A:middle
Indeed, the system UI is

00:05:00.486 --> 00:05:02.266 A:middle
implemented on top of drag and

00:05:02.266 --> 00:05:02.816 A:middle
drop.

00:05:03.286 --> 00:05:05.176 A:middle
There's great visual feedback,

00:05:05.176 --> 00:05:06.766 A:middle
fantastic animations.

00:05:06.766 --> 00:05:08.566 A:middle
You can hover over controls to

00:05:08.566 --> 00:05:09.356 A:middle
navigate.

00:05:09.586 --> 00:05:11.536 A:middle
You can add items to an existing

00:05:11.536 --> 00:05:12.406 A:middle
drag session.

00:05:12.676 --> 00:05:14.966 A:middle
You can transfer drags between

00:05:14.966 --> 00:05:16.206 A:middle
your fingers, between your

00:05:16.206 --> 00:05:17.946 A:middle
hands, and you can even start

00:05:17.946 --> 00:05:20.566 A:middle
multiple drag sessions at once.

00:05:21.736 --> 00:05:24.456 A:middle
So before we get into some of

00:05:24.456 --> 00:05:26.896 A:middle
the concepts, let me talk about

00:05:26.896 --> 00:05:28.616 A:middle
drag and drop on the iPhone.

00:05:29.416 --> 00:05:31.106 A:middle
We initially envisioned drag and

00:05:31.106 --> 00:05:32.956 A:middle
drop as an iPad productivity

00:05:33.006 --> 00:05:33.366 A:middle
feature.

00:05:33.966 --> 00:05:36.106 A:middle
However, all of the APIs are in

00:05:36.176 --> 00:05:37.866 A:middle
fact available on the phone.

00:05:38.046 --> 00:05:39.856 A:middle
There is one restriction, and

00:05:39.856 --> 00:05:41.486 A:middle
that is on the phone, we only

00:05:41.486 --> 00:05:45.846 A:middle
allow drags to execute within

00:05:45.846 --> 00:05:46.916 A:middle
the same application.

00:05:48.516 --> 00:05:51.506 A:middle
So let's turn our attention to

00:05:51.506 --> 00:05:52.956 A:middle
some of the key concepts.

00:05:53.186 --> 00:05:54.236 A:middle
These are going to provide a

00:05:54.236 --> 00:05:56.636 A:middle
great basis for understanding

00:05:56.636 --> 00:05:57.666 A:middle
the APIs that follow.

00:06:04.236 --> 00:06:05.696 A:middle
So we're going to talk about the

00:06:05.696 --> 00:06:07.356 A:middle
phases of a drag session.

00:06:08.006 --> 00:06:09.786 A:middle
We break a drag session into

00:06:09.786 --> 00:06:12.076 A:middle
four of them, in which both the

00:06:12.076 --> 00:06:13.396 A:middle
source application and the

00:06:13.396 --> 00:06:15.086 A:middle
destination application have a

00:06:15.086 --> 00:06:15.866 A:middle
part to play.

00:06:16.416 --> 00:06:17.946 A:middle
And it all begins with the lift.

00:06:18.386 --> 00:06:19.406 A:middle
In the lift, that's when you

00:06:19.406 --> 00:06:21.256 A:middle
long press, and the view lifts

00:06:21.256 --> 00:06:22.296 A:middle
out of the screen.

00:06:22.506 --> 00:06:24.026 A:middle
When, and then, when the user

00:06:24.026 --> 00:06:25.826 A:middle
begins to drag, you enter the

00:06:25.826 --> 00:06:26.966 A:middle
drag phase.

00:06:27.386 --> 00:06:28.826 A:middle
In the drag phase, you can

00:06:28.826 --> 00:06:30.496 A:middle
update the previews of what the

00:06:30.496 --> 00:06:31.686 A:middle
things look like as you're

00:06:31.686 --> 00:06:32.316 A:middle
dragging.

00:06:32.316 --> 00:06:33.836 A:middle
You can tap to add.

00:06:33.836 --> 00:06:35.256 A:middle
You can hover to navigate.

00:06:36.346 --> 00:06:37.356 A:middle
When the user lifts their

00:06:37.356 --> 00:06:38.716 A:middle
finger, one of two things can

00:06:38.716 --> 00:06:38.906 A:middle
happen.

00:06:39.056 --> 00:06:42.926 A:middle
Either the drag is canceled or

00:06:42.926 --> 00:06:44.616 A:middle
you actually want those items

00:06:44.616 --> 00:06:46.756 A:middle
dropped where the user lifted

00:06:46.756 --> 00:06:47.306 A:middle
their finger.

00:06:47.396 --> 00:06:49.616 A:middle
We provide great targeting APIs

00:06:49.616 --> 00:06:50.756 A:middle
to make those set-down

00:06:50.756 --> 00:06:52.426 A:middle
animations look fantastic.

00:06:53.696 --> 00:06:55.096 A:middle
And finally, we enter the data

00:06:55.096 --> 00:06:56.746 A:middle
transfer phase, and that's the

00:06:56.746 --> 00:06:57.956 A:middle
phase where the destination

00:06:57.956 --> 00:06:59.706 A:middle
application requests the data

00:06:59.706 --> 00:07:00.586 A:middle
from the source.

00:06:59.706 --> 00:07:00.586 A:middle
from the source.

00:07:01.146 --> 00:07:05.286 A:middle
So before we go into the

00:07:05.286 --> 00:07:07.006 A:middle
building blocks of the drag

00:07:07.006 --> 00:07:08.966 A:middle
APIs, let me take a moment to

00:07:08.966 --> 00:07:10.626 A:middle
say that it's all built around a

00:07:10.626 --> 00:07:12.356 A:middle
concept called an interaction.

00:07:12.356 --> 00:07:14.366 A:middle
An interaction is a really

00:07:14.366 --> 00:07:15.356 A:middle
simple concept.

00:07:15.646 --> 00:07:17.746 A:middle
It's basically takes an input

00:07:17.746 --> 00:07:19.626 A:middle
and generates an effect of some

00:07:19.666 --> 00:07:20.086 A:middle
sort.

00:07:20.876 --> 00:07:22.796 A:middle
The drag-and-drop APIs are built

00:07:22.796 --> 00:07:24.466 A:middle
around this for a couple of

00:07:24.466 --> 00:07:25.086 A:middle
reasons.

00:07:25.276 --> 00:07:27.136 A:middle
One is, is it lets us to provide

00:07:27.136 --> 00:07:28.926 A:middle
a consistent look and feel for

00:07:28.926 --> 00:07:30.706 A:middle
drag and drop across the system.

00:07:31.346 --> 00:07:33.096 A:middle
But most importantly, it makes

00:07:33.096 --> 00:07:35.676 A:middle
it really easy for you to add

00:07:36.476 --> 00:07:38.016 A:middle
drag and drop to your app

00:07:38.016 --> 00:07:39.826 A:middle
without having to rearrange your

00:07:39.826 --> 00:07:41.526 A:middle
code or your view hierarchies.

00:07:41.996 --> 00:07:43.256 A:middle
So let me introduce the drag

00:07:43.256 --> 00:07:43.936 A:middle
interaction.

00:07:44.556 --> 00:07:46.116 A:middle
It's attached to a view, and as

00:07:46.116 --> 00:07:47.516 A:middle
you heard in the, perhaps in the

00:07:47.516 --> 00:07:49.776 A:middle
previous talk, it's very similar

00:07:49.776 --> 00:07:51.156 A:middle
to a gesture recognizer.

00:07:51.156 --> 00:07:52.596 A:middle
If you've ever used them, the

00:07:52.596 --> 00:07:54.196 A:middle
pattern is the same.

00:07:54.596 --> 00:07:55.956 A:middle
You create an object with a

00:07:55.956 --> 00:07:57.746 A:middle
delegate, and it is via the

00:07:57.746 --> 00:07:59.826 A:middle
delegate that you interact with

00:07:59.826 --> 00:08:00.346 A:middle
the system.

00:07:59.826 --> 00:08:00.346 A:middle
the system.

00:08:01.026 --> 00:08:03.166 A:middle
So for example, the delegate is

00:08:03.166 --> 00:08:05.426 A:middle
asked to return the drag items

00:08:05.536 --> 00:08:07.266 A:middle
just before the lift animation

00:08:07.316 --> 00:08:07.896 A:middle
happens.

00:08:09.136 --> 00:08:11.326 A:middle
This is the one required method

00:08:11.566 --> 00:08:13.466 A:middle
for a drag interaction delegate.

00:08:14.506 --> 00:08:16.606 A:middle
The delegate is free to return

00:08:16.606 --> 00:08:18.516 A:middle
no items whatsoever -- in which

00:08:18.516 --> 00:08:20.246 A:middle
case, the gesture will fail and

00:08:20.246 --> 00:08:22.046 A:middle
the touch will be processed as

00:08:22.046 --> 00:08:22.416 A:middle
normal.

00:08:22.996 --> 00:08:25.436 A:middle
OK, so what's a drag item?

00:08:25.986 --> 00:08:28.166 A:middle
Well, the drag item is really

00:08:28.166 --> 00:08:29.336 A:middle
the whole point of it all.

00:08:29.556 --> 00:08:31.426 A:middle
It's the model object that's

00:08:31.426 --> 00:08:33.385 A:middle
associated with the view that

00:08:33.385 --> 00:08:35.736 A:middle
the interaction is attached to.

00:08:40.616 --> 00:08:43.206 A:middle
Drag item for drag and drop

00:08:43.206 --> 00:08:45.566 A:middle
embodies both what the items

00:08:45.566 --> 00:08:46.846 A:middle
look like as they're moved

00:08:46.846 --> 00:08:49.006 A:middle
around the screen, the preview,

00:08:49.256 --> 00:08:50.756 A:middle
as well as a promise by the

00:08:50.756 --> 00:08:52.936 A:middle
source application to deliver

00:08:52.936 --> 00:08:55.016 A:middle
the data to the destination when

00:08:55.016 --> 00:08:55.946 A:middle
it requests.

00:08:57.586 --> 00:08:59.536 A:middle
We call these promises item

00:08:59.536 --> 00:09:00.526 A:middle
providers, and they're

00:08:59.536 --> 00:09:00.526 A:middle
providers, and they're

00:09:00.526 --> 00:09:02.806 A:middle
implemented in iOS 11 by some

00:09:02.806 --> 00:09:05.046 A:middle
new additions to NSItemProvider.

00:09:05.626 --> 00:09:09.346 A:middle
So how do you enable a drop?

00:09:10.816 --> 00:09:11.606 A:middle
It's easy.

00:09:12.836 --> 00:09:14.236 A:middle
The first way to do it is to

00:09:14.236 --> 00:09:17.216 A:middle
take advantage of a new property

00:09:17.216 --> 00:09:19.156 A:middle
that we added to UIResponder

00:09:19.156 --> 00:09:20.616 A:middle
called paste configuration.

00:09:21.526 --> 00:09:23.126 A:middle
What is a paste configuration?

00:09:23.706 --> 00:09:25.126 A:middle
Basically, it's a declarative

00:09:25.126 --> 00:09:27.806 A:middle
way of specifying the types that

00:09:27.806 --> 00:09:29.606 A:middle
your responder can either accept

00:09:29.606 --> 00:09:31.536 A:middle
as a paste or as a drop.

00:09:32.426 --> 00:09:33.566 A:middle
To take advantage of paste

00:09:33.566 --> 00:09:34.766 A:middle
configurations, you need to

00:09:34.766 --> 00:09:36.056 A:middle
implement a new method called

00:09:36.126 --> 00:09:37.466 A:middle
paste itemProviders.

00:09:37.566 --> 00:09:39.366 A:middle
And if you do, you will be able

00:09:39.366 --> 00:09:41.426 A:middle
to support paste and drag and,

00:09:41.426 --> 00:09:43.516 A:middle
and drop out of the box.

00:09:43.986 --> 00:09:47.666 A:middle
However, for more sophisticated

00:09:47.666 --> 00:09:48.996 A:middle
drop interactions, you're going

00:09:48.996 --> 00:09:49.926 A:middle
to want to add a drop

00:09:49.926 --> 00:09:51.176 A:middle
interaction to your view.

00:09:51.856 --> 00:09:53.506 A:middle
And you do so in a very similar

00:09:53.506 --> 00:09:54.616 A:middle
way that you add a drag

00:09:54.616 --> 00:09:55.316 A:middle
interaction.

00:09:56.086 --> 00:09:57.746 A:middle
And when you do, when you are

00:09:57.746 --> 00:09:59.586 A:middle
dragging over a view that has

00:09:59.586 --> 00:10:00.956 A:middle
such an interaction, we're going

00:09:59.586 --> 00:10:00.956 A:middle
such an interaction, we're going

00:10:00.956 --> 00:10:02.866 A:middle
to query that delegate to tell

00:10:02.866 --> 00:10:03.986 A:middle
us whether or not it's

00:10:03.986 --> 00:10:05.296 A:middle
interested in the items that are

00:10:05.296 --> 00:10:06.676 A:middle
actually being dragged over it.

00:10:06.676 --> 00:10:09.136 A:middle
And it will reply with and

00:10:09.136 --> 00:10:11.656 A:middle
intention or a proposal, as we

00:10:11.656 --> 00:10:12.126 A:middle
call it.

00:10:13.476 --> 00:10:16.016 A:middle
Now, on touch up, the delegate

00:10:16.016 --> 00:10:17.436 A:middle
might've said, not interested.

00:10:17.436 --> 00:10:18.986 A:middle
In which case, the drag will be

00:10:18.986 --> 00:10:20.916 A:middle
canceled and all those previews

00:10:20.916 --> 00:10:22.166 A:middle
are going to animate back to

00:10:22.166 --> 00:10:23.656 A:middle
whence they came and, or off the

00:10:23.656 --> 00:10:25.286 A:middle
screen to indicate that it was

00:10:25.286 --> 00:10:25.796 A:middle
canceled.

00:10:26.526 --> 00:10:27.816 A:middle
However, the more interesting

00:10:27.816 --> 00:10:30.106 A:middle
bit is when the delegate says,

00:10:30.106 --> 00:10:31.656 A:middle
yeah, I'm interested in those

00:10:31.656 --> 00:10:32.276 A:middle
items.

00:10:32.536 --> 00:10:33.726 A:middle
In which case, the system is

00:10:33.726 --> 00:10:36.506 A:middle
going to say, perform the drop.

00:10:37.086 --> 00:10:38.736 A:middle
And it is within the scope of

00:10:38.736 --> 00:10:40.826 A:middle
this callback and it is only

00:10:40.826 --> 00:10:41.886 A:middle
within the scope of this

00:10:41.886 --> 00:10:44.226 A:middle
callback that the delegate can

00:10:44.226 --> 00:10:46.996 A:middle
request the items that it's

00:10:47.076 --> 00:10:48.736 A:middle
interested in.

00:10:48.736 --> 00:10:50.956 A:middle
Or more precisely, the

00:10:50.956 --> 00:10:52.886 A:middle
representations of the items.

00:10:53.946 --> 00:10:55.556 A:middle
And once, when it does so, at

00:10:55.556 --> 00:10:56.586 A:middle
that point, the source

00:10:56.586 --> 00:10:58.106 A:middle
application will fulfill its

00:10:58.106 --> 00:10:59.906 A:middle
promise and the system will

00:10:59.906 --> 00:11:01.686 A:middle
deliver that data back to the

00:10:59.906 --> 00:11:01.686 A:middle
deliver that data back to the

00:11:01.686 --> 00:11:03.766 A:middle
destination app asynchronously.

00:11:06.106 --> 00:11:08.766 A:middle
OK, there's a lot more to

00:11:08.766 --> 00:11:09.476 A:middle
discuss.

00:11:09.596 --> 00:11:11.096 A:middle
For example, what's the life

00:11:11.096 --> 00:11:13.136 A:middle
cycle of a drag session from the

00:11:13.136 --> 00:11:15.186 A:middle
perspective of the destination

00:11:15.186 --> 00:11:16.026 A:middle
or the source?

00:11:16.926 --> 00:11:18.046 A:middle
How do you make your set-down

00:11:18.046 --> 00:11:19.476 A:middle
transitions look great?

00:11:20.466 --> 00:11:21.516 A:middle
What do you do if the data

00:11:21.516 --> 00:11:23.106 A:middle
transfer takes a long time to

00:11:23.106 --> 00:11:23.786 A:middle
complete?

00:11:24.866 --> 00:11:26.136 A:middle
Before we answer some of these

00:11:26.136 --> 00:11:27.296 A:middle
questions, it's going to help to

00:11:27.296 --> 00:11:28.656 A:middle
look at this picture because

00:11:28.656 --> 00:11:29.756 A:middle
it's going to give you a good

00:11:29.756 --> 00:11:31.636 A:middle
bird's-eye view of how our API

00:11:31.786 --> 00:11:32.536 A:middle
is structured.

00:11:32.896 --> 00:11:34.116 A:middle
On the left in blue, you're

00:11:34.116 --> 00:11:35.806 A:middle
going to see those objects and

00:11:35.806 --> 00:11:37.496 A:middle
classes that the source

00:11:37.496 --> 00:11:39.596 A:middle
application is going to use to

00:11:39.596 --> 00:11:40.766 A:middle
realize a drag.

00:11:41.236 --> 00:11:42.516 A:middle
And on the right, what the

00:11:42.516 --> 00:11:44.836 A:middle
destination application uses to

00:11:44.836 --> 00:11:46.196 A:middle
realize a drop.

00:11:46.696 --> 00:11:48.236 A:middle
And in the middle are those

00:11:48.236 --> 00:11:50.376 A:middle
objects and classes that both

00:11:50.376 --> 00:11:52.146 A:middle
the source and the destination

00:11:52.366 --> 00:11:55.876 A:middle
use to fulfill the contract of

00:11:55.876 --> 00:11:56.836 A:middle
drag and drop.

00:11:57.396 --> 00:11:59.476 A:middle
Now, to discuss these

00:11:59.476 --> 00:12:01.106 A:middle
foundational classes in more

00:11:59.476 --> 00:12:01.106 A:middle
foundational classes in more

00:12:01.106 --> 00:12:03.136 A:middle
detail, I'm going to bring Kurt

00:12:03.136 --> 00:12:04.806 A:middle
Revis, my colleague, up on the

00:12:04.806 --> 00:12:05.296 A:middle
stage.

00:12:07.516 --> 00:12:11.906 A:middle
[ Applause ]

00:12:12.406 --> 00:12:13.106 A:middle
&gt;&gt; Thank you, Bruce.

00:12:14.076 --> 00:12:15.256 A:middle
So Bruce gave you the big

00:12:15.256 --> 00:12:16.716 A:middle
picture of drag and drop.

00:12:16.766 --> 00:12:18.276 A:middle
Now, I'm going to tell you more

00:12:18.276 --> 00:12:19.886 A:middle
about using the drag-and-drop

00:12:19.886 --> 00:12:20.206 A:middle
API.

00:12:21.456 --> 00:12:22.636 A:middle
So I'll talk about three things.

00:12:22.636 --> 00:12:24.366 A:middle
I'll give you a timeline about

00:12:24.366 --> 00:12:25.616 A:middle
what happens during drag and

00:12:25.616 --> 00:12:27.456 A:middle
drop, I'll introduce you to

00:12:27.456 --> 00:12:29.376 A:middle
these essential API methods that

00:12:29.376 --> 00:12:30.746 A:middle
you need to implement to get

00:12:30.746 --> 00:12:31.946 A:middle
drag and drop working in your

00:12:32.166 --> 00:12:33.496 A:middle
app, and then finally, I'll

00:12:33.496 --> 00:12:34.966 A:middle
introduce you to the full API.

00:12:35.906 --> 00:12:38.156 A:middle
So drag and drop looks pretty

00:12:38.156 --> 00:12:38.806 A:middle
simple, right?

00:12:38.806 --> 00:12:40.036 A:middle
There's an object on the screen.

00:12:40.396 --> 00:12:41.326 A:middle
The users touches it.

00:12:41.326 --> 00:12:42.526 A:middle
It lifts up.

00:12:43.166 --> 00:12:45.106 A:middle
Then, they move it around inside

00:12:45.106 --> 00:12:46.346 A:middle
that app, maybe over to a

00:12:46.346 --> 00:12:46.726 A:middle
different app.

00:12:47.556 --> 00:12:48.606 A:middle
Finally, they release their

00:12:48.606 --> 00:12:49.076 A:middle
touch.

00:12:49.246 --> 00:12:49.886 A:middle
The touch ends.

00:12:50.406 --> 00:12:51.666 A:middle
The object drops down into its

00:12:51.666 --> 00:12:52.286 A:middle
new position.

00:12:52.986 --> 00:12:54.016 A:middle
Of course, there's a lot more

00:12:54.016 --> 00:12:55.566 A:middle
going on underneath, so let's

00:12:55.566 --> 00:12:57.036 A:middle
talk about what happens when.

00:12:58.626 --> 00:13:00.256 A:middle
It all starts when a touch comes

00:12:58.626 --> 00:13:00.256 A:middle
It all starts when a touch comes

00:13:00.256 --> 00:13:02.376 A:middle
down on a view that has a drag

00:13:02.376 --> 00:13:03.046 A:middle
interaction.

00:13:04.016 --> 00:13:05.366 A:middle
UIKit sets up this lift

00:13:05.366 --> 00:13:07.236 A:middle
animation, and then as that

00:13:07.236 --> 00:13:08.706 A:middle
touch stays down, we run that

00:13:08.706 --> 00:13:10.256 A:middle
lift all the way to its

00:13:10.256 --> 00:13:10.736 A:middle
completion.

00:13:11.896 --> 00:13:13.676 A:middle
Then, when the user moves their

00:13:13.676 --> 00:13:15.256 A:middle
finger far enough, we start the

00:13:15.256 --> 00:13:15.966 A:middle
drag in earnest.

00:13:16.696 --> 00:13:17.906 A:middle
The object lifts up over

00:13:17.906 --> 00:13:19.306 A:middle
everything else in the view and

00:13:19.306 --> 00:13:22.396 A:middle
over all apps, and the user can

00:13:22.396 --> 00:13:23.666 A:middle
drag it around on the screen.

00:13:24.776 --> 00:13:25.926 A:middle
Finally, at some point, the user

00:13:25.926 --> 00:13:27.036 A:middle
is going to release their touch,

00:13:27.296 --> 00:13:28.636 A:middle
and what we do depends on where

00:13:28.636 --> 00:13:29.176 A:middle
that was.

00:13:30.206 --> 00:13:32.236 A:middle
The first possibility is that

00:13:32.236 --> 00:13:33.566 A:middle
the view underneath is not

00:13:33.566 --> 00:13:34.496 A:middle
interested in accepting the

00:13:34.496 --> 00:13:34.796 A:middle
drop.

00:13:35.216 --> 00:13:36.306 A:middle
In that case, we run a short

00:13:36.346 --> 00:13:37.456 A:middle
cancellation animation.

00:13:38.716 --> 00:13:40.216 A:middle
Stepping back, maybe the

00:13:40.216 --> 00:13:42.316 A:middle
location was on a view that

00:13:42.316 --> 00:13:43.366 A:middle
wanted to accept the drop.

00:13:44.016 --> 00:13:45.036 A:middle
In that case, there's more to

00:13:45.036 --> 00:13:45.326 A:middle
do.

00:13:46.036 --> 00:13:48.236 A:middle
We ask the delegate of the drop

00:13:48.236 --> 00:13:49.786 A:middle
interaction to perform the drop,

00:13:49.826 --> 00:13:51.586 A:middle
to request the data, and then

00:13:51.636 --> 00:13:52.946 A:middle
two things happen in parallel.

00:13:53.906 --> 00:13:55.496 A:middle
We run the drop animations to

00:13:55.556 --> 00:13:56.686 A:middle
animate those things into their

00:13:56.686 --> 00:13:59.246 A:middle
final positions, and we do the

00:13:59.246 --> 00:13:59.996 A:middle
data transfer.

00:13:59.996 --> 00:14:02.876 A:middle
So those two boxes are the same

00:13:59.996 --> 00:14:02.876 A:middle
So those two boxes are the same

00:14:02.926 --> 00:14:04.336 A:middle
size, but really, that data

00:14:04.336 --> 00:14:05.686 A:middle
transfer is asynchronous and

00:14:05.776 --> 00:14:07.166 A:middle
nobody knows how long it's going

00:14:07.166 --> 00:14:08.156 A:middle
to take ahead of time.

00:14:09.056 --> 00:14:09.896 A:middle
It might be very quick.

00:14:10.246 --> 00:14:11.656 A:middle
It might, excuse me, it might be

00:14:11.656 --> 00:14:12.136 A:middle
very quick.

00:14:12.336 --> 00:14:13.826 A:middle
In fact, it might be faster than

00:14:13.826 --> 00:14:14.756 A:middle
those drop animations.

00:14:15.726 --> 00:14:17.106 A:middle
Or it could take substantially

00:14:17.106 --> 00:14:18.396 A:middle
longer -- for instance, if the

00:14:18.396 --> 00:14:22.016 A:middle
data needs to be downloaded.

00:14:22.086 --> 00:14:23.186 A:middle
Now, you've seen this whole

00:14:23.246 --> 00:14:23.756 A:middle
timeline.

00:14:23.756 --> 00:14:24.536 A:middle
That's everything that can

00:14:24.536 --> 00:14:24.966 A:middle
happen.

00:14:25.346 --> 00:14:26.756 A:middle
UIKit's responsible for running

00:14:26.756 --> 00:14:29.146 A:middle
this timeline, but we need your

00:14:29.196 --> 00:14:31.126 A:middle
help at three specific places.

00:14:31.876 --> 00:14:33.136 A:middle
The first one is when the drag

00:14:33.136 --> 00:14:33.586 A:middle
starts.

00:14:33.786 --> 00:14:35.146 A:middle
We need to find the items to be

00:14:35.146 --> 00:14:35.626 A:middle
dragged.

00:14:36.256 --> 00:14:37.546 A:middle
We do that by calling this

00:14:37.546 --> 00:14:39.646 A:middle
required method on the drag

00:14:39.646 --> 00:14:40.636 A:middle
interaction delegate,

00:14:41.656 --> 00:14:42.506 A:middle
dragInteraction

00:14:42.556 --> 00:14:44.116 A:middle
itemsForBeginning session.

00:14:44.366 --> 00:14:45.996 A:middle
You return us an array of drag

00:14:45.996 --> 00:14:46.316 A:middle
items.

00:14:47.216 --> 00:14:48.256 A:middle
I'll give an example here.

00:14:48.706 --> 00:14:49.566 A:middle
We're going to drag just a

00:14:49.566 --> 00:14:51.616 A:middle
single string, so my object will

00:14:51.616 --> 00:14:52.966 A:middle
be the string "Hello World."

00:14:53.676 --> 00:14:55.176 A:middle
I put this inside of an

00:14:55.176 --> 00:14:56.046 A:middle
NSItemProvider.

00:14:56.106 --> 00:14:58.036 A:middle
This is the data representation,

00:14:58.066 --> 00:14:59.396 A:middle
data transfer level of things.

00:15:00.256 --> 00:15:01.356 A:middle
Now, note that I'm casting this

00:15:01.356 --> 00:15:02.216 A:middle
to an NSString.

00:15:02.216 --> 00:15:03.666 A:middle
This is because NSItemProvider

00:15:03.666 --> 00:15:05.026 A:middle
only deals with objects.

00:15:05.166 --> 00:15:06.436 A:middle
It doesn't deal with Swift

00:15:06.436 --> 00:15:06.866 A:middle
struct.

00:15:08.436 --> 00:15:09.956 A:middle
Next, I make a drag item.

00:15:10.066 --> 00:15:11.336 A:middle
I go up to the drag-and-drop

00:15:11.336 --> 00:15:11.616 A:middle
level.

00:15:12.326 --> 00:15:13.796 A:middle
So I make a UIDragItem with that

00:15:13.796 --> 00:15:14.466 A:middle
item provider.

00:15:14.466 --> 00:15:15.976 A:middle
And finally, I just return that

00:15:16.016 --> 00:15:17.246 A:middle
single item.

00:15:18.336 --> 00:15:20.096 A:middle
The new API essential is on the

00:15:20.096 --> 00:15:20.776 A:middle
drop side.

00:15:21.256 --> 00:15:22.996 A:middle
Now, while you're dragging that

00:15:22.996 --> 00:15:24.296 A:middle
object around on the screen,

00:15:24.676 --> 00:15:26.446 A:middle
UIKit wants to know at every

00:15:26.446 --> 00:15:27.916 A:middle
point, what would happen if the

00:15:27.916 --> 00:15:29.236 A:middle
user lifted their finger right

00:15:29.286 --> 00:15:29.656 A:middle
here and now?

00:15:30.716 --> 00:15:32.266 A:middle
You tell us that by implementing

00:15:32.266 --> 00:15:33.656 A:middle
this method on the drop

00:15:33.826 --> 00:15:34.766 A:middle
interaction delegate,

00:15:35.336 --> 00:15:36.216 A:middle
dropInteraction

00:15:36.696 --> 00:15:38.876 A:middle
sessionDidUpdate, and you return

00:15:38.876 --> 00:15:39.826 A:middle
a drop proposal.

00:15:40.386 --> 00:15:41.566 A:middle
So this is called when we enter

00:15:41.566 --> 00:15:42.826 A:middle
your view and then also when it

00:15:42.826 --> 00:15:44.326 A:middle
moves around inside of your view

00:15:44.786 --> 00:15:46.096 A:middle
every time you can return a new

00:15:46.096 --> 00:15:46.696 A:middle
proposal.

00:15:47.816 --> 00:15:49.476 A:middle
You make a UIDropProposal and

00:15:49.476 --> 00:15:51.596 A:middle
use a drop operation to do that.

00:15:52.926 --> 00:15:54.286 A:middle
Now, a drop operation is an

00:15:54.286 --> 00:15:54.516 A:middle
enum.

00:15:54.516 --> 00:15:55.896 A:middle
There's four possible values.

00:15:55.956 --> 00:15:57.086 A:middle
I'll talk about these in order

00:15:57.086 --> 00:15:58.916 A:middle
from most likely to least

00:15:58.916 --> 00:15:59.256 A:middle
likely.

00:16:00.016 --> 00:16:00.976 A:middle
The first one's cancel.

00:16:01.746 --> 00:16:02.636 A:middle
This is saying that when the

00:16:02.636 --> 00:16:03.946 A:middle
user lifts their finger, I don't

00:16:03.946 --> 00:16:04.846 A:middle
want to accept the drag.

00:16:04.906 --> 00:16:05.956 A:middle
Just cancel the drag.

00:16:07.356 --> 00:16:08.286 A:middle
Second is copy.

00:16:08.666 --> 00:16:09.416 A:middle
This is the opposite.

00:16:09.546 --> 00:16:10.796 A:middle
You're saying, I do want that

00:16:10.796 --> 00:16:10.986 A:middle
data.

00:16:11.136 --> 00:16:12.836 A:middle
I will accept that data and copy

00:16:12.836 --> 00:16:14.106 A:middle
it into the view that the user

00:16:14.106 --> 00:16:14.826 A:middle
is dropping on.

00:16:15.526 --> 00:16:17.126 A:middle
Most of the time, this is what

00:16:17.126 --> 00:16:17.896 A:middle
you should propose.

00:16:18.496 --> 00:16:20.256 A:middle
In general, on iOS, drag and

00:16:20.256 --> 00:16:21.716 A:middle
drop copies from one place to

00:16:21.716 --> 00:16:21.986 A:middle
another.

00:16:23.496 --> 00:16:24.396 A:middle
The next one is move.

00:16:24.696 --> 00:16:26.196 A:middle
This is a lot like copy, but

00:16:26.566 --> 00:16:27.846 A:middle
you're indicating that you want

00:16:27.846 --> 00:16:29.356 A:middle
the data to be moved from the

00:16:29.356 --> 00:16:30.656 A:middle
source to the destination.

00:16:31.596 --> 00:16:32.846 A:middle
This is a bit more complicated,

00:16:32.846 --> 00:16:34.316 A:middle
and you should know that UIKit

00:16:34.526 --> 00:16:36.196 A:middle
can't make it look like a move

00:16:36.246 --> 00:16:36.726 A:middle
for you.

00:16:36.856 --> 00:16:37.856 A:middle
We just give you the data the

00:16:37.856 --> 00:16:39.306 A:middle
exact same way as with a copy.

00:16:40.046 --> 00:16:41.776 A:middle
Your delegates need to cooperate

00:16:42.146 --> 00:16:43.186 A:middle
in order to make it look like a

00:16:43.186 --> 00:16:43.456 A:middle
move.

00:16:44.546 --> 00:16:46.356 A:middle
So this is only allowed within a

00:16:46.356 --> 00:16:47.236 A:middle
single app.

00:16:47.936 --> 00:16:49.506 A:middle
Your drag interaction delegate

00:16:49.506 --> 00:16:50.266 A:middle
must allow it.

00:16:50.676 --> 00:16:51.656 A:middle
There's a delegate method where

00:16:51.656 --> 00:16:52.966 A:middle
we'll ask if it does allow it.

00:16:54.266 --> 00:16:55.796 A:middle
And the drag interaction should

00:16:55.796 --> 00:16:57.356 A:middle
check this property on the drop

00:16:57.386 --> 00:16:59.106 A:middle
session allowsMoveOperation.

00:16:59.436 --> 00:17:00.716 A:middle
If that's true, then you can

00:16:59.436 --> 00:17:00.716 A:middle
If that's true, then you can

00:17:00.816 --> 00:17:02.196 A:middle
propose the move operation.

00:17:02.646 --> 00:17:05.736 A:middle
Next, the forbidden operation.

00:17:06.026 --> 00:17:07.336 A:middle
This is just like cancel, except

00:17:07.336 --> 00:17:08.516 A:middle
that we show this additional

00:17:08.516 --> 00:17:10.496 A:middle
badge on the drag item.

00:17:11.195 --> 00:17:12.685 A:middle
This is telling the user that

00:17:12.965 --> 00:17:14.286 A:middle
although normally you could drop

00:17:14.286 --> 00:17:15.846 A:middle
here, in this specific case, you

00:17:15.846 --> 00:17:16.086 A:middle
can't.

00:17:17.036 --> 00:17:18.175 A:middle
For instance, if I was dragging

00:17:18.175 --> 00:17:19.836 A:middle
an image over a folder, normally

00:17:19.836 --> 00:17:21.165 A:middle
that would be allowed, but if

00:17:21.165 --> 00:17:23.236 A:middle
that folder was read only, then

00:17:23.236 --> 00:17:24.546 A:middle
I would use the forbidden badge

00:17:24.596 --> 00:17:25.665 A:middle
to tell the user that it can't

00:17:25.665 --> 00:17:26.366 A:middle
happen right now.

00:17:27.076 --> 00:17:28.435 A:middle
So this is a bit forbidding, so

00:17:28.435 --> 00:17:29.656 A:middle
don't use it all the time.

00:17:29.896 --> 00:17:33.026 A:middle
Use it sparingly.

00:17:33.026 --> 00:17:35.316 A:middle
The next API essential, the

00:17:35.316 --> 00:17:36.796 A:middle
third one, you proposed an

00:17:36.796 --> 00:17:37.636 A:middle
operation earlier.

00:17:37.636 --> 00:17:39.136 A:middle
Now, if it's a copy or move, you

00:17:39.136 --> 00:17:40.606 A:middle
need to perform that operation.

00:17:41.526 --> 00:17:43.136 A:middle
So on the drop delegate, drop

00:17:43.136 --> 00:17:44.386 A:middle
interaction delegate, you

00:17:44.386 --> 00:17:46.526 A:middle
implement dropInteraction

00:17:47.146 --> 00:17:47.896 A:middle
performDrop.

00:17:48.466 --> 00:17:49.776 A:middle
And here's your chance to load

00:17:49.776 --> 00:17:50.776 A:middle
data from the session.

00:17:50.896 --> 00:17:52.106 A:middle
In fact, this is the only place

00:17:52.106 --> 00:17:52.576 A:middle
you can do that.

00:17:52.706 --> 00:17:55.046 A:middle
So I'll show two examples of

00:17:55.046 --> 00:17:56.236 A:middle
loading data from the items in

00:17:56.236 --> 00:17:56.616 A:middle
the session.

00:17:57.576 --> 00:17:58.866 A:middle
The first one is a simple one.

00:17:58.866 --> 00:18:00.046 A:middle
We'll use a convenience method

00:17:58.866 --> 00:18:00.046 A:middle
We'll use a convenience method

00:18:00.046 --> 00:18:02.176 A:middle
on the session called session

00:18:02.176 --> 00:18:03.346 A:middle
loadObjectsofClass.

00:18:03.346 --> 00:18:04.706 A:middle
Here I'm using UIImage.

00:18:05.586 --> 00:18:07.236 A:middle
I call this, and I provide a

00:18:07.236 --> 00:18:09.286 A:middle
closure to be called back later

00:18:09.286 --> 00:18:11.136 A:middle
on when those objects are

00:18:11.136 --> 00:18:11.606 A:middle
available.

00:18:12.626 --> 00:18:14.406 A:middle
When they come in, I can iterate

00:18:14.406 --> 00:18:15.076 A:middle
through that list.

00:18:15.266 --> 00:18:17.536 A:middle
I know they will be UIImages, so

00:18:17.536 --> 00:18:19.126 A:middle
it's okay to do this force cast

00:18:19.126 --> 00:18:19.416 A:middle
here.

00:18:19.416 --> 00:18:21.426 A:middle
And then, I can update my UI

00:18:21.426 --> 00:18:21.936 A:middle
directly.

00:18:22.236 --> 00:18:23.656 A:middle
So here I'm changing the image

00:18:23.656 --> 00:18:24.706 A:middle
inside of an imageView.

00:18:25.646 --> 00:18:27.026 A:middle
So this convenience method calls

00:18:27.026 --> 00:18:28.806 A:middle
me back on the main queue.

00:18:28.806 --> 00:18:30.046 A:middle
I can update my UI right there

00:18:30.046 --> 00:18:30.486 A:middle
and then.

00:18:32.026 --> 00:18:33.316 A:middle
Here's a more complex example.

00:18:34.046 --> 00:18:35.166 A:middle
I'm going to iterate through the

00:18:35.166 --> 00:18:37.266 A:middle
items, the UI drag items inside

00:18:37.266 --> 00:18:37.836 A:middle
of my session.

00:18:37.836 --> 00:18:38.926 A:middle
I could do different things for

00:18:38.926 --> 00:18:40.046 A:middle
different ones if I wanted to.

00:18:41.366 --> 00:18:43.706 A:middle
I, now, I'll take, for an item,

00:18:43.816 --> 00:18:45.566 A:middle
I will use the NSItemProvider,

00:18:45.676 --> 00:18:47.506 A:middle
the lower-level API for loading

00:18:47.506 --> 00:18:47.986 A:middle
objects.

00:18:48.116 --> 00:18:49.176 A:middle
So I'll load an object of a

00:18:49.176 --> 00:18:49.636 A:middle
class.

00:18:49.636 --> 00:18:50.576 A:middle
Again, UIImage.

00:18:51.226 --> 00:18:52.426 A:middle
You see that my closure gets two

00:18:52.476 --> 00:18:53.036 A:middle
things now.

00:18:53.136 --> 00:18:55.866 A:middle
It gets an object and it also

00:18:55.866 --> 00:18:57.406 A:middle
gets this error object.

00:18:58.206 --> 00:18:59.196 A:middle
The other thing about this is

00:18:59.196 --> 00:19:00.156 A:middle
that it's lower level.

00:18:59.196 --> 00:19:00.156 A:middle
that it's lower level.

00:19:00.156 --> 00:19:01.126 A:middle
This calls me back on a

00:19:01.126 --> 00:19:02.066 A:middle
background queue.

00:19:02.346 --> 00:19:03.696 A:middle
So if I had more processing to

00:19:03.696 --> 00:19:04.876 A:middle
do of the data, I could do it

00:19:04.876 --> 00:19:05.636 A:middle
right there and then.

00:19:06.306 --> 00:19:08.076 A:middle
But also, it's my responsibility

00:19:08.206 --> 00:19:09.466 A:middle
to dispatch back to the main

00:19:09.536 --> 00:19:10.986 A:middle
queue when it's time to update

00:19:10.986 --> 00:19:11.326 A:middle
my UI.

00:19:12.456 --> 00:19:13.526 A:middle
So of course, dispatch back to

00:19:13.526 --> 00:19:14.296 A:middle
the main queue.

00:19:14.556 --> 00:19:15.276 A:middle
Handle that error.

00:19:15.946 --> 00:19:18.336 A:middle
So that was the three API

00:19:18.336 --> 00:19:20.736 A:middle
essentials: getting the objects

00:19:20.736 --> 00:19:22.566 A:middle
to drag, getting a drag

00:19:22.566 --> 00:19:23.696 A:middle
proposal, and then actually

00:19:23.696 --> 00:19:27.256 A:middle
performing the drop.

00:19:27.436 --> 00:19:29.176 A:middle
Now, we'll cycle back all the

00:19:29.176 --> 00:19:30.146 A:middle
way to the beginning of this

00:19:30.146 --> 00:19:31.356 A:middle
timeline again and talk about

00:19:31.356 --> 00:19:32.646 A:middle
all the other delegate methods

00:19:32.646 --> 00:19:33.726 A:middle
because there's a lot more.

00:19:34.686 --> 00:19:35.596 A:middle
First, I'm going to talk about

00:19:35.596 --> 00:19:36.626 A:middle
it from the point of view of the

00:19:36.626 --> 00:19:38.566 A:middle
drag interaction delegate.

00:19:39.796 --> 00:19:41.486 A:middle
So immediately after you

00:19:41.486 --> 00:19:42.896 A:middle
provided those images, those

00:19:42.896 --> 00:19:45.386 A:middle
items to drag, if you don't

00:19:45.386 --> 00:19:46.956 A:middle
implement anything else, we will

00:19:46.956 --> 00:19:48.496 A:middle
just lift up your entire view.

00:19:48.766 --> 00:19:50.706 A:middle
So the drag image, the preview

00:19:50.706 --> 00:19:52.206 A:middle
will be a snapshot of your

00:19:52.206 --> 00:19:52.896 A:middle
entire view.

00:19:53.286 --> 00:19:54.736 A:middle
If that is not what you want,

00:19:55.516 --> 00:19:56.866 A:middle
you can customize that preview.

00:19:57.316 --> 00:19:59.136 A:middle
So implement drag interaction

00:19:59.226 --> 00:20:01.276 A:middle
previewForLifting item and

00:19:59.226 --> 00:20:01.276 A:middle
previewForLifting item and

00:20:01.276 --> 00:20:03.436 A:middle
return a targeted drag preview.

00:20:04.086 --> 00:20:05.176 A:middle
I'll explain what this means

00:20:05.216 --> 00:20:05.916 A:middle
with an example.

00:20:07.216 --> 00:20:08.776 A:middle
Targeted drag preview has really

00:20:08.776 --> 00:20:09.486 A:middle
two parts to it.

00:20:09.766 --> 00:20:11.256 A:middle
There's the drag preview part

00:20:11.256 --> 00:20:12.586 A:middle
and the target part.

00:20:13.226 --> 00:20:14.876 A:middle
The drag preview part is just

00:20:14.876 --> 00:20:16.276 A:middle
saying, what does the item look

00:20:16.276 --> 00:20:17.546 A:middle
like while it's being dragged?

00:20:17.616 --> 00:20:18.746 A:middle
And you tell us that by

00:20:18.746 --> 00:20:19.796 A:middle
providing us a view.

00:20:20.506 --> 00:20:21.866 A:middle
So in this case, I'm making an

00:20:21.866 --> 00:20:23.276 A:middle
image view containing an image

00:20:23.276 --> 00:20:24.426 A:middle
from my asset catalog.

00:20:24.976 --> 00:20:26.246 A:middle
That automatically gets sized

00:20:26.246 --> 00:20:27.066 A:middle
based on that image.

00:20:27.116 --> 00:20:28.076 A:middle
That's what my thing will look

00:20:28.076 --> 00:20:28.226 A:middle
like.

00:20:29.356 --> 00:20:31.056 A:middle
The second part is the target

00:20:31.116 --> 00:20:31.396 A:middle
part.

00:20:31.636 --> 00:20:32.626 A:middle
Now, you'll note that that's a

00:20:32.626 --> 00:20:33.596 A:middle
freestanding view.

00:20:33.596 --> 00:20:34.926 A:middle
It's not in the view hierarchy

00:20:34.926 --> 00:20:35.306 A:middle
anywhere.

00:20:35.846 --> 00:20:37.266 A:middle
So UIKit doesn't know where to

00:20:37.266 --> 00:20:37.656 A:middle
show it.

00:20:37.896 --> 00:20:39.116 A:middle
You need to tell us with a

00:20:39.116 --> 00:20:39.466 A:middle
target.

00:20:40.356 --> 00:20:42.206 A:middle
A target is two things: It's a

00:20:42.206 --> 00:20:43.996 A:middle
containing view and it's a

00:20:43.996 --> 00:20:45.356 A:middle
location within that view.

00:20:46.176 --> 00:20:47.476 A:middle
So here from my containing view,

00:20:47.476 --> 00:20:48.226 A:middle
I'm going to use the

00:20:48.226 --> 00:20:49.236 A:middle
interactions view.

00:20:49.236 --> 00:20:50.296 A:middle
This is where the drag is

00:20:50.296 --> 00:20:50.646 A:middle
starting.

00:20:51.416 --> 00:20:52.886 A:middle
And for the location, I'll use

00:20:52.946 --> 00:20:54.986 A:middle
these sessions location in the

00:20:54.986 --> 00:20:55.286 A:middle
view.

00:20:55.536 --> 00:20:56.736 A:middle
This is where the user's finger

00:20:56.736 --> 00:20:56.936 A:middle
is.

00:20:58.236 --> 00:20:59.586 A:middle
I take those two things, I put

00:20:59.586 --> 00:21:01.756 A:middle
them together into a drag

00:20:59.586 --> 00:21:01.756 A:middle
them together into a drag

00:21:01.976 --> 00:21:04.236 A:middle
preview target, and then

00:21:04.236 --> 00:21:05.146 A:middle
finally, I make a

00:21:05.146 --> 00:21:07.246 A:middle
UITargetedDragPreview with that

00:21:07.346 --> 00:21:08.976 A:middle
view, with a default set of

00:21:08.976 --> 00:21:10.176 A:middle
parameters, and with that

00:21:10.176 --> 00:21:10.466 A:middle
target.

00:21:11.216 --> 00:21:11.826 A:middle
That's the lift.

00:21:12.906 --> 00:21:13.696 A:middle
The other thing you can do

00:21:13.696 --> 00:21:15.826 A:middle
during the lift phase is animate

00:21:15.826 --> 00:21:17.566 A:middle
your own UI alongside the lift.

00:21:17.956 --> 00:21:19.046 A:middle
So maybe you've got other UI

00:21:19.046 --> 00:21:20.476 A:middle
inside of your view that needs

00:21:20.476 --> 00:21:21.956 A:middle
to be dimmed out during a drag.

00:21:21.956 --> 00:21:22.596 A:middle
Something like that.

00:21:23.366 --> 00:21:24.516 A:middle
You can implement this method --

00:21:24.576 --> 00:21:26.406 A:middle
drag interaction will animate

00:21:26.406 --> 00:21:28.406 A:middle
lift with an animator -- and use

00:21:28.406 --> 00:21:30.006 A:middle
that animator to add animations

00:21:30.006 --> 00:21:30.726 A:middle
alongside.

00:21:31.166 --> 00:21:32.046 A:middle
Here I'm just changing the

00:21:32.046 --> 00:21:33.216 A:middle
background color of a view.

00:21:34.476 --> 00:21:35.736 A:middle
You can also get the completion

00:21:36.046 --> 00:21:37.086 A:middle
of that lift animation.

00:21:37.756 --> 00:21:38.976 A:middle
Now, note that, with the lift,

00:21:38.976 --> 00:21:40.006 A:middle
there's two ways that it can

00:21:40.006 --> 00:21:40.106 A:middle
end.

00:21:40.376 --> 00:21:41.736 A:middle
If the user holds down their

00:21:41.736 --> 00:21:42.896 A:middle
finger long enough through the

00:21:42.896 --> 00:21:44.926 A:middle
whole lift, we'll go all the way

00:21:44.926 --> 00:21:45.416 A:middle
to the end.

00:21:45.596 --> 00:21:46.526 A:middle
The position will be end.

00:21:47.516 --> 00:21:49.056 A:middle
If the user lifts their finger

00:21:49.056 --> 00:21:50.366 A:middle
partway through the lift, we'll

00:21:50.366 --> 00:21:51.756 A:middle
run it in reverse all the way

00:21:51.756 --> 00:21:53.136 A:middle
back to the beginning and we'll

00:21:53.136 --> 00:21:54.466 A:middle
tell you the position is start.

00:21:54.966 --> 00:21:58.766 A:middle
As that session begins after the

00:21:58.766 --> 00:22:00.486 A:middle
user moves their finger, we'll

00:21:58.766 --> 00:22:00.486 A:middle
user moves their finger, we'll

00:22:00.486 --> 00:22:01.786 A:middle
tell you the session will begin.

00:22:02.776 --> 00:22:04.336 A:middle
We will then ask you some

00:22:04.336 --> 00:22:04.936 A:middle
questions.

00:22:04.936 --> 00:22:06.146 A:middle
For instance, we'll ask you,

00:22:06.146 --> 00:22:07.546 A:middle
does this session allow the move

00:22:07.546 --> 00:22:08.186 A:middle
operation?

00:22:09.276 --> 00:22:11.016 A:middle
And then, as that session moves

00:22:11.016 --> 00:22:12.746 A:middle
around, we'll tell you every

00:22:12.746 --> 00:22:13.356 A:middle
time it moves.

00:22:13.356 --> 00:22:14.356 A:middle
So you can find out the new

00:22:14.356 --> 00:22:17.076 A:middle
location there.

00:22:17.276 --> 00:22:19.066 A:middle
Also, during this drag phase,

00:22:19.066 --> 00:22:20.706 A:middle
you can add items to the

00:22:20.706 --> 00:22:21.696 A:middle
drag-and-drop session.

00:22:22.186 --> 00:22:23.116 A:middle
So I've got one touch that's

00:22:23.116 --> 00:22:24.086 A:middle
moving that drag around.

00:22:24.136 --> 00:22:25.906 A:middle
Another touch can come down and

00:22:25.906 --> 00:22:28.706 A:middle
tap on any view that has a drag

00:22:28.706 --> 00:22:29.296 A:middle
interaction.

00:22:29.906 --> 00:22:31.146 A:middle
It can, it doesn't have to be

00:22:31.146 --> 00:22:31.806 A:middle
the original view.

00:22:31.806 --> 00:22:32.616 A:middle
It could be a completely

00:22:32.616 --> 00:22:33.166 A:middle
different view.

00:22:33.996 --> 00:22:35.706 A:middle
When we detect this tap, we will

00:22:35.936 --> 00:22:37.746 A:middle
ask the delegate for items to

00:22:37.746 --> 00:22:38.616 A:middle
add to the session.

00:22:39.806 --> 00:22:41.746 A:middle
You do that by implementing drag

00:22:41.746 --> 00:22:43.646 A:middle
interaction items for adding to

00:22:43.646 --> 00:22:45.406 A:middle
session with a touch at a point.

00:22:45.446 --> 00:22:47.576 A:middle
So you can hit Test using that

00:22:47.576 --> 00:22:49.676 A:middle
point, find out what items, if

00:22:49.676 --> 00:22:51.196 A:middle
any, that you want to add to the

00:22:51.196 --> 00:22:51.576 A:middle
session.

00:22:52.156 --> 00:22:53.166 A:middle
If you've got some, return them.

00:22:53.196 --> 00:22:54.116 A:middle
If you don't have anything to

00:22:54.116 --> 00:22:55.716 A:middle
add, just return an empty array,

00:22:56.326 --> 00:22:58.606 A:middle
and then we will pass that touch

00:22:58.666 --> 00:22:59.986 A:middle
along just like we normally

00:22:59.986 --> 00:23:00.426 A:middle
would have.

00:22:59.986 --> 00:23:00.426 A:middle
would have.

00:23:01.406 --> 00:23:03.966 A:middle
And of course, you can customize

00:23:04.016 --> 00:23:05.456 A:middle
what the preview of those items

00:23:05.456 --> 00:23:06.506 A:middle
looks like.

00:23:08.516 --> 00:23:10.066 A:middle
Finally, when the session ends,

00:23:10.066 --> 00:23:11.286 A:middle
the user releases their finger.

00:23:11.806 --> 00:23:13.276 A:middle
We'll tell you the session will

00:23:13.276 --> 00:23:14.676 A:middle
end with the operation that was

00:23:14.676 --> 00:23:15.076 A:middle
chosen.

00:23:16.676 --> 00:23:18.386 A:middle
And if it's ending in a cancel,

00:23:18.386 --> 00:23:19.276 A:middle
there's a cancellation

00:23:19.276 --> 00:23:20.296 A:middle
animation, which you can

00:23:20.296 --> 00:23:20.806 A:middle
customize.

00:23:21.666 --> 00:23:23.136 A:middle
So implement drag interaction

00:23:23.266 --> 00:23:25.966 A:middle
previewForCancelling item with a

00:23:25.966 --> 00:23:27.316 A:middle
default and return a targeted

00:23:27.316 --> 00:23:27.936 A:middle
drag preview.

00:23:28.646 --> 00:23:29.966 A:middle
You can return nil here, and the

00:23:29.966 --> 00:23:31.056 A:middle
item will just disappear in

00:23:31.056 --> 00:23:31.516 A:middle
place.

00:23:32.036 --> 00:23:33.606 A:middle
You can use our default one and

00:23:33.606 --> 00:23:34.486 A:middle
change its target.

00:23:34.846 --> 00:23:35.906 A:middle
So if you know where that thing

00:23:35.906 --> 00:23:37.646 A:middle
should fly back to, all you have

00:23:37.696 --> 00:23:38.696 A:middle
to do is give it a new target.

00:23:38.696 --> 00:23:39.896 A:middle
It will fly right back there.

00:23:41.046 --> 00:23:42.316 A:middle
You can animate alongside the

00:23:42.316 --> 00:23:43.736 A:middle
cancellation animation the same

00:23:43.736 --> 00:23:44.426 A:middle
way as before.

00:23:45.136 --> 00:23:46.436 A:middle
Finally, when we're done, we'll

00:23:46.436 --> 00:23:47.496 A:middle
tell you that the session did

00:23:47.496 --> 00:23:47.736 A:middle
end.

00:23:48.726 --> 00:23:50.876 A:middle
If it was a copy or a move,

00:23:50.946 --> 00:23:51.876 A:middle
there's no cancellation

00:23:51.876 --> 00:23:53.056 A:middle
animation, so we just tell you

00:23:53.056 --> 00:23:55.126 A:middle
the session did end and we also

00:23:55.126 --> 00:23:56.996 A:middle
tell you when the data transfer

00:23:56.996 --> 00:23:57.456 A:middle
is finished.

00:23:57.456 --> 00:24:01.356 A:middle
So that was the drag interaction

00:23:57.456 --> 00:24:01.356 A:middle
So that was the drag interaction

00:24:01.356 --> 00:24:01.586 A:middle
side.

00:24:01.586 --> 00:24:02.736 A:middle
Now, let's talk about the drop

00:24:02.736 --> 00:24:03.616 A:middle
interaction side.

00:24:04.146 --> 00:24:04.966 A:middle
This is a little more

00:24:04.966 --> 00:24:05.396 A:middle
interesting.

00:24:05.396 --> 00:24:06.606 A:middle
There's only one drag

00:24:06.606 --> 00:24:07.866 A:middle
interaction that's involved in

00:24:07.866 --> 00:24:08.726 A:middle
starting that drag.

00:24:09.266 --> 00:24:10.346 A:middle
But it can go over lots of

00:24:10.346 --> 00:24:11.346 A:middle
different views, and they can

00:24:11.546 --> 00:24:12.896 A:middle
all have their own drop

00:24:12.896 --> 00:24:14.636 A:middle
interaction with the same

00:24:14.636 --> 00:24:16.146 A:middle
delegate or multiple delegates.

00:24:16.786 --> 00:24:18.166 A:middle
But in the end, only one of them

00:24:18.166 --> 00:24:19.766 A:middle
gets to choose what happens when

00:24:19.766 --> 00:24:24.616 A:middle
the user lifts their finger.

00:24:24.846 --> 00:24:26.626 A:middle
So when that drag-and-drop

00:24:26.676 --> 00:24:28.226 A:middle
session enters your view, you've

00:24:28.226 --> 00:24:29.236 A:middle
got a drop interaction.

00:24:29.236 --> 00:24:30.246 A:middle
The first thing we'll do is ask

00:24:30.246 --> 00:24:31.406 A:middle
you, can you handle that

00:24:31.466 --> 00:24:31.746 A:middle
session?

00:24:32.526 --> 00:24:33.436 A:middle
So we implement, you can

00:24:33.436 --> 00:24:34.706 A:middle
implement this method, drop

00:24:34.706 --> 00:24:36.166 A:middle
interaction canHandle session.

00:24:36.966 --> 00:24:39.126 A:middle
And you can't check what data is

00:24:39.126 --> 00:24:40.056 A:middle
actually being dragged.

00:24:40.056 --> 00:24:41.126 A:middle
We don't give you access to that

00:24:41.126 --> 00:24:43.106 A:middle
yet, but you can find the types

00:24:43.106 --> 00:24:44.106 A:middle
of data that are being dragged.

00:24:44.566 --> 00:24:45.386 A:middle
So let's say you're only

00:24:45.386 --> 00:24:46.366 A:middle
interested in images.

00:24:46.786 --> 00:24:47.856 A:middle
You can check session

00:24:48.426 --> 00:24:50.596 A:middle
canLoadObjectsofClass UIImage.

00:24:51.786 --> 00:24:52.796 A:middle
Or you can do something more

00:24:52.796 --> 00:24:53.356 A:middle
specific.

00:24:53.356 --> 00:24:54.626 A:middle
If you're interested in specific

00:24:54.626 --> 00:24:56.736 A:middle
uniform type identifiers, you

00:24:56.736 --> 00:24:58.446 A:middle
can check if any items in that

00:24:58.476 --> 00:25:01.076 A:middle
session conform to that specific

00:24:58.476 --> 00:25:01.076 A:middle
session conform to that specific

00:25:01.146 --> 00:25:02.296 A:middle
uniform type identifier.

00:25:02.626 --> 00:25:04.196 A:middle
So here I'm using image PNG, if

00:25:04.196 --> 00:25:05.566 A:middle
I was only interested in PNG

00:25:05.566 --> 00:25:06.116 A:middle
images.

00:25:08.676 --> 00:25:10.076 A:middle
Next, after you've said that you

00:25:10.076 --> 00:25:11.976 A:middle
can handle the drag session,

00:25:12.836 --> 00:25:14.186 A:middle
we'll tell you when that session

00:25:14.236 --> 00:25:15.696 A:middle
enters your view, we'll tell you

00:25:15.696 --> 00:25:16.966 A:middle
when it moves around inside of

00:25:16.966 --> 00:25:17.866 A:middle
your view -- of course, you

00:25:17.866 --> 00:25:20.186 A:middle
return a proposal there -- and

00:25:20.186 --> 00:25:21.306 A:middle
we'll tell you when it exits.

00:25:21.516 --> 00:25:22.496 A:middle
And these can of course happen

00:25:22.496 --> 00:25:23.996 A:middle
multiple times -- enter, exit,

00:25:24.056 --> 00:25:24.656 A:middle
enter, exit.

00:25:27.136 --> 00:25:28.136 A:middle
Also, while the session is

00:25:28.136 --> 00:25:29.246 A:middle
happening, springloading might

00:25:29.246 --> 00:25:29.576 A:middle
happen.

00:25:30.206 --> 00:25:31.616 A:middle
So we have built-in support in

00:25:31.616 --> 00:25:32.946 A:middle
UIKit for springloading.

00:25:33.106 --> 00:25:34.906 A:middle
Several different classes, such

00:25:34.906 --> 00:25:35.516 A:middle
as UIButton.

00:25:35.666 --> 00:25:36.536 A:middle
All you have to do is say,

00:25:36.536 --> 00:25:37.916 A:middle
isSpringLoaded equals true.

00:25:38.366 --> 00:25:39.326 A:middle
When that drag-and-drop session

00:25:39.326 --> 00:25:41.626 A:middle
hovers over that button, the

00:25:41.696 --> 00:25:42.626 A:middle
button's action will

00:25:42.626 --> 00:25:44.036 A:middle
automatically run.

00:25:45.136 --> 00:25:46.336 A:middle
Or you can set up your own

00:25:46.336 --> 00:25:47.836 A:middle
springloaded interaction with

00:25:47.836 --> 00:25:49.266 A:middle
its own handler to be called

00:25:49.266 --> 00:25:50.766 A:middle
when it's time to activate and

00:25:50.926 --> 00:25:53.766 A:middle
add that to any view you like.

00:25:54.766 --> 00:25:56.676 A:middle
Finally, when the session ends

00:25:56.676 --> 00:25:57.966 A:middle
on the dropInteraction delegate,

00:25:58.486 --> 00:25:59.596 A:middle
we'll tell you the session did

00:25:59.596 --> 00:25:59.826 A:middle
end.

00:25:59.876 --> 00:26:02.246 A:middle
So every interaction, every drop

00:25:59.876 --> 00:26:02.246 A:middle
So every interaction, every drop

00:26:02.246 --> 00:26:03.726 A:middle
interaction that has ever seen

00:26:03.726 --> 00:26:05.086 A:middle
this session will be told that

00:26:05.086 --> 00:26:05.926 A:middle
it's ending.

00:26:06.276 --> 00:26:07.256 A:middle
If you were keeping track of it,

00:26:07.256 --> 00:26:08.726 A:middle
now you can stop keeping track

00:26:09.476 --> 00:26:10.846 A:middle
of it.

00:26:11.116 --> 00:26:12.976 A:middle
If there's a drop to perform, of

00:26:12.976 --> 00:26:13.946 A:middle
course, there's more to do.

00:26:13.946 --> 00:26:15.016 A:middle
We talked about the perform

00:26:15.016 --> 00:26:15.486 A:middle
phase.

00:26:15.696 --> 00:26:16.306 A:middle
Now, let's talk about the

00:26:16.306 --> 00:26:17.536 A:middle
animations and the data

00:26:17.536 --> 00:26:17.936 A:middle
transfer.

00:26:18.476 --> 00:26:21.096 A:middle
The animations are exactly the

00:26:21.096 --> 00:26:22.716 A:middle
same for drop animations as they

00:26:22.716 --> 00:26:23.626 A:middle
were for cancellation

00:26:23.666 --> 00:26:24.116 A:middle
animations.

00:26:24.276 --> 00:26:25.416 A:middle
Just the API names are

00:26:25.416 --> 00:26:25.816 A:middle
different.

00:26:25.926 --> 00:26:26.826 A:middle
So now, it's on the drop

00:26:26.826 --> 00:26:28.646 A:middle
interaction delegate preview for

00:26:28.646 --> 00:26:29.926 A:middle
dropping item, but you can do

00:26:29.926 --> 00:26:30.986 A:middle
exactly the same things.

00:26:31.826 --> 00:26:32.996 A:middle
You can animate alongside the

00:26:33.046 --> 00:26:33.626 A:middle
same way.

00:26:34.256 --> 00:26:35.536 A:middle
And finally, when all those drop

00:26:35.536 --> 00:26:36.796 A:middle
animations of all the items are

00:26:36.796 --> 00:26:38.106 A:middle
done, we'll tell you conclude

00:26:38.106 --> 00:26:38.456 A:middle
drop.

00:26:38.946 --> 00:26:41.616 A:middle
For the data transfer, of

00:26:41.616 --> 00:26:43.026 A:middle
course, this closure gets called

00:26:43.026 --> 00:26:44.046 A:middle
when that data's available.

00:26:44.566 --> 00:26:45.486 A:middle
But something I didn't mention

00:26:45.486 --> 00:26:47.686 A:middle
earlier: When you start the load

00:26:48.276 --> 00:26:49.566 A:middle
of the data, you can get a

00:26:49.616 --> 00:26:51.296 A:middle
progress object, and this

00:26:51.296 --> 00:26:53.526 A:middle
progress object can tell you how

00:26:53.526 --> 00:26:54.606 A:middle
much of the data transfer is

00:26:54.606 --> 00:26:56.516 A:middle
done, is it finished yet, and

00:26:56.696 --> 00:26:58.126 A:middle
you can even cancel the data

00:26:58.336 --> 00:27:00.246 A:middle
transfer from there.

00:26:58.336 --> 00:27:00.246 A:middle
transfer from there.

00:27:00.446 --> 00:27:02.096 A:middle
Also, you can get those progress

00:27:02.096 --> 00:27:04.406 A:middle
objects per item, or there's a

00:27:04.406 --> 00:27:05.616 A:middle
progress object on the entire

00:27:05.616 --> 00:27:07.136 A:middle
session that wraps up all the

00:27:07.136 --> 00:27:08.766 A:middle
progress of all the item

00:27:08.766 --> 00:27:08.986 A:middle
loading.

00:27:09.536 --> 00:27:11.166 A:middle
And there you have it.

00:27:11.396 --> 00:27:12.756 A:middle
That's the full timeline of drag

00:27:12.756 --> 00:27:13.186 A:middle
and drop.

00:27:13.186 --> 00:27:14.046 A:middle
That's everything that can

00:27:14.046 --> 00:27:14.416 A:middle
happen.

00:27:15.316 --> 00:27:16.306 A:middle
You know about these three

00:27:16.306 --> 00:27:17.866 A:middle
essential API functions that you

00:27:17.866 --> 00:27:19.216 A:middle
should implement to get drag and

00:27:19.216 --> 00:27:19.826 A:middle
drop working.

00:27:19.826 --> 00:27:21.386 A:middle
And I hope you got the real

00:27:21.386 --> 00:27:22.206 A:middle
message here, which is

00:27:22.606 --> 00:27:24.116 A:middle
customizing drag and drop is

00:27:24.116 --> 00:27:25.586 A:middle
done through these interaction

00:27:25.586 --> 00:27:25.976 A:middle
delegates.

00:27:26.056 --> 00:27:28.256 A:middle
That's how UIKit and your app

00:27:28.256 --> 00:27:29.076 A:middle
work together to make a

00:27:29.076 --> 00:27:30.336 A:middle
fantastic drag-and-drop

00:27:30.336 --> 00:27:30.876 A:middle
experience.

00:27:32.416 --> 00:27:33.646 A:middle
I'll hand you over to Emmanuel,

00:27:33.646 --> 00:27:34.936 A:middle
who will show you how to add

00:27:34.936 --> 00:27:36.676 A:middle
drag and drop to an app.

00:27:37.076 --> 00:27:37.976 A:middle
&gt;&gt; Thank you, Kurt.

00:27:38.516 --> 00:27:43.666 A:middle
[ Applause ]

00:27:44.166 --> 00:27:44.906 A:middle
&gt;&gt; Using drag-and-drop

00:27:44.906 --> 00:27:46.506 A:middle
interactions, we created

00:27:46.506 --> 00:27:48.066 A:middle
skeuomorphic pinboard for

00:27:48.066 --> 00:27:48.596 A:middle
images.

00:27:49.056 --> 00:27:51.746 A:middle
So we can start a drag from

00:27:51.746 --> 00:27:52.926 A:middle
photos, for example.

00:27:53.406 --> 00:27:54.356 A:middle
We can bring it over the

00:27:54.356 --> 00:27:54.916 A:middle
pinboard.

00:27:54.916 --> 00:27:57.566 A:middle
And when we drop it, we'll copy

00:27:57.566 --> 00:27:58.536 A:middle
the image and show it in the

00:27:58.536 --> 00:27:58.976 A:middle
pinboard.

00:27:59.386 --> 00:28:03.736 A:middle
Notice the drop animation scales

00:27:59.386 --> 00:28:03.736 A:middle
Notice the drop animation scales

00:28:03.736 --> 00:28:05.156 A:middle
down the image and, when we

00:28:05.186 --> 00:28:06.026 A:middle
receive the data in the

00:28:06.026 --> 00:28:07.716 A:middle
pinboard, will show the full

00:28:07.716 --> 00:28:08.266 A:middle
image.

00:28:08.796 --> 00:28:12.156 A:middle
We can also drag it on the

00:28:12.156 --> 00:28:13.506 A:middle
pinboard and see that we're

00:28:13.506 --> 00:28:15.336 A:middle
going to dim the original image.

00:28:15.736 --> 00:28:17.456 A:middle
And we can also drag that back

00:28:17.456 --> 00:28:19.706 A:middle
into photos to add it.

00:28:21.676 --> 00:28:22.356 A:middle
Hopefully.

00:28:22.456 --> 00:28:26.596 A:middle
Yeah, that's -- this used to

00:28:26.596 --> 00:28:26.836 A:middle
work.

00:28:27.356 --> 00:28:30.776 A:middle
[laughs] We can also drag it in

00:28:30.776 --> 00:28:33.116 A:middle
the same pinboard, and then when

00:28:33.116 --> 00:28:34.926 A:middle
we drop it, we will just

00:28:34.926 --> 00:28:35.566 A:middle
rearrange it.

00:28:35.676 --> 00:28:37.246 A:middle
And see, look again at the

00:28:37.246 --> 00:28:37.886 A:middle
animation.

00:28:38.166 --> 00:28:39.776 A:middle
We dimmed the original image,

00:28:39.776 --> 00:28:41.786 A:middle
and when we drop it, we hide the

00:28:41.786 --> 00:28:43.476 A:middle
original image, and then we show

00:28:43.476 --> 00:28:44.396 A:middle
it in the new spot.

00:28:44.736 --> 00:28:46.576 A:middle
So let's switch back to the code

00:28:46.576 --> 00:28:47.996 A:middle
and see how this is implemented.

00:28:49.756 --> 00:28:52.096 A:middle
So we start in our main view

00:28:52.096 --> 00:28:54.456 A:middle
controller by adding a drop

00:28:54.456 --> 00:28:56.676 A:middle
interaction and a drag

00:28:56.676 --> 00:28:58.376 A:middle
interaction to our view.

00:28:58.926 --> 00:29:00.026 A:middle
And then, we're going to set the

00:28:58.926 --> 00:29:00.026 A:middle
And then, we're going to set the

00:29:00.026 --> 00:29:02.176 A:middle
view controller as the delegate

00:29:02.176 --> 00:29:03.166 A:middle
of those interactions.

00:29:04.446 --> 00:29:06.186 A:middle
Then, we're going to implement a

00:29:06.186 --> 00:29:09.446 A:middle
few drop interaction delegate

00:29:09.446 --> 00:29:09.926 A:middle
methods.

00:29:10.236 --> 00:29:11.726 A:middle
The first one is drop

00:29:11.726 --> 00:29:13.546 A:middle
interaction can handle session,

00:29:13.856 --> 00:29:16.096 A:middle
and this will return true if the

00:29:16.096 --> 00:29:17.456 A:middle
session can load images.

00:29:17.656 --> 00:29:18.476 A:middle
It's very simple.

00:29:19.246 --> 00:29:21.076 A:middle
The second one is drop

00:29:21.076 --> 00:29:23.116 A:middle
interaction sessionDidUpdate,

00:29:23.456 --> 00:29:25.076 A:middle
and here we return a proposal

00:29:25.136 --> 00:29:27.396 A:middle
where we specify what kind of

00:29:27.396 --> 00:29:28.756 A:middle
operation we want to perform.

00:29:29.146 --> 00:29:31.266 A:middle
So we have two cases.

00:29:31.726 --> 00:29:35.116 A:middle
The first one is if the drag

00:29:35.266 --> 00:29:36.916 A:middle
started in another application,

00:29:37.186 --> 00:29:38.556 A:middle
we want to perform a copy

00:29:38.556 --> 00:29:39.146 A:middle
operation.

00:29:39.326 --> 00:29:40.826 A:middle
And we can check that by looking

00:29:41.236 --> 00:29:43.836 A:middle
at the session localDragSession

00:29:43.836 --> 00:29:44.286 A:middle
property.

00:29:44.646 --> 00:29:47.456 A:middle
So if it's new, it means that

00:29:47.456 --> 00:29:49.216 A:middle
the operation, that the drag was

00:29:49.216 --> 00:29:50.636 A:middle
started in another application

00:29:50.636 --> 00:29:51.736 A:middle
and we're going to do a copy.

00:29:52.156 --> 00:29:53.256 A:middle
Otherwise, we are just

00:29:53.256 --> 00:29:54.736 A:middle
rearranging the item and we're

00:29:54.736 --> 00:29:56.046 A:middle
going to do a move operation.

00:29:58.776 --> 00:30:00.376 A:middle
Third, we're going to implement

00:29:58.776 --> 00:30:00.376 A:middle
Third, we're going to implement

00:30:00.756 --> 00:30:02.996 A:middle
dropInteraction performDrop

00:30:03.036 --> 00:30:03.506 A:middle
session.

00:30:04.196 --> 00:30:06.176 A:middle
Again, we only want to copy the

00:30:06.176 --> 00:30:08.246 A:middle
data if the drag started in

00:30:08.246 --> 00:30:09.166 A:middle
another application.

00:30:09.166 --> 00:30:10.876 A:middle
So again, we do this check if

00:30:11.116 --> 00:30:12.506 A:middle
the local drag session is new.

00:30:13.436 --> 00:30:14.806 A:middle
And then, we're going to perform

00:30:14.806 --> 00:30:17.146 A:middle
the drop first by getting the

00:30:17.546 --> 00:30:19.776 A:middle
drop point of where the user

00:30:19.776 --> 00:30:21.936 A:middle
lifted the finger by calling

00:30:21.936 --> 00:30:23.196 A:middle
session location in view.

00:30:23.996 --> 00:30:25.966 A:middle
And then, we are going to go

00:30:25.966 --> 00:30:27.566 A:middle
over each drag item in the

00:30:27.566 --> 00:30:30.946 A:middle
session and call a helper

00:30:30.946 --> 00:30:32.776 A:middle
function that will load the

00:30:32.776 --> 00:30:34.146 A:middle
image from the item provider,

00:30:34.526 --> 00:30:36.096 A:middle
put it in an image view, and

00:30:36.096 --> 00:30:38.326 A:middle
then display it in the pinboard

00:30:38.326 --> 00:30:40.416 A:middle
using that center point that we

00:30:40.416 --> 00:30:40.706 A:middle
got.

00:30:44.276 --> 00:30:47.816 A:middle
We also want to perform a drop

00:30:48.016 --> 00:30:50.086 A:middle
animation when we release the

00:30:50.086 --> 00:30:50.566 A:middle
finger.

00:30:51.026 --> 00:30:54.016 A:middle
So again, we have two cases.

00:30:54.366 --> 00:30:55.646 A:middle
In drop interaction

00:30:55.646 --> 00:30:57.816 A:middle
previewForDropping item, we want

00:30:57.816 --> 00:31:01.326 A:middle
to return a preview that scales

00:30:57.816 --> 00:31:01.326 A:middle
to return a preview that scales

00:31:01.326 --> 00:31:03.246 A:middle
down when the drag comes from

00:31:03.246 --> 00:31:04.356 A:middle
another application.

00:31:04.716 --> 00:31:06.996 A:middle
And otherwise, if we're moving

00:31:06.996 --> 00:31:09.346 A:middle
the image from the pinboard, we

00:31:09.346 --> 00:31:10.766 A:middle
are not going to apply any

00:31:10.766 --> 00:31:11.256 A:middle
effects.

00:31:11.256 --> 00:31:12.256 A:middle
We're just going to drop it in

00:31:12.256 --> 00:31:12.636 A:middle
place.

00:31:16.046 --> 00:31:19.516 A:middle
So we can check if the item is

00:31:19.516 --> 00:31:22.646 A:middle
coming from a local drag or from

00:31:22.646 --> 00:31:25.156 A:middle
an external drag by checking

00:31:25.156 --> 00:31:27.116 A:middle
this property on drag item,

00:31:27.306 --> 00:31:28.486 A:middle
which is called localObject.

00:31:29.516 --> 00:31:32.136 A:middle
And if the item is coming from

00:31:32.136 --> 00:31:34.036 A:middle
another application, then we

00:31:34.036 --> 00:31:34.746 A:middle
return nil.

00:31:35.126 --> 00:31:38.116 A:middle
And this will have the effect

00:31:38.166 --> 00:31:39.306 A:middle
that we saw before.

00:31:39.556 --> 00:31:41.446 A:middle
Just will scale down the

00:31:41.446 --> 00:31:44.566 A:middle
preview, and then it will stay

00:31:44.566 --> 00:31:45.076 A:middle
in place.

00:31:45.376 --> 00:31:47.926 A:middle
The default preview instead will

00:31:47.926 --> 00:31:49.156 A:middle
scale down and move to the

00:31:49.156 --> 00:31:50.456 A:middle
center of the pinboard, but

00:31:50.456 --> 00:31:51.526 A:middle
that's not what we want.

00:31:52.076 --> 00:31:54.706 A:middle
In the case we're moving an

00:31:54.706 --> 00:31:57.376 A:middle
image from the pinboard, so

00:31:57.376 --> 00:31:59.636 A:middle
we're just rearranging it, we're

00:31:59.636 --> 00:32:02.136 A:middle
going to animate it in place.

00:31:59.636 --> 00:32:02.136 A:middle
going to animate it in place.

00:32:02.826 --> 00:32:04.926 A:middle
So to get that, we need to

00:32:04.926 --> 00:32:06.646 A:middle
retarget the default preview.

00:32:07.016 --> 00:32:09.576 A:middle
And as Kurt explained, we need a

00:32:09.576 --> 00:32:11.306 A:middle
container, which is the pinboard

00:32:11.306 --> 00:32:13.756 A:middle
itself, and the center in that

00:32:13.756 --> 00:32:17.216 A:middle
view, which is the center of the

00:32:17.296 --> 00:32:17.656 A:middle
preview.

00:32:18.536 --> 00:32:19.566 A:middle
And then, we're just going to

00:32:19.566 --> 00:32:22.326 A:middle
retarget the default preview and

00:32:22.416 --> 00:32:23.746 A:middle
return that.

00:32:25.836 --> 00:32:27.276 A:middle
Next, we're going to implement

00:32:27.406 --> 00:32:28.276 A:middle
drop interaction

00:32:28.456 --> 00:32:30.226 A:middle
willAnimateDropwith animator.

00:32:31.156 --> 00:32:34.526 A:middle
Here we want to animate a local

00:32:34.526 --> 00:32:37.266 A:middle
move because, as you've seen

00:32:37.266 --> 00:32:39.416 A:middle
before, we had dimmed out the

00:32:39.416 --> 00:32:41.216 A:middle
original image view, and when we

00:32:41.216 --> 00:32:42.936 A:middle
drop it into a new place, we're

00:32:42.936 --> 00:32:45.186 A:middle
going to hide the previous, the

00:32:45.276 --> 00:32:46.456 A:middle
image in the previous location

00:32:46.456 --> 00:32:48.116 A:middle
and then show it again at the

00:32:48.116 --> 00:32:50.076 A:middle
end of the animation into the

00:32:50.076 --> 00:32:50.666 A:middle
new spot.

00:32:51.076 --> 00:32:52.396 A:middle
So we're going to add an

00:32:52.396 --> 00:32:54.686 A:middle
alongside animation and we're

00:32:54.686 --> 00:32:57.286 A:middle
going to fade the drag item to

00:32:57.616 --> 00:32:59.246 A:middle
alpha equals 0.

00:33:00.416 --> 00:33:02.156 A:middle
And then, at the end of the

00:33:02.156 --> 00:33:04.166 A:middle
animation, so by adding a

00:33:04.166 --> 00:33:07.456 A:middle
completion block, we're going to

00:33:07.566 --> 00:33:09.396 A:middle
set the new center of that image

00:33:09.396 --> 00:33:11.046 A:middle
view, and then we're going to

00:33:11.046 --> 00:33:12.466 A:middle
show it back by setting its

00:33:12.466 --> 00:33:13.176 A:middle
alpha to 1.

00:33:13.506 --> 00:33:15.736 A:middle
And here you can see that we're

00:33:15.736 --> 00:33:17.666 A:middle
again checking a local object.

00:33:17.916 --> 00:33:19.176 A:middle
In this case, I'm passing an

00:33:19.176 --> 00:33:22.136 A:middle
index so that I know where in my

00:33:22.186 --> 00:33:25.136 A:middle
model object the image is, and

00:33:25.136 --> 00:33:26.786 A:middle
we're going to see in a moment

00:33:26.786 --> 00:33:28.356 A:middle
in the drag interaction how to

00:33:28.356 --> 00:33:29.546 A:middle
set that up.

00:33:30.376 --> 00:33:32.786 A:middle
So I'll go into the drag

00:33:32.786 --> 00:33:34.756 A:middle
interaction delegate.

00:33:35.666 --> 00:33:37.136 A:middle
I have to implement, first of

00:33:37.136 --> 00:33:39.606 A:middle
all, what kind of data I want to

00:33:39.606 --> 00:33:41.356 A:middle
pass in the drag.

00:33:42.006 --> 00:33:44.586 A:middle
And I installed the interaction

00:33:44.586 --> 00:33:45.646 A:middle
on the whole pinboard.

00:33:46.036 --> 00:33:48.886 A:middle
So what I want to do is give the

00:33:48.886 --> 00:33:51.306 A:middle
image that is under my finger.

00:33:52.706 --> 00:33:54.716 A:middle
So to do that, I first need to

00:33:54.716 --> 00:33:57.206 A:middle
get the touch of the drag by

00:33:57.206 --> 00:33:58.786 A:middle
calling again session location

00:33:58.786 --> 00:33:59.156 A:middle
in view.

00:33:59.956 --> 00:34:01.696 A:middle
And then, if there is an image

00:33:59.956 --> 00:34:01.696 A:middle
And then, if there is an image

00:34:01.776 --> 00:34:03.556 A:middle
under my finger, I want to get

00:34:03.656 --> 00:34:07.236 A:middle
the image, the data for that

00:34:07.236 --> 00:34:09.396 A:middle
image, wrap it into an item

00:34:09.396 --> 00:34:11.666 A:middle
provider, wrap the item provider

00:34:11.666 --> 00:34:14.626 A:middle
in a drag item, and then attach

00:34:14.696 --> 00:34:16.166 A:middle
that additional information that

00:34:16.166 --> 00:34:18.085 A:middle
will allow me in the drop site

00:34:18.376 --> 00:34:20.376 A:middle
to recognize that local drag

00:34:20.376 --> 00:34:20.696 A:middle
item.

00:34:25.216 --> 00:34:26.746 A:middle
Next, we need to provide a

00:34:26.806 --> 00:34:28.656 A:middle
preview for that item.

00:34:29.005 --> 00:34:31.585 A:middle
So we said before, if we don't

00:34:31.585 --> 00:34:33.906 A:middle
provide a preview, the drag

00:34:33.906 --> 00:34:35.896 A:middle
interaction by default will take

00:34:35.896 --> 00:34:37.416 A:middle
a snapshot of the whole view.

00:34:37.956 --> 00:34:39.795 A:middle
And we clearly don't want to do

00:34:39.795 --> 00:34:40.076 A:middle
that.

00:34:40.076 --> 00:34:41.686 A:middle
We just want to provide a

00:34:41.686 --> 00:34:43.326 A:middle
preview for the single image

00:34:43.326 --> 00:34:44.226 A:middle
that we're dragging.

00:34:48.196 --> 00:34:50.386 A:middle
So we do that by getting the

00:34:50.386 --> 00:34:53.585 A:middle
index of the drag item, we get

00:34:53.815 --> 00:34:55.795 A:middle
its associated image view, and

00:34:55.795 --> 00:34:57.636 A:middle
then we pass that as a targeted

00:34:57.696 --> 00:34:58.066 A:middle
preview.

00:35:01.256 --> 00:35:04.256 A:middle
Finally, we want to dim out the

00:35:04.256 --> 00:35:05.816 A:middle
original image view once we

00:35:05.816 --> 00:35:07.156 A:middle
start the drag.

00:35:07.586 --> 00:35:09.626 A:middle
So we're going to add a

00:35:10.046 --> 00:35:12.536 A:middle
completion block to this drag

00:35:12.536 --> 00:35:16.076 A:middle
interaction animator pass in a

00:35:16.156 --> 00:35:18.286 A:middle
willAnimateLift delegate.

00:35:18.786 --> 00:35:20.936 A:middle
And so we're going to add the

00:35:20.936 --> 00:35:23.056 A:middle
completion block, and the lift

00:35:23.126 --> 00:35:24.956 A:middle
ended, so if the position is

00:35:25.056 --> 00:35:27.906 A:middle
end, then we're going to fade

00:35:27.906 --> 00:35:30.986 A:middle
the original item to alpha 0.5.

00:35:31.516 --> 00:35:34.246 A:middle
And that's really it.

00:35:34.616 --> 00:35:36.906 A:middle
So you've seen how simple it is

00:35:37.646 --> 00:35:39.986 A:middle
to add drag-and-drop

00:35:39.986 --> 00:35:40.576 A:middle
interactions.

00:35:41.146 --> 00:35:44.136 A:middle
This example also contains, also

00:35:44.926 --> 00:35:46.586 A:middle
shows how to implement a

00:35:46.586 --> 00:35:47.656 A:middle
[inaudible] configuration that

00:35:47.936 --> 00:35:49.616 A:middle
you can use together with your

00:35:49.616 --> 00:35:51.816 A:middle
drop interaction, and the sample

00:35:51.816 --> 00:35:53.636 A:middle
code will be available online,

00:35:53.636 --> 00:35:55.026 A:middle
so make sure to check it out.

00:35:55.726 --> 00:35:56.406 A:middle
Back to Bruce.

00:35:57.021 --> 00:35:59.021 A:middle
[ Applause ]

00:35:59.026 --> 00:35:59.666 A:middle
&gt;&gt; Thanks, Emman.

00:36:00.516 --> 00:36:03.546 A:middle
[ Applause ]

00:36:04.046 --> 00:36:05.726 A:middle
&gt;&gt; Okay, so by now, you guys are

00:36:05.726 --> 00:36:07.276 A:middle
just going to run back to your

00:36:07.276 --> 00:36:08.396 A:middle
laptops -- I see you already

00:36:08.396 --> 00:36:09.466 A:middle
have them -- and add drag and

00:36:09.466 --> 00:36:10.366 A:middle
drop to your apps.

00:36:10.856 --> 00:36:12.646 A:middle
And so I'm going to just share a

00:36:12.646 --> 00:36:14.816 A:middle
couple of words of advice about

00:36:14.816 --> 00:36:16.646 A:middle
how to expedite that process.

00:36:16.776 --> 00:36:19.516 A:middle
First of all, don't do that

00:36:19.516 --> 00:36:20.096 A:middle
right away.

00:36:20.376 --> 00:36:21.566 A:middle
Explore the system.

00:36:21.766 --> 00:36:23.156 A:middle
See what we've done.

00:36:23.156 --> 00:36:24.486 A:middle
See the types of set-down

00:36:24.486 --> 00:36:25.986 A:middle
animations that we have

00:36:25.986 --> 00:36:27.746 A:middle
implemented and the types of

00:36:27.746 --> 00:36:29.626 A:middle
data that we actually transfer.

00:36:29.626 --> 00:36:31.026 A:middle
I think you'll be surprised.

00:36:31.596 --> 00:36:32.546 A:middle
And then, go simple.

00:36:32.546 --> 00:36:34.366 A:middle
Try to add a drop target, maybe

00:36:34.366 --> 00:36:35.996 A:middle
using a pace configuration, and

00:36:35.996 --> 00:36:37.456 A:middle
just kind of get a feel for how

00:36:37.456 --> 00:36:38.056 A:middle
it works.

00:36:39.266 --> 00:36:40.916 A:middle
Experiment with a drag source.

00:36:41.456 --> 00:36:44.096 A:middle
And even try to springload a

00:36:44.096 --> 00:36:44.926 A:middle
control or two.

00:36:44.926 --> 00:36:46.786 A:middle
And then, you're going to look

00:36:46.786 --> 00:36:49.536 A:middle
at it and say, it just doesn't

00:36:49.536 --> 00:36:50.206 A:middle
look right.

00:36:50.316 --> 00:36:51.356 A:middle
What are we missing?

00:36:51.876 --> 00:36:52.666 A:middle
And that's when you're going to

00:36:52.666 --> 00:36:54.276 A:middle
have to dive a little bit deeper

00:36:54.276 --> 00:36:55.536 A:middle
into these drag-and-drop APIs

00:36:55.536 --> 00:36:57.256 A:middle
because there's a lot of them.

00:36:57.616 --> 00:36:59.076 A:middle
And we've made this easy for

00:36:59.076 --> 00:36:59.296 A:middle
you.

00:36:59.916 --> 00:37:01.276 A:middle
And so I'm going to refer back

00:36:59.916 --> 00:37:01.276 A:middle
And so I'm going to refer back

00:37:01.276 --> 00:37:02.476 A:middle
to this picture again, and I'm

00:37:02.476 --> 00:37:03.476 A:middle
just going to start out.

00:37:03.476 --> 00:37:05.716 A:middle
There is a talk on mastering the

00:37:05.716 --> 00:37:06.746 A:middle
drag-and-drop APIs, which is

00:37:06.746 --> 00:37:09.006 A:middle
going to go even deeper into

00:37:09.006 --> 00:37:11.446 A:middle
them than what Kurt gave you an

00:37:11.446 --> 00:37:12.216 A:middle
overview of.

00:37:12.946 --> 00:37:14.686 A:middle
There's going to be a session on

00:37:14.686 --> 00:37:15.676 A:middle
what we've done with

00:37:15.726 --> 00:37:17.826 A:middle
NSItemProvider, and you're going

00:37:17.826 --> 00:37:18.936 A:middle
to find it fascinating.

00:37:18.936 --> 00:37:21.176 A:middle
We can drag and drop files, for

00:37:21.176 --> 00:37:22.616 A:middle
example, that you can open in

00:37:22.616 --> 00:37:24.766 A:middle
place, and you can actually

00:37:24.906 --> 00:37:26.386 A:middle
provision the data from your

00:37:26.386 --> 00:37:28.786 A:middle
source using a file provider.

00:37:28.786 --> 00:37:29.946 A:middle
And we're going to go into that

00:37:29.946 --> 00:37:31.316 A:middle
in detail in that talk.

00:37:33.186 --> 00:37:33.986 A:middle
There's a bit more.

00:37:33.986 --> 00:37:38.366 A:middle
For example, text view has a

00:37:38.366 --> 00:37:40.006 A:middle
delegate, a higher-level

00:37:40.006 --> 00:37:41.316 A:middle
delegate for supporting drag and

00:37:41.316 --> 00:37:41.676 A:middle
drop.

00:37:41.676 --> 00:37:42.596 A:middle
So if you have custom

00:37:42.596 --> 00:37:44.386 A:middle
attachments or want some kind of

00:37:44.386 --> 00:37:46.886 A:middle
custom text processing, you

00:37:46.886 --> 00:37:49.196 A:middle
should explore the APIs on those

00:37:49.196 --> 00:37:49.866 A:middle
delegates.

00:37:50.776 --> 00:37:52.126 A:middle
And I know many of you have

00:37:52.166 --> 00:37:53.776 A:middle
table views and collection views

00:37:53.776 --> 00:37:55.506 A:middle
in your apps, and if you want

00:37:55.506 --> 00:37:56.946 A:middle
them to support drag and drop,

00:37:56.946 --> 00:37:58.516 A:middle
we've created some great

00:37:58.516 --> 00:38:00.126 A:middle
higher-level APIs, and there's

00:37:58.516 --> 00:38:00.126 A:middle
higher-level APIs, and there's

00:38:00.126 --> 00:38:02.656 A:middle
an entire talk dedicated to that

00:38:02.656 --> 00:38:04.496 A:middle
topic which you should really go

00:38:04.496 --> 00:38:04.846 A:middle
see.

00:38:06.216 --> 00:38:07.806 A:middle
As usual, there's a lot more

00:38:07.806 --> 00:38:09.746 A:middle
information about this talk in

00:38:09.746 --> 00:38:11.356 A:middle
particular along with the sample

00:38:11.356 --> 00:38:12.176 A:middle
app at this link.

00:38:13.116 --> 00:38:14.446 A:middle
Here are some of the related

00:38:14.446 --> 00:38:15.116 A:middle
sessions.

00:38:15.346 --> 00:38:17.286 A:middle
I added one about the file

00:38:17.286 --> 00:38:18.886 A:middle
provider enhancements as well as

00:38:18.886 --> 00:38:20.776 A:middle
how you can, one on Spotlight,

00:38:21.056 --> 00:38:22.206 A:middle
which'll talk about how you can

00:38:22.206 --> 00:38:23.916 A:middle
actually drag and drop items

00:38:23.916 --> 00:38:26.136 A:middle
that your, that Spotlight finds

00:38:26.136 --> 00:38:26.986 A:middle
for your app.

00:38:26.986 --> 00:38:28.306 A:middle
If you have any questions,

00:38:28.626 --> 00:38:30.026 A:middle
please drop by.

00:38:30.486 --> 00:38:31.886 A:middle
And I hope you guys have a great

00:38:32.176 --> 00:38:33.236 A:middle
WWDC.

00:38:34.516 --> 00:38:37.500 A:middle
[ Applause ]
