WEBVTT

00:00:07.516 --> 00:00:16.500 A:middle
[ Cheering ]

00:00:22.516 --> 00:00:27.486 A:middle
[ Applause ]

00:00:27.986 --> 00:00:29.326 A:middle
&gt;&gt; Welcome to Making Great

00:00:29.326 --> 00:00:30.356 A:middle
SiriKit Experiences.

00:00:31.456 --> 00:00:33.456 A:middle
My name is Jose Angel Castillo

00:00:33.456 --> 00:00:35.336 A:middle
Sanchez and with my coworker

00:00:35.336 --> 00:00:36.126 A:middle
Rohit [assumed spelling], we

00:00:36.126 --> 00:00:37.886 A:middle
want to tell you all about it.

00:00:38.996 --> 00:00:40.936 A:middle
It has been a year since we

00:00:40.936 --> 00:00:41.766 A:middle
announced SiriKit.

00:00:42.266 --> 00:00:44.356 A:middle
Since then, many applications

00:00:44.356 --> 00:00:45.166 A:middle
have [inaudible].

00:00:45.816 --> 00:00:48.556 A:middle
We have heard your feedback, the

00:00:48.556 --> 00:00:49.536 A:middle
developers feedback.

00:00:50.216 --> 00:00:52.066 A:middle
With that, we have put together

00:00:52.166 --> 00:00:53.986 A:middle
four major areas that we want to

00:00:53.986 --> 00:00:54.896 A:middle
focus on today.

00:00:56.256 --> 00:00:57.866 A:middle
First, we want to talk about

00:00:57.866 --> 00:00:58.816 A:middle
contact resolution.

00:00:59.236 --> 00:01:01.396 A:middle
If your application is a

00:01:01.396 --> 00:01:03.646 A:middle
messaging, call, or a payments

00:01:03.646 --> 00:01:05.416 A:middle
application, you probably have

00:01:05.416 --> 00:01:06.546 A:middle
dealed [phonetic] with it.

00:01:07.126 --> 00:01:08.946 A:middle
After that, we're going to talk

00:01:08.946 --> 00:01:09.906 A:middle
about security.

00:01:11.096 --> 00:01:13.496 A:middle
If your application requires an

00:01:13.496 --> 00:01:15.086 A:middle
authorization to finalize a

00:01:15.086 --> 00:01:16.926 A:middle
transaction, we'll tell you how

00:01:16.926 --> 00:01:18.976 A:middle
to achieve that in simple steps.

00:01:21.956 --> 00:01:23.506 A:middle
Next, we're going to cover

00:01:23.666 --> 00:01:24.756 A:middle
custom vocabulary.

00:01:25.916 --> 00:01:28.276 A:middle
Siri understands many words in

00:01:28.276 --> 00:01:30.146 A:middle
many languages, but there might

00:01:30.146 --> 00:01:31.516 A:middle
be some specific words to your

00:01:31.516 --> 00:01:33.256 A:middle
application you might want to

00:01:33.256 --> 00:01:34.256 A:middle
tell Siri about.

00:01:34.766 --> 00:01:38.116 A:middle
Last but not least, we're going

00:01:38.116 --> 00:01:39.116 A:middle
to cover UI testing.

00:01:39.756 --> 00:01:41.286 A:middle
Since the last year, we have

00:01:41.286 --> 00:01:42.886 A:middle
made great improvement of how to

00:01:42.886 --> 00:01:44.286 A:middle
automate Siri testing.

00:01:47.156 --> 00:01:48.816 A:middle
Let's get started with contact

00:01:48.816 --> 00:01:49.446 A:middle
resolution.

00:01:50.416 --> 00:01:52.126 A:middle
For this, I want to use a

00:01:52.126 --> 00:01:53.516 A:middle
messaging example.

00:01:53.726 --> 00:01:54.846 A:middle
A messaging application.

00:01:55.286 --> 00:01:56.366 A:middle
You may be familiar with it.

00:01:57.566 --> 00:01:58.376 A:middle
UnicornChat.

00:01:58.706 --> 00:02:01.556 A:middle
For this, we're going to walk

00:02:01.556 --> 00:02:02.876 A:middle
through the process of sending a

00:02:02.876 --> 00:02:03.356 A:middle
message.

00:02:04.316 --> 00:02:05.906 A:middle
Text hello to John on

00:02:05.906 --> 00:02:06.556 A:middle
UnicornChat.

00:02:07.376 --> 00:02:09.646 A:middle
We clearly see that John is who

00:02:09.686 --> 00:02:12.176 A:middle
we want to message to.

00:02:12.406 --> 00:02:14.926 A:middle
In this case, on my address book

00:02:14.926 --> 00:02:16.476 A:middle
I have multiple Johns.

00:02:16.956 --> 00:02:18.966 A:middle
I have John Appleseed and John

00:02:18.966 --> 00:02:19.286 A:middle
Baily.

00:02:19.736 --> 00:02:22.646 A:middle
From the user intent, it's not

00:02:22.646 --> 00:02:23.946 A:middle
yet clear which of these John I

00:02:23.946 --> 00:02:26.926 A:middle
want to message to.

00:02:27.176 --> 00:02:30.226 A:middle
In iOS 10.3, we introduced a new

00:02:30.226 --> 00:02:32.976 A:middle
property in the INPerson object.

00:02:33.596 --> 00:02:34.366 A:middle
SiriMatches.

00:02:35.736 --> 00:02:37.336 A:middle
SiriMatches is what Siri

00:02:37.336 --> 00:02:38.046 A:middle
understands.

00:02:38.276 --> 00:02:39.716 A:middle
In this case, the multiple

00:02:39.716 --> 00:02:40.136 A:middle
Johns.

00:02:40.436 --> 00:02:42.356 A:middle
It can also be homophones to

00:02:42.356 --> 00:02:42.706 A:middle
John.

00:02:43.546 --> 00:02:44.626 A:middle
You will get an array of

00:02:44.736 --> 00:02:46.306 A:middle
INPerson objects representing

00:02:46.486 --> 00:02:47.876 A:middle
all the possibilities that Siri

00:02:47.876 --> 00:02:48.456 A:middle
understood.

00:02:48.946 --> 00:02:51.776 A:middle
Let's walk through the flow of

00:02:51.896 --> 00:02:53.466 A:middle
text hello to John on

00:02:53.466 --> 00:02:56.096 A:middle
UnicornChat and see how we can

00:02:56.386 --> 00:02:57.646 A:middle
take advantage of these

00:02:58.376 --> 00:03:00.136 A:middle
siriMatches to resolve our

00:03:00.136 --> 00:03:01.306 A:middle
contact.

00:03:02.616 --> 00:03:04.746 A:middle
Text John hello on UnicornChat.

00:03:05.476 --> 00:03:07.886 A:middle
Siri clearly understands that

00:03:07.886 --> 00:03:08.966 A:middle
you want to text John.

00:03:09.426 --> 00:03:13.266 A:middle
After that, Siri is going to

00:03:13.266 --> 00:03:15.786 A:middle
contact your app extension or

00:03:15.786 --> 00:03:17.336 A:middle
your intent parameter

00:03:17.336 --> 00:03:18.336 A:middle
resolveRecipients.

00:03:19.566 --> 00:03:21.226 A:middle
In there, Siri is going to

00:03:21.226 --> 00:03:23.126 A:middle
provide you an array of INPerson

00:03:23.126 --> 00:03:24.566 A:middle
objects, in this case, John

00:03:24.566 --> 00:03:25.846 A:middle
Appleseed and John Baily.

00:03:26.276 --> 00:03:27.816 A:middle
As we saw earlier, John

00:03:27.816 --> 00:03:29.486 A:middle
Appleseed and John Baily are

00:03:29.486 --> 00:03:30.746 A:middle
part of my address book.

00:03:31.516 --> 00:03:32.796 A:middle
It could also be they could be

00:03:32.796 --> 00:03:34.546 A:middle
part of my custom vocabulary on

00:03:34.546 --> 00:03:36.706 A:middle
my property address book on my

00:03:36.706 --> 00:03:37.386 A:middle
application.

00:03:38.326 --> 00:03:39.626 A:middle
At this point, the

00:03:39.626 --> 00:03:40.726 A:middle
resolveRecipients intent

00:03:40.726 --> 00:03:41.686 A:middle
parameter is going to get

00:03:41.686 --> 00:03:43.196 A:middle
invoked and it's up to the app

00:03:43.196 --> 00:03:44.486 A:middle
extension to make a decision.

00:03:44.966 --> 00:03:47.136 A:middle
Do we have enough information to

00:03:47.136 --> 00:03:48.476 A:middle
decide which John we want to

00:03:48.476 --> 00:03:52.206 A:middle
send the message or do we need

00:03:52.236 --> 00:03:53.836 A:middle
the help from the user to decide

00:03:53.836 --> 00:03:54.686 A:middle
which of these John?

00:03:55.706 --> 00:03:57.316 A:middle
In this case, we want to

00:03:57.316 --> 00:03:58.106 A:middle
disambiguate.

00:03:58.456 --> 00:04:00.666 A:middle
We are going to return back to

00:04:00.666 --> 00:04:02.346 A:middle
Siri the disambiguation list.

00:04:03.196 --> 00:04:04.766 A:middle
The list is going to be John

00:04:04.766 --> 00:04:06.136 A:middle
Appleseed and John Baily.

00:04:07.566 --> 00:04:09.086 A:middle
Siri is going to bring a great

00:04:09.086 --> 00:04:10.306 A:middle
experience to our user, going to

00:04:10.306 --> 00:04:11.426 A:middle
ask which one.

00:04:11.896 --> 00:04:13.516 A:middle
John Baily or John Appleseed?

00:04:14.036 --> 00:04:15.536 A:middle
At this point, it's up to the

00:04:15.536 --> 00:04:17.546 A:middle
user to decide which John they

00:04:17.546 --> 00:04:19.806 A:middle
want to use on their message.

00:04:22.296 --> 00:04:23.606 A:middle
For the purpose of this flow,

00:04:23.606 --> 00:04:25.556 A:middle
let's assume John Baily was the

00:04:25.556 --> 00:04:26.446 A:middle
one we chose.

00:04:26.916 --> 00:04:29.756 A:middle
Siri clearly understands that

00:04:29.756 --> 00:04:31.896 A:middle
John Baily is the message-- is

00:04:31.896 --> 00:04:33.106 A:middle
the contact we want to use.

00:04:33.666 --> 00:04:35.636 A:middle
Siri's going to provide back to

00:04:35.636 --> 00:04:36.886 A:middle
your resolveRecipients intent

00:04:36.886 --> 00:04:38.836 A:middle
parameter that John Baily is the

00:04:38.836 --> 00:04:40.176 A:middle
chosen INPerson object.

00:04:40.986 --> 00:04:43.076 A:middle
At this point, it's clearly that

00:04:43.076 --> 00:04:44.336 A:middle
we want to message John Baily

00:04:45.246 --> 00:04:47.146 A:middle
and your intent recipients--

00:04:47.546 --> 00:04:48.986 A:middle
intent parameter is ready to

00:04:48.986 --> 00:04:50.046 A:middle
move to the next stage.

00:04:53.076 --> 00:04:54.636 A:middle
To recap, we walked through the

00:04:54.636 --> 00:04:56.276 A:middle
process when we have multiple

00:04:56.276 --> 00:04:58.086 A:middle
Johns on our address book and we

00:04:58.156 --> 00:04:59.596 A:middle
walked through the flow to

00:04:59.596 --> 00:05:01.836 A:middle
disambiguate between them.

00:05:02.196 --> 00:05:03.336 A:middle
We decided that we want to

00:05:03.336 --> 00:05:04.226 A:middle
message John Baily.

00:05:07.496 --> 00:05:10.986 A:middle
But what if-- what if John Baily

00:05:10.986 --> 00:05:12.936 A:middle
has multiple phone numbers or

00:05:12.936 --> 00:05:14.856 A:middle
email addresses or a combination

00:05:14.856 --> 00:05:15.276 A:middle
of both?

00:05:15.896 --> 00:05:18.366 A:middle
It is yet not clear that-- which

00:05:18.366 --> 00:05:20.046 A:middle
of these handles we want to use

00:05:20.086 --> 00:05:21.056 A:middle
to send our message.

00:05:21.806 --> 00:05:23.716 A:middle
So, let's take a step back to

00:05:23.716 --> 00:05:24.976 A:middle
the point where the user chose

00:05:25.006 --> 00:05:25.586 A:middle
John Baily.

00:05:26.746 --> 00:05:28.506 A:middle
Siri understands that we want to

00:05:28.506 --> 00:05:29.576 A:middle
message John Baily.

00:05:32.116 --> 00:05:33.876 A:middle
Siri's going to communicate back

00:05:34.056 --> 00:05:35.546 A:middle
to your extension under

00:05:35.546 --> 00:05:36.976 A:middle
resolveRecipients intent

00:05:36.976 --> 00:05:40.186 A:middle
parameter with John Baily.

00:05:40.586 --> 00:05:43.526 A:middle
At this point, it's up to your

00:05:43.526 --> 00:05:44.516 A:middle
resolveRecipients intent

00:05:44.516 --> 00:05:47.326 A:middle
parameter implementation to

00:05:47.326 --> 00:05:49.256 A:middle
access your address book and

00:05:49.256 --> 00:05:50.956 A:middle
make sure that you have enough

00:05:50.956 --> 00:05:52.576 A:middle
information to which one handle

00:05:52.576 --> 00:05:53.326 A:middle
is going to be used.

00:05:54.076 --> 00:05:55.656 A:middle
In this case, as we saw, we have

00:05:55.656 --> 00:05:57.386 A:middle
multiple handles, so we need

00:05:57.386 --> 00:05:58.226 A:middle
user input.

00:05:58.776 --> 00:06:00.616 A:middle
Focusing on the phone handles,

00:06:00.616 --> 00:06:01.386 A:middle
we're going to provide the

00:06:01.386 --> 00:06:03.786 A:middle
disambiguation list as we did

00:06:03.786 --> 00:06:05.566 A:middle
before with the multiple Johns,

00:06:05.836 --> 00:06:07.136 A:middle
but in this case it's the

00:06:07.136 --> 00:06:08.806 A:middle
multiple phone number handles.

00:06:09.226 --> 00:06:11.446 A:middle
As we saw, we have home, mobile,

00:06:11.446 --> 00:06:11.946 A:middle
and work.

00:06:13.716 --> 00:06:17.016 A:middle
Siri is going to bring up a

00:06:17.176 --> 00:06:18.106 A:middle
prompt to the user.

00:06:18.296 --> 00:06:19.586 A:middle
Which one do you want to use?

00:06:20.246 --> 00:06:21.316 A:middle
So, in this case, it's pretty

00:06:21.316 --> 00:06:22.976 A:middle
clear to the user that they need

00:06:22.976 --> 00:06:24.346 A:middle
to pick one handle to send their

00:06:24.346 --> 00:06:24.816 A:middle
message.

00:06:25.836 --> 00:06:27.866 A:middle
Let's assume the user wants to

00:06:27.866 --> 00:06:32.276 A:middle
send to the mobile number.

00:06:32.436 --> 00:06:33.746 A:middle
User says mobile to Siri.

00:06:34.266 --> 00:06:35.566 A:middle
We go through the same cycle

00:06:35.726 --> 00:06:37.416 A:middle
where Siri understands that you

00:06:37.416 --> 00:06:38.926 A:middle
want to message on the mobile

00:06:38.926 --> 00:06:40.166 A:middle
number to John Baily.

00:06:40.636 --> 00:06:42.286 A:middle
Siri's going to share that

00:06:42.286 --> 00:06:43.446 A:middle
information back to the

00:06:43.446 --> 00:06:44.956 A:middle
resolveRecipients intent

00:06:44.956 --> 00:06:45.426 A:middle
parameter.

00:06:45.986 --> 00:06:48.056 A:middle
Here you're going to get the

00:06:48.056 --> 00:06:48.956 A:middle
whole information.

00:06:49.106 --> 00:06:50.496 A:middle
We want to message John Baily

00:06:50.546 --> 00:06:51.916 A:middle
and we want to do it in the

00:06:51.916 --> 00:06:52.816 A:middle
mobile handle.

00:06:53.376 --> 00:06:56.106 A:middle
At this point, the

00:06:56.106 --> 00:06:57.106 A:middle
resolveRecipients intent

00:06:57.106 --> 00:06:58.846 A:middle
parameter returns success, so we

00:06:58.846 --> 00:07:00.356 A:middle
have finalized picking our

00:07:00.356 --> 00:07:01.966 A:middle
recipient and we can move on to

00:07:01.966 --> 00:07:03.866 A:middle
the next stage.

00:07:04.996 --> 00:07:06.916 A:middle
As we know, any SiriKit intent

00:07:06.916 --> 00:07:09.486 A:middle
implementation has three steps:

00:07:09.636 --> 00:07:11.346 A:middle
resolve, confirm, and handle.

00:07:12.576 --> 00:07:14.776 A:middle
So, let's take a look at sample

00:07:14.776 --> 00:07:16.376 A:middle
code of the resolveRecipients

00:07:16.446 --> 00:07:17.906 A:middle
intent parameter implementation.

00:07:20.836 --> 00:07:23.196 A:middle
Here I have resolveRecipients

00:07:23.196 --> 00:07:23.836 A:middle
implemented.

00:07:25.226 --> 00:07:26.356 A:middle
The first thing that we're going

00:07:26.356 --> 00:07:28.556 A:middle
to do is make sure a recipient

00:07:28.556 --> 00:07:29.156 A:middle
was provided.

00:07:29.826 --> 00:07:31.046 A:middle
In the case that the recipient

00:07:31.046 --> 00:07:32.526 A:middle
wasn't provided, we can

00:07:32.526 --> 00:07:34.246 A:middle
basically ask Siri to ask for

00:07:34.246 --> 00:07:36.446 A:middle
that value to the user and we do

00:07:36.446 --> 00:07:38.536 A:middle
that by returning needsValue.

00:07:39.406 --> 00:07:40.736 A:middle
Siri will prompt the user.

00:07:41.166 --> 00:07:42.246 A:middle
To who do you want to send your

00:07:42.246 --> 00:07:42.726 A:middle
message?

00:07:43.276 --> 00:07:45.606 A:middle
In the sample we walked through,

00:07:46.216 --> 00:07:47.616 A:middle
the user said they want to

00:07:47.616 --> 00:07:48.256 A:middle
message John.

00:07:49.286 --> 00:07:51.386 A:middle
So, we got John.

00:07:51.686 --> 00:07:53.036 A:middle
We got John Appleseed and John

00:07:53.036 --> 00:07:53.436 A:middle
Baily.

00:07:53.756 --> 00:07:54.906 A:middle
Here is where we're going to

00:07:54.906 --> 00:07:56.096 A:middle
resolve which of these

00:07:56.096 --> 00:07:57.866 A:middle
recipients we want to use or

00:07:57.866 --> 00:07:59.326 A:middle
provide the disambiguation list

00:07:59.356 --> 00:08:01.286 A:middle
back to Siri so it can prompt to

00:08:01.456 --> 00:08:01.966 A:middle
the user.

00:08:03.276 --> 00:08:04.166 A:middle
In the case that we need to

00:08:04.166 --> 00:08:07.026 A:middle
provide back a list to Siri, we

00:08:07.026 --> 00:08:08.246 A:middle
basically return that under a

00:08:08.246 --> 00:08:09.066 A:middle
completion handle.

00:08:11.696 --> 00:08:13.076 A:middle
Let's see a demo of this in

00:08:13.076 --> 00:08:13.466 A:middle
action.

00:08:17.136 --> 00:08:19.936 A:middle
Here I have my resolveRecipients

00:08:20.236 --> 00:08:21.336 A:middle
intent parameter to be

00:08:21.336 --> 00:08:22.836 A:middle
implemented on my UnicornChat

00:08:22.836 --> 00:08:23.406 A:middle
application.

00:08:24.496 --> 00:08:26.226 A:middle
As we saw, the first thing that

00:08:26.226 --> 00:08:29.556 A:middle
we need to do is to validate

00:08:29.556 --> 00:08:30.826 A:middle
that we got a recipient.

00:08:31.976 --> 00:08:33.306 A:middle
Here we're making sure that a

00:08:33.306 --> 00:08:34.346 A:middle
recipient got provided.

00:08:34.896 --> 00:08:38.296 A:middle
In the case the recipient wasn't

00:08:38.296 --> 00:08:40.536 A:middle
provided, we ask Siri to ask the

00:08:40.536 --> 00:08:44.636 A:middle
user that we need that value.

00:08:44.796 --> 00:08:46.506 A:middle
Once we got that recipient

00:08:47.206 --> 00:08:49.666 A:middle
provided, we're going to process

00:08:49.666 --> 00:08:50.506 A:middle
those recipients.

00:08:51.066 --> 00:08:53.116 A:middle
Here we're going to walk through

00:08:53.116 --> 00:08:54.566 A:middle
all the recipients that we got

00:08:54.566 --> 00:08:56.346 A:middle
from Siri so we can process one

00:08:56.346 --> 00:08:56.746 A:middle
by one.

00:08:57.186 --> 00:08:59.406 A:middle
The first thing that I'm going

00:08:59.406 --> 00:09:00.896 A:middle
to do, I'm going to check with

00:09:00.896 --> 00:09:02.916 A:middle
my address book to resolve this

00:09:02.916 --> 00:09:03.416 A:middle
recipient.

00:09:04.706 --> 00:09:06.276 A:middle
My address book will do the

00:09:06.276 --> 00:09:07.766 A:middle
heavy lifting to making sure

00:09:07.916 --> 00:09:10.236 A:middle
that we have a contact backing

00:09:10.236 --> 00:09:11.036 A:middle
up that recipient.

00:09:12.626 --> 00:09:14.336 A:middle
Once that's done, we need to

00:09:14.336 --> 00:09:15.106 A:middle
make a decision.

00:09:16.306 --> 00:09:18.076 A:middle
The first case is where there's

00:09:18.076 --> 00:09:19.776 A:middle
not a contact backing up that

00:09:19.776 --> 00:09:20.266 A:middle
recipient.

00:09:20.666 --> 00:09:21.796 A:middle
Going back to our example of

00:09:21.796 --> 00:09:23.476 A:middle
John, if I don't have any John

00:09:23.476 --> 00:09:25.236 A:middle
on my address book, we basically

00:09:25.236 --> 00:09:26.946 A:middle
tell back Siri that I don't have

00:09:26.946 --> 00:09:28.146 A:middle
it and it's not supported.

00:09:28.696 --> 00:09:30.186 A:middle
It will make Siri to ask the

00:09:30.186 --> 00:09:31.966 A:middle
user to provide a valid

00:09:31.966 --> 00:09:32.546 A:middle
recipient.

00:09:33.076 --> 00:09:35.706 A:middle
In the case where we found one,

00:09:36.216 --> 00:09:37.376 A:middle
we need to process that

00:09:37.996 --> 00:09:38.566 A:middle
recipient.

00:09:39.046 --> 00:09:40.806 A:middle
So, let me walk through this

00:09:40.806 --> 00:09:41.366 A:middle
piece of code.

00:09:42.756 --> 00:09:44.566 A:middle
The first thing that we're going

00:09:44.566 --> 00:09:47.076 A:middle
to do is validate if that

00:09:47.076 --> 00:09:48.996 A:middle
recipient that we found has one

00:09:48.996 --> 00:09:49.936 A:middle
or multiple handles.

00:09:50.356 --> 00:09:51.536 A:middle
This case, we are focusing on

00:09:51.536 --> 00:09:52.286 A:middle
the phone numbers.

00:09:52.826 --> 00:09:54.056 A:middle
Where there are more than one

00:09:54.056 --> 00:09:55.836 A:middle
phone number and we cannot make

00:09:55.836 --> 00:09:57.616 A:middle
the decision for the user, we're

00:09:57.616 --> 00:09:58.446 A:middle
going to return back a

00:09:58.446 --> 00:10:01.316 A:middle
disambiguation response code

00:10:01.646 --> 00:10:02.896 A:middle
with the handle that we want to

00:10:02.896 --> 00:10:03.326 A:middle
display.

00:10:03.666 --> 00:10:05.206 A:middle
This is going to be used by Siri

00:10:05.636 --> 00:10:07.676 A:middle
to ask to the user which of the

00:10:07.676 --> 00:10:08.956 A:middle
handles you want to use.

00:10:12.656 --> 00:10:15.296 A:middle
In the case where we have a

00:10:15.296 --> 00:10:17.326 A:middle
single recipient with a single

00:10:17.326 --> 00:10:18.966 A:middle
handle, we basically return

00:10:18.966 --> 00:10:19.536 A:middle
success.

00:10:19.656 --> 00:10:20.776 A:middle
We tell them we found the

00:10:20.776 --> 00:10:22.216 A:middle
recipient and we're ready to

00:10:22.216 --> 00:10:23.466 A:middle
move on to the next stage.

00:10:24.566 --> 00:10:25.706 A:middle
Have a special case here.

00:10:27.476 --> 00:10:31.216 A:middle
This special case, it will cause

00:10:31.216 --> 00:10:33.766 A:middle
Siri to make a question to user.

00:10:33.766 --> 00:10:35.196 A:middle
Are you sure you want to message

00:10:35.196 --> 00:10:35.516 A:middle
John?

00:10:36.236 --> 00:10:38.166 A:middle
I use this in the cases where I

00:10:38.166 --> 00:10:39.776 A:middle
do some level of fuzzy matching

00:10:39.856 --> 00:10:42.066 A:middle
when the contact that Siri got

00:10:42.066 --> 00:10:43.666 A:middle
requested doesn't completely

00:10:43.666 --> 00:10:44.846 A:middle
match to the one I have on my

00:10:44.846 --> 00:10:48.556 A:middle
address book.

00:10:48.776 --> 00:10:50.026 A:middle
We're missing one or more case

00:10:50.026 --> 00:10:50.556 A:middle
to handle.

00:10:52.316 --> 00:10:53.996 A:middle
This is a case where we have

00:10:53.996 --> 00:10:55.036 A:middle
more than one match.

00:10:56.136 --> 00:10:58.256 A:middle
As we saw, we have John Baily

00:10:58.256 --> 00:11:00.166 A:middle
and John Appleseed on my address

00:11:00.166 --> 00:11:01.746 A:middle
book, so we need to disambiguate

00:11:01.746 --> 00:11:02.356 A:middle
between them.

00:11:02.986 --> 00:11:04.066 A:middle
Here we're using the same

00:11:04.066 --> 00:11:05.176 A:middle
technique, using a

00:11:05.176 --> 00:11:06.976 A:middle
disambiguation and providing the

00:11:06.976 --> 00:11:12.406 A:middle
list of matches.

00:11:12.526 --> 00:11:13.616 A:middle
There is one more case.

00:11:14.016 --> 00:11:15.336 A:middle
As we saw on the flow that we

00:11:15.336 --> 00:11:17.046 A:middle
walked through, first we asked

00:11:17.046 --> 00:11:18.976 A:middle
with John and then when the user

00:11:18.976 --> 00:11:20.766 A:middle
picked John Baily we asked which

00:11:20.766 --> 00:11:21.176 A:middle
handle.

00:11:22.076 --> 00:11:23.616 A:middle
We are going to call back the

00:11:23.616 --> 00:11:24.696 A:middle
resolveRecipients intent

00:11:24.696 --> 00:11:26.346 A:middle
parameter and we need to handle

00:11:26.346 --> 00:11:26.966 A:middle
that case.

00:11:27.576 --> 00:11:28.776 A:middle
In that case, we need to

00:11:28.776 --> 00:11:30.656 A:middle
validate if the handle has been

00:11:30.656 --> 00:11:32.016 A:middle
already provided, we can

00:11:32.016 --> 00:11:33.436 A:middle
basically return back with that

00:11:33.436 --> 00:11:33.966 A:middle
recipient.

00:11:34.486 --> 00:11:36.916 A:middle
So, let's see this in action.

00:11:39.696 --> 00:11:41.236 A:middle
In order to do that, I'm going

00:11:41.236 --> 00:11:44.236 A:middle
to use the edit a scheme.

00:11:44.386 --> 00:11:45.736 A:middle
So, you can provide the Siri

00:11:45.736 --> 00:11:48.086 A:middle
intent query from the get go so

00:11:48.086 --> 00:11:49.706 A:middle
you actually have to trigger

00:11:49.706 --> 00:11:50.806 A:middle
Siri and speak to it.

00:11:51.096 --> 00:11:52.576 A:middle
So, when I run my example, it's

00:11:52.576 --> 00:11:54.056 A:middle
going to trigger Siri for me and

00:11:54.086 --> 00:11:55.666 A:middle
it's going to say text John

00:11:55.666 --> 00:11:56.836 A:middle
hello on UnicornChat.

00:12:08.266 --> 00:12:09.986 A:middle
As we see, we have multiple

00:12:09.986 --> 00:12:11.766 A:middle
Johns on my address book, so we

00:12:11.766 --> 00:12:12.446 A:middle
need to pick one.

00:12:13.136 --> 00:12:14.096 A:middle
Let's pick John Baily.

00:12:14.636 --> 00:12:17.066 A:middle
As we walk through the flow, we

00:12:17.066 --> 00:12:18.376 A:middle
also have to pick a handle.

00:12:18.546 --> 00:12:19.786 A:middle
In this case, we want to pick

00:12:19.786 --> 00:12:20.576 A:middle
the mobile handle.

00:12:21.956 --> 00:12:23.196 A:middle
At this point, we are ready to

00:12:23.196 --> 00:12:24.936 A:middle
send the message and all the--

00:12:25.046 --> 00:12:29.000 A:middle
the recipient has been resolved.

00:12:32.516 --> 00:12:37.326 A:middle
[ Applause ]

00:12:37.826 --> 00:12:39.326 A:middle
We just saw how to walk through

00:12:39.326 --> 00:12:41.056 A:middle
the process of resolving a

00:12:41.056 --> 00:12:42.436 A:middle
contact when trying to send a

00:12:42.436 --> 00:12:42.886 A:middle
message.

00:12:43.436 --> 00:12:45.056 A:middle
This technique also applies to

00:12:45.056 --> 00:12:46.536 A:middle
any other intent that requires

00:12:46.576 --> 00:12:47.416 A:middle
contact resolution.

00:12:49.876 --> 00:12:52.416 A:middle
Messaging applications are great

00:12:52.416 --> 00:12:53.856 A:middle
for sending messages, but

00:12:53.856 --> 00:12:55.386 A:middle
they're also great for reading

00:12:55.386 --> 00:12:55.876 A:middle
messages.

00:12:56.496 --> 00:12:58.246 A:middle
A great example of that is

00:12:58.246 --> 00:12:59.846 A:middle
reading messages on CarPlay.

00:13:00.746 --> 00:13:02.716 A:middle
If your application implements

00:13:03.076 --> 00:13:05.116 A:middle
the INSearchForMessagesIntent,

00:13:05.566 --> 00:13:07.396 A:middle
you will get access to reading

00:13:07.396 --> 00:13:09.716 A:middle
experience on iOS as well as on

00:13:09.716 --> 00:13:09.946 A:middle
CarPlay.

00:13:10.446 --> 00:13:14.046 A:middle
So, on iOS 11, we introduce a

00:13:14.046 --> 00:13:16.446 A:middle
new property to make replying to

00:13:16.446 --> 00:13:18.266 A:middle
the messages that Siri just read

00:13:18.266 --> 00:13:19.656 A:middle
to our users easier.

00:13:21.436 --> 00:13:23.286 A:middle
That new property is

00:13:23.286 --> 00:13:24.526 A:middle
conversationIdentifier.

00:13:25.336 --> 00:13:27.116 A:middle
This has been introduced on the

00:13:27.176 --> 00:13:29.906 A:middle
INMessage object as well on the

00:13:29.906 --> 00:13:31.276 A:middle
INSendMessageIntent.

00:13:32.176 --> 00:13:33.966 A:middle
This conversationIdentifier is

00:13:33.966 --> 00:13:36.596 A:middle
going to be used to reply to a

00:13:36.596 --> 00:13:37.056 A:middle
message.

00:13:37.366 --> 00:13:38.626 A:middle
Siri is going to read a message

00:13:38.626 --> 00:13:41.326 A:middle
for you from UnicornChat and the

00:13:41.326 --> 00:13:42.806 A:middle
value of this property is going

00:13:42.846 --> 00:13:44.416 A:middle
to help you to short circuit the

00:13:44.416 --> 00:13:45.996 A:middle
contact resolution process that

00:13:45.996 --> 00:13:48.426 A:middle
we walked through.

00:13:48.626 --> 00:13:51.486 A:middle
Let's see the flow of how this

00:13:51.486 --> 00:13:51.836 A:middle
is done.

00:13:52.346 --> 00:13:55.416 A:middle
Read my messages on UnicornChat.

00:13:56.526 --> 00:13:57.896 A:middle
We want to read the messages

00:13:57.896 --> 00:13:59.696 A:middle
that we have on the UnicornChat.

00:14:00.326 --> 00:14:03.736 A:middle
Siri clearly understands that.

00:14:03.956 --> 00:14:05.496 A:middle
Siri is going to send an

00:14:05.526 --> 00:14:07.356 A:middle
INSearchForMessagesIntent to

00:14:07.356 --> 00:14:08.256 A:middle
your app extension.

00:14:09.146 --> 00:14:10.446 A:middle
Your app extension has

00:14:10.446 --> 00:14:11.556 A:middle
implemented the

00:14:11.556 --> 00:14:13.106 A:middle
SearchForMessageIntent handle.

00:14:14.206 --> 00:14:16.206 A:middle
This handle is going to provide

00:14:16.206 --> 00:14:18.006 A:middle
the list of INMessages object

00:14:18.576 --> 00:14:19.846 A:middle
that Siri is going to read back

00:14:19.906 --> 00:14:20.456 A:middle
to the user.

00:14:21.676 --> 00:14:23.936 A:middle
As we notice, the INMessage

00:14:23.976 --> 00:14:26.566 A:middle
object contains a property named

00:14:26.566 --> 00:14:27.756 A:middle
conversationIdentifier.

00:14:29.026 --> 00:14:31.686 A:middle
This identifier represents the

00:14:31.686 --> 00:14:33.486 A:middle
uniqueness of that conversation.

00:14:34.626 --> 00:14:36.006 A:middle
With that uniqueness, you can

00:14:36.006 --> 00:14:37.616 A:middle
use that conversationIdentifier

00:14:37.846 --> 00:14:38.976 A:middle
when the user wants to reply

00:14:39.806 --> 00:14:39.906 A:middle
back.

00:14:41.146 --> 00:14:43.326 A:middle
As we see, Siri finished reading

00:14:43.326 --> 00:14:44.596 A:middle
the message and it will ask the

00:14:44.596 --> 00:14:45.896 A:middle
user if they want to reply.

00:14:47.516 --> 00:14:49.116 A:middle
To continue this flow, let's

00:14:49.116 --> 00:14:51.166 A:middle
assume the user wants to reply

00:14:51.626 --> 00:14:52.376 A:middle
saying hello.

00:14:52.896 --> 00:14:56.506 A:middle
Siri clearly understands the

00:14:56.506 --> 00:14:58.646 A:middle
user say just hello, meaning I

00:14:58.646 --> 00:14:59.996 A:middle
want to reply to this message

00:15:00.026 --> 00:15:01.726 A:middle
and I want it to say hello on my

00:15:01.726 --> 00:15:02.296 A:middle
content.

00:15:03.676 --> 00:15:05.146 A:middle
Siri is going to send down an

00:15:05.146 --> 00:15:07.016 A:middle
INSendMessageIntent with a

00:15:07.016 --> 00:15:08.326 A:middle
conversationIdentifier

00:15:08.416 --> 00:15:08.976 A:middle
populated.

00:15:09.716 --> 00:15:11.156 A:middle
This conversationIdentifier

00:15:11.156 --> 00:15:12.836 A:middle
value is the same one that you

00:15:12.836 --> 00:15:14.356 A:middle
populated on the INMessage

00:15:14.416 --> 00:15:16.306 A:middle
object that Siri used for

00:15:16.306 --> 00:15:17.106 A:middle
reading the message.

00:15:18.276 --> 00:15:20.206 A:middle
With this value, now it's

00:15:20.206 --> 00:15:20.946 A:middle
provided in the

00:15:20.946 --> 00:15:22.126 A:middle
resolveRecipients intent

00:15:22.126 --> 00:15:22.576 A:middle
parameter.

00:15:23.366 --> 00:15:24.826 A:middle
Would it-- we can short circuit

00:15:24.826 --> 00:15:26.236 A:middle
the contact resolution by

00:15:26.236 --> 00:15:27.776 A:middle
basically using it and going

00:15:27.776 --> 00:15:29.626 A:middle
straight to our messaging

00:15:29.626 --> 00:15:31.426 A:middle
conversation, grabbing that

00:15:31.426 --> 00:15:32.746 A:middle
conversation, getting the

00:15:32.746 --> 00:15:34.996 A:middle
recipients, and moving on to the

00:15:34.996 --> 00:15:36.486 A:middle
next step of replying to the

00:15:36.486 --> 00:15:36.916 A:middle
message.

00:15:41.556 --> 00:15:43.146 A:middle
To learn more about enabling

00:15:43.146 --> 00:15:44.506 A:middle
your app for CarPlay, I

00:15:44.506 --> 00:15:45.526 A:middle
recommend you take a look to

00:15:45.526 --> 00:15:47.276 A:middle
this video that we released this

00:15:47.806 --> 00:15:47.896 A:middle
year.

00:15:52.716 --> 00:15:56.036 A:middle
In addition to doing contact

00:15:56.036 --> 00:15:59.016 A:middle
resolution, we also had looked

00:15:59.016 --> 00:16:00.116 A:middle
at response codes.

00:16:01.226 --> 00:16:02.556 A:middle
Last year, when we introduced

00:16:02.556 --> 00:16:03.946 A:middle
SiriKit, we introduced a set of

00:16:03.946 --> 00:16:05.236 A:middle
response codes that you might be

00:16:05.236 --> 00:16:06.886 A:middle
familiar with on the messaging

00:16:06.886 --> 00:16:07.216 A:middle
world.

00:16:07.606 --> 00:16:09.216 A:middle
For example, when the service is

00:16:09.216 --> 00:16:11.046 A:middle
not available, you can return

00:16:11.046 --> 00:16:13.116 A:middle
back a failure service not

00:16:13.116 --> 00:16:14.596 A:middle
available and Siri will gladly

00:16:14.596 --> 00:16:16.436 A:middle
tell that to the user what went

00:16:16.436 --> 00:16:16.676 A:middle
wrong.

00:16:16.926 --> 00:16:19.646 A:middle
We look at that and we have

00:16:19.646 --> 00:16:21.646 A:middle
improved the response codes on

00:16:22.626 --> 00:16:24.646 A:middle
calling intents, messaging

00:16:24.646 --> 00:16:27.306 A:middle
intents, and payment intents.

00:16:27.986 --> 00:16:30.026 A:middle
In this case, I have an example

00:16:30.086 --> 00:16:32.046 A:middle
of a call intent where we

00:16:32.046 --> 00:16:33.486 A:middle
introduced an invalid number

00:16:33.486 --> 00:16:35.336 A:middle
response code and it will help

00:16:35.336 --> 00:16:36.706 A:middle
us to be more transparent to the

00:16:36.706 --> 00:16:39.436 A:middle
user when the intent created

00:16:39.436 --> 00:16:40.646 A:middle
doesn't have a valid number.

00:16:41.276 --> 00:16:42.646 A:middle
That way Siri will provide a

00:16:42.646 --> 00:16:44.726 A:middle
nice experience and it will be

00:16:44.816 --> 00:16:46.796 A:middle
pretty clear what went wrong.

00:16:47.536 --> 00:16:49.006 A:middle
For more information for this,

00:16:49.216 --> 00:16:49.736 A:middle
you can look at the

00:16:49.736 --> 00:16:50.516 A:middle
documentation.

00:16:52.456 --> 00:16:54.546 A:middle
To recap what we have covered so

00:16:54.546 --> 00:16:56.306 A:middle
far, we talked about

00:16:56.306 --> 00:16:58.226 A:middle
INPerson.siriMatches, the new

00:16:58.226 --> 00:16:59.766 A:middle
property that we introduced on

00:16:59.876 --> 00:17:02.796 A:middle
iOS 10.3 that can help you do

00:17:02.796 --> 00:17:04.016 A:middle
better contact resolution

00:17:04.016 --> 00:17:04.396 A:middle
handling.

00:17:05.466 --> 00:17:06.946 A:middle
After that, we walked through

00:17:06.946 --> 00:17:08.106 A:middle
the process of resolving

00:17:08.106 --> 00:17:09.706 A:middle
multiple handles, meaning

00:17:09.806 --> 00:17:11.606 A:middle
multiple phone numbers or email

00:17:11.606 --> 00:17:13.356 A:middle
addresses or a combination of

00:17:13.356 --> 00:17:13.626 A:middle
both.

00:17:16.296 --> 00:17:17.956 A:middle
We also covered the introduction

00:17:18.086 --> 00:17:19.576 A:middle
of the conversationIdentifier

00:17:19.656 --> 00:17:21.506 A:middle
and how it's helpful to replying

00:17:21.506 --> 00:17:23.666 A:middle
messages that Siri just read.

00:17:24.936 --> 00:17:26.866 A:middle
And we also briefly covered

00:17:26.866 --> 00:17:27.796 A:middle
response codes and the

00:17:27.796 --> 00:17:29.676 A:middle
enhancement we have provided in

00:17:29.736 --> 00:17:30.386 A:middle
iOS 11.

00:17:31.646 --> 00:17:32.896 A:middle
With that, I'm going to hand

00:17:32.896 --> 00:17:34.636 A:middle
over to my coworker Rohit so he

00:17:34.636 --> 00:17:35.826 A:middle
can talk to you more about

00:17:35.826 --> 00:17:36.356 A:middle
security.

00:17:37.516 --> 00:17:42.366 A:middle
[ Applause ]

00:17:42.866 --> 00:17:43.526 A:middle
&gt;&gt; Thank you, Angel.

00:17:45.056 --> 00:17:46.096 A:middle
Hello everyone.

00:17:46.726 --> 00:17:48.516 A:middle
My name is Rohit Dasari.

00:17:48.586 --> 00:17:49.866 A:middle
I work on the SiriKit team.

00:17:50.486 --> 00:17:52.026 A:middle
So, let's talk about security in

00:17:52.026 --> 00:17:53.316 A:middle
the context of SiriKit.

00:17:53.846 --> 00:17:56.876 A:middle
Let's go back to the example of

00:17:56.876 --> 00:17:58.106 A:middle
UnicornChat which we saw

00:17:58.106 --> 00:17:58.436 A:middle
earlier.

00:17:59.486 --> 00:18:00.686 A:middle
You see here that the user is

00:18:00.686 --> 00:18:02.366 A:middle
able to send a message even when

00:18:02.366 --> 00:18:03.476 A:middle
the device is locked.

00:18:04.076 --> 00:18:05.466 A:middle
Now, Siri lets this through

00:18:05.996 --> 00:18:07.656 A:middle
makes-- Siri makes a decision

00:18:07.926 --> 00:18:09.696 A:middle
based on the intent whether--

00:18:09.696 --> 00:18:12.456 A:middle
how to balance usability and

00:18:12.456 --> 00:18:14.166 A:middle
convenience with security.

00:18:15.366 --> 00:18:16.946 A:middle
In this case, for the messaging

00:18:16.946 --> 00:18:18.786 A:middle
case, Siri lets requests through

00:18:18.786 --> 00:18:20.086 A:middle
even when the device is locked.

00:18:20.956 --> 00:18:23.366 A:middle
Some of you might be required to

00:18:23.436 --> 00:18:24.786 A:middle
ask the user to unlock the

00:18:24.786 --> 00:18:26.566 A:middle
device before handling intents

00:18:26.566 --> 00:18:27.236 A:middle
of this kind.

00:18:28.636 --> 00:18:29.746 A:middle
This might be due to some

00:18:29.746 --> 00:18:31.956 A:middle
security policies or some

00:18:31.956 --> 00:18:34.136 A:middle
corporate or legal requirements

00:18:34.136 --> 00:18:35.596 A:middle
that your app has to conform to.

00:18:37.156 --> 00:18:39.236 A:middle
There's a way to do this with

00:18:39.496 --> 00:18:42.296 A:middle
the current SiriKit mechanisms

00:18:42.676 --> 00:18:44.056 A:middle
without any code changes.

00:18:44.056 --> 00:18:45.596 A:middle
That is zero code changes.

00:18:47.676 --> 00:18:50.106 A:middle
All you have to do is go into

00:18:50.106 --> 00:18:52.856 A:middle
the info.plist of your SiriKit

00:18:52.856 --> 00:18:56.696 A:middle
intents extension and in the

00:18:56.696 --> 00:18:58.406 A:middle
place where you list the intents

00:18:58.626 --> 00:19:00.106 A:middle
that your extension supports,

00:19:01.026 --> 00:19:05.156 A:middle
add this entry for the intents

00:19:05.156 --> 00:19:06.086 A:middle
you want to restrict.

00:19:07.156 --> 00:19:08.106 A:middle
The section is called

00:19:08.156 --> 00:19:09.816 A:middle
IntentsRestrictedWhileLocked,

00:19:09.816 --> 00:19:10.996 A:middle
which speaks for itself.

00:19:11.946 --> 00:19:14.866 A:middle
So, with this one change, Siri

00:19:14.866 --> 00:19:18.386 A:middle
now knows that when the user

00:19:18.386 --> 00:19:22.316 A:middle
wants to perform an intent which

00:19:22.316 --> 00:19:25.346 A:middle
falls into this category, the

00:19:25.346 --> 00:19:27.336 A:middle
device must first be unlocked.

00:19:29.336 --> 00:19:31.026 A:middle
Zero lines of code change.

00:19:34.976 --> 00:19:37.386 A:middle
But sometimes that's not enough.

00:19:37.966 --> 00:19:39.036 A:middle
Unlocking the device is not

00:19:39.036 --> 00:19:39.456 A:middle
enough.

00:19:40.036 --> 00:19:41.496 A:middle
Let's take this example of an

00:19:41.496 --> 00:19:45.236 A:middle
app which users can use to lock

00:19:45.236 --> 00:19:46.566 A:middle
and unlock their cars.

00:19:47.556 --> 00:19:49.276 A:middle
For an app like this to

00:19:49.276 --> 00:19:51.286 A:middle
integrate with SiriKit, it has

00:19:51.286 --> 00:19:53.646 A:middle
to handle an intent called

00:19:54.056 --> 00:19:56.556 A:middle
setCarLockStatusIntent.

00:19:57.676 --> 00:19:58.936 A:middle
This is an intent we added in

00:19:59.306 --> 00:20:00.616 A:middle
iOS 10.3.

00:20:01.156 --> 00:20:03.956 A:middle
Let's take a quick look at this

00:20:03.956 --> 00:20:04.426 A:middle
intent.

00:20:04.976 --> 00:20:06.066 A:middle
It's a pretty simple intent.

00:20:06.576 --> 00:20:07.846 A:middle
There are two properties.

00:20:08.596 --> 00:20:09.856 A:middle
The name of the car you want to

00:20:09.856 --> 00:20:13.336 A:middle
lock or unlock and the state

00:20:13.426 --> 00:20:14.646 A:middle
that you want to set on that

00:20:14.646 --> 00:20:14.816 A:middle
car.

00:20:17.706 --> 00:20:19.626 A:middle
Once the app provides an

00:20:19.626 --> 00:20:20.806 A:middle
extension that handles this

00:20:20.806 --> 00:20:23.166 A:middle
intent, it can handle commands

00:20:23.166 --> 00:20:25.046 A:middle
like this where the user can say

00:20:25.046 --> 00:20:27.616 A:middle
unlock my car and Siri will know

00:20:27.616 --> 00:20:29.456 A:middle
to invoke the app extension,

00:20:29.456 --> 00:20:30.936 A:middle
give it intent, and let the

00:20:30.936 --> 00:20:32.816 A:middle
intent-- and let the extension

00:20:32.816 --> 00:20:33.256 A:middle
handle it.

00:20:34.156 --> 00:20:35.336 A:middle
Notice I'm not saying the name

00:20:35.336 --> 00:20:36.076 A:middle
of the app here.

00:20:36.656 --> 00:20:38.096 A:middle
This is because Siri is smart

00:20:38.096 --> 00:20:39.376 A:middle
enough to know when there is

00:20:39.376 --> 00:20:41.396 A:middle
only one qualifying app to

00:20:41.396 --> 00:20:42.776 A:middle
handle a particular intent and

00:20:43.216 --> 00:20:45.536 A:middle
it will not ask the user for

00:20:45.636 --> 00:20:47.466 A:middle
either confirming the name of

00:20:47.466 --> 00:20:48.926 A:middle
the app or for disambiguating.

00:20:50.106 --> 00:20:51.606 A:middle
So, with this intent handled,

00:20:52.306 --> 00:20:54.886 A:middle
the example app I have reflects

00:20:54.886 --> 00:20:56.186 A:middle
the change in the state of the

00:20:56.186 --> 00:20:58.476 A:middle
car's doors by showing it

00:20:58.476 --> 00:20:59.756 A:middle
graphically, as you can see

00:21:00.406 --> 00:21:00.496 A:middle
here.

00:21:01.396 --> 00:21:03.096 A:middle
So, this is a pretty sensitive

00:21:03.096 --> 00:21:03.586 A:middle
transaction.

00:21:03.586 --> 00:21:04.896 A:middle
You are unlocking somebody's

00:21:04.896 --> 00:21:05.296 A:middle
car.

00:21:06.026 --> 00:21:07.806 A:middle
So, for transactions like this,

00:21:07.806 --> 00:21:09.026 A:middle
even when the device is

00:21:09.026 --> 00:21:10.596 A:middle
unlocked, you might want to

00:21:10.596 --> 00:21:12.676 A:middle
present another authorization

00:21:12.676 --> 00:21:13.536 A:middle
request to the user.

00:21:14.986 --> 00:21:17.936 A:middle
We recommend you use the secure

00:21:17.936 --> 00:21:19.526 A:middle
authorization mechanism which is

00:21:19.686 --> 00:21:21.986 A:middle
already built into iOS, which is

00:21:22.156 --> 00:21:22.636 A:middle
Touch ID.

00:21:23.736 --> 00:21:24.966 A:middle
Using the local authentication

00:21:24.966 --> 00:21:27.736 A:middle
API, you can even customize the

00:21:27.736 --> 00:21:29.906 A:middle
prompt which is shown along with

00:21:29.906 --> 00:21:32.016 A:middle
the Touch ID to tell the user to

00:21:32.016 --> 00:21:33.916 A:middle
give the user some context about

00:21:33.916 --> 00:21:35.396 A:middle
why they're being asked to

00:21:35.396 --> 00:21:37.866 A:middle
authorize all over again even

00:21:37.866 --> 00:21:38.896 A:middle
when the device is locked--

00:21:38.896 --> 00:21:39.326 A:middle
unlocked.

00:21:41.586 --> 00:21:43.036 A:middle
In case your device does not--

00:21:43.116 --> 00:21:44.696 A:middle
in case the user's device does

00:21:44.696 --> 00:21:46.466 A:middle
not support Touch ID or maybe

00:21:46.466 --> 00:21:47.666 A:middle
the user has not configured

00:21:47.666 --> 00:21:50.326 A:middle
Touch ID yet on that device, the

00:21:50.326 --> 00:21:52.066 A:middle
local authentication API allows

00:21:52.066 --> 00:21:53.986 A:middle
you to fall back to unlocking

00:21:53.986 --> 00:21:55.326 A:middle
the device using just the

00:21:55.326 --> 00:21:55.896 A:middle
passcode.

00:21:57.506 --> 00:21:58.726 A:middle
You notice it has the same

00:21:58.936 --> 00:22:00.356 A:middle
customized string which is

00:22:00.626 --> 00:22:02.366 A:middle
provided by your app over here

00:22:02.366 --> 00:22:03.896 A:middle
to give the user some context.

00:22:04.906 --> 00:22:06.256 A:middle
This is pretty simple to do.

00:22:06.556 --> 00:22:08.076 A:middle
Let me show you a demo of how to

00:22:08.076 --> 00:22:08.426 A:middle
do it.

00:22:09.136 --> 00:22:11.076 A:middle
So, what I have here is the

00:22:11.076 --> 00:22:12.796 A:middle
intent handler for the

00:22:12.796 --> 00:22:15.376 A:middle
setCarLockStatusIntent of the

00:22:15.376 --> 00:22:16.926 A:middle
test app I just showed you.

00:22:18.196 --> 00:22:19.596 A:middle
Let us see what this app looks

00:22:19.596 --> 00:22:19.876 A:middle
like.

00:22:22.636 --> 00:22:23.906 A:middle
As we saw, there is a

00:22:23.906 --> 00:22:25.936 A:middle
representation of the car, of

00:22:25.996 --> 00:22:28.086 A:middle
the user's car, and this also

00:22:28.086 --> 00:22:29.736 A:middle
represents the state of the car,

00:22:29.736 --> 00:22:30.916 A:middle
whether it's locked or unlocked.

00:22:31.126 --> 00:22:33.606 A:middle
In this case, it's locked and I

00:22:33.606 --> 00:22:34.706 A:middle
can unlock it with a tap.

00:22:35.366 --> 00:22:40.966 A:middle
Set it to the lock state and I

00:22:40.966 --> 00:22:42.876 A:middle
want to ask Siri to unlock the

00:22:42.876 --> 00:22:44.336 A:middle
car using this app.

00:22:44.736 --> 00:22:46.826 A:middle
So, as my colleague Angel showed

00:22:46.826 --> 00:22:48.946 A:middle
earlier, I'm going to use the

00:22:48.946 --> 00:22:51.436 A:middle
scheme editor to enter the

00:22:51.436 --> 00:22:53.026 A:middle
request I want to send to Siri

00:22:54.386 --> 00:22:56.406 A:middle
and I'm going to issue the

00:22:56.406 --> 00:22:57.006 A:middle
request.

00:23:00.896 --> 00:23:02.576 A:middle
The scheme editor is very handy,

00:23:02.576 --> 00:23:04.056 A:middle
in case you haven't realized.

00:23:05.006 --> 00:23:05.946 A:middle
It saves you the trouble of

00:23:05.946 --> 00:23:06.926 A:middle
speaking to your phone when you

00:23:06.926 --> 00:23:08.466 A:middle
are testing, which is really

00:23:08.466 --> 00:23:10.216 A:middle
useful in a shared workspace

00:23:10.216 --> 00:23:10.726 A:middle
environment.

00:23:11.996 --> 00:23:15.346 A:middle
So, in this case, Siri has

00:23:15.346 --> 00:23:16.736 A:middle
handled the request, given it to

00:23:16.736 --> 00:23:18.536 A:middle
the app, and has reported

00:23:18.536 --> 00:23:18.986 A:middle
success.

00:23:19.736 --> 00:23:21.526 A:middle
Let us confirm that it actually

00:23:21.526 --> 00:23:22.356 A:middle
did unlock the car.

00:23:23.216 --> 00:23:25.456 A:middle
So, now the car is-- state is

00:23:25.456 --> 00:23:27.436 A:middle
update-- is updated to show that

00:23:27.436 --> 00:23:28.216 A:middle
it has been unlocked.

00:23:28.796 --> 00:23:30.856 A:middle
Let's go back to the intent

00:23:30.896 --> 00:23:31.236 A:middle
handler.

00:23:32.796 --> 00:23:36.056 A:middle
This intent handler extracts the

00:23:36.056 --> 00:23:37.536 A:middle
fields that we saw on the

00:23:37.536 --> 00:23:39.186 A:middle
intent, which is should I lock

00:23:39.186 --> 00:23:41.346 A:middle
the car or unlock the car and

00:23:42.596 --> 00:23:44.586 A:middle
the-- and it looks up an

00:23:44.586 --> 00:23:46.956 A:middle
internal car object matching the

00:23:46.956 --> 00:23:48.076 A:middle
name on the intent.

00:23:49.676 --> 00:23:52.886 A:middle
Then it sets the lock state on

00:23:52.886 --> 00:23:55.026 A:middle
the car object based on the

00:23:55.026 --> 00:23:56.446 A:middle
input on the intent.

00:23:57.206 --> 00:23:59.026 A:middle
And, finally, after having--

00:23:59.026 --> 00:24:01.156 A:middle
after having changed the state

00:24:01.156 --> 00:24:03.196 A:middle
of the car, it returns a success

00:24:03.196 --> 00:24:05.056 A:middle
response to Siri.

00:24:06.286 --> 00:24:08.056 A:middle
In case of a failure or in case

00:24:08.056 --> 00:24:10.406 A:middle
when there is no-- when there is

00:24:10.406 --> 00:24:11.756 A:middle
not enough information on the

00:24:11.756 --> 00:24:14.046 A:middle
intent, it returns a failure

00:24:14.046 --> 00:24:14.566 A:middle
response.

00:24:15.876 --> 00:24:18.526 A:middle
So, you notice how that this

00:24:18.526 --> 00:24:20.226 A:middle
extent-- this intent handler is

00:24:20.226 --> 00:24:21.636 A:middle
unconditionally handling the

00:24:21.636 --> 00:24:23.286 A:middle
request that the user gave it.

00:24:24.196 --> 00:24:25.886 A:middle
We want to add a prompt here

00:24:26.006 --> 00:24:27.496 A:middle
using the local authentication

00:24:27.496 --> 00:24:27.756 A:middle
API.

00:24:28.836 --> 00:24:31.866 A:middle
So, once we confirmed that the

00:24:31.866 --> 00:24:33.316 A:middle
intent has all the parameters we

00:24:33.316 --> 00:24:35.136 A:middle
need, let's call the local

00:24:35.136 --> 00:24:39.976 A:middle
authentication API.

00:24:40.146 --> 00:24:41.036 A:middle
In order to call the local

00:24:41.036 --> 00:24:43.896 A:middle
authentication API, I'm first

00:24:45.106 --> 00:24:47.826 A:middle
generating a string based on the

00:24:47.826 --> 00:24:49.866 A:middle
lock state that is requested.

00:24:51.206 --> 00:24:53.066 A:middle
That is if it is-- if the user

00:24:53.066 --> 00:24:54.436 A:middle
wants me to lock the car, then I

00:24:54.436 --> 00:24:55.716 A:middle
will show the appropriate

00:24:55.716 --> 00:24:56.056 A:middle
prompt.

00:24:57.376 --> 00:24:58.766 A:middle
Then, to the local

00:24:58.766 --> 00:25:00.806 A:middle
authentication context, I'm

00:25:00.806 --> 00:25:03.276 A:middle
going to ask it to evaluate a

00:25:03.276 --> 00:25:04.116 A:middle
certain policy.

00:25:04.906 --> 00:25:06.576 A:middle
In this case, I'm asking it to

00:25:06.576 --> 00:25:07.956 A:middle
evaluate the device owner

00:25:07.956 --> 00:25:09.096 A:middle
authentication policy.

00:25:09.696 --> 00:25:11.496 A:middle
This is a policy which attempts

00:25:11.596 --> 00:25:13.086 A:middle
to do a Touch ID prompt first

00:25:13.086 --> 00:25:14.436 A:middle
and if that doesn't work it

00:25:14.436 --> 00:25:15.766 A:middle
falls back to the device

00:25:15.806 --> 00:25:18.166 A:middle
passcode prompt.

00:25:18.296 --> 00:25:19.896 A:middle
Next, I pass in the prompt

00:25:19.896 --> 00:25:21.436 A:middle
string which I just generated in

00:25:21.436 --> 00:25:23.406 A:middle
the previous line, and finally I

00:25:23.406 --> 00:25:24.346 A:middle
have the reply block.

00:25:24.996 --> 00:25:26.146 A:middle
So, let's fill in the reply

00:25:26.146 --> 00:25:26.426 A:middle
block.

00:25:29.476 --> 00:25:31.776 A:middle
If the user has granted access

00:25:32.266 --> 00:25:33.626 A:middle
via Touch ID or a device

00:25:33.626 --> 00:25:35.526 A:middle
passcode prompt, I'm going to go

00:25:35.526 --> 00:25:38.416 A:middle
ahead and change the state of

00:25:38.416 --> 00:25:40.516 A:middle
the car as I did earlier without

00:25:40.516 --> 00:25:41.576 A:middle
prompting, but this time I'm

00:25:41.576 --> 00:25:42.876 A:middle
actually waiting for the user to

00:25:42.876 --> 00:25:43.786 A:middle
give me access.

00:25:44.166 --> 00:25:46.876 A:middle
And then I'm going to call the

00:25:46.876 --> 00:25:49.236 A:middle
completion block with the

00:25:49.236 --> 00:25:50.956 A:middle
success response to tell Siri

00:25:50.956 --> 00:25:53.166 A:middle
that request has been completed

00:25:53.516 --> 00:25:54.086 A:middle
successfully.

00:25:54.496 --> 00:25:56.906 A:middle
I also need to tell Siri when

00:25:56.906 --> 00:25:58.696 A:middle
there is a failure, that is if

00:25:58.696 --> 00:26:00.706 A:middle
the access was not granted, then

00:26:00.706 --> 00:26:02.036 A:middle
I need to tell Siri that there

00:26:02.036 --> 00:26:02.636 A:middle
was a failure.

00:26:03.026 --> 00:26:05.256 A:middle
I do that by returning a failure

00:26:05.256 --> 00:26:06.826 A:middle
response using the same

00:26:06.826 --> 00:26:07.606 A:middle
completion block.

00:26:09.116 --> 00:26:11.566 A:middle
So, with this change, let us go

00:26:11.566 --> 00:26:13.596 A:middle
and see if unlocking the car

00:26:14.876 --> 00:26:16.406 A:middle
prompts the user to do

00:26:17.956 --> 00:26:18.716 A:middle
authentication.

00:26:19.826 --> 00:26:21.176 A:middle
So, let's restore the car state

00:26:21.176 --> 00:26:24.806 A:middle
back to being locked and run

00:26:24.806 --> 00:26:25.146 A:middle
this.

00:26:26.466 --> 00:26:28.066 A:middle
I'm using the same request as

00:26:28.066 --> 00:26:29.526 A:middle
earlier, which is unlock my car.

00:26:44.186 --> 00:26:46.366 A:middle
So, you notice during the Siri

00:26:46.366 --> 00:26:48.176 A:middle
request a prompt comes up.

00:26:48.886 --> 00:26:50.296 A:middle
If the simulator was configured

00:26:50.296 --> 00:26:51.526 A:middle
to do a Touch ID, it would have

00:26:51.526 --> 00:26:52.556 A:middle
shown a Touch ID prompt.

00:26:53.406 --> 00:26:54.626 A:middle
In this case, I configured it to

00:26:54.626 --> 00:26:56.756 A:middle
do device passcode prompt.

00:26:56.976 --> 00:27:00.076 A:middle
So, let me enter my super secure

00:27:00.076 --> 00:27:00.916 A:middle
password.

00:27:00.916 --> 00:27:01.876 A:middle
Please look away.

00:27:05.696 --> 00:27:07.026 A:middle
And once I've entered the

00:27:07.026 --> 00:27:09.796 A:middle
password, the request went

00:27:09.796 --> 00:27:10.076 A:middle
through.

00:27:10.756 --> 00:27:12.036 A:middle
Let us confirm that it actually

00:27:12.036 --> 00:27:12.916 A:middle
went through by launching the

00:27:12.916 --> 00:27:12.983 A:middle
app.

00:27:15.096 --> 00:27:16.676 A:middle
Yep. The car was unlocked.

00:27:17.516 --> 00:27:25.656 A:middle
[ Applause ]

00:27:26.156 --> 00:27:28.106 A:middle
So, with a few lines of code, we

00:27:28.106 --> 00:27:29.496 A:middle
were able to add a local

00:27:29.496 --> 00:27:31.736 A:middle
authentication prompt during a

00:27:31.736 --> 00:27:34.416 A:middle
Siri request.

00:27:34.506 --> 00:27:35.836 A:middle
Using the local authentication

00:27:35.836 --> 00:27:38.496 A:middle
API allows you to do multiple

00:27:38.496 --> 00:27:39.686 A:middle
forms of authentication.

00:27:40.496 --> 00:27:41.986 A:middle
Touch ID, if supported and

00:27:41.986 --> 00:27:44.316 A:middle
configured, or a device passcode

00:27:44.796 --> 00:27:45.276 A:middle
if not.

00:27:46.896 --> 00:27:48.396 A:middle
The place where you call this

00:27:48.396 --> 00:27:50.806 A:middle
local authentication API is in

00:27:50.806 --> 00:27:52.296 A:middle
the handle method of your intent

00:27:52.296 --> 00:27:53.956 A:middle
handler before calling the

00:27:53.956 --> 00:27:54.646 A:middle
completion block.

00:27:56.696 --> 00:27:58.136 A:middle
And because the local

00:27:58.136 --> 00:27:59.636 A:middle
authentication framework is part

00:27:59.636 --> 00:28:01.526 A:middle
of the system, Siri knows to

00:28:01.526 --> 00:28:04.436 A:middle
coordinate with it so that if

00:28:04.436 --> 00:28:07.266 A:middle
the user has made a request over

00:28:07.266 --> 00:28:10.536 A:middle
Hey Siri, then the request waits

00:28:10.536 --> 00:28:12.456 A:middle
for the user for a prompt to be

00:28:12.456 --> 00:28:16.276 A:middle
responded to.

00:28:16.506 --> 00:28:17.786 A:middle
To learn more about the local

00:28:17.786 --> 00:28:19.696 A:middle
authentication API, we refer you

00:28:19.696 --> 00:28:24.516 A:middle
to this talk from 2014.

00:28:24.636 --> 00:28:26.016 A:middle
Some of you might be working on

00:28:26.016 --> 00:28:28.666 A:middle
apps which require a payment to

00:28:28.666 --> 00:28:30.516 A:middle
be completed before a Siri

00:28:30.516 --> 00:28:31.956 A:middle
request can be satisfied.

00:28:34.996 --> 00:28:37.666 A:middle
In this example, the user wants

00:28:37.666 --> 00:28:39.036 A:middle
to book a RainbowCar on

00:28:39.036 --> 00:28:42.556 A:middle
UnicornRides and you need a

00:28:42.556 --> 00:28:44.286 A:middle
payment to be made from the user

00:28:44.376 --> 00:28:45.596 A:middle
before you can accept this

00:28:45.596 --> 00:28:46.146 A:middle
request.

00:28:47.016 --> 00:28:48.856 A:middle
We recommend you use the secure

00:28:48.856 --> 00:28:51.736 A:middle
Apple Pay API for handling

00:28:51.736 --> 00:28:53.436 A:middle
payment transactions during your

00:28:53.436 --> 00:28:54.236 A:middle
Siri request.

00:28:54.976 --> 00:28:56.696 A:middle
Using the Apply Pay API gives

00:28:56.696 --> 00:28:58.666 A:middle
you the same advantages as using

00:28:58.666 --> 00:28:59.906 A:middle
the local authentication API,

00:29:00.376 --> 00:29:03.216 A:middle
which is you get coordination

00:29:03.216 --> 00:29:05.576 A:middle
with Siri and the place where

00:29:05.576 --> 00:29:06.916 A:middle
you could call this API is in

00:29:06.916 --> 00:29:08.306 A:middle
the same place that is in the

00:29:08.306 --> 00:29:09.866 A:middle
handle method before you call

00:29:09.866 --> 00:29:10.626 A:middle
the completion block.

00:29:14.596 --> 00:29:16.036 A:middle
Now let's talk about teaching

00:29:16.036 --> 00:29:17.366 A:middle
Siri new words.

00:29:21.276 --> 00:29:23.126 A:middle
Let's take this example of an

00:29:23.256 --> 00:29:25.636 A:middle
app called UnicornPay which

00:29:25.636 --> 00:29:28.346 A:middle
allows the user to query account

00:29:28.346 --> 00:29:30.276 A:middle
balances on their accounts.

00:29:32.456 --> 00:29:34.316 A:middle
This-- an app like this might

00:29:34.316 --> 00:29:36.626 A:middle
also allow users to give names

00:29:36.676 --> 00:29:38.296 A:middle
to accounts in the app.

00:29:38.576 --> 00:29:39.836 A:middle
Now, these names are user

00:29:39.836 --> 00:29:42.656 A:middle
configured, so they need not be

00:29:42.656 --> 00:29:44.016 A:middle
real English words.

00:29:44.566 --> 00:29:46.016 A:middle
In this example, we have an

00:29:46.016 --> 00:29:48.446 A:middle
account called NestEgg, which

00:29:48.446 --> 00:29:50.036 A:middle
would have been a word, except

00:29:50.036 --> 00:29:50.986 A:middle
there is no space.

00:29:51.426 --> 00:29:53.066 A:middle
So, it's made of two English

00:29:53.066 --> 00:29:55.346 A:middle
words, which, without help, Siri

00:29:55.346 --> 00:29:56.696 A:middle
might not be able to recognize.

00:29:58.836 --> 00:30:00.666 A:middle
When we introduced SiriKit last

00:30:00.666 --> 00:30:03.136 A:middle
year, we talked about some

00:30:03.136 --> 00:30:05.946 A:middle
mechanisms that will allow you

00:30:05.946 --> 00:30:07.926 A:middle
to help Siri understand words

00:30:07.926 --> 00:30:08.486 A:middle
like these.

00:30:09.186 --> 00:30:11.066 A:middle
These words are not unique to an

00:30:11.656 --> 00:30:12.576 A:middle
app, but are unique to a

00:30:12.576 --> 00:30:16.706 A:middle
particular user of that app.

00:30:16.706 --> 00:30:19.076 A:middle
Examples of these are names of

00:30:19.076 --> 00:30:21.196 A:middle
photo albums, names of workouts,

00:30:21.196 --> 00:30:21.826 A:middle
and so on.

00:30:25.656 --> 00:30:27.536 A:middle
The mechanism that we recommend

00:30:27.696 --> 00:30:29.706 A:middle
you use to teach Siri these

00:30:29.706 --> 00:30:32.896 A:middle
words is the INVocabulary API.

00:30:35.796 --> 00:30:39.776 A:middle
To get a refresher about custom

00:30:39.776 --> 00:30:42.076 A:middle
vocabulary introduction, we

00:30:42.076 --> 00:30:43.186 A:middle
refer you to these talks from

00:30:43.186 --> 00:30:44.376 A:middle
last year when we introduced

00:30:44.376 --> 00:30:46.826 A:middle
SiriKit, but today let's dive

00:30:46.826 --> 00:30:49.046 A:middle
deeper into the INVocabulary

00:30:49.636 --> 00:30:49.736 A:middle
API.

00:30:50.476 --> 00:30:51.996 A:middle
The API is pretty simple.

00:30:52.206 --> 00:30:54.496 A:middle
It has one method which takes an

00:30:54.606 --> 00:30:57.956 A:middle
NSOrderedSet of vocabulary

00:30:57.956 --> 00:31:01.266 A:middle
strings and this set is meant

00:31:01.266 --> 00:31:04.226 A:middle
for a particular vocabulary item

00:31:04.226 --> 00:31:04.476 A:middle
type.

00:31:04.476 --> 00:31:06.296 A:middle
For example, a photo album name

00:31:06.496 --> 00:31:07.286 A:middle
or a workout name.

00:31:07.886 --> 00:31:10.376 A:middle
Note that this is an ordered

00:31:10.376 --> 00:31:12.686 A:middle
set, which means that Siri gives

00:31:12.746 --> 00:31:15.376 A:middle
preference to the words towards

00:31:15.416 --> 00:31:18.186 A:middle
the beginning of the set.

00:31:18.396 --> 00:31:21.076 A:middle
But also note that these are

00:31:21.076 --> 00:31:22.206 A:middle
strings that you're teaching

00:31:22.206 --> 00:31:22.536 A:middle
Siri.

00:31:22.636 --> 00:31:24.206 A:middle
Plain strings with no context

00:31:24.206 --> 00:31:24.636 A:middle
around them.

00:31:25.996 --> 00:31:27.466 A:middle
That might have some

00:31:27.466 --> 00:31:28.066 A:middle
limitations.

00:31:29.076 --> 00:31:30.806 A:middle
Let us see what those

00:31:30.806 --> 00:31:33.326 A:middle
limitations are by diving deeper

00:31:33.326 --> 00:31:35.066 A:middle
into how this would actually

00:31:35.776 --> 00:31:35.866 A:middle
work.

00:31:37.056 --> 00:31:38.666 A:middle
Here we have an application

00:31:39.056 --> 00:31:41.846 A:middle
where in its private store has

00:31:41.976 --> 00:31:44.406 A:middle
some accounts which are named by

00:31:44.406 --> 00:31:44.856 A:middle
the user.

00:31:45.696 --> 00:31:47.506 A:middle
To tell Siri about these

00:31:47.506 --> 00:31:49.946 A:middle
accounts, the app would use the

00:31:49.946 --> 00:31:53.216 A:middle
INVocabulary API and send those

00:31:53.216 --> 00:31:56.056 A:middle
strings using the API which we

00:31:56.056 --> 00:31:57.076 A:middle
just saw.

00:31:57.936 --> 00:31:59.936 A:middle
With this knowledge, now Siri is

00:31:59.936 --> 00:32:02.246 A:middle
aware of these new words and the

00:32:02.246 --> 00:32:03.636 A:middle
next time the user makes a

00:32:03.636 --> 00:32:05.686 A:middle
request that uses one of these

00:32:05.686 --> 00:32:08.876 A:middle
words, Siri is capable of

00:32:08.876 --> 00:32:10.316 A:middle
looking up the knowledge that

00:32:10.316 --> 00:32:12.386 A:middle
the app has given it and

00:32:13.216 --> 00:32:14.896 A:middle
identifying candidates in the

00:32:14.896 --> 00:32:18.426 A:middle
user's input that match a custom

00:32:18.426 --> 00:32:21.586 A:middle
word like this and recognize it

00:32:21.586 --> 00:32:22.836 A:middle
correctly as the user would

00:32:22.836 --> 00:32:23.596 A:middle
expect to see.

00:32:24.526 --> 00:32:25.686 A:middle
Now, once this word has been

00:32:25.686 --> 00:32:28.006 A:middle
recognized, Siri will be able to

00:32:28.006 --> 00:32:29.026 A:middle
give this word to the

00:32:29.026 --> 00:32:31.216 A:middle
application's intents extension

00:32:31.556 --> 00:32:33.996 A:middle
and expect it to use that word

00:32:34.276 --> 00:32:35.576 A:middle
to look up the corresponding

00:32:35.576 --> 00:32:36.576 A:middle
object in the store.

00:32:37.696 --> 00:32:39.216 A:middle
But note that this is just a

00:32:39.216 --> 00:32:41.046 A:middle
plain string with no context

00:32:41.046 --> 00:32:41.546 A:middle
around it.

00:32:42.126 --> 00:32:44.156 A:middle
So, your application might not

00:32:44.156 --> 00:32:47.406 A:middle
have enough information to look

00:32:47.406 --> 00:32:48.976 A:middle
it up unambiguously.

00:32:49.236 --> 00:32:52.296 A:middle
It might have to-- it might have

00:32:52.296 --> 00:32:55.266 A:middle
to do fuzzy match, it might not

00:32:55.266 --> 00:32:58.106 A:middle
be an index based on the string

00:32:58.106 --> 00:32:59.846 A:middle
in your application store.

00:33:00.426 --> 00:33:02.126 A:middle
So, this is not an ideal

00:33:02.126 --> 00:33:02.776 A:middle
situation.

00:33:03.496 --> 00:33:05.766 A:middle
In iOS 11, we thought we could

00:33:05.766 --> 00:33:08.776 A:middle
make this better.

00:33:08.946 --> 00:33:11.266 A:middle
We added this new API which

00:33:11.266 --> 00:33:13.856 A:middle
allows you to send Siri

00:33:14.236 --> 00:33:17.836 A:middle
objects-- any objects-- as long

00:33:17.836 --> 00:33:19.526 A:middle
as they conform to an

00:33:19.626 --> 00:33:20.876 A:middle
INSpeakable protocol.

00:33:22.576 --> 00:33:25.276 A:middle
Again, these objects have to be

00:33:25.316 --> 00:33:27.056 A:middle
in an ordered set which follow

00:33:27.056 --> 00:33:28.696 A:middle
the same rules as the strings in

00:33:28.696 --> 00:33:31.316 A:middle
the older API and they are meant

00:33:31.366 --> 00:33:34.006 A:middle
for a particular parameter type.

00:33:34.706 --> 00:33:37.416 A:middle
Let's take a deeper look at what

00:33:37.416 --> 00:33:38.296 A:middle
this protocol is.

00:33:39.896 --> 00:33:42.976 A:middle
The INSpeakable protocol is a

00:33:43.206 --> 00:33:45.296 A:middle
detailed description of the

00:33:45.296 --> 00:33:46.636 A:middle
vocabulary item that you are

00:33:46.636 --> 00:33:47.396 A:middle
teaching Siri.

00:33:49.956 --> 00:33:52.696 A:middle
The main parts of it-- the main

00:33:52.696 --> 00:33:54.286 A:middle
property on it is the actual

00:33:54.286 --> 00:33:55.566 A:middle
word that you're teaching Siri.

00:33:56.616 --> 00:33:57.826 A:middle
In this case, it would be the

00:33:57.826 --> 00:33:59.446 A:middle
word NestEgg without a space in

00:33:59.446 --> 00:34:01.596 A:middle
it or some other creative

00:34:01.596 --> 00:34:04.506 A:middle
misspelling of a workout name or

00:34:04.506 --> 00:34:05.956 A:middle
it could even be a word which

00:34:05.956 --> 00:34:08.006 A:middle
has mixed in numbers or special

00:34:08.006 --> 00:34:08.646 A:middle
characters.

00:34:09.196 --> 00:34:12.676 A:middle
You can also teach Siri-- you

00:34:13.896 --> 00:34:16.436 A:middle
can also give Siri hints about

00:34:16.696 --> 00:34:18.446 A:middle
how to recognize the words that

00:34:18.446 --> 00:34:19.076 A:middle
you are teaching it.

00:34:19.936 --> 00:34:22.346 A:middle
In this case, they are spelled

00:34:23.056 --> 00:34:24.776 A:middle
in a sounds-like pattern, which

00:34:24.926 --> 00:34:26.116 A:middle
is the same pattern you would

00:34:26.116 --> 00:34:27.756 A:middle
use for configuring phonetic

00:34:27.756 --> 00:34:32.306 A:middle
names in your contacts app.

00:34:32.566 --> 00:34:34.516 A:middle
With each INSpeakable object,

00:34:35.116 --> 00:34:36.166 A:middle
you can also provide a

00:34:36.166 --> 00:34:38.526 A:middle
vocabulary identifier which can

00:34:38.526 --> 00:34:40.396 A:middle
uniquely identify this object in

00:34:40.396 --> 00:34:41.136 A:middle
your app store.

00:34:42.166 --> 00:34:43.756 A:middle
We-- it's a plain string, so we

00:34:43.756 --> 00:34:45.816 A:middle
don't restrict what value you

00:34:45.816 --> 00:34:47.926 A:middle
can give this identifier, but

00:34:48.226 --> 00:34:50.956 A:middle
using a unique grid or something

00:34:50.956 --> 00:34:52.796 A:middle
like that will help you match

00:34:53.256 --> 00:34:55.276 A:middle
this object unambiguously in

00:34:55.276 --> 00:34:57.356 A:middle
your app's data store.

00:34:58.856 --> 00:35:01.446 A:middle
Finally, the INSpeakable

00:35:01.446 --> 00:35:04.356 A:middle
protocol also allows Siri to

00:35:05.076 --> 00:35:08.276 A:middle
provide alternative matches for

00:35:08.276 --> 00:35:10.486 A:middle
words which the-- which Siri

00:35:10.486 --> 00:35:12.166 A:middle
thinks the user might mean.

00:35:12.786 --> 00:35:14.606 A:middle
This is analogous to the

00:35:14.606 --> 00:35:16.836 A:middle
siriMatches property that my

00:35:16.836 --> 00:35:18.556 A:middle
college Angel talked about

00:35:18.556 --> 00:35:21.606 A:middle
earlier where an INPerson object

00:35:21.606 --> 00:35:23.176 A:middle
which actually does conform to

00:35:23.176 --> 00:35:26.516 A:middle
the INSpeakable protocol can

00:35:26.516 --> 00:35:28.636 A:middle
have candidate alternative

00:35:28.636 --> 00:35:30.996 A:middle
matches exposed as siriMatches.

00:35:32.306 --> 00:35:34.776 A:middle
With this new protocol and API,

00:35:34.876 --> 00:35:36.336 A:middle
let us take a look again at the

00:35:36.336 --> 00:35:38.416 A:middle
same example and see how things

00:35:38.736 --> 00:35:39.376 A:middle
have changed.

00:35:40.046 --> 00:35:42.536 A:middle
So, the application wants to

00:35:42.536 --> 00:35:44.776 A:middle
tell Siri about the same two

00:35:44.776 --> 00:35:45.886 A:middle
account objects with the

00:35:45.886 --> 00:35:46.846 A:middle
customized names.

00:35:47.916 --> 00:35:50.086 A:middle
It would call the INVocabulary

00:35:50.206 --> 00:35:51.506 A:middle
API, but this time it would give

00:35:51.506 --> 00:35:54.326 A:middle
it the objects themselves and

00:35:54.326 --> 00:35:57.616 A:middle
Siri will use those INSpeakable

00:35:57.616 --> 00:36:00.756 A:middle
parts of these objects and when

00:36:02.576 --> 00:36:06.286 A:middle
the user says a request that has

00:36:06.286 --> 00:36:08.776 A:middle
a word which matches this new

00:36:08.776 --> 00:36:10.966 A:middle
object that Siri has learned

00:36:10.966 --> 00:36:14.376 A:middle
about, Siri will recognize the

00:36:14.376 --> 00:36:19.036 A:middle
pattern and replace it with the

00:36:19.036 --> 00:36:22.756 A:middle
expected spelling and when

00:36:22.896 --> 00:36:24.616 A:middle
communicating back to the app's

00:36:24.616 --> 00:36:26.556 A:middle
intent extension, instead of

00:36:26.556 --> 00:36:28.836 A:middle
giving it a plain string without

00:36:28.836 --> 00:36:30.926 A:middle
any context, Siri will now give

00:36:30.926 --> 00:36:32.836 A:middle
it the INSpeakable object.

00:36:34.456 --> 00:36:36.586 A:middle
Because this INSpeakable object

00:36:36.846 --> 00:36:39.326 A:middle
has the vocabulary identifier,

00:36:39.456 --> 00:36:42.316 A:middle
which, as I said earlier, could

00:36:42.316 --> 00:36:44.536 A:middle
be a unique ID for that object.

00:36:45.096 --> 00:36:47.356 A:middle
The lookup on the app side for

00:36:47.356 --> 00:36:49.106 A:middle
this object becomes easier.

00:36:53.036 --> 00:36:54.986 A:middle
So, we hope that with this new

00:36:54.986 --> 00:36:57.736 A:middle
API requests like this where the

00:36:57.736 --> 00:37:02.306 A:middle
user is able to issue a request

00:37:02.306 --> 00:37:05.656 A:middle
with a custom vocabulary word to

00:37:05.656 --> 00:37:07.916 A:middle
Siri, your app can handle them

00:37:07.916 --> 00:37:09.586 A:middle
without worrying about doing

00:37:09.586 --> 00:37:11.046 A:middle
fuzzy matching against your app

00:37:11.046 --> 00:37:11.366 A:middle
store.

00:37:15.286 --> 00:37:18.206 A:middle
The other example where you

00:37:18.206 --> 00:37:19.446 A:middle
might want to teach Siri new

00:37:19.446 --> 00:37:23.196 A:middle
words is when there's a word

00:37:23.196 --> 00:37:25.166 A:middle
which is unique to your app, but

00:37:25.446 --> 00:37:27.376 A:middle
common to all users of your app.

00:37:27.526 --> 00:37:29.556 A:middle
An example of this would be a

00:37:29.556 --> 00:37:32.486 A:middle
ride-booking app which has a

00:37:32.836 --> 00:37:35.906 A:middle
branded or a customized vehicle

00:37:35.906 --> 00:37:38.826 A:middle
name or a workout app which

00:37:38.876 --> 00:37:43.946 A:middle
might have a non-English workout

00:37:43.946 --> 00:37:44.186 A:middle
name.

00:37:47.336 --> 00:37:48.996 A:middle
In order to teach Siri words

00:37:48.996 --> 00:37:51.186 A:middle
like this, we recommend that you

00:37:51.186 --> 00:37:52.006 A:middle
use the

00:37:52.006 --> 00:37:57.866 A:middle
AppIntentVocabulary.plist.

00:37:58.026 --> 00:38:00.036 A:middle
Once you provide a plist to

00:38:00.576 --> 00:38:02.736 A:middle
Siri, in examples like this

00:38:02.736 --> 00:38:05.106 A:middle
where a ride-booking app has

00:38:05.266 --> 00:38:07.486 A:middle
customized its ride names--

00:38:08.566 --> 00:38:09.826 A:middle
which are not real words in this

00:38:09.826 --> 00:38:10.796 A:middle
case, as you can see--

00:38:11.196 --> 00:38:13.016 A:middle
RainbowCar without a space is

00:38:13.016 --> 00:38:16.056 A:middle
not a real word.

00:38:16.256 --> 00:38:19.156 A:middle
Users can now say the words and

00:38:20.156 --> 00:38:21.886 A:middle
expect Siri to recognize them.

00:38:25.236 --> 00:38:27.336 A:middle
The way you would register words

00:38:27.336 --> 00:38:29.426 A:middle
like this with Siri is to use

00:38:29.426 --> 00:38:30.996 A:middle
the custom vocabulary plist

00:38:31.626 --> 00:38:33.776 A:middle
where the main pieces are the

00:38:33.776 --> 00:38:35.486 A:middle
intent parameter for which you

00:38:35.486 --> 00:38:36.376 A:middle
are providing the custom

00:38:36.376 --> 00:38:37.206 A:middle
vocabulary item.

00:38:38.086 --> 00:38:40.406 A:middle
In this case, this parameter

00:38:40.626 --> 00:38:42.736 A:middle
would itself be of type

00:38:42.736 --> 00:38:47.126 A:middle
INSpeakable and inside that

00:38:47.126 --> 00:38:51.466 A:middle
parameter the subfields of the

00:38:51.756 --> 00:38:53.626 A:middle
INSpeakable object can be

00:38:53.626 --> 00:38:54.246 A:middle
specified.

00:38:55.336 --> 00:38:56.666 A:middle
For example, you can give a

00:38:56.666 --> 00:38:58.756 A:middle
vocabulary identifier for the

00:38:58.756 --> 00:38:59.916 A:middle
SparkleCar which you are

00:38:59.916 --> 00:39:03.216 A:middle
teaching Siri about, and the

00:39:03.446 --> 00:39:04.976 A:middle
actual name that you're teaching

00:39:04.976 --> 00:39:08.046 A:middle
Siri as the spoken phrase, and

00:39:08.046 --> 00:39:09.876 A:middle
the pronunciation hint, similar

00:39:10.006 --> 00:39:11.686 A:middle
to the one we saw in the earlier

00:39:11.686 --> 00:39:13.156 A:middle
case for user-specific

00:39:13.156 --> 00:39:13.796 A:middle
vocabulary.

00:39:15.336 --> 00:39:17.436 A:middle
Having done this, Siri will now

00:39:17.436 --> 00:39:19.106 A:middle
be able to understand requests

00:39:19.106 --> 00:39:20.746 A:middle
like this where the user is

00:39:20.746 --> 00:39:23.136 A:middle
using the customized vocabulary

00:39:23.136 --> 00:39:25.576 A:middle
word which are specific to your

00:39:26.426 --> 00:39:26.506 A:middle
app.

00:39:31.496 --> 00:39:33.516 A:middle
Now let's talk about how you can

00:39:33.686 --> 00:39:35.296 A:middle
test the quality of SiriKit

00:39:35.296 --> 00:39:37.676 A:middle
integration with UI testing.

00:39:39.696 --> 00:39:41.676 A:middle
We introduced UI testing a

00:39:41.676 --> 00:39:43.386 A:middle
couple of years ago as a

00:39:43.386 --> 00:39:45.006 A:middle
mechanism for you to write UI

00:39:45.006 --> 00:39:46.656 A:middle
tests-- automation tests--

00:39:46.656 --> 00:39:48.686 A:middle
inside your project in Xcode.

00:39:49.246 --> 00:39:52.166 A:middle
Now that Siri is supported in

00:39:52.166 --> 00:39:54.126 A:middle
the simulator, you can run these

00:39:54.126 --> 00:39:55.846 A:middle
tests on any hardware

00:39:55.846 --> 00:39:57.956 A:middle
configuration without actually

00:39:57.956 --> 00:39:59.966 A:middle
requiring to have the hardware

00:39:59.966 --> 00:40:00.336 A:middle
with you.

00:40:03.216 --> 00:40:05.196 A:middle
These UI tests are automatable,

00:40:05.346 --> 00:40:06.936 A:middle
so you can keep them running

00:40:07.196 --> 00:40:09.836 A:middle
automatedly in your CI pipelines

00:40:10.216 --> 00:40:11.976 A:middle
or custom integration pipelines

00:40:12.676 --> 00:40:14.826 A:middle
to make sure that code changes

00:40:14.826 --> 00:40:16.076 A:middle
are not breaking existing

00:40:16.076 --> 00:40:16.766 A:middle
functionality.

00:40:17.226 --> 00:40:20.946 A:middle
Using these UI tests also gives

00:40:20.946 --> 00:40:22.586 A:middle
you a certain degree of language

00:40:22.586 --> 00:40:24.796 A:middle
independence, that way you can

00:40:24.796 --> 00:40:26.776 A:middle
test Siri integration in a

00:40:26.776 --> 00:40:28.556 A:middle
language which is not the

00:40:28.556 --> 00:40:29.916 A:middle
primary language of your

00:40:29.916 --> 00:40:30.546 A:middle
development.

00:40:30.956 --> 00:40:32.456 A:middle
We will see an example of this

00:40:32.456 --> 00:40:32.856 A:middle
shortly.

00:40:35.376 --> 00:40:37.216 A:middle
For further info about UI

00:40:37.216 --> 00:40:38.836 A:middle
testing, we refer you to these

00:40:38.836 --> 00:40:40.936 A:middle
docs about when UI testing was

00:40:40.936 --> 00:40:47.116 A:middle
introduced in 2015.

00:40:47.116 --> 00:40:49.306 A:middle
To enable UI testing with Siri,

00:40:49.566 --> 00:40:51.956 A:middle
the main API that is new to iOS

00:40:51.956 --> 00:40:55.446 A:middle
11 is a way to refer to the Siri

00:40:55.446 --> 00:41:00.546 A:middle
service on the device.

00:41:00.686 --> 00:41:02.346 A:middle
Using this reference, you can

00:41:02.346 --> 00:41:05.396 A:middle
feed in Siri request strings

00:41:05.556 --> 00:41:07.416 A:middle
directly into the Siri service

00:41:07.856 --> 00:41:08.416 A:middle
in code.

00:41:08.996 --> 00:41:10.226 A:middle
And because this is done in

00:41:10.226 --> 00:41:12.636 A:middle
code, you no longer need to do a

00:41:12.636 --> 00:41:14.556 A:middle
manual test of your Siri

00:41:14.556 --> 00:41:15.166 A:middle
integration.

00:41:15.566 --> 00:41:17.456 A:middle
Let us see a demo of this.

00:41:22.676 --> 00:41:24.136 A:middle
So, I'll take you back to the

00:41:24.136 --> 00:41:25.836 A:middle
same app that we saw earlier

00:41:26.226 --> 00:41:27.906 A:middle
where we added an authentication

00:41:27.906 --> 00:41:30.116 A:middle
prompt while unlocking a car.

00:41:31.526 --> 00:41:33.916 A:middle
So, it's the same app where

00:41:34.106 --> 00:41:36.106 A:middle
there's an image showing the

00:41:36.106 --> 00:41:38.616 A:middle
locked state of the car and

00:41:40.196 --> 00:41:42.576 A:middle
using Siri I'm able to test

00:41:42.686 --> 00:41:45.926 A:middle
whether I'm able to lock and

00:41:45.926 --> 00:41:46.546 A:middle
unlock the car.

00:41:47.016 --> 00:41:48.536 A:middle
So, if I want to test my Siri

00:41:48.536 --> 00:41:50.696 A:middle
integration in this app, how

00:41:50.696 --> 00:41:52.356 A:middle
would I do it as a manual test?

00:41:52.916 --> 00:41:57.046 A:middle
I would first launch the app,

00:41:57.306 --> 00:41:58.756 A:middle
set the state to the state I

00:41:58.756 --> 00:41:59.606 A:middle
expect it to be.

00:42:00.206 --> 00:42:01.596 A:middle
Let's say I want to test whether

00:42:01.926 --> 00:42:04.136 A:middle
my lock requests are working, so

00:42:04.136 --> 00:42:05.466 A:middle
I would want to start it off in

00:42:05.466 --> 00:42:06.496 A:middle
an unlocked state.

00:42:08.136 --> 00:42:10.236 A:middle
Then I would want to issue a

00:42:10.796 --> 00:42:12.686 A:middle
request to lock the car.

00:42:14.496 --> 00:42:16.216 A:middle
So, let's issue that request.

00:42:31.486 --> 00:42:34.816 A:middle
OK. And then I would need to

00:42:34.816 --> 00:42:36.666 A:middle
verify that the request was

00:42:36.666 --> 00:42:38.056 A:middle
actually handled successfully.

00:42:38.426 --> 00:42:40.116 A:middle
And in order to do that, I would

00:42:40.116 --> 00:42:42.236 A:middle
need to launch the app and check

00:42:42.236 --> 00:42:44.276 A:middle
the state-- visually inspect the

00:42:44.276 --> 00:42:45.046 A:middle
state of the app.

00:42:45.746 --> 00:42:47.426 A:middle
So, it looks like when I asked

00:42:47.426 --> 00:42:49.306 A:middle
Siri to lock the car, the car

00:42:49.306 --> 00:42:50.376 A:middle
was locked, so the test

00:42:50.376 --> 00:42:50.866 A:middle
succeeds.

00:42:51.286 --> 00:42:52.536 A:middle
This was the manual test.

00:42:53.376 --> 00:42:54.786 A:middle
How would I automate a test like

00:42:54.786 --> 00:42:55.116 A:middle
this?

00:42:55.406 --> 00:42:59.166 A:middle
Using the UI automation API, I

00:42:59.166 --> 00:43:01.796 A:middle
can create a UI tests class in

00:43:01.796 --> 00:43:03.936 A:middle
my project using-- by adding it

00:43:03.976 --> 00:43:06.746 A:middle
to my UI testing bundle and

00:43:07.966 --> 00:43:11.166 A:middle
create a test like this.

00:43:11.356 --> 00:43:12.736 A:middle
So, a test is basically a

00:43:12.736 --> 00:43:15.156 A:middle
function with these four steps.

00:43:15.616 --> 00:43:17.076 A:middle
First, I need to set up the

00:43:17.076 --> 00:43:19.066 A:middle
test, then I need to invoke

00:43:19.066 --> 00:43:21.056 A:middle
Siri, then wait for Siri's

00:43:21.056 --> 00:43:23.446 A:middle
response, and then confirm that

00:43:23.446 --> 00:43:25.706 A:middle
Siri's request actually went

00:43:25.706 --> 00:43:26.866 A:middle
through and that the app

00:43:26.866 --> 00:43:28.186 A:middle
actually handled the request.

00:43:28.856 --> 00:43:31.216 A:middle
So, let's start by setting up a

00:43:32.416 --> 00:43:32.586 A:middle
test.

00:43:32.766 --> 00:43:34.526 A:middle
So, in order to set up a test,

00:43:34.666 --> 00:43:36.886 A:middle
I've created a helper method to

00:43:37.086 --> 00:43:38.736 A:middle
set the car lock status to

00:43:38.736 --> 00:43:41.176 A:middle
false, that is to unlock the

00:43:41.176 --> 00:43:41.446 A:middle
car.

00:43:41.996 --> 00:43:43.796 A:middle
So, before running the locking

00:43:43.796 --> 00:43:45.536 A:middle
test, I'm unlocking the car.

00:43:46.426 --> 00:43:49.456 A:middle
Now, this helper method is-- I

00:43:49.456 --> 00:43:51.046 A:middle
configured it by using the UI

00:43:51.046 --> 00:43:53.386 A:middle
recording mechanism, which if

00:43:53.386 --> 00:43:54.796 A:middle
you refer to the UI testing

00:43:54.796 --> 00:43:57.196 A:middle
framework talk, then you can

00:43:57.196 --> 00:43:58.656 A:middle
learn how to do the UI recording

00:43:58.926 --> 00:44:01.906 A:middle
for generating the test like

00:44:03.056 --> 00:44:03.246 A:middle
this.

00:44:03.366 --> 00:44:05.796 A:middle
Then for invoking Siri, I'm

00:44:05.796 --> 00:44:07.576 A:middle
going to use the API which I

00:44:07.576 --> 00:44:08.856 A:middle
talked about, the new API.

00:44:10.226 --> 00:44:12.926 A:middle
So, I'm feeding in the request

00:44:13.386 --> 00:44:14.156 A:middle
lock my car.

00:44:14.196 --> 00:44:16.776 A:middle
And then, finally, I'm going

00:44:16.776 --> 00:44:18.486 A:middle
to-- then next I'm going to wait

00:44:18.486 --> 00:44:19.726 A:middle
for Siri's response.

00:44:20.566 --> 00:44:21.786 A:middle
In order to wait for Siri's

00:44:21.786 --> 00:44:23.216 A:middle
response, I'm using this API

00:44:23.346 --> 00:44:26.796 A:middle
called wait and this wait

00:44:26.876 --> 00:44:28.306 A:middle
parameter-- this wait method

00:44:28.486 --> 00:44:29.456 A:middle
takes two parameters.

00:44:29.866 --> 00:44:32.166 A:middle
One is an expectation and the

00:44:32.166 --> 00:44:33.096 A:middle
other is a time out.

00:44:33.806 --> 00:44:35.726 A:middle
The expectation I'm waiting to

00:44:35.726 --> 00:44:38.646 A:middle
be fulfilled is a predicate

00:44:38.646 --> 00:44:40.926 A:middle
expectation and I'm using the

00:44:40.926 --> 00:44:43.846 A:middle
predicate which basically sleeps

00:44:43.846 --> 00:44:44.816 A:middle
for 5 seconds.

00:44:45.176 --> 00:44:46.086 A:middle
It's nothing fancy.

00:44:46.496 --> 00:44:48.076 A:middle
I think it's enough time for

00:44:48.076 --> 00:44:50.286 A:middle
Siri to respond to this request.

00:44:52.656 --> 00:44:55.606 A:middle
So, it waits for 5 seconds and

00:44:56.016 --> 00:44:57.646 A:middle
I'll wait for that wait for 10

00:44:57.646 --> 00:44:58.706 A:middle
minute-- for 10 seconds.

00:44:59.076 --> 00:45:02.426 A:middle
So, that was the waiting for

00:45:02.426 --> 00:45:04.026 A:middle
Siri's response piece.

00:45:05.496 --> 00:45:07.726 A:middle
Next, I need to confirm that the

00:45:07.726 --> 00:45:09.356 A:middle
state of the app has actually

00:45:09.356 --> 00:45:09.916 A:middle
changed.

00:45:13.056 --> 00:45:15.496 A:middle
In order to do that, I have

00:45:15.496 --> 00:45:17.756 A:middle
tagged one of the UI elements in

00:45:17.756 --> 00:45:19.726 A:middle
my app with an accessibility tag

00:45:20.316 --> 00:45:22.526 A:middle
which I am now using to extract

00:45:22.526 --> 00:45:25.946 A:middle
that view and then comparing the

00:45:25.946 --> 00:45:28.026 A:middle
value of the accessibility label

00:45:28.026 --> 00:45:30.026 A:middle
on that view to see whether it

00:45:30.026 --> 00:45:34.616 A:middle
matches what I expect.

00:45:34.726 --> 00:45:37.436 A:middle
So, now that we've written--

00:45:37.496 --> 00:45:38.876 A:middle
automated the test that we just

00:45:38.876 --> 00:45:41.196 A:middle
saw manually done, let us run

00:45:41.196 --> 00:45:43.276 A:middle
this automated test and see if

00:45:43.276 --> 00:45:45.766 A:middle
it does what we expect.

00:45:52.336 --> 00:45:53.936 A:middle
Because this is an automated

00:45:53.936 --> 00:45:57.086 A:middle
test, it frees me up to do real

00:45:57.086 --> 00:46:00.716 A:middle
development work and not spend

00:46:00.716 --> 00:46:02.876 A:middle
my time testing something which

00:46:02.876 --> 00:46:04.786 A:middle
I already know how it's supposed

00:46:04.786 --> 00:46:05.166 A:middle
to work.

00:46:08.356 --> 00:46:10.296 A:middle
So, you notice that it's waiting

00:46:10.296 --> 00:46:12.176 A:middle
for Siri's response for 5

00:46:12.176 --> 00:46:14.706 A:middle
seconds and then, finally, it

00:46:14.706 --> 00:46:16.676 A:middle
launches the app and checks

00:46:16.876 --> 00:46:18.166 A:middle
whether the state matches what

00:46:18.166 --> 00:46:18.876 A:middle
it expects.

00:46:21.516 --> 00:46:27.276 A:middle
[ Applause ]

00:46:27.776 --> 00:46:30.006 A:middle
And these indicators of

00:46:30.006 --> 00:46:32.886 A:middle
happiness tell me that the test

00:46:32.886 --> 00:46:36.316 A:middle
has actually passed.

00:46:37.636 --> 00:46:39.616 A:middle
Now, Siri is supported in many

00:46:39.616 --> 00:46:41.406 A:middle
languages and I am most

00:46:41.406 --> 00:46:43.266 A:middle
comfortable in English, but I

00:46:43.266 --> 00:46:45.436 A:middle
might want to test my app's Siri

00:46:45.436 --> 00:46:47.376 A:middle
integration in Mandarin.

00:46:47.836 --> 00:46:49.596 A:middle
Now, I don't speak Mandarin, but

00:46:50.366 --> 00:46:54.686 A:middle
I can look up the utterances for

00:46:57.056 --> 00:47:01.126 A:middle
this intent on the developer

00:47:01.126 --> 00:47:01.616 A:middle
website.

00:47:01.616 --> 00:47:03.276 A:middle
So, the intent I'm looking for

00:47:03.276 --> 00:47:07.876 A:middle
is INSetCarLockStatusIntent.

00:47:12.046 --> 00:47:13.486 A:middle
And in the documentation for

00:47:13.486 --> 00:47:17.696 A:middle
this intent we actually have

00:47:17.696 --> 00:47:21.196 A:middle
examples of sample utterances in

00:47:21.266 --> 00:47:22.566 A:middle
all the languages that Siri

00:47:22.566 --> 00:47:23.076 A:middle
supports.

00:47:24.176 --> 00:47:26.096 A:middle
So, I am going to take the

00:47:26.096 --> 00:47:28.636 A:middle
example utterance for Mandarin

00:47:32.076 --> 00:47:36.746 A:middle
and feed it in here.

00:47:40.196 --> 00:47:41.646 A:middle
And I'm going to run this test

00:47:42.346 --> 00:47:44.796 A:middle
on a device which is configured

00:47:45.216 --> 00:47:47.036 A:middle
to use Siri in Mandarin.

00:47:47.716 --> 00:47:49.276 A:middle
So, let me first bring up that

00:47:49.276 --> 00:47:50.106 A:middle
device.

00:48:01.316 --> 00:48:02.916 A:middle
So, it launches the app, sets

00:48:02.916 --> 00:48:05.026 A:middle
the initial state, invokes Siri,

00:48:05.026 --> 00:48:06.826 A:middle
gives it the request, waits for

00:48:06.826 --> 00:48:07.586 A:middle
a response.

00:48:08.186 --> 00:48:11.136 A:middle
And then it launches the app

00:48:11.136 --> 00:48:12.736 A:middle
again and confirms that the

00:48:12.736 --> 00:48:14.276 A:middle
state matches what it expects.

00:48:15.516 --> 00:48:19.666 A:middle
[ Applause ]

00:48:20.166 --> 00:48:21.056 A:middle
Again, happiness.

00:48:21.126 --> 00:48:21.566 A:middle
Yay!

00:48:29.266 --> 00:48:30.416 A:middle
So, it was that simple to

00:48:30.416 --> 00:48:32.906 A:middle
automate my SiriKit integration

00:48:33.066 --> 00:48:33.456 A:middle
testing.

00:48:34.196 --> 00:48:35.926 A:middle
So, let's recap what we heard

00:48:35.926 --> 00:48:36.216 A:middle
today.

00:48:37.566 --> 00:48:39.756 A:middle
From my colleague Angel, we

00:48:39.756 --> 00:48:41.886 A:middle
learned how to handle situations

00:48:42.326 --> 00:48:44.166 A:middle
where users need to be prompted

00:48:44.586 --> 00:48:46.756 A:middle
about disambiguating between

00:48:47.006 --> 00:48:49.026 A:middle
contacts with the same name or

00:48:49.026 --> 00:48:50.946 A:middle
between handles of the-- of a

00:48:50.946 --> 00:48:51.886 A:middle
particular contact.

00:48:53.246 --> 00:48:55.946 A:middle
We then saw some ways to

00:48:56.386 --> 00:48:58.606 A:middle
reauthorize Siri requests using

00:48:58.606 --> 00:49:00.696 A:middle
the local authentication API.

00:49:01.916 --> 00:49:03.436 A:middle
Then we saw how we can teach

00:49:03.436 --> 00:49:05.186 A:middle
Siri words which are specific to

00:49:05.186 --> 00:49:08.386 A:middle
users or specific to apps, and

00:49:08.386 --> 00:49:10.446 A:middle
then, finally, we saw some demos

00:49:10.446 --> 00:49:13.046 A:middle
of how we can do UI testing of

00:49:13.216 --> 00:49:16.016 A:middle
our SiriKit integration even in

00:49:16.016 --> 00:49:17.576 A:middle
languages that we are not

00:49:18.156 --> 00:49:20.016 A:middle
conversant in.

00:49:20.956 --> 00:49:23.066 A:middle
For more information about the

00:49:23.066 --> 00:49:25.296 A:middle
sample codes and the APIs that

00:49:25.296 --> 00:49:26.406 A:middle
we talked about in this talk,

00:49:26.406 --> 00:49:28.586 A:middle
please refer to this URL.

00:49:28.586 --> 00:49:33.056 A:middle
And we have some other talks

00:49:34.026 --> 00:49:35.716 A:middle
which are relevant to your

00:49:35.716 --> 00:49:37.576 A:middle
SiriKit integration, including

00:49:37.806 --> 00:49:41.066 A:middle
Apple Pay and CarPlay talks and

00:49:41.596 --> 00:49:43.656 A:middle
the talks from previous years

00:49:43.656 --> 00:49:45.026 A:middle
which we referred to in this

00:49:45.026 --> 00:49:45.906 A:middle
talk are listed here.

00:49:47.186 --> 00:49:49.776 A:middle
Thank you for coming and we hope

00:49:49.776 --> 00:49:51.086 A:middle
you have enough information to

00:49:51.226 --> 00:49:53.416 A:middle
create great SiriKit experiences

00:49:53.416 --> 00:49:54.066 A:middle
after this talk.

00:49:54.826 --> 00:49:55.486 A:middle
Thank you everybody.

00:49:56.516 --> 00:50:02.010 A:middle
[ Applause ]