WEBVTT

00:00:24.516 --> 00:00:26.556 A:middle
[ Applause ]

00:00:27.056 --> 00:00:28.896 A:middle
&gt;&gt; Good morning everybody, I'm

00:00:28.896 --> 00:00:30.686 A:middle
Vincent Hittson, Cocoa engineer

00:00:30.816 --> 00:00:32.816 A:middle
along with Rachel Goldeen, Cocoa

00:00:32.816 --> 00:00:35.176 A:middle
engineer and welcome to Cocoa

00:00:35.176 --> 00:00:35.966 A:middle
Development Tips.

00:00:37.036 --> 00:00:38.636 A:middle
Rachel is going to start us off.

00:00:39.586 --> 00:00:41.776 A:middle
&gt;&gt; Good morning, we have a wide

00:00:41.776 --> 00:00:43.606 A:middle
array of tips to show you this

00:00:43.606 --> 00:00:45.156 A:middle
morning, we're going to speed

00:00:45.156 --> 00:00:45.666 A:middle
through them.

00:00:45.846 --> 00:00:46.966 A:middle
And it was a little tricky to

00:00:46.966 --> 00:00:48.466 A:middle
figure out how to order them,

00:00:48.466 --> 00:00:50.066 A:middle
what kind of sequence or

00:00:50.066 --> 00:00:51.736 A:middle
numbering system to use, we

00:00:51.736 --> 00:00:52.806 A:middle
think we got something really

00:00:52.806 --> 00:00:52.926 A:middle
good.

00:00:52.926 --> 00:00:54.446 A:middle
I'm going to start you out with

00:00:54.446 --> 00:00:56.656 A:middle
a quick tip to get things going.

00:00:57.846 --> 00:01:00.466 A:middle
Number pi internationalization

00:01:00.566 --> 00:01:03.256 A:middle
because it's all Greek to us.

00:01:03.256 --> 00:01:05.176 A:middle
Just take a look at the Xcode

00:01:05.176 --> 00:01:07.696 A:middle
Scheme Editor and in the run

00:01:07.696 --> 00:01:09.176 A:middle
section you'll notice there's

00:01:09.176 --> 00:01:12.926 A:middle
this location debugging section.

00:01:13.356 --> 00:01:14.446 A:middle
You can check the show

00:01:14.446 --> 00:01:16.116 A:middle
nonlocalized strings checkbox

00:01:16.696 --> 00:01:17.826 A:middle
and see where your app is

00:01:17.826 --> 00:01:19.076 A:middle
missing localized strings.

00:01:19.426 --> 00:01:20.436 A:middle
But I'd like to focus your

00:01:20.436 --> 00:01:21.876 A:middle
attention on this application

00:01:21.876 --> 00:01:22.646 A:middle
language menu.

00:01:23.046 --> 00:01:24.246 A:middle
Down at the bottom there's a

00:01:24.246 --> 00:01:25.826 A:middle
list of pseudolanguages that you

00:01:25.826 --> 00:01:28.076 A:middle
can use before your translations

00:01:28.076 --> 00:01:29.456 A:middle
have been made and this will

00:01:29.456 --> 00:01:31.096 A:middle
show you if your app is ready

00:01:31.326 --> 00:01:32.406 A:middle
for those translations.

00:01:32.886 --> 00:01:34.806 A:middle
Okay that's it, back to Vince.

00:01:35.576 --> 00:01:37.856 A:middle
&gt;&gt; Okay tip number zero, user

00:01:37.856 --> 00:01:39.396 A:middle
defaults since zero makes a

00:01:39.396 --> 00:01:40.656 A:middle
pretty good default value.

00:01:41.486 --> 00:01:43.206 A:middle
So, you have your standard user

00:01:43.206 --> 00:01:44.816 A:middle
defaults and this is what you

00:01:44.816 --> 00:01:46.776 A:middle
use to get and set your user

00:01:46.776 --> 00:01:49.086 A:middle
preferences, but it's not just a

00:01:49.086 --> 00:01:51.056 A:middle
big bag of preferences it's

00:01:51.056 --> 00:01:52.726 A:middle
actually a set of domains and

00:01:52.726 --> 00:01:54.406 A:middle
each of those domains have their

00:01:54.406 --> 00:01:56.446 A:middle
own bags and here's a subset of

00:01:56.446 --> 00:01:56.956 A:middle
those.

00:01:57.666 --> 00:01:58.946 A:middle
And when you ask the standard

00:01:58.946 --> 00:02:01.096 A:middle
user defaults for a value it

00:02:01.096 --> 00:02:03.226 A:middle
checks each of these domains in

00:02:03.226 --> 00:02:05.596 A:middle
order returning the first value

00:02:05.596 --> 00:02:06.086 A:middle
it finds.

00:02:07.366 --> 00:02:09.586 A:middle
And you can set values in these

00:02:09.586 --> 00:02:12.256 A:middle
domains using their own

00:02:12.256 --> 00:02:14.076 A:middle
techniques and we're going to go

00:02:14.076 --> 00:02:15.596 A:middle
through them in reverse order.

00:02:16.016 --> 00:02:17.416 A:middle
So, starting at the bottom is

00:02:17.416 --> 00:02:19.416 A:middle
the registration domain, it's

00:02:19.416 --> 00:02:21.546 A:middle
last in the list and you use the

00:02:21.546 --> 00:02:23.446 A:middle
register method, passing in the

00:02:23.446 --> 00:02:25.046 A:middle
dictionary of the user defaults,

00:02:25.046 --> 00:02:26.086 A:middle
keys and values.

00:02:26.656 --> 00:02:30.036 A:middle
And it's temporary so it's only

00:02:30.036 --> 00:02:31.306 A:middle
available for the lifetime of

00:02:31.306 --> 00:02:32.776 A:middle
this particular process.

00:02:33.036 --> 00:02:34.516 A:middle
The next time your app launches

00:02:34.516 --> 00:02:35.696 A:middle
you'll have to call register

00:02:35.696 --> 00:02:36.036 A:middle
again.

00:02:36.366 --> 00:02:38.076 A:middle
So, use this to provide initial

00:02:38.076 --> 00:02:39.876 A:middle
values for your defaults without

00:02:39.876 --> 00:02:40.806 A:middle
setting them permanently.

00:02:40.806 --> 00:02:44.476 A:middle
Next up is the global domain.

00:02:45.016 --> 00:02:46.076 A:middle
This is shared by all

00:02:46.076 --> 00:02:47.606 A:middle
applications and it's commonly

00:02:47.606 --> 00:02:49.606 A:middle
used by system frameworks to

00:02:49.606 --> 00:02:51.186 A:middle
store systemwide preferences.

00:02:51.636 --> 00:02:52.816 A:middle
And you can set it using the

00:02:52.816 --> 00:02:55.196 A:middle
defaults command line tool, but

00:02:55.306 --> 00:02:57.076 A:middle
it's persistent so any changes

00:02:57.076 --> 00:02:58.026 A:middle
you make are going to be

00:02:58.026 --> 00:03:01.266 A:middle
permanent so be aware of that.

00:03:01.436 --> 00:03:02.936 A:middle
Next up is the application

00:03:02.936 --> 00:03:04.906 A:middle
domain and when you set a value

00:03:04.906 --> 00:03:06.786 A:middle
on the standard user defaults

00:03:06.786 --> 00:03:08.396 A:middle
using the set method it goes

00:03:08.476 --> 00:03:08.806 A:middle
here.

00:03:09.356 --> 00:03:12.096 A:middle
And this domain is persistent so

00:03:12.096 --> 00:03:14.306 A:middle
the next time your user launches

00:03:14.306 --> 00:03:16.236 A:middle
your app it'll have the value

00:03:16.236 --> 00:03:17.836 A:middle
that you set so you'll want to

00:03:17.836 --> 00:03:19.686 A:middle
use this when your user actually

00:03:19.686 --> 00:03:21.436 A:middle
changes a preference from the

00:03:21.436 --> 00:03:22.096 A:middle
initial value.

00:03:23.756 --> 00:03:27.166 A:middle
Last or first, but not least is

00:03:27.166 --> 00:03:29.606 A:middle
the argument domain and the

00:03:29.606 --> 00:03:31.486 A:middle
argument domain is really cool.

00:03:31.486 --> 00:03:33.196 A:middle
So, you can pass your user

00:03:33.196 --> 00:03:34.966 A:middle
defaults key as an argument to

00:03:34.966 --> 00:03:36.826 A:middle
your application along with the

00:03:36.826 --> 00:03:38.706 A:middle
value and you prepend your user

00:03:38.706 --> 00:03:39.856 A:middle
defaults key with a hyphen.

00:03:40.466 --> 00:03:42.736 A:middle
And it's first in the list, so

00:03:42.736 --> 00:03:44.716 A:middle
it overrides the values of all

00:03:44.716 --> 00:03:45.676 A:middle
those other domains.

00:03:46.246 --> 00:03:49.206 A:middle
And it's temporary, so it's only

00:03:49.206 --> 00:03:51.296 A:middle
set when your app is launched

00:03:51.296 --> 00:03:52.756 A:middle
with these particular arguments.

00:03:52.756 --> 00:03:53.826 A:middle
If you run your app and these

00:03:53.826 --> 00:03:55.266 A:middle
arguments aren't there the

00:03:55.266 --> 00:03:56.256 A:middle
values won't be there.

00:03:57.216 --> 00:03:59.046 A:middle
So, this is really handy if

00:03:59.046 --> 00:03:59.956 A:middle
you're trying to reproduce an

00:03:59.956 --> 00:04:01.806 A:middle
issue involving user preferences

00:04:02.106 --> 00:04:03.216 A:middle
and you don't want to actually

00:04:03.216 --> 00:04:05.836 A:middle
set them on your machine or for

00:04:05.836 --> 00:04:07.316 A:middle
just enabling a debug flag.

00:04:07.816 --> 00:04:10.106 A:middle
And speaking of debug flags,

00:04:10.516 --> 00:04:12.576 A:middle
AppKit has a couple, here's some

00:04:13.386 --> 00:04:14.786 A:middle
that you can use.

00:04:14.786 --> 00:04:16.646 A:middle
NSiewLayoutFeedback

00:04:16.646 --> 00:04:18.626 A:middle
LoopDebuggingEnabled, you can

00:04:18.626 --> 00:04:20.126 A:middle
set this to yes if your app is

00:04:20.126 --> 00:04:21.706 A:middle
getting stuck repeatedly doing

00:04:21.706 --> 00:04:22.186 A:middle
layout.

00:04:22.456 --> 00:04:24.036 A:middle
The feedback loop debugger will

00:04:24.036 --> 00:04:25.386 A:middle
help you track down that that

00:04:25.386 --> 00:04:25.786 A:middle
issue.

00:04:26.566 --> 00:04:28.696 A:middle
Next is NSApplicationCrash

00:04:28.696 --> 00:04:31.416 A:middle
OnExceptions and use this in

00:04:31.416 --> 00:04:32.996 A:middle
NSApplication if it catches an

00:04:32.996 --> 00:04:34.416 A:middle
exception it'll crash your app.

00:04:34.726 --> 00:04:36.206 A:middle
So, it's a good thing to have on

00:04:36.206 --> 00:04:37.946 A:middle
during development so you find

00:04:37.946 --> 00:04:38.486 A:middle
those issues.

00:04:38.986 --> 00:04:41.386 A:middle
And you probably want to use the

00:04:41.386 --> 00:04:43.586 A:middle
argument domain to set these so

00:04:43.586 --> 00:04:45.286 A:middle
you don't shift with them so

00:04:45.526 --> 00:04:46.756 A:middle
that's a good idea.

00:04:47.046 --> 00:04:49.806 A:middle
Here's a neat thing about the

00:04:49.806 --> 00:04:51.456 A:middle
standard user defaults, it

00:04:51.456 --> 00:04:53.536 A:middle
supports key-value observing or

00:04:53.676 --> 00:04:54.596 A:middle
KVO.

00:04:55.446 --> 00:04:56.766 A:middle
You just add your observer with

00:04:56.766 --> 00:04:58.246 A:middle
the user defaults key as your

00:04:58.246 --> 00:05:01.256 A:middle
keyPath and any time that value

00:05:01.256 --> 00:05:02.826 A:middle
changes even if it's from

00:05:02.826 --> 00:05:04.586 A:middle
another process you'll get

00:05:04.586 --> 00:05:05.126 A:middle
notified.

00:05:05.666 --> 00:05:07.456 A:middle
So, here's an example of what

00:05:07.456 --> 00:05:08.296 A:middle
that looks like.

00:05:08.816 --> 00:05:10.246 A:middle
We add an observer using the

00:05:10.246 --> 00:05:12.236 A:middle
addObserver for keypad options

00:05:12.236 --> 00:05:14.466 A:middle
context method and pass our user

00:05:14.466 --> 00:05:15.986 A:middle
defaults key as a sting.

00:05:17.336 --> 00:05:19.296 A:middle
And of course, when we're no

00:05:19.296 --> 00:05:20.966 A:middle
longer interested in watching

00:05:20.966 --> 00:05:22.726 A:middle
for these changes we remove our

00:05:22.726 --> 00:05:23.306 A:middle
observer.

00:05:24.636 --> 00:05:27.046 A:middle
And in the meantime, you'll get

00:05:27.046 --> 00:05:29.146 A:middle
an observeValue for keyPath call

00:05:29.146 --> 00:05:31.146 A:middle
out any time your defaults value

00:05:31.146 --> 00:05:31.666 A:middle
changes.

00:05:32.166 --> 00:05:33.916 A:middle
So that's about that, here's

00:05:33.916 --> 00:05:36.396 A:middle
what that looks like in diagram

00:05:36.396 --> 00:05:36.786 A:middle
form.

00:05:37.366 --> 00:05:39.296 A:middle
So, if your application sets a

00:05:39.296 --> 00:05:40.846 A:middle
user default and you have an

00:05:40.846 --> 00:05:42.516 A:middle
observer registered it will be

00:05:42.516 --> 00:05:44.536 A:middle
notified of that change.

00:05:45.286 --> 00:05:47.116 A:middle
And similarly, if another

00:05:47.116 --> 00:05:49.246 A:middle
process sets a value for one of

00:05:49.246 --> 00:05:50.386 A:middle
your user defaults that you're

00:05:50.386 --> 00:05:52.476 A:middle
observing, you will be notified

00:05:52.476 --> 00:05:53.116 A:middle
of that as well.

00:05:53.696 --> 00:05:55.256 A:middle
So, it's pretty straightforward.

00:05:56.636 --> 00:05:58.216 A:middle
Here's another neat trick.

00:05:59.156 --> 00:06:01.016 A:middle
So, if you want that new keyPath

00:06:01.016 --> 00:06:02.336 A:middle
syntax and that block-based

00:06:02.336 --> 00:06:03.616 A:middle
observe method that you heard

00:06:03.616 --> 00:06:04.446 A:middle
about in what's new in

00:06:04.446 --> 00:06:06.606 A:middle
Foundation you can do that with

00:06:06.606 --> 00:06:07.376 A:middle
user defaults.

00:06:07.856 --> 00:06:08.646 A:middle
You just need to add an

00:06:08.646 --> 00:06:11.656 A:middle
extension and add at an @objc

00:06:11.656 --> 00:06:14.466 A:middle
dynamic property that has the

00:06:14.466 --> 00:06:16.646 A:middle
same name as your user defaults

00:06:16.646 --> 00:06:17.916 A:middle
key and that's really important.

00:06:17.916 --> 00:06:19.126 A:middle
If the names don't match this

00:06:19.126 --> 00:06:19.996 A:middle
isn't going to work.

00:06:20.386 --> 00:06:22.096 A:middle
And you can as a convenience

00:06:22.096 --> 00:06:23.646 A:middle
implement your property getter

00:06:23.646 --> 00:06:24.916 A:middle
to return the value.

00:06:25.026 --> 00:06:29.046 A:middle
And then you can use the

00:06:29.046 --> 00:06:30.986 A:middle
block-based observe method along

00:06:30.986 --> 00:06:32.566 A:middle
with the keyPath literal syntax

00:06:32.566 --> 00:06:34.956 A:middle
that's new and it works just

00:06:34.956 --> 00:06:35.516 A:middle
like you'd expect.

00:06:36.496 --> 00:06:38.406 A:middle
So that's it for user defaults.

00:06:39.536 --> 00:06:43.566 A:middle
Next up is tip number 64, what

00:06:43.566 --> 00:06:44.086 A:middle
is that?

00:06:45.406 --> 00:06:48.036 A:middle
Oh, base 64 right.

00:06:48.616 --> 00:06:49.816 A:middle
So, for those that aren't

00:06:49.816 --> 00:06:52.096 A:middle
familiar base 64 is an encoding

00:06:52.096 --> 00:06:54.056 A:middle
that lets you represent any data

00:06:54.366 --> 00:06:56.126 A:middle
using a simple set of ASCII.

00:06:56.616 --> 00:06:58.466 A:middle
So, this is handy of you want to

00:06:58.466 --> 00:07:00.596 A:middle
have a test or an easy to copy

00:07:00.596 --> 00:07:02.526 A:middle
paste and share snippet of code

00:07:02.706 --> 00:07:04.296 A:middle
that includes some binary data

00:07:04.296 --> 00:07:05.436 A:middle
and you don't want to worry

00:07:05.436 --> 00:07:07.006 A:middle
about packaging that up and

00:07:07.006 --> 00:07:08.186 A:middle
having to look it up and all

00:07:09.366 --> 00:07:09.836 A:middle
that.

00:07:09.836 --> 00:07:12.796 A:middle
And NSData supports base 64 and

00:07:12.796 --> 00:07:15.276 A:middle
you can create a data from the

00:07:15.276 --> 00:07:17.636 A:middle
base 64 string using the base 64

00:07:17.636 --> 00:07:20.636 A:middle
encoded initializer on data and

00:07:20.636 --> 00:07:21.616 A:middle
you'll get back your data.

00:07:21.616 --> 00:07:24.086 A:middle
And then you can use it [sound

00:07:24.316 --> 00:07:25.296 A:middle
effect] for example, to play a

00:07:25.296 --> 00:07:25.776 A:middle
sound.

00:07:28.256 --> 00:07:32.526 A:middle
And now if you want to create

00:07:32.526 --> 00:07:34.656 A:middle
these base 64 strings you can

00:07:34.656 --> 00:07:36.236 A:middle
use the base 64 encoded string

00:07:36.236 --> 00:07:37.746 A:middle
method on data to get those

00:07:37.746 --> 00:07:38.216 A:middle
strings.

00:07:38.466 --> 00:07:40.066 A:middle
There's also a base 64 command

00:07:40.066 --> 00:07:41.446 A:middle
line utility that you can use in

00:07:41.446 --> 00:07:43.356 A:middle
terminal to get your base 64

00:07:43.356 --> 00:07:45.456 A:middle
strings and that's base 64.

00:07:45.786 --> 00:07:46.676 A:middle
Now back to Rachel.

00:07:49.176 --> 00:07:51.106 A:middle
&gt;&gt; Number 2X, we're going to

00:07:51.106 --> 00:07:52.356 A:middle
talk about asset catalogs a

00:07:52.356 --> 00:07:53.586 A:middle
little bit.

00:07:53.996 --> 00:07:55.216 A:middle
Many of you are already using

00:07:55.216 --> 00:07:56.916 A:middle
asset catalogs, you know that

00:07:56.916 --> 00:07:58.346 A:middle
they organizer your images,

00:07:58.426 --> 00:08:00.196 A:middle
speed up launch times, reduce

00:08:00.196 --> 00:08:00.846 A:middle
storage space.

00:08:01.726 --> 00:08:03.046 A:middle
And I'd like to talk about a few

00:08:03.046 --> 00:08:04.396 A:middle
things that were added last year

00:08:04.396 --> 00:08:06.356 A:middle
in macOS Sierra and iOS 10 in

00:08:06.356 --> 00:08:07.376 A:middle
case you hadn't heard about

00:08:07.376 --> 00:08:07.586 A:middle
them.

00:08:08.326 --> 00:08:09.836 A:middle
First, there's layout direction.

00:08:10.526 --> 00:08:12.676 A:middle
This action image is symmetrical

00:08:12.676 --> 00:08:14.446 A:middle
and it doesn't matter, it'll be

00:08:14.446 --> 00:08:15.706 A:middle
the same both left to right and

00:08:15.706 --> 00:08:16.936 A:middle
right to left so the direction

00:08:16.936 --> 00:08:17.476 A:middle
is fixed.

00:08:18.236 --> 00:08:20.186 A:middle
But here's a GoForward image and

00:08:20.186 --> 00:08:21.526 A:middle
in right to left languages

00:08:21.966 --> 00:08:23.266 A:middle
GoForward means to the left

00:08:23.586 --> 00:08:24.766 A:middle
whereas left to right means it's

00:08:24.766 --> 00:08:25.556 A:middle
going to the right.

00:08:25.976 --> 00:08:27.376 A:middle
So, we want it to mirror for the

00:08:27.376 --> 00:08:28.106 A:middle
other language.

00:08:28.436 --> 00:08:29.626 A:middle
And then a little more

00:08:29.626 --> 00:08:31.626 A:middle
sophisticated is when you have

00:08:31.626 --> 00:08:33.226 A:middle
an image that needs to be

00:08:33.226 --> 00:08:34.236 A:middle
different for the layout

00:08:34.236 --> 00:08:35.856 A:middle
directions, but isn't a mirror

00:08:35.856 --> 00:08:37.626 A:middle
image, such as this autofill

00:08:37.626 --> 00:08:39.636 A:middle
image where the dots indicating

00:08:39.636 --> 00:08:40.786 A:middle
what has been written are to the

00:08:40.786 --> 00:08:42.196 A:middle
left of the pencil in left to

00:08:42.196 --> 00:08:43.646 A:middle
right and to the right of the

00:08:43.646 --> 00:08:45.186 A:middle
pencil in right to left, but the

00:08:45.186 --> 00:08:46.636 A:middle
pencil still tilts to the right.

00:08:47.076 --> 00:08:48.266 A:middle
So, they're not mirror images

00:08:48.266 --> 00:08:49.646 A:middle
and the designer decided it was

00:08:49.646 --> 00:08:50.636 A:middle
worth it to provide two

00:08:50.636 --> 00:08:52.296 A:middle
different images, but asset

00:08:52.436 --> 00:08:53.786 A:middle
catalogs will handle this for

00:08:53.786 --> 00:08:53.966 A:middle
you.

00:08:54.886 --> 00:08:56.216 A:middle
Next, I'd like to talk about

00:08:56.216 --> 00:08:58.096 A:middle
display gamut and that's the

00:08:58.096 --> 00:08:59.676 A:middle
different kind of color

00:08:59.676 --> 00:09:00.736 A:middle
representations that are

00:09:00.736 --> 00:09:02.556 A:middle
available on different displays,

00:09:02.586 --> 00:09:04.576 A:middle
the older displaces use sRGB,

00:09:04.916 --> 00:09:06.146 A:middle
the newer ones with brighter,

00:09:06.146 --> 00:09:08.336 A:middle
richer colors use Display P3.

00:09:08.386 --> 00:09:09.656 A:middle
I've overexaggerated the

00:09:09.656 --> 00:09:11.116 A:middle
difference between these images,

00:09:11.486 --> 00:09:13.016 A:middle
but just to show you that asset

00:09:13.016 --> 00:09:14.836 A:middle
catalogs allow you to specify

00:09:15.246 --> 00:09:17.106 A:middle
specific images for the two

00:09:17.106 --> 00:09:18.246 A:middle
different display gamuts.

00:09:18.906 --> 00:09:23.336 A:middle
In iOS 11 and macOS Sierra we

00:09:23.336 --> 00:09:25.476 A:middle
added colors to asset catalogs.

00:09:25.576 --> 00:09:27.516 A:middle
So, you can make a named color

00:09:27.516 --> 00:09:30.036 A:middle
just my simple accent color here

00:09:30.036 --> 00:09:32.346 A:middle
and you can also if you need to

00:09:32.556 --> 00:09:34.856 A:middle
specify sRGB and Display P3

00:09:34.856 --> 00:09:36.156 A:middle
versions of that color.

00:09:36.786 --> 00:09:39.126 A:middle
To use it in code we want to use

00:09:39.126 --> 00:09:39.766 A:middle
this new API.

00:09:40.656 --> 00:09:42.246 A:middle
You can add your name to the

00:09:42.246 --> 00:09:44.716 A:middle
extensible NSColor.Name enum and

00:09:44.716 --> 00:09:46.756 A:middle
then use the color named

00:09:47.396 --> 00:09:49.286 A:middle
initializer with your name to

00:09:49.286 --> 00:09:50.836 A:middle
create your color it's as easy

00:09:51.786 --> 00:09:52.546 A:middle
as that.

00:09:52.746 --> 00:09:56.616 A:middle
Next up number one, unit tests.

00:09:56.756 --> 00:09:57.556 A:middle
Sometimes there's a

00:09:57.646 --> 00:09:59.346 A:middle
psychological barrier to writing

00:09:59.346 --> 00:10:00.666 A:middle
unit tests, it seems like it's

00:10:00.666 --> 00:10:02.306 A:middle
going to be hard, but I'm here

00:10:02.306 --> 00:10:03.836 A:middle
to show you how easy it can be.

00:10:04.336 --> 00:10:07.426 A:middle
Create a new file in Xcode, make

00:10:07.426 --> 00:10:10.286 A:middle
it a unit test case class, Xcode

00:10:10.286 --> 00:10:11.826 A:middle
will give you a template, you

00:10:11.826 --> 00:10:13.196 A:middle
can fill it in with something as

00:10:13.196 --> 00:10:14.296 A:middle
easy as this.

00:10:14.366 --> 00:10:16.496 A:middle
Here I've created my addCatImage

00:10:16.806 --> 00:10:17.896 A:middle
and I'm checking to see that

00:10:17.896 --> 00:10:18.536 A:middle
it's not nil.

00:10:18.736 --> 00:10:20.766 A:middle
It's just a sanity check, is my

00:10:20.876 --> 00:10:22.376 A:middle
asset catalog on and working.

00:10:22.826 --> 00:10:23.976 A:middle
And once you've got one unit

00:10:23.976 --> 00:10:25.996 A:middle
test written it's much easier to

00:10:26.456 --> 00:10:28.146 A:middle
write additional tests and

00:10:28.146 --> 00:10:29.546 A:middle
prevent bugs from getting out to

00:10:29.546 --> 00:10:30.166 A:middle
your users.

00:10:31.416 --> 00:10:32.096 A:middle
Back to Vince.

00:10:32.586 --> 00:10:35.986 A:middle
&gt;&gt; Okay tip number 27, NSBox.

00:10:36.696 --> 00:10:38.536 A:middle
Sometimes all you want is a

00:10:38.536 --> 00:10:39.916 A:middle
simple view that shows a

00:10:39.916 --> 00:10:40.806 A:middle
background color.

00:10:41.786 --> 00:10:43.496 A:middle
And you control it may be like

00:10:43.496 --> 00:10:45.766 A:middle
this, so you can implement one

00:10:45.916 --> 00:10:47.266 A:middle
and you can make it layered back

00:10:47.266 --> 00:10:50.606 A:middle
even and that's fine or you can

00:10:50.606 --> 00:10:52.196 A:middle
let AppKit do it for you.

00:10:52.576 --> 00:10:54.896 A:middle
We have NSBox all you need to do

00:10:54.896 --> 00:10:56.696 A:middle
is set the box type to custom

00:10:56.936 --> 00:10:58.146 A:middle
and then configure it setting

00:10:58.146 --> 00:10:59.026 A:middle
the fill color.

00:10:59.306 --> 00:11:00.666 A:middle
And this would be more dynamic

00:11:00.666 --> 00:11:01.966 A:middle
than just setting the background

00:11:01.966 --> 00:11:04.406 A:middle
color on a layer because if the

00:11:04.406 --> 00:11:06.056 A:middle
color's a system color that

00:11:06.056 --> 00:11:07.496 A:middle
changes dynamically based on

00:11:07.496 --> 00:11:10.076 A:middle
appearance or context NSBox will

00:11:10.076 --> 00:11:11.006 A:middle
update automatically.

00:11:11.926 --> 00:11:13.786 A:middle
And even better, you can drag it

00:11:13.786 --> 00:11:15.006 A:middle
out of Interface Builder and

00:11:15.006 --> 00:11:15.936 A:middle
configure it from there.

00:11:16.456 --> 00:11:19.476 A:middle
And there are several properties

00:11:19.476 --> 00:11:20.816 A:middle
that you can use to configure a

00:11:20.816 --> 00:11:21.736 A:middle
custom box.

00:11:21.956 --> 00:11:23.076 A:middle
There's border width, corner

00:11:23.076 --> 00:11:24.486 A:middle
radius, border color and of

00:11:24.486 --> 00:11:26.636 A:middle
course, fill color so use that.

00:11:27.036 --> 00:11:28.756 A:middle
And you can even set a content

00:11:28.756 --> 00:11:31.246 A:middle
view on a box to show another

00:11:31.246 --> 00:11:33.446 A:middle
view inside the box, so it's

00:11:33.446 --> 00:11:34.116 A:middle
really easy.

00:11:34.646 --> 00:11:38.006 A:middle
And that's not all, sometimes

00:11:38.056 --> 00:11:39.796 A:middle
all you want is a simple

00:11:39.796 --> 00:11:42.556 A:middle
separator and NSBox has you

00:11:42.556 --> 00:11:43.996 A:middle
covered there too.

00:11:44.346 --> 00:11:45.486 A:middle
All you need to do is create a

00:11:45.486 --> 00:11:47.576 A:middle
box with the separator type and

00:11:47.576 --> 00:11:48.736 A:middle
position it however you like.

00:11:49.376 --> 00:11:51.106 A:middle
And of course, it's available

00:11:51.106 --> 00:11:51.946 A:middle
from Interface Builder.

00:11:52.316 --> 00:11:54.316 A:middle
So that's NSBox it should make

00:11:54.316 --> 00:11:56.176 A:middle
creating your user interfaces a

00:11:56.176 --> 00:11:56.896 A:middle
lot easier.

00:11:58.216 --> 00:12:00.296 A:middle
Next up is tip number eight,

00:12:00.616 --> 00:12:01.956 A:middle
restorable state.

00:12:04.286 --> 00:12:06.766 A:middle
So, macOS has a feature where

00:12:06.766 --> 00:12:08.166 A:middle
you can restart your machine and

00:12:08.166 --> 00:12:09.606 A:middle
all your running applications

00:12:09.606 --> 00:12:11.666 A:middle
come back and using this

00:12:11.666 --> 00:12:13.176 A:middle
invaluable trio of methods on

00:12:13.276 --> 00:12:15.156 A:middle
NSResponder you can bring your

00:12:15.156 --> 00:12:16.856 A:middle
user right back to where they

00:12:16.856 --> 00:12:17.606 A:middle
left off.

00:12:17.866 --> 00:12:19.686 A:middle
And most AppKit controls will

00:12:19.686 --> 00:12:21.076 A:middle
have these implemented for you,

00:12:21.076 --> 00:12:22.276 A:middle
but if you have your own

00:12:22.276 --> 00:12:23.966 A:middle
controls or restorable state,

00:12:23.966 --> 00:12:24.806 A:middle
you can implement them

00:12:24.806 --> 00:12:25.436 A:middle
yourselves.

00:12:25.976 --> 00:12:27.946 A:middle
And this is what that might look

00:12:27.946 --> 00:12:28.316 A:middle
like.

00:12:28.906 --> 00:12:30.756 A:middle
So, you have your properties

00:12:30.756 --> 00:12:32.186 A:middle
that are your restorable state,

00:12:32.376 --> 00:12:34.226 A:middle
when they change you invalidate

00:12:34.226 --> 00:12:35.276 A:middle
restorable state.

00:12:35.616 --> 00:12:37.836 A:middle
And then at some point, the

00:12:37.836 --> 00:12:39.016 A:middle
system will call in code

00:12:39.016 --> 00:12:40.616 A:middle
restorable state so you take the

00:12:40.616 --> 00:12:42.226 A:middle
values from your properties and

00:12:42.226 --> 00:12:43.926 A:middle
put them in the coder and then

00:12:43.926 --> 00:12:45.026 A:middle
when your application is

00:12:45.026 --> 00:12:46.436 A:middle
relaunched we'll call restore

00:12:46.436 --> 00:12:48.016 A:middle
state with coder and you take

00:12:48.016 --> 00:12:49.516 A:middle
the values out your coder and

00:12:49.516 --> 00:12:50.446 A:middle
put them in the properties.

00:12:50.746 --> 00:12:51.996 A:middle
It's pretty straightforward and

00:12:51.996 --> 00:12:54.926 A:middle
pretty easy, but there is an

00:12:54.926 --> 00:12:55.716 A:middle
easier way.

00:12:56.176 --> 00:12:58.016 A:middle
NSResponder has this class

00:12:58.196 --> 00:13:00.446 A:middle
property restorableStateKeyPaths

00:13:00.446 --> 00:13:02.606 A:middle
and this can point to any

00:13:02.606 --> 00:13:04.586 A:middle
NSCoding conforming type and

00:13:04.586 --> 00:13:05.886 A:middle
AppKit will use key value

00:13:05.886 --> 00:13:07.646 A:middle
observing to watch for changes

00:13:07.846 --> 00:13:08.796 A:middle
to these properties.

00:13:09.346 --> 00:13:12.006 A:middle
So that means when restoring

00:13:12.166 --> 00:13:13.506 A:middle
will automatically set the

00:13:13.506 --> 00:13:15.886 A:middle
values for you, so it's really

00:13:15.886 --> 00:13:16.396 A:middle
easy.

00:13:16.396 --> 00:13:18.436 A:middle
Do note that these properties

00:13:18.436 --> 00:13:20.256 A:middle
are marked @objc dynamic and so

00:13:20.336 --> 00:13:21.756 A:middle
that's key value observing can

00:13:21.756 --> 00:13:23.886 A:middle
do its automatic notification.

00:13:24.506 --> 00:13:26.466 A:middle
And you can still use this with

00:13:26.466 --> 00:13:27.696 A:middle
the other state restoration

00:13:27.696 --> 00:13:28.406 A:middle
callouts.

00:13:28.826 --> 00:13:30.826 A:middle
You can use this for your simple

00:13:30.826 --> 00:13:32.076 A:middle
properties and then use those

00:13:32.076 --> 00:13:33.546 A:middle
other callouts for other bits of

00:13:33.546 --> 00:13:34.916 A:middle
restorable state you may have,

00:13:34.916 --> 00:13:35.676 A:middle
they work together.

00:13:37.256 --> 00:13:38.816 A:middle
All right, now back to Rachel.

00:13:39.786 --> 00:13:41.196 A:middle
&gt;&gt; Okay I'm going to tell you a

00:13:41.196 --> 00:13:43.006 A:middle
sequence of tips about Core Data

00:13:43.006 --> 00:13:45.256 A:middle
that build upon each other and

00:13:45.256 --> 00:13:46.616 A:middle
I'm starting with number 13

00:13:46.616 --> 00:13:47.516 A:middle
because you may have been

00:13:47.516 --> 00:13:49.076 A:middle
unlucky enough in the past to

00:13:49.076 --> 00:13:50.566 A:middle
have to set up a Core Data Stack

00:13:50.856 --> 00:13:51.996 A:middle
before the existence of

00:13:52.036 --> 00:13:54.176 A:middle
NSPersistentContainer that was

00:13:54.176 --> 00:13:56.886 A:middle
added last year in Sierra and

00:13:57.386 --> 00:13:58.466 A:middle
iOS 10.

00:13:58.466 --> 00:14:00.376 A:middle
Core Data Stack consists of a

00:14:00.376 --> 00:14:02.676 A:middle
managed object model and then

00:14:02.676 --> 00:14:04.186 A:middle
you have a persistent store

00:14:04.186 --> 00:14:05.886 A:middle
coordinator that coordinates one

00:14:05.886 --> 00:14:08.036 A:middle
or more persistent stores and a

00:14:08.036 --> 00:14:10.016 A:middle
managed object context.

00:14:10.556 --> 00:14:12.156 A:middle
And to set that up took a fair

00:14:12.156 --> 00:14:12.966 A:middle
amount of code.

00:14:13.016 --> 00:14:15.186 A:middle
This is a reduced version of the

00:14:15.186 --> 00:14:16.606 A:middle
code you needed to write to get

00:14:16.606 --> 00:14:17.116 A:middle
that going.

00:14:18.316 --> 00:14:20.906 A:middle
But last year with the hard work

00:14:20.906 --> 00:14:22.496 A:middle
of the Core Data team there's

00:14:22.536 --> 00:14:24.126 A:middle
the NSPersistentContainer class

00:14:24.176 --> 00:14:26.666 A:middle
setting encapsulates the stack

00:14:27.246 --> 00:14:28.106 A:middle
and it's easy now.

00:14:28.446 --> 00:14:29.406 A:middle
You just have to do this.

00:14:29.456 --> 00:14:31.386 A:middle
The key line is to initialize

00:14:31.436 --> 00:14:32.806 A:middle
your persistent container with

00:14:32.806 --> 00:14:33.766 A:middle
your model name.

00:14:33.876 --> 00:14:38.236 A:middle
Moving on to number 21, arrays.

00:14:38.896 --> 00:14:41.676 A:middle
I've got my Cat Wrangler

00:14:41.676 --> 00:14:43.446 A:middle
application, one of those Cat

00:14:43.446 --> 00:14:45.666 A:middle
management applications and I

00:14:46.226 --> 00:14:48.986 A:middle
have a cat entity in my data

00:14:48.986 --> 00:14:51.186 A:middle
model with a name and a photo

00:14:51.186 --> 00:14:51.766 A:middle
attribute.

00:14:52.126 --> 00:14:53.976 A:middle
And I realize cats also have

00:14:53.976 --> 00:14:56.466 A:middle
behaviors, such as attacking

00:14:56.466 --> 00:14:58.696 A:middle
dust particles, staring at

00:14:58.696 --> 00:15:01.286 A:middle
walls, and playing keyboards.

00:15:02.196 --> 00:15:03.936 A:middle
So, I'd like to add an array of

00:15:03.936 --> 00:15:05.176 A:middle
behaviors because I think a

00:15:05.236 --> 00:15:06.616 A:middle
string is a good representation

00:15:06.616 --> 00:15:07.976 A:middle
of a behavior and I just want an

00:15:07.976 --> 00:15:08.816 A:middle
array of strings.

00:15:09.436 --> 00:15:11.146 A:middle
But there's no array type here,

00:15:12.136 --> 00:15:13.496 A:middle
well I just transformable

00:15:13.496 --> 00:15:14.686 A:middle
because that can be anything.

00:15:14.686 --> 00:15:17.236 A:middle
So, I make an array that's not a

00:15:17.236 --> 00:15:17.716 A:middle
good idea.

00:15:18.626 --> 00:15:19.906 A:middle
There's performance issues,

00:15:20.846 --> 00:15:22.546 A:middle
there's overhead for serializing

00:15:22.546 --> 00:15:23.826 A:middle
and deserializing arrays and

00:15:23.826 --> 00:15:26.336 A:middle
their contents and also any such

00:15:26.336 --> 00:15:27.526 A:middle
requests are going to be a lot

00:15:27.576 --> 00:15:28.596 A:middle
slower if you do things this

00:15:28.656 --> 00:15:28.866 A:middle
way.

00:15:29.476 --> 00:15:31.676 A:middle
So, we recommend instead making

00:15:31.676 --> 00:15:34.096 A:middle
a behavior entity and making a

00:15:34.096 --> 00:15:35.606 A:middle
relationship to the behaviors.

00:15:36.206 --> 00:15:37.226 A:middle
This would be a too many

00:15:37.226 --> 00:15:38.956 A:middle
relationships because there's

00:15:38.956 --> 00:15:41.426 A:middle
many behaviors and I want to

00:15:41.426 --> 00:15:43.066 A:middle
check the ordered checkbox if I

00:15:43.066 --> 00:15:44.986 A:middle
care that they're in a certain

00:15:44.986 --> 00:15:45.286 A:middle
order.

00:15:46.256 --> 00:15:48.126 A:middle
In addition, this has the

00:15:48.126 --> 00:15:49.956 A:middle
benefit of allowing me to use a

00:15:49.956 --> 00:15:52.246 A:middle
richer data model for my

00:15:52.246 --> 00:15:54.256 A:middle
behavior, I can add a duration

00:15:54.256 --> 00:15:54.926 A:middle
for example.

00:15:55.276 --> 00:15:56.856 A:middle
And so, your data model will

00:15:56.856 --> 00:15:58.336 A:middle
become more representative of

00:15:58.336 --> 00:15:59.166 A:middle
what you're trying to do.

00:16:00.646 --> 00:16:02.436 A:middle
Tip number 34, core data

00:16:02.436 --> 00:16:03.106 A:middle
migration.

00:16:03.656 --> 00:16:04.796 A:middle
Migration is one of the real

00:16:04.796 --> 00:16:06.166 A:middle
strengths of using Core Data.

00:16:06.166 --> 00:16:09.676 A:middle
I shipped Cat Wrangler and then

00:16:09.676 --> 00:16:11.956 A:middle
I realized cats also eat food

00:16:12.776 --> 00:16:17.846 A:middle
like grass, cupcakes, meat, and

00:16:17.846 --> 00:16:18.956 A:middle
of course broccoli.

00:16:20.416 --> 00:16:22.496 A:middle
So, I need a new data model, I

00:16:22.496 --> 00:16:24.236 A:middle
copy my Cat Wrangler data model,

00:16:24.236 --> 00:16:27.666 A:middle
make Cat Wrangler 2 and I can

00:16:27.666 --> 00:16:29.936 A:middle
add my food entity to it.

00:16:30.446 --> 00:16:32.516 A:middle
In Xcode, I simply change the

00:16:32.516 --> 00:16:34.006 A:middle
current model version to Cat

00:16:34.006 --> 00:16:37.116 A:middle
Wrangler 2 and then lightweight

00:16:37.116 --> 00:16:38.076 A:middle
migration is handled

00:16:38.076 --> 00:16:39.476 A:middle
automatically if you've used

00:16:39.516 --> 00:16:40.806 A:middle
NSPersistentContainer.

00:16:41.466 --> 00:16:42.876 A:middle
If you set up your own stack you

00:16:43.016 --> 00:16:44.356 A:middle
have a couple of options that

00:16:44.356 --> 00:16:45.996 A:middle
you need to set to make the

00:16:45.996 --> 00:16:47.726 A:middle
migration happen and that's all

00:16:47.806 --> 00:16:50.126 A:middle
you have to do.

00:16:50.356 --> 00:16:53.026 A:middle
Tip number 55, error handling.

00:16:53.806 --> 00:16:55.826 A:middle
In a perfect world we'd handle

00:16:55.826 --> 00:16:57.896 A:middle
all errors, but everybody knows

00:16:57.896 --> 00:16:59.386 A:middle
it's not a perfect world, the

00:16:59.386 --> 00:17:01.076 A:middle
world itself isn't entirely

00:17:01.076 --> 00:17:01.466 A:middle
round.

00:17:02.936 --> 00:17:04.866 A:middle
So, if you can only handle

00:17:04.866 --> 00:17:07.356 A:middle
errors in one area in Core Data

00:17:07.356 --> 00:17:08.896 A:middle
the most important part is when

00:17:08.896 --> 00:17:10.356 A:middle
you've added a persistent store.

00:17:10.956 --> 00:17:12.206 A:middle
If things don't work there

00:17:12.386 --> 00:17:13.566 A:middle
nothing's going to go right in

00:17:13.566 --> 00:17:14.396 A:middle
your application.

00:17:15.786 --> 00:17:17.986 A:middle
If you use persistent container

00:17:18.846 --> 00:17:19.616 A:middle
you can see there's the

00:17:19.616 --> 00:17:21.826 A:middle
loadPersistentStores method and

00:17:21.926 --> 00:17:22.846 A:middle
some of the things that can

00:17:22.906 --> 00:17:24.036 A:middle
happen is you can run out of

00:17:24.036 --> 00:17:25.236 A:middle
storage space, you can have

00:17:25.236 --> 00:17:26.846 A:middle
permission issues or data

00:17:26.846 --> 00:17:28.866 A:middle
protection or you can have an

00:17:28.866 --> 00:17:32.116 A:middle
older file that can't be opened,

00:17:32.116 --> 00:17:32.966 A:middle
you don't have a proper

00:17:32.966 --> 00:17:34.586 A:middle
migration strategy for it.

00:17:35.286 --> 00:17:36.736 A:middle
And if you're wondering how to

00:17:36.816 --> 00:17:38.306 A:middle
present those errors to users

00:17:39.156 --> 00:17:40.436 A:middle
Vince has something to tell you.

00:17:40.436 --> 00:17:43.046 A:middle
&gt;&gt; All right, tip number 404,

00:17:43.236 --> 00:17:43.856 A:middle
NSError.

00:17:44.686 --> 00:17:46.596 A:middle
So, in the rare event that

00:17:46.596 --> 00:17:47.856 A:middle
something goes wrong in your

00:17:47.856 --> 00:17:49.426 A:middle
application you want to give

00:17:49.426 --> 00:17:51.376 A:middle
your users great error messages

00:17:51.446 --> 00:17:53.586 A:middle
and Cocoa APIs like Core Data

00:17:54.056 --> 00:17:55.376 A:middle
give you error messages that are

00:17:55.376 --> 00:17:56.746 A:middle
fully localized and ready to

00:17:56.746 --> 00:17:58.786 A:middle
present to the user and that's

00:17:58.786 --> 00:18:00.066 A:middle
really easy to do.

00:18:00.176 --> 00:18:02.226 A:middle
Any responder has a presentError

00:18:02.226 --> 00:18:04.006 A:middle
method, you pass in your error

00:18:04.006 --> 00:18:05.406 A:middle
and it'll go up the responder

00:18:05.406 --> 00:18:07.936 A:middle
chain, if anything NSApplication

00:18:07.936 --> 00:18:08.776 A:middle
will catch it and show a

00:18:08.776 --> 00:18:09.376 A:middle
dialogue.

00:18:10.136 --> 00:18:11.376 A:middle
And if you have your own

00:18:11.376 --> 00:18:12.656 A:middle
responder subclass that's

00:18:12.656 --> 00:18:13.736 A:middle
well-suited to presenting an

00:18:13.736 --> 00:18:15.866 A:middle
error you can override this and

00:18:15.916 --> 00:18:17.296 A:middle
present the error yourself.

00:18:17.946 --> 00:18:21.356 A:middle
And here's the trick about these

00:18:21.356 --> 00:18:24.566 A:middle
Cocoa API errors, you can create

00:18:24.566 --> 00:18:26.676 A:middle
them yourself all you need to do

00:18:26.676 --> 00:18:30.046 A:middle
is create an NSError, pass in

00:18:30.046 --> 00:18:32.326 A:middle
the NS Cocoa error domain, a

00:18:32.326 --> 00:18:33.976 A:middle
code that matches what went

00:18:33.976 --> 00:18:36.316 A:middle
wrong and then a user info that

00:18:36.316 --> 00:18:37.856 A:middle
might have some additional

00:18:37.856 --> 00:18:40.086 A:middle
information like the file URL

00:18:40.086 --> 00:18:41.696 A:middle
you're acting on.

00:18:42.136 --> 00:18:43.796 A:middle
And you'll get a nice localized

00:18:43.796 --> 00:18:45.316 A:middle
user presentable error just like

00:18:45.316 --> 00:18:46.546 A:middle
that, just like the ones we

00:18:46.546 --> 00:18:46.946 A:middle
return.

00:18:47.396 --> 00:18:49.316 A:middle
And we have a lot of error

00:18:49.316 --> 00:18:52.046 A:middle
codes, so hopefully you can find

00:18:52.046 --> 00:18:53.356 A:middle
something that matches what went

00:18:53.356 --> 00:18:53.796 A:middle
wrong.

00:18:54.076 --> 00:18:55.876 A:middle
This is a snippet of foundation

00:18:55.876 --> 00:18:57.416 A:middle
errors.h, the generated

00:18:57.416 --> 00:18:59.286 A:middle
interface, so feel free to look

00:18:59.286 --> 00:19:00.976 A:middle
through this, we're not going to

00:19:00.976 --> 00:19:01.606 A:middle
go through them all.

00:19:03.136 --> 00:19:05.846 A:middle
And if the error is close, but

00:19:05.846 --> 00:19:07.386 A:middle
could be better you can

00:19:07.386 --> 00:19:09.176 A:middle
customize them with the user

00:19:09.176 --> 00:19:09.606 A:middle
info.

00:19:09.606 --> 00:19:11.256 A:middle
There are several user info keys

00:19:11.256 --> 00:19:12.776 A:middle
that will let you alter pieces

00:19:12.776 --> 00:19:13.796 A:middle
of the error message.

00:19:14.026 --> 00:19:15.536 A:middle
Here we're altering the recovery

00:19:15.536 --> 00:19:17.416 A:middle
suggestion because we know that

00:19:17.416 --> 00:19:18.266 A:middle
this error occurred in the

00:19:18.266 --> 00:19:19.936 A:middle
context of a download and we can

00:19:19.936 --> 00:19:21.946 A:middle
tell the user that to help them

00:19:21.946 --> 00:19:22.326 A:middle
recover.

00:19:22.846 --> 00:19:25.756 A:middle
And by the way, if you're using

00:19:25.756 --> 00:19:27.806 A:middle
Xcode 9 you can use this new

00:19:27.806 --> 00:19:29.676 A:middle
Cocoa error method to make

00:19:29.676 --> 00:19:31.296 A:middle
creating Cocoa domain errors

00:19:31.396 --> 00:19:32.686 A:middle
even more convenient.

00:19:34.056 --> 00:19:36.306 A:middle
Now if you need an error that

00:19:36.306 --> 00:19:38.646 A:middle
Cocoa doesn't provide it's still

00:19:38.646 --> 00:19:39.636 A:middle
easy to make your own.

00:19:40.386 --> 00:19:42.266 A:middle
All you need to do is define a

00:19:42.266 --> 00:19:44.846 A:middle
domain, your error codes, and

00:19:45.036 --> 00:19:47.086 A:middle
then you create an NSError with

00:19:47.086 --> 00:19:49.916 A:middle
that domain, one of those codes

00:19:49.916 --> 00:19:52.006 A:middle
and a user info with keys that

00:19:52.006 --> 00:19:53.386 A:middle
describe the error message,

00:19:53.876 --> 00:19:54.866 A:middle
provide the error message.

00:19:55.186 --> 00:19:57.176 A:middle
And you don't need to give those

00:19:57.176 --> 00:19:59.186 A:middle
keys up front in your user info

00:19:59.456 --> 00:20:01.116 A:middle
you can call this NSErrorClass

00:20:01.116 --> 00:20:02.816 A:middle
method, set user info value

00:20:02.816 --> 00:20:04.336 A:middle
provider, and you get at your

00:20:04.336 --> 00:20:04.976 A:middle
domain.

00:20:05.206 --> 00:20:07.146 A:middle
And when an NSError with your

00:20:07.146 --> 00:20:09.466 A:middle
domain looks up at a info key

00:20:09.466 --> 00:20:10.976 A:middle
and it's not found it will call

00:20:10.976 --> 00:20:11.656 A:middle
this block.

00:20:12.116 --> 00:20:13.916 A:middle
And so, you can lazily return

00:20:13.916 --> 00:20:15.516 A:middle
values for those keys.

00:20:16.036 --> 00:20:17.736 A:middle
And what that means is now it's

00:20:17.776 --> 00:20:20.086 A:middle
super easy to create your errors

00:20:20.206 --> 00:20:21.556 A:middle
you just make an NSError with

00:20:21.556 --> 00:20:23.116 A:middle
your domain and code and that's

00:20:23.156 --> 00:20:23.396 A:middle
it.

00:20:26.586 --> 00:20:27.706 A:middle
Now there are a lot of

00:20:27.706 --> 00:20:29.756 A:middle
properties on NSError, check out

00:20:29.756 --> 00:20:30.716 A:middle
the header for more.

00:20:30.716 --> 00:20:33.376 A:middle
I do want to note that a lot of

00:20:33.376 --> 00:20:35.166 A:middle
them have user info keys that

00:20:35.166 --> 00:20:37.066 A:middle
correspond so you can use them

00:20:37.066 --> 00:20:38.676 A:middle
in your user info value provider

00:20:38.676 --> 00:20:40.526 A:middle
and return values lazily, so

00:20:40.526 --> 00:20:41.276 A:middle
give those a look.

00:20:42.616 --> 00:20:45.996 A:middle
Now next up is tip number six,

00:20:46.116 --> 00:20:47.326 A:middle
shared keysets.

00:20:48.076 --> 00:20:50.256 A:middle
So, if you were creating a lot

00:20:50.456 --> 00:20:52.136 A:middle
of dictionaries with the same

00:20:52.136 --> 00:20:54.636 A:middle
known keys you can use a shared

00:20:54.686 --> 00:20:56.206 A:middle
keyset and your dictionaries

00:20:56.206 --> 00:20:57.826 A:middle
will be more compact and

00:20:57.986 --> 00:20:59.276 A:middle
performant, thanks to proof of

00:20:59.276 --> 00:20:59.786 A:middle
hashing.

00:21:00.236 --> 00:21:01.896 A:middle
So, you create a shared keyset

00:21:01.896 --> 00:21:03.816 A:middle
using this NSDictionary class

00:21:03.966 --> 00:21:06.176 A:middle
function and it comes up with

00:21:06.176 --> 00:21:07.916 A:middle
the perfect hash and then you

00:21:07.916 --> 00:21:08.696 A:middle
can initialize your

00:21:08.806 --> 00:21:10.086 A:middle
NSMutableDictationaries with

00:21:10.086 --> 00:21:10.876 A:middle
your shared keyset.

00:21:11.806 --> 00:21:13.186 A:middle
Here's what this might look

00:21:13.186 --> 00:21:13.506 A:middle
like.

00:21:14.116 --> 00:21:16.036 A:middle
So, you create your shared

00:21:16.036 --> 00:21:18.266 A:middle
keyset, it is not trivial to

00:21:18.266 --> 00:21:20.136 A:middle
compute a shared keyset so it's

00:21:20.136 --> 00:21:22.456 A:middle
a good idea to stash it away and

00:21:22.456 --> 00:21:24.026 A:middle
reuse it and create as many

00:21:24.026 --> 00:21:25.296 A:middle
mutable dictionaries as you

00:21:25.826 --> 00:21:26.316 A:middle
want.

00:21:26.436 --> 00:21:27.436 A:middle
And you create your mutable

00:21:27.436 --> 00:21:29.606 A:middle
dictionary and then you can use

00:21:29.606 --> 00:21:30.966 A:middle
it like any other mutable

00:21:30.966 --> 00:21:33.196 A:middle
dictionary and even you can put

00:21:33.196 --> 00:21:34.646 A:middle
in keys that aren't in your

00:21:34.646 --> 00:21:36.506 A:middle
shared keyset they just won't be

00:21:36.506 --> 00:21:37.156 A:middle
as performant.

00:21:37.626 --> 00:21:39.756 A:middle
So that's shared keyset.

00:21:40.286 --> 00:21:41.396 A:middle
Now back to Rachel.

00:21:42.496 --> 00:21:44.566 A:middle
&gt;&gt; We've come to hexadecimal A

00:21:44.676 --> 00:21:46.836 A:middle
for accessibility, get AX

00:21:46.836 --> 00:21:47.966 A:middle
accessibility?

00:21:48.116 --> 00:21:52.276 A:middle
And Apple has many ways to make

00:21:52.276 --> 00:21:53.546 A:middle
your products accessible to all

00:21:53.546 --> 00:21:54.016 A:middle
users.

00:21:54.016 --> 00:21:55.186 A:middle
I'm just going to go over a few

00:21:55.186 --> 00:21:55.896 A:middle
small things.

00:21:56.296 --> 00:21:57.826 A:middle
VoiceOver is not small, but I'll

00:21:57.826 --> 00:21:59.046 A:middle
talk about it briefly.

00:21:59.396 --> 00:22:00.846 A:middle
It comes built-in on all Apple

00:22:00.846 --> 00:22:03.396 A:middle
products and it's easy to set up

00:22:03.396 --> 00:22:04.766 A:middle
in Interface Builder, I have my

00:22:04.906 --> 00:22:07.946 A:middle
add cat button and I just fill

00:22:07.946 --> 00:22:09.526 A:middle
in the accessibility description

00:22:09.526 --> 00:22:11.296 A:middle
add cat and then VoiceOver knows

00:22:11.296 --> 00:22:13.446 A:middle
what to say.

00:22:13.636 --> 00:22:15.556 A:middle
Also remember to test your apps

00:22:15.626 --> 00:22:17.706 A:middle
at low resolutions, low vision

00:22:17.706 --> 00:22:19.116 A:middle
users want to see things bigger

00:22:19.116 --> 00:22:19.796 A:middle
on the screen.

00:22:20.006 --> 00:22:22.156 A:middle
So, for example, here's my Cat

00:22:22.156 --> 00:22:23.786 A:middle
Wrangler/screen that I'm really

00:22:23.786 --> 00:22:24.416 A:middle
happy with.

00:22:24.416 --> 00:22:26.456 A:middle
I try it at a lower resolution

00:22:26.456 --> 00:22:28.236 A:middle
it goes off the screen, don't

00:22:28.236 --> 00:22:29.136 A:middle
let this happen to you.

00:22:29.136 --> 00:22:32.056 A:middle
Last, I'd like to point out the

00:22:32.056 --> 00:22:33.636 A:middle
existence of the Accessibility

00:22:33.636 --> 00:22:35.526 A:middle
Inspector that's available from

00:22:35.526 --> 00:22:36.536 A:middle
the Xcode menu.

00:22:36.966 --> 00:22:38.586 A:middle
Launch it, run it on your apps

00:22:38.646 --> 00:22:40.176 A:middle
and see where you can improve

00:22:40.656 --> 00:22:41.996 A:middle
your apps in terms of being

00:22:41.996 --> 00:22:42.596 A:middle
accessible.

00:22:43.506 --> 00:22:44.176 A:middle
Back to Vince.

00:22:45.166 --> 00:22:47.646 A:middle
&gt;&gt; Okay and now toward infinity

00:22:48.116 --> 00:22:48.966 A:middle
and documents.

00:22:50.366 --> 00:22:52.086 A:middle
So, users today are very

00:22:52.086 --> 00:22:54.066 A:middle
demanding, they expect a lot

00:22:54.066 --> 00:22:55.326 A:middle
from document-based apps.

00:22:55.586 --> 00:22:56.766 A:middle
They don't want to worry about

00:22:56.766 --> 00:22:57.296 A:middle
saving.

00:22:57.756 --> 00:22:59.656 A:middle
They want it to be easy to name

00:22:59.656 --> 00:23:01.736 A:middle
and organize their documents and

00:23:01.736 --> 00:23:03.536 A:middle
they want powerful version

00:23:03.536 --> 00:23:03.946 A:middle
control.

00:23:04.516 --> 00:23:06.326 A:middle
And they even want features like

00:23:06.326 --> 00:23:07.906 A:middle
iCloud document sharing that's

00:23:07.906 --> 00:23:09.736 A:middle
new in macOS High Sierra that

00:23:09.736 --> 00:23:10.816 A:middle
you will never even have heard

00:23:10.816 --> 00:23:12.226 A:middle
about until this week.

00:23:12.496 --> 00:23:13.646 A:middle
What's a developer to do?

00:23:14.766 --> 00:23:17.796 A:middle
Well you can use NSDocument and

00:23:17.796 --> 00:23:19.416 A:middle
NSDocument has a class property

00:23:19.416 --> 00:23:20.606 A:middle
autosavesInPlace.

00:23:20.936 --> 00:23:22.626 A:middle
By default, it returns false,

00:23:22.846 --> 00:23:24.406 A:middle
but you can override it and

00:23:24.406 --> 00:23:26.076 A:middle
return true and you get all of

00:23:26.076 --> 00:23:28.326 A:middle
those features for free, so it's

00:23:28.326 --> 00:23:28.986 A:middle
pretty great.

00:23:29.326 --> 00:23:30.916 A:middle
Check out NSDocument if you have

00:23:30.916 --> 00:23:32.066 A:middle
a document-based application.

00:23:32.826 --> 00:23:37.406 A:middle
Next up is number 42, the answer

00:23:38.206 --> 00:23:39.626 A:middle
to reporting exceptions.

00:23:40.816 --> 00:23:41.946 A:middle
For the most part, when

00:23:41.946 --> 00:23:43.386 A:middle
NSApplication catches an

00:23:43.386 --> 00:23:45.296 A:middle
exception it will just log it

00:23:45.296 --> 00:23:46.276 A:middle
and let your app continue

00:23:46.276 --> 00:23:47.046 A:middle
limping along.

00:23:47.456 --> 00:23:48.776 A:middle
But if you want to add

00:23:48.776 --> 00:23:50.416 A:middle
information or handle those

00:23:50.416 --> 00:23:52.066 A:middle
exceptions differently you can

00:23:52.066 --> 00:23:53.656 A:middle
override this NSApplication

00:23:53.656 --> 00:23:55.166 A:middle
method to do your own thing.

00:23:55.716 --> 00:23:57.516 A:middle
Now back to Rachel.

00:23:58.286 --> 00:24:00.656 A:middle
&gt;&gt; All right, to err is human

00:24:00.776 --> 00:24:01.816 A:middle
and to [inaudible] computer,

00:24:01.816 --> 00:24:02.906 A:middle
especially when the humans have

00:24:02.906 --> 00:24:04.416 A:middle
erred so we'll talk a little bit

00:24:04.416 --> 00:24:05.456 A:middle
about debugging.

00:24:05.796 --> 00:24:06.896 A:middle
You know here's many, many

00:24:06.896 --> 00:24:08.196 A:middle
debugging tools and I'm just

00:24:08.196 --> 00:24:09.636 A:middle
going to show you a couple that

00:24:09.636 --> 00:24:10.986 A:middle
are somewhat hidden in Xcode.

00:24:10.986 --> 00:24:12.626 A:middle
Right above the debug console

00:24:12.886 --> 00:24:14.226 A:middle
there's this row of buttons,

00:24:14.936 --> 00:24:16.626 A:middle
there's the debug view hierarchy

00:24:16.626 --> 00:24:19.716 A:middle
button, debug memory graph and

00:24:19.716 --> 00:24:20.926 A:middle
simulate location.

00:24:21.326 --> 00:24:22.246 A:middle
I'm just going to show you a

00:24:22.246 --> 00:24:23.326 A:middle
little bit about the view

00:24:23.326 --> 00:24:23.906 A:middle
debugger.

00:24:25.256 --> 00:24:27.096 A:middle
Here I have this simple browser

00:24:27.096 --> 00:24:28.976 A:middle
sample application and I can

00:24:28.976 --> 00:24:31.096 A:middle
expand out the views in order to

00:24:31.096 --> 00:24:32.686 A:middle
see what's going on, is there a

00:24:32.686 --> 00:24:33.796 A:middle
view that's hidden by another

00:24:33.796 --> 00:24:35.626 A:middle
one, which view is doing what.

00:24:35.626 --> 00:24:38.416 A:middle
I can see where the views extend

00:24:38.416 --> 00:24:39.636 A:middle
off when they're clipped views,

00:24:39.976 --> 00:24:41.146 A:middle
there's many other things with

00:24:41.146 --> 00:24:42.666 A:middle
auto layout that you can use in

00:24:42.666 --> 00:24:44.296 A:middle
this view debugger so check it

00:24:44.296 --> 00:24:46.116 A:middle
out and it'll simplify your

00:24:46.116 --> 00:24:47.476 A:middle
ability to debug your view

00:24:47.566 --> 00:24:47.996 A:middle
problems.

00:24:49.176 --> 00:24:51.066 A:middle
Sometimes the bugs are in our

00:24:51.066 --> 00:24:53.006 A:middle
code, in which case I've come to

00:24:53.006 --> 00:24:57.616 A:middle
tip 30512012 right, bug reports.

00:24:58.476 --> 00:25:00.146 A:middle
To make it easier for us to fix

00:25:00.146 --> 00:25:02.356 A:middle
the bugs include steps to

00:25:02.356 --> 00:25:03.736 A:middle
reproduce that's the very most

00:25:03.736 --> 00:25:04.546 A:middle
important thing.

00:25:05.716 --> 00:25:07.136 A:middle
We love it when you put sample

00:25:07.136 --> 00:25:08.406 A:middle
apps in your bug reports,

00:25:08.786 --> 00:25:10.666 A:middle
especially when they build and

00:25:10.666 --> 00:25:12.486 A:middle
show the problem on the platform

00:25:12.486 --> 00:25:13.296 A:middle
that you care about.

00:25:14.286 --> 00:25:15.756 A:middle
Include any resources that are

00:25:15.756 --> 00:25:16.956 A:middle
needed to reproduce your

00:25:16.956 --> 00:25:17.576 A:middle
problem.

00:25:19.026 --> 00:25:20.596 A:middle
And then logs, such as

00:25:20.646 --> 00:25:21.356 A:middle
sysdiagnose.

00:25:21.946 --> 00:25:23.126 A:middle
There's a page on

00:25:23.276 --> 00:25:25.446 A:middle
developer.apple.com that shows

00:25:25.446 --> 00:25:27.696 A:middle
how to collect logs for all of

00:25:27.696 --> 00:25:29.566 A:middle
our platforms and look through

00:25:29.566 --> 00:25:31.236 A:middle
there see whatever might be

00:25:31.236 --> 00:25:32.426 A:middle
helpful to the person who's

00:25:32.476 --> 00:25:34.156 A:middle
taking a look at the issue and

00:25:34.156 --> 00:25:35.606 A:middle
that'll help it all go faster.

00:25:36.756 --> 00:25:37.626 A:middle
Back to Vince.

00:25:38.496 --> 00:25:41.756 A:middle
&gt;&gt; Okay tip number 44.1, here's

00:25:41.756 --> 00:25:44.176 A:middle
a really easy way to add bells

00:25:44.176 --> 00:25:45.126 A:middle
and whistles to your

00:25:45.126 --> 00:25:45.806 A:middle
application.

00:25:46.936 --> 00:25:49.056 A:middle
NSButton has a property it's

00:25:49.056 --> 00:25:51.016 A:middle
called sound, it takes an

00:25:51.076 --> 00:25:52.756 A:middle
NSSound and it's really easy to

00:25:52.846 --> 00:25:53.096 A:middle
set.

00:25:53.496 --> 00:25:55.026 A:middle
And if you do when the user

00:25:55.026 --> 00:25:56.746 A:middle
clicks the button it will play

00:25:56.746 --> 00:25:59.006 A:middle
the sound and you can even set

00:25:59.006 --> 00:26:00.266 A:middle
it in Interface Builder.

00:26:00.706 --> 00:26:02.366 A:middle
So, use this to give your UI

00:26:02.366 --> 00:26:04.046 A:middle
that extra pop that your users

00:26:04.046 --> 00:26:04.986 A:middle
are clamoring for [sound

00:26:04.986 --> 00:26:05.053 A:middle
effect].

00:26:05.053 --> 00:26:09.786 A:middle
So now tip number 29, I'm going

00:26:09.786 --> 00:26:13.276 A:middle
to give a demo not of an NSSound

00:26:13.276 --> 00:26:14.646 A:middle
playing from a button that would

00:26:14.646 --> 00:26:15.676 A:middle
be a silly thing to demo, we're

00:26:15.916 --> 00:26:18.036 A:middle
going to show you a macOS app.

00:26:18.506 --> 00:26:19.966 A:middle
It's a daring entry into the

00:26:19.966 --> 00:26:21.486 A:middle
overcrowded market of cat

00:26:21.486 --> 00:26:22.876 A:middle
management applications it's

00:26:22.876 --> 00:26:24.846 A:middle
called Cat Herder and it's

00:26:24.846 --> 00:26:27.036 A:middle
completely unrelated to that Cat

00:26:27.036 --> 00:26:28.366 A:middle
Wrangler app you might have

00:26:28.366 --> 00:26:29.646 A:middle
heard about and we're going to

00:26:29.646 --> 00:26:32.616 A:middle
build it from the ground up.

00:26:32.846 --> 00:26:34.486 A:middle
Okay, so we have our project

00:26:34.956 --> 00:26:38.366 A:middle
already and here we have our

00:26:38.366 --> 00:26:40.416 A:middle
specification for our Cat Herder

00:26:40.416 --> 00:26:43.116 A:middle
application and it looks like we

00:26:43.116 --> 00:26:44.916 A:middle
have a list of cats on the

00:26:44.916 --> 00:26:47.576 A:middle
left-hand side and some add and

00:26:47.576 --> 00:26:48.606 A:middle
remove buttons.

00:26:49.016 --> 00:26:51.366 A:middle
And then for the selected cat we

00:26:51.366 --> 00:26:53.136 A:middle
can edit the name and photo.

00:26:53.756 --> 00:26:55.156 A:middle
Okay that seems pretty simple

00:26:55.156 --> 00:26:56.276 A:middle
and pretty straightforward.

00:26:57.176 --> 00:26:58.896 A:middle
Luckily, we have a designer that

00:26:58.896 --> 00:27:02.006 A:middle
already created a nib for us and

00:27:02.006 --> 00:27:04.716 A:middle
we can go ahead and look at that

00:27:04.716 --> 00:27:05.576 A:middle
and it looks pretty good.

00:27:05.576 --> 00:27:05.976 A:middle
We can run it.

00:27:10.046 --> 00:27:11.746 A:middle
And there we go, but nothing's

00:27:11.746 --> 00:27:13.026 A:middle
really hooked up, nothing's

00:27:13.026 --> 00:27:16.416 A:middle
working so nothing does

00:27:16.416 --> 00:27:16.826 A:middle
anything.

00:27:17.096 --> 00:27:18.846 A:middle
So, it's time to write some code

00:27:19.156 --> 00:27:20.356 A:middle
to get this all hooked up

00:27:20.356 --> 00:27:20.786 A:middle
together.

00:27:22.146 --> 00:27:24.356 A:middle
But what if I told you that

00:27:24.356 --> 00:27:25.806 A:middle
there's a way we can get this

00:27:25.806 --> 00:27:27.676 A:middle
user interface working without

00:27:27.676 --> 00:27:28.926 A:middle
needing any code.

00:27:29.576 --> 00:27:31.546 A:middle
And macOS has a technology

00:27:31.546 --> 00:27:32.936 A:middle
called bindings that will let us

00:27:32.936 --> 00:27:34.216 A:middle
do exactly that.

00:27:35.436 --> 00:27:38.966 A:middle
So, we can go ahead and go to

00:27:38.966 --> 00:27:42.416 A:middle
our storyboard and we have our

00:27:42.416 --> 00:27:45.806 A:middle
table view here and a table view

00:27:45.806 --> 00:27:47.496 A:middle
is going to show a list of cats,

00:27:48.226 --> 00:27:49.276 A:middle
which is probably going to be

00:27:49.276 --> 00:27:50.236 A:middle
backed by an array.

00:27:50.766 --> 00:27:52.896 A:middle
And it turns out we have a class

00:27:52.896 --> 00:27:55.746 A:middle
called array controller in the

00:27:55.746 --> 00:27:58.336 A:middle
object browser here and we can

00:27:58.336 --> 00:27:59.816 A:middle
go ahead and drag that into our

00:27:59.896 --> 00:28:00.186 A:middle
scene.

00:28:00.826 --> 00:28:03.196 A:middle
And an array controller lets you

00:28:03.196 --> 00:28:05.846 A:middle
create bindings to an array of

00:28:05.846 --> 00:28:06.566 A:middle
objects.

00:28:07.096 --> 00:28:08.626 A:middle
So, we can go to the attributes

00:28:08.626 --> 00:28:10.656 A:middle
inspector here in the upper

00:28:10.656 --> 00:28:13.796 A:middle
right and select attributes and

00:28:13.796 --> 00:28:15.146 A:middle
you can have your array

00:28:15.146 --> 00:28:16.896 A:middle
controller manage an array of

00:28:16.896 --> 00:28:19.846 A:middle
whatever class you like or a

00:28:19.846 --> 00:28:20.746 A:middle
Core Data entity.

00:28:21.306 --> 00:28:22.606 A:middle
And we're going to use an

00:28:22.606 --> 00:28:24.426 A:middle
NSMutableDictionary as a default

00:28:24.556 --> 00:28:25.836 A:middle
since that just lets us get

00:28:25.836 --> 00:28:26.586 A:middle
things up and running.

00:28:26.926 --> 00:28:28.346 A:middle
So, we want our table view to

00:28:28.346 --> 00:28:30.526 A:middle
show our list of cats and we can

00:28:30.526 --> 00:28:33.516 A:middle
do that by drilling down into

00:28:33.576 --> 00:28:35.136 A:middle
our table view until we get to

00:28:35.136 --> 00:28:36.166 A:middle
the table column.

00:28:36.816 --> 00:28:38.356 A:middle
And we can go over here to the

00:28:38.356 --> 00:28:39.996 A:middle
Bindings Inspector, it's in the

00:28:39.996 --> 00:28:41.276 A:middle
upper right it's that little

00:28:41.276 --> 00:28:44.436 A:middle
swirly boxy looking thing and we

00:28:44.436 --> 00:28:45.386 A:middle
can click on that.

00:28:45.496 --> 00:28:49.196 A:middle
And bind the value of the table

00:28:49.196 --> 00:28:51.556 A:middle
column to the array controller's

00:28:51.556 --> 00:28:52.756 A:middle
arranged objects.

00:28:53.136 --> 00:28:54.396 A:middle
And the arranged objects is a

00:28:54.396 --> 00:28:56.356 A:middle
property on the array controller

00:28:56.356 --> 00:28:57.836 A:middle
that is your array of cats

00:28:57.836 --> 00:28:59.656 A:middle
that's meant for the view side

00:29:00.206 --> 00:29:01.146 A:middle
of things.

00:29:01.326 --> 00:29:03.846 A:middle
So now our table view will

00:29:03.846 --> 00:29:06.606 A:middle
create a row for each cat in our

00:29:06.606 --> 00:29:09.056 A:middle
array and that means it will

00:29:09.056 --> 00:29:10.756 A:middle
create a table cell view for

00:29:10.756 --> 00:29:13.046 A:middle
each cat in our array and have

00:29:13.046 --> 00:29:14.776 A:middle
the object value of that cell

00:29:14.776 --> 00:29:16.476 A:middle
view set to that particular cat.

00:29:17.346 --> 00:29:18.666 A:middle
So, we can go into our table

00:29:18.666 --> 00:29:20.926 A:middle
cell view and we have an image

00:29:20.926 --> 00:29:23.676 A:middle
view, a thumbnail and the label

00:29:23.676 --> 00:29:24.286 A:middle
for the name.

00:29:24.976 --> 00:29:26.586 A:middle
And we can go ahead over back

00:29:26.586 --> 00:29:28.376 A:middle
again to our Bindings Inspector

00:29:28.896 --> 00:29:31.196 A:middle
and select bind to the table

00:29:31.196 --> 00:29:33.076 A:middle
cell view's object value and

00:29:33.076 --> 00:29:34.316 A:middle
that object value again is going

00:29:34.316 --> 00:29:35.366 A:middle
to be one of our cats.

00:29:35.876 --> 00:29:38.466 A:middle
And we can keyPath into that and

00:29:38.466 --> 00:29:41.516 A:middle
specify the name of the cat and

00:29:41.516 --> 00:29:42.656 A:middle
it will look that up in the

00:29:42.656 --> 00:29:44.826 A:middle
dictionary and show it.

00:29:45.016 --> 00:29:48.036 A:middle
Similarly, we combined the photo

00:29:48.336 --> 00:29:51.066 A:middle
of the cat to the image view

00:29:51.066 --> 00:29:55.246 A:middle
here just like that.

00:29:55.356 --> 00:29:57.406 A:middle
Now that's our table view that's

00:29:57.406 --> 00:29:59.436 A:middle
it, it's now bound and wired up

00:29:59.436 --> 00:30:00.386 A:middle
to the array controller and

00:30:00.386 --> 00:30:00.976 A:middle
it'll show its contents.

00:30:02.146 --> 00:30:03.646 A:middle
Next up we have these buttons

00:30:03.646 --> 00:30:06.816 A:middle
here in the corner, so array

00:30:06.816 --> 00:30:08.916 A:middle
controller actually has ID

00:30:08.916 --> 00:30:11.206 A:middle
actions for adding and removing

00:30:11.346 --> 00:30:12.266 A:middle
objects.

00:30:13.426 --> 00:30:15.426 A:middle
And the add method does about

00:30:15.426 --> 00:30:16.776 A:middle
what you'd expect, it creates a

00:30:16.776 --> 00:30:18.226 A:middle
new instance of the object it's

00:30:18.226 --> 00:30:19.706 A:middle
managing, in our case an

00:30:19.706 --> 00:30:21.246 A:middle
NSMutableDictionary and adds it

00:30:21.246 --> 00:30:23.016 A:middle
to the array so we can just wire

00:30:23.016 --> 00:30:23.436 A:middle
that up.

00:30:23.976 --> 00:30:26.656 A:middle
And there's also of course, a

00:30:26.656 --> 00:30:28.526 A:middle
remove action that does what we

00:30:28.526 --> 00:30:30.946 A:middle
expect, it takes the selected

00:30:30.946 --> 00:30:32.386 A:middle
items and removes them from the

00:30:32.386 --> 00:30:32.716 A:middle
array.

00:30:33.966 --> 00:30:35.856 A:middle
And of course, we need to add

00:30:35.856 --> 00:30:37.426 A:middle
some bells and whistles to our

00:30:37.426 --> 00:30:39.316 A:middle
application, that is what we're

00:30:39.316 --> 00:30:40.026 A:middle
known for.

00:30:41.576 --> 00:30:45.736 A:middle
Just like that and that's the

00:30:45.736 --> 00:30:46.106 A:middle
buttons.

00:30:46.626 --> 00:30:47.846 A:middle
All that's left now is the

00:30:47.846 --> 00:30:49.196 A:middle
detail view on the side.

00:30:50.406 --> 00:30:53.696 A:middle
So, we can go back to our text

00:30:53.696 --> 00:30:55.166 A:middle
field -- go to our text field

00:30:55.166 --> 00:30:56.866 A:middle
here that is the name that will

00:30:56.866 --> 00:30:58.516 A:middle
allow us to edit the name and we

00:30:58.516 --> 00:30:59.686 A:middle
go back to the Bindings

00:30:59.686 --> 00:31:02.216 A:middle
Inspector and we can bind to the

00:31:02.216 --> 00:31:03.686 A:middle
array controller selection.

00:31:03.946 --> 00:31:05.316 A:middle
And the selection of an array

00:31:05.316 --> 00:31:07.106 A:middle
controller it's a property and

00:31:07.106 --> 00:31:08.326 A:middle
it's a proxy object that

00:31:08.326 --> 00:31:09.506 A:middle
represents the currently

00:31:09.506 --> 00:31:11.856 A:middle
selected items in the array.

00:31:12.486 --> 00:31:13.936 A:middle
So, we can keyPath into that

00:31:13.936 --> 00:31:15.896 A:middle
selection to actually allow us

00:31:15.936 --> 00:31:18.526 A:middle
to edit and show the name of our

00:31:19.746 --> 00:31:21.466 A:middle
cat and similarly, we can do the

00:31:21.466 --> 00:31:23.696 A:middle
same thing with the selection

00:31:23.786 --> 00:31:28.616 A:middle
for the photo and that's it.

00:31:28.616 --> 00:31:29.636 A:middle
We've now wired up our

00:31:29.996 --> 00:31:32.346 A:middle
application with no code.

00:31:32.876 --> 00:31:33.976 A:middle
So, let's go ahead and run it.

00:31:39.046 --> 00:31:42.166 A:middle
And we can add our cats, give

00:31:42.166 --> 00:31:46.266 A:middle
them names, give them pictures,

00:31:47.596 --> 00:31:51.146 A:middle
add more cats, it's a really

00:31:51.886 --> 00:31:53.796 A:middle
amazing application it's so

00:31:53.796 --> 00:31:54.136 A:middle
handy.

00:31:55.366 --> 00:31:58.346 A:middle
And since we're using bindings

00:31:58.346 --> 00:32:00.146 A:middle
you can update these and they'll

00:32:00.146 --> 00:32:01.446 A:middle
get updated immediately in the

00:32:01.446 --> 00:32:02.246 A:middle
table view.

00:32:02.906 --> 00:32:04.336 A:middle
Just like that we can drag in a

00:32:04.336 --> 00:32:07.666 A:middle
new picture or a Quick Look and

00:32:07.666 --> 00:32:09.326 A:middle
drag in a new picture and it

00:32:09.326 --> 00:32:10.556 A:middle
gets updated in the table view

00:32:10.556 --> 00:32:10.886 A:middle
as well.

00:32:11.476 --> 00:32:13.126 A:middle
And of course, we need to make

00:32:13.126 --> 00:32:14.296 A:middle
sure our bells and whistles are

00:32:14.786 --> 00:32:16.046 A:middle
working [sound effect], great.

00:32:17.196 --> 00:32:17.976 A:middle
So that's bindings.

00:32:18.516 --> 00:32:21.766 A:middle
[ Applause ]

00:32:22.266 --> 00:32:24.356 A:middle
So, you can use bindings to wire

00:32:24.356 --> 00:32:25.906 A:middle
up your user interface to your

00:32:25.906 --> 00:32:27.436 A:middle
model without having to write

00:32:27.436 --> 00:32:29.486 A:middle
any of that glue code.

00:32:29.486 --> 00:32:31.686 A:middle
Next steps might be using a real

00:32:31.686 --> 00:32:33.096 A:middle
cat class instead of a

00:32:33.096 --> 00:32:35.266 A:middle
dictionary or even a Core Data

00:32:35.266 --> 00:32:36.856 A:middle
entity that way you'll get

00:32:36.996 --> 00:32:39.056 A:middle
persistent -- your list of cats

00:32:39.056 --> 00:32:39.566 A:middle
will persist.

00:32:40.036 --> 00:32:43.026 A:middle
But you'll never have to write

00:32:43.026 --> 00:32:44.956 A:middle
and for that you will have to

00:32:44.956 --> 00:32:46.566 A:middle
write some code, but you won't

00:32:46.566 --> 00:32:48.136 A:middle
have to write that glue code for

00:32:48.136 --> 00:32:50.296 A:middle
your user interfaces and that's

00:32:50.296 --> 00:32:50.636 A:middle
bindings.

00:32:51.206 --> 00:32:51.906 A:middle
And back to Rachel.

00:32:52.096 --> 00:32:54.686 A:middle
&gt;&gt; Okay, so number 29 may have

00:32:54.686 --> 00:32:56.926 A:middle
seemed like the end, but we have

00:32:57.336 --> 00:32:59.446 A:middle
tip and plus one, add your own

00:32:59.446 --> 00:32:59.896 A:middle
tips.

00:33:00.176 --> 00:33:01.346 A:middle
Some ideas for how to get

00:33:01.346 --> 00:33:02.506 A:middle
information and learn more.

00:33:03.056 --> 00:33:04.656 A:middle
We have new revised

00:33:04.656 --> 00:33:06.906 A:middle
documentation this year, topics

00:33:06.906 --> 00:33:07.596 A:middle
are grouped by task.

00:33:08.376 --> 00:33:09.796 A:middle
There's a hierarchical structure

00:33:09.796 --> 00:33:11.216 A:middle
that allows you to drill down,

00:33:11.566 --> 00:33:13.186 A:middle
such as this example of going

00:33:13.186 --> 00:33:14.846 A:middle
down and looking at NSView.

00:33:15.756 --> 00:33:17.336 A:middle
There's three different styles

00:33:17.336 --> 00:33:18.386 A:middle
of presentation, there's

00:33:18.386 --> 00:33:20.636 A:middle
reference documents, there's

00:33:20.636 --> 00:33:23.396 A:middle
conceptual articles and sample

00:33:23.396 --> 00:33:23.716 A:middle
code.

00:33:23.716 --> 00:33:24.806 A:middle
So, there's different ways of

00:33:24.806 --> 00:33:25.806 A:middle
approaching the material.

00:33:27.096 --> 00:33:28.626 A:middle
We also highly recommend that

00:33:28.626 --> 00:33:29.826 A:middle
people check out the release

00:33:29.826 --> 00:33:31.196 A:middle
notes on all of our platforms.

00:33:31.636 --> 00:33:32.966 A:middle
This is information straight

00:33:32.966 --> 00:33:34.266 A:middle
from the engineer's fingertips

00:33:34.266 --> 00:33:35.356 A:middle
about what's new in every

00:33:35.356 --> 00:33:35.916 A:middle
release.

00:33:37.216 --> 00:33:38.736 A:middle
Header files are always a good

00:33:38.736 --> 00:33:40.186 A:middle
source of information with line

00:33:40.186 --> 00:33:42.006 A:middle
by line comments about all of

00:33:42.006 --> 00:33:43.546 A:middle
our APIs.

00:33:44.356 --> 00:33:46.046 A:middle
On Wednesday in what's new in

00:33:46.046 --> 00:33:48.326 A:middle
Cocoa we asked people to tweet

00:33:48.326 --> 00:33:50.076 A:middle
their own Cocoa development tips

00:33:50.836 --> 00:33:52.206 A:middle
and we collected some of our

00:33:52.206 --> 00:33:53.186 A:middle
favorites from Twitter.

00:33:53.296 --> 00:33:54.766 A:middle
It was hard to choose, but

00:33:54.766 --> 00:33:56.586 A:middle
here's some of the tips that we

00:33:56.586 --> 00:33:56.806 A:middle
liked.

00:33:57.176 --> 00:34:00.076 A:middle
NSHashTable is like NSSet, but

00:34:00.076 --> 00:34:01.276 A:middle
it can contain arbitrary

00:34:01.276 --> 00:34:02.646 A:middle
pointers such as void star.

00:34:03.256 --> 00:34:04.506 A:middle
And also, you can weekly

00:34:04.506 --> 00:34:05.646 A:middle
reference objects from

00:34:05.686 --> 00:34:06.456 A:middle
NSHashTable.

00:34:09.656 --> 00:34:11.246 A:middle
Sometimes generics in

00:34:11.246 --> 00:34:12.576 A:middle
Objective-C are a little bit

00:34:12.576 --> 00:34:14.236 A:middle
cumbersome looking and you can

00:34:14.236 --> 00:34:16.286 A:middle
use a typedef to simplify the

00:34:16.286 --> 00:34:17.646 A:middle
way they look and clean up your

00:34:17.646 --> 00:34:17.976 A:middle
code.

00:34:19.416 --> 00:34:21.306 A:middle
In Swift, you can use typealias

00:34:21.306 --> 00:34:22.236 A:middle
to do the same thing.

00:34:26.516 --> 00:34:28.266 A:middle
And if you're coming to the Mac

00:34:28.456 --> 00:34:31.836 A:middle
from iOS you may remember that

00:34:31.976 --> 00:34:33.856 A:middle
NSWindowController is often a

00:34:33.856 --> 00:34:35.066 A:middle
class that you want to use

00:34:35.066 --> 00:34:36.566 A:middle
rather than NSViewController.

00:34:37.096 --> 00:34:40.286 A:middle
So, check it out and think about

00:34:41.146 --> 00:34:41.236 A:middle
it.

00:34:41.496 --> 00:34:44.176 A:middle
And our last tip from Twitter is

00:34:44.496 --> 00:34:46.316 A:middle
that in Xcode you can use Add

00:34:46.496 --> 00:34:48.436 A:middle
Expression to get Quick Look

00:34:48.436 --> 00:34:49.596 A:middle
previews for arbitrary

00:34:49.596 --> 00:34:50.186 A:middle
addresses.

00:34:50.826 --> 00:34:53.236 A:middle
So, here are some screenshots

00:34:53.236 --> 00:34:54.196 A:middle
showing how that would work.

00:34:54.886 --> 00:34:56.546 A:middle
I'm stopped in the debugger and

00:34:56.846 --> 00:34:59.656 A:middle
I print out the image, this add

00:34:59.796 --> 00:35:01.216 A:middle
cat image.

00:35:01.516 --> 00:35:04.476 A:middle
I grab the pointer here and I

00:35:04.476 --> 00:35:06.476 A:middle
can use the Add Expression menu

00:35:06.476 --> 00:35:09.926 A:middle
item and paste in my image

00:35:09.926 --> 00:35:10.336 A:middle
pointer.

00:35:10.836 --> 00:35:15.276 A:middle
And then if I hit the spacebar

00:35:15.276 --> 00:35:17.936 A:middle
I'll get a Quick Look preview of

00:35:17.996 --> 00:35:18.626 A:middle
my image.

00:35:20.216 --> 00:35:21.926 A:middle
There's documentation on how to

00:35:21.926 --> 00:35:23.936 A:middle
make your own classes Quick

00:35:23.936 --> 00:35:25.676 A:middle
Lookable, so check that out.

00:35:25.676 --> 00:35:30.036 A:middle
And we've come to the end.

00:35:30.426 --> 00:35:32.286 A:middle
For more information, you can go

00:35:32.286 --> 00:35:35.086 A:middle
to this page, we have several

00:35:35.086 --> 00:35:36.526 A:middle
related sessions that are all in

00:35:36.526 --> 00:35:36.726 A:middle
the past.

00:35:37.236 --> 00:35:39.086 A:middle
Check them out on video and, you

00:35:39.086 --> 00:35:40.736 A:middle
know, cats because we all want

00:35:40.736 --> 00:35:40.976 A:middle
to see them.

00:35:44.046 --> 00:35:44.976 A:middle
Thanks for being here.