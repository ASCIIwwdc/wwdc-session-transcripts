WEBVTT

00:00:19.516 --> 00:00:22.736 A:middle
[ Applause ]

00:00:23.236 --> 00:00:25.986 A:middle
&gt;&gt; Thank you.

00:00:26.176 --> 00:00:27.606 A:middle
Good morning everybody, and

00:00:27.606 --> 00:00:29.186 A:middle
welcome to SceneKit in Swift

00:00:29.186 --> 00:00:29.796 A:middle
Playgrounds.

00:00:30.496 --> 00:00:31.926 A:middle
My name's Michael DeWitt and I'm

00:00:31.926 --> 00:00:33.536 A:middle
really excited today to give you

00:00:33.536 --> 00:00:35.396 A:middle
an inside look into how we use

00:00:35.396 --> 00:00:36.866 A:middle
SceneKit to make the Learn to

00:00:36.866 --> 00:00:37.616 A:middle
Code content.

00:00:38.026 --> 00:00:39.366 A:middle
So hopefully many of you are

00:00:39.366 --> 00:00:40.416 A:middle
already familiar with Swift

00:00:40.416 --> 00:00:42.036 A:middle
Playgrounds, but let me show you

00:00:42.036 --> 00:00:43.286 A:middle
Learn to Code.

00:00:44.576 --> 00:00:46.296 A:middle
So this is an example lesson

00:00:46.296 --> 00:00:47.826 A:middle
from the Learn to Code content

00:00:47.856 --> 00:00:48.916 A:middle
that lives inside Swift

00:00:48.916 --> 00:00:49.426 A:middle
Playgrounds.

00:00:49.556 --> 00:00:51.716 A:middle
On the left-hand side we have

00:00:51.716 --> 00:00:53.246 A:middle
the lesson and the user's code.

00:00:53.246 --> 00:00:55.326 A:middle
But for this talk we're really

00:00:55.326 --> 00:00:56.636 A:middle
going to focus on the right-hand

00:00:56.636 --> 00:00:56.996 A:middle
side.

00:00:57.096 --> 00:00:58.076 A:middle
Notice the live view.

00:00:58.366 --> 00:00:59.816 A:middle
If we could actually take that

00:00:59.816 --> 00:01:01.256 A:middle
full screen to get a little

00:00:59.816 --> 00:01:01.256 A:middle
full screen to get a little

00:01:01.256 --> 00:01:02.246 A:middle
better view of it.

00:01:03.056 --> 00:01:05.126 A:middle
This character, Byte, that is

00:01:05.126 --> 00:01:06.676 A:middle
now literally sprinting around

00:01:06.676 --> 00:01:09.076 A:middle
this map to collect the gems, is

00:01:09.076 --> 00:01:11.666 A:middle
moving up and down stairs and

00:01:11.666 --> 00:01:13.446 A:middle
after Byte has collected all the

00:01:13.446 --> 00:01:16.136 A:middle
gems, we get a congratulations

00:01:16.136 --> 00:01:17.796 A:middle
sequence that lets the learner

00:01:17.796 --> 00:01:18.726 A:middle
know they've done something

00:01:18.726 --> 00:01:20.676 A:middle
great, and Byte even has a few

00:01:20.676 --> 00:01:22.756 A:middle
dance moves to let people know

00:01:22.756 --> 00:01:23.316 A:middle
it's really good.

00:01:24.106 --> 00:01:25.856 A:middle
So this is our case study today.

00:01:26.506 --> 00:01:28.186 A:middle
We're going to work through this

00:01:28.186 --> 00:01:30.656 A:middle
scene on how to use SceneKit

00:01:30.656 --> 00:01:32.606 A:middle
effectively and really bring the

00:01:32.606 --> 00:01:34.016 A:middle
richness of 3D to your

00:01:34.016 --> 00:01:34.906 A:middle
applications.

00:01:36.096 --> 00:01:39.476 A:middle
So if you're interested in 3D

00:01:39.676 --> 00:01:41.246 A:middle
but are maybe pretty new to it,

00:01:41.776 --> 00:01:42.766 A:middle
you've come to the right place

00:01:42.766 --> 00:01:44.436 A:middle
because we actually started with

00:01:44.436 --> 00:01:46.656 A:middle
something very different than

00:01:47.476 --> 00:01:47.576 A:middle
this.

00:01:47.796 --> 00:01:49.646 A:middle
We started with a simple 2D

00:01:49.736 --> 00:01:50.096 A:middle
scene.

00:01:50.666 --> 00:01:52.206 A:middle
And one of the best parts about

00:01:52.206 --> 00:01:54.206 A:middle
SceneKit is it allowed a couple

00:01:54.206 --> 00:01:56.546 A:middle
of 2D programmers to take this

00:01:56.546 --> 00:01:59.096 A:middle
scene on an existing timeline

00:01:59.456 --> 00:02:01.776 A:middle
and make the rich 3D content

00:01:59.456 --> 00:02:01.776 A:middle
and make the rich 3D content

00:02:01.776 --> 00:02:02.976 A:middle
that we shift in Learn to Code.

00:02:04.326 --> 00:02:05.196 A:middle
So that's what we're going to

00:02:05.196 --> 00:02:05.906 A:middle
talk about today.

00:02:06.426 --> 00:02:07.956 A:middle
We've got 40 minutes and we've

00:02:07.956 --> 00:02:09.036 A:middle
broken it down into three

00:02:09.036 --> 00:02:09.626 A:middle
sections.

00:02:10.716 --> 00:02:12.146 A:middle
First, I'll talk about

00:02:12.146 --> 00:02:14.226 A:middle
prototyping and how we refined

00:02:14.226 --> 00:02:15.626 A:middle
the idea to make sure it was

00:02:15.626 --> 00:02:16.806 A:middle
really good.

00:02:17.296 --> 00:02:19.356 A:middle
In iterating I want to go over

00:02:19.356 --> 00:02:20.086 A:middle
when you're actually getting

00:02:20.086 --> 00:02:21.156 A:middle
some real assets from your

00:02:21.156 --> 00:02:22.836 A:middle
vendor, how you can establish an

00:02:22.836 --> 00:02:23.806 A:middle
effective pipeline.

00:02:23.806 --> 00:02:25.776 A:middle
And then Lamont will come on

00:02:25.776 --> 00:02:27.386 A:middle
stage to talk about tuning and

00:02:27.386 --> 00:02:28.856 A:middle
getting your scene ready to

00:02:29.376 --> 00:02:29.486 A:middle
ship.

00:02:30.276 --> 00:02:32.646 A:middle
First up is prototyping.

00:02:33.466 --> 00:02:36.706 A:middle
This is coming at a phase right

00:02:36.706 --> 00:02:38.876 A:middle
after we decided on the idea for

00:02:38.876 --> 00:02:40.066 A:middle
Learn to Code and we're really

00:02:40.066 --> 00:02:41.026 A:middle
ready to start building

00:02:41.026 --> 00:02:41.426 A:middle
something.

00:02:41.936 --> 00:02:43.616 A:middle
So you saw this graphic before,

00:02:43.616 --> 00:02:44.826 A:middle
but here it is in context.

00:02:45.896 --> 00:02:48.796 A:middle
We started off with gems that

00:02:48.796 --> 00:02:50.236 A:middle
came from the emoji tray and

00:02:50.366 --> 00:02:51.586 A:middle
assets we had lying around

00:02:51.766 --> 00:02:52.806 A:middle
because we just needed to get

00:02:52.806 --> 00:02:53.946 A:middle
something up and running as

00:02:53.946 --> 00:02:55.956 A:middle
quickly as possible to test the

00:02:55.956 --> 00:02:57.336 A:middle
interaction model in this new

00:02:58.236 --> 00:02:58.346 A:middle
app.

00:02:58.346 --> 00:02:59.476 A:middle
So we learned a lot from this.

00:02:59.476 --> 00:03:00.566 A:middle
It didn't matter what the assets

00:02:59.476 --> 00:03:00.566 A:middle
It didn't matter what the assets

00:03:00.566 --> 00:03:03.166 A:middle
looked like, but through this

00:03:03.166 --> 00:03:04.496 A:middle
prototyping process we started

00:03:04.496 --> 00:03:05.426 A:middle
to get some early feedback.

00:03:06.456 --> 00:03:08.116 A:middle
Some of those comments were

00:03:08.116 --> 00:03:09.016 A:middle
about the graphics.

00:03:09.496 --> 00:03:11.126 A:middle
It was requests like could we

00:03:11.126 --> 00:03:12.886 A:middle
change the gem color, could we

00:03:12.886 --> 00:03:14.606 A:middle
add a border around the scene,

00:03:14.726 --> 00:03:16.046 A:middle
or could we pivot the camera at

00:03:16.146 --> 00:03:16.996 A:middle
the end to give a little bit of

00:03:16.996 --> 00:03:17.826 A:middle
visual interest.

00:03:18.946 --> 00:03:21.636 A:middle
While this is good feedback, it

00:03:21.636 --> 00:03:23.936 A:middle
really is very iterative, and

00:03:23.936 --> 00:03:25.046 A:middle
when you're prototyping, you

00:03:25.046 --> 00:03:26.166 A:middle
shouldn't be afraid to throw the

00:03:26.166 --> 00:03:26.876 A:middle
whole thing away.

00:03:27.376 --> 00:03:28.956 A:middle
And so if we go back and look at

00:03:28.956 --> 00:03:30.856 A:middle
the scene in context, you can

00:03:30.856 --> 00:03:32.496 A:middle
see it just is very flat on this

00:03:32.496 --> 00:03:33.036 A:middle
page.

00:03:33.396 --> 00:03:34.636 A:middle
So all of the feedback we're

00:03:34.636 --> 00:03:35.926 A:middle
getting is about the visual

00:03:35.926 --> 00:03:36.116 A:middle
look.

00:03:36.436 --> 00:03:38.126 A:middle
We need to just re-evaluate our

00:03:38.126 --> 00:03:38.606 A:middle
strategy.

00:03:40.396 --> 00:03:41.796 A:middle
So we had been working the

00:03:41.796 --> 00:03:43.786 A:middle
SpriteKit and now we started

00:03:43.786 --> 00:03:44.656 A:middle
exploring SceneKit.

00:03:45.316 --> 00:03:46.376 A:middle
And for many of you who are

00:03:46.376 --> 00:03:48.336 A:middle
familiar with SpriteKit, you'll

00:03:48.336 --> 00:03:49.916 A:middle
know that it has these concepts;

00:03:50.606 --> 00:03:52.206 A:middle
basically a scene to do your

00:03:52.206 --> 00:03:54.356 A:middle
update logic, a node to place

00:03:54.356 --> 00:03:56.546 A:middle
things in view, and actions to

00:03:56.546 --> 00:03:57.676 A:middle
move those objects around.

00:03:58.686 --> 00:04:00.166 A:middle
Now, the benefit of having

00:03:58.686 --> 00:04:00.166 A:middle
Now, the benefit of having

00:04:00.166 --> 00:04:01.676 A:middle
SceneKit also developed at Apple

00:04:02.096 --> 00:04:03.386 A:middle
is that it has a lot of those

00:04:03.386 --> 00:04:04.226 A:middle
same concepts.

00:04:05.396 --> 00:04:07.286 A:middle
So this gave us enough

00:04:07.286 --> 00:04:08.976 A:middle
confidence, a simple prefix

00:04:08.976 --> 00:04:10.366 A:middle
switch, to get started with

00:04:10.366 --> 00:04:11.766 A:middle
SceneKit and start diving in.

00:04:12.396 --> 00:04:13.796 A:middle
So like many of you out there,

00:04:14.106 --> 00:04:16.076 A:middle
we watched a WWDC presentation

00:04:16.486 --> 00:04:17.866 A:middle
from 2015.

00:04:17.866 --> 00:04:19.125 A:middle
It's a great talk given by the

00:04:19.125 --> 00:04:21.046 A:middle
SceneKit Team on how to build a

00:04:21.046 --> 00:04:23.186 A:middle
simple scene like the one you

00:04:23.436 --> 00:04:26.486 A:middle
see here, and not only that, but

00:04:26.486 --> 00:04:27.876 A:middle
we got to use some of the assets

00:04:27.876 --> 00:04:30.276 A:middle
from the sample and recreate our

00:04:30.276 --> 00:04:30.706 A:middle
scene.

00:04:32.066 --> 00:04:33.626 A:middle
So now we got to this stage and

00:04:33.626 --> 00:04:35.196 A:middle
immediately we could tell this

00:04:35.196 --> 00:04:36.226 A:middle
is just way better.

00:04:36.306 --> 00:04:37.986 A:middle
I mean, it's far more immersive,

00:04:38.176 --> 00:04:39.736 A:middle
you can freely pan the camera

00:04:39.736 --> 00:04:41.326 A:middle
and it actually helps you solve

00:04:41.326 --> 00:04:41.916 A:middle
the levels.

00:04:42.446 --> 00:04:45.616 A:middle
But the point of this slide is

00:04:45.616 --> 00:04:46.426 A:middle
that even though we've

00:04:46.426 --> 00:04:47.946 A:middle
definitely bumped up the visual

00:04:47.946 --> 00:04:49.766 A:middle
quality, when you're

00:04:49.766 --> 00:04:51.316 A:middle
prototyping, you still want to

00:04:51.316 --> 00:04:52.826 A:middle
keep that visual fidelity low.

00:04:52.986 --> 00:04:54.446 A:middle
So when we're adding new game

00:04:54.446 --> 00:04:55.956 A:middle
mechanics like these portals,

00:04:57.066 --> 00:04:58.116 A:middle
we're doing it with SceneKit

00:04:58.146 --> 00:04:59.776 A:middle
primitives because we don't want

00:04:59.776 --> 00:05:01.006 A:middle
to get too hung up on making

00:04:59.776 --> 00:05:01.006 A:middle
to get too hung up on making

00:05:01.006 --> 00:05:02.566 A:middle
sure the scene looks absolutely

00:05:02.566 --> 00:05:02.926 A:middle
great.

00:05:03.196 --> 00:05:04.036 A:middle
We want to make sure it's a good

00:05:04.036 --> 00:05:04.736 A:middle
idea first.

00:05:05.616 --> 00:05:08.056 A:middle
So if I had to throw this up on

00:05:08.056 --> 00:05:10.766 A:middle
a Business Tool 101 chart, you

00:05:10.766 --> 00:05:11.856 A:middle
basically look at the whole

00:05:11.856 --> 00:05:13.026 A:middle
timeline of your project.

00:05:13.976 --> 00:05:15.396 A:middle
You want to allocate a large

00:05:15.396 --> 00:05:16.566 A:middle
chunk of that to prototyping

00:05:17.136 --> 00:05:18.426 A:middle
because it's the phase with

00:05:18.426 --> 00:05:20.206 A:middle
which you can make the biggest

00:05:20.206 --> 00:05:21.876 A:middle
changes and the effort to change

00:05:21.876 --> 00:05:24.386 A:middle
is low, especially when you're

00:05:24.386 --> 00:05:25.426 A:middle
working in 3D.

00:05:26.076 --> 00:05:27.176 A:middle
When you start to get real

00:05:27.276 --> 00:05:28.546 A:middle
assets, and in this next section

00:05:28.546 --> 00:05:29.396 A:middle
that we're going to talk about,

00:05:29.926 --> 00:05:31.396 A:middle
the effort to change goes way

00:05:31.396 --> 00:05:31.626 A:middle
up.

00:05:32.446 --> 00:05:33.476 A:middle
So be mindful of that when

00:05:33.476 --> 00:05:34.146 A:middle
you're prototyping.

00:05:35.566 --> 00:05:38.086 A:middle
So in summary, really, you want

00:05:38.086 --> 00:05:38.936 A:middle
to work on testing your

00:05:38.936 --> 00:05:39.916 A:middle
interaction model when you're

00:05:39.916 --> 00:05:40.436 A:middle
prototyping.

00:05:40.526 --> 00:05:41.736 A:middle
It's not about the assets.

00:05:42.126 --> 00:05:43.126 A:middle
You want to interpret the

00:05:43.126 --> 00:05:45.186 A:middle
feedback you receive, but don't

00:05:45.186 --> 00:05:46.476 A:middle
look for incremental changes.

00:05:46.686 --> 00:05:47.836 A:middle
Look to make sure the idea is

00:05:47.836 --> 00:05:48.196 A:middle
valid.

00:05:48.856 --> 00:05:50.546 A:middle
And then finally, take the

00:05:50.546 --> 00:05:51.826 A:middle
insights from this section,

00:05:52.016 --> 00:05:52.796 A:middle
believe the code.

00:05:52.886 --> 00:05:53.936 A:middle
I think one of the best

00:05:53.936 --> 00:05:55.066 A:middle
decisions we made was to

00:05:55.096 --> 00:05:56.896 A:middle
actually start file-new-project

00:05:56.966 --> 00:05:58.086 A:middle
when moving forward past this

00:05:58.086 --> 00:06:00.746 A:middle
point, which brings us to

00:05:58.086 --> 00:06:00.746 A:middle
point, which brings us to

00:06:00.746 --> 00:06:00.956 A:middle
iterating.

00:06:04.246 --> 00:06:06.036 A:middle
So now we've got the idea and

00:06:06.036 --> 00:06:07.036 A:middle
we're ready to get some real

00:06:07.036 --> 00:06:08.456 A:middle
art, so we started working with

00:06:08.456 --> 00:06:10.116 A:middle
an artist and we received this

00:06:10.116 --> 00:06:11.316 A:middle
early 2D comp.

00:06:11.316 --> 00:06:14.476 A:middle
So you can start to see it

00:06:14.476 --> 00:06:15.996 A:middle
resembles Byte's world now.

00:06:16.406 --> 00:06:17.366 A:middle
It looks way better.

00:06:17.806 --> 00:06:19.156 A:middle
And I want to break down this

00:06:19.156 --> 00:06:20.716 A:middle
world into four parts.

00:06:21.666 --> 00:06:22.846 A:middle
The first thing we'll talk about

00:06:23.026 --> 00:06:24.936 A:middle
is how it's constructed and some

00:06:24.936 --> 00:06:25.986 A:middle
strategies to do that

00:06:25.986 --> 00:06:26.506 A:middle
effectively.

00:06:27.476 --> 00:06:30.296 A:middle
Next, we'll look at how you can

00:06:30.296 --> 00:06:32.916 A:middle
accomplish complex animations in

00:06:32.916 --> 00:06:34.486 A:middle
your app by looking at how we

00:06:34.486 --> 00:06:35.976 A:middle
made Byte move up the stairs.

00:06:37.136 --> 00:06:38.686 A:middle
We'll look at how you can add

00:06:38.686 --> 00:06:40.266 A:middle
visual interests with water and

00:06:40.266 --> 00:06:41.406 A:middle
other scenery elements.

00:06:42.616 --> 00:06:44.426 A:middle
And then we're really focused on

00:06:44.426 --> 00:06:46.006 A:middle
the visuals in this talk, but

00:06:46.006 --> 00:06:47.226 A:middle
there's a whole other area of

00:06:47.226 --> 00:06:48.686 A:middle
your users that actually won't

00:06:48.686 --> 00:06:49.816 A:middle
be able to benefit from the

00:06:49.816 --> 00:06:51.256 A:middle
visuals of a 3D scene, so we're

00:06:51.426 --> 00:06:53.046 A:middle
going to spend some time talking

00:06:53.046 --> 00:06:54.476 A:middle
about accessibility support, and

00:06:54.476 --> 00:06:55.496 A:middle
VoiceOver specifically.

00:06:56.686 --> 00:06:57.006 A:middle
All right.

00:06:57.996 --> 00:07:00.406 A:middle
First up, modeling this world.

00:06:57.996 --> 00:07:00.406 A:middle
First up, modeling this world.

00:07:00.976 --> 00:07:02.376 A:middle
So as you can sort of see by the

00:07:02.376 --> 00:07:04.116 A:middle
stencil we built this out of

00:07:04.326 --> 00:07:04.876 A:middle
blocks.

00:07:05.016 --> 00:07:06.136 A:middle
We had individual assets.

00:07:06.346 --> 00:07:07.856 A:middle
There was a couple reasons to do

00:07:08.776 --> 00:07:08.926 A:middle
this.

00:07:09.376 --> 00:07:11.146 A:middle
We needed to not only iterate on

00:07:11.146 --> 00:07:12.846 A:middle
the asset design, but also on

00:07:12.846 --> 00:07:13.666 A:middle
the lesson design.

00:07:14.046 --> 00:07:15.506 A:middle
So we were putting together very

00:07:15.506 --> 00:07:17.926 A:middle
simple puzzles like this to make

00:07:17.926 --> 00:07:19.306 A:middle
sure that learners had a smooth

00:07:19.306 --> 00:07:20.386 A:middle
path through the curriculum.

00:07:21.916 --> 00:07:23.466 A:middle
But rather than placing these

00:07:23.466 --> 00:07:25.066 A:middle
individual blocks in a Scene

00:07:25.066 --> 00:07:26.406 A:middle
Editor, which would be pretty

00:07:26.486 --> 00:07:28.196 A:middle
tedious, we actually wrote some

00:07:28.196 --> 00:07:29.146 A:middle
code to do this.

00:07:29.546 --> 00:07:31.196 A:middle
So much like learners use in

00:07:31.196 --> 00:07:32.186 A:middle
Learn to Code 2 when they're

00:07:32.186 --> 00:07:34.216 A:middle
building their own worlds, we

00:07:34.216 --> 00:07:35.666 A:middle
wrote some code to generate this

00:07:35.746 --> 00:07:36.816 A:middle
and it looks like this.

00:07:37.686 --> 00:07:39.846 A:middle
So to build that world you first

00:07:39.846 --> 00:07:41.566 A:middle
give it a size, 5 by 5.

00:07:42.266 --> 00:07:43.976 A:middle
You place items into it, like

00:07:44.026 --> 00:07:45.736 A:middle
actor, or Byte in the scene you

00:07:45.736 --> 00:07:46.286 A:middle
saw before.

00:07:46.606 --> 00:07:48.176 A:middle
And then you can add additional

00:07:48.176 --> 00:07:50.106 A:middle
elements, such as gems or the

00:07:50.106 --> 00:07:51.086 A:middle
water that you saw in the

00:07:51.086 --> 00:07:51.456 A:middle
center.

00:07:51.496 --> 00:07:53.696 A:middle
But the reason I'm showing you

00:07:53.696 --> 00:07:55.636 A:middle
this code is not because, wow,

00:07:55.636 --> 00:07:56.596 A:middle
we wrote an API to build a

00:07:56.596 --> 00:07:58.166 A:middle
world, that's cool, but it's

00:07:58.166 --> 00:08:00.326 A:middle
really because this is totally

00:07:58.166 --> 00:08:00.326 A:middle
really because this is totally

00:08:00.326 --> 00:08:01.756 A:middle
independent from the graphics.

00:08:02.006 --> 00:08:03.116 A:middle
Right. This code will be just as

00:08:03.116 --> 00:08:05.286 A:middle
valid in 2D as it is in 3D.

00:08:06.456 --> 00:08:08.636 A:middle
And let me show you actually

00:08:08.636 --> 00:08:09.096 A:middle
what I mean by that.

00:08:09.096 --> 00:08:09.916 A:middle
I have a short video here for

00:08:09.916 --> 00:08:09.983 A:middle
you.

00:08:15.416 --> 00:08:17.016 A:middle
So here we have Byte moving

00:08:17.016 --> 00:08:18.316 A:middle
around this world and we're

00:08:18.316 --> 00:08:19.776 A:middle
going to add in a few nodes.

00:08:19.986 --> 00:08:21.366 A:middle
The green and red nodes you see

00:08:21.366 --> 00:08:23.096 A:middle
in the scene actually represent

00:08:23.096 --> 00:08:23.846 A:middle
the data that we're

00:08:23.846 --> 00:08:24.976 A:middle
reconstructing gameplay with.

00:08:29.346 --> 00:08:31.856 A:middle
And then really, that data is

00:08:31.856 --> 00:08:32.476 A:middle
all we need.

00:08:33.176 --> 00:08:34.956 A:middle
We've actually separated the

00:08:34.956 --> 00:08:36.436 A:middle
visuals of the scene from the

00:08:36.436 --> 00:08:38.006 A:middle
data that's used to reconstruct

00:08:38.006 --> 00:08:38.436 A:middle
gameplay.

00:08:39.336 --> 00:08:40.246 A:middle
There are a couple of big

00:08:40.246 --> 00:08:41.466 A:middle
benefits to this, and I want you

00:08:41.466 --> 00:08:42.256 A:middle
to think about it when you're

00:08:42.256 --> 00:08:43.436 A:middle
modeling a 3D world.

00:08:44.716 --> 00:08:46.286 A:middle
So separate the data from

00:08:46.286 --> 00:08:46.826 A:middle
visuals.

00:08:47.186 --> 00:08:48.876 A:middle
First is it allows you to swap

00:08:48.876 --> 00:08:49.856 A:middle
out assets easily.

00:08:50.256 --> 00:08:51.596 A:middle
Remember, we're still iterating

00:08:51.596 --> 00:08:52.036 A:middle
on this stuff.

00:08:52.036 --> 00:08:53.836 A:middle
We will get a new version of the

00:08:53.836 --> 00:08:55.446 A:middle
block any day, and we don't want

00:08:55.446 --> 00:08:56.796 A:middle
to have to rebuild those maps,

00:08:56.996 --> 00:08:58.376 A:middle
so we're dynamically generating

00:08:58.376 --> 00:08:58.576 A:middle
them.

00:08:59.956 --> 00:09:01.466 A:middle
It also allows you to take that

00:08:59.956 --> 00:09:01.466 A:middle
It also allows you to take that

00:09:01.466 --> 00:09:02.776 A:middle
data and send it elsewhere.

00:09:03.006 --> 00:09:04.046 A:middle
Maybe you need to send it across

00:09:04.046 --> 00:09:06.066 A:middle
a network or send some gameplay

00:09:06.066 --> 00:09:07.656 A:middle
logic across process, like we

00:09:07.656 --> 00:09:08.876 A:middle
were doing in some playgrounds.

00:09:09.606 --> 00:09:11.376 A:middle
And later on down the road it

00:09:11.376 --> 00:09:13.206 A:middle
will also allow you to optimize

00:09:13.206 --> 00:09:13.876 A:middle
the geometry.

00:09:14.506 --> 00:09:15.796 A:middle
And Lamont will get into that in

00:09:15.796 --> 00:09:17.636 A:middle
more detail, but it's really key

00:09:17.636 --> 00:09:18.886 A:middle
that you're not dependent on the

00:09:18.886 --> 00:09:20.646 A:middle
actual nodes and scene for this

00:09:20.646 --> 00:09:21.126 A:middle
to work well.

00:09:21.126 --> 00:09:23.326 A:middle
And I have one caveat.

00:09:24.306 --> 00:09:26.896 A:middle
You need some debugging tools to

00:09:26.896 --> 00:09:27.826 A:middle
make this work really well.

00:09:27.946 --> 00:09:29.106 A:middle
We found that out early on.

00:09:29.106 --> 00:09:30.886 A:middle
You can't just look at the world

00:09:30.886 --> 00:09:32.526 A:middle
anymore and see how gameplay

00:09:32.526 --> 00:09:34.416 A:middle
will be reconstructed, and so we

00:09:34.416 --> 00:09:36.096 A:middle
actually built a pretty simple

00:09:36.096 --> 00:09:36.586 A:middle
Mac app.

00:09:37.676 --> 00:09:39.396 A:middle
This app can actually load in

00:09:39.396 --> 00:09:41.646 A:middle
all the levels that we have, and

00:09:41.646 --> 00:09:42.986 A:middle
more than that, it has

00:09:43.196 --> 00:09:44.746 A:middle
scene-specific knowledge.

00:09:45.536 --> 00:09:47.896 A:middle
So in this case this is the tool

00:09:47.896 --> 00:09:49.166 A:middle
that allows us to show those

00:09:49.166 --> 00:09:50.616 A:middle
debugging nodes you saw before,

00:09:51.466 --> 00:09:54.026 A:middle
and it also can run hard-to-hit

00:09:54.096 --> 00:09:56.176 A:middle
cases in our game, like rotating

00:09:56.176 --> 00:09:57.336 A:middle
around the world when you hit

00:09:57.336 --> 00:09:58.686 A:middle
the congratulations sequence.

00:09:58.866 --> 00:09:59.836 A:middle
We want to make sure that works

00:09:59.836 --> 00:10:01.436 A:middle
on every map, but we don't want

00:09:59.836 --> 00:10:01.436 A:middle
on every map, but we don't want

00:10:01.436 --> 00:10:02.826 A:middle
to test every map all the way to

00:10:02.826 --> 00:10:04.866 A:middle
the end just to see that work.

00:10:05.376 --> 00:10:07.446 A:middle
So that's our first stop.

00:10:07.806 --> 00:10:08.656 A:middle
That's how we put the world

00:10:08.656 --> 00:10:09.066 A:middle
together.

00:10:09.356 --> 00:10:10.526 A:middle
We separated the data from

00:10:10.526 --> 00:10:12.106 A:middle
visuals and we used tools.

00:10:13.346 --> 00:10:15.826 A:middle
Now on to animations.

00:10:16.696 --> 00:10:17.996 A:middle
So if we look closely at the

00:10:17.996 --> 00:10:21.546 A:middle
stairs, you can see this is

00:10:21.546 --> 00:10:23.056 A:middle
actually a fairly complicated

00:10:23.056 --> 00:10:23.866 A:middle
piece of geometry.

00:10:24.046 --> 00:10:24.966 A:middle
Right. Not only are there

00:10:24.966 --> 00:10:26.656 A:middle
individual steps, but there are

00:10:26.656 --> 00:10:28.246 A:middle
little cutouts from the step.

00:10:28.556 --> 00:10:29.886 A:middle
So we want to be super precise

00:10:29.886 --> 00:10:31.386 A:middle
about where our character's foot

00:10:31.386 --> 00:10:32.526 A:middle
lands on each step.

00:10:33.306 --> 00:10:34.476 A:middle
So we considered a couple

00:10:34.476 --> 00:10:36.166 A:middle
different strategies, and one

00:10:36.166 --> 00:10:37.846 A:middle
thing that's pretty common for

00:10:38.056 --> 00:10:40.056 A:middle
3D scenes to use is just swap

00:10:40.056 --> 00:10:42.206 A:middle
this out for a ramp because

00:10:42.206 --> 00:10:42.906 A:middle
ramps are easy.

00:10:43.346 --> 00:10:45.166 A:middle
You have a character, you move

00:10:45.166 --> 00:10:46.526 A:middle
that character forward, you

00:10:46.526 --> 00:10:47.696 A:middle
figure out how far up they need

00:10:47.696 --> 00:10:49.306 A:middle
to move, and you just translate

00:10:49.306 --> 00:10:50.666 A:middle
them from point A to point B

00:10:50.736 --> 00:10:51.796 A:middle
while running the walk cycle.

00:10:52.976 --> 00:10:55.166 A:middle
For stairs, not so great.

00:10:55.646 --> 00:10:57.476 A:middle
So here's Byte trying to walk up

00:10:57.476 --> 00:10:59.246 A:middle
the stairs, and if you look

00:10:59.246 --> 00:11:01.736 A:middle
closely, Byte hasn't even gotten

00:10:59.246 --> 00:11:01.736 A:middle
closely, Byte hasn't even gotten

00:11:01.736 --> 00:11:02.926 A:middle
to the first step and he's

00:11:02.926 --> 00:11:03.816 A:middle
already floating in midair.

00:11:03.876 --> 00:11:05.206 A:middle
So we need to do something a

00:11:05.206 --> 00:11:05.976 A:middle
little bit better.

00:11:10.296 --> 00:11:11.396 A:middle
The second thing we considered

00:11:11.396 --> 00:11:13.986 A:middle
is using a built-in type in

00:11:13.986 --> 00:11:14.516 A:middle
SceneKit.

00:11:14.516 --> 00:11:15.576 A:middle
It's actually part of SceneKit's

00:11:15.576 --> 00:11:17.116 A:middle
constraint system to be able to

00:11:17.116 --> 00:11:18.306 A:middle
do inverse kinematics.

00:11:18.796 --> 00:11:20.336 A:middle
Now, inverse kinematics allow

00:11:20.336 --> 00:11:21.806 A:middle
you to be super precise about

00:11:21.806 --> 00:11:22.856 A:middle
where you want the character's

00:11:22.856 --> 00:11:23.686 A:middle
foot to land.

00:11:24.106 --> 00:11:26.076 A:middle
So we would specify each step

00:11:26.076 --> 00:11:27.166 A:middle
where we wanted the character to

00:11:27.166 --> 00:11:29.266 A:middle
take, but it comes with a

00:11:29.266 --> 00:11:30.936 A:middle
sacrifice of some personality in

00:11:30.936 --> 00:11:31.476 A:middle
the character.

00:11:31.546 --> 00:11:33.546 A:middle
Right. We're not able to control

00:11:33.546 --> 00:11:34.866 A:middle
the eye movement or the upper

00:11:34.866 --> 00:11:36.576 A:middle
body as detailed as we'd like.

00:11:37.176 --> 00:11:38.066 A:middle
So we actually went with a third

00:11:38.066 --> 00:11:40.266 A:middle
option, and that's to bake the

00:11:40.266 --> 00:11:42.066 A:middle
displacement into the animation.

00:11:42.406 --> 00:11:43.686 A:middle
And so because this is the one

00:11:43.686 --> 00:11:44.806 A:middle
we went with, let me break it

00:11:44.806 --> 00:11:46.086 A:middle
down for you in a little bit

00:11:46.606 --> 00:11:47.716 A:middle
more detail.

00:11:47.856 --> 00:11:50.346 A:middle
Usually, most games you have a

00:11:50.346 --> 00:11:51.556 A:middle
node, which represents a

00:11:51.556 --> 00:11:53.766 A:middle
position, and you have geometry,

00:11:53.956 --> 00:11:54.946 A:middle
which is what you're actually

00:11:54.946 --> 00:11:56.026 A:middle
seeing in the scene.

00:11:57.126 --> 00:11:59.066 A:middle
Now, it's common for these two

00:11:59.066 --> 00:12:00.536 A:middle
things to move together, so you

00:11:59.066 --> 00:12:00.536 A:middle
things to move together, so you

00:12:00.536 --> 00:12:02.066 A:middle
translate the node and the

00:12:02.066 --> 00:12:03.696 A:middle
geometry, while playing the walk

00:12:03.696 --> 00:12:05.016 A:middle
cycle, it moves the character

00:12:05.016 --> 00:12:06.046 A:middle
from point A to point B.

00:12:06.926 --> 00:12:08.136 A:middle
But for the stairs we did

00:12:08.136 --> 00:12:10.416 A:middle
something different.

00:12:10.456 --> 00:12:12.676 A:middle
We leave the node alone and we

00:12:12.676 --> 00:12:14.106 A:middle
apply an animation, which

00:12:14.106 --> 00:12:15.736 A:middle
actually has displacement in it.

00:12:16.056 --> 00:12:18.406 A:middle
So this moves the geometry away

00:12:18.406 --> 00:12:20.616 A:middle
from the node and then when that

00:12:20.616 --> 00:12:22.656 A:middle
animation is complete, we

00:12:22.656 --> 00:12:24.116 A:middle
synchronize the node's position

00:12:24.756 --> 00:12:25.866 A:middle
and remove the animation.

00:12:26.876 --> 00:12:28.406 A:middle
We do that with a type in

00:12:28.406 --> 00:12:29.356 A:middle
SceneKit called an

00:12:29.356 --> 00:12:30.456 A:middle
SCNTransaction.

00:12:31.006 --> 00:12:33.566 A:middle
And SCNTransactions allow you to

00:12:33.566 --> 00:12:35.006 A:middle
make sure that update happens in

00:12:35.006 --> 00:12:35.656 A:middle
one frame.

00:12:35.656 --> 00:12:36.686 A:middle
So let me show you what that

00:12:36.686 --> 00:12:37.176 A:middle
looks like.

00:12:38.306 --> 00:12:40.066 A:middle
You set up the transaction with

00:12:40.066 --> 00:12:42.286 A:middle
the begin and commit calls, and

00:12:42.286 --> 00:12:43.686 A:middle
in our case we want an animation

00:12:43.686 --> 00:12:45.896 A:middle
duration of zero because we need

00:12:45.896 --> 00:12:47.946 A:middle
it to happen in the exact same

00:12:48.076 --> 00:12:48.196 A:middle
frame.

00:12:48.196 --> 00:12:49.716 A:middle
We move the character to the new

00:12:49.716 --> 00:12:51.776 A:middle
position and we remove the

00:12:51.776 --> 00:12:54.056 A:middle
animations, making Byte ready

00:12:54.056 --> 00:12:55.276 A:middle
for the next round of

00:12:55.276 --> 00:12:55.956 A:middle
animations.

00:12:56.816 --> 00:12:57.806 A:middle
So let's see this in action.

00:12:58.646 --> 00:13:00.276 A:middle
Got to stretch it out first,

00:12:58.646 --> 00:13:00.276 A:middle
Got to stretch it out first,

00:13:01.616 --> 00:13:04.286 A:middle
walks up the stairs, and you can

00:13:04.286 --> 00:13:05.806 A:middle
see now, because we're allowing

00:13:05.806 --> 00:13:07.496 A:middle
our animator the freedom to put

00:13:07.496 --> 00:13:08.386 A:middle
the displacement in the

00:13:08.386 --> 00:13:10.106 A:middle
animation, we can be far more

00:13:10.106 --> 00:13:11.696 A:middle
precise about Byte's movements.

00:13:12.026 --> 00:13:14.636 A:middle
Byte's head turns while it walks

00:13:14.636 --> 00:13:15.766 A:middle
up and down the stairs.

00:13:16.216 --> 00:13:17.206 A:middle
So this is a much better

00:13:17.206 --> 00:13:18.606 A:middle
solution and something you

00:13:18.606 --> 00:13:19.796 A:middle
should consider for complex

00:13:19.796 --> 00:13:21.146 A:middle
animations in your scenes.

00:13:21.646 --> 00:13:25.196 A:middle
On to train stop number three,

00:13:26.416 --> 00:13:27.556 A:middle
and that's to look at how we did

00:13:27.556 --> 00:13:28.586 A:middle
the scenery elements, because

00:13:28.586 --> 00:13:29.486 A:middle
it's not all about the

00:13:29.486 --> 00:13:30.016 A:middle
character.

00:13:30.276 --> 00:13:31.186 A:middle
You also need to make sure the

00:13:31.186 --> 00:13:32.136 A:middle
world feels alive.

00:13:32.136 --> 00:13:34.506 A:middle
So let's take a close look at

00:13:34.506 --> 00:13:34.956 A:middle
the water.

00:13:34.956 --> 00:13:39.166 A:middle
Now, you saw before we have been

00:13:39.166 --> 00:13:40.996 A:middle
using maps like this, right,

00:13:40.996 --> 00:13:43.166 A:middle
fairly basic, just enough to

00:13:43.166 --> 00:13:44.566 A:middle
reconstruct the puzzle with, but

00:13:45.316 --> 00:13:46.686 A:middle
we want to get to a point where

00:13:46.686 --> 00:13:47.686 A:middle
our maps look like this.

00:13:48.276 --> 00:13:51.286 A:middle
And the way we did that is to

00:13:51.286 --> 00:13:53.326 A:middle
actually save the original map

00:13:53.326 --> 00:13:55.806 A:middle
out to an SCN file so we can add

00:13:55.806 --> 00:13:56.986 A:middle
in those additional elements.

00:13:57.266 --> 00:13:58.136 A:middle
Right. So instead of writing

00:13:58.136 --> 00:13:59.716 A:middle
code to place each scenery

00:13:59.716 --> 00:14:00.876 A:middle
element, we can do it in the

00:13:59.716 --> 00:14:00.876 A:middle
element, we can do it in the

00:14:00.876 --> 00:14:01.966 A:middle
Scene Editor now because it

00:14:01.966 --> 00:14:03.046 A:middle
makes much more sense.

00:14:03.606 --> 00:14:04.856 A:middle
So if we look at that in the

00:14:04.856 --> 00:14:07.326 A:middle
SceneKit Scene Editor, it looks

00:14:07.326 --> 00:14:10.046 A:middle
great, but now we're investing a

00:14:10.046 --> 00:14:11.716 A:middle
ton of time and effort into each

00:14:11.716 --> 00:14:12.366 A:middle
individual map.

00:14:12.876 --> 00:14:14.626 A:middle
You can see that by the node

00:14:14.626 --> 00:14:17.416 A:middle
hierarchy on the left there.

00:14:17.516 --> 00:14:19.626 A:middle
So the problem is you still want

00:14:19.626 --> 00:14:20.606 A:middle
to keep some amount of

00:14:20.606 --> 00:14:21.246 A:middle
flexibility.

00:14:21.246 --> 00:14:22.536 A:middle
Make sure if the artist comes in

00:14:22.536 --> 00:14:23.486 A:middle
next week and says I have a new

00:14:23.486 --> 00:14:24.476 A:middle
waterfall that would look so

00:14:24.476 --> 00:14:25.916 A:middle
much better, you're not changing

00:14:25.916 --> 00:14:27.226 A:middle
out at 81 maps.

00:14:27.566 --> 00:14:29.516 A:middle
And the way to do that, if we

00:14:29.516 --> 00:14:30.656 A:middle
look closely at the waterfall,

00:14:30.656 --> 00:14:32.736 A:middle
is to use a technique called

00:14:32.736 --> 00:14:33.596 A:middle
reference nodes.

00:14:34.156 --> 00:14:36.256 A:middle
So these are the water nodes in

00:14:36.256 --> 00:14:37.916 A:middle
our scene and the arrow

00:14:37.916 --> 00:14:39.316 A:middle
indicates that they're being

00:14:39.316 --> 00:14:41.126 A:middle
referenced out to a single SCN

00:14:41.126 --> 00:14:41.466 A:middle
file.

00:14:41.786 --> 00:14:43.056 A:middle
So you update that file in one

00:14:43.056 --> 00:14:44.476 A:middle
place and it propagates through

00:14:44.476 --> 00:14:45.236 A:middle
all your maps.

00:14:45.756 --> 00:14:48.876 A:middle
Now, that's not all there is to

00:14:48.876 --> 00:14:49.286 A:middle
water.

00:14:49.836 --> 00:14:51.046 A:middle
If we take a closer look at that

00:14:51.046 --> 00:14:54.076 A:middle
SCN file, water kind of also has

00:14:54.076 --> 00:14:55.236 A:middle
to move for it to be

00:14:55.236 --> 00:14:55.676 A:middle
interesting.

00:14:55.766 --> 00:14:56.806 A:middle
Right. The artist did a great

00:14:56.806 --> 00:14:57.866 A:middle
job here, the texture looks

00:14:57.866 --> 00:14:59.906 A:middle
amazing, but it's not real.

00:15:01.326 --> 00:15:02.896 A:middle
So in order to accomplish moving

00:15:02.896 --> 00:15:04.046 A:middle
the water, we're using a

00:15:04.046 --> 00:15:05.976 A:middle
technique, a geometry modifier,

00:15:06.026 --> 00:15:08.236 A:middle
actually writing a shader, and

00:15:08.306 --> 00:15:09.966 A:middle
you access that by the button

00:15:09.966 --> 00:15:11.416 A:middle
down in the lower right here.

00:15:12.486 --> 00:15:13.406 A:middle
I'll zoom in on it for you a

00:15:13.406 --> 00:15:13.856 A:middle
little bit.

00:15:13.856 --> 00:15:15.426 A:middle
It's going to be hard to see.

00:15:15.426 --> 00:15:16.616 A:middle
And that will bring up a tray,

00:15:16.836 --> 00:15:19.096 A:middle
new in Xcode 9, where you can

00:15:19.096 --> 00:15:20.786 A:middle
modify -- or you can specify

00:15:20.786 --> 00:15:22.766 A:middle
your geometry modifier built off

00:15:22.766 --> 00:15:24.646 A:middle
this SCN shader geometry type

00:15:24.816 --> 00:15:25.856 A:middle
provided to you by SceneKit.

00:15:26.636 --> 00:15:28.466 A:middle
Now, all this is doing is moving

00:15:28.466 --> 00:15:29.306 A:middle
the texture around the

00:15:29.306 --> 00:15:31.376 A:middle
waterfall, but it adds a great

00:15:31.376 --> 00:15:31.726 A:middle
effect.

00:15:31.856 --> 00:15:32.976 A:middle
So let's check it out in action.

00:15:39.046 --> 00:15:39.416 A:middle
There we go.

00:15:40.016 --> 00:15:41.256 A:middle
So now the water actually is

00:15:41.256 --> 00:15:42.556 A:middle
flowing, you can just see the

00:15:42.556 --> 00:15:43.906 A:middle
textures moving around and it

00:15:44.046 --> 00:15:44.836 A:middle
adds this great effect.

00:15:45.206 --> 00:15:46.846 A:middle
And we use that same technique

00:15:46.876 --> 00:15:48.536 A:middle
for the vines that sway in the

00:15:48.626 --> 00:15:49.926 A:middle
scene and for the grass that

00:15:49.966 --> 00:15:51.176 A:middle
blows in the breeze.

00:15:51.506 --> 00:15:52.986 A:middle
So this can add a lot of life to

00:15:53.026 --> 00:15:54.996 A:middle
your scene and it's a great

00:15:54.996 --> 00:15:56.566 A:middle
technique for you to try out.

00:15:57.156 --> 00:15:58.026 A:middle
That's three.

00:15:58.936 --> 00:16:00.316 A:middle
And we've really been focused on

00:15:58.936 --> 00:16:00.316 A:middle
And we've really been focused on

00:16:00.316 --> 00:16:00.986 A:middle
the visuals.

00:16:01.186 --> 00:16:03.046 A:middle
We've taken a number of stops to

00:16:03.046 --> 00:16:04.046 A:middle
figure out how you can make that

00:16:04.046 --> 00:16:05.556 A:middle
great, but there's a whole other

00:16:05.556 --> 00:16:07.616 A:middle
aspect you have to consider and

00:16:07.616 --> 00:16:09.156 A:middle
that's what the scene would look

00:16:09.156 --> 00:16:10.276 A:middle
like to a visually-impaired

00:16:10.276 --> 00:16:10.586 A:middle
user.

00:16:11.856 --> 00:16:13.566 A:middle
So when you're trying to design

00:16:13.566 --> 00:16:15.636 A:middle
a great experience in VoiceOver,

00:16:16.516 --> 00:16:17.676 A:middle
you want to focus on things

00:16:17.786 --> 00:16:18.666 A:middle
other than the visuals

00:16:18.666 --> 00:16:20.766 A:middle
obviously, but without

00:16:20.766 --> 00:16:22.156 A:middle
describing everything we did, I

00:16:22.156 --> 00:16:23.536 A:middle
first want you to just listen to

00:16:23.536 --> 00:16:23.976 A:middle
the experience.

00:16:24.516 --> 00:16:28.756 A:middle
[ Music ]

00:16:29.256 --> 00:16:30.266 A:middle
&gt;&gt; VoiceOver on.

00:16:30.556 --> 00:16:31.526 A:middle
Landscape.

00:16:31.526 --> 00:16:33.876 A:middle
The world is five columns by

00:16:33.876 --> 00:16:35.926 A:middle
five rows.

00:16:35.926 --> 00:16:37.716 A:middle
Column 0, row 0, [inaudible] at

00:16:37.806 --> 00:16:39.816 A:middle
height 0 facing north.

00:16:39.886 --> 00:16:41.416 A:middle
Double attach to switch

00:16:41.416 --> 00:16:42.156 A:middle
characters.

00:16:42.216 --> 00:16:44.846 A:middle
Column 0, row 1, gem at height

00:16:44.846 --> 00:16:44.976 A:middle
0.

00:16:45.508 --> 00:16:47.508 A:middle
[ Music ]

00:16:52.046 --> 00:16:55.216 A:middle
&gt;&gt; So we did a number of things

00:16:55.216 --> 00:16:56.646 A:middle
to support VoiceOver in Learn to

00:16:56.646 --> 00:16:58.856 A:middle
Code, but the first thing I want

00:16:58.856 --> 00:17:01.046 A:middle
you to notice is we're actually

00:16:58.856 --> 00:17:01.046 A:middle
you to notice is we're actually

00:17:01.046 --> 00:17:02.656 A:middle
focusing on a great nonvisual

00:17:02.656 --> 00:17:03.276 A:middle
experience.

00:17:03.306 --> 00:17:05.046 A:middle
By adding music, by adding

00:17:05.046 --> 00:17:07.136 A:middle
character noises, you make the

00:17:07.136 --> 00:17:10.006 A:middle
scene auditorily rich.

00:17:11.536 --> 00:17:14.636 A:middle
There's other things we added to

00:17:14.636 --> 00:17:16.236 A:middle
VoiceOver, and to go for a deep

00:17:16.236 --> 00:17:17.826 A:middle
dive on those techniques, you

00:17:17.826 --> 00:17:19.156 A:middle
can check out a great talk this

00:17:19.156 --> 00:17:20.425 A:middle
year about how to make your

00:17:20.425 --> 00:17:21.746 A:middle
media and games accessible.

00:17:21.746 --> 00:17:24.006 A:middle
The one that was really

00:17:24.006 --> 00:17:25.726 A:middle
important for us is actually

00:17:25.726 --> 00:17:26.925 A:middle
describing the important

00:17:26.925 --> 00:17:29.066 A:middle
locations using VoiceOver, and

00:17:29.066 --> 00:17:30.576 A:middle
the reason I want to show you

00:17:30.576 --> 00:17:31.906 A:middle
this in more detail is because

00:17:31.906 --> 00:17:33.486 A:middle
it's surprisingly easy to do.

00:17:34.406 --> 00:17:36.176 A:middle
So just like in your UIKit apps

00:17:36.866 --> 00:17:37.796 A:middle
we're overriding an

00:17:37.796 --> 00:17:40.796 A:middle
accessibility element so that we

00:17:40.796 --> 00:17:42.236 A:middle
can provide a custom label.

00:17:42.826 --> 00:17:44.796 A:middle
In this case we're providing a

00:17:44.796 --> 00:17:46.856 A:middle
label which is updated with the

00:17:46.856 --> 00:17:48.146 A:middle
current contents of the world.

00:17:48.496 --> 00:17:51.086 A:middle
So this is basically the same

00:17:51.086 --> 00:17:52.416 A:middle
technique you're already used to

00:17:52.616 --> 00:17:54.256 A:middle
in UIKit, and it really is that

00:17:54.256 --> 00:17:54.596 A:middle
simple.

00:17:54.706 --> 00:17:55.636 A:middle
You create one of those

00:17:55.636 --> 00:17:59.276 A:middle
elements, you specify its frame,

00:17:59.696 --> 00:18:00.876 A:middle
we're using projectPoint from

00:17:59.696 --> 00:18:00.876 A:middle
we're using projectPoint from

00:18:00.876 --> 00:18:03.006 A:middle
SceneKit to get from 3D to 2D,

00:18:03.606 --> 00:18:04.856 A:middle
and you add that element to the

00:18:04.856 --> 00:18:05.166 A:middle
view.

00:18:06.556 --> 00:18:08.236 A:middle
So my point is even though 3D

00:18:08.306 --> 00:18:09.426 A:middle
seems really tough to make

00:18:09.426 --> 00:18:11.606 A:middle
accessible, it's quite easy and

00:18:11.606 --> 00:18:12.556 A:middle
it's already techniques you're

00:18:12.556 --> 00:18:13.326 A:middle
familiar with.

00:18:14.036 --> 00:18:15.296 A:middle
So there are really three main

00:18:15.296 --> 00:18:16.706 A:middle
reasons to support it.

00:18:17.546 --> 00:18:19.366 A:middle
One, it's great for your users.

00:18:19.436 --> 00:18:20.396 A:middle
It's probably one of the most

00:18:20.396 --> 00:18:22.156 A:middle
rewarding aspects, that I

00:18:22.156 --> 00:18:23.126 A:middle
thought, of working on this

00:18:23.126 --> 00:18:23.536 A:middle
project.

00:18:24.716 --> 00:18:25.486 A:middle
One of the aspects that I

00:18:25.486 --> 00:18:26.296 A:middle
thought was most rewarding.

00:18:26.296 --> 00:18:26.676 A:middle
Excuse me.

00:18:26.786 --> 00:18:28.936 A:middle
Two, is that it's just easy to

00:18:28.936 --> 00:18:29.266 A:middle
do.

00:18:29.966 --> 00:18:31.926 A:middle
It's many of the familiar things

00:18:31.926 --> 00:18:32.856 A:middle
you're used to from UIKit

00:18:32.856 --> 00:18:33.386 A:middle
development.

00:18:33.636 --> 00:18:34.976 A:middle
And three, just like there are

00:18:34.976 --> 00:18:36.806 A:middle
no excuses for not making your

00:18:36.806 --> 00:18:39.266 A:middle
apps in UIKit accessible, there

00:18:39.266 --> 00:18:40.596 A:middle
really should be no excuses for

00:18:40.596 --> 00:18:41.436 A:middle
doing so in 3D.

00:18:42.406 --> 00:18:43.946 A:middle
So if you want to see this code

00:18:43.946 --> 00:18:46.356 A:middle
in full detail, you can always

00:18:46.356 --> 00:18:47.706 A:middle
check out the source for Learn

00:18:47.706 --> 00:18:49.616 A:middle
to Code by diving into the

00:18:49.616 --> 00:18:51.546 A:middle
auxiliary sources in the

00:18:51.546 --> 00:18:53.016 A:middle
Playground book, and this file

00:18:53.016 --> 00:18:54.096 A:middle
actually sits in

00:18:54.096 --> 00:18:56.246 A:middle
Accessibilityextensions.swift.

00:18:57.196 --> 00:18:58.996 A:middle
So that is iterating.

00:18:59.566 --> 00:19:01.186 A:middle
We talked about how you should

00:18:59.566 --> 00:19:01.186 A:middle
We talked about how you should

00:19:01.186 --> 00:19:02.696 A:middle
separate your data from the

00:19:02.696 --> 00:19:03.746 A:middle
visuals of your scene.

00:19:03.966 --> 00:19:05.486 A:middle
Right. We did that for modeling

00:19:05.486 --> 00:19:06.876 A:middle
the world, but also how we did

00:19:06.876 --> 00:19:07.856 A:middle
the stair animation.

00:19:08.376 --> 00:19:11.376 A:middle
You should value flexibility

00:19:11.376 --> 00:19:12.196 A:middle
even at this phase.

00:19:12.196 --> 00:19:13.246 A:middle
So when you're putting all that

00:19:13.246 --> 00:19:14.286 A:middle
time and effort into your

00:19:14.286 --> 00:19:15.376 A:middle
levels, make sure you're doing

00:19:15.376 --> 00:19:16.626 A:middle
things like using reference

00:19:16.626 --> 00:19:18.076 A:middle
nodes so that you still have

00:19:18.076 --> 00:19:18.956 A:middle
some flexibility.

00:19:19.906 --> 00:19:21.816 A:middle
And then finally, make sure you

00:19:21.816 --> 00:19:23.366 A:middle
audit that accessibility support

00:19:23.366 --> 00:19:23.746 A:middle
early.

00:19:24.056 --> 00:19:25.046 A:middle
It's not something that can be

00:19:25.046 --> 00:19:26.576 A:middle
bolted on at the end, and it's

00:19:26.576 --> 00:19:28.396 A:middle
surprisingly easy to do if you

00:19:28.396 --> 00:19:30.446 A:middle
plan for it.

00:19:30.706 --> 00:19:32.626 A:middle
Now to talk about how we took

00:19:32.626 --> 00:19:34.736 A:middle
these design time assets and

00:19:34.736 --> 00:19:35.866 A:middle
really tuned them up to make

00:19:35.866 --> 00:19:36.996 A:middle
them super performant, I'm going

00:19:36.996 --> 00:19:37.736 A:middle
to invite Lamont up to the

00:19:37.736 --> 00:19:37.886 A:middle
stage.

00:19:38.516 --> 00:19:41.116 A:middle
[ Applause ]

00:19:41.616 --> 00:19:42.236 A:middle
&gt;&gt; Thank you, Michael.

00:19:42.676 --> 00:19:44.586 A:middle
That's great [applause].

00:19:45.046 --> 00:19:46.156 A:middle
Hello everyone.

00:19:46.706 --> 00:19:47.326 A:middle
I'm Lamont.

00:19:47.326 --> 00:19:48.396 A:middle
I'm an engineer on the Swift

00:19:48.396 --> 00:19:50.736 A:middle
Playgrounds' Content Team, and

00:19:50.736 --> 00:19:51.826 A:middle
today I'm going to talk to you

00:19:51.826 --> 00:19:52.906 A:middle
about how you can improve the

00:19:52.906 --> 00:19:53.916 A:middle
performance of your SceneKit

00:19:53.916 --> 00:19:56.696 A:middle
apps in terms of frame rate and

00:19:56.696 --> 00:19:57.466 A:middle
user experience.

00:19:59.776 --> 00:20:02.626 A:middle
When we first started developing

00:19:59.776 --> 00:20:02.626 A:middle
When we first started developing

00:20:02.626 --> 00:20:04.306 A:middle
Learn to Code, one of the things

00:20:04.306 --> 00:20:05.596 A:middle
that was critical for us was to

00:20:05.596 --> 00:20:07.136 A:middle
have a really rich and detailed

00:20:07.136 --> 00:20:09.026 A:middle
world, and as you can see here,

00:20:09.026 --> 00:20:10.256 A:middle
that's exactly what we have.

00:20:11.006 --> 00:20:13.806 A:middle
The waterfalls look realistic,

00:20:13.806 --> 00:20:15.496 A:middle
the shadows behind the

00:20:15.746 --> 00:20:17.356 A:middle
staircases look pretty good, the

00:20:17.356 --> 00:20:19.306 A:middle
colors are rich and vivid.

00:20:19.306 --> 00:20:21.066 A:middle
We even have nice statues hidden

00:20:21.066 --> 00:20:22.046 A:middle
in the waterfalls there.

00:20:23.546 --> 00:20:25.896 A:middle
But as you know, a good-looking

00:20:25.896 --> 00:20:28.966 A:middle
application isn't the only

00:20:28.966 --> 00:20:31.866 A:middle
aspect of a great experience.

00:20:31.986 --> 00:20:32.946 A:middle
It's also performance.

00:20:34.126 --> 00:20:35.236 A:middle
So what does that actually mean?

00:20:35.236 --> 00:20:38.156 A:middle
To have a good experience we

00:20:38.156 --> 00:20:40.056 A:middle
actually want to have a really

00:20:40.056 --> 00:20:41.026 A:middle
responsive frame rate.

00:20:41.196 --> 00:20:42.326 A:middle
Your users are interacting with

00:20:42.326 --> 00:20:43.236 A:middle
your application, they're

00:20:43.306 --> 00:20:44.606 A:middle
pinching, they're gesturing,

00:20:45.006 --> 00:20:45.876 A:middle
they're adding things to the

00:20:45.876 --> 00:20:46.916 A:middle
scene, removing things.

00:20:47.306 --> 00:20:48.386 A:middle
You want this to be really fast

00:20:48.386 --> 00:20:49.046 A:middle
and very fluid.

00:20:49.096 --> 00:20:51.836 A:middle
So I'm going to show you how we

00:20:51.836 --> 00:20:52.806 A:middle
actually increased the

00:20:52.806 --> 00:20:53.586 A:middle
performance of our application

00:20:53.586 --> 00:20:53.976 A:middle
in Learn to Code.

00:20:58.046 --> 00:20:59.546 A:middle
Let's take a look at one of our

00:20:59.546 --> 00:21:01.136 A:middle
geometrically complex scenes.

00:20:59.546 --> 00:21:01.136 A:middle
geometrically complex scenes.

00:21:01.416 --> 00:21:02.396 A:middle
And when I say geometrically

00:21:02.396 --> 00:21:05.116 A:middle
complex, what I mean is this

00:21:05.116 --> 00:21:06.836 A:middle
scene is comprised of thousands

00:21:06.836 --> 00:21:09.796 A:middle
of individual geometry parts.

00:21:11.176 --> 00:21:12.696 A:middle
Now, each of these parts have to

00:21:12.696 --> 00:21:14.326 A:middle
be rendered separately by the

00:21:14.326 --> 00:21:14.886 A:middle
GPU.

00:21:16.336 --> 00:21:18.316 A:middle
So let's take a look at what the

00:21:18.316 --> 00:21:19.436 A:middle
performance of our application

00:21:19.436 --> 00:21:19.716 A:middle
is.

00:21:20.636 --> 00:21:22.156 A:middle
SceneKit has a really useful

00:21:22.156 --> 00:21:24.056 A:middle
tool called the Debug Statistics

00:21:24.056 --> 00:21:26.946 A:middle
View and I want to zoom in on it

00:21:26.946 --> 00:21:28.996 A:middle
now and take a look at it.

00:21:29.646 --> 00:21:30.686 A:middle
Now, you can enable this in your

00:21:30.686 --> 00:21:32.966 A:middle
applications by simply setting

00:21:32.966 --> 00:21:35.236 A:middle
the showStatistics property on

00:21:35.236 --> 00:21:36.306 A:middle
your view to true.

00:21:36.336 --> 00:21:39.936 A:middle
If we take a look at some of the

00:21:39.936 --> 00:21:41.926 A:middle
more interesting numbers on this

00:21:42.196 --> 00:21:44.166 A:middle
debug view, you'll notice we

00:21:44.166 --> 00:21:46.106 A:middle
have a low frame rate, 29 frames

00:21:46.106 --> 00:21:46.566 A:middle
per second.

00:21:47.346 --> 00:21:48.606 A:middle
That's not very great.

00:21:49.006 --> 00:21:50.346 A:middle
What we actually really want is

00:21:50.346 --> 00:21:51.726 A:middle
60 frames per second minimum.

00:21:52.326 --> 00:21:54.626 A:middle
This allows us to get that fluid

00:21:54.626 --> 00:21:55.736 A:middle
interaction as the users are

00:21:55.736 --> 00:21:57.186 A:middle
pinching and gesturing around.

00:21:59.686 --> 00:22:00.926 A:middle
Well, what contributes to this

00:21:59.686 --> 00:22:00.926 A:middle
Well, what contributes to this

00:22:00.926 --> 00:22:01.546 A:middle
low frame rate?

00:22:02.256 --> 00:22:03.366 A:middle
Well, let's break it down.

00:22:03.366 --> 00:22:05.576 A:middle
What are we doing on each frame?

00:22:06.976 --> 00:22:08.376 A:middle
This number here, the rendering

00:22:08.376 --> 00:22:10.106 A:middle
number, is the amount of time

00:22:10.106 --> 00:22:11.786 A:middle
we're taking to render one

00:22:11.786 --> 00:22:13.156 A:middle
complete frame.

00:22:13.156 --> 00:22:16.676 A:middle
It looks like we're taking 20.4

00:22:16.676 --> 00:22:17.316 A:middle
milliseconds.

00:22:18.426 --> 00:22:19.646 A:middle
That's pretty slow.

00:22:19.946 --> 00:22:21.446 A:middle
If you do the math, if you want

00:22:21.446 --> 00:22:22.766 A:middle
to hit 60 frames per second, you

00:22:22.766 --> 00:22:23.916 A:middle
have to be under 16

00:22:23.916 --> 00:22:24.516 A:middle
milliseconds.

00:22:25.916 --> 00:22:27.016 A:middle
So what are we doing that's

00:22:27.046 --> 00:22:28.226 A:middle
taking 20 milliseconds?

00:22:29.436 --> 00:22:31.526 A:middle
Well, to aid in that, one thing

00:22:31.526 --> 00:22:32.526 A:middle
we can look at is the number of

00:22:32.526 --> 00:22:33.796 A:middle
draw calls, as you can see

00:22:33.796 --> 00:22:37.096 A:middle
highlighted by this diamond.

00:22:37.096 --> 00:22:38.906 A:middle
Now, what's a draw call?

00:22:39.666 --> 00:22:40.956 A:middle
A quick refresher.

00:22:41.736 --> 00:22:42.906 A:middle
When you want to draw objects in

00:22:42.906 --> 00:22:44.446 A:middle
a scene, the CPU has to tell

00:22:44.446 --> 00:22:46.286 A:middle
GPU, hey, draw this mesh.

00:22:47.226 --> 00:22:48.696 A:middle
The CPU draws this mesh or a

00:22:48.696 --> 00:22:50.736 A:middle
geometry object, and that's one

00:22:50.736 --> 00:22:51.416 A:middle
draw call.

00:22:51.886 --> 00:22:54.136 A:middle
It looks like we have 877 of

00:22:54.136 --> 00:22:54.356 A:middle
them.

00:22:55.376 --> 00:22:56.346 A:middle
That's quite a bit of draw

00:22:56.346 --> 00:22:56.656 A:middle
calls.

00:22:56.886 --> 00:22:58.616 A:middle
So what are some of the things

00:22:58.616 --> 00:22:59.656 A:middle
we could do to actually increase

00:22:59.656 --> 00:23:01.426 A:middle
the performance of our app?

00:22:59.656 --> 00:23:01.426 A:middle
the performance of our app?

00:23:02.016 --> 00:23:03.566 A:middle
Well, I'm going to share with

00:23:03.566 --> 00:23:04.156 A:middle
you one tip.

00:23:05.526 --> 00:23:06.476 A:middle
The theme throughout the rest of

00:23:06.476 --> 00:23:08.376 A:middle
the talk is how do we reduce our

00:23:08.376 --> 00:23:09.146 A:middle
draw call count.

00:23:09.836 --> 00:23:13.766 A:middle
I'm going to talk to you about

00:23:13.766 --> 00:23:17.856 A:middle
that in three distinct phases;

00:23:18.016 --> 00:23:19.906 A:middle
geometry, which are those meshes

00:23:19.906 --> 00:23:21.006 A:middle
that comprise the scene;

00:23:22.216 --> 00:23:23.946 A:middle
materials, which give our scene

00:23:23.946 --> 00:23:27.126 A:middle
a nice look; and lighting, which

00:23:27.126 --> 00:23:27.836 A:middle
kind of brings our scene to

00:23:27.836 --> 00:23:27.936 A:middle
life.

00:23:31.046 --> 00:23:33.696 A:middle
Let's take a look at an example

00:23:33.696 --> 00:23:34.796 A:middle
level that we showed earlier.

00:23:36.016 --> 00:23:38.796 A:middle
Now, this scene has lots of

00:23:38.796 --> 00:23:39.646 A:middle
individual parts.

00:23:39.646 --> 00:23:42.806 A:middle
I want to focus in on one type,

00:23:43.736 --> 00:23:45.296 A:middle
the grass.

00:23:45.406 --> 00:23:49.146 A:middle
Now, if you look closely, and

00:23:49.146 --> 00:23:50.116 A:middle
you're good at math, you can

00:23:50.116 --> 00:23:51.786 A:middle
count, there are roughly 30

00:23:51.786 --> 00:23:53.136 A:middle
individual tiles in this screen,

00:23:54.226 --> 00:23:57.106 A:middle
each have their own mesh, so the

00:23:57.106 --> 00:23:58.636 A:middle
CPU has to tell the GPU to

00:23:58.636 --> 00:24:01.726 A:middle
render these things one-by-one,

00:23:58.636 --> 00:24:01.726 A:middle
render these things one-by-one,

00:24:01.956 --> 00:24:03.396 A:middle
so we get 30 draw calls.

00:24:03.396 --> 00:24:05.286 A:middle
Now, this is a small scene.

00:24:05.286 --> 00:24:06.446 A:middle
Imagine if you wanted to have

00:24:06.446 --> 00:24:08.576 A:middle
like a huge expansive world with

00:24:08.636 --> 00:24:09.646 A:middle
thousands of these tiles.

00:24:09.646 --> 00:24:10.646 A:middle
Now we're going to have

00:24:10.646 --> 00:24:11.646 A:middle
thousands of draw calls.

00:24:11.906 --> 00:24:12.756 A:middle
Imagine what happens to our

00:24:12.756 --> 00:24:15.296 A:middle
frame rate then.

00:24:16.136 --> 00:24:18.496 A:middle
One thing you might notice is

00:24:19.266 --> 00:24:20.356 A:middle
these grass tiles may not

00:24:20.356 --> 00:24:25.006 A:middle
actually move, so if they don't

00:24:25.306 --> 00:24:26.816 A:middle
move, why are we drawing so many

00:24:26.916 --> 00:24:27.376 A:middle
of them?

00:24:27.656 --> 00:24:29.656 A:middle
Could we draw perhaps one big

00:24:29.656 --> 00:24:30.006 A:middle
mesh?

00:24:30.566 --> 00:24:33.166 A:middle
That's possible.

00:24:33.746 --> 00:24:36.706 A:middle
There's one rule I want you to

00:24:36.706 --> 00:24:38.676 A:middle
remember, is when you're talking

00:24:38.676 --> 00:24:41.466 A:middle
to the GPU, there's one draw

00:24:41.466 --> 00:24:42.246 A:middle
call per mesh.

00:24:42.766 --> 00:24:43.876 A:middle
You have a thousand meshes, you

00:24:43.876 --> 00:24:44.886 A:middle
have a thousand draw calls.

00:24:46.066 --> 00:24:47.736 A:middle
So if we look at our grass tile

00:24:47.736 --> 00:24:49.486 A:middle
and we want to actually combine

00:24:49.486 --> 00:24:51.506 A:middle
them somehow, that sounds like a

00:24:51.506 --> 00:24:52.256 A:middle
reasonable technique.

00:24:53.166 --> 00:24:54.516 A:middle
I'm going to show you how we can

00:24:55.006 --> 00:24:56.896 A:middle
do that.

00:24:57.646 --> 00:24:59.546 A:middle
Let's say we have two geometry

00:24:59.546 --> 00:25:00.496 A:middle
objects in our scene.

00:24:59.546 --> 00:25:00.496 A:middle
objects in our scene.

00:25:00.786 --> 00:25:03.096 A:middle
On our left we have a grass

00:25:03.096 --> 00:25:03.636 A:middle
tile.

00:25:04.246 --> 00:25:05.426 A:middle
On our right we have another

00:25:05.426 --> 00:25:07.626 A:middle
grass tile.

00:25:07.846 --> 00:25:08.926 A:middle
They both reference the same

00:25:08.926 --> 00:25:09.876 A:middle
material, they have the same

00:25:09.876 --> 00:25:11.876 A:middle
look, they're just displaced and

00:25:11.876 --> 00:25:13.236 A:middle
they have different locations in

00:25:13.236 --> 00:25:13.906 A:middle
3D space.

00:25:14.846 --> 00:25:16.416 A:middle
When you send this to the GPU,

00:25:16.466 --> 00:25:17.856 A:middle
you're going to get two draw

00:25:17.856 --> 00:25:17.976 A:middle
calls.

00:25:22.556 --> 00:25:24.426 A:middle
If we merge the two together

00:25:24.426 --> 00:25:25.336 A:middle
through a process called

00:25:25.336 --> 00:25:27.456 A:middle
flattening, what we're doing is

00:25:27.456 --> 00:25:28.966 A:middle
saying let's take all the points

00:25:28.966 --> 00:25:31.226 A:middle
out of mesh A and combine them

00:25:31.226 --> 00:25:32.906 A:middle
with the points in mesh B into

00:25:32.906 --> 00:25:35.146 A:middle
one super-Godzilla mesh.

00:25:37.136 --> 00:25:40.546 A:middle
The beauty of this is now all

00:25:40.546 --> 00:25:41.896 A:middle
these points reference just that

00:25:41.896 --> 00:25:43.866 A:middle
one material and when the CPU

00:25:43.866 --> 00:25:45.216 A:middle
talks to the GPU, all it has to

00:25:45.216 --> 00:25:46.716 A:middle
do is say, hey, draw this one

00:25:46.716 --> 00:25:46.996 A:middle
thing.

00:25:48.426 --> 00:25:50.266 A:middle
Done. Now, this sounds pretty

00:25:50.266 --> 00:25:52.786 A:middle
trivial and it's really easy to

00:25:52.786 --> 00:25:53.186 A:middle
use.

00:25:53.786 --> 00:25:55.416 A:middle
You can use it in your

00:25:55.416 --> 00:25:58.946 A:middle
applications by a method on

00:25:59.076 --> 00:26:01.136 A:middle
SCNNode called flattenedClone,

00:25:59.076 --> 00:26:01.136 A:middle
SCNNode called flattenedClone,

00:26:01.926 --> 00:26:03.036 A:middle
and what you want to do here is

00:26:03.036 --> 00:26:04.106 A:middle
just make sure that there's a

00:26:04.106 --> 00:26:06.656 A:middle
parent node that contains the

00:26:06.656 --> 00:26:09.416 A:middle
nodes that you want to flatten,

00:26:09.416 --> 00:26:11.336 A:middle
and the return of this is a new

00:26:11.336 --> 00:26:12.656 A:middle
flattened mesh that you can

00:26:12.656 --> 00:26:14.056 A:middle
composite in your scene and

00:26:14.056 --> 00:26:15.086 A:middle
replace the other nodes.

00:26:17.016 --> 00:26:18.636 A:middle
Now, this simple technique was

00:26:18.636 --> 00:26:20.086 A:middle
used throughout Learn to Code.

00:26:20.086 --> 00:26:22.766 A:middle
So if we take our level that I

00:26:22.766 --> 00:26:24.646 A:middle
showed you earlier, I'm going to

00:26:24.646 --> 00:26:26.556 A:middle
break down the sections at which

00:26:26.556 --> 00:26:27.516 A:middle
we were able to run this

00:26:27.516 --> 00:26:28.386 A:middle
flattening logic.

00:26:28.386 --> 00:26:30.516 A:middle
I'm going to highlight in red

00:26:30.516 --> 00:26:32.326 A:middle
the areas that were flattened

00:26:32.326 --> 00:26:32.806 A:middle
together.

00:26:32.966 --> 00:26:34.146 A:middle
So you can see here, our water

00:26:34.146 --> 00:26:36.226 A:middle
now -- the grass tile is much

00:26:36.226 --> 00:26:39.506 A:middle
fewer draw calls.

00:26:39.906 --> 00:26:41.116 A:middle
And each of these red sections

00:26:41.116 --> 00:26:42.456 A:middle
equates to one draw call,

00:26:42.456 --> 00:26:43.746 A:middle
instead of an individual draw

00:26:43.746 --> 00:26:43.976 A:middle
call.

00:26:46.046 --> 00:26:47.116 A:middle
So we were able to greatly

00:26:47.116 --> 00:26:48.616 A:middle
reduce the number of draw calls

00:26:48.616 --> 00:26:49.176 A:middle
in our scene.

00:26:50.556 --> 00:26:53.266 A:middle
We went from over 550 draw calls

00:26:53.796 --> 00:26:54.876 A:middle
to less than 16.

00:26:54.966 --> 00:26:55.916 A:middle
This is huge.

00:26:58.016 --> 00:26:59.056 A:middle
[ Applause ]

00:26:59.056 --> 00:26:59.646 A:middle
Thank you.

00:26:59.646 --> 00:27:04.156 A:middle
Now, you have to use a bit of

00:26:59.646 --> 00:27:04.156 A:middle
Now, you have to use a bit of

00:27:04.156 --> 00:27:05.916 A:middle
discretion here because you

00:27:05.916 --> 00:27:06.836 A:middle
don't want to just go all

00:27:06.836 --> 00:27:08.176 A:middle
willy-nilly and, you know,

00:27:08.176 --> 00:27:09.496 A:middle
flatten all the things.

00:27:10.546 --> 00:27:12.616 A:middle
The reason why is, as Michael

00:27:12.616 --> 00:27:14.976 A:middle
showed you earlier, he made the

00:27:14.976 --> 00:27:16.376 A:middle
water look really realistic by

00:27:16.376 --> 00:27:17.786 A:middle
adding that simple shader

00:27:17.786 --> 00:27:18.786 A:middle
modifier that gave us this

00:27:18.936 --> 00:27:19.936 A:middle
really great effect.

00:27:21.176 --> 00:27:24.856 A:middle
So if we were to flatten

00:27:24.856 --> 00:27:26.596 A:middle
everything, the whole world

00:27:26.596 --> 00:27:27.576 A:middle
would kind of drip away.

00:27:27.576 --> 00:27:28.926 A:middle
That's not what we want.

00:27:29.856 --> 00:27:33.126 A:middle
So we were selective in choosing

00:27:33.126 --> 00:27:34.716 A:middle
what things to flatten.

00:27:35.096 --> 00:27:36.306 A:middle
So we flattened the waterfalls

00:27:36.306 --> 00:27:36.846 A:middle
altogether.

00:27:37.676 --> 00:27:39.406 A:middle
In your worlds or games that you

00:27:39.406 --> 00:27:42.036 A:middle
create you may choose to have an

00:27:42.036 --> 00:27:44.256 A:middle
object that disappears or moves

00:27:44.256 --> 00:27:46.096 A:middle
or scales or rotates, or somehow

00:27:46.096 --> 00:27:46.876 A:middle
it gets modified.

00:27:47.546 --> 00:27:50.226 A:middle
So I think the takeaway here is

00:27:51.396 --> 00:27:52.416 A:middle
based on how you want to use

00:27:52.416 --> 00:27:53.366 A:middle
your geometry, if there's

00:27:53.366 --> 00:27:54.936 A:middle
something dynamic about it, you

00:27:54.936 --> 00:27:56.656 A:middle
may want to keep flattening it

00:27:56.656 --> 00:27:58.296 A:middle
with other things that move in

00:27:58.296 --> 00:27:58.976 A:middle
the exact same way.

00:28:04.256 --> 00:28:05.036 A:middle
So I'm going to give you a

00:28:05.036 --> 00:28:07.466 A:middle
couple of tips on working with

00:28:07.466 --> 00:28:07.996 A:middle
flattening.

00:28:08.686 --> 00:28:09.846 A:middle
One is you want to store your

00:28:09.846 --> 00:28:11.386 A:middle
nodes that you want to flatten

00:28:11.436 --> 00:28:13.256 A:middle
in the same group, parent group,

00:28:13.256 --> 00:28:13.826 A:middle
parent node.

00:28:14.136 --> 00:28:14.946 A:middle
And it doesn't have to be the

00:28:14.946 --> 00:28:16.916 A:middle
same type of geometry like we're

00:28:16.916 --> 00:28:18.196 A:middle
using grass tiles here, but

00:28:18.416 --> 00:28:19.926 A:middle
let's say you're modeling a

00:28:19.926 --> 00:28:21.836 A:middle
living room and you have a sofa

00:28:21.836 --> 00:28:23.166 A:middle
and a chair and a table, and

00:28:23.166 --> 00:28:24.336 A:middle
they don't move relative to each

00:28:24.336 --> 00:28:24.576 A:middle
other.

00:28:25.366 --> 00:28:26.506 A:middle
They're all good candidates to

00:28:26.506 --> 00:28:28.736 A:middle
put in one node group and

00:28:28.816 --> 00:28:29.906 A:middle
flatten by itself.

00:28:30.296 --> 00:28:31.046 A:middle
So you want to be really

00:28:31.046 --> 00:28:32.466 A:middle
aggressive here and anything

00:28:32.466 --> 00:28:33.806 A:middle
that doesn't move relative to

00:28:33.806 --> 00:28:37.266 A:middle
something else, flatten it and

00:28:37.546 --> 00:28:38.566 A:middle
you'll reduce your draw call

00:28:38.566 --> 00:28:39.516 A:middle
count significantly.

00:28:40.146 --> 00:28:42.996 A:middle
Now, there is a caveat here.

00:28:44.476 --> 00:28:46.206 A:middle
Learn to Code's world is pretty

00:28:47.596 --> 00:28:49.266 A:middle
static in terms of it's a small

00:28:49.266 --> 00:28:50.706 A:middle
world that's always visible on

00:28:50.706 --> 00:28:52.416 A:middle
the screen, but for your world,

00:28:52.416 --> 00:28:53.356 A:middle
you may do something really

00:28:53.356 --> 00:28:54.376 A:middle
expansive where you have to go

00:28:54.376 --> 00:28:56.946 A:middle
into a building or you're on a

00:28:56.946 --> 00:28:58.476 A:middle
large terrain or you have

00:28:58.476 --> 00:28:58.896 A:middle
levels.

00:28:59.766 --> 00:29:00.926 A:middle
So what you want to do here --

00:28:59.766 --> 00:29:00.926 A:middle
So what you want to do here --

00:29:01.936 --> 00:29:03.076 A:middle
what you don't want to do is

00:29:03.146 --> 00:29:04.626 A:middle
atlas everything all willy-nilly

00:29:04.626 --> 00:29:05.506 A:middle
because what's going to happen

00:29:05.506 --> 00:29:07.446 A:middle
is if you have an atlas of this

00:29:07.446 --> 00:29:09.616 A:middle
entire world, of which only a

00:29:09.616 --> 00:29:11.026 A:middle
portion is visible in the scene

00:29:11.026 --> 00:29:12.636 A:middle
at any one time, you're going to

00:29:12.636 --> 00:29:13.846 A:middle
pay the performance cost of

00:29:13.946 --> 00:29:15.566 A:middle
rendering all these points and

00:29:15.566 --> 00:29:17.486 A:middle
all the meshes, and that's not

00:29:17.486 --> 00:29:17.976 A:middle
what you want.

00:29:19.466 --> 00:29:21.056 A:middle
A simple technique here is to

00:29:21.176 --> 00:29:22.556 A:middle
simply subdivide your world into

00:29:22.556 --> 00:29:25.266 A:middle
discrete chunks and then run

00:29:25.266 --> 00:29:26.786 A:middle
this process on each of those

00:29:26.786 --> 00:29:28.386 A:middle
chunks, and as you move from

00:29:28.386 --> 00:29:29.986 A:middle
chunk-to-chunk, as the camera

00:29:29.986 --> 00:29:31.356 A:middle
moves from chunk-to-chunk,

00:29:31.356 --> 00:29:32.016 A:middle
you're actually getting the

00:29:32.016 --> 00:29:33.566 A:middle
benefits of flattening without

00:29:33.566 --> 00:29:35.976 A:middle
paying the overhead of rendering

00:29:36.066 --> 00:29:38.226 A:middle
everything in your scene at

00:29:38.976 --> 00:29:39.146 A:middle
once.

00:29:39.716 --> 00:29:40.726 A:middle
Next I'd like to talk to you

00:29:40.726 --> 00:29:41.526 A:middle
about materials.

00:29:42.556 --> 00:29:44.276 A:middle
Now, materials have an even

00:29:44.276 --> 00:29:46.066 A:middle
bigger impact on your draw call

00:29:46.066 --> 00:29:49.376 A:middle
count, and I'll get into why.

00:29:50.286 --> 00:29:52.106 A:middle
Here's a still frame from that

00:29:52.226 --> 00:29:54.056 A:middle
movie I showed earlier, where we

00:29:54.056 --> 00:29:56.266 A:middle
show that we flattened this

00:29:56.266 --> 00:29:58.386 A:middle
aspect of the scene, the top of

00:29:58.446 --> 00:30:02.006 A:middle
the world mostly, into one mesh.

00:29:58.446 --> 00:30:02.006 A:middle
the world mostly, into one mesh.

00:30:03.006 --> 00:30:04.616 A:middle
So this is one draw call.

00:30:05.236 --> 00:30:07.536 A:middle
But the astute observers of you

00:30:07.536 --> 00:30:09.326 A:middle
out there that may notice, hey,

00:30:10.026 --> 00:30:11.286 A:middle
there are multiple materials

00:30:11.286 --> 00:30:12.996 A:middle
here, like obviously those

00:30:13.556 --> 00:30:15.366 A:middle
stonehenges don't have the same

00:30:15.366 --> 00:30:17.196 A:middle
materials as the staircase, and

00:30:17.196 --> 00:30:18.466 A:middle
surely not the stones

00:30:18.766 --> 00:30:19.326 A:middle
themselves.

00:30:19.326 --> 00:30:21.316 A:middle
So what's going on here?

00:30:22.046 --> 00:30:24.346 A:middle
Let's talk about reducing

00:30:24.346 --> 00:30:26.006 A:middle
materials because that's what we

00:30:26.006 --> 00:30:27.956 A:middle
did to get this down to one draw

00:30:27.956 --> 00:30:28.196 A:middle
call.

00:30:30.016 --> 00:30:31.416 A:middle
So again, we have our two

00:30:31.416 --> 00:30:33.016 A:middle
geometry objects on the screen;

00:30:34.156 --> 00:30:36.016 A:middle
one on the left, one on the

00:30:36.016 --> 00:30:36.276 A:middle
right.

00:30:37.316 --> 00:30:40.506 A:middle
One uses the sand texture, one

00:30:40.506 --> 00:30:42.486 A:middle
uses this more sand/grass

00:30:42.486 --> 00:30:43.176 A:middle
looking texture.

00:30:44.596 --> 00:30:46.026 A:middle
If we run the logic that I

00:30:46.026 --> 00:30:47.206 A:middle
showed you before, flattening,

00:30:48.076 --> 00:30:50.516 A:middle
we actually get that one

00:30:50.516 --> 00:30:53.466 A:middle
combined, Godzilla mesh, but

00:30:53.786 --> 00:30:54.796 A:middle
we're still referencing two

00:30:54.796 --> 00:30:55.206 A:middle
materials.

00:30:55.356 --> 00:30:56.946 A:middle
So when the CPU has to talk to

00:30:56.946 --> 00:30:58.946 A:middle
the GPU, it's going to say, hey,

00:30:59.386 --> 00:31:01.066 A:middle
take this mesh and draw the sand

00:30:59.386 --> 00:31:01.066 A:middle
take this mesh and draw the sand

00:31:01.066 --> 00:31:01.766 A:middle
material with it.

00:31:02.336 --> 00:31:03.356 A:middle
Great. Okay.

00:31:03.356 --> 00:31:04.706 A:middle
Now, take this mesh again and

00:31:04.706 --> 00:31:05.996 A:middle
draw the parts of it that uses

00:31:05.996 --> 00:31:06.996 A:middle
the grass material again.

00:31:07.146 --> 00:31:08.316 A:middle
You still get two draw calls.

00:31:09.456 --> 00:31:11.706 A:middle
There's an opportunity here to

00:31:12.276 --> 00:31:14.006 A:middle
reduce this.

00:31:15.466 --> 00:31:16.746 A:middle
And you may have heard of

00:31:16.746 --> 00:31:19.006 A:middle
texture atlasing, but maybe you

00:31:19.006 --> 00:31:20.146 A:middle
don't understand exactly what

00:31:20.146 --> 00:31:20.456 A:middle
that is.

00:31:20.456 --> 00:31:22.176 A:middle
It's a very simple process.

00:31:23.206 --> 00:31:25.466 A:middle
Your artist, and their 3D tools,

00:31:26.086 --> 00:31:28.056 A:middle
would take your materials and

00:31:28.056 --> 00:31:30.936 A:middle
combine them into one texture

00:31:30.936 --> 00:31:34.566 A:middle
atlas and under the covers

00:31:34.726 --> 00:31:36.126 A:middle
they'll update your geometry so

00:31:36.126 --> 00:31:37.096 A:middle
that it's pointing to the right

00:31:37.096 --> 00:31:39.346 A:middle
bits inside your textures, but

00:31:39.346 --> 00:31:41.376 A:middle
the net result is you have one

00:31:41.376 --> 00:31:41.976 A:middle
draw call.

00:31:44.136 --> 00:31:49.196 A:middle
Now, this works if you have a

00:31:49.196 --> 00:31:50.886 A:middle
few objects or thousands of

00:31:50.886 --> 00:31:51.386 A:middle
objects.

00:31:52.486 --> 00:31:53.386 A:middle
In Learn to Code I'll give you

00:31:53.386 --> 00:31:54.826 A:middle
an example of one of the atlases

00:31:54.826 --> 00:31:56.056 A:middle
for the world that I just showed

00:31:56.056 --> 00:31:56.236 A:middle
you.

00:31:56.346 --> 00:31:57.816 A:middle
This is what our atlas looked

00:31:57.816 --> 00:31:57.976 A:middle
like.

00:32:00.216 --> 00:32:03.296 A:middle
We had over 70 materials that we

00:32:03.296 --> 00:32:04.926 A:middle
were able to condense down into

00:32:04.926 --> 00:32:05.246 A:middle
one.

00:32:05.906 --> 00:32:08.066 A:middle
That's a huge savings.

00:32:09.636 --> 00:32:11.296 A:middle
There's another benefit here

00:32:11.296 --> 00:32:14.176 A:middle
that you may not be aware of.

00:32:14.386 --> 00:32:15.786 A:middle
When you have a material in your

00:32:15.786 --> 00:32:17.176 A:middle
scene, when your scene loads,

00:32:17.826 --> 00:32:20.406 A:middle
there's a shader that has to be

00:32:20.456 --> 00:32:23.786 A:middle
generated behind the scenes and

00:32:24.146 --> 00:32:25.236 A:middle
you can't start your scene until

00:32:25.236 --> 00:32:26.296 A:middle
that shader's actually finished

00:32:26.296 --> 00:32:26.756 A:middle
compiling.

00:32:26.936 --> 00:32:28.376 A:middle
If you have 70 materials, you

00:32:28.376 --> 00:32:29.336 A:middle
have 70 shaders.

00:32:29.726 --> 00:32:30.796 A:middle
You have a really rich level

00:32:30.796 --> 00:32:31.906 A:middle
with hundreds of objects,

00:32:32.316 --> 00:32:34.146 A:middle
hundreds of materials, now all

00:32:34.146 --> 00:32:35.656 A:middle
of a sudden your load time --

00:32:35.686 --> 00:32:36.676 A:middle
you're stuck waiting for the

00:32:36.676 --> 00:32:37.556 A:middle
scene to load.

00:32:38.436 --> 00:32:40.146 A:middle
By combining it into one

00:32:40.616 --> 00:32:42.236 A:middle
material, or fewer materials,

00:32:42.536 --> 00:32:43.656 A:middle
you're reducing the number of

00:32:43.656 --> 00:32:44.446 A:middle
shaders that need to get

00:32:44.446 --> 00:32:46.176 A:middle
compiled, boosting your startup

00:32:46.176 --> 00:32:49.606 A:middle
time, not to mention lesser I/O

00:32:49.606 --> 00:32:50.936 A:middle
in terms of hitting a disk.

00:32:55.536 --> 00:32:56.686 A:middle
So next I want to talk about

00:32:56.686 --> 00:32:57.056 A:middle
lighting.

00:32:57.766 --> 00:32:59.466 A:middle
Now, lighting's very interesting

00:32:59.466 --> 00:33:02.336 A:middle
because lighting is what allows

00:32:59.466 --> 00:33:02.336 A:middle
because lighting is what allows

00:33:02.336 --> 00:33:05.666 A:middle
you to add rich, vivid detail to

00:33:05.666 --> 00:33:06.136 A:middle
your world.

00:33:07.006 --> 00:33:07.866 A:middle
You can take a scene and it

00:33:07.866 --> 00:33:08.936 A:middle
looks kind of static, kind of

00:33:08.936 --> 00:33:09.326 A:middle
boring.

00:33:09.776 --> 00:33:11.706 A:middle
You add lights, now it gets a

00:33:11.706 --> 00:33:12.296 A:middle
little interesting.

00:33:13.216 --> 00:33:17.356 A:middle
So we let our artists put a few

00:33:17.356 --> 00:33:18.346 A:middle
lights in the scene and give us

00:33:18.386 --> 00:33:19.316 A:middle
this visual effect.

00:33:19.996 --> 00:33:22.396 A:middle
We add a spotlight so that when

00:33:22.396 --> 00:33:23.316 A:middle
the characters went around the

00:33:23.316 --> 00:33:24.676 A:middle
world, they're casting shadows

00:33:24.676 --> 00:33:27.326 A:middle
as they move along the water or

00:33:27.666 --> 00:33:28.166 A:middle
the grass.

00:33:28.556 --> 00:33:30.816 A:middle
It's a nice effect.

00:33:30.856 --> 00:33:32.376 A:middle
We added omni-directional lights

00:33:32.626 --> 00:33:33.836 A:middle
scattered throughout the scene

00:33:34.886 --> 00:33:36.416 A:middle
to add a little visual pop.

00:33:36.416 --> 00:33:38.086 A:middle
So you can see the staircases in

00:33:38.086 --> 00:33:39.526 A:middle
the foreground are highlighted a

00:33:39.526 --> 00:33:40.506 A:middle
little bit more than the

00:33:40.556 --> 00:33:41.786 A:middle
staircases in the background.

00:33:44.386 --> 00:33:46.006 A:middle
And lastly, we added an ambient

00:33:46.006 --> 00:33:49.036 A:middle
light, which makes sure that

00:33:49.036 --> 00:33:50.056 A:middle
everything in the scene is

00:33:50.136 --> 00:33:51.216 A:middle
visible; otherwise, you'd have

00:33:51.316 --> 00:33:53.586 A:middle
really super dark areas where

00:33:53.586 --> 00:33:54.866 A:middle
the other lights don't hit.

00:33:54.926 --> 00:33:57.246 A:middle
And you can see this sort of

00:33:57.246 --> 00:33:58.156 A:middle
great effect if you look in the

00:33:58.156 --> 00:34:00.496 A:middle
shadows of where the water is.

00:33:58.156 --> 00:34:00.496 A:middle
shadows of where the water is.

00:34:00.496 --> 00:34:01.206 A:middle
It's really neat.

00:34:02.686 --> 00:34:04.506 A:middle
Now, there's a performance cost

00:34:04.506 --> 00:34:04.906 A:middle
to this.

00:34:04.906 --> 00:34:05.966 A:middle
Lights are not free.

00:34:07.276 --> 00:34:08.606 A:middle
Remember I told you that draw

00:34:08.606 --> 00:34:10.116 A:middle
calls, the more you have the

00:34:10.116 --> 00:34:11.726 A:middle
less performant you are, your

00:34:11.726 --> 00:34:12.295 A:middle
application is?

00:34:12.996 --> 00:34:15.116 A:middle
Well, whenever you have a light

00:34:15.116 --> 00:34:19.176 A:middle
that hits a mesh, that's an

00:34:19.366 --> 00:34:20.446 A:middle
extra draw call.

00:34:21.206 --> 00:34:22.286 A:middle
So you have five lights in your

00:34:22.286 --> 00:34:24.366 A:middle
scene, you just increased your

00:34:24.366 --> 00:34:26.266 A:middle
draw call count by five.

00:34:27.516 --> 00:34:29.386 A:middle
There's a way to get around

00:34:29.386 --> 00:34:32.186 A:middle
this, and it's called a light

00:34:32.186 --> 00:34:32.856 A:middle
map.

00:34:34.065 --> 00:34:36.416 A:middle
Now, what this is, is your

00:34:36.416 --> 00:34:38.275 A:middle
artist, and their 3D tool, will

00:34:38.275 --> 00:34:41.166 A:middle
basically run a process that

00:34:41.166 --> 00:34:43.096 A:middle
calculates where the lights are.

00:34:43.096 --> 00:34:44.636 A:middle
They can go to town, put all the

00:34:44.636 --> 00:34:45.876 A:middle
lights they want in there, light

00:34:45.876 --> 00:34:47.556 A:middle
all the things, and it would

00:34:47.556 --> 00:34:49.676 A:middle
actually precompute the

00:34:49.786 --> 00:34:51.226 A:middle
intensity of the light hitting

00:34:51.226 --> 00:34:53.045 A:middle
your scene and it would store it

00:34:53.045 --> 00:34:54.876 A:middle
in a material, not unlike the

00:34:54.876 --> 00:34:56.065 A:middle
textures we showed you earlier.

00:34:57.406 --> 00:35:01.356 A:middle
The beauty of this is that this

00:34:57.406 --> 00:35:01.356 A:middle
The beauty of this is that this

00:35:01.696 --> 00:35:03.726 A:middle
process is not CPU or GPU

00:35:03.726 --> 00:35:04.216 A:middle
intensive.

00:35:04.446 --> 00:35:05.666 A:middle
As a matter of fact, it's free.

00:35:05.666 --> 00:35:06.656 A:middle
It's taking me more energy to

00:35:06.656 --> 00:35:08.336 A:middle
talk about it than the CPU would

00:35:08.336 --> 00:35:12.346 A:middle
actually spend applying this.

00:35:12.536 --> 00:35:13.506 A:middle
So we are able to take our light

00:35:13.506 --> 00:35:15.146 A:middle
count down to zero if we wanted.

00:35:16.196 --> 00:35:16.806 A:middle
Now, we didn't.

00:35:17.846 --> 00:35:19.276 A:middle
We left one spotlight in there

00:35:20.026 --> 00:35:21.436 A:middle
because we distinguished between

00:35:21.436 --> 00:35:23.036 A:middle
lights that don't change every

00:35:23.036 --> 00:35:24.156 A:middle
frame, why should we render

00:35:24.156 --> 00:35:25.136 A:middle
these lights again, we did it

00:35:25.136 --> 00:35:26.136 A:middle
the last frame and nothing

00:35:26.136 --> 00:35:29.086 A:middle
changed, but the spotlight does

00:35:29.086 --> 00:35:29.476 A:middle
change.

00:35:29.926 --> 00:35:31.416 A:middle
As you rotate the world the

00:35:31.416 --> 00:35:32.926 A:middle
spotlight's going to hit the

00:35:32.926 --> 00:35:34.036 A:middle
objects in a different way.

00:35:35.016 --> 00:35:36.046 A:middle
When you have your character

00:35:36.046 --> 00:35:37.626 A:middle
walking around the world, its

00:35:37.626 --> 00:35:39.316 A:middle
shadow is going to cast on the

00:35:39.316 --> 00:35:40.726 A:middle
rest of the world in a different

00:35:40.726 --> 00:35:40.886 A:middle
way.

00:35:41.796 --> 00:35:43.786 A:middle
So we kept it, but we made sure

00:35:43.786 --> 00:35:46.216 A:middle
that we were specific as to what

00:35:46.216 --> 00:35:48.796 A:middle
it would apply to, the

00:35:49.386 --> 00:35:51.336 A:middle
characters or certain parts of

00:35:51.336 --> 00:35:51.846 A:middle
the scene.

00:35:53.316 --> 00:35:55.126 A:middle
And the good thing about this is

00:35:55.126 --> 00:35:57.536 A:middle
it works in tandem with all the

00:35:57.536 --> 00:35:58.566 A:middle
flattening that I showed you

00:35:58.566 --> 00:35:59.966 A:middle
earlier, because obviously

00:35:59.966 --> 00:36:01.496 A:middle
lights act like a multiplier in

00:35:59.966 --> 00:36:01.496 A:middle
lights act like a multiplier in

00:36:01.496 --> 00:36:02.406 A:middle
terms of your draw calls.

00:36:02.816 --> 00:36:03.646 A:middle
Well, guess what.

00:36:04.306 --> 00:36:05.496 A:middle
We reduced the first term.

00:36:05.496 --> 00:36:09.146 A:middle
We reduced the number of meshes

00:36:09.186 --> 00:36:11.696 A:middle
that have to be lit.

00:36:11.806 --> 00:36:12.916 A:middle
So if we actually really wanted

00:36:12.916 --> 00:36:13.626 A:middle
to put another light in there,

00:36:13.626 --> 00:36:15.226 A:middle
the effect wouldn't be as bad as

00:36:15.226 --> 00:36:15.876 A:middle
when we started.

00:36:17.216 --> 00:36:19.266 A:middle
So after making all of these

00:36:19.266 --> 00:36:21.466 A:middle
changes, let's take a look at

00:36:21.466 --> 00:36:22.386 A:middle
our performance and see where we

00:36:22.386 --> 00:36:22.906 A:middle
are now.

00:36:23.546 --> 00:36:25.436 A:middle
Let's zoom in.

00:36:25.436 --> 00:36:27.006 A:middle
Actually, I want to take a

00:36:27.006 --> 00:36:28.906 A:middle
moment to just appreciate how

00:36:28.906 --> 00:36:30.476 A:middle
good the light maps look.

00:36:31.716 --> 00:36:32.746 A:middle
If you take a look behind the

00:36:32.746 --> 00:36:33.766 A:middle
first staircase, you see that

00:36:33.766 --> 00:36:34.886 A:middle
little dark shadow and the

00:36:34.886 --> 00:36:37.036 A:middle
crevices and even behind the

00:36:37.036 --> 00:36:38.106 A:middle
waterfall slightly is a little

00:36:38.106 --> 00:36:40.796 A:middle
darker, around the rocks and the

00:36:40.796 --> 00:36:42.856 A:middle
curved areas in the stonehenge,

00:36:42.856 --> 00:36:43.796 A:middle
it looks really great.

00:36:44.286 --> 00:36:45.266 A:middle
And you know what, you're not

00:36:45.266 --> 00:36:46.256 A:middle
paying anything for it.

00:36:46.256 --> 00:36:48.366 A:middle
It was done all offline using

00:36:48.366 --> 00:36:48.846 A:middle
material.

00:36:48.846 --> 00:36:50.536 A:middle
Our artist went crazy with

00:36:50.536 --> 00:36:51.856 A:middle
lights and their 3D tool.

00:36:51.856 --> 00:36:54.196 A:middle
Now I'll zoom in on the

00:36:54.196 --> 00:36:54.826 A:middle
performance.

00:36:57.176 --> 00:36:58.516 A:middle
Wow, we're hitting 60 fps now.

00:36:58.516 --> 00:36:59.676 A:middle
Our users won't be closing our

00:36:59.676 --> 00:37:00.736 A:middle
app and going to go do something

00:36:59.676 --> 00:37:00.736 A:middle
app and going to go do something

00:37:00.736 --> 00:37:01.196 A:middle
else.

00:37:01.796 --> 00:37:05.346 A:middle
Let's look at our rendering

00:37:05.346 --> 00:37:05.626 A:middle
time.

00:37:05.706 --> 00:37:08.656 A:middle
We're at 2.3 milliseconds.

00:37:09.416 --> 00:37:10.536 A:middle
Now, that's fantastic, for a

00:37:10.536 --> 00:37:11.346 A:middle
number of reasons.

00:37:12.066 --> 00:37:13.556 A:middle
Number one, remember we said you

00:37:13.556 --> 00:37:14.556 A:middle
have to get under 16

00:37:14.556 --> 00:37:17.316 A:middle
milliseconds to be able to

00:37:17.466 --> 00:37:22.896 A:middle
actually render at 60 fps?

00:37:23.886 --> 00:37:25.136 A:middle
Well, that new iPad that just

00:37:25.136 --> 00:37:27.106 A:middle
came out, if you want to take

00:37:27.106 --> 00:37:28.346 A:middle
advantage of 120 hertz

00:37:28.566 --> 00:37:30.826 A:middle
technology refresh rate, you

00:37:30.826 --> 00:37:31.946 A:middle
want to get that number under 7.

00:37:32.406 --> 00:37:33.416 A:middle
We're under 2, so we're good.

00:37:34.286 --> 00:37:36.906 A:middle
Crank it up.

00:37:37.456 --> 00:37:41.156 A:middle
So let's talk about headroom.

00:37:42.296 --> 00:37:44.746 A:middle
The beauty of this low number is

00:37:44.746 --> 00:37:46.206 A:middle
if you want to add more things

00:37:46.206 --> 00:37:47.156 A:middle
to your scene, maybe you want to

00:37:47.156 --> 00:37:48.176 A:middle
add a little bit more gameplay

00:37:48.176 --> 00:37:50.176 A:middle
logic using GameplayKit, or you

00:37:50.176 --> 00:37:53.216 A:middle
wanted to do some networking or

00:37:53.216 --> 00:37:54.456 A:middle
you wanted to just make your

00:37:54.456 --> 00:37:56.926 A:middle
scene rich, tell your artist,

00:37:56.926 --> 00:37:58.236 A:middle
hey, crank it up, let's make

00:37:58.236 --> 00:37:59.976 A:middle
some more objects in our scene,

00:37:59.976 --> 00:38:02.136 A:middle
make it more detailed, or you

00:37:59.976 --> 00:38:02.136 A:middle
make it more detailed, or you

00:38:02.136 --> 00:38:03.486 A:middle
just want to enjoy your better

00:38:03.486 --> 00:38:06.556 A:middle
battery life, you can do that.

00:38:06.656 --> 00:38:07.646 A:middle
Finally, let's look at that draw

00:38:07.646 --> 00:38:08.186 A:middle
call count.

00:38:09.576 --> 00:38:12.116 A:middle
Wow, 73. If you remember, the

00:38:12.116 --> 00:38:13.686 A:middle
earlier number was over 700.

00:38:14.156 --> 00:38:16.586 A:middle
We're using less than a tenth of

00:38:16.586 --> 00:38:19.816 A:middle
the draw call amount than we had

00:38:19.816 --> 00:38:20.276 A:middle
before.

00:38:20.926 --> 00:38:22.556 A:middle
We're sipping power instead of

00:38:22.556 --> 00:38:24.266 A:middle
guzzling it like we were before.

00:38:24.846 --> 00:38:25.396 A:middle
This is great.

00:38:26.186 --> 00:38:27.526 A:middle
Our app is very fluid.

00:38:28.206 --> 00:38:29.916 A:middle
And when I talk about headroom

00:38:29.916 --> 00:38:31.726 A:middle
again, you have to remember

00:38:31.726 --> 00:38:33.026 A:middle
you're going to be doing other

00:38:33.026 --> 00:38:33.916 A:middle
things in your app other than

00:38:33.916 --> 00:38:34.516 A:middle
just rendering.

00:38:34.836 --> 00:38:36.106 A:middle
In our case, we have the Swift

00:38:36.106 --> 00:38:37.636 A:middle
Compiler running on the left,

00:38:38.076 --> 00:38:38.716 A:middle
potentially.

00:38:39.406 --> 00:38:42.656 A:middle
The users were editing code and

00:38:42.656 --> 00:38:44.106 A:middle
clicking on menu items, and

00:38:44.106 --> 00:38:44.756 A:middle
things like that.

00:38:44.756 --> 00:38:47.346 A:middle
And in your application maybe

00:38:47.346 --> 00:38:48.426 A:middle
the user's doing something like

00:38:48.426 --> 00:38:50.416 A:middle
pinching or doing some selection

00:38:50.416 --> 00:38:53.556 A:middle
or, you know, anything that

00:38:53.556 --> 00:38:54.316 A:middle
would actually take more

00:38:54.316 --> 00:38:55.646 A:middle
processing time in terms of

00:38:55.646 --> 00:38:56.716 A:middle
logic in your application.

00:38:58.186 --> 00:39:00.756 A:middle
So that's great.

00:38:58.186 --> 00:39:00.756 A:middle
So that's great.

00:39:00.936 --> 00:39:04.106 A:middle
So to recap, we've talked about

00:39:04.106 --> 00:39:05.546 A:middle
flattening geometry, how this is

00:39:05.546 --> 00:39:07.336 A:middle
the low-hanging fruit of

00:39:07.396 --> 00:39:08.646 A:middle
performance optimizations in

00:39:08.646 --> 00:39:09.806 A:middle
terms of reducing your draw call

00:39:09.806 --> 00:39:10.136 A:middle
count.

00:39:11.726 --> 00:39:13.366 A:middle
We talked about using a texture

00:39:13.366 --> 00:39:14.826 A:middle
atlas, which is something that

00:39:14.826 --> 00:39:15.936 A:middle
you get your artist to do and

00:39:15.936 --> 00:39:17.236 A:middle
you just take advantage of that

00:39:17.236 --> 00:39:18.136 A:middle
will reduce the number of

00:39:18.136 --> 00:39:20.136 A:middle
materials that you use, which

00:39:20.136 --> 00:39:21.876 A:middle
has an impact on loading time,

00:39:21.956 --> 00:39:23.286 A:middle
making your app start up much

00:39:23.286 --> 00:39:26.306 A:middle
faster, and also an impact on

00:39:26.306 --> 00:39:28.796 A:middle
disk I/O, making it less objects

00:39:28.796 --> 00:39:29.176 A:middle
to load.

00:39:30.286 --> 00:39:32.636 A:middle
And lastly, it works in tandem

00:39:32.806 --> 00:39:34.626 A:middle
with the geometry flattening to

00:39:34.626 --> 00:39:35.336 A:middle
make sure that you have the

00:39:35.336 --> 00:39:36.426 A:middle
fewest amount of draw calls

00:39:36.476 --> 00:39:36.896 A:middle
possible.

00:39:38.306 --> 00:39:42.116 A:middle
And lastly, using light maps to

00:39:42.116 --> 00:39:43.876 A:middle
add that rich visual detail to

00:39:43.876 --> 00:39:47.036 A:middle
your scene and not pay any

00:39:47.096 --> 00:39:49.366 A:middle
performance penalty for it on

00:39:49.366 --> 00:39:49.846 A:middle
the GPU.

00:39:50.016 --> 00:39:50.816 A:middle
Let your artist go crazy.

00:39:51.396 --> 00:39:54.586 A:middle
We have a few related sessions

00:39:54.586 --> 00:39:54.956 A:middle
for you.

00:39:55.846 --> 00:39:56.966 A:middle
Thanks, and have a great WWDC.

00:39:57.516 --> 00:40:07.980 A:middle
[ Applause ]
