WEBVTT

00:00:19.516 --> 00:00:25.736 A:middle
[ Applause ]

00:00:26.236 --> 00:00:27.026 A:middle
&gt;&gt; Hello, and good morning,

00:00:27.026 --> 00:00:27.446 A:middle
everyone.

00:00:27.776 --> 00:00:28.676 A:middle
How's everyone doing, this

00:00:28.716 --> 00:00:29.016 A:middle
morning?

00:00:29.546 --> 00:00:32.926 A:middle
Great. Welcome to our talk on

00:00:32.926 --> 00:00:34.146 A:middle
Natural Language Processing.

00:00:34.296 --> 00:00:36.086 A:middle
We are delighted to share our

00:00:36.086 --> 00:00:37.586 A:middle
natural language processing APIs

00:00:38.296 --> 00:00:39.396 A:middle
and tell you how you can

00:00:39.396 --> 00:00:41.246 A:middle
incorporate these APIs into your

00:00:41.246 --> 00:00:41.866 A:middle
very own apps.

00:00:42.906 --> 00:00:44.366 A:middle
I'm Vivek, and I'll be jointly

00:00:44.366 --> 00:00:45.966 A:middle
presenting this session with my

00:00:46.096 --> 00:00:47.226 A:middle
colleague Doug.

00:00:47.226 --> 00:00:47.966 A:middle
In case you're wondering,

00:00:47.966 --> 00:00:48.786 A:middle
there's a third person.

00:00:48.786 --> 00:00:50.356 A:middle
No. I just have a really long

00:00:50.356 --> 00:00:50.596 A:middle
name.

00:00:53.686 --> 00:00:56.146 A:middle
Okay. So, let's start with the

00:00:56.146 --> 00:00:57.086 A:middle
goal of this session.

00:00:57.646 --> 00:01:00.286 A:middle
What we'd like to do, is we'd

00:00:57.646 --> 00:01:00.286 A:middle
What we'd like to do, is we'd

00:01:00.286 --> 00:01:01.896 A:middle
like to put you at the center of

00:01:01.896 --> 00:01:02.396 A:middle
this session.

00:01:03.926 --> 00:01:05.146 A:middle
Here is an app.

00:01:05.146 --> 00:01:06.166 A:middle
This could be an app that you've

00:01:06.166 --> 00:01:07.996 A:middle
already published in the App

00:01:08.506 --> 00:01:08.976 A:middle
Store.

00:01:08.976 --> 00:01:09.836 A:middle
Or maybe, it's something that

00:01:09.836 --> 00:01:10.906 A:middle
you're working on, currently.

00:01:12.006 --> 00:01:13.396 A:middle
Or perhaps, it's just an idea

00:01:13.396 --> 00:01:14.146 A:middle
that you've conceived.

00:01:15.306 --> 00:01:17.326 A:middle
If your app leads with natural

00:01:17.326 --> 00:01:19.736 A:middle
language text in any form at the

00:01:19.776 --> 00:01:21.646 A:middle
input, and this could be typed

00:01:21.736 --> 00:01:23.126 A:middle
text on your keyboard.

00:01:23.126 --> 00:01:25.186 A:middle
Could be recognized handwriting

00:01:25.236 --> 00:01:26.336 A:middle
or transcribed speech.

00:01:27.116 --> 00:01:28.856 A:middle
For instance, you may be just

00:01:28.856 --> 00:01:30.286 A:middle
ingesting feeds or social media

00:01:30.286 --> 00:01:33.076 A:middle
feeds into your app.

00:01:33.076 --> 00:01:34.796 A:middle
Or if your app leads with

00:01:34.796 --> 00:01:36.086 A:middle
natural language text at the

00:01:36.086 --> 00:01:36.416 A:middle
output.

00:01:36.416 --> 00:01:37.936 A:middle
What do I mean by that?

00:01:38.176 --> 00:01:39.546 A:middle
if the user is generating

00:01:39.546 --> 00:01:41.536 A:middle
content within your app, perhaps

00:01:41.566 --> 00:01:42.726 A:middle
the user is writing reviews in

00:01:42.726 --> 00:01:43.496 A:middle
your app.

00:01:43.496 --> 00:01:45.806 A:middle
Or it's a productivity app where

00:01:45.806 --> 00:01:47.326 A:middle
the user is writing new

00:01:47.326 --> 00:01:48.916 A:middle
documents or editing documents.

00:01:49.386 --> 00:01:50.676 A:middle
So, if you're dealing with

00:01:50.676 --> 00:01:52.016 A:middle
natural language text, either at

00:01:52.016 --> 00:01:55.336 A:middle
the input or output, we'd like

00:01:55.606 --> 00:01:57.596 A:middle
to harness the power of NLP to

00:01:57.996 --> 00:01:59.556 A:middle
significantly improve the user

00:01:59.556 --> 00:02:00.616 A:middle
experience in your app.

00:01:59.556 --> 00:02:00.616 A:middle
experience in your app.

00:02:02.026 --> 00:02:03.426 A:middle
So, when I say harness the power

00:02:03.426 --> 00:02:04.686 A:middle
of NLP, what does it really

00:02:04.686 --> 00:02:05.016 A:middle
mean?

00:02:05.586 --> 00:02:08.526 A:middle
So, I'm talking about natural

00:02:08.526 --> 00:02:09.366 A:middle
language APIs.

00:02:10.106 --> 00:02:11.496 A:middle
Now, these natural language

00:02:11.536 --> 00:02:13.416 A:middle
processing APIs are the same

00:02:13.416 --> 00:02:15.576 A:middle
APIs that drive several first

00:02:15.576 --> 00:02:17.126 A:middle
party apps across the entire

00:02:17.126 --> 00:02:18.976 A:middle
Apple ecosystem, across all out

00:02:18.976 --> 00:02:19.566 A:middle
platforms.

00:02:20.626 --> 00:02:21.896 A:middle
It drives everything from

00:02:21.896 --> 00:02:23.926 A:middle
keyboards to Spotlight to

00:02:23.926 --> 00:02:25.366 A:middle
Messages to Safari.

00:02:27.026 --> 00:02:28.596 A:middle
You've even seen an instance of

00:02:28.756 --> 00:02:31.446 A:middle
the APIs in action at the

00:02:32.016 --> 00:02:32.196 A:middle
Keynote.

00:02:32.336 --> 00:02:33.846 A:middle
You've seen how it can

00:02:34.296 --> 00:02:35.636 A:middle
significantly improve typing

00:02:35.636 --> 00:02:37.126 A:middle
experience for users.

00:02:37.996 --> 00:02:40.526 A:middle
So, let me set this up.

00:02:42.996 --> 00:02:45.346 A:middle
So, I've been communicating with

00:02:45.346 --> 00:02:46.676 A:middle
my friend and we have been

00:02:46.676 --> 00:02:48.146 A:middle
planning a trip to Iceland.

00:02:48.886 --> 00:02:50.106 A:middle
And I'm going to type, ''From

00:02:50.106 --> 00:02:51.236 A:middle
Reykjavik let's go to

00:02:51.236 --> 00:02:52.526 A:middle
Vatnajokull, which is the

00:02:52.526 --> 00:02:53.936 A:middle
largest glacier in Iceland and

00:02:53.936 --> 00:02:55.756 A:middle
all of Europe.'' Unfortunately,

00:02:55.756 --> 00:02:57.106 A:middle
the keyboard does not know what

00:02:57.106 --> 00:02:57.576 A:middle
I'm typing.

00:02:57.986 --> 00:02:59.056 A:middle
It actually thinks I'm typing

00:02:59.116 --> 00:02:59.666 A:middle
Batman.

00:03:00.056 --> 00:03:00.826 A:middle
No offense.

00:03:00.826 --> 00:03:01.726 A:middle
I love Batman.

00:03:01.726 --> 00:03:03.436 A:middle
But I seriously doubt he lives

00:03:03.436 --> 00:03:04.456 A:middle
anywhere close to Reykjavik.

00:03:05.586 --> 00:03:07.706 A:middle
But on the other hand, if you've

00:03:07.706 --> 00:03:09.496 A:middle
been browsing articles, you've

00:03:09.496 --> 00:03:11.956 A:middle
been looking for content based

00:03:11.956 --> 00:03:12.716 A:middle
on Iceland.

00:03:12.716 --> 00:03:13.496 A:middle
Presumably, you have been

00:03:13.496 --> 00:03:14.376 A:middle
planning your itinerary.

00:03:14.786 --> 00:03:16.406 A:middle
So, in this instance, I've been,

00:03:16.406 --> 00:03:17.766 A:middle
you know, reading a bunch of

00:03:17.766 --> 00:03:19.426 A:middle
stuff about Iceland, off the

00:03:19.426 --> 00:03:20.346 A:middle
east coast of Iceland.

00:03:20.596 --> 00:03:22.776 A:middle
NLP, through the power of

00:03:22.776 --> 00:03:23.606 A:middle
machine learning, can

00:03:23.606 --> 00:03:25.516 A:middle
automatically extract names like

00:03:25.516 --> 00:03:28.226 A:middle
Vatnajokull, Egilsstadir, from

00:03:28.226 --> 00:03:28.966 A:middle
this article.

00:03:29.336 --> 00:03:31.176 A:middle
And then, feed all those things

00:03:31.176 --> 00:03:32.096 A:middle
back to the keyboard.

00:03:32.776 --> 00:03:34.886 A:middle
And consequently, if you type

00:03:34.966 --> 00:03:36.986 A:middle
things what do you see?

00:03:37.836 --> 00:03:38.946 A:middle
The stuff that you just read.

00:03:38.946 --> 00:03:41.976 A:middle
And all of that is completely

00:03:42.046 --> 00:03:43.106 A:middle
due to NLP APIs.

00:03:43.106 --> 00:03:45.666 A:middle
So, those are a couple of

00:03:45.666 --> 00:03:48.246 A:middle
instances through how NLP APIs

00:03:48.246 --> 00:03:50.556 A:middle
can influence first party apps.

00:03:50.556 --> 00:03:51.986 A:middle
But as I said, we'd like to

00:03:51.986 --> 00:03:52.786 A:middle
focus on you.

00:03:53.676 --> 00:03:54.696 A:middle
And for the rest of the talk,

00:03:54.696 --> 00:03:56.126 A:middle
we'd like to talk about your

00:03:56.126 --> 00:03:57.176 A:middle
ideas and your apps.

00:03:57.176 --> 00:04:00.426 A:middle
When I look at the audience

00:03:57.176 --> 00:04:00.426 A:middle
When I look at the audience

00:04:00.426 --> 00:04:02.096 A:middle
here, I see a very diverse

00:04:02.126 --> 00:04:02.426 A:middle
group.

00:04:02.556 --> 00:04:04.346 A:middle
Some of you may be using NLP on

00:04:04.346 --> 00:04:06.156 A:middle
a day to day basis, are experts

00:04:06.156 --> 00:04:06.486 A:middle
at NLP.

00:04:06.486 --> 00:04:08.366 A:middle
When others are really curious

00:04:08.366 --> 00:04:08.896 A:middle
about this.

00:04:08.896 --> 00:04:10.306 A:middle
I mean, NLP and machine learning

00:04:10.306 --> 00:04:12.146 A:middle
is such a hard buzzword that

00:04:12.146 --> 00:04:13.806 A:middle
everybody wants to learn and

00:04:13.806 --> 00:04:14.956 A:middle
leverage these in their own

00:04:14.956 --> 00:04:15.386 A:middle
apps.

00:04:15.936 --> 00:04:17.055 A:middle
So, I think it's constructive to

00:04:17.055 --> 00:04:18.666 A:middle
just spend a little bit of time

00:04:19.016 --> 00:04:20.346 A:middle
talking about what does NLP

00:04:20.346 --> 00:04:22.476 A:middle
constitute, before we go into

00:04:22.516 --> 00:04:23.336 A:middle
the APIs themselves.

00:04:24.776 --> 00:04:25.906 A:middle
So, at a very high level, as I

00:04:25.906 --> 00:04:27.286 A:middle
mentioned, you have natural

00:04:27.286 --> 00:04:28.626 A:middle
language text, which could be

00:04:28.626 --> 00:04:29.936 A:middle
generated through any modality.

00:04:30.536 --> 00:04:32.596 A:middle
And then, you have to do some

00:04:32.596 --> 00:04:33.106 A:middle
processing.

00:04:33.376 --> 00:04:34.606 A:middle
Duh. It's NLP.

00:04:34.646 --> 00:04:36.366 A:middle
You didn't come here to learn

00:04:36.366 --> 00:04:37.316 A:middle
you have to do processing.

00:04:37.536 --> 00:04:39.046 A:middle
But what does processing entail?

00:04:40.266 --> 00:04:41.396 A:middle
It means that we have to convert

00:04:41.456 --> 00:04:42.886 A:middle
raw text into some sort of a

00:04:42.886 --> 00:04:43.846 A:middle
meaningful information.

00:04:44.776 --> 00:04:46.056 A:middle
And this meaningful information

00:04:46.166 --> 00:04:47.786 A:middle
is typically used to improve a

00:04:47.786 --> 00:04:49.376 A:middle
interaction between a user and a

00:04:49.376 --> 00:04:51.576 A:middle
device or between two devices.

00:04:52.736 --> 00:04:53.966 A:middle
Now, let's try to break this

00:04:53.966 --> 00:04:54.946 A:middle
down a little bit further.

00:04:56.606 --> 00:04:58.086 A:middle
When kind of still looks very

00:04:58.086 --> 00:04:58.546 A:middle
upstride.

00:04:58.886 --> 00:05:00.126 A:middle
So, I'd like to break this

00:04:58.886 --> 00:05:00.126 A:middle
So, I'd like to break this

00:05:00.156 --> 00:05:01.876 A:middle
nebulous cloud of processing

00:05:02.256 --> 00:05:04.116 A:middle
into fundamental building blocks

00:05:04.116 --> 00:05:05.896 A:middle
of NLP, into something that all

00:05:05.896 --> 00:05:07.516 A:middle
of us can wrap our heads around

00:05:07.916 --> 00:05:09.346 A:middle
and possibly transform into an

00:05:09.346 --> 00:05:09.656 A:middle
API.

00:05:10.986 --> 00:05:12.256 A:middle
So, let's look at each of the

00:05:12.256 --> 00:05:13.486 A:middle
fundamental building blocks of

00:05:13.486 --> 00:05:13.686 A:middle
NLP.

00:05:13.686 --> 00:05:15.906 A:middle
The first is language

00:05:15.936 --> 00:05:16.646 A:middle
identification.

00:05:17.256 --> 00:05:18.386 A:middle
What is the task of language

00:05:18.386 --> 00:05:18.946 A:middle
identification?

00:05:19.226 --> 00:05:20.426 A:middle
Before you start doing any

00:05:20.426 --> 00:05:22.166 A:middle
processing of text, you ought to

00:05:22.166 --> 00:05:23.706 A:middle
know what the language of the

00:05:23.706 --> 00:05:24.376 A:middle
text is.

00:05:24.646 --> 00:05:25.436 A:middle
And that's what language

00:05:25.436 --> 00:05:26.166 A:middle
identification does.

00:05:26.656 --> 00:05:27.676 A:middle
So, it leverages machine

00:05:27.676 --> 00:05:29.476 A:middle
learning techniques to identify

00:05:29.726 --> 00:05:31.406 A:middle
the language or script of the

00:05:31.406 --> 00:05:32.186 A:middle
piece of text.

00:05:32.676 --> 00:05:34.276 A:middle
So, I have a bunch of examples,

00:05:34.276 --> 00:05:34.686 A:middle
here.

00:05:35.086 --> 00:05:37.146 A:middle
If you feed in this string, the

00:05:37.146 --> 00:05:38.206 A:middle
first string, it's going to say

00:05:38.206 --> 00:05:38.816 A:middle
it's English.

00:05:39.076 --> 00:05:40.416 A:middle
Or you have simplified Chinese,

00:05:40.416 --> 00:05:42.476 A:middle
or you have Spanish, or you have

00:05:42.566 --> 00:05:44.956 A:middle
Hindi, or German.

00:05:46.446 --> 00:05:47.886 A:middle
So, once you identify the text,

00:05:48.466 --> 00:05:50.156 A:middle
you can start analyzing the

00:05:50.156 --> 00:05:50.416 A:middle
text.

00:05:50.846 --> 00:05:51.966 A:middle
But when you have text which is

00:05:51.966 --> 00:05:53.306 A:middle
a very large chunk, you could

00:05:53.306 --> 00:05:54.376 A:middle
have an entire document.

00:05:54.426 --> 00:05:56.446 A:middle
I mean, logically, you want to

00:05:56.446 --> 00:05:57.576 A:middle
break down this text into

00:05:57.576 --> 00:05:58.636 A:middle
meaningful chunks.

00:05:58.936 --> 00:06:00.456 A:middle
Sometimes, you want to analyze

00:05:58.936 --> 00:06:00.456 A:middle
Sometimes, you want to analyze

00:06:00.456 --> 00:06:01.446 A:middle
an entire document.

00:06:01.986 --> 00:06:03.166 A:middle
But a document is typically

00:06:03.166 --> 00:06:04.346 A:middle
comprised of paragraphs.

00:06:04.656 --> 00:06:05.696 A:middle
So, perhaps you want to analyze

00:06:05.776 --> 00:06:07.186 A:middle
every paragraph in a document.

00:06:07.796 --> 00:06:09.266 A:middle
And you can break it down even

00:06:09.266 --> 00:06:09.426 A:middle
further.

00:06:09.716 --> 00:06:10.896 A:middle
Paragraphs are made up of

00:06:10.896 --> 00:06:11.466 A:middle
sentences.

00:06:11.466 --> 00:06:13.016 A:middle
So, you could analyze sentences

00:06:13.016 --> 00:06:13.876 A:middle
within your paragraphs.

00:06:14.426 --> 00:06:16.276 A:middle
And finally, a more fine grain

00:06:16.276 --> 00:06:17.926 A:middle
analysis would be every single

00:06:17.926 --> 00:06:18.776 A:middle
word in a sentence.

00:06:19.506 --> 00:06:20.386 A:middle
And that is called as

00:06:20.416 --> 00:06:21.046 A:middle
Tokenization.

00:06:21.676 --> 00:06:23.346 A:middle
So, just to give you an example

00:06:23.446 --> 00:06:25.336 A:middle
of sentence level tokenization,

00:06:25.626 --> 00:06:26.826 A:middle
in this particular sentence,

00:06:26.826 --> 00:06:28.486 A:middle
Mister Tim Cook presided over

00:06:28.486 --> 00:06:29.666 A:middle
the earnings report of Apple

00:06:29.666 --> 00:06:29.936 A:middle
Inc.

00:06:30.396 --> 00:06:33.306 A:middle
If I told your machine one rule

00:06:33.306 --> 00:06:35.026 A:middle
based way to chunk this, is

00:06:35.066 --> 00:06:36.276 A:middle
every time you see a period,

00:06:36.846 --> 00:06:37.976 A:middle
chunk this into a sentence.

00:06:38.866 --> 00:06:39.366 A:middle
Is that right?

00:06:39.946 --> 00:06:40.546 A:middle
Wrong. Right?

00:06:40.896 --> 00:06:41.976 A:middle
You're going to incorrectly

00:06:41.976 --> 00:06:43.616 A:middle
hypothesize that there are three

00:06:43.616 --> 00:06:44.336 A:middle
sentences, here.

00:06:44.826 --> 00:06:46.526 A:middle
So, sentence tokenization really

00:06:46.526 --> 00:06:48.846 A:middle
offers you the right sort of

00:06:48.846 --> 00:06:50.746 A:middle
approach to chunk sentences.

00:06:51.136 --> 00:06:52.656 A:middle
Now, this becomes even more

00:06:52.656 --> 00:06:53.876 A:middle
complex in a language like

00:06:53.876 --> 00:06:55.646 A:middle
Chinese, which doesn't have

00:06:55.646 --> 00:06:56.256 A:middle
whitespace.

00:06:56.666 --> 00:06:57.836 A:middle
So, you only have a sequence of

00:06:57.896 --> 00:06:58.496 A:middle
characters.

00:06:58.736 --> 00:07:00.126 A:middle
And in order to do anything

00:06:58.736 --> 00:07:00.126 A:middle
And in order to do anything

00:07:00.126 --> 00:07:02.776 A:middle
meaningful from a machine

00:07:02.776 --> 00:07:04.346 A:middle
perspective, you ought to break

00:07:04.346 --> 00:07:05.436 A:middle
this down into words.

00:07:05.676 --> 00:07:06.966 A:middle
And that is word tokenization.

00:07:07.826 --> 00:07:09.446 A:middle
Now, let's say that we have the

00:07:09.446 --> 00:07:10.916 A:middle
first two fundamental building

00:07:10.916 --> 00:07:11.806 A:middle
blocks in our kitty.

00:07:12.056 --> 00:07:13.196 A:middle
So, we know how to do language

00:07:13.196 --> 00:07:14.216 A:middle
identification.

00:07:14.216 --> 00:07:15.806 A:middle
We know how to do tokenization.

00:07:16.286 --> 00:07:17.966 A:middle
Let's talk about doing more

00:07:17.966 --> 00:07:19.536 A:middle
complex analysis on the text.

00:07:19.536 --> 00:07:21.856 A:middle
So, the next piece of technology

00:07:21.856 --> 00:07:23.146 A:middle
is part of speech tagging.

00:07:23.716 --> 00:07:25.156 A:middle
So, what do I mean by part of

00:07:25.156 --> 00:07:25.736 A:middle
speech tagging?

00:07:25.736 --> 00:07:26.526 A:middle
It's pretty simple.

00:07:27.256 --> 00:07:29.196 A:middle
So, given a sequence of words,

00:07:29.196 --> 00:07:30.486 A:middle
the task of part of speech

00:07:30.486 --> 00:07:32.526 A:middle
tagging is to confer a part of

00:07:32.526 --> 00:07:34.656 A:middle
speech tag to every word in this

00:07:34.656 --> 00:07:35.006 A:middle
text.

00:07:35.006 --> 00:07:36.706 A:middle
So, if you look at this example,

00:07:36.706 --> 00:07:39.046 A:middle
here, then Cook is a person

00:07:39.046 --> 00:07:41.576 A:middle
name, presided is a word, over

00:07:41.576 --> 00:07:43.196 A:middle
is a preposition, and earnings

00:07:43.226 --> 00:07:43.756 A:middle
is a noun.

00:07:43.756 --> 00:07:45.006 A:middle
And so on.

00:07:45.556 --> 00:07:47.846 A:middle
Now, as an app developer, you

00:07:47.846 --> 00:07:49.286 A:middle
might think, how is this useful

00:07:49.286 --> 00:07:49.616 A:middle
to me?

00:07:50.346 --> 00:07:51.376 A:middle
So, perhaps you are building a

00:07:51.376 --> 00:07:52.476 A:middle
dictionary app.

00:07:52.896 --> 00:07:54.156 A:middle
Right. A dictionary definition

00:07:54.226 --> 00:07:54.756 A:middle
service.

00:07:55.206 --> 00:07:56.626 A:middle
So, maybe kids are reading

00:07:56.626 --> 00:07:57.046 A:middle
books.

00:07:57.386 --> 00:07:58.506 A:middle
And they want to look up the

00:07:58.506 --> 00:07:59.906 A:middle
definition of a particular word.

00:08:00.406 --> 00:08:02.046 A:middle
Let's pick a word like bear,

00:08:02.496 --> 00:08:03.686 A:middle
B-E-A-R.

00:08:03.686 --> 00:08:05.206 A:middle
Bear can either be a noun, or it

00:08:05.206 --> 00:08:05.586 A:middle
could be a verb.

00:08:05.586 --> 00:08:06.836 A:middle
So, when you click on a

00:08:06.836 --> 00:08:09.316 A:middle
particular word, if you know

00:08:09.316 --> 00:08:10.966 A:middle
that is an actual verb, you can

00:08:10.966 --> 00:08:12.236 A:middle
show the right definition of

00:08:12.236 --> 00:08:12.676 A:middle
that word.

00:08:13.126 --> 00:08:14.876 A:middle
Right. So, I think those are

00:08:14.876 --> 00:08:15.936 A:middle
ways in which part of speech

00:08:15.976 --> 00:08:18.126 A:middle
tagging can really help you at

00:08:18.246 --> 00:08:18.996 A:middle
the user level.

00:08:20.086 --> 00:08:21.646 A:middle
So, the next building block is

00:08:21.676 --> 00:08:22.756 A:middle
called as lemmatization.

00:08:23.936 --> 00:08:25.186 A:middle
Sounds very NLPish.

00:08:25.256 --> 00:08:26.976 A:middle
But I think we can break this

00:08:26.976 --> 00:08:27.436 A:middle
down.

00:08:27.716 --> 00:08:29.496 A:middle
Let's try to understand what a

00:08:29.496 --> 00:08:30.076 A:middle
lemma is.

00:08:30.736 --> 00:08:32.986 A:middle
Words can be in appearance

00:08:32.986 --> 00:08:34.006 A:middle
several inflected forms.

00:08:34.006 --> 00:08:35.056 A:middle
So, you can have the present

00:08:35.056 --> 00:08:36.015 A:middle
tense of a word, you can have

00:08:36.015 --> 00:08:37.206 A:middle
the past tense of a word, or you

00:08:37.206 --> 00:08:38.145 A:middle
can have a future tense of a

00:08:38.145 --> 00:08:38.376 A:middle
word.

00:08:38.905 --> 00:08:40.096 A:middle
But what's common to all these

00:08:40.166 --> 00:08:40.436 A:middle
forms?

00:08:41.145 --> 00:08:43.366 A:middle
The root. The root is common to

00:08:43.366 --> 00:08:44.596 A:middle
all these inflected forms.

00:08:45.006 --> 00:08:46.296 A:middle
And that is also called as a

00:08:46.296 --> 00:08:46.566 A:middle
lemma.

00:08:47.146 --> 00:08:48.226 A:middle
So, let's look at an example,

00:08:48.226 --> 00:08:48.506 A:middle
here.

00:08:48.956 --> 00:08:50.766 A:middle
If you were to look at the word,

00:08:50.766 --> 00:08:52.596 A:middle
presided, it's a verb.

00:08:53.006 --> 00:08:54.536 A:middle
And the root form of that word

00:08:54.596 --> 00:08:55.146 A:middle
is preside.

00:08:55.696 --> 00:08:56.996 A:middle
And similarly, if you look at

00:08:56.996 --> 00:08:58.166 A:middle
the word, hours, which is a

00:08:58.166 --> 00:09:00.016 A:middle
noun, the root form of that word

00:08:58.166 --> 00:09:00.016 A:middle
noun, the root form of that word

00:09:00.016 --> 00:09:00.476 A:middle
is hour.

00:09:01.696 --> 00:09:02.556 A:middle
Why is this important?

00:09:02.556 --> 00:09:03.436 A:middle
I mean, this looks rather

00:09:03.436 --> 00:09:04.876 A:middle
innocuous for a language like

00:09:04.916 --> 00:09:05.396 A:middle
English.

00:09:05.756 --> 00:09:06.946 A:middle
But trust me, for those of you

00:09:06.946 --> 00:09:07.556 A:middle
who've dealt with

00:09:07.556 --> 00:09:08.806 A:middle
morphologically complex

00:09:08.806 --> 00:09:10.226 A:middle
languages like Russian or

00:09:10.226 --> 00:09:11.876 A:middle
Turkish, lemmatization is

00:09:11.936 --> 00:09:12.946 A:middle
extremely important.

00:09:13.486 --> 00:09:14.476 A:middle
In a language where you have

00:09:14.476 --> 00:09:16.246 A:middle
almost unbounded vocabulary.

00:09:16.346 --> 00:09:17.406 A:middle
I mean, you may have like a

00:09:17.406 --> 00:09:19.036 A:middle
million or 2 million words in a

00:09:19.036 --> 00:09:21.006 A:middle
language, it's critical to break

00:09:21.006 --> 00:09:22.826 A:middle
down those words into lemmas and

00:09:22.826 --> 00:09:23.406 A:middle
suffixes.

00:09:23.636 --> 00:09:25.016 A:middle
And then, do operation for

00:09:25.516 --> 00:09:26.726 A:middle
smaller building blocks.

00:09:26.726 --> 00:09:31.976 A:middle
The last piece of this puzzle is

00:09:32.096 --> 00:09:33.266 A:middle
named entity recognition.

00:09:34.236 --> 00:09:35.736 A:middle
Again, it sounds very complex.

00:09:35.736 --> 00:09:38.066 A:middle
I mean, a lot of NLP lingo.

00:09:38.066 --> 00:09:38.866 A:middle
What is an entity?

00:09:38.866 --> 00:09:39.656 A:middle
What is recognition?

00:09:39.656 --> 00:09:40.166 A:middle
And so on.

00:09:40.466 --> 00:09:41.566 A:middle
But I mean, let's look at this

00:09:41.566 --> 00:09:42.876 A:middle
through an example, again.

00:09:43.306 --> 00:09:44.516 A:middle
So, named entity recognition is

00:09:44.516 --> 00:09:46.336 A:middle
nothing but detecting names

00:09:46.336 --> 00:09:47.456 A:middle
automatically from text.

00:09:47.996 --> 00:09:49.216 A:middle
And these names can fall into

00:09:49.216 --> 00:09:50.176 A:middle
different categories.

00:09:50.496 --> 00:09:51.756 A:middle
For example, it can be person

00:09:51.756 --> 00:09:52.106 A:middle
names.

00:09:52.146 --> 00:09:53.746 A:middle
It can be organization names or

00:09:53.746 --> 00:09:54.526 A:middle
location names.

00:09:54.826 --> 00:09:57.366 A:middle
In this example, Mister Tim Cook

00:09:57.366 --> 00:09:59.136 A:middle
is a person name, Apple Inc.

00:09:59.176 --> 00:09:59.976 A:middle
is an organization name.

00:10:00.056 --> 00:10:01.956 A:middle
And the task of named entity

00:10:01.956 --> 00:10:03.346 A:middle
recognition is to use machine

00:10:03.346 --> 00:10:04.526 A:middle
learning and linguistics

00:10:04.526 --> 00:10:06.516 A:middle
information to automatically tag

00:10:06.836 --> 00:10:08.746 A:middle
ranges of text with these tags.

00:10:10.246 --> 00:10:11.856 A:middle
Okay. So, wait.

00:10:12.176 --> 00:10:13.296 A:middle
I think we've kind of

00:10:13.296 --> 00:10:14.666 A:middle
established the basic

00:10:15.126 --> 00:10:16.546 A:middle
fundamental building blocks of

00:10:16.546 --> 00:10:16.746 A:middle
NLP.

00:10:16.746 --> 00:10:18.826 A:middle
How do we achieve all these

00:10:18.916 --> 00:10:19.326 A:middle
tasks?

00:10:20.036 --> 00:10:21.016 A:middle
That's where we come in.

00:10:21.776 --> 00:10:24.476 A:middle
So, we use a combination or a

00:10:24.476 --> 00:10:26.556 A:middle
blend of linguistics and machine

00:10:26.556 --> 00:10:27.906 A:middle
learning to drive all these

00:10:27.906 --> 00:10:30.246 A:middle
fundamental building blocks up.

00:10:30.246 --> 00:10:33.976 A:middle
And these in entirety constitute

00:10:33.976 --> 00:10:35.546 A:middle
our NLP APIs.

00:10:35.726 --> 00:10:36.566 A:middle
Right. So, some of you may be

00:10:36.566 --> 00:10:37.656 A:middle
going, ''That's a lot of

00:10:37.656 --> 00:10:38.216 A:middle
information.

00:10:38.216 --> 00:10:39.536 A:middle
I knew all that.'' Others are

00:10:39.536 --> 00:10:40.346 A:middle
like, ''Thank you, for the

00:10:40.346 --> 00:10:43.706 A:middle
information.'' While others are

00:10:43.706 --> 00:10:44.136 A:middle
like, ''Enough.

00:10:44.376 --> 00:10:45.736 A:middle
Just tell me how to use it.''

00:10:46.266 --> 00:10:48.236 A:middle
So, let's look at how to use

00:10:48.236 --> 00:10:50.276 A:middle
these NLP APIs.

00:10:50.326 --> 00:10:52.086 A:middle
So, all these NLP APIs are

00:10:52.086 --> 00:10:53.726 A:middle
available across all Apple

00:10:53.726 --> 00:10:54.966 A:middle
platforms through

00:10:54.966 --> 00:10:55.936 A:middle
NSLinguisticTagger.

00:10:56.656 --> 00:10:58.016 A:middle
So, some of you may be familiar

00:10:58.016 --> 00:10:59.166 A:middle
with NSLinguisticTagger.

00:10:59.366 --> 00:11:00.336 A:middle
Perhaps, you've already

00:10:59.366 --> 00:11:00.336 A:middle
Perhaps, you've already

00:11:00.336 --> 00:11:02.416 A:middle
incorporated as a part of your

00:11:02.416 --> 00:11:03.466 A:middle
apps, you're calling

00:11:03.466 --> 00:11:04.676 A:middle
NSLinguisticTagger for several

00:11:04.676 --> 00:11:04.986 A:middle
things.

00:11:05.786 --> 00:11:06.966 A:middle
For those who are not familiar

00:11:06.966 --> 00:11:08.706 A:middle
with NSLinguisticTagger, what is

00:11:08.706 --> 00:11:08.826 A:middle
it?

00:11:09.416 --> 00:11:11.966 A:middle
It's a class in Foundation.

00:11:13.606 --> 00:11:14.986 A:middle
It's used to segment and tag

00:11:15.106 --> 00:11:15.386 A:middle
text.

00:11:16.126 --> 00:11:18.096 A:middle
So, every tag, every task that

00:11:18.096 --> 00:11:19.856 A:middle
we described from language

00:11:19.856 --> 00:11:21.716 A:middle
identification to tokenization

00:11:21.716 --> 00:11:22.726 A:middle
to part of speech tagging,

00:11:22.726 --> 00:11:23.956 A:middle
lemmatization, named entity

00:11:23.956 --> 00:11:26.366 A:middle
recognition are all tag schemes

00:11:26.706 --> 00:11:27.776 A:middle
in NSLinguisticTagger.

00:11:28.246 --> 00:11:29.696 A:middle
So, you specify a particular tag

00:11:29.696 --> 00:11:30.086 A:middle
scheme.

00:11:30.386 --> 00:11:31.336 A:middle
You send text to it.

00:11:31.336 --> 00:11:33.026 A:middle
It performs analysis and gives

00:11:33.026 --> 00:11:33.556 A:middle
you an output.

00:11:33.936 --> 00:11:35.166 A:middle
That's what NSLinguisticTagger

00:11:35.166 --> 00:11:35.456 A:middle
does.

00:11:35.956 --> 00:11:37.556 A:middle
So, for more information about

00:11:37.556 --> 00:11:39.616 A:middle
NSLinguisticTagger, I encourage

00:11:39.616 --> 00:11:40.866 A:middle
you to go look at the developer

00:11:40.866 --> 00:11:41.186 A:middle
docs.

00:11:41.426 --> 00:11:42.876 A:middle
But let's try to focus on what's

00:11:42.876 --> 00:11:44.166 A:middle
new in NSLinguisticTagger.

00:11:44.736 --> 00:11:47.306 A:middle
We made significant improvement

00:11:47.306 --> 00:11:48.786 A:middle
to NSLinguisticTagger for this

00:11:48.786 --> 00:11:49.116 A:middle
release.

00:11:49.666 --> 00:11:52.756 A:middle
So, first one is tagging units.

00:11:53.156 --> 00:11:54.316 A:middle
So, the previous version of

00:11:54.316 --> 00:11:56.126 A:middle
NSLinguisticTagger would operate

00:11:56.296 --> 00:11:57.226 A:middle
only on words.

00:11:58.136 --> 00:11:59.646 A:middle
So, if you were to do any sort

00:11:59.646 --> 00:12:01.096 A:middle
of more complex analysis, as I

00:11:59.646 --> 00:12:01.096 A:middle
of more complex analysis, as I

00:12:01.096 --> 00:12:03.046 A:middle
said, text can be broken down

00:12:03.046 --> 00:12:04.216 A:middle
into a document, into

00:12:04.216 --> 00:12:05.806 A:middle
paragraphs, into sentences, and

00:12:05.806 --> 00:12:06.286 A:middle
then words.

00:12:06.706 --> 00:12:08.186 A:middle
Just doing analysis at a word

00:12:08.186 --> 00:12:10.496 A:middle
level may not be optimal or may

00:12:10.496 --> 00:12:11.716 A:middle
not be sufficient for several

00:12:11.716 --> 00:12:12.256 A:middle
tasks.

00:12:12.916 --> 00:12:13.776 A:middle
So, the new version of

00:12:13.776 --> 00:12:16.356 A:middle
NSLinguisticTagger has different

00:12:16.356 --> 00:12:16.726 A:middle
units.

00:12:17.656 --> 00:12:18.966 A:middle
So, we can operate at the unit

00:12:18.966 --> 00:12:19.646 A:middle
that we'd like.

00:12:20.026 --> 00:12:21.026 A:middle
We can operate either at the

00:12:21.026 --> 00:12:22.876 A:middle
word level, sentence level,

00:12:23.406 --> 00:12:25.246 A:middle
paragraph level, or document

00:12:25.246 --> 00:12:25.456 A:middle
level.

00:12:26.436 --> 00:12:28.296 A:middle
Now, not all tag schemes are

00:12:28.296 --> 00:12:29.616 A:middle
available for all units.

00:12:29.936 --> 00:12:31.466 A:middle
Right. So, if I ask you the part

00:12:31.466 --> 00:12:32.786 A:middle
of speech tag for sentence, it

00:12:33.206 --> 00:12:34.376 A:middle
doesn't make sense.

00:12:34.506 --> 00:12:35.526 A:middle
You have to do part of speech

00:12:35.526 --> 00:12:36.356 A:middle
tagging on words.

00:12:36.356 --> 00:12:38.426 A:middle
So, in order to find out what

00:12:38.426 --> 00:12:39.456 A:middle
units and schemes are

00:12:39.456 --> 00:12:41.286 A:middle
compatible, we also have a new

00:12:41.286 --> 00:12:43.066 A:middle
nifty convenience API, called

00:12:43.066 --> 00:12:45.066 A:middle
availableTagSchemes.

00:12:45.496 --> 00:12:47.036 A:middle
All that you do here, is pass

00:12:47.286 --> 00:12:48.486 A:middle
the unit that you're interested

00:12:48.486 --> 00:12:50.406 A:middle
in, the language, and for that

00:12:50.406 --> 00:12:52.416 A:middle
combination of unit and language

00:12:52.686 --> 00:12:53.886 A:middle
you will get all the available

00:12:53.886 --> 00:12:54.516 A:middle
tag schemes.

00:12:55.826 --> 00:12:57.406 A:middle
So, in addition to these two

00:12:57.406 --> 00:12:59.356 A:middle
improvements, we've also

00:12:59.356 --> 00:13:01.616 A:middle
introduced a new API called

00:12:59.356 --> 00:13:01.616 A:middle
introduced a new API called

00:13:01.616 --> 00:13:02.496 A:middle
dominantLanguage.

00:13:02.806 --> 00:13:04.126 A:middle
For those of you who have kind

00:13:04.216 --> 00:13:07.196 A:middle
of found it difficult to perform

00:13:07.196 --> 00:13:08.656 A:middle
language identification using

00:13:08.656 --> 00:13:10.416 A:middle
NSLinguisticTagger, because it

00:13:10.416 --> 00:13:11.686 A:middle
operates only on a word level.

00:13:11.686 --> 00:13:12.896 A:middle
So, if I give you a piece of

00:13:12.986 --> 00:13:14.766 A:middle
text it is going to hypothesize

00:13:14.766 --> 00:13:15.836 A:middle
a language for every word.

00:13:16.036 --> 00:13:17.006 A:middle
So, if you only want the

00:13:17.006 --> 00:13:18.316 A:middle
language of the sentence, you

00:13:18.316 --> 00:13:19.676 A:middle
had to do some sort of a ugly

00:13:19.676 --> 00:13:21.046 A:middle
majority word thing and stuff in

00:13:21.046 --> 00:13:21.526 A:middle
your code.

00:13:21.686 --> 00:13:22.906 A:middle
So, all of that you can get rid

00:13:22.906 --> 00:13:23.046 A:middle
of.

00:13:23.146 --> 00:13:24.296 A:middle
You can have much cleaner code

00:13:24.296 --> 00:13:24.626 A:middle
base.

00:13:24.936 --> 00:13:26.136 A:middle
You just call this method

00:13:26.136 --> 00:13:28.396 A:middle
dominantLanguage, pass a string

00:13:28.396 --> 00:13:29.576 A:middle
to it, and it's going to give

00:13:29.576 --> 00:13:32.206 A:middle
you the language of the text.

00:13:32.346 --> 00:13:34.196 A:middle
In addition, specifically for

00:13:34.196 --> 00:13:36.046 A:middle
Swift 4, we've moved from

00:13:36.046 --> 00:13:37.646 A:middle
generic strings to named types

00:13:37.696 --> 00:13:39.416 A:middle
for tags, as well as tagSchemes.

00:13:40.476 --> 00:13:43.466 A:middle
And finally, we've made

00:13:43.596 --> 00:13:44.826 A:middle
significant improvements to the

00:13:44.826 --> 00:13:46.176 A:middle
underlying implementation of

00:13:46.226 --> 00:13:47.116 A:middle
NSLinguisticTagger.

00:13:47.366 --> 00:13:48.786 A:middle
The API interface is still the

00:13:48.786 --> 00:13:50.616 A:middle
same, but the entire

00:13:50.616 --> 00:13:52.186 A:middle
implementation underneath has

00:13:52.186 --> 00:13:53.606 A:middle
been [inaudible] from scratch.

00:13:53.696 --> 00:13:55.526 A:middle
Just to make it scalable.

00:13:56.276 --> 00:13:57.986 A:middle
So, the consequences of that is

00:13:57.986 --> 00:13:59.326 A:middle
you get improved performance, a

00:13:59.426 --> 00:14:01.306 A:middle
higher accuracy, as well as

00:13:59.426 --> 00:14:01.306 A:middle
higher accuracy, as well as

00:14:01.626 --> 00:14:02.566 A:middle
support for a lot more

00:14:02.566 --> 00:14:03.156 A:middle
languages.

00:14:03.686 --> 00:14:06.736 A:middle
Right. So, that's good.

00:14:06.876 --> 00:14:07.856 A:middle
I think we've kind of

00:14:07.856 --> 00:14:09.746 A:middle
established what the fundamental

00:14:09.746 --> 00:14:11.726 A:middle
building blocks of NLP are.

00:14:12.156 --> 00:14:13.496 A:middle
We've talked about

00:14:13.496 --> 00:14:14.526 A:middle
NSLinguisticTagger.

00:14:14.896 --> 00:14:16.286 A:middle
But let's try to really delve

00:14:16.286 --> 00:14:17.176 A:middle
into the APIs.

00:14:17.276 --> 00:14:18.456 A:middle
But I don't want to just show

00:14:18.456 --> 00:14:18.846 A:middle
code.

00:14:18.846 --> 00:14:20.116 A:middle
I want to [inaudible] of this,

00:14:20.546 --> 00:14:22.136 A:middle
through two hypothetical apps

00:14:22.216 --> 00:14:24.286 A:middle
called Winnow and Whisk, W and W

00:14:24.286 --> 00:14:25.016 A:middle
if you get the pun.

00:14:25.586 --> 00:14:27.316 A:middle
So, the first app is Winnow.

00:14:27.886 --> 00:14:29.616 A:middle
It's a macOS app.

00:14:29.616 --> 00:14:30.966 A:middle
And the second is app Whisk,

00:14:31.576 --> 00:14:32.406 A:middle
which is an iOS app.

00:14:32.886 --> 00:14:33.556 A:middle
And both of these are

00:14:33.556 --> 00:14:34.396 A:middle
hypothetical apps.

00:14:35.746 --> 00:14:36.736 A:middle
So, let's talk about Winnow.

00:14:37.606 --> 00:14:39.286 A:middle
So, Winnow is a hypothetical app

00:14:39.286 --> 00:14:40.546 A:middle
that tags photos with

00:14:40.546 --> 00:14:41.156 A:middle
descriptions.

00:14:41.666 --> 00:14:43.616 A:middle
So, I take a lot of pictures of

00:14:43.616 --> 00:14:45.086 A:middle
family, friends, kids.

00:14:45.086 --> 00:14:47.146 A:middle
And every time I have a memory

00:14:47.146 --> 00:14:48.216 A:middle
associated with that picture.

00:14:48.686 --> 00:14:50.216 A:middle
And I'd like to leave an imprint

00:14:50.606 --> 00:14:52.306 A:middle
of that memory as a description

00:14:52.486 --> 00:14:53.006 A:middle
on the photo.

00:14:53.616 --> 00:14:56.586 A:middle
So, this imprint can be either a

00:14:56.586 --> 00:14:59.146 A:middle
speech recording I leave on the

00:14:59.446 --> 00:14:59.966 A:middle
photo.

00:14:59.966 --> 00:15:01.396 A:middle
Or it can be a text message I

00:14:59.966 --> 00:15:01.396 A:middle
Or it can be a text message I

00:15:01.396 --> 00:15:02.286 A:middle
write through my keyboard.

00:15:02.506 --> 00:15:03.546 A:middle
Or it could be a handwritten

00:15:03.546 --> 00:15:03.766 A:middle
note.

00:15:04.576 --> 00:15:06.666 A:middle
So, what Winnow does is given a

00:15:06.666 --> 00:15:08.876 A:middle
library of images, when I take

00:15:08.876 --> 00:15:10.246 A:middle
the image it gives you the

00:15:10.246 --> 00:15:11.626 A:middle
facility to add a description.

00:15:12.666 --> 00:15:13.446 A:middle
So, I have all these

00:15:13.476 --> 00:15:13.916 A:middle
descriptions.

00:15:13.916 --> 00:15:15.136 A:middle
So, it doesn't matter how these

00:15:15.136 --> 00:15:16.356 A:middle
descriptions got created.

00:15:16.656 --> 00:15:17.576 A:middle
Let's assume that these

00:15:17.576 --> 00:15:19.756 A:middle
descriptions are part of your

00:15:19.756 --> 00:15:20.786 A:middle
Winnow application.

00:15:21.626 --> 00:15:22.826 A:middle
And they can be in different

00:15:22.826 --> 00:15:23.206 A:middle
languages.

00:15:23.206 --> 00:15:24.096 A:middle
It can be multilingual.

00:15:24.396 --> 00:15:26.496 A:middle
And the objective is, as an app

00:15:26.496 --> 00:15:29.166 A:middle
developer, I've pushed this to

00:15:29.166 --> 00:15:29.796 A:middle
the App Store.

00:15:29.796 --> 00:15:30.956 A:middle
I'm getting a lot of traction.

00:15:31.336 --> 00:15:32.606 A:middle
I'm really happy with it.

00:15:32.656 --> 00:15:33.866 A:middle
But I want to add more features

00:15:33.896 --> 00:15:34.076 A:middle
to it.

00:15:34.666 --> 00:15:35.746 A:middle
So, the first thing I want to do

00:15:35.746 --> 00:15:37.276 A:middle
to my Winnow app is add a

00:15:37.276 --> 00:15:38.636 A:middle
functionality for searching.

00:15:38.946 --> 00:15:40.266 A:middle
Right. People want to search

00:15:40.326 --> 00:15:40.566 A:middle
things.

00:15:40.566 --> 00:15:41.496 A:middle
I mean, you've written a lot of

00:15:41.496 --> 00:15:42.996 A:middle
descriptions, and what are you

00:15:42.996 --> 00:15:43.716 A:middle
going to do with it?

00:15:43.716 --> 00:15:44.976 A:middle
You know, when you say something

00:15:44.976 --> 00:15:46.786 A:middle
like, kid's birthday, you want

00:15:46.786 --> 00:15:47.916 A:middle
to see all the pictures related

00:15:47.916 --> 00:15:48.166 A:middle
to that.

00:15:49.256 --> 00:15:51.276 A:middle
So, I start off doing a first

00:15:51.276 --> 00:15:52.536 A:middle
pass implementation for

00:15:52.536 --> 00:15:53.086 A:middle
searching.

00:15:54.426 --> 00:15:56.476 A:middle
A query, such as hike, goes into

00:15:56.476 --> 00:15:57.706 A:middle
my Winnow app.

00:15:57.706 --> 00:15:59.446 A:middle
And unfortunately, I get no

00:15:59.446 --> 00:15:59.886 A:middle
results.

00:16:01.046 --> 00:16:02.266 A:middle
Because there's not mention of a

00:16:02.266 --> 00:16:04.076 A:middle
work hike in all my

00:16:04.076 --> 00:16:04.696 A:middle
descriptions.

00:16:05.696 --> 00:16:06.876 A:middle
So, what we'd like to do is

00:16:07.176 --> 00:16:08.406 A:middle
improve the search experience

00:16:08.406 --> 00:16:10.136 A:middle
and solve this problem using the

00:16:10.136 --> 00:16:11.646 A:middle
power of NLP.

00:16:12.616 --> 00:16:15.036 A:middle
So, now if I were to type a

00:16:15.076 --> 00:16:16.946 A:middle
query such as hike, what I'd

00:16:17.006 --> 00:16:19.656 A:middle
like to see is all images that

00:16:19.706 --> 00:16:22.326 A:middle
contain all mentions, perhaps,

00:16:22.326 --> 00:16:23.706 A:middle
all the inflected forms of hike.

00:16:24.156 --> 00:16:26.686 A:middle
So, I see hiked, hikes, hiking,

00:16:27.766 --> 00:16:28.976 A:middle
So, these are all things that

00:16:29.256 --> 00:16:30.956 A:middle
are related to hike, but they

00:16:30.956 --> 00:16:32.096 A:middle
are just different inflected

00:16:32.096 --> 00:16:32.346 A:middle
forms.

00:16:32.346 --> 00:16:33.586 A:middle
And those of you, you know,

00:16:33.676 --> 00:16:35.086 A:middle
understood the first part of the

00:16:35.086 --> 00:16:36.676 A:middle
talk, what does this do?

00:16:36.676 --> 00:16:37.966 A:middle
This is basically lemmatization.

00:16:38.706 --> 00:16:39.626 A:middle
Because different inflected

00:16:39.626 --> 00:16:41.106 A:middle
forms have one root form.

00:16:41.366 --> 00:16:44.546 A:middle
So, let's try to see how to

00:16:44.546 --> 00:16:47.446 A:middle
implement this using NLP APIs.

00:16:48.146 --> 00:16:49.596 A:middle
So, we have a bunch of images,

00:16:49.736 --> 00:16:50.546 A:middle
the descriptions.

00:16:51.116 --> 00:16:55.026 A:middle
It goes into our Winnow app.

00:16:57.346 --> 00:16:59.326 A:middle
Now, we want to use NLP in the

00:16:59.326 --> 00:16:59.626 A:middle
middle.

00:17:00.066 --> 00:17:01.056 A:middle
So, what do we do, first?

00:17:01.536 --> 00:17:02.466 A:middle
We ought to do language

00:17:02.466 --> 00:17:03.076 A:middle
identification.

00:17:03.776 --> 00:17:04.935 A:middle
Because descriptions can be in

00:17:04.935 --> 00:17:05.665 A:middle
different languages.

00:17:06.046 --> 00:17:07.776 A:middle
Perhaps, a friend of yours sent

00:17:07.776 --> 00:17:09.146 A:middle
you a picture with a description

00:17:09.146 --> 00:17:10.336 A:middle
in French from France.

00:17:10.486 --> 00:17:11.626 A:middle
Right. Now, it's part of your

00:17:11.626 --> 00:17:12.006 A:middle
library.

00:17:12.205 --> 00:17:12.965 A:middle
And you want to search for

00:17:12.965 --> 00:17:13.415 A:middle
pictures.

00:17:14.736 --> 00:17:15.556 A:middle
So, once you do language

00:17:15.556 --> 00:17:16.826 A:middle
identification of all the

00:17:16.826 --> 00:17:18.076 A:middle
descriptions, we have to

00:17:18.076 --> 00:17:18.915 A:middle
tokenize the text.

00:17:19.486 --> 00:17:20.836 A:middle
And the tokenization can be

00:17:20.836 --> 00:17:22.026 A:middle
either word, sentence, and

00:17:22.026 --> 00:17:22.476 A:middle
paragraph.

00:17:22.695 --> 00:17:23.636 A:middle
Right. Because some of your

00:17:23.636 --> 00:17:25.136 A:middle
descriptions may be really long,

00:17:25.136 --> 00:17:26.616 A:middle
may span multiple sentences.

00:17:27.175 --> 00:17:30.426 A:middle
Then, we do part of speech

00:17:30.456 --> 00:17:30.806 A:middle
tagging.

00:17:31.596 --> 00:17:33.036 A:middle
And finally, lemmatization.

00:17:33.516 --> 00:17:34.536 A:middle
So, if we have all these

00:17:34.536 --> 00:17:35.836 A:middle
building blocks within the

00:17:35.836 --> 00:17:38.886 A:middle
Winnow app, we can get improved

00:17:38.886 --> 00:17:39.676 A:middle
search experience.

00:17:40.216 --> 00:17:42.686 A:middle
And that is our UI.

00:17:42.686 --> 00:17:44.516 A:middle
We'll see a demo of this in

00:17:44.516 --> 00:17:45.386 A:middle
action, soon.

00:17:45.826 --> 00:17:48.056 A:middle
But let me just go through some

00:17:48.106 --> 00:17:49.866 A:middle
sample code to tell you how easy

00:17:49.866 --> 00:17:50.926 A:middle
it is to use each of these

00:17:50.966 --> 00:17:52.576 A:middle
blocks in your apps.

00:17:53.276 --> 00:17:54.466 A:middle
So, language identification is

00:17:54.636 --> 00:17:55.776 A:middle
pretty much just three lines of

00:17:55.846 --> 00:17:56.076 A:middle
code.

00:17:56.656 --> 00:17:57.846 A:middle
You start off with importing

00:17:57.846 --> 00:17:58.386 A:middle
Foundation.

00:17:59.786 --> 00:18:00.556 A:middle
You create an instance of the

00:17:59.786 --> 00:18:00.556 A:middle
You create an instance of the

00:18:00.556 --> 00:18:02.906 A:middle
NSLinguisticTagger object, and

00:18:02.906 --> 00:18:04.466 A:middle
you specify a tag scheme.

00:18:05.436 --> 00:18:06.636 A:middle
For language identification, the

00:18:06.696 --> 00:18:08.246 A:middle
tag scheme is just language.

00:18:08.826 --> 00:18:11.716 A:middle
You set a string that you want

00:18:11.716 --> 00:18:12.226 A:middle
to analyze.

00:18:12.466 --> 00:18:13.746 A:middle
In this case, the string is

00:18:13.746 --> 00:18:14.116 A:middle
German.

00:18:15.696 --> 00:18:17.366 A:middle
And then, we call the method

00:18:17.366 --> 00:18:18.566 A:middle
dominantLanguage, that I just

00:18:18.566 --> 00:18:19.536 A:middle
described a few slides back.

00:18:19.536 --> 00:18:20.946 A:middle
On this object, viola, you get

00:18:20.946 --> 00:18:23.186 A:middle
the language of the text.

00:18:23.616 --> 00:18:24.976 A:middle
It's as simple as that.

00:18:25.406 --> 00:18:26.356 A:middle
And under the hood, there's

00:18:26.446 --> 00:18:27.686 A:middle
complex machine learning, there

00:18:27.686 --> 00:18:28.576 A:middle
are all kinds of models.

00:18:28.786 --> 00:18:29.946 A:middle
For you, you just get the

00:18:29.946 --> 00:18:30.366 A:middle
result.

00:18:30.366 --> 00:18:32.016 A:middle
And you can move on to improving

00:18:32.016 --> 00:18:32.806 A:middle
your app experience.

00:18:32.806 --> 00:18:36.626 A:middle
Let's look at tokenization.

00:18:37.826 --> 00:18:38.916 A:middle
Again, we start off with

00:18:39.236 --> 00:18:40.186 A:middle
creating an instance of the

00:18:40.186 --> 00:18:41.926 A:middle
NSLinguisticTagger object.

00:18:42.416 --> 00:18:44.376 A:middle
But now, instead of language as

00:18:44.376 --> 00:18:45.626 A:middle
a tag scheme, we specify

00:18:45.626 --> 00:18:49.136 A:middle
tokenType as a tag scheme.

00:18:49.136 --> 00:18:50.646 A:middle
We specify some text.

00:18:51.146 --> 00:18:53.316 A:middle
And we set the range of the

00:18:53.316 --> 00:18:53.666 A:middle
text.

00:18:53.866 --> 00:18:55.736 A:middle
So, NSLinguisticTagger is still

00:18:55.736 --> 00:18:57.506 A:middle
dealing with NSranges and we

00:18:57.686 --> 00:18:59.196 A:middle
hope to move to ranges as part

00:18:59.196 --> 00:18:59.946 A:middle
of the next release.

00:19:00.396 --> 00:19:01.346 A:middle
But for now, let's set the

00:19:01.346 --> 00:19:02.886 A:middle
entire range to be the length of

00:19:02.886 --> 00:19:03.926 A:middle
the string that we would like to

00:19:03.926 --> 00:19:04.306 A:middle
analyze.

00:19:05.896 --> 00:19:07.266 A:middle
Then, we subsequently set some

00:19:07.326 --> 00:19:07.846 A:middle
options.

00:19:07.896 --> 00:19:10.076 A:middle
In this particular case, I want

00:19:10.076 --> 00:19:12.106 A:middle
to omit punctuation, and I also

00:19:12.106 --> 00:19:13.236 A:middle
want to omit whitespace.

00:19:16.936 --> 00:19:18.806 A:middle
And then, finally, we enumerate

00:19:18.886 --> 00:19:19.696 A:middle
for every word.

00:19:20.176 --> 00:19:21.406 A:middle
So, for each word as we

00:19:21.456 --> 00:19:23.586 A:middle
enumerate, we can find the token

00:19:23.926 --> 00:19:25.316 A:middle
as a substring of the original

00:19:25.316 --> 00:19:25.586 A:middle
string.

00:19:25.896 --> 00:19:27.626 A:middle
So, once you have a token, you

00:19:27.626 --> 00:19:29.386 A:middle
can do whatever you want to do

00:19:29.386 --> 00:19:30.406 A:middle
with that particular token.

00:19:30.986 --> 00:19:33.656 A:middle
So, let's look at lemmatization.

00:19:33.826 --> 00:19:34.906 A:middle
Now, as you see the code

00:19:34.906 --> 00:19:36.366 A:middle
samples, you see sort of a

00:19:36.366 --> 00:19:36.736 A:middle
pattern.

00:19:36.986 --> 00:19:37.856 A:middle
It's very similar.

00:19:38.226 --> 00:19:39.566 A:middle
You again, create an instance of

00:19:39.566 --> 00:19:41.426 A:middle
the NSLinguisticTagger object.

00:19:42.106 --> 00:19:43.436 A:middle
You specify a particular tag

00:19:43.436 --> 00:19:43.816 A:middle
scheme.

00:19:43.896 --> 00:19:44.966 A:middle
In this case, it's lemma.

00:19:45.266 --> 00:19:45.956 A:middle
If you look at all the

00:19:45.956 --> 00:19:47.256 A:middle
fundamental building blocks that

00:19:47.256 --> 00:19:48.836 A:middle
we talked about, it's exactly

00:19:48.836 --> 00:19:49.046 A:middle
that.

00:19:49.406 --> 00:19:50.556 A:middle
Those building blocks are now

00:19:50.556 --> 00:19:52.046 A:middle
translated into tag schemes.

00:19:52.576 --> 00:19:54.816 A:middle
We specify some text.

00:19:54.946 --> 00:19:57.666 A:middle
We set the range of the text

00:19:57.666 --> 00:19:58.606 A:middle
that we'd like to analyze.

00:19:59.976 --> 00:20:00.976 A:middle
And again, we set some options.

00:19:59.976 --> 00:20:00.976 A:middle
And again, we set some options.

00:20:01.086 --> 00:20:03.056 A:middle
Again, we want to omit

00:20:03.146 --> 00:20:04.346 A:middle
punctuation, as well as

00:20:04.346 --> 00:20:04.986 A:middle
whitespace.

00:20:06.336 --> 00:20:08.016 A:middle
And finally, we enumerate over

00:20:08.016 --> 00:20:08.546 A:middle
every word.

00:20:09.416 --> 00:20:10.996 A:middle
And as we enumerate over every

00:20:10.996 --> 00:20:12.846 A:middle
word, we'd like to find out what

00:20:12.846 --> 00:20:14.006 A:middle
the lemma for that particular

00:20:14.006 --> 00:20:14.666 A:middle
word is.

00:20:15.336 --> 00:20:16.526 A:middle
And once we have the lemma, we

00:20:16.526 --> 00:20:18.506 A:middle
can index this in a different

00:20:18.576 --> 00:20:18.736 A:middle
app.

00:20:18.736 --> 00:20:19.826 A:middle
We can use it in many different

00:20:19.826 --> 00:20:20.096 A:middle
ways.

00:20:21.216 --> 00:20:23.156 A:middle
So, let me now, turn it over to

00:20:23.156 --> 00:20:24.616 A:middle
Doug, to show a light

00:20:24.616 --> 00:20:26.336 A:middle
demonstration of Winnow in

00:20:26.416 --> 00:20:28.406 A:middle
action, with the power of NLP.

00:20:28.406 --> 00:20:29.596 A:middle
Over to you, Doug.

00:20:30.516 --> 00:20:34.086 A:middle
[ Applause ]

00:20:34.586 --> 00:20:35.486 A:middle
&gt;&gt; Okay. Thanks, Vivek.

00:20:35.706 --> 00:20:37.516 A:middle
So, what I have here, is the

00:20:37.516 --> 00:20:38.796 A:middle
first version of the Winnow app

00:20:38.796 --> 00:20:39.336 A:middle
that we wrote.

00:20:39.716 --> 00:20:40.746 A:middle
It's a very simple app.

00:20:41.186 --> 00:20:42.846 A:middle
It shows a gallery of photos.

00:20:42.966 --> 00:20:44.306 A:middle
Each photo has a description.

00:20:44.396 --> 00:20:45.906 A:middle
And we have search fields so we

00:20:45.906 --> 00:20:47.656 A:middle
can search for descriptions for

00:20:47.656 --> 00:20:48.996 A:middle
photos by the words in their

00:20:48.996 --> 00:20:49.596 A:middle
descriptions.

00:20:50.186 --> 00:20:51.666 A:middle
But this version of Winnow has a

00:20:51.666 --> 00:20:52.036 A:middle
problem.

00:20:52.846 --> 00:20:54.296 A:middle
It doesn't have any NLP in it.

00:20:54.956 --> 00:20:56.306 A:middle
So, if I were to type something

00:20:56.306 --> 00:20:57.766 A:middle
like hike, and search for that,

00:20:57.766 --> 00:20:59.376 A:middle
I'd get no results.

00:20:59.896 --> 00:21:01.126 A:middle
Even though there are photos in

00:20:59.896 --> 00:21:01.126 A:middle
Even though there are photos in

00:21:01.126 --> 00:21:03.056 A:middle
here that are related to hiking.

00:21:03.056 --> 00:21:05.576 A:middle
I could type hikes, and I get

00:21:05.716 --> 00:21:06.806 A:middle
the photos whose description

00:21:06.806 --> 00:21:07.616 A:middle
have hikes in them.

00:21:07.616 --> 00:21:10.636 A:middle
Or hiking, I get photos whose

00:21:10.636 --> 00:21:11.806 A:middle
descriptions have hiking in

00:21:11.806 --> 00:21:12.086 A:middle
them.

00:21:12.206 --> 00:21:14.746 A:middle
Or hiked. But because there's no

00:21:14.806 --> 00:21:16.696 A:middle
NLP in it, the app has no idea

00:21:16.696 --> 00:21:17.576 A:middle
that these words are all

00:21:17.576 --> 00:21:17.976 A:middle
related.

00:21:19.336 --> 00:21:20.546 A:middle
So, what can we do about that?

00:21:21.316 --> 00:21:25.226 A:middle
Well, let's take a look at the

00:21:25.396 --> 00:21:25.486 A:middle
code.

00:21:25.486 --> 00:21:27.976 A:middle
So, here is our function at the

00:21:27.976 --> 00:21:30.696 A:middle
heart of the application that is

00:21:30.696 --> 00:21:33.016 A:middle
responsible for what it needs to

00:21:33.016 --> 00:21:34.606 A:middle
do, as far as indexing for

00:21:34.606 --> 00:21:34.956 A:middle
search.

00:21:35.166 --> 00:21:36.706 A:middle
So, this function takes a

00:21:36.706 --> 00:21:37.716 A:middle
string, and maybe it's a

00:21:37.716 --> 00:21:39.326 A:middle
description or search string,

00:21:39.776 --> 00:21:42.326 A:middle
and it converts it into a set of

00:21:42.356 --> 00:21:44.206 A:middle
words that are used for the

00:21:44.206 --> 00:21:44.606 A:middle
searching.

00:21:45.676 --> 00:21:47.456 A:middle
And the reason why it has this

00:21:47.516 --> 00:21:48.636 A:middle
behavior is this function is

00:21:48.926 --> 00:21:49.866 A:middle
very naive.

00:21:50.286 --> 00:21:51.776 A:middle
It just uses a standard string

00:21:51.906 --> 00:21:53.966 A:middle
method for writing substrings.

00:21:53.966 --> 00:21:55.496 A:middle
In this case, by words.

00:21:55.766 --> 00:21:56.946 A:middle
So, it gets all the words.

00:21:57.236 --> 00:21:58.396 A:middle
And the only thing it does with

00:21:58.396 --> 00:22:00.186 A:middle
those is to lowercase them, so,

00:21:58.396 --> 00:22:00.186 A:middle
those is to lowercase them, so,

00:22:00.186 --> 00:22:01.066 A:middle
it's case insensitive.

00:22:01.506 --> 00:22:02.096 A:middle
But no NLP.

00:22:03.006 --> 00:22:03.936 A:middle
Well, let's fix that.

00:22:05.276 --> 00:22:08.096 A:middle
I'm going to replace this with

00:22:08.096 --> 00:22:09.236 A:middle
something that should look very

00:22:09.236 --> 00:22:11.316 A:middle
familiar from the slides.

00:22:12.976 --> 00:22:14.006 A:middle
I going to create a linguistic

00:22:14.056 --> 00:22:14.536 A:middle
tagger.

00:22:14.676 --> 00:22:15.866 A:middle
In this case, I'm going to use

00:22:15.916 --> 00:22:17.586 A:middle
the lemma language schemes.

00:22:19.466 --> 00:22:20.916 A:middle
And set the string on it.

00:22:21.536 --> 00:22:22.996 A:middle
A little twist here.

00:22:23.876 --> 00:22:26.506 A:middle
This method here, has two

00:22:26.506 --> 00:22:26.926 A:middle
options.

00:22:26.926 --> 00:22:28.296 A:middle
One, the language, if it's

00:22:28.296 --> 00:22:29.786 A:middle
known, can be passed in.

00:22:29.996 --> 00:22:31.366 A:middle
In which case, we tell the

00:22:31.366 --> 00:22:32.846 A:middle
tagger what the language is.

00:22:32.846 --> 00:22:33.916 A:middle
And this is how you do that.

00:22:34.656 --> 00:22:36.146 A:middle
But if it's not known and not

00:22:36.146 --> 00:22:37.656 A:middle
passed in, then we just ask it,

00:22:38.156 --> 00:22:39.376 A:middle
using dominantLanguage, to

00:22:39.376 --> 00:22:41.066 A:middle
identify the language for us.

00:22:42.556 --> 00:22:43.786 A:middle
And then, we're going to

00:22:43.786 --> 00:22:45.866 A:middle
enumerate through, using the

00:22:45.866 --> 00:22:46.646 A:middle
lemma scheme.

00:22:47.656 --> 00:22:50.066 A:middle
And that will also, along the

00:22:50.066 --> 00:22:51.346 A:middle
way, give us tokenizations.

00:22:51.346 --> 00:22:52.206 A:middle
We get the token.

00:22:52.696 --> 00:22:53.686 A:middle
We're going to use that as one

00:22:53.686 --> 00:22:54.416 A:middle
of our words.

00:22:54.866 --> 00:22:56.296 A:middle
And we also, if we have a lemma,

00:22:57.216 --> 00:22:58.646 A:middle
we'll take that and use that as

00:22:58.646 --> 00:22:59.426 A:middle
one of our words.

00:23:00.326 --> 00:23:01.466 A:middle
By the way, you don't have to

00:23:01.466 --> 00:23:02.486 A:middle
memorize this.

00:23:02.486 --> 00:23:03.706 A:middle
This should be available to you

00:23:03.706 --> 00:23:05.226 A:middle
as sample code.

00:23:06.416 --> 00:23:08.526 A:middle
So, let's try that out.

00:23:16.086 --> 00:23:18.176 A:middle
Okay. So, now in this version of

00:23:18.176 --> 00:23:20.686 A:middle
Winnow, if I type hike, I should

00:23:20.736 --> 00:23:23.186 A:middle
get images whose description

00:23:23.186 --> 00:23:26.196 A:middle
contain hiking or hiked or

00:23:26.196 --> 00:23:26.886 A:middle
hikes.

00:23:28.076 --> 00:23:29.206 A:middle
Let me try another word.

00:23:29.206 --> 00:23:30.526 A:middle
Maybe, party.

00:23:31.616 --> 00:23:33.046 A:middle
This one has parties in it.

00:23:33.046 --> 00:23:35.096 A:middle
Partied, party.

00:23:35.486 --> 00:23:36.796 A:middle
And of course, this is

00:23:36.796 --> 00:23:37.586 A:middle
multilingual.

00:23:37.586 --> 00:23:39.526 A:middle
Let me try a French verb,

00:23:40.136 --> 00:23:41.476 A:middle
marcher, to walk.

00:23:42.966 --> 00:23:44.816 A:middle
Now, I am sure all of you

00:23:45.066 --> 00:23:46.256 A:middle
remember how to conjugate your

00:23:46.256 --> 00:23:46.816 A:middle
French verbs.

00:23:46.816 --> 00:23:47.976 A:middle
But I have a little trouble with

00:23:47.976 --> 00:23:48.043 A:middle
it.

00:23:48.296 --> 00:23:50.436 A:middle
So, I'm glad that I have NLP

00:23:50.436 --> 00:23:53.176 A:middle
APIs to remember that forms of

00:23:53.176 --> 00:23:54.506 A:middle
this verb include, in this case,

00:23:54.506 --> 00:23:59.046 A:middle
marchons, marchais, marchent.

00:23:59.576 --> 00:24:00.906 A:middle
They're all recognized as forms

00:23:59.576 --> 00:24:00.906 A:middle
They're all recognized as forms

00:24:00.906 --> 00:24:01.686 A:middle
of the same verb.

00:24:01.746 --> 00:24:02.686 A:middle
Or maybe in German.

00:24:03.346 --> 00:24:04.666 A:middle
The verb spielen, meaning to

00:24:04.666 --> 00:24:04.986 A:middle
play.

00:24:06.016 --> 00:24:07.976 A:middle
I can find images whose caption

00:24:07.976 --> 00:24:08.906 A:middle
contain speilen.

00:24:09.306 --> 00:24:11.406 A:middle
But also, past tense, gespielt.

00:24:11.936 --> 00:24:14.526 A:middle
And the NLP API knows that these

00:24:14.526 --> 00:24:15.696 A:middle
are forms of the same verbs,

00:24:15.696 --> 00:24:16.926 A:middle
they have the same lemma, so

00:24:16.926 --> 00:24:17.586 A:middle
they get found.

00:24:19.106 --> 00:24:20.736 A:middle
And that is Winnow.

00:24:21.516 --> 00:24:25.856 A:middle
[ Applause ]

00:24:26.356 --> 00:24:27.136 A:middle
Back to you, Vivek.

00:24:27.996 --> 00:24:29.016 A:middle
&gt;&gt; Thank you, Doug, for the

00:24:29.016 --> 00:24:30.256 A:middle
great demo.

00:24:30.256 --> 00:24:31.976 A:middle
So, I mentioned that we are

00:24:31.976 --> 00:24:32.876 A:middle
going to talk about two

00:24:32.876 --> 00:24:33.796 A:middle
hypothetical apps.

00:24:33.796 --> 00:24:35.516 A:middle
So, we've covered the first W.

00:24:35.516 --> 00:24:36.706 A:middle
Let's go on to the next W.

00:24:37.136 --> 00:24:37.786 A:middle
Which is Whisk.

00:24:38.976 --> 00:24:39.976 A:middle
So, Whisk is again, a

00:24:40.026 --> 00:24:42.266 A:middle
hypothetical app to collate

00:24:42.266 --> 00:24:43.196 A:middle
social media feeds.

00:24:43.476 --> 00:24:45.366 A:middle
So, I find it really hard,

00:24:45.366 --> 00:24:46.526 A:middle
because I have multiple social

00:24:46.526 --> 00:24:47.156 A:middle
media accounts.

00:24:47.466 --> 00:24:48.746 A:middle
And it's kind of painful to log

00:24:48.746 --> 00:24:50.186 A:middle
into each account, and then, go

00:24:50.186 --> 00:24:51.196 A:middle
look at the feeds, look at the

00:24:51.196 --> 00:24:52.646 A:middle
activity, comment on a bunch of

00:24:52.686 --> 00:24:52.926 A:middle
things.

00:24:53.376 --> 00:24:55.816 A:middle
So, imagine an app that can just

00:24:55.816 --> 00:24:57.276 A:middle
bring all of that in one place.

00:24:57.546 --> 00:24:59.856 A:middle
So, that's the objective of

00:25:00.026 --> 00:25:00.316 A:middle
Whisk.

00:25:00.806 --> 00:25:02.336 A:middle
So, I take social media feeds

00:25:02.756 --> 00:25:03.786 A:middle
from different places, from

00:25:03.786 --> 00:25:04.976 A:middle
different social media accounts.

00:25:05.476 --> 00:25:07.006 A:middle
And then, whisks it all together

00:25:07.676 --> 00:25:08.506 A:middle
into one interface.

00:25:08.896 --> 00:25:10.196 A:middle
So again, you're going to get

00:25:10.196 --> 00:25:11.506 A:middle
all these feeds in one place.

00:25:11.726 --> 00:25:13.756 A:middle
Now, the problem with Whisk is

00:25:13.756 --> 00:25:14.986 A:middle
it's doing very well at the app

00:25:14.986 --> 00:25:15.286 A:middle
store.

00:25:15.286 --> 00:25:17.736 A:middle
But unfortunately, it's kind of

00:25:17.736 --> 00:25:18.336 A:middle
all over the place.

00:25:18.336 --> 00:25:20.006 A:middle
I mean, the content is not very

00:25:20.006 --> 00:25:21.806 A:middle
easy to browse, because I see

00:25:21.806 --> 00:25:23.656 A:middle
some feeds from Pinterest.

00:25:23.656 --> 00:25:25.386 A:middle
I see some feeds from Facebook.

00:25:25.646 --> 00:25:26.226 A:middle
From Twitter.

00:25:26.226 --> 00:25:27.086 A:middle
It's all over the place.

00:25:27.086 --> 00:25:29.466 A:middle
I really want to organize Whisk

00:25:29.466 --> 00:25:31.216 A:middle
app even more, like increase the

00:25:31.216 --> 00:25:31.946 A:middle
user engagement.

00:25:33.096 --> 00:25:33.846 A:middle
And how can we do that?

00:25:34.926 --> 00:25:36.726 A:middle
So, what we'd like to do is kind

00:25:36.726 --> 00:25:39.386 A:middle
of organize the feeds in Whisk

00:25:39.796 --> 00:25:40.946 A:middle
app based on people,

00:25:41.046 --> 00:25:42.786 A:middle
organization, and locations that

00:25:42.786 --> 00:25:44.496 A:middle
you've been interested in, and

00:25:44.496 --> 00:25:46.026 A:middle
what you have been subscribed to

00:25:46.026 --> 00:25:46.556 A:middle
in your feeds.

00:25:47.766 --> 00:25:48.386 A:middle
How can we do that?

00:25:48.826 --> 00:25:50.626 A:middle
So, let's assume that we are

00:25:50.626 --> 00:25:52.346 A:middle
following a bunch of articles in

00:25:52.346 --> 00:25:52.666 A:middle
Twitter.

00:25:52.666 --> 00:25:53.606 A:middle
I'm following ten.

00:25:54.116 --> 00:25:56.236 A:middle
I'm also following Apple Music.

00:25:56.656 --> 00:25:58.926 A:middle
And based on all this content,

00:25:59.006 --> 00:26:00.416 A:middle
the text in all of these feeds,

00:25:59.006 --> 00:26:00.416 A:middle
the text in all of these feeds,

00:26:00.996 --> 00:26:02.926 A:middle
we can use our NLP APIs, such as

00:26:02.926 --> 00:26:04.926 A:middle
named entity extraction and

00:26:04.986 --> 00:26:07.116 A:middle
automatically tag and extract

00:26:07.116 --> 00:26:07.616 A:middle
entities.

00:26:08.106 --> 00:26:09.866 A:middle
So, in the first feed, you can

00:26:09.866 --> 00:26:11.566 A:middle
see that Tim Cook, Apple, Stevie

00:26:11.566 --> 00:26:12.856 A:middle
Wonder, these are all entities

00:26:13.116 --> 00:26:14.656 A:middle
that are automatically extracted

00:26:14.876 --> 00:26:16.086 A:middle
using the NLP APIs.

00:26:16.206 --> 00:26:17.096 A:middle
Completely through machine

00:26:17.096 --> 00:26:17.276 A:middle
learning.

00:26:18.196 --> 00:26:19.416 A:middle
In the second instance, you're

00:26:19.416 --> 00:26:20.016 A:middle
seeing Pharrell.

00:26:20.016 --> 00:26:21.806 A:middle
And Pharrell is visiting NYU.

00:26:21.806 --> 00:26:22.866 A:middle
And those are two entities that

00:26:22.866 --> 00:26:23.456 A:middle
we extracted.

00:26:23.856 --> 00:26:25.216 A:middle
So, imagine if you had all these

00:26:25.266 --> 00:26:26.946 A:middle
entities, we can organize the

00:26:26.946 --> 00:26:28.806 A:middle
content and make the user

00:26:28.936 --> 00:26:30.656 A:middle
experience within Whisk,

00:26:30.976 --> 00:26:32.016 A:middle
significantly better.

00:26:32.166 --> 00:26:33.186 A:middle
And that's the objective, here.

00:26:34.486 --> 00:26:35.916 A:middle
So again, how will we accomplish

00:26:35.916 --> 00:26:37.476 A:middle
this using our NLP APIs?

00:26:38.946 --> 00:26:41.046 A:middle
So, we start off with some

00:26:41.046 --> 00:26:41.446 A:middle
feeds.

00:26:41.526 --> 00:26:43.336 A:middle
So, we assume that there's some

00:26:43.336 --> 00:26:45.216 A:middle
feed API that's sending us all

00:26:45.216 --> 00:26:46.676 A:middle
this information from different

00:26:46.676 --> 00:26:47.636 A:middle
social media accounts.

00:26:48.466 --> 00:26:49.756 A:middle
So, once you have this feed API,

00:26:51.226 --> 00:26:52.566 A:middle
and then you ingest it into

00:26:52.736 --> 00:26:54.926 A:middle
Whisk, we'd like to bring NLP to

00:26:54.926 --> 00:26:55.486 A:middle
the fore.

00:26:56.646 --> 00:26:59.086 A:middle
And what do you think is going

00:26:59.086 --> 00:27:00.086 A:middle
to be the first block, here?

00:26:59.086 --> 00:27:00.086 A:middle
to be the first block, here?

00:27:00.686 --> 00:27:03.156 A:middle
Right. It's going to be language

00:27:03.156 --> 00:27:04.726 A:middle
identification, because feeds

00:27:04.936 --> 00:27:06.026 A:middle
can be in different languages.

00:27:06.026 --> 00:27:07.016 A:middle
You can have a feed that's

00:27:07.016 --> 00:27:09.056 A:middle
coming in that is German or

00:27:09.056 --> 00:27:10.336 A:middle
Russian or French.

00:27:10.616 --> 00:27:11.716 A:middle
In order to do the right sort of

00:27:11.716 --> 00:27:13.186 A:middle
analysis, you have to do

00:27:13.186 --> 00:27:14.086 A:middle
language identification.

00:27:14.966 --> 00:27:15.796 A:middle
So, once you do language

00:27:15.796 --> 00:27:17.676 A:middle
identification, you have to do

00:27:17.676 --> 00:27:18.716 A:middle
tokenization of the text.

00:27:18.986 --> 00:27:20.286 A:middle
Presumably, some of the feeds

00:27:20.336 --> 00:27:21.836 A:middle
are sentences, paragraphs or

00:27:21.836 --> 00:27:22.486 A:middle
documents, right.

00:27:22.716 --> 00:27:23.696 A:middle
So, you have to tokenize the

00:27:23.776 --> 00:27:24.046 A:middle
text.

00:27:24.756 --> 00:27:26.406 A:middle
And then, finally, you can call

00:27:26.406 --> 00:27:27.816 A:middle
the named entity extraction API,

00:27:28.236 --> 00:27:29.516 A:middle
in order to get the entities

00:27:29.656 --> 00:27:30.256 A:middle
from the text.

00:27:31.226 --> 00:27:32.526 A:middle
And that is how our app would

00:27:32.526 --> 00:27:32.726 A:middle
look.

00:27:33.056 --> 00:27:34.636 A:middle
So, let's look at a code sample,

00:27:34.636 --> 00:27:36.506 A:middle
again, to see how easy this is

00:27:36.716 --> 00:27:37.236 A:middle
to implement.

00:27:37.726 --> 00:27:40.066 A:middle
Again, the same pattern.

00:27:40.706 --> 00:27:41.946 A:middle
We start off with creating an

00:27:41.946 --> 00:27:43.426 A:middle
instance of NSLinguisticTagger

00:27:43.476 --> 00:27:44.176 A:middle
object.

00:27:44.556 --> 00:27:46.456 A:middle
Now, we specify a tag scheme to

00:27:46.456 --> 00:27:47.126 A:middle
be nameType.

00:27:47.416 --> 00:27:48.666 A:middle
So, we've gone through token

00:27:48.666 --> 00:27:48.896 A:middle
type.

00:27:48.896 --> 00:27:49.956 A:middle
We've gone through lemma,

00:27:50.246 --> 00:27:51.576 A:middle
language, and now, name type.

00:27:52.796 --> 00:27:53.916 A:middle
We set a string that we'd like

00:27:53.916 --> 00:27:54.436 A:middle
to analyze.

00:27:55.516 --> 00:27:56.536 A:middle
We set the range of the string,

00:27:56.536 --> 00:27:57.586 A:middle
which is the entire string.

00:27:58.246 --> 00:28:00.406 A:middle
And we set some options.

00:27:58.246 --> 00:28:00.406 A:middle
And we set some options.

00:28:00.766 --> 00:28:02.616 A:middle
So, if you carefully observe, in

00:28:02.616 --> 00:28:04.516 A:middle
addition to omit punctuation and

00:28:04.516 --> 00:28:05.556 A:middle
omit whitespace, which we've

00:28:05.596 --> 00:28:06.166 A:middle
seen before.

00:28:06.406 --> 00:28:07.776 A:middle
We also have this option called

00:28:07.776 --> 00:28:08.656 A:middle
as joinedNames.

00:28:09.146 --> 00:28:10.366 A:middle
What is the reason for that?

00:28:10.836 --> 00:28:12.676 A:middle
Names can span multiple tokens.

00:28:12.906 --> 00:28:15.146 A:middle
So, in this example, Tim Cook is

00:28:15.146 --> 00:28:16.666 A:middle
a name that spans two tokens.

00:28:16.876 --> 00:28:18.036 A:middle
So, when we iterate through our

00:28:18.036 --> 00:28:19.756 A:middle
output we want to actually get

00:28:19.946 --> 00:28:21.166 A:middle
that as a person name.

00:28:21.306 --> 00:28:23.016 A:middle
So, we want to iterate over that

00:28:23.016 --> 00:28:23.636 A:middle
join token.

00:28:23.856 --> 00:28:25.256 A:middle
So, that's what join means to

00:28:25.256 --> 00:28:25.536 A:middle
us.

00:28:26.496 --> 00:28:27.656 A:middle
And then, we specify the tags

00:28:27.656 --> 00:28:28.696 A:middle
that we're interested in.

00:28:28.696 --> 00:28:30.626 A:middle
We are interested in person

00:28:30.626 --> 00:28:31.696 A:middle
name, place name, and

00:28:31.696 --> 00:28:32.456 A:middle
organization name.

00:28:32.456 --> 00:28:34.356 A:middle
And finally, you know how to

00:28:34.356 --> 00:28:35.386 A:middle
enumerate over the words.

00:28:35.716 --> 00:28:36.856 A:middle
And as you enumerate over the

00:28:36.856 --> 00:28:37.636 A:middle
words, you're going to get the

00:28:37.636 --> 00:28:38.316 A:middle
token types.

00:28:38.686 --> 00:28:40.676 A:middle
And if the token type has a

00:28:40.676 --> 00:28:42.316 A:middle
particular tag which is of

00:28:42.396 --> 00:28:45.356 A:middle
interest to us, we can get the

00:28:45.356 --> 00:28:47.026 A:middle
span of the text that belongs to

00:28:47.026 --> 00:28:47.596 A:middle
that category.

00:28:48.246 --> 00:28:49.766 A:middle
So now, let me turn it over to

00:28:49.766 --> 00:28:51.226 A:middle
Doug, again, to see a live

00:28:51.226 --> 00:28:53.126 A:middle
demonstration of Whisk in action

00:28:53.126 --> 00:28:53.526 A:middle
in XCode.

00:28:53.846 --> 00:28:54.546 A:middle
Doug, over to you.

00:28:55.336 --> 00:28:57.386 A:middle
&gt;&gt; Okay. So, here we are.

00:28:57.546 --> 00:28:59.236 A:middle
And we have Whisk running, at

00:28:59.236 --> 00:29:00.096 A:middle
least in the Simulator.

00:28:59.236 --> 00:29:00.096 A:middle
least in the Simulator.

00:29:00.566 --> 00:29:02.206 A:middle
And it shows all our feeds.

00:29:02.326 --> 00:29:03.646 A:middle
We could go in and look at each

00:29:03.646 --> 00:29:04.076 A:middle
one.

00:29:04.076 --> 00:29:05.256 A:middle
But that's kind of boring.

00:29:05.316 --> 00:29:06.886 A:middle
What we really want is to

00:29:06.886 --> 00:29:08.836 A:middle
organize these things by named

00:29:08.836 --> 00:29:09.306 A:middle
entities.

00:29:09.306 --> 00:29:10.966 A:middle
So, let's hit the button.

00:29:11.206 --> 00:29:12.916 A:middle
Boom! It's gone through and

00:29:12.916 --> 00:29:14.496 A:middle
extracted all the name it can

00:29:14.496 --> 00:29:16.846 A:middle
find and listed them by an order

00:29:16.846 --> 00:29:17.426 A:middle
of frequency.

00:29:18.216 --> 00:29:20.176 A:middle
And indexed everything.

00:29:20.286 --> 00:29:22.176 A:middle
So, I go and pick Tim Cook.

00:29:22.746 --> 00:29:23.846 A:middle
Let's see all the mentions of

00:29:23.906 --> 00:29:24.466 A:middle
Tim Cook.

00:29:24.636 --> 00:29:26.236 A:middle
I can go and find one, here.

00:29:26.236 --> 00:29:27.566 A:middle
It's nicely highlighted for me.

00:29:27.566 --> 00:29:32.056 A:middle
Maybe. Here's another one.

00:29:32.056 --> 00:29:35.396 A:middle
Tim Cook. Or I can go back, pick

00:29:35.436 --> 00:29:36.866 A:middle
the next entity.

00:29:37.646 --> 00:29:39.526 A:middle
California, location name.

00:29:40.216 --> 00:29:41.126 A:middle
Here are all the mentions of

00:29:41.156 --> 00:29:41.786 A:middle
California.

00:29:42.676 --> 00:29:44.556 A:middle
So, I look and find California.

00:29:44.556 --> 00:29:46.176 A:middle
It's been found and highlighted

00:29:46.946 --> 00:29:49.196 A:middle
for me.

00:29:49.446 --> 00:29:52.376 A:middle
And so, this is Whisk.

00:29:52.816 --> 00:29:53.526 A:middle
Now, how does it work?

00:29:53.866 --> 00:29:55.056 A:middle
Well, let's take a look at the

00:29:55.056 --> 00:29:55.666 A:middle
code.

00:29:56.646 --> 00:29:59.126 A:middle
So, here is the important method

00:29:59.416 --> 00:29:59.976 A:middle
in Whisk.

00:30:00.156 --> 00:30:01.766 A:middle
This is the extractEntities

00:30:01.766 --> 00:30:02.156 A:middle
Method.

00:30:02.246 --> 00:30:06.816 A:middle
Takes piece of text and finds

00:30:06.886 --> 00:30:08.036 A:middle
all of the named entities that

00:30:08.036 --> 00:30:08.896 A:middle
we want in it.

00:30:09.646 --> 00:30:10.626 A:middle
Should start to look very

00:30:10.626 --> 00:30:11.326 A:middle
familiar, now.

00:30:11.636 --> 00:30:12.956 A:middle
We create a tagger.

00:30:12.956 --> 00:30:13.966 A:middle
We are interested in the

00:30:13.966 --> 00:30:15.286 A:middle
nameType scheme.

00:30:16.276 --> 00:30:17.766 A:middle
And we set the string on it.

00:30:17.956 --> 00:30:19.246 A:middle
We set some options.

00:30:19.306 --> 00:30:21.126 A:middle
We don't want whitespace or

00:30:21.126 --> 00:30:21.766 A:middle
punctuation.

00:30:21.766 --> 00:30:22.856 A:middle
We want names to be joined

00:30:22.856 --> 00:30:23.326 A:middle
together.

00:30:24.026 --> 00:30:25.766 A:middle
And then, we enumerate through

00:30:25.766 --> 00:30:25.896 A:middle
it.

00:30:27.166 --> 00:30:30.946 A:middle
And each case, if there is a

00:30:31.036 --> 00:30:32.756 A:middle
name tag and it's one of the

00:30:32.756 --> 00:30:34.236 A:middle
kinds we're interested in, that

00:30:34.236 --> 00:30:36.056 A:middle
is, person, place, organization

00:30:36.096 --> 00:30:36.406 A:middle
name.

00:30:36.836 --> 00:30:39.086 A:middle
Then we find the text in that

00:30:39.086 --> 00:30:39.426 A:middle
token.

00:30:40.016 --> 00:30:42.416 A:middle
And we create an instance of our

00:30:42.416 --> 00:30:44.176 A:middle
private namedEntity class, here,

00:30:44.536 --> 00:30:46.046 A:middle
using that token and tag and

00:30:46.046 --> 00:30:46.276 A:middle
range.

00:30:47.576 --> 00:30:49.116 A:middle
And so, very simple.

00:30:49.336 --> 00:30:50.306 A:middle
That's all there is to it.

00:30:50.456 --> 00:30:51.706 A:middle
That's all that's needed to go

00:30:51.706 --> 00:30:53.256 A:middle
through and extract the named

00:30:53.256 --> 00:30:54.416 A:middle
entities from this text.

00:30:56.276 --> 00:30:57.506 A:middle
Go back to you, Vivek.

00:30:58.516 --> 00:31:03.706 A:middle
[ Applause ]

00:30:58.516 --> 00:31:03.706 A:middle
[ Applause ]

00:31:04.206 --> 00:31:05.546 A:middle
&gt;&gt; Great. So, now you've seen

00:31:05.586 --> 00:31:07.416 A:middle
NLP APIs in action through two

00:31:07.416 --> 00:31:08.116 A:middle
hypothetical apps.

00:31:08.116 --> 00:31:10.716 A:middle
I want to delve deeper into what

00:31:10.716 --> 00:31:12.006 A:middle
are the benefits of these APIs?

00:31:12.006 --> 00:31:13.746 A:middle
I mean, you've seen it's easy to

00:31:13.746 --> 00:31:14.156 A:middle
use.

00:31:14.156 --> 00:31:15.856 A:middle
It's kind of very systematic to

00:31:15.856 --> 00:31:16.196 A:middle
use.

00:31:16.526 --> 00:31:17.776 A:middle
It has very similar patterns.

00:31:18.206 --> 00:31:19.756 A:middle
But beyond that, what are the

00:31:19.756 --> 00:31:20.286 A:middle
benefits?

00:31:20.766 --> 00:31:22.566 A:middle
The first is homogenous text

00:31:22.566 --> 00:31:23.036 A:middle
processing.

00:31:23.296 --> 00:31:25.186 A:middle
What do I mean by that?

00:31:25.186 --> 00:31:26.386 A:middle
Now these NLP APIs are

00:31:26.826 --> 00:31:28.036 A:middle
available, as I mentioned,

00:31:28.036 --> 00:31:29.576 A:middle
across all Apple platforms.

00:31:30.276 --> 00:31:31.666 A:middle
And as a user of these API, you

00:31:31.666 --> 00:31:33.956 A:middle
are going to get consistent text

00:31:33.956 --> 00:31:35.796 A:middle
processing across all platforms

00:31:36.066 --> 00:31:36.936 A:middle
and a consistent user

00:31:36.936 --> 00:31:37.536 A:middle
experience.

00:31:38.586 --> 00:31:40.096 A:middle
Furthermore, these are the APIs,

00:31:40.096 --> 00:31:40.856 A:middle
as I mentioned.

00:31:41.286 --> 00:31:42.486 A:middle
These are the same ones that we

00:31:42.486 --> 00:31:43.616 A:middle
used in our first party apps.

00:31:43.906 --> 00:31:45.956 A:middle
So, a user of your app is going

00:31:45.956 --> 00:31:47.026 A:middle
to get the same sort of

00:31:47.026 --> 00:31:49.116 A:middle
experience of any other Apple

00:31:49.976 --> 00:31:50.046 A:middle
app.

00:31:50.916 --> 00:31:52.296 A:middle
Let's talk about the second

00:31:52.296 --> 00:31:52.656 A:middle
benefit.

00:31:53.106 --> 00:31:53.866 A:middle
It's privacy.

00:31:55.056 --> 00:31:56.276 A:middle
All of the machine learning in

00:31:56.326 --> 00:31:58.196 A:middle
NLP that we've talked about,

00:31:58.196 --> 00:31:59.986 A:middle
happens completely on device.

00:32:00.656 --> 00:32:02.986 A:middle
As a user of this, everything is

00:32:02.986 --> 00:32:04.776 A:middle
on device and the user data does

00:32:04.776 --> 00:32:06.316 A:middle
not have to leave the device.

00:32:06.466 --> 00:32:07.526 A:middle
And that's great for you.

00:32:08.296 --> 00:32:09.346 A:middle
Right. You don't have to have a

00:32:09.346 --> 00:32:09.926 A:middle
cloud API.

00:32:09.926 --> 00:32:10.846 A:middle
You don't have to do anything.

00:32:10.876 --> 00:32:14.586 A:middle
Everything happens on device.

00:32:14.746 --> 00:32:15.996 A:middle
In addition to privacy, the

00:32:16.236 --> 00:32:19.166 A:middle
underlying implementation of

00:32:19.166 --> 00:32:20.466 A:middle
NSLinguisticTagger was also

00:32:20.466 --> 00:32:21.806 A:middle
completely revamped for this

00:32:21.806 --> 00:32:22.126 A:middle
release.

00:32:22.236 --> 00:32:24.456 A:middle
As a result of that, we've seen

00:32:24.496 --> 00:32:25.466 A:middle
significant improvements in

00:32:25.466 --> 00:32:25.986 A:middle
performance.

00:32:26.606 --> 00:32:27.986 A:middle
So, the code base is highly

00:32:27.986 --> 00:32:29.726 A:middle
optimized on device for all

00:32:29.726 --> 00:32:30.326 A:middle
platforms.

00:32:30.456 --> 00:32:31.536 A:middle
It's multithreaded, now.

00:32:32.066 --> 00:32:33.356 A:middle
And existing clients of

00:32:33.356 --> 00:32:35.526 A:middle
NSLinguisticTagger can see

00:32:35.566 --> 00:32:36.916 A:middle
significant speed up.

00:32:37.186 --> 00:32:38.666 A:middle
For instance, Chinese

00:32:38.666 --> 00:32:41.636 A:middle
tokenization is 30% faster on

00:32:41.636 --> 00:32:42.916 A:middle
iOS, and this was measured on

00:32:42.916 --> 00:32:43.496 A:middle
iPhone 7.

00:32:44.986 --> 00:32:47.056 A:middle
Named entity recognition is 80%

00:32:47.056 --> 00:32:48.226 A:middle
faster with the new code base.

00:32:49.126 --> 00:32:50.656 A:middle
And for those of you who have

00:32:50.656 --> 00:32:52.136 A:middle
not used NSLinguisticTagger in

00:32:52.136 --> 00:32:53.566 A:middle
the past, these relative

00:32:53.566 --> 00:32:54.856 A:middle
improvements don't really mean

00:32:54.856 --> 00:32:55.116 A:middle
much.

00:32:55.116 --> 00:32:56.256 A:middle
I mean, what is 30%, what is

00:32:56.256 --> 00:32:56.766 A:middle
80%?

00:32:56.766 --> 00:32:57.346 A:middle
It's all relative.

00:32:57.946 --> 00:33:00.036 A:middle
So, let's look at some raw

00:32:57.946 --> 00:33:00.036 A:middle
So, let's look at some raw

00:33:00.036 --> 00:33:00.446 A:middle
numbers.

00:33:01.866 --> 00:33:04.716 A:middle
So, I'm going to use a yellow

00:33:04.826 --> 00:33:06.756 A:middle
line to specify a thread.

00:33:06.756 --> 00:33:07.526 A:middle
So, if you look at part to

00:33:07.526 --> 00:33:09.386 A:middle
speech tagging on an iOS device

00:33:09.386 --> 00:33:11.036 A:middle
with a single thread, we can

00:33:11.036 --> 00:33:13.166 A:middle
process 50,000 tokens in a

00:33:13.226 --> 00:33:13.566 A:middle
second.

00:33:14.316 --> 00:33:15.896 A:middle
Everything on device, using

00:33:15.896 --> 00:33:16.996 A:middle
machine learning on device.

00:33:18.186 --> 00:33:20.816 A:middle
Named entity recognition, on the

00:33:20.816 --> 00:33:22.546 A:middle
other hand, we can process about

00:33:22.546 --> 00:33:24.006 A:middle
40,000 tokens per second.

00:33:24.356 --> 00:33:26.276 A:middle
Now, imagine for a minute, what

00:33:26.276 --> 00:33:27.346 A:middle
is the average length of an

00:33:27.346 --> 00:33:28.966 A:middle
article that you'd analyze or

00:33:28.966 --> 00:33:29.226 A:middle
read?

00:33:29.536 --> 00:33:31.036 A:middle
It's about 400, 500 words.

00:33:31.066 --> 00:33:32.886 A:middle
So, you can process hundreds of

00:33:32.886 --> 00:33:34.446 A:middle
articles, extract named

00:33:34.446 --> 00:33:36.676 A:middle
entities, in a second on an iOS

00:33:36.706 --> 00:33:37.056 A:middle
device.

00:33:37.406 --> 00:33:38.376 A:middle
And that's terrific.

00:33:38.376 --> 00:33:39.436 A:middle
And we are so excited about

00:33:39.436 --> 00:33:39.676 A:middle
this.

00:33:40.516 --> 00:33:45.956 A:middle
[ Applause ]

00:33:46.456 --> 00:33:47.966 A:middle
So, in addition to privacy and

00:33:47.966 --> 00:33:49.966 A:middle
performance, NSLinguisticTagger

00:33:49.966 --> 00:33:51.926 A:middle
also offers support across a

00:33:51.926 --> 00:33:53.316 A:middle
wide variety of languages.

00:33:53.876 --> 00:33:55.106 A:middle
For those of you who localize

00:33:55.106 --> 00:33:56.066 A:middle
your apps, this could be very

00:33:56.066 --> 00:33:56.396 A:middle
useful.

00:33:57.286 --> 00:33:58.506 A:middle
Language identification is

00:33:58.506 --> 00:34:01.276 A:middle
supported for 29 scripts and 52

00:33:58.506 --> 00:34:01.276 A:middle
supported for 29 scripts and 52

00:34:01.276 --> 00:34:01.866 A:middle
languages.

00:34:03.496 --> 00:34:05.766 A:middle
Tokenization is supported for

00:34:05.766 --> 00:34:07.596 A:middle
all iOS and macOS system

00:34:07.596 --> 00:34:08.156 A:middle
languages.

00:34:09.416 --> 00:34:10.926 A:middle
Lemmatization, part to speech

00:34:10.966 --> 00:34:12.686 A:middle
tagging, and named entity

00:34:12.686 --> 00:34:14.295 A:middle
recognition is supported for

00:34:14.295 --> 00:34:15.116 A:middle
eight languages.

00:34:15.626 --> 00:34:18.556 A:middle
And everything other than

00:34:18.556 --> 00:34:19.846 A:middle
English was added for this

00:34:19.846 --> 00:34:20.146 A:middle
release.

00:34:20.335 --> 00:34:21.766 A:middle
And our English models have also

00:34:21.766 --> 00:34:23.005 A:middle
been significantly revamped.

00:34:23.005 --> 00:34:25.806 A:middle
And talking about accuracy.

00:34:26.056 --> 00:34:27.156 A:middle
So, those of you who really

00:34:27.156 --> 00:34:29.126 A:middle
talking, you know, our family of

00:34:29.126 --> 00:34:30.356 A:middle
machine learning, you've seen

00:34:30.356 --> 00:34:31.636 A:middle
all of the benefits of the API.

00:34:31.726 --> 00:34:33.216 A:middle
You know it works well.

00:34:33.216 --> 00:34:34.036 A:middle
It's easy to use.

00:34:34.335 --> 00:34:35.496 A:middle
The big question is, ''How

00:34:35.496 --> 00:34:36.476 A:middle
accurate are these

00:34:36.565 --> 00:34:38.136 A:middle
technologies?'' So, let's look

00:34:38.136 --> 00:34:39.416 A:middle
at accuracy.

00:34:39.485 --> 00:34:41.456 A:middle
It's a perfect segue.

00:34:41.686 --> 00:34:44.326 A:middle
So, these models, I'm showing

00:34:44.326 --> 00:34:45.356 A:middle
you only results for English and

00:34:45.356 --> 00:34:46.806 A:middle
Spanish, for brevity, here, work

00:34:47.036 --> 00:34:48.616 A:middle
remarkably well.

00:34:48.866 --> 00:34:50.576 A:middle
Our part to speech tagging model

00:34:50.576 --> 00:34:52.426 A:middle
for both English and Spanish,

00:34:52.456 --> 00:34:54.315 A:middle
achieves accuracy over 90%.

00:34:54.565 --> 00:34:55.766 A:middle
And this is on a tag set of

00:34:55.766 --> 00:34:56.706 A:middle
about 15 tags.

00:34:57.045 --> 00:34:58.476 A:middle
The exact tags that are being

00:34:58.476 --> 00:34:59.166 A:middle
supported for

00:34:59.166 --> 00:35:00.586 A:middle
NSLinguisticTagger, you can find

00:34:59.166 --> 00:35:00.586 A:middle
NSLinguisticTagger, you can find

00:35:00.626 --> 00:35:02.866 A:middle
in the Apple Developer docs.

00:35:03.446 --> 00:35:04.936 A:middle
For named entity recognition,

00:35:05.186 --> 00:35:06.586 A:middle
our accuracies are in the mid

00:35:06.586 --> 00:35:07.026 A:middle
80s.

00:35:07.086 --> 00:35:08.356 A:middle
And that is state of the art.

00:35:08.356 --> 00:35:10.126 A:middle
Again, all of this on device,

00:35:10.706 --> 00:35:12.386 A:middle
using complex machine learning

00:35:12.956 --> 00:35:13.176 A:middle
techniques.

00:35:14.616 --> 00:35:17.166 A:middle
So, before we kind of wrap up

00:35:17.166 --> 00:35:18.486 A:middle
the talk, I'd like to spend a

00:35:18.486 --> 00:35:20.036 A:middle
few minutes talking about, you

00:35:20.036 --> 00:35:21.026 A:middle
know, giving you some debugging

00:35:21.026 --> 00:35:21.246 A:middle
hints.

00:35:21.426 --> 00:35:22.086 A:middle
Now, that you're kind of

00:35:22.116 --> 00:35:23.616 A:middle
familiar with how to use the

00:35:23.616 --> 00:35:24.876 A:middle
APIs, I'm sure you'll run into a

00:35:24.876 --> 00:35:26.436 A:middle
few, you know, issues.

00:35:26.756 --> 00:35:28.276 A:middle
So, one heads-up that I'd like

00:35:28.276 --> 00:35:30.366 A:middle
to give is, in case you run

00:35:30.436 --> 00:35:31.896 A:middle
these APIs and you get the part

00:35:31.896 --> 00:35:33.486 A:middle
to speech tagging output or

00:35:33.486 --> 00:35:34.846 A:middle
named entity recognition output,

00:35:35.236 --> 00:35:36.336 A:middle
they'll all be other word.

00:35:36.536 --> 00:35:37.366 A:middle
Which means that it doesn't

00:35:37.366 --> 00:35:38.986 A:middle
confer a person name or a place

00:35:38.986 --> 00:35:39.536 A:middle
name tag.

00:35:40.206 --> 00:35:41.766 A:middle
It might just be a consequence

00:35:41.766 --> 00:35:42.936 A:middle
of the models not being

00:35:42.936 --> 00:35:44.636 A:middle
downloaded onto your device.

00:35:44.896 --> 00:35:45.766 A:middle
What do I mean by that?

00:35:46.526 --> 00:35:47.706 A:middle
So, all of the part to speech

00:35:47.706 --> 00:35:48.806 A:middle
tagging and the named entity

00:35:48.806 --> 00:35:50.556 A:middle
recognition models are all

00:35:50.556 --> 00:35:52.376 A:middle
downloaded over the air across

00:35:52.696 --> 00:35:53.906 A:middle
the iOS platforms.

00:35:54.396 --> 00:35:54.956 A:middle
And why is that?

00:35:55.566 --> 00:35:57.706 A:middle
So, as you've heard, multiple

00:35:57.706 --> 00:35:59.276 A:middle
times, machine learning is all

00:35:59.276 --> 00:36:01.016 A:middle
about improving models with more

00:35:59.276 --> 00:36:01.016 A:middle
about improving models with more

00:36:01.016 --> 00:36:01.346 A:middle
data.

00:36:01.876 --> 00:36:03.786 A:middle
So, what we would like to do is

00:36:03.786 --> 00:36:05.116 A:middle
revamp and train our models,

00:36:05.116 --> 00:36:06.446 A:middle
from time to time, so that

00:36:06.526 --> 00:36:08.066 A:middle
accuracy of our models is always

00:36:08.066 --> 00:36:08.666 A:middle
state of the art.

00:36:09.236 --> 00:36:10.046 A:middle
And then, we do that.

00:36:10.046 --> 00:36:11.246 A:middle
We want to push that model to

00:36:11.246 --> 00:36:13.546 A:middle
you as an over-the-air update,

00:36:13.696 --> 00:36:14.736 A:middle
as quickly as possible.

00:36:15.366 --> 00:36:16.756 A:middle
So, all these models are not

00:36:16.756 --> 00:36:18.036 A:middle
installed completely on disc.

00:36:18.106 --> 00:36:19.686 A:middle
So, they're all delivered OTA.

00:36:20.346 --> 00:36:22.586 A:middle
So, for iOS, how do you get the

00:36:22.586 --> 00:36:23.036 A:middle
models?

00:36:23.306 --> 00:36:24.426 A:middle
So, as soon as you install a

00:36:24.426 --> 00:36:25.276 A:middle
particular keyboard.

00:36:25.276 --> 00:36:26.416 A:middle
Let's say you install the French

00:36:26.416 --> 00:36:28.326 A:middle
keyboard, all the French assets

00:36:28.326 --> 00:36:29.256 A:middle
will get downloaded to your

00:36:29.256 --> 00:36:29.616 A:middle
device.

00:36:29.986 --> 00:36:30.906 A:middle
And similarly, for other

00:36:30.906 --> 00:36:31.426 A:middle
languages.

00:36:32.466 --> 00:36:33.976 A:middle
Now, the second hint I'd like to

00:36:33.976 --> 00:36:36.466 A:middle
give is if you know what the

00:36:36.466 --> 00:36:37.476 A:middle
language you're dealing with,

00:36:37.846 --> 00:36:38.986 A:middle
you can explicitly set the

00:36:38.986 --> 00:36:39.416 A:middle
language.

00:36:39.806 --> 00:36:41.186 A:middle
What do I mean by that?

00:36:41.186 --> 00:36:42.666 A:middle
So, let's take a string like

00:36:42.666 --> 00:36:42.986 A:middle
Hello.

00:36:43.646 --> 00:36:45.176 A:middle
And if you pass a string like

00:36:45.236 --> 00:36:46.526 A:middle
Hello, to the language

00:36:46.676 --> 00:36:48.516 A:middle
identification API, what do you

00:36:48.516 --> 00:36:49.476 A:middle
expect the language to be?

00:36:50.546 --> 00:36:51.556 A:middle
Hello, is a word that's used in

00:36:51.556 --> 00:36:52.636 A:middle
so many different languages.

00:36:52.776 --> 00:36:54.496 A:middle
Right. So, you can be smart

00:36:54.496 --> 00:36:56.026 A:middle
about how you leverage these

00:36:56.026 --> 00:36:56.306 A:middle
APIs.

00:36:56.306 --> 00:36:57.536 A:middle
And that like the really art of

00:36:57.536 --> 00:36:58.746 A:middle
NLP and machine learning.

00:36:58.746 --> 00:37:01.456 A:middle
The APIs automatically give you

00:36:58.746 --> 00:37:01.456 A:middle
The APIs automatically give you

00:37:01.456 --> 00:37:02.326 A:middle
a lot of information.

00:37:02.326 --> 00:37:04.046 A:middle
But you're also extremely smart

00:37:04.046 --> 00:37:05.296 A:middle
in how you can utilize it in

00:37:05.296 --> 00:37:05.876 A:middle
your own app.

00:37:06.426 --> 00:37:07.566 A:middle
So, if you know that language

00:37:07.616 --> 00:37:09.656 A:middle
explicitly for certain cases, it

00:37:09.656 --> 00:37:10.966 A:middle
might behoove to set that

00:37:10.966 --> 00:37:11.376 A:middle
language.

00:37:11.596 --> 00:37:13.096 A:middle
If a string is fairly long, then

00:37:13.166 --> 00:37:14.096 A:middle
use the APIs to get the

00:37:14.096 --> 00:37:14.486 A:middle
language.

00:37:14.696 --> 00:37:15.986 A:middle
So, it's a tradeoff.

00:37:16.076 --> 00:37:17.116 A:middle
Depending on the application,

00:37:17.116 --> 00:37:18.866 A:middle
you can choose how will you like

00:37:18.926 --> 00:37:19.286 A:middle
to use it.

00:37:20.666 --> 00:37:23.226 A:middle
So, in summary, we've talked

00:37:23.226 --> 00:37:24.406 A:middle
about our natural language

00:37:24.406 --> 00:37:25.226 A:middle
processing APIs.

00:37:26.396 --> 00:37:28.456 A:middle
And these APIs are available

00:37:28.456 --> 00:37:29.556 A:middle
through NSLinguisticTagger.

00:37:30.676 --> 00:37:31.996 A:middle
We've talked about support for

00:37:31.996 --> 00:37:33.436 A:middle
new units in this release.

00:37:33.706 --> 00:37:35.816 A:middle
So, in addition to just word

00:37:35.816 --> 00:37:37.186 A:middle
level enumeration, you can also

00:37:37.506 --> 00:37:39.226 A:middle
get sentence, paragraph, and

00:37:39.226 --> 00:37:40.316 A:middle
document level.

00:37:40.476 --> 00:37:41.796 A:middle
So, these sort of units are

00:37:41.796 --> 00:37:43.466 A:middle
going to become more and more

00:37:43.546 --> 00:37:45.186 A:middle
pertinent as we add more

00:37:45.186 --> 00:37:47.856 A:middle
functionalities to the APIs.

00:37:48.306 --> 00:37:49.916 A:middle
Because of significant revamping

00:37:49.916 --> 00:37:51.966 A:middle
of the code base itself, the

00:37:52.006 --> 00:37:53.796 A:middle
tagger is significantly faster.

00:37:54.416 --> 00:37:55.816 A:middle
It gives us higher accuracy.

00:37:56.156 --> 00:37:57.666 A:middle
And it also supports a lot more

00:37:57.666 --> 00:37:58.356 A:middle
languages.

00:37:59.046 --> 00:38:02.766 A:middle
So, for more information about

00:37:59.046 --> 00:38:02.766 A:middle
So, for more information about

00:38:02.766 --> 00:38:04.036 A:middle
this talk, you can go to the

00:38:04.036 --> 00:38:05.066 A:middle
Session 208.

00:38:05.136 --> 00:38:06.456 A:middle
You can look at the transcripts.

00:38:06.456 --> 00:38:07.436 A:middle
You also have the sample

00:38:07.436 --> 00:38:08.776 A:middle
projects that Doug described,

00:38:08.856 --> 00:38:09.836 A:middle
both the Winnow and the Whisk

00:38:09.906 --> 00:38:10.216 A:middle
project.

00:38:10.836 --> 00:38:12.686 A:middle
But we do have a lot more in

00:38:12.686 --> 00:38:13.906 A:middle
store for you, at WWDC.

00:38:13.906 --> 00:38:15.866 A:middle
First, there are some related

00:38:15.916 --> 00:38:16.356 A:middle
sessions.

00:38:16.616 --> 00:38:17.896 A:middle
So, for those of you who

00:38:17.896 --> 00:38:19.326 A:middle
attended the Introduction to

00:38:19.326 --> 00:38:20.986 A:middle
Core ML session, yesterday,

00:38:21.326 --> 00:38:22.676 A:middle
there's a subsequent session for

00:38:22.676 --> 00:38:23.676 A:middle
Core ML in Depth.

00:38:23.676 --> 00:38:25.076 A:middle
That's tomorrow.

00:38:25.376 --> 00:38:27.196 A:middle
And we also have some very core

00:38:27.196 --> 00:38:28.446 A:middle
Accelerate and Sparse Solvers

00:38:28.446 --> 00:38:29.246 A:middle
which are like matrix

00:38:29.246 --> 00:38:30.656 A:middle
multiplication and low-level

00:38:31.016 --> 00:38:32.146 A:middle
stuff that you can attend on

00:38:32.146 --> 00:38:32.536 A:middle
Thursday.

00:38:33.126 --> 00:38:36.596 A:middle
NLP is a super interesting area

00:38:36.596 --> 00:38:37.456 A:middle
for us.

00:38:37.456 --> 00:38:38.656 A:middle
We're investing a lot of time

00:38:38.656 --> 00:38:39.846 A:middle
and effort into this area.

00:38:39.846 --> 00:38:41.026 A:middle
We really want to understand

00:38:41.536 --> 00:38:42.946 A:middle
what are the sort of APIs that

00:38:42.986 --> 00:38:44.276 A:middle
would make a difference for you?

00:38:44.546 --> 00:38:45.766 A:middle
And difference for our users?

00:38:46.206 --> 00:38:47.706 A:middle
Right. So, just solving

00:38:47.706 --> 00:38:49.686 A:middle
something for the sake of

00:38:49.686 --> 00:38:51.096 A:middle
solving it is not our objective.

00:38:51.096 --> 00:38:52.606 A:middle
We really want to hear from you.

00:38:52.606 --> 00:38:53.706 A:middle
We would like to hear your

00:38:53.706 --> 00:38:54.576 A:middle
feedback about what are the

00:38:54.576 --> 00:38:55.946 A:middle
problems that you face, with

00:38:55.946 --> 00:38:56.876 A:middle
respect to text classes?

00:38:56.876 --> 00:38:58.046 A:middle
And what are the sort of APIs

00:38:58.046 --> 00:38:59.466 A:middle
that would really make your life

00:38:59.526 --> 00:38:59.876 A:middle
better?

00:39:00.366 --> 00:39:01.656 A:middle
So, if we can find a good middle

00:39:01.656 --> 00:39:03.536 A:middle
ground for the features that we

00:39:03.536 --> 00:39:05.666 A:middle
develop and also, those that can

00:39:05.666 --> 00:39:07.246 A:middle
be exposed as APIs to you.

00:39:07.596 --> 00:39:08.746 A:middle
I think it's be great.

00:39:08.746 --> 00:39:10.286 A:middle
So, please get the conversation

00:39:10.286 --> 00:39:10.666 A:middle
started.

00:39:10.716 --> 00:39:12.816 A:middle
Come talk to us, as part of the

00:39:12.816 --> 00:39:13.106 A:middle
lab.

00:39:13.106 --> 00:39:15.756 A:middle
Tell us your problems and tell

00:39:15.756 --> 00:39:16.966 A:middle
us your interest.

00:39:16.966 --> 00:39:18.206 A:middle
And what you'd like to hear and

00:39:18.206 --> 00:39:19.516 A:middle
what you'd like us to do.

00:39:19.906 --> 00:39:21.996 A:middle
And we're all ears for it.

00:39:22.416 --> 00:39:22.846 A:middle
Thank you.

00:39:23.516 --> 00:39:28.500 A:middle
[ Applause ]
