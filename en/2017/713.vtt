WEBVTT

00:00:24.516 --> 00:00:28.746 A:middle
[ Applause ]

00:00:29.246 --> 00:00:32.226 A:middle
&gt;&gt; Hello. Welcome to WWDC.

00:00:32.226 --> 00:00:33.716 A:middle
I'm Brad Jensen and today we're

00:00:33.716 --> 00:00:35.026 A:middle
going to be talking about What's

00:00:35.026 --> 00:00:36.766 A:middle
New in Location Technologies.

00:00:37.286 --> 00:00:39.726 A:middle
We've got three topics that

00:00:39.726 --> 00:00:40.586 A:middle
we're going to cover today.

00:00:41.356 --> 00:00:42.916 A:middle
First we're going to talk about

00:00:42.956 --> 00:00:44.166 A:middle
some miscellaneous API

00:00:44.256 --> 00:00:45.296 A:middle
improvements we've made.

00:00:46.196 --> 00:00:47.586 A:middle
After that we'll talk about our

00:00:47.586 --> 00:00:49.506 A:middle
big change this year, how we've

00:00:49.506 --> 00:00:51.406 A:middle
revised our authorization and

00:00:51.406 --> 00:00:53.596 A:middle
usage reporting story, and

00:00:53.596 --> 00:00:54.576 A:middle
throughout the presentation

00:00:54.576 --> 00:00:55.946 A:middle
we'll also touch on best

00:00:55.946 --> 00:00:57.336 A:middle
practices given the changes

00:00:57.336 --> 00:00:58.046 A:middle
we've made this year.

00:00:58.496 --> 00:01:00.996 A:middle
Now, a word of warning.

00:01:01.276 --> 00:01:02.746 A:middle
This presentation is geared

00:01:02.746 --> 00:01:03.796 A:middle
towards developers that are

00:01:03.796 --> 00:01:05.356 A:middle
already familiar with Core

00:01:05.356 --> 00:01:07.856 A:middle
Location, so if you're new to

00:01:07.856 --> 00:01:09.196 A:middle
our framework, we recommend you

00:01:09.196 --> 00:01:10.376 A:middle
check out our documentation

00:01:10.376 --> 00:01:11.036 A:middle
afterwards.

00:01:11.916 --> 00:01:13.696 A:middle
In addition, our session from

00:01:13.696 --> 00:01:14.926 A:middle
last year has a lot of helpful

00:01:14.926 --> 00:01:15.856 A:middle
advice for newcomers.

00:01:16.766 --> 00:01:17.946 A:middle
So let's get started.

00:01:19.686 --> 00:01:21.406 A:middle
For users of our geocoding API,

00:01:21.956 --> 00:01:23.176 A:middle
we have some exciting changes

00:01:23.176 --> 00:01:23.456 A:middle
for you.

00:01:24.276 --> 00:01:25.446 A:middle
We've added support for

00:01:25.446 --> 00:01:27.376 A:middle
interoperation with the Contacts

00:01:27.376 --> 00:01:27.796 A:middle
framework.

00:01:28.816 --> 00:01:31.296 A:middle
So you can now forward geocode a

00:01:31.396 --> 00:01:32.486 A:middle
CNPostalAddress.

00:01:33.376 --> 00:01:34.756 A:middle
And additionally, when you get a

00:01:34.846 --> 00:01:37.016 A:middle
CLPlacemark result, you can get

00:01:37.016 --> 00:01:38.676 A:middle
a CNPostalAddress from that

00:01:38.676 --> 00:01:39.176 A:middle
placemark.

00:01:40.576 --> 00:01:41.606 A:middle
Now, this is meant to be the

00:01:41.606 --> 00:01:43.226 A:middle
modern replacement for our old

00:01:43.226 --> 00:01:44.466 A:middle
support for the Address Book

00:01:44.466 --> 00:01:44.916 A:middle
framework.

00:01:45.486 --> 00:01:47.236 A:middle
In particular, you could geocode

00:01:47.236 --> 00:01:49.356 A:middle
an address dictionary and get an

00:01:49.426 --> 00:01:50.446 A:middle
address dictionary out of a

00:01:50.446 --> 00:01:50.896 A:middle
placemark.

00:01:51.876 --> 00:01:53.696 A:middle
On platforms where the Contacts

00:01:53.696 --> 00:01:54.846 A:middle
framework is available, we're

00:01:54.846 --> 00:01:56.266 A:middle
deprecating those address

00:01:56.266 --> 00:01:57.676 A:middle
dictionary API's.

00:01:58.296 --> 00:02:00.846 A:middle
However, on tvOS the Contacts

00:02:00.846 --> 00:02:02.386 A:middle
framework isn't available and so

00:02:02.386 --> 00:02:04.206 A:middle
you can continue to use those

00:02:04.206 --> 00:02:06.306 A:middle
address dictionary API's.

00:02:08.196 --> 00:02:09.666 A:middle
We're also adding support for

00:02:09.696 --> 00:02:11.586 A:middle
geocoding with a preferred

00:02:11.586 --> 00:02:12.156 A:middle
locale.

00:02:13.756 --> 00:02:15.916 A:middle
This won't impact which results

00:02:15.916 --> 00:02:17.726 A:middle
you get, only which language

00:02:17.726 --> 00:02:18.816 A:middle
they're returned to you in.

00:02:19.816 --> 00:02:21.036 A:middle
It's important to note that the

00:02:21.036 --> 00:02:22.566 A:middle
default behavior for Core

00:02:22.566 --> 00:02:24.796 A:middle
Location's geocoder has always

00:02:24.866 --> 00:02:26.606 A:middle
been to return results in the

00:02:26.606 --> 00:02:28.356 A:middle
user's preferred language.

00:02:29.166 --> 00:02:30.486 A:middle
If you specify a preferred

00:02:30.486 --> 00:02:32.286 A:middle
locale, you are overriding the

00:02:32.286 --> 00:02:34.246 A:middle
user's chosen language

00:02:34.246 --> 00:02:34.826 A:middle
preference.

00:02:36.126 --> 00:02:37.296 A:middle
That might sound bad, but there

00:02:37.296 --> 00:02:38.226 A:middle
are actually times when it makes

00:02:38.226 --> 00:02:38.906 A:middle
a lot of sense.

00:02:40.036 --> 00:02:41.306 A:middle
For example, if you're making a

00:02:41.306 --> 00:02:43.516 A:middle
travel guide up, you might want

00:02:43.516 --> 00:02:45.406 A:middle
to display text in your app that

00:02:45.406 --> 00:02:47.006 A:middle
matches the text the user would

00:02:47.006 --> 00:02:48.196 A:middle
see in the real world.

00:02:48.776 --> 00:02:49.906 A:middle
In that case you would want to

00:02:49.936 --> 00:02:51.436 A:middle
provide a preferred locale to

00:02:51.436 --> 00:02:53.776 A:middle
the geocoder that produces

00:02:53.776 --> 00:02:55.246 A:middle
results appropriate for the

00:02:55.246 --> 00:02:56.606 A:middle
region the user is visiting.

00:02:57.156 --> 00:03:00.886 A:middle
We've spent some time improving

00:03:00.926 --> 00:03:02.786 A:middle
our heading updates API as well.

00:03:03.396 --> 00:03:04.536 A:middle
Before we get to that, let's

00:03:04.626 --> 00:03:05.916 A:middle
just make sure we all understand

00:03:05.916 --> 00:03:06.416 A:middle
the jargon.

00:03:07.996 --> 00:03:09.996 A:middle
Heading refers to the direction

00:03:09.996 --> 00:03:13.496 A:middle
that you are facing, and course

00:03:13.856 --> 00:03:15.096 A:middle
is the direction you're actually

00:03:15.096 --> 00:03:15.586 A:middle
moving.

00:03:16.406 --> 00:03:17.966 A:middle
Now, with boats and planes you

00:03:17.966 --> 00:03:19.576 A:middle
tend to see a disconnect between

00:03:19.576 --> 00:03:21.646 A:middle
heading and course due to wind

00:03:21.646 --> 00:03:23.386 A:middle
or sea currents.

00:03:25.666 --> 00:03:27.266 A:middle
With cars, on the other hand,

00:03:27.696 --> 00:03:28.756 A:middle
you almost never see a

00:03:28.756 --> 00:03:29.916 A:middle
meaningful difference between

00:03:29.916 --> 00:03:30.836 A:middle
heading and course.

00:03:32.366 --> 00:03:33.986 A:middle
Even if there are very strong

00:03:33.986 --> 00:03:35.466 A:middle
winds that push the car to one

00:03:35.466 --> 00:03:37.086 A:middle
side or the other, the driver

00:03:37.086 --> 00:03:38.126 A:middle
will tend to compensate.

00:03:38.536 --> 00:03:39.786 A:middle
They don't want to get pushed

00:03:39.786 --> 00:03:40.836 A:middle
out of their lane, or even

00:03:40.836 --> 00:03:41.826 A:middle
worse, off the road.

00:03:42.736 --> 00:03:44.276 A:middle
This is a very convenient

00:03:44.276 --> 00:03:46.646 A:middle
observation because if we're

00:03:46.646 --> 00:03:49.086 A:middle
computing GPS estimates, we're

00:03:49.086 --> 00:03:50.536 A:middle
very likely to have a good

00:03:50.536 --> 00:03:52.436 A:middle
estimate of the device's course,

00:03:52.906 --> 00:03:54.146 A:middle
but sometimes computing the

00:03:54.146 --> 00:03:54.826 A:middle
heading can be a little bit more

00:03:54.826 --> 00:03:54.976 A:middle
tricky.

00:03:59.276 --> 00:04:01.386 A:middle
Even if we're able to accurately

00:04:01.386 --> 00:04:02.586 A:middle
estimate the heading of the

00:04:02.586 --> 00:04:04.256 A:middle
device, it might not be the

00:04:04.316 --> 00:04:04.986 A:middle
right heading.

00:04:06.246 --> 00:04:08.416 A:middle
For example, let's suppose the

00:04:08.416 --> 00:04:10.116 A:middle
user is navigating in their car

00:04:10.206 --> 00:04:11.806 A:middle
and they've mounted their iPhone

00:04:11.806 --> 00:04:12.636 A:middle
to their dashboard.

00:04:13.216 --> 00:04:14.316 A:middle
There's a very good chance that

00:04:14.316 --> 00:04:15.696 A:middle
they've angled their iPhone to

00:04:15.696 --> 00:04:17.456 A:middle
face themselves, but when they

00:04:17.456 --> 00:04:18.656 A:middle
do that, they introduce a

00:04:18.656 --> 00:04:20.096 A:middle
disconnect between the heading

00:04:20.096 --> 00:04:21.866 A:middle
of their car and the heading of

00:04:21.866 --> 00:04:24.206 A:middle
their iPhone, but when they're

00:04:24.206 --> 00:04:25.376 A:middle
navigating, they'd really like

00:04:25.376 --> 00:04:26.956 A:middle
to see the heading of their car.

00:04:29.336 --> 00:04:31.816 A:middle
Luckily, we just found a really

00:04:31.816 --> 00:04:33.286 A:middle
good way to estimate the heading

00:04:33.286 --> 00:04:33.846 A:middle
of the car.

00:04:33.926 --> 00:04:37.906 A:middle
We can use the course of the

00:04:38.126 --> 00:04:38.526 A:middle
iPhone.

00:04:38.526 --> 00:04:41.116 A:middle
So in iOS 11 Core Location will

00:04:41.116 --> 00:04:42.616 A:middle
now automatically detect

00:04:42.616 --> 00:04:44.236 A:middle
situations where heading and

00:04:44.236 --> 00:04:46.036 A:middle
course should probably be in

00:04:46.036 --> 00:04:47.836 A:middle
agreement and it will leverage

00:04:47.916 --> 00:04:49.776 A:middle
course information to provide a

00:04:49.776 --> 00:04:51.336 A:middle
more accurate heading update.

00:04:51.876 --> 00:04:54.366 A:middle
It's important to note that this

00:04:54.366 --> 00:04:56.286 A:middle
behavior is fully automatic and

00:04:56.386 --> 00:04:57.976 A:middle
always on when you use Core

00:04:57.976 --> 00:04:59.046 A:middle
Location's heading API.

00:05:00.246 --> 00:05:01.986 A:middle
So if you're creating an app for

00:05:03.166 --> 00:05:05.416 A:middle
planes or boats or augmented

00:05:05.416 --> 00:05:08.046 A:middle
reality, then you probably want

00:05:08.046 --> 00:05:09.346 A:middle
to use Core Motion's

00:05:09.736 --> 00:05:12.166 A:middle
CMDeviceMotion API instead.

00:05:13.576 --> 00:05:15.166 A:middle
Our detection logic is very

00:05:15.166 --> 00:05:16.786 A:middle
good, but it's not flawless.

00:05:16.816 --> 00:05:17.966 A:middle
There are times when it will

00:05:17.966 --> 00:05:19.166 A:middle
make the wrong call.

00:05:19.686 --> 00:05:20.956 A:middle
If you'd like to learn more

00:05:20.956 --> 00:05:22.046 A:middle
about their API, they had a

00:05:22.046 --> 00:05:22.846 A:middle
session this year.

00:05:23.206 --> 00:05:24.646 A:middle
I think it's definitely worth

00:05:24.646 --> 00:05:25.786 A:middle
checking out.

00:05:28.036 --> 00:05:29.596 A:middle
We've also spent a lot of time

00:05:29.596 --> 00:05:31.126 A:middle
improving our indoor positioning

00:05:31.126 --> 00:05:31.576 A:middle
system.

00:05:32.236 --> 00:05:34.226 A:middle
As you saw in the keynote, Maps

00:05:34.226 --> 00:05:36.516 A:middle
will now display floor plans for

00:05:36.516 --> 00:05:38.026 A:middle
many indoor venues throughout

00:05:38.026 --> 00:05:38.496 A:middle
the world.

00:05:40.376 --> 00:05:42.106 A:middle
At these venues any app that

00:05:42.106 --> 00:05:44.306 A:middle
requests best accuracy location

00:05:44.596 --> 00:05:46.486 A:middle
will automatically receive our

00:05:46.486 --> 00:05:48.476 A:middle
high accuracy indoor location

00:05:48.476 --> 00:05:49.086 A:middle
estimates.

00:05:49.796 --> 00:05:50.896 A:middle
We have four exciting

00:05:50.896 --> 00:05:52.236 A:middle
improvements that I want to

00:05:52.236 --> 00:05:54.366 A:middle
share with you today.

00:05:54.536 --> 00:05:56.516 A:middle
First, we've improved the

00:05:56.596 --> 00:05:58.286 A:middle
accuracy of our estimates.

00:05:59.336 --> 00:06:01.366 A:middle
Our estimates are GPS quality or

00:06:01.366 --> 00:06:01.766 A:middle
better.

00:06:03.136 --> 00:06:04.896 A:middle
Second, we've improved the

00:06:04.896 --> 00:06:07.566 A:middle
responsiveness of our indoor

00:06:07.566 --> 00:06:08.436 A:middle
positioning system.

00:06:08.916 --> 00:06:10.446 A:middle
When the user first enters a

00:06:10.446 --> 00:06:12.396 A:middle
venue, you'll start to receive

00:06:12.396 --> 00:06:13.886 A:middle
those indoor estimates much more

00:06:13.886 --> 00:06:15.646 A:middle
quickly than you did in iOS 10.

00:06:16.766 --> 00:06:18.056 A:middle
We've also improved how quickly

00:06:18.146 --> 00:06:19.916 A:middle
we detect floor transitions.

00:06:21.296 --> 00:06:22.666 A:middle
You'll get notified of the new

00:06:22.666 --> 00:06:24.306 A:middle
floor more quickly than you did

00:06:24.306 --> 00:06:27.516 A:middle
in iOS 10.

00:06:27.726 --> 00:06:29.376 A:middle
We've improved the availability.

00:06:29.656 --> 00:06:31.006 A:middle
And I don't just mean the number

00:06:31.006 --> 00:06:32.926 A:middle
of venues that Core Location

00:06:32.926 --> 00:06:33.506 A:middle
supports.

00:06:33.786 --> 00:06:35.466 A:middle
If the user wanders into a

00:06:35.516 --> 00:06:36.716 A:middle
region of the venue that maybe

00:06:36.716 --> 00:06:38.766 A:middle
hasn't been surveyed, you'll

00:06:38.766 --> 00:06:40.546 A:middle
still get quality indoor

00:06:40.546 --> 00:06:41.936 A:middle
estimates through Core Location.

00:06:42.536 --> 00:06:45.686 A:middle
We've improved the

00:06:45.806 --> 00:06:48.436 A:middle
interoperability of the indoor

00:06:48.436 --> 00:06:50.626 A:middle
positioning system with wireless

00:06:50.626 --> 00:06:51.206 A:middle
accessories.

00:06:51.976 --> 00:06:54.156 A:middle
So even if the user is, say,

00:06:54.156 --> 00:06:55.926 A:middle
streaming Beats 1 to their

00:06:55.996 --> 00:06:58.266 A:middle
AirPods, you'll still receive

00:06:58.376 --> 00:06:59.686 A:middle
quality indoor location

00:06:59.686 --> 00:06:59.976 A:middle
estimates.

00:07:05.076 --> 00:07:07.176 A:middle
For watchOS we're making our

00:07:07.176 --> 00:07:08.776 A:middle
continuous background location

00:07:08.776 --> 00:07:09.826 A:middle
API available.

00:07:10.856 --> 00:07:12.186 A:middle
You've probably already heard

00:07:12.186 --> 00:07:13.636 A:middle
about this API, but just in

00:07:13.636 --> 00:07:16.236 A:middle
case, this API allows your app

00:07:16.306 --> 00:07:18.346 A:middle
to receive location updates even

00:07:18.346 --> 00:07:19.776 A:middle
as it enters the background.

00:07:21.506 --> 00:07:23.436 A:middle
Now, in watchOS 3 it was

00:07:23.436 --> 00:07:24.786 A:middle
possible to get very similar

00:07:24.786 --> 00:07:26.196 A:middle
functionality using a

00:07:26.196 --> 00:07:27.696 A:middle
combination of Core Location and

00:07:27.696 --> 00:07:28.196 A:middle
HealthKit.

00:07:29.206 --> 00:07:31.536 A:middle
An HKWorkoutSession would allow

00:07:31.536 --> 00:07:32.956 A:middle
your app to continue receiving

00:07:32.956 --> 00:07:36.546 A:middle
location updates even if your

00:07:36.546 --> 00:07:37.816 A:middle
app was in the background.

00:07:39.136 --> 00:07:41.166 A:middle
However, we wanted to allow you

00:07:41.166 --> 00:07:42.806 A:middle
to create new location-based

00:07:42.806 --> 00:07:43.796 A:middle
experiences that weren't

00:07:43.796 --> 00:07:45.806 A:middle
necessarily workout related, and

00:07:45.806 --> 00:07:46.906 A:middle
so we're bringing our general

00:07:46.946 --> 00:07:48.576 A:middle
purpose continuous background

00:07:48.576 --> 00:07:50.616 A:middle
location API to watchOS.

00:07:51.156 --> 00:07:54.886 A:middle
Our usual guidance still

00:07:54.886 --> 00:07:55.476 A:middle
applies.

00:07:56.256 --> 00:07:58.266 A:middle
This is a fairly power expensive

00:07:58.266 --> 00:08:00.006 A:middle
API and so you should think

00:08:00.006 --> 00:08:02.426 A:middle
twice before using it, but if

00:08:02.426 --> 00:08:04.156 A:middle
you're creating, say, a

00:08:04.156 --> 00:08:06.376 A:middle
navigation app or a fitness app,

00:08:07.266 --> 00:08:08.446 A:middle
the continuous background

00:08:08.446 --> 00:08:10.116 A:middle
location is almost certainly

00:08:10.116 --> 00:08:10.956 A:middle
what you're looking for.

00:08:11.556 --> 00:08:14.416 A:middle
We wanted to ensure that this

00:08:14.416 --> 00:08:15.806 A:middle
functionality was exposed in

00:08:15.806 --> 00:08:18.986 A:middle
only one place, and so in

00:08:18.986 --> 00:08:22.246 A:middle
watchOS 4 HKWorkoutSessions no

00:08:22.246 --> 00:08:24.846 A:middle
longer give your app access to

00:08:24.846 --> 00:08:27.556 A:middle
location in the background.

00:08:28.396 --> 00:08:29.576 A:middle
Legacy apps will continue to

00:08:29.576 --> 00:08:30.966 A:middle
work, but when you link against

00:08:30.966 --> 00:08:33.516 A:middle
the watchOS 4 SDK, you must

00:08:33.516 --> 00:08:34.936 A:middle
adopt the continuous background

00:08:34.936 --> 00:08:35.766 A:middle
location API.

00:08:36.946 --> 00:08:38.176 A:middle
Otherwise, your app will be

00:08:38.176 --> 00:08:39.616 A:middle
unable to access the user's

00:08:39.616 --> 00:08:40.096 A:middle
location.

00:08:41.586 --> 00:08:43.726 A:middle
Luckily, it's very easy to adopt

00:08:43.726 --> 00:08:43.996 A:middle
our API.

00:08:43.996 --> 00:08:45.536 A:middle
There are simply three easy

00:08:45.536 --> 00:08:46.076 A:middle
steps.

00:08:46.956 --> 00:08:49.146 A:middle
First, you enable the

00:08:49.146 --> 00:08:50.976 A:middle
LocationUpdates background mode.

00:08:51.406 --> 00:08:52.856 A:middle
Simply navigate to the

00:08:52.856 --> 00:08:54.316 A:middle
Capabilities tab in Xcode,

00:08:54.696 --> 00:08:55.896 A:middle
scroll down to Background Modes,

00:08:55.896 --> 00:08:57.226 A:middle
and check the Location Updates

00:08:57.226 --> 00:08:57.636 A:middle
box.

00:08:58.106 --> 00:09:01.726 A:middle
Second, you need to set the

00:09:01.726 --> 00:09:03.396 A:middle
allowsBackgroundLocationUpdates

00:09:03.456 --> 00:09:05.246 A:middle
property to True on your

00:09:05.246 --> 00:09:06.016 A:middle
Location Manager.

00:09:07.496 --> 00:09:09.156 A:middle
We recommend you only do this

00:09:09.496 --> 00:09:10.886 A:middle
after the user has performed

00:09:10.886 --> 00:09:12.696 A:middle
some action which requires --

00:09:13.676 --> 00:09:13.926 A:middle
sorry.

00:09:13.966 --> 00:09:14.576 A:middle
Getting a little ahead of

00:09:14.576 --> 00:09:15.226 A:middle
myself.

00:09:15.226 --> 00:09:16.866 A:middle
We recommend you do this only

00:09:16.866 --> 00:09:20.316 A:middle
after the user has initiated the

00:09:20.316 --> 00:09:21.186 A:middle
workout session or the

00:09:21.186 --> 00:09:22.106 A:middle
navigation session.

00:09:22.436 --> 00:09:23.756 A:middle
That way you don't accidentally

00:09:23.756 --> 00:09:25.176 A:middle
start the continuous background

00:09:25.176 --> 00:09:26.266 A:middle
location session before you

00:09:26.266 --> 00:09:28.296 A:middle
meant to.

00:09:28.986 --> 00:09:30.806 A:middle
Finally, you simply call

00:09:30.806 --> 00:09:32.326 A:middle
startUpdatingLocation while your

00:09:32.326 --> 00:09:33.166 A:middle
app is in the foreground.

00:09:33.996 --> 00:09:35.016 A:middle
When your app enters the

00:09:35.016 --> 00:09:36.616 A:middle
background, Core Location will

00:09:36.616 --> 00:09:37.756 A:middle
keep your app running and

00:09:37.756 --> 00:09:39.026 A:middle
continue to deliver location

00:09:39.026 --> 00:09:39.506 A:middle
updates.

00:09:40.026 --> 00:09:43.096 A:middle
While we're talking about

00:09:43.206 --> 00:09:44.616 A:middle
workout apps, we have some

00:09:44.616 --> 00:09:45.676 A:middle
advice to help you create the

00:09:45.676 --> 00:09:47.176 A:middle
best possible experience for

00:09:47.176 --> 00:09:47.986 A:middle
your users.

00:09:49.916 --> 00:09:53.136 A:middle
First, we recommend you continue

00:09:53.136 --> 00:09:54.876 A:middle
to use HealthKit, even though

00:09:54.996 --> 00:09:57.156 A:middle
it's possible to create a

00:09:57.336 --> 00:09:58.796 A:middle
fitness app that doesn't use

00:09:58.796 --> 00:10:00.756 A:middle
HealthKit or HKWorkoutSession,

00:10:01.666 --> 00:10:03.686 A:middle
doing so will make your app miss

00:10:03.686 --> 00:10:05.826 A:middle
out on a lot of special tuning

00:10:05.916 --> 00:10:07.286 A:middle
we've put into Core Location for

00:10:07.286 --> 00:10:08.436 A:middle
workout scenarios.

00:10:09.626 --> 00:10:11.596 A:middle
So continue to use HealthKit and

00:10:11.646 --> 00:10:12.816 A:middle
HKWorkoutSession.

00:10:13.296 --> 00:10:16.826 A:middle
Second, if you know that your

00:10:16.826 --> 00:10:18.856 A:middle
user is in a pedestrian workout,

00:10:19.756 --> 00:10:21.936 A:middle
we recommend you use CMPedometer

00:10:21.936 --> 00:10:24.006 A:middle
to estimate how far the user has

00:10:24.006 --> 00:10:24.376 A:middle
traveled.

00:10:25.946 --> 00:10:27.226 A:middle
In some environments it can be

00:10:27.226 --> 00:10:28.806 A:middle
very tricky to accurately

00:10:28.806 --> 00:10:30.266 A:middle
estimate the user's location,

00:10:31.176 --> 00:10:32.666 A:middle
and if the user goes through a

00:10:32.696 --> 00:10:33.666 A:middle
run in one of those

00:10:33.666 --> 00:10:35.226 A:middle
environments, you'll find it's

00:10:35.286 --> 00:10:37.096 A:middle
even harder to accurately

00:10:37.096 --> 00:10:38.496 A:middle
estimate how far they have

00:10:38.536 --> 00:10:39.026 A:middle
traveled.

00:10:39.896 --> 00:10:40.956 A:middle
But if you know they're in a

00:10:40.956 --> 00:10:42.386 A:middle
pedestrian workout and you use

00:10:42.386 --> 00:10:44.246 A:middle
CMPedometer, your app won't be

00:10:44.246 --> 00:10:44.976 A:middle
affected by those difficulties.

00:10:49.146 --> 00:10:51.666 A:middle
Okay. That's the miscellaneous

00:10:51.666 --> 00:10:52.036 A:middle
topics.

00:10:52.646 --> 00:10:53.636 A:middle
Let's get to the big one;

00:10:54.176 --> 00:10:55.576 A:middle
authorization and use of

00:10:55.576 --> 00:10:56.086 A:middle
reporting.

00:10:56.696 --> 00:10:58.516 A:middle
We spent a lot of time iterating

00:10:58.666 --> 00:11:00.136 A:middle
on how Core Location's

00:11:00.206 --> 00:11:01.266 A:middle
authorization and usage

00:11:01.266 --> 00:11:03.206 A:middle
reporting works, and we've got

00:11:03.206 --> 00:11:04.536 A:middle
some exciting changes that we

00:11:04.536 --> 00:11:06.316 A:middle
think your users are going to

00:11:06.316 --> 00:11:06.656 A:middle
love.

00:11:08.856 --> 00:11:11.046 A:middle
First, let's quickly review how

00:11:11.046 --> 00:11:11.776 A:middle
it all works.

00:11:12.716 --> 00:11:14.486 A:middle
Core Location supports two

00:11:14.606 --> 00:11:17.106 A:middle
authorization modes; WhenInUse

00:11:17.446 --> 00:11:18.226 A:middle
and Always.

00:11:19.596 --> 00:11:21.586 A:middle
Always authorization allows your

00:11:21.586 --> 00:11:23.096 A:middle
app to access the user's

00:11:23.096 --> 00:11:25.286 A:middle
location anytime your app is

00:11:25.286 --> 00:11:25.646 A:middle
running.

00:11:26.956 --> 00:11:28.856 A:middle
Additionally, Always authorized

00:11:28.856 --> 00:11:30.396 A:middle
apps can use our background

00:11:30.396 --> 00:11:31.476 A:middle
monitoring API's.

00:11:32.436 --> 00:11:33.656 A:middle
These allow your app to get

00:11:33.656 --> 00:11:35.356 A:middle
runtime and receive information

00:11:35.356 --> 00:11:37.086 A:middle
when various location-based

00:11:37.086 --> 00:11:37.826 A:middle
events have occurred.

00:11:38.606 --> 00:11:40.036 A:middle
For example, the region

00:11:40.036 --> 00:11:41.656 A:middle
monitoring API will launch your

00:11:41.656 --> 00:11:43.896 A:middle
app whenever the user arrives at

00:11:43.966 --> 00:11:46.276 A:middle
or departs from a region of your

00:11:46.276 --> 00:11:46.706 A:middle
choosing.

00:11:49.316 --> 00:11:51.466 A:middle
The WhenInUse authorization mode

00:11:51.606 --> 00:11:53.516 A:middle
allows your app to access the

00:11:53.516 --> 00:11:56.226 A:middle
user's location anytime your app

00:11:56.226 --> 00:11:58.006 A:middle
is considered in use.

00:11:59.316 --> 00:12:00.886 A:middle
Usually if your app is in use,

00:12:00.916 --> 00:12:01.666 A:middle
that means it's in the

00:12:01.666 --> 00:12:03.436 A:middle
foreground, but that's not

00:12:03.476 --> 00:12:04.346 A:middle
always the case.

00:12:05.216 --> 00:12:07.276 A:middle
For example, if you're using the

00:12:07.276 --> 00:12:08.446 A:middle
continuous background location

00:12:08.446 --> 00:12:11.616 A:middle
API, on iOS Core Location will

00:12:11.616 --> 00:12:13.306 A:middle
draw a blue bar, a blue

00:12:13.306 --> 00:12:14.786 A:middle
double-height status bar at the

00:12:14.786 --> 00:12:16.606 A:middle
top of the screen, reminding the

00:12:16.606 --> 00:12:18.316 A:middle
user that the app is still

00:12:18.316 --> 00:12:19.596 A:middle
running and still accessing

00:12:19.596 --> 00:12:21.246 A:middle
their location, and in that way

00:12:21.246 --> 00:12:23.256 A:middle
your app is still considered in

00:12:23.956 --> 00:12:24.106 A:middle
use.

00:12:24.676 --> 00:12:26.736 A:middle
We introduced the WhenInUse

00:12:26.736 --> 00:12:27.996 A:middle
authorization mode because we

00:12:27.996 --> 00:12:30.466 A:middle
wanted to allow users a greater

00:12:30.466 --> 00:12:32.596 A:middle
level of control over how apps

00:12:32.626 --> 00:12:33.856 A:middle
access their private data.

00:12:34.936 --> 00:12:35.966 A:middle
And users love this.

00:12:36.486 --> 00:12:37.806 A:middle
They love knowing that apps can

00:12:37.806 --> 00:12:39.466 A:middle
only access their location at

00:12:39.466 --> 00:12:40.726 A:middle
times when they want it to.

00:12:41.756 --> 00:12:43.206 A:middle
And we think this represents a

00:12:43.206 --> 00:12:47.666 A:middle
great balance between the user's

00:12:47.666 --> 00:12:49.386 A:middle
ability to control how your app

00:12:49.386 --> 00:12:51.556 A:middle
accesses their location and your

00:12:51.556 --> 00:12:53.226 A:middle
ability to create compelling app

00:12:53.226 --> 00:12:54.696 A:middle
experiences for the user.

00:12:55.686 --> 00:12:57.106 A:middle
Since we introduced the

00:12:57.106 --> 00:12:58.716 A:middle
WhenInUse authorization mode the

00:12:58.716 --> 00:13:00.266 A:middle
response has been tremendous.

00:13:01.166 --> 00:13:03.266 A:middle
Almost 80 percent of

00:13:03.266 --> 00:13:05.326 A:middle
location-using apps on iOS

00:13:05.636 --> 00:13:07.426 A:middle
support WhenInUse authorization.

00:13:08.306 --> 00:13:11.226 A:middle
A mere 21 percent have chosen to

00:13:11.226 --> 00:13:13.136 A:middle
require Always authorization

00:13:13.136 --> 00:13:15.536 A:middle
from the user.

00:13:15.666 --> 00:13:17.016 A:middle
Users love the WhenInUse

00:13:17.016 --> 00:13:18.486 A:middle
authorization mode, and thanks

00:13:18.486 --> 00:13:19.886 A:middle
to your efforts, they almost

00:13:19.886 --> 00:13:20.996 A:middle
always have it available to

00:13:20.996 --> 00:13:21.226 A:middle
them.

00:13:21.946 --> 00:13:24.766 A:middle
We think this is fantastic, but

00:13:24.766 --> 00:13:25.946 A:middle
we wanted to see if we could do

00:13:25.946 --> 00:13:26.306 A:middle
better.

00:13:27.156 --> 00:13:28.346 A:middle
Now, let's look at some of the

00:13:28.346 --> 00:13:30.166 A:middle
reasons why an app might choose

00:13:30.166 --> 00:13:31.876 A:middle
to require Always authorization.

00:13:32.416 --> 00:13:36.386 A:middle
We think that one of the common

00:13:36.386 --> 00:13:38.546 A:middle
reasons is the developer's

00:13:38.856 --> 00:13:39.946 A:middle
simply confused.

00:13:40.516 --> 00:13:43.056 A:middle
It turns out that many apps

00:13:43.056 --> 00:13:44.156 A:middle
which require Always

00:13:44.156 --> 00:13:46.436 A:middle
authorization don't actually use

00:13:46.586 --> 00:13:48.156 A:middle
any of our background monitoring

00:13:48.256 --> 00:13:48.646 A:middle
API's.

00:13:50.026 --> 00:13:51.756 A:middle
It's very likely that these apps

00:13:51.756 --> 00:13:53.556 A:middle
would continue to function just

00:13:53.556 --> 00:13:54.956 A:middle
fine if they were granted

00:13:54.956 --> 00:13:56.756 A:middle
WhenInUse authorization instead.

00:13:58.776 --> 00:14:00.306 A:middle
But when the user encounters one

00:14:00.306 --> 00:14:02.056 A:middle
of these apps, they don't know

00:14:02.056 --> 00:14:02.366 A:middle
that.

00:14:03.196 --> 00:14:04.646 A:middle
They can't see the app source

00:14:04.646 --> 00:14:05.016 A:middle
code.

00:14:06.046 --> 00:14:07.326 A:middle
They don't know that it won't

00:14:07.326 --> 00:14:10.356 A:middle
monitor them all day and so they

00:14:10.356 --> 00:14:11.646 A:middle
have to treat it as though it

00:14:11.646 --> 00:14:13.376 A:middle
will, and this creates a very

00:14:13.376 --> 00:14:14.686 A:middle
poor user experience.

00:14:15.286 --> 00:14:19.016 A:middle
Now, a second reason we think

00:14:19.016 --> 00:14:20.546 A:middle
that many developers choose to

00:14:20.546 --> 00:14:22.206 A:middle
require Always authorization is

00:14:22.206 --> 00:14:23.156 A:middle
they're simply trying to give

00:14:23.156 --> 00:14:24.316 A:middle
their users the best possible

00:14:24.316 --> 00:14:25.056 A:middle
experience.

00:14:26.476 --> 00:14:29.056 A:middle
See, not all features can be

00:14:29.056 --> 00:14:30.416 A:middle
implemented reasonably with

00:14:30.416 --> 00:14:31.556 A:middle
WhenInUse authorization.

00:14:31.876 --> 00:14:33.986 A:middle
Some basically require Always

00:14:33.986 --> 00:14:36.066 A:middle
authorization, and we think that

00:14:36.066 --> 00:14:37.846 A:middle
these developers simply want to

00:14:37.846 --> 00:14:39.306 A:middle
ensure that their users have

00:14:39.436 --> 00:14:40.946 A:middle
access to all the best that

00:14:40.946 --> 00:14:44.666 A:middle
their app has to offer, but this

00:14:44.666 --> 00:14:46.456 A:middle
makes for a very poor user

00:14:46.456 --> 00:14:48.236 A:middle
experience for the users that

00:14:48.336 --> 00:14:49.486 A:middle
don't wish to grant the app

00:14:49.486 --> 00:14:50.546 A:middle
Always authorization.

00:14:51.516 --> 00:14:52.726 A:middle
They are forced to choose

00:14:52.726 --> 00:14:54.806 A:middle
between granting the app Always,

00:14:55.026 --> 00:14:56.716 A:middle
which is more than they would

00:14:56.716 --> 00:14:58.946 A:middle
like in this example, or

00:14:58.946 --> 00:15:01.356 A:middle
granting it Never, which means

00:15:01.356 --> 00:15:02.566 A:middle
they don't get to benefit from

00:15:02.566 --> 00:15:03.986 A:middle
any of the app's location-based

00:15:03.986 --> 00:15:04.486 A:middle
features.

00:15:05.026 --> 00:15:06.356 A:middle
And their final openings to

00:15:06.356 --> 00:15:08.046 A:middle
grant it Always and then revoke

00:15:08.086 --> 00:15:09.916 A:middle
that authorization after they're

00:15:09.916 --> 00:15:10.786 A:middle
done using the app.

00:15:12.116 --> 00:15:14.286 A:middle
In any case, the user is not

00:15:14.286 --> 00:15:16.346 A:middle
having a great time with this

00:15:18.326 --> 00:15:18.406 A:middle
app.

00:15:18.676 --> 00:15:22.256 A:middle
So for iOS 11 we're asking all

00:15:22.256 --> 00:15:24.136 A:middle
developers with Always

00:15:24.606 --> 00:15:27.166 A:middle
requesting apps to additionally

00:15:27.166 --> 00:15:28.956 A:middle
support the WhenInUse

00:15:28.956 --> 00:15:30.766 A:middle
authorization mode.

00:15:31.956 --> 00:15:34.176 A:middle
This change is both retroactive

00:15:34.336 --> 00:15:36.236 A:middle
and forward-looking, so when the

00:15:36.236 --> 00:15:39.026 A:middle
user updates to iOS 11, they

00:15:39.026 --> 00:15:40.506 A:middle
will be able to authorize any

00:15:40.506 --> 00:15:42.096 A:middle
app that requests Always

00:15:42.096 --> 00:15:44.056 A:middle
authorization the WhenInUse

00:15:44.106 --> 00:15:44.976 A:middle
authorization mode instead.

00:15:49.296 --> 00:15:51.566 A:middle
If you link against the iOS 11

00:15:51.566 --> 00:15:54.326 A:middle
SDK, you must provide a

00:15:54.326 --> 00:15:56.256 A:middle
WhenInUseUsageDescription.

00:15:56.726 --> 00:15:58.146 A:middle
Otherwise, your app will be

00:15:58.186 --> 00:15:59.586 A:middle
unable to request Always

00:15:59.586 --> 00:16:00.336 A:middle
authorization.

00:16:02.576 --> 00:16:04.806 A:middle
Furthermore, when your app

00:16:04.806 --> 00:16:06.216 A:middle
requests Always authorization,

00:16:06.686 --> 00:16:09.096 A:middle
we will additionally display an

00:16:09.096 --> 00:16:10.206 A:middle
option to grant your app

00:16:10.376 --> 00:16:12.236 A:middle
WhenInUse authorization instead.

00:16:12.786 --> 00:16:15.586 A:middle
With these new three option

00:16:15.586 --> 00:16:17.176 A:middle
prompts we have a new

00:16:17.176 --> 00:16:19.096 A:middle
UsageDescription string as well.

00:16:20.316 --> 00:16:21.766 A:middle
Your app needs to provide an

00:16:21.896 --> 00:16:23.246 A:middle
AlwaysAndWhenInUse

00:16:23.426 --> 00:16:24.456 A:middle
UsageDescription.

00:16:25.426 --> 00:16:26.846 A:middle
Since this is a different key

00:16:27.626 --> 00:16:29.536 A:middle
your app must provide it when

00:16:29.536 --> 00:16:31.326 A:middle
you link against the new iOS 11

00:16:31.456 --> 00:16:31.856 A:middle
SDK.

00:16:32.876 --> 00:16:34.746 A:middle
For apps linked against iOS 11

00:16:34.746 --> 00:16:36.466 A:middle
and later, Core Location will

00:16:36.646 --> 00:16:40.256 A:middle
not use the old NSLocationAlways

00:16:40.256 --> 00:16:40.976 A:middle
UsageDescription key.

00:16:45.226 --> 00:16:46.806 A:middle
So let's talk a little bit about

00:16:46.806 --> 00:16:48.156 A:middle
best practices; how does this

00:16:48.156 --> 00:16:48.636 A:middle
change things.

00:16:50.166 --> 00:16:51.406 A:middle
For apps that want Always

00:16:51.406 --> 00:16:53.726 A:middle
authorization we recommend you

00:16:53.726 --> 00:16:55.786 A:middle
provide all three keys, even

00:16:55.966 --> 00:16:57.606 A:middle
that NSLocationAlways

00:16:57.706 --> 00:16:59.016 A:middle
UsageDescription that I just

00:16:59.016 --> 00:17:00.376 A:middle
said we won't use.

00:17:01.316 --> 00:17:04.066 A:middle
And the reason why is if you

00:17:04.066 --> 00:17:05.716 A:middle
want to deploy your app on a

00:17:06.166 --> 00:17:08.116 A:middle
device that's running iOS 10 or

00:17:08.116 --> 00:17:09.786 A:middle
earlier, you need to provide

00:17:09.786 --> 00:17:11.286 A:middle
strings that it can understand,

00:17:11.726 --> 00:17:13.006 A:middle
and so you should continue to

00:17:13.006 --> 00:17:14.956 A:middle
provide that NSLocationAlways

00:17:15.076 --> 00:17:16.026 A:middle
UsageDescription.

00:17:18.496 --> 00:17:22.946 A:middle
Second, your AlwaysAndWhenInUse

00:17:22.946 --> 00:17:24.346 A:middle
UsageDescription should help the

00:17:24.346 --> 00:17:26.946 A:middle
user choose between Always and

00:17:27.156 --> 00:17:27.916 A:middle
WhenInUse.

00:17:28.096 --> 00:17:29.476 A:middle
We'll use it in context where

00:17:29.476 --> 00:17:30.796 A:middle
those are the two options

00:17:30.796 --> 00:17:31.776 A:middle
presented to the user.

00:17:33.246 --> 00:17:35.266 A:middle
So your description should

00:17:35.266 --> 00:17:37.086 A:middle
explain to the user what

00:17:37.156 --> 00:17:38.946 A:middle
features will be enabled if they

00:17:38.946 --> 00:17:40.426 A:middle
select WhenInUse authorization,

00:17:40.676 --> 00:17:41.936 A:middle
and then what additional

00:17:41.936 --> 00:17:43.996 A:middle
features they'll receive if they

00:17:43.996 --> 00:17:45.526 A:middle
choose to grant your app Always

00:17:45.526 --> 00:17:46.196 A:middle
authorization.

00:17:47.236 --> 00:17:49.936 A:middle
For all apps we recommend that

00:17:49.936 --> 00:17:52.036 A:middle
you only request authorization

00:17:52.326 --> 00:17:54.446 A:middle
when you really need it.

00:17:55.056 --> 00:17:56.386 A:middle
If you wait to request

00:17:56.386 --> 00:17:58.026 A:middle
authorization until the user has

00:17:58.026 --> 00:17:59.726 A:middle
performed some action which

00:17:59.726 --> 00:18:01.646 A:middle
requires access to the location,

00:18:02.296 --> 00:18:04.016 A:middle
then when the prompt appears,

00:18:04.096 --> 00:18:05.226 A:middle
the user will have all the

00:18:05.256 --> 00:18:07.356 A:middle
context, all this intuitive

00:18:07.356 --> 00:18:09.296 A:middle
understanding that they need in

00:18:09.296 --> 00:18:11.216 A:middle
order to understand why your app

00:18:11.436 --> 00:18:12.696 A:middle
wants access to location.

00:18:13.756 --> 00:18:15.166 A:middle
This makes it much more likely

00:18:15.166 --> 00:18:16.576 A:middle
that they'll actually grant your

00:18:16.576 --> 00:18:17.596 A:middle
app authorization.

00:18:17.776 --> 00:18:21.446 A:middle
For apps that request Always

00:18:21.446 --> 00:18:22.936 A:middle
authorization, there's a little

00:18:22.936 --> 00:18:23.826 A:middle
bit more to that.

00:18:24.796 --> 00:18:26.376 A:middle
We recommend you request

00:18:26.376 --> 00:18:28.216 A:middle
WhenInUse authorization first.

00:18:30.216 --> 00:18:31.416 A:middle
Requesting WhenInUse

00:18:31.416 --> 00:18:32.496 A:middle
authorization is a little bit

00:18:32.526 --> 00:18:34.156 A:middle
easier, not asking as much from

00:18:34.156 --> 00:18:36.086 A:middle
the user, but there's more to it

00:18:36.086 --> 00:18:37.616 A:middle
than that.

00:18:37.986 --> 00:18:39.566 A:middle
We think your app should make

00:18:39.566 --> 00:18:41.656 A:middle
WhenInUse its base experience,

00:18:41.696 --> 00:18:43.526 A:middle
the first thing users encounter.

00:18:44.126 --> 00:18:45.606 A:middle
Then, after the user has had a

00:18:45.606 --> 00:18:47.046 A:middle
chance to explore your app and

00:18:47.046 --> 00:18:48.536 A:middle
get to know all of its features,

00:18:49.546 --> 00:18:50.816 A:middle
when they discover that one that

00:18:50.816 --> 00:18:52.476 A:middle
requires Always, they'll try to

00:18:52.476 --> 00:18:54.476 A:middle
turn it on and at that point

00:18:54.476 --> 00:18:55.576 A:middle
your app can display a

00:18:55.576 --> 00:18:57.556 A:middle
transition prompt that requests

00:18:57.626 --> 00:18:59.226 A:middle
Always authorization on top of

00:18:59.226 --> 00:19:00.486 A:middle
the WhenInUse authorization you

00:19:00.486 --> 00:19:01.226 A:middle
already have.

00:19:02.486 --> 00:19:04.216 A:middle
When this prompt appears, the

00:19:04.216 --> 00:19:05.906 A:middle
user will once again have that

00:19:05.906 --> 00:19:08.316 A:middle
intuitive context they need in

00:19:08.316 --> 00:19:09.926 A:middle
order to understand why your app

00:19:09.926 --> 00:19:12.346 A:middle
is requesting Always and they'll

00:19:12.346 --> 00:19:14.786 A:middle
be much more likely to grant it

00:19:16.516 --> 00:19:16.706 A:middle
to you.

00:19:16.826 --> 00:19:18.216 A:middle
Let's see how that works.

00:19:18.846 --> 00:19:21.056 A:middle
So when the user first launches

00:19:21.056 --> 00:19:23.686 A:middle
your app, you'll have an

00:19:23.746 --> 00:19:25.106 A:middle
undetermined authorization

00:19:25.106 --> 00:19:25.426 A:middle
state.

00:19:26.696 --> 00:19:28.866 A:middle
From here you can request either

00:19:28.986 --> 00:19:30.896 A:middle
WhenInUse authorization or

00:19:30.956 --> 00:19:31.926 A:middle
Always authorization.

00:19:33.466 --> 00:19:34.366 A:middle
Let's see what happens if you

00:19:34.366 --> 00:19:35.776 A:middle
request WhenInUse authorization.

00:19:36.996 --> 00:19:38.676 A:middle
Core Location will display our

00:19:39.286 --> 00:19:40.966 A:middle
WhenInUse authorization prompt,

00:19:40.966 --> 00:19:41.626 A:middle
using your

00:19:41.916 --> 00:19:43.966 A:middle
WhenInUseUsageDescription in the

00:19:43.966 --> 00:19:44.786 A:middle
body of the alert.

00:19:46.256 --> 00:19:47.686 A:middle
Depending on the user's choice,

00:19:47.686 --> 00:19:48.846 A:middle
you'll end up with either

00:19:48.936 --> 00:19:50.686 A:middle
WhenInUse authorization or no

00:19:50.686 --> 00:19:51.806 A:middle
authorization at all.

00:19:52.506 --> 00:19:53.816 A:middle
After this point the user can

00:19:53.816 --> 00:19:55.346 A:middle
freely go to settings and adjust

00:19:55.346 --> 00:19:56.686 A:middle
your app's authorization value

00:19:56.686 --> 00:19:57.686 A:middle
to whatever they like.

00:19:58.516 --> 00:20:00.216 A:middle
But if the user has chosen to

00:20:00.216 --> 00:20:01.456 A:middle
grant your app WhenInUse

00:20:01.456 --> 00:20:02.916 A:middle
authorization, which they

00:20:02.916 --> 00:20:03.976 A:middle
probably will if you're

00:20:03.976 --> 00:20:05.456 A:middle
following our best practices,

00:20:06.916 --> 00:20:08.296 A:middle
you can additionally request

00:20:08.376 --> 00:20:09.356 A:middle
Always authorization.

00:20:10.526 --> 00:20:12.106 A:middle
When this happens, Core Location

00:20:12.106 --> 00:20:13.826 A:middle
will display a transition prompt

00:20:14.626 --> 00:20:15.686 A:middle
and will use that new

00:20:15.686 --> 00:20:16.876 A:middle
AlwaysAndWhenInUse

00:20:16.996 --> 00:20:18.216 A:middle
UsageDescription string.

00:20:18.976 --> 00:20:20.496 A:middle
From here the user can either

00:20:20.916 --> 00:20:22.266 A:middle
grant your app Always

00:20:22.266 --> 00:20:24.076 A:middle
authorization or keep it at its

00:20:24.076 --> 00:20:25.516 A:middle
current WhenInUse value.

00:20:25.516 --> 00:20:29.336 A:middle
After your app has requested

00:20:29.336 --> 00:20:30.836 A:middle
Always authorization it will be

00:20:30.836 --> 00:20:32.516 A:middle
unable to request any further

00:20:32.516 --> 00:20:33.026 A:middle
prompts.

00:20:34.136 --> 00:20:36.116 A:middle
So let's go back to the start.

00:20:36.116 --> 00:20:37.926 A:middle
What if you had requested Always

00:20:37.926 --> 00:20:39.456 A:middle
authorization at the very

00:20:39.456 --> 00:20:41.176 A:middle
beginning, right when your app

00:20:41.176 --> 00:20:42.086 A:middle
launches, for example.

00:20:43.136 --> 00:20:44.946 A:middle
The user will see this prompt.

00:20:45.636 --> 00:20:48.526 A:middle
They'll see a WhenInUse option,

00:20:48.846 --> 00:20:50.046 A:middle
they'll see an Always option,

00:20:50.496 --> 00:20:52.016 A:middle
and they'll see a Don't Allow

00:20:52.016 --> 00:20:52.376 A:middle
option.

00:20:53.236 --> 00:20:54.996 A:middle
If the user doesn't understand

00:20:55.106 --> 00:20:56.876 A:middle
why your app wants access to

00:20:56.876 --> 00:20:58.786 A:middle
location all the time, if they

00:20:58.786 --> 00:21:00.586 A:middle
don't have that context that

00:21:00.586 --> 00:21:01.986 A:middle
we're recommending you provide,

00:21:03.136 --> 00:21:04.506 A:middle
then it's very likely they'll

00:21:04.506 --> 00:21:05.896 A:middle
grant your app WhenInUse

00:21:05.896 --> 00:21:08.116 A:middle
authorization instead, and if

00:21:08.116 --> 00:21:10.056 A:middle
that happens, you won't be able

00:21:10.056 --> 00:21:11.736 A:middle
to initiate a transition prompt

00:21:11.736 --> 00:21:12.436 A:middle
afterwards.

00:21:13.856 --> 00:21:15.716 A:middle
Oh, and this prompt also uses

00:21:15.716 --> 00:21:17.186 A:middle
that new combined

00:21:17.186 --> 00:21:18.176 A:middle
UsageDescription key.

00:21:19.526 --> 00:21:22.486 A:middle
Okay. Before we move on from

00:21:22.486 --> 00:21:24.426 A:middle
authorization, I'm excited to

00:21:24.426 --> 00:21:26.666 A:middle
announce that on watchOS 4 Core

00:21:26.666 --> 00:21:28.376 A:middle
Location will support prompting

00:21:28.376 --> 00:21:30.186 A:middle
for authorization directly on

00:21:30.186 --> 00:21:31.076 A:middle
the watch itself.

00:21:32.096 --> 00:21:32.956 A:middle
Previously --

00:21:33.516 --> 00:21:36.016 A:middle
[ Applause ]

00:21:36.516 --> 00:21:38.146 A:middle
Previously, if you tried to

00:21:38.146 --> 00:21:40.536 A:middle
request authorization, watchOS

00:21:40.536 --> 00:21:41.626 A:middle
would alert the user that

00:21:41.626 --> 00:21:42.616 A:middle
there's a prompt waiting for

00:21:42.616 --> 00:21:43.916 A:middle
them on their phone and they

00:21:43.916 --> 00:21:44.716 A:middle
would have to go over to their

00:21:44.716 --> 00:21:47.256 A:middle
phone and respond to it there.

00:21:47.866 --> 00:21:49.696 A:middle
We haven't got this all finished

00:21:49.696 --> 00:21:49.886 A:middle
yet.

00:21:49.946 --> 00:21:51.356 A:middle
It's not in the seed you

00:21:51.356 --> 00:21:53.006 A:middle
received earlier this week, but

00:21:53.006 --> 00:21:54.206 A:middle
we do expect it to land in a

00:21:54.206 --> 00:21:54.906 A:middle
future seed.

00:21:56.076 --> 00:21:57.736 A:middle
When it's done, all you'll have

00:21:57.786 --> 00:21:59.686 A:middle
to do is rebuild your app and

00:21:59.686 --> 00:22:00.746 A:middle
the next time you install it,

00:22:00.746 --> 00:22:01.836 A:middle
you should start to see these

00:22:01.836 --> 00:22:02.966 A:middle
standalone prompts.

00:22:03.906 --> 00:22:04.886 A:middle
That's authorization.

00:22:05.486 --> 00:22:07.876 A:middle
Let's talk about usage

00:22:07.876 --> 00:22:08.286 A:middle
reporting.

00:22:08.886 --> 00:22:12.146 A:middle
But first, let's talk about how

00:22:12.176 --> 00:22:15.026 A:middle
it worked in iOS 10.

00:22:15.226 --> 00:22:16.856 A:middle
Core Location would report the

00:22:16.856 --> 00:22:18.956 A:middle
location usage of your app based

00:22:18.956 --> 00:22:20.356 A:middle
on which services you were

00:22:20.356 --> 00:22:20.806 A:middle
using.

00:22:21.356 --> 00:22:24.286 A:middle
Most services would result in

00:22:24.286 --> 00:22:26.046 A:middle
your app getting a solid arrow

00:22:26.126 --> 00:22:28.286 A:middle
in the status bar and in

00:22:28.356 --> 00:22:28.696 A:middle
Settings.

00:22:30.856 --> 00:22:31.866 A:middle
If you used the region

00:22:31.866 --> 00:22:33.236 A:middle
monitoring service, you would

00:22:33.236 --> 00:22:34.746 A:middle
instead get a hollow arrow.

00:22:35.326 --> 00:22:37.826 A:middle
And finally, if you were a

00:22:37.826 --> 00:22:40.196 A:middle
WhenInUse authorized app and you

00:22:40.196 --> 00:22:41.296 A:middle
requested the continuous

00:22:41.296 --> 00:22:42.976 A:middle
background location service, we

00:22:42.976 --> 00:22:44.166 A:middle
would draw this blue

00:22:44.166 --> 00:22:45.226 A:middle
double-height status bar that

00:22:45.226 --> 00:22:45.956 A:middle
I've mentioned a few times.

00:22:50.046 --> 00:22:51.236 A:middle
We felt this system was very

00:22:51.236 --> 00:22:51.496 A:middle
good.

00:22:51.566 --> 00:22:52.966 A:middle
It served us well for a long

00:22:52.966 --> 00:22:55.296 A:middle
time, but we thought there was

00:22:55.366 --> 00:22:56.376 A:middle
room for improvement.

00:22:58.436 --> 00:23:00.576 A:middle
This system over-represents the

00:23:00.646 --> 00:23:02.306 A:middle
privacy exposure of some of our

00:23:02.306 --> 00:23:02.946 A:middle
API's.

00:23:03.896 --> 00:23:05.376 A:middle
Let's compare two apps; one of

00:23:05.376 --> 00:23:07.936 A:middle
them using the significant

00:23:07.936 --> 00:23:09.276 A:middle
location change monitoring

00:23:09.276 --> 00:23:11.076 A:middle
service, and the other one using

00:23:11.166 --> 00:23:12.436 A:middle
our continuous background

00:23:12.436 --> 00:23:13.266 A:middle
location service.

00:23:14.756 --> 00:23:16.016 A:middle
Both of these apps will have a

00:23:16.016 --> 00:23:18.116 A:middle
solid arrow continuously.

00:23:18.776 --> 00:23:20.276 A:middle
However, the app using

00:23:20.356 --> 00:23:21.586 A:middle
significant location change

00:23:21.586 --> 00:23:23.426 A:middle
monitoring is going to receive

00:23:23.586 --> 00:23:25.246 A:middle
far less location information

00:23:25.296 --> 00:23:26.776 A:middle
than the app using continuous

00:23:26.806 --> 00:23:27.676 A:middle
background location.

00:23:28.216 --> 00:23:30.906 A:middle
The app using significant

00:23:30.906 --> 00:23:32.126 A:middle
location change monitoring is

00:23:32.126 --> 00:23:34.446 A:middle
only going to get updates when

00:23:34.446 --> 00:23:36.156 A:middle
the device has actually moved a

00:23:36.156 --> 00:23:37.836 A:middle
significant distance, and even

00:23:37.836 --> 00:23:39.996 A:middle
then, there's a rate limit on

00:23:39.996 --> 00:23:40.406 A:middle
top.

00:23:41.146 --> 00:23:44.146 A:middle
And so the app receiving

00:23:44.146 --> 00:23:45.296 A:middle
continuous background location

00:23:45.296 --> 00:23:46.436 A:middle
is going to get far more

00:23:46.436 --> 00:23:48.306 A:middle
location information, but they

00:23:48.306 --> 00:23:49.936 A:middle
have the exact same usage

00:23:49.936 --> 00:23:50.466 A:middle
reporting.

00:23:51.756 --> 00:23:54.436 A:middle
Furthermore, we thought that

00:23:54.586 --> 00:23:55.886 A:middle
Always authorized apps were

00:23:55.886 --> 00:23:57.836 A:middle
missing out on the blue bar as a

00:23:57.936 --> 00:23:58.246 A:middle
feature.

00:23:58.986 --> 00:24:00.566 A:middle
Suppose you have a navigation

00:24:00.566 --> 00:24:02.566 A:middle
app that is granted Always

00:24:02.566 --> 00:24:03.226 A:middle
authorization.

00:24:03.966 --> 00:24:05.606 A:middle
If the user is in a navigation

00:24:05.606 --> 00:24:07.296 A:middle
session, they probably want to

00:24:07.296 --> 00:24:08.596 A:middle
be able to return to that very

00:24:08.636 --> 00:24:10.366 A:middle
quickly after briefly using

00:24:10.366 --> 00:24:12.846 A:middle
another app, but in iOS 10

00:24:13.186 --> 00:24:14.696 A:middle
Always authorized apps don't get

00:24:14.806 --> 00:24:16.186 A:middle
this blue double-height status

00:24:16.186 --> 00:24:16.456 A:middle
bar.

00:24:17.176 --> 00:24:21.366 A:middle
We felt that these problems made

00:24:21.366 --> 00:24:22.786 A:middle
it difficult for users to

00:24:22.816 --> 00:24:25.036 A:middle
correctly interpret how apps

00:24:25.036 --> 00:24:26.226 A:middle
were using their location.

00:24:27.326 --> 00:24:28.526 A:middle
For example, let's consider

00:24:28.526 --> 00:24:29.876 A:middle
those two apps again; the

00:24:29.936 --> 00:24:31.176 A:middle
continuous background location

00:24:31.206 --> 00:24:32.326 A:middle
and the significant location

00:24:32.326 --> 00:24:33.306 A:middle
change monitoring app.

00:24:34.606 --> 00:24:37.036 A:middle
Suppose the user goes for a run

00:24:37.186 --> 00:24:38.246 A:middle
with the continuous background

00:24:38.246 --> 00:24:38.806 A:middle
location app.

00:24:39.496 --> 00:24:41.316 A:middle
They'll go on the run, they'll

00:24:41.316 --> 00:24:42.446 A:middle
come back, they'll see the solid

00:24:42.446 --> 00:24:43.506 A:middle
arrow the whole time, and when

00:24:43.506 --> 00:24:44.386 A:middle
they look at their map, they'll

00:24:44.386 --> 00:24:45.726 A:middle
see every twist and turn they

00:24:45.726 --> 00:24:46.036 A:middle
took.

00:24:46.806 --> 00:24:48.046 A:middle
When they install that app that

00:24:48.046 --> 00:24:49.596 A:middle
uses significant location change

00:24:49.596 --> 00:24:51.066 A:middle
monitoring, they'll see the same

00:24:51.066 --> 00:24:53.326 A:middle
thing, a solid arrow.

00:24:54.066 --> 00:24:55.866 A:middle
As far as the user is aware,

00:24:56.196 --> 00:24:57.896 A:middle
this app is probably receiving

00:24:57.896 --> 00:24:59.526 A:middle
the same amount of information

00:24:59.596 --> 00:25:01.286 A:middle
as their run tracking app.

00:25:02.696 --> 00:25:05.196 A:middle
So if users are misinterpreting

00:25:05.196 --> 00:25:06.706 A:middle
our signals, we decided the best

00:25:06.706 --> 00:25:08.556 A:middle
way to fix this was to adjust

00:25:08.556 --> 00:25:09.976 A:middle
how we indicate location usage.

00:25:14.136 --> 00:25:15.656 A:middle
We have a new policy and we

00:25:15.656 --> 00:25:16.686 A:middle
think you're going to like it.

00:25:17.596 --> 00:25:18.876 A:middle
We've changed how the arrow

00:25:18.876 --> 00:25:19.316 A:middle
works.

00:25:20.506 --> 00:25:22.476 A:middle
When your app requests location

00:25:22.476 --> 00:25:24.186 A:middle
information from Core Location,

00:25:24.626 --> 00:25:26.376 A:middle
we display a hollow arrow.

00:25:26.986 --> 00:25:30.296 A:middle
When you actually receive

00:25:30.296 --> 00:25:32.446 A:middle
location information, we'll

00:25:32.446 --> 00:25:34.416 A:middle
switch that to a solid arrow for

00:25:34.416 --> 00:25:35.086 A:middle
a few seconds.

00:25:36.486 --> 00:25:37.856 A:middle
We'll go through an example of

00:25:37.856 --> 00:25:39.156 A:middle
how that actually works in just

00:25:39.156 --> 00:25:39.776 A:middle
a few moments.

00:25:40.906 --> 00:25:43.206 A:middle
In addition, as you probably

00:25:43.206 --> 00:25:44.446 A:middle
guessed, we're bringing the blue

00:25:44.446 --> 00:25:46.216 A:middle
double-height status bar to

00:25:46.216 --> 00:25:48.056 A:middle
Always authorized apps that use

00:25:48.056 --> 00:25:49.106 A:middle
the continuous background

00:25:49.106 --> 00:25:50.166 A:middle
location service.

00:25:50.746 --> 00:25:54.456 A:middle
Now, we expect that this new

00:25:54.456 --> 00:25:56.606 A:middle
policy will help users

00:25:56.676 --> 00:25:58.986 A:middle
understand your app's location

00:25:58.986 --> 00:26:00.976 A:middle
usage more better.

00:26:03.036 --> 00:26:06.346 A:middle
So let's see.

00:26:06.796 --> 00:26:08.556 A:middle
Previously we had that hollow

00:26:08.556 --> 00:26:11.586 A:middle
arrow behavior and users came to

00:26:11.586 --> 00:26:13.996 A:middle
understand that the hollow arrow

00:26:14.036 --> 00:26:16.646 A:middle
indicated that an app was using

00:26:16.646 --> 00:26:18.486 A:middle
location in the background, but

00:26:18.486 --> 00:26:20.156 A:middle
it wasn't continuously receiving

00:26:20.156 --> 00:26:20.536 A:middle
updates.

00:26:20.536 --> 00:26:21.856 A:middle
It was receiving them

00:26:21.956 --> 00:26:23.826 A:middle
potentially intermittently or

00:26:24.226 --> 00:26:25.646 A:middle
only when specific events

00:26:25.646 --> 00:26:27.266 A:middle
occurred, and so they understood

00:26:27.266 --> 00:26:28.686 A:middle
that this arrow represented

00:26:28.956 --> 00:26:30.166 A:middle
low-powered background

00:26:30.166 --> 00:26:30.746 A:middle
monitoring.

00:26:31.846 --> 00:26:33.886 A:middle
We're now extending that

00:26:33.886 --> 00:26:35.816 A:middle
understanding to all of Core

00:26:35.816 --> 00:26:38.866 A:middle
Location's API's, and we think

00:26:38.866 --> 00:26:40.646 A:middle
this is much better for you as

00:26:40.696 --> 00:26:42.566 A:middle
the developers as well because

00:26:42.566 --> 00:26:44.446 A:middle
now users will be able to see

00:26:44.446 --> 00:26:46.836 A:middle
exactly how much, or as the case

00:26:46.836 --> 00:26:48.576 A:middle
may be, how little information

00:26:48.576 --> 00:26:50.136 A:middle
your app is actually receiving

00:26:50.136 --> 00:26:50.876 A:middle
when it's running in the

00:26:50.876 --> 00:26:51.476 A:middle
background.

00:26:52.246 --> 00:26:53.476 A:middle
If you're using our background

00:26:53.476 --> 00:26:55.246 A:middle
monitoring API's, you'll find

00:26:55.246 --> 00:26:56.556 A:middle
that you have a hollow arrow

00:26:56.556 --> 00:26:59.396 A:middle
more and a solid arrow less, and

00:26:59.396 --> 00:27:01.036 A:middle
we think this will help users

00:27:01.036 --> 00:27:02.826 A:middle
understand that your app is not

00:27:02.876 --> 00:27:04.916 A:middle
actually receiving every single

00:27:04.916 --> 00:27:06.446 A:middle
step, every twist and turn

00:27:06.446 --> 00:27:06.956 A:middle
throughout their day.

00:27:11.346 --> 00:27:12.986 A:middle
Okay. So let's look at how that

00:27:13.026 --> 00:27:14.396 A:middle
arrow works in practice.

00:27:15.376 --> 00:27:17.576 A:middle
Here we have a test iPhone and

00:27:17.576 --> 00:27:20.536 A:middle
it's currently at AT&amp;T Park and

00:27:20.666 --> 00:27:22.026 A:middle
let's suppose an app is using

00:27:22.026 --> 00:27:23.276 A:middle
the Visit monitoring service.

00:27:23.876 --> 00:27:25.106 A:middle
The device has been stationary

00:27:25.106 --> 00:27:27.386 A:middle
here for a long time and so

00:27:27.606 --> 00:27:29.346 A:middle
we're displaying a hollow arrow

00:27:29.476 --> 00:27:30.896 A:middle
in the status bar because Core

00:27:30.896 --> 00:27:33.196 A:middle
Location is not delivering new

00:27:33.196 --> 00:27:35.626 A:middle
information to the app.

00:27:35.886 --> 00:27:38.056 A:middle
However, once the user gets up

00:27:38.056 --> 00:27:40.046 A:middle
and starts moving towards, let's

00:27:40.046 --> 00:27:41.826 A:middle
say the Ferry Building, Core

00:27:41.826 --> 00:27:43.246 A:middle
Location will detect that

00:27:43.246 --> 00:27:44.576 A:middle
departure event and alert the

00:27:44.576 --> 00:27:44.836 A:middle
app.

00:27:45.716 --> 00:27:48.046 A:middle
That will result in a solid

00:27:48.046 --> 00:27:49.666 A:middle
arrow appearing in the status

00:27:49.666 --> 00:27:51.046 A:middle
bar for a few seconds.

00:27:51.746 --> 00:27:53.146 A:middle
As the user continues their

00:27:53.146 --> 00:27:56.056 A:middle
journey the arrow will return to

00:27:56.056 --> 00:27:58.716 A:middle
its hollow state and it will

00:27:58.716 --> 00:28:00.676 A:middle
remain hollow until Core

00:28:00.676 --> 00:28:02.486 A:middle
Location detects an arrival

00:28:02.486 --> 00:28:02.836 A:middle
event.

00:28:03.586 --> 00:28:05.176 A:middle
After it detects that, it will

00:28:05.176 --> 00:28:07.476 A:middle
launch the app once again and

00:28:07.476 --> 00:28:09.116 A:middle
the app will receive a solid

00:28:09.116 --> 00:28:11.566 A:middle
arrow that will linger for a

00:28:11.566 --> 00:28:13.166 A:middle
couple of seconds, and then

00:28:13.166 --> 00:28:15.016 A:middle
after that it will remain hollow

00:28:15.436 --> 00:28:17.086 A:middle
until the user departs from that

00:28:17.086 --> 00:28:17.646 A:middle
location.

00:28:18.636 --> 00:28:19.656 A:middle
We really hope that this new

00:28:19.656 --> 00:28:21.166 A:middle
policy helps users better

00:28:21.166 --> 00:28:23.766 A:middle
understand exactly when and how

00:28:23.766 --> 00:28:24.856 A:middle
your apps are accessing their

00:28:24.856 --> 00:28:26.956 A:middle
location, and we think that it

00:28:26.956 --> 00:28:29.386 A:middle
will result in users no longer

00:28:29.386 --> 00:28:31.096 A:middle
blaming your app for things it's

00:28:31.096 --> 00:28:32.136 A:middle
not actually doing.

00:28:35.436 --> 00:28:36.926 A:middle
That's what we've got for today.

00:28:37.126 --> 00:28:38.456 A:middle
And just to recap, there are

00:28:38.696 --> 00:28:40.906 A:middle
three important points I want

00:28:40.906 --> 00:28:41.566 A:middle
you to remember.

00:28:42.756 --> 00:28:45.976 A:middle
First, users have more control

00:28:46.226 --> 00:28:48.616 A:middle
over how your app accesses their

00:28:48.616 --> 00:28:49.196 A:middle
location.

00:28:49.816 --> 00:28:52.346 A:middle
Specifically, users can now

00:28:52.346 --> 00:28:53.586 A:middle
grant your app WhenInUse

00:28:53.586 --> 00:28:55.246 A:middle
authorization if you request

00:28:55.246 --> 00:28:56.186 A:middle
Always authorization.

00:28:56.766 --> 00:29:00.226 A:middle
Now, we always recommend that

00:29:00.226 --> 00:29:01.456 A:middle
you communicate with the user

00:29:01.456 --> 00:29:02.996 A:middle
and help them understand why

00:29:02.996 --> 00:29:04.036 A:middle
your app wants access to

00:29:04.036 --> 00:29:06.326 A:middle
location, but apps that request

00:29:06.326 --> 00:29:07.886 A:middle
Always authorization have an

00:29:07.916 --> 00:29:09.776 A:middle
even greater responsibility.

00:29:10.476 --> 00:29:11.956 A:middle
If the user doesn't understand

00:29:11.956 --> 00:29:13.576 A:middle
why your app wants access to

00:29:13.576 --> 00:29:15.606 A:middle
Always authorization, then

00:29:15.606 --> 00:29:16.866 A:middle
they're not likely to grant it

00:29:16.866 --> 00:29:17.136 A:middle
to you.

00:29:17.336 --> 00:29:18.276 A:middle
They're likely to give you

00:29:18.276 --> 00:29:20.076 A:middle
WhenInUse authorization instead.

00:29:21.876 --> 00:29:23.886 A:middle
So you have that greater

00:29:23.886 --> 00:29:25.506 A:middle
responsibility if you want to

00:29:25.506 --> 00:29:26.926 A:middle
receive Always authorization.

00:29:27.276 --> 00:29:29.246 A:middle
And the best way we think that

00:29:29.246 --> 00:29:30.376 A:middle
you can communicate with the

00:29:30.376 --> 00:29:32.456 A:middle
user to help them understand why

00:29:32.456 --> 00:29:33.356 A:middle
you're asking for Always

00:29:33.356 --> 00:29:34.916 A:middle
authorization, the best way to

00:29:34.916 --> 00:29:36.856 A:middle
maximize your chances of

00:29:36.856 --> 00:29:38.296 A:middle
receiving Always authorization

00:29:38.296 --> 00:29:40.166 A:middle
from the user is to give them

00:29:40.166 --> 00:29:41.966 A:middle
that context that I talked about

00:29:41.966 --> 00:29:42.376 A:middle
earlier.

00:29:42.906 --> 00:29:45.946 A:middle
Give them that intuitive

00:29:45.946 --> 00:29:46.596 A:middle
understanding.

00:29:46.596 --> 00:29:48.136 A:middle
Let them explore your app with

00:29:48.136 --> 00:29:50.136 A:middle
WhenInUse authorization, and

00:29:50.136 --> 00:29:51.826 A:middle
then when they try to enable

00:29:51.826 --> 00:29:53.226 A:middle
that feature that requires

00:29:53.226 --> 00:29:55.276 A:middle
Always authorization, then you

00:29:55.276 --> 00:29:57.106 A:middle
initiate that transition prompt

00:29:57.106 --> 00:29:58.596 A:middle
and they will almost certainly

00:29:58.596 --> 00:29:59.976 A:middle
grant your app authorization at

00:29:59.976 --> 00:30:00.466 A:middle
that time.

00:30:01.386 --> 00:30:02.226 A:middle
Thank you for your time.

00:30:02.276 --> 00:30:03.696 A:middle
If you'd like to learn more, we

00:30:03.696 --> 00:30:04.996 A:middle
have some supplementary material

00:30:04.996 --> 00:30:05.436 A:middle
online.

00:30:05.756 --> 00:30:07.576 A:middle
We've updated our PotLoc app,

00:30:07.656 --> 00:30:09.616 A:middle
for example, so you'll find

00:30:09.996 --> 00:30:11.246 A:middle
that's got some new goodies for

00:30:11.246 --> 00:30:11.386 A:middle
you.

00:30:13.436 --> 00:30:14.576 A:middle
We also recommend you check out

00:30:14.576 --> 00:30:15.506 A:middle
these related sessions.

00:30:15.506 --> 00:30:16.816 A:middle
I've already mentioned the Core

00:30:16.816 --> 00:30:19.626 A:middle
Motion one, but the Privacy

00:30:19.626 --> 00:30:21.226 A:middle
session from earlier this week

00:30:21.536 --> 00:30:22.826 A:middle
was also very good and it has a

00:30:22.826 --> 00:30:24.196 A:middle
lot of great advice to help you

00:30:24.196 --> 00:30:25.626 A:middle
build an app that respects the

00:30:25.626 --> 00:30:26.526 A:middle
user's privacy.

00:30:27.676 --> 00:30:28.896 A:middle
Thank you for your time, and I

00:30:28.896 --> 00:30:29.976 A:middle
hope you enjoy the rest of WWDC.

00:30:30.016 --> 00:30:32.000 A:middle
[ Applause ]