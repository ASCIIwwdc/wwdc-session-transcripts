WEBVTT

00:00:07.516 --> 00:00:16.500 A:middle
[ Crowd Sounds ]

00:00:23.041 --> 00:00:25.041 A:middle
[ Applause ]

00:00:25.066 --> 00:00:26.466 A:middle
&gt;&gt; Good morning, and welcome.

00:00:27.616 --> 00:00:28.856 A:middle
My name is Jean-Gabriel.

00:00:28.946 --> 00:00:29.846 A:middle
I hope you've been having a

00:00:29.846 --> 00:00:30.446 A:middle
great week.

00:00:30.726 --> 00:00:31.756 A:middle
We're here to talk about file

00:00:31.756 --> 00:00:33.426 A:middle
providers, the technology

00:00:33.426 --> 00:00:34.826 A:middle
between, behind the new Files

00:00:35.676 --> 00:00:35.746 A:middle
app.

00:00:37.116 --> 00:00:38.636 A:middle
We're going to see what file

00:00:38.636 --> 00:00:41.046 A:middle
providers are and what new APIs

00:00:41.046 --> 00:00:43.756 A:middle
in iOS 11 allow you to enumerate

00:00:44.176 --> 00:00:45.986 A:middle
files from the cloud down to the

00:00:45.986 --> 00:00:48.026 A:middle
device, to modify those files on

00:00:48.026 --> 00:00:49.496 A:middle
the device and up to the cloud,

00:00:49.926 --> 00:00:50.986 A:middle
and to customize your file

00:00:50.986 --> 00:00:52.706 A:middle
provider to expose your

00:00:52.706 --> 00:00:53.866 A:middle
non-standout features.

00:00:56.206 --> 00:00:57.416 A:middle
So file providers have been

00:00:57.416 --> 00:00:59.836 A:middle
around since iOS 8, and at the

00:00:59.886 --> 00:01:02.646 A:middle
core, they materialize files for

00:00:59.886 --> 00:01:02.646 A:middle
core, they materialize files for

00:01:02.646 --> 00:01:03.296 A:middle
applications.

00:01:03.296 --> 00:01:04.306 A:middle
So applications may keep

00:01:04.306 --> 00:01:06.846 A:middle
preferences to files that are

00:01:06.846 --> 00:01:08.256 A:middle
provided by file providers, and

00:01:08.256 --> 00:01:09.646 A:middle
when they need the files, file

00:01:09.646 --> 00:01:11.086 A:middle
providers fulfill the promises.

00:01:12.406 --> 00:01:14.286 A:middle
But we are here today to talk

00:01:14.286 --> 00:01:16.406 A:middle
about the new APIs, the APIs for

00:01:16.406 --> 00:01:18.136 A:middle
enumerating files from the cloud

00:01:18.136 --> 00:01:18.976 A:middle
down to the device.

00:01:19.626 --> 00:01:22.556 A:middle
So the audience for this talk is

00:01:22.556 --> 00:01:24.216 A:middle
people who have servers out

00:01:24.216 --> 00:01:26.486 A:middle
there with user documents on

00:01:26.486 --> 00:01:27.776 A:middle
those servers and want to bring

00:01:27.776 --> 00:01:29.486 A:middle
those documents to iPad and

00:01:29.486 --> 00:01:29.856 A:middle
iPhone.

00:01:32.316 --> 00:01:34.886 A:middle
So let's look at the Files app.

00:01:35.436 --> 00:01:37.886 A:middle
The Files app is a thin wrapper

00:01:37.886 --> 00:01:40.126 A:middle
around a new piece of system UI

00:01:40.126 --> 00:01:41.296 A:middle
called the document browser that

00:01:41.296 --> 00:01:42.856 A:middle
is pretty ubiquitous in the

00:01:42.856 --> 00:01:43.336 A:middle
system.

00:01:44.266 --> 00:01:45.926 A:middle
It is where the user, where

00:01:45.926 --> 00:01:48.296 A:middle
users find, organize, share,

00:01:48.366 --> 00:01:49.376 A:middle
open documents.

00:01:52.776 --> 00:01:54.896 A:middle
File providers appear here under

00:01:54.896 --> 00:01:55.906 A:middle
Locations.

00:01:56.366 --> 00:01:57.746 A:middle
These are the entry points to

00:01:57.746 --> 00:02:01.126 A:middle
your cloud storage, and iCloud

00:01:57.746 --> 00:02:01.126 A:middle
your cloud storage, and iCloud

00:02:01.126 --> 00:02:02.436 A:middle
Drive is one of them.

00:02:03.716 --> 00:02:04.186 A:middle
That's good.

00:02:04.396 --> 00:02:05.956 A:middle
That means that the APIs that we

00:02:05.956 --> 00:02:07.446 A:middle
are going to go through today

00:02:07.916 --> 00:02:09.356 A:middle
are implemented by iCloud Drive,

00:02:09.425 --> 00:02:10.826 A:middle
really well tested, and you have

00:02:10.826 --> 00:02:11.886 A:middle
a reference point if you're

00:02:11.886 --> 00:02:13.246 A:middle
wondering about the expected

00:02:13.246 --> 00:02:15.846 A:middle
behavior of, say, renaming your

00:02:15.846 --> 00:02:17.106 A:middle
file when there's already a file

00:02:17.106 --> 00:02:18.106 A:middle
with the same name and the same

00:02:18.106 --> 00:02:19.196 A:middle
folder, or you can just try it

00:02:19.196 --> 00:02:20.466 A:middle
out in iCloud Drive and see how

00:02:20.466 --> 00:02:21.246 A:middle
it's supposed to behave.

00:02:22.566 --> 00:02:24.736 A:middle
It also means that your

00:02:24.736 --> 00:02:26.296 A:middle
documents, being in a file

00:02:26.296 --> 00:02:27.706 A:middle
provider just like iCloud Drive,

00:02:27.706 --> 00:02:29.186 A:middle
are first-class citizens on the

00:02:29.186 --> 00:02:29.546 A:middle
OS.

00:02:29.896 --> 00:02:31.206 A:middle
They're available everywhere

00:02:31.206 --> 00:02:32.686 A:middle
really prominently just as

00:02:32.686 --> 00:02:33.706 A:middle
iCloud Drive documents.

00:02:34.016 --> 00:02:35.466 A:middle
Actually, on this shot, iCloud

00:02:35.466 --> 00:02:36.466 A:middle
Drive is at the top, but the

00:02:36.466 --> 00:02:38.056 A:middle
user may want to reconfigure

00:02:38.056 --> 00:02:39.546 A:middle
that however they want to really

00:02:39.666 --> 00:02:41.186 A:middle
leave on your file provider.

00:02:42.616 --> 00:02:44.356 A:middle
There's on file provider in

00:02:44.356 --> 00:02:45.856 A:middle
there that I just want to make a

00:02:46.526 --> 00:02:47.356 A:middle
passing mention of.

00:02:47.616 --> 00:02:49.106 A:middle
On My iPad, that is the only

00:02:49.106 --> 00:02:50.246 A:middle
local file provider.

00:02:50.246 --> 00:02:51.436 A:middle
That is the only file provider

00:02:51.436 --> 00:02:52.796 A:middle
that doesn't show files that are

00:02:52.796 --> 00:02:54.846 A:middle
in the cloud somewhere, and it's

00:02:54.846 --> 00:02:57.316 A:middle
for apps to expose their

00:02:57.946 --> 00:02:59.626 A:middle
document, their local document

00:02:59.626 --> 00:03:01.406 A:middle
storage to other applications.

00:02:59.626 --> 00:03:01.406 A:middle
storage to other applications.

00:03:04.656 --> 00:03:06.146 A:middle
So let's see where the document

00:03:06.146 --> 00:03:07.676 A:middle
browser fits on the platform.

00:03:08.556 --> 00:03:09.886 A:middle
Well, it sits right below the

00:03:09.886 --> 00:03:11.156 A:middle
document-based applications --

00:03:11.526 --> 00:03:12.926 A:middle
the Files app that we just saw;

00:03:13.736 --> 00:03:15.276 A:middle
all the iWork apps, which

00:03:15.276 --> 00:03:17.416 A:middle
[rewrote] their document browser

00:03:17.416 --> 00:03:19.026 A:middle
to be that new piece of system

00:03:19.026 --> 00:03:20.786 A:middle
UI; and all the third-party

00:03:20.786 --> 00:03:22.156 A:middle
[adopters] in iOS 11.

00:03:22.706 --> 00:03:25.196 A:middle
On the other side of the

00:03:25.196 --> 00:03:27.016 A:middle
document browser UI are the file

00:03:27.016 --> 00:03:28.476 A:middle
providers, and the file

00:03:28.476 --> 00:03:30.066 A:middle
providers will provide files to

00:03:30.066 --> 00:03:31.626 A:middle
the system UI while the

00:03:31.626 --> 00:03:33.146 A:middle
document-based applications

00:03:34.186 --> 00:03:35.716 A:middle
pick, open one of those

00:03:35.716 --> 00:03:36.926 A:middle
documents from whichever file

00:03:36.926 --> 00:03:39.506 A:middle
provider, edit, or create new

00:03:40.846 --> 00:03:41.296 A:middle
documents.

00:03:41.506 --> 00:03:43.006 A:middle
So the reason why document-based

00:03:43.006 --> 00:03:44.376 A:middle
applications are going to adapt

00:03:44.586 --> 00:03:46.456 A:middle
is that this is a single API to

00:03:46.696 --> 00:03:49.006 A:middle
get access to all the places

00:03:49.006 --> 00:03:50.916 A:middle
where their users have their

00:03:50.916 --> 00:03:51.586 A:middle
documents.

00:03:52.216 --> 00:03:53.886 A:middle
Replaces the multiple SDKs that

00:03:53.886 --> 00:03:55.136 A:middle
they have had to adapt to until

00:03:55.136 --> 00:03:55.376 A:middle
now.

00:03:56.766 --> 00:03:58.326 A:middle
The reasons for file providers

00:03:58.326 --> 00:03:59.996 A:middle
to adopt is the privacy model,

00:03:59.996 --> 00:04:01.246 A:middle
which is really awesome here.

00:03:59.996 --> 00:04:01.246 A:middle
which is really awesome here.

00:04:01.246 --> 00:04:03.596 A:middle
So document-based applications

00:04:03.706 --> 00:04:05.246 A:middle
open documents one at a time.

00:04:06.486 --> 00:04:08.906 A:middle
It's totally user-gated access.

00:04:09.226 --> 00:04:11.286 A:middle
The system UI is out of process.

00:04:11.586 --> 00:04:12.726 A:middle
Document-based applications

00:04:12.726 --> 00:04:14.926 A:middle
cannot know which files exist

00:04:14.926 --> 00:04:16.046 A:middle
next to the file that was picked

00:04:16.046 --> 00:04:18.136 A:middle
or even which file providers are

00:04:18.136 --> 00:04:19.875 A:middle
installed until the user picks

00:04:19.875 --> 00:04:21.226 A:middle
one of the documents.

00:04:23.596 --> 00:04:25.666 A:middle
There are two key APIs here:

00:04:26.326 --> 00:04:27.266 A:middle
UIDocumentBrowser

00:04:27.266 --> 00:04:29.626 A:middle
ViewController, which is in the

00:04:29.626 --> 00:04:30.806 A:middle
SDK of the document-based

00:04:30.806 --> 00:04:31.526 A:middle
applications, and

00:04:31.526 --> 00:04:33.156 A:middle
NSFileProviderExtension.

00:04:36.116 --> 00:04:37.166 A:middle
We're not here to talk about

00:04:37.166 --> 00:04:37.976 A:middle
UIDocumentBrowser

00:04:37.976 --> 00:04:38.666 A:middle
ViewController.

00:04:38.906 --> 00:04:40.176 A:middle
That was covered in the session

00:04:40.546 --> 00:04:42.416 A:middle
yesterday that I invite you to

00:04:42.416 --> 00:04:43.966 A:middle
go watch if you missed it about

00:04:43.966 --> 00:04:45.466 A:middle
building document-based

00:04:45.466 --> 00:04:46.106 A:middle
applications.

00:04:46.106 --> 00:04:47.776 A:middle
We are here to talk about the

00:04:47.776 --> 00:04:48.486 A:middle
other end of this,

00:04:48.536 --> 00:04:49.806 A:middle
NSFileProviderExtension.

00:04:52.656 --> 00:04:54.886 A:middle
So let's look again at the Files

00:04:54.886 --> 00:04:55.016 A:middle
app.

00:04:55.716 --> 00:04:57.486 A:middle
There are two main ways for the

00:04:57.486 --> 00:05:00.806 A:middle
user to go and interact with his

00:04:57.486 --> 00:05:00.806 A:middle
user to go and interact with his

00:05:00.806 --> 00:05:02.486 A:middle
documents, and those correspond

00:05:02.486 --> 00:05:03.686 A:middle
to two tabs in the app.

00:05:04.036 --> 00:05:05.476 A:middle
The first tab is the Browse tab.

00:05:06.156 --> 00:05:07.736 A:middle
That is where the user goes to

00:05:07.736 --> 00:05:11.046 A:middle
find content in your cloud and

00:05:11.046 --> 00:05:12.326 A:middle
bring it down to the device.

00:05:13.076 --> 00:05:14.906 A:middle
In this mode, your file provider

00:05:14.906 --> 00:05:17.136 A:middle
extension acts as a pipe between

00:05:17.136 --> 00:05:18.866 A:middle
the system UI and your servers.

00:05:18.866 --> 00:05:20.236 A:middle
It's not even expected to work

00:05:20.236 --> 00:05:23.186 A:middle
offline, really.

00:05:23.366 --> 00:05:25.546 A:middle
Once the user has selected those

00:05:25.546 --> 00:05:26.946 A:middle
documents in the Browse tab,

00:05:26.946 --> 00:05:28.096 A:middle
they become available in the

00:05:28.096 --> 00:05:28.806 A:middle
Recents tab.

00:05:28.806 --> 00:05:31.416 A:middle
The Recents tab is the other

00:05:31.416 --> 00:05:33.826 A:middle
mode, and it is a flat list of

00:05:33.826 --> 00:05:34.896 A:middle
documents that come from the

00:05:34.896 --> 00:05:38.286 A:middle
very sources of documents and

00:05:38.316 --> 00:05:39.666 A:middle
are really relevant to the user.

00:05:39.666 --> 00:05:40.886 A:middle
That is where the user is going

00:05:40.886 --> 00:05:42.186 A:middle
to go look for the file he wants

00:05:42.186 --> 00:05:42.496 A:middle
to open.

00:05:42.496 --> 00:05:43.446 A:middle
And sure enough, it's going to

00:05:43.446 --> 00:05:43.796 A:middle
be there.

00:05:47.816 --> 00:05:50.666 A:middle
So two tabs -- Browse, Recents.

00:05:50.666 --> 00:05:52.026 A:middle
The Browse tab is for putting

00:05:52.026 --> 00:05:53.716 A:middle
new content for file providers

00:05:53.896 --> 00:05:55.996 A:middle
online for, folder, online to

00:05:55.996 --> 00:05:57.486 A:middle
folders and pick a document.

00:05:57.946 --> 00:06:00.016 A:middle
The Recents tab shows what we

00:05:57.946 --> 00:06:00.016 A:middle
The Recents tab shows what we

00:06:00.016 --> 00:06:01.276 A:middle
call the working set, and we're

00:06:01.276 --> 00:06:02.256 A:middle
going to talk about the working

00:06:02.256 --> 00:06:02.706 A:middle
set now.

00:06:03.416 --> 00:06:05.256 A:middle
So it's not folder based and it

00:06:05.256 --> 00:06:07.056 A:middle
spans multiple file providers.

00:06:07.786 --> 00:06:10.066 A:middle
And in a working set, there are

00:06:10.676 --> 00:06:12.416 A:middle
these documents.

00:06:12.546 --> 00:06:14.106 A:middle
So recently-opened documents or

00:06:14.106 --> 00:06:16.846 A:middle
used document, favorites, tag

00:06:16.846 --> 00:06:20.326 A:middle
documents and folders, documents

00:06:20.326 --> 00:06:22.106 A:middle
shared through or by the user,

00:06:22.386 --> 00:06:23.866 A:middle
documents that were previously

00:06:23.866 --> 00:06:25.206 A:middle
downloaded to the device and are

00:06:25.206 --> 00:06:26.226 A:middle
available offline, and

00:06:26.756 --> 00:06:30.036 A:middle
recently-deleted documents.

00:06:30.036 --> 00:06:32.326 A:middle
For the user experience to be

00:06:32.326 --> 00:06:33.646 A:middle
consistent across file provider,

00:06:33.646 --> 00:06:35.686 A:middle
we ask you to put all those

00:06:35.686 --> 00:06:36.696 A:middle
files in the working set.

00:06:37.156 --> 00:06:38.336 A:middle
But you have domain-specific

00:06:38.336 --> 00:06:38.716 A:middle
knowledge.

00:06:38.716 --> 00:06:39.756 A:middle
You know what's relevant to the

00:06:39.756 --> 00:06:40.026 A:middle
user.

00:06:40.026 --> 00:06:41.976 A:middle
So you might choose to add more

00:06:41.976 --> 00:06:44.216 A:middle
to the working set, if you so

00:06:44.216 --> 00:06:44.526 A:middle
want.

00:06:45.016 --> 00:06:48.656 A:middle
However, caveat: We are actually

00:06:48.656 --> 00:06:50.646 A:middle
Smart Caching the working set on

00:06:50.646 --> 00:06:51.126 A:middle
the device.

00:06:51.126 --> 00:06:52.296 A:middle
So once something is in the

00:06:52.296 --> 00:06:53.416 A:middle
working set, you'll have to keep

00:06:53.416 --> 00:06:53.916 A:middle
it in sync.

00:06:54.956 --> 00:06:58.016 A:middle
I'll get back to that.

00:06:58.016 --> 00:07:00.106 A:middle
So in the document browser in

00:06:58.016 --> 00:07:00.106 A:middle
So in the document browser in

00:07:00.106 --> 00:07:02.446 A:middle
the Recents tab, you'll see the

00:07:02.446 --> 00:07:03.256 A:middle
working set.

00:07:03.346 --> 00:07:04.696 A:middle
And each file provider may

00:07:04.696 --> 00:07:05.976 A:middle
contribute different documents

00:07:05.976 --> 00:07:06.896 A:middle
to the working set.

00:07:08.246 --> 00:07:10.916 A:middle
We don't do that at display

00:07:10.916 --> 00:07:11.266 A:middle
time.

00:07:11.786 --> 00:07:13.296 A:middle
If we had to merge the list of

00:07:13.296 --> 00:07:15.826 A:middle
documents as they come in from

00:07:15.826 --> 00:07:16.886 A:middle
the different file provider

00:07:16.886 --> 00:07:18.426 A:middle
extensions when the UI is

00:07:18.426 --> 00:07:19.326 A:middle
onscreen, you'd have weird

00:07:19.326 --> 00:07:21.246 A:middle
animations, visual glitches.

00:07:21.246 --> 00:07:22.426 A:middle
So we don't do that.

00:07:22.426 --> 00:07:24.286 A:middle
Instead, what we do is we

00:07:24.286 --> 00:07:26.436 A:middle
enumerate a working set index

00:07:26.436 --> 00:07:28.326 A:middle
that is kept by the system when

00:07:28.326 --> 00:07:29.266 A:middle
the UI comes up.

00:07:29.336 --> 00:07:30.216 A:middle
And your file provider

00:07:30.216 --> 00:07:32.026 A:middle
extensions are not even invoked

00:07:32.376 --> 00:07:32.756 A:middle
at all.

00:07:33.836 --> 00:07:34.846 A:middle
We're going to talk about how

00:07:34.846 --> 00:07:35.716 A:middle
that index is built.

00:07:36.976 --> 00:07:39.326 A:middle
So the index is local and on the

00:07:39.326 --> 00:07:39.986 A:middle
device.

00:07:40.156 --> 00:07:42.056 A:middle
It is the aggregation of the

00:07:42.056 --> 00:07:43.276 A:middle
working set from the different

00:07:43.276 --> 00:07:44.186 A:middle
file providers.

00:07:44.556 --> 00:07:45.866 A:middle
Because the index is local, it

00:07:45.866 --> 00:07:47.116 A:middle
means the index is available

00:07:47.216 --> 00:07:47.726 A:middle
offline.

00:07:47.726 --> 00:07:49.376 A:middle
It means that offline, if I

00:07:49.376 --> 00:07:50.806 A:middle
bring up that UI, the document

00:07:50.806 --> 00:07:52.086 A:middle
browser, I will see my recent

00:07:52.086 --> 00:07:52.556 A:middle
documents.

00:07:52.906 --> 00:07:53.696 A:middle
That doesn't mean that all the

00:07:53.696 --> 00:07:54.916 A:middle
documents are local on the

00:07:54.916 --> 00:07:56.506 A:middle
device at all time and offline.

00:07:56.876 --> 00:07:57.716 A:middle
It means that [enough data] to

00:07:57.886 --> 00:08:01.316 A:middle
build the UI is cached to the

00:07:57.886 --> 00:08:01.316 A:middle
build the UI is cached to the

00:08:01.316 --> 00:08:01.826 A:middle
device.

00:08:02.176 --> 00:08:06.506 A:middle
Because the index is local and

00:08:06.506 --> 00:08:09.536 A:middle
available offline, it is also in

00:08:09.536 --> 00:08:10.106 A:middle
Spotlight.

00:08:10.106 --> 00:08:11.866 A:middle
So the system index is for you,

00:08:12.626 --> 00:08:14.296 A:middle
the working set in Spotlight,

00:08:14.356 --> 00:08:16.266 A:middle
and users may pick a document in

00:08:16.266 --> 00:08:18.086 A:middle
Spotlight, and that will wake

00:08:18.086 --> 00:08:19.686 A:middle
your file provider extension at

00:08:20.266 --> 00:08:22.526 A:middle
that time.

00:08:22.736 --> 00:08:25.106 A:middle
So let's talk about how you

00:08:25.326 --> 00:08:27.266 A:middle
provide files to the working set

00:08:27.266 --> 00:08:28.276 A:middle
index, which happens in the

00:08:28.276 --> 00:08:29.696 A:middle
background before the document

00:08:29.696 --> 00:08:30.726 A:middle
browser comes up.

00:08:32.126 --> 00:08:33.416 A:middle
The first thing that you are

00:08:33.486 --> 00:08:35.836 A:middle
going to have to do is sync your

00:08:35.836 --> 00:08:38.186 A:middle
working set from your servers

00:08:38.186 --> 00:08:39.025 A:middle
down to the device.

00:08:39.346 --> 00:08:40.596 A:middle
So watch those file provider

00:08:40.596 --> 00:08:41.626 A:middle
extension boxes here.

00:08:42.436 --> 00:08:45.046 A:middle
The, we're asking you to keep a

00:08:45.046 --> 00:08:47.856 A:middle
database of the metadata for all

00:08:47.856 --> 00:08:49.176 A:middle
the files in the working set on

00:08:49.176 --> 00:08:49.636 A:middle
the device.

00:08:49.636 --> 00:08:51.276 A:middle
And actually, do sync both ways

00:08:51.276 --> 00:08:53.026 A:middle
because there are local changes

00:08:53.136 --> 00:08:54.066 A:middle
and [remote] changes.

00:08:54.676 --> 00:08:56.676 A:middle
The second step is that the

00:08:56.676 --> 00:08:59.306 A:middle
working set, the system is going

00:08:59.306 --> 00:09:00.866 A:middle
to drive the enumeration of the

00:08:59.306 --> 00:09:00.866 A:middle
to drive the enumeration of the

00:09:00.866 --> 00:09:02.116 A:middle
working set from your file

00:09:02.116 --> 00:09:04.536 A:middle
providers to build the index.

00:09:06.006 --> 00:09:07.306 A:middle
Happens in the background.

00:09:07.306 --> 00:09:09.086 A:middle
And then at a later time, when

00:09:09.086 --> 00:09:11.166 A:middle
the UI comes up, the system will

00:09:11.166 --> 00:09:12.646 A:middle
enumerate the working set index

00:09:12.646 --> 00:09:13.816 A:middle
without waking your file

00:09:13.816 --> 00:09:16.036 A:middle
provider extension to show the

00:09:16.036 --> 00:09:17.346 A:middle
Recents in the document browser.

00:09:17.346 --> 00:09:20.046 A:middle
All right, we're asking you to

00:09:20.046 --> 00:09:20.966 A:middle
do a lot of things here.

00:09:20.966 --> 00:09:22.446 A:middle
We're asking you do sync and to

00:09:22.446 --> 00:09:23.906 A:middle
do sync of a partial set of your

00:09:23.906 --> 00:09:24.516 A:middle
documents.

00:09:25.626 --> 00:09:26.886 A:middle
If you can't do partial sync,

00:09:26.986 --> 00:09:28.176 A:middle
you might want to consider

00:09:29.016 --> 00:09:31.036 A:middle
syncing all the user's documents

00:09:31.036 --> 00:09:32.056 A:middle
down to the device.

00:09:32.376 --> 00:09:34.216 A:middle
You're going to hit scaling

00:09:34.216 --> 00:09:36.116 A:middle
issues, so think carefully about

00:09:36.696 --> 00:09:37.406 A:middle
what you do there.

00:09:39.956 --> 00:09:42.416 A:middle
OK, what we saw to this point is

00:09:42.416 --> 00:09:45.406 A:middle
that there are two ways to

00:09:45.406 --> 00:09:46.366 A:middle
browse documents.

00:09:46.366 --> 00:09:48.256 A:middle
There is a Recents tab that

00:09:48.256 --> 00:09:49.866 A:middle
shows the working set, which is

00:09:49.866 --> 00:09:50.906 A:middle
synced in the background to the

00:09:50.906 --> 00:09:53.026 A:middle
device, and there is a Browse

00:09:53.026 --> 00:09:55.166 A:middle
tab, which is based on the

00:09:55.166 --> 00:09:57.156 A:middle
online enumerations of folders.

00:09:57.666 --> 00:09:59.206 A:middle
And I'm going to call Pierre to

00:09:59.206 --> 00:10:00.776 A:middle
show you how to create a file

00:09:59.206 --> 00:10:00.776 A:middle
show you how to create a file

00:10:00.776 --> 00:10:01.886 A:middle
provider extension now.

00:10:02.796 --> 00:10:04.256 A:middle
Thank you, Pierre.

00:10:04.256 --> 00:10:05.576 A:middle
&gt;&gt; Thank you, Jean-Gabriel.

00:10:06.386 --> 00:10:09.076 A:middle
So let's talk about creating a

00:10:09.076 --> 00:10:10.756 A:middle
file provider extension.

00:10:10.756 --> 00:10:12.966 A:middle
First, we're going to see how to

00:10:12.966 --> 00:10:14.966 A:middle
create the project, then how to

00:10:14.966 --> 00:10:16.136 A:middle
provide a single item, then

00:10:16.496 --> 00:10:18.866 A:middle
enumerate a list of items, and

00:10:18.866 --> 00:10:19.876 A:middle
then I will [hand over to Johannes] who is

00:10:19.946 --> 00:10:22.016 A:middle
going to go through you, with

00:10:22.016 --> 00:10:26.006 A:middle
you and [to see how] to modify

00:10:26.006 --> 00:10:28.576 A:middle
item, provide custom action, and

00:10:28.576 --> 00:10:29.846 A:middle
as well as do something very,

00:10:29.846 --> 00:10:31.906 A:middle
very powerful, which is provide

00:10:31.906 --> 00:10:33.616 A:middle
services to third-parties.

00:10:33.616 --> 00:10:34.446 A:middle
What does that mean?

00:10:34.446 --> 00:10:35.876 A:middle
It means that your file provider

00:10:35.876 --> 00:10:37.626 A:middle
extension can provide its own

00:10:37.626 --> 00:10:39.916 A:middle
API, so you own API to other

00:10:39.916 --> 00:10:40.706 A:middle
third-party's app.

00:10:41.696 --> 00:10:42.756 A:middle
This is really cool, so you

00:10:42.756 --> 00:10:44.296 A:middle
probably want to stay until you

00:10:44.296 --> 00:10:47.626 A:middle
see this or play it online

00:10:48.656 --> 00:10:48.786 A:middle
later.

00:10:49.896 --> 00:10:50.926 A:middle
Creating a file provider

00:10:50.926 --> 00:10:52.186 A:middle
extension is really simple if

00:10:52.186 --> 00:10:53.256 A:middle
you start from scratch.

00:10:53.256 --> 00:10:55.196 A:middle
So there is a Xcode template,

00:10:55.656 --> 00:10:56.946 A:middle
File Provider Extension.

00:10:56.946 --> 00:10:57.596 A:middle
Just click on it.

00:10:57.596 --> 00:10:58.426 A:middle
Boom, it's done.

00:10:59.046 --> 00:11:00.366 A:middle
And then the real work begin.

00:10:59.046 --> 00:11:00.366 A:middle
And then the real work begin.

00:11:00.496 --> 00:11:01.466 A:middle
You have to subclass

00:11:01.466 --> 00:11:03.016 A:middle
NSFileProviderExtension.

00:11:03.996 --> 00:11:06.146 A:middle
If you already have an existing

00:11:06.146 --> 00:11:07.896 A:middle
file provider extension, in that

00:11:07.896 --> 00:11:10.306 A:middle
case, what you should do is add

00:11:10.306 --> 00:11:12.746 A:middle
the support enumeration key to

00:11:12.746 --> 00:11:13.586 A:middle
your Info.plist.

00:11:13.966 --> 00:11:15.816 A:middle
That will tell the system, look,

00:11:15.816 --> 00:11:17.676 A:middle
you probably want to take this

00:11:17.676 --> 00:11:19.736 A:middle
file extension and use the new

00:11:19.856 --> 00:11:21.976 A:middle
UI to render my document.

00:11:23.056 --> 00:11:26.626 A:middle
So the big picture during this

00:11:26.626 --> 00:11:28.296 A:middle
file provider extension subclass

00:11:28.556 --> 00:11:30.326 A:middle
that you should build.

00:11:31.056 --> 00:11:32.586 A:middle
Your file provider extension

00:11:32.586 --> 00:11:34.196 A:middle
subclass [role] is to vend

00:11:34.196 --> 00:11:35.856 A:middle
the item metadata by

00:11:35.856 --> 00:11:37.636 A:middle
implementing or returning object

00:11:37.636 --> 00:11:39.226 A:middle
implementing the NSFileProvider

00:11:39.226 --> 00:11:42.806 A:middle
protocol, NSFileProviderItem

00:11:42.806 --> 00:11:43.296 A:middle
protocol.

00:11:44.116 --> 00:11:46.656 A:middle
Those item are identified by a

00:11:46.656 --> 00:11:50.056 A:middle
string that you provide and are

00:11:50.056 --> 00:11:51.726 A:middle
materialized on disk through

00:11:51.726 --> 00:11:53.306 A:middle
file URL.

00:11:54.376 --> 00:11:58.716 A:middle
The folder contents of your file

00:11:58.756 --> 00:12:01.286 A:middle
provider is exposed by

00:11:58.756 --> 00:12:01.286 A:middle
provider is exposed by

00:12:01.286 --> 00:12:02.936 A:middle
implementing what we call an

00:12:02.936 --> 00:12:04.556 A:middle
NSFileProviderEnumerator.

00:12:05.006 --> 00:12:07.176 A:middle
That sounds complicated, but

00:12:07.176 --> 00:12:07.666 A:middle
it's not.

00:12:08.296 --> 00:12:10.936 A:middle
So, and before jumping into the

00:12:10.936 --> 00:12:12.116 A:middle
very detail, let's have a big

00:12:12.176 --> 00:12:14.096 A:middle
picture of the tasks we've been

00:12:14.096 --> 00:12:16.606 A:middle
going through and see what the

00:12:16.636 --> 00:12:18.526 A:middle
anatomy of a file provider

00:12:18.526 --> 00:12:20.046 A:middle
extension is going to look like

00:12:20.246 --> 00:12:21.476 A:middle
after we build all this.

00:12:22.046 --> 00:12:23.346 A:middle
So first task, we need to

00:12:23.346 --> 00:12:24.726 A:middle
provide the metadata for a given

00:12:24.726 --> 00:12:25.666 A:middle
item identifier.

00:12:26.756 --> 00:12:28.966 A:middle
That's straightforward if you

00:12:28.966 --> 00:12:30.516 A:middle
have a database, so you probably

00:12:30.516 --> 00:12:32.156 A:middle
want to have a database.

00:12:32.296 --> 00:12:35.926 A:middle
Then, you need to map URLs to

00:12:35.926 --> 00:12:36.876 A:middle
item identifiers.

00:12:36.876 --> 00:12:39.746 A:middle
That's probably a semicolon in

00:12:39.746 --> 00:12:40.486 A:middle
your database.

00:12:40.756 --> 00:12:43.186 A:middle
Last, you're in charge of

00:12:43.186 --> 00:12:46.046 A:middle
managing the disk storage,

00:12:46.156 --> 00:12:48.186 A:middle
whether the data corresponding

00:12:48.186 --> 00:12:50.106 A:middle
to a file is local or not.

00:12:50.836 --> 00:12:52.786 A:middle
That's the second piece of your

00:12:52.786 --> 00:12:53.816 A:middle
file provider extension.

00:12:54.686 --> 00:12:57.076 A:middle
And inside the disk storage, of

00:12:57.076 --> 00:12:58.266 A:middle
course, file can be there or

00:12:58.266 --> 00:13:01.396 A:middle
not, as shown on screen behind me.

00:12:58.266 --> 00:13:01.396 A:middle
not, as shown on screen behind me.

00:13:02.306 --> 00:13:04.186 A:middle
OK, so we've seen the anatomy.

00:13:04.266 --> 00:13:06.296 A:middle
Let's jump in and provide an

00:13:06.296 --> 00:13:06.786 A:middle
item.

00:13:06.876 --> 00:13:08.466 A:middle
What does it mean to provide an

00:13:08.466 --> 00:13:08.866 A:middle
item?

00:13:09.736 --> 00:13:11.216 A:middle
First, you need to provide a

00:13:11.216 --> 00:13:11.516 A:middle
file URL.

00:13:11.866 --> 00:13:15.016 A:middle
Then, file contents, metadata,

00:13:15.876 --> 00:13:17.306 A:middle
and thumbnail for your item.

00:13:17.766 --> 00:13:19.236 A:middle
That's it.

00:13:20.016 --> 00:13:22.116 A:middle
Why do you need to provide a

00:13:22.116 --> 00:13:23.396 A:middle
file URL, you might ask?

00:13:24.486 --> 00:13:26.856 A:middle
Well, file provider manipulates

00:13:27.116 --> 00:13:29.246 A:middle
file provider item and file

00:13:29.246 --> 00:13:31.006 A:middle
provider item identifier, not

00:13:31.006 --> 00:13:32.146 A:middle
file URLs directly.

00:13:32.986 --> 00:13:35.986 A:middle
However, document-based apps do

00:13:35.986 --> 00:13:40.386 A:middle
consume file URLs, so we need to

00:13:40.386 --> 00:13:43.076 A:middle
bridge between the two, so let's

00:13:43.616 --> 00:13:45.856 A:middle
take an example.

00:13:45.856 --> 00:13:47.156 A:middle
When the user taps on the file

00:13:47.156 --> 00:13:49.336 A:middle
in the File app, the File app

00:13:49.566 --> 00:13:50.746 A:middle
only has access to your item

00:13:50.746 --> 00:13:51.916 A:middle
identifier at that point.

00:13:52.396 --> 00:13:53.416 A:middle
So before calling the

00:13:53.416 --> 00:13:55.676 A:middle
document-based app, it's

00:13:55.676 --> 00:13:57.116 A:middle
actually going to call into your

00:13:57.116 --> 00:13:58.216 A:middle
file provider extension

00:13:58.216 --> 00:13:59.006 A:middle
subclass.

00:14:00.196 --> 00:14:02.156 A:middle
The method urlForItem with

00:14:02.156 --> 00:14:04.336 A:middle
identifier is going to get

00:14:04.336 --> 00:14:06.016 A:middle
called, and so you will look in

00:14:06.016 --> 00:14:08.076 A:middle
your database, figure out the

00:14:08.076 --> 00:14:09.306 A:middle
URL for the given item

00:14:09.306 --> 00:14:11.146 A:middle
identifier, and, boom, you'll

00:14:11.146 --> 00:14:12.736 A:middle
return into the document-based

00:14:12.736 --> 00:14:12.926 A:middle
app.

00:14:13.616 --> 00:14:15.176 A:middle
Not you, the system does it

00:14:15.176 --> 00:14:16.316 A:middle
for you, but you return it to

00:14:16.316 --> 00:14:18.336 A:middle
the system which returns it to the

00:14:18.336 --> 00:14:19.826 A:middle
document-based app, and you're

00:14:19.826 --> 00:14:20.046 A:middle
done.

00:14:20.936 --> 00:14:22.236 A:middle
At that point, the

00:14:22.236 --> 00:14:23.606 A:middle
document-based app opened a file

00:14:23.606 --> 00:14:24.466 A:middle
by URL.

00:14:24.466 --> 00:14:25.856 A:middle
Under the hood, I was

00:14:25.856 --> 00:14:27.496 A:middle
talking about the database to

00:14:27.496 --> 00:14:29.936 A:middle
the URL to item identifier

00:14:29.936 --> 00:14:30.406 A:middle
mapping.

00:14:30.406 --> 00:14:31.766 A:middle
One thing you might want to do

00:14:32.016 --> 00:14:33.616 A:middle
is to actually start the item

00:14:33.616 --> 00:14:35.406 A:middle
identifier inside the file URL.

00:14:36.436 --> 00:14:37.966 A:middle
It's very convenient because you

00:14:37.966 --> 00:14:40.636 A:middle
can avoid database lookup if you

00:14:40.636 --> 00:14:44.816 A:middle
do that and you can tag items

00:14:44.816 --> 00:14:45.586 A:middle
between renames.

00:14:45.586 --> 00:14:47.056 A:middle
Last tidbit, you probably want

00:14:47.056 --> 00:14:49.396 A:middle
to keep a flat list in your disk

00:14:49.396 --> 00:14:50.086 A:middle
storage.

00:14:50.246 --> 00:14:51.326 A:middle
You don't need to replicate the

00:14:51.326 --> 00:14:53.146 A:middle
folder hierarchy because this is

00:14:53.146 --> 00:14:54.446 A:middle
quite complicated, and so you

00:14:54.446 --> 00:14:55.926 A:middle
can avoid it, so please do.

00:14:56.286 --> 00:14:57.686 A:middle
So you might say, hey, Pierre,

00:14:57.686 --> 00:14:59.336 A:middle
so we have the file URL, but

00:14:59.336 --> 00:15:00.456 A:middle
what about the file content?

00:14:59.336 --> 00:15:00.456 A:middle
what about the file content?

00:15:00.456 --> 00:15:02.066 A:middle
Because I did not know they're

00:15:02.066 --> 00:15:02.956 A:middle
missing at that point.

00:15:03.656 --> 00:15:05.496 A:middle
So of course, we should look

00:15:05.496 --> 00:15:05.976 A:middle
into that.

00:15:05.976 --> 00:15:07.846 A:middle
So you can open the file by, so

00:15:07.846 --> 00:15:09.116 A:middle
when the document-based app

00:15:09.586 --> 00:15:11.976 A:middle
opened your app, it opened the

00:15:11.976 --> 00:15:13.996 A:middle
file by URL.

00:15:15.266 --> 00:15:18.386 A:middle
But it's not doing that state.

00:15:18.456 --> 00:15:19.416 A:middle
Like, it should use

00:15:19.486 --> 00:15:23.106 A:middle
NSFileCoordinator and read using

00:15:23.106 --> 00:15:24.486 A:middle
a file coordination request.

00:15:24.936 --> 00:15:27.086 A:middle
That is something apps using UI

00:15:27.086 --> 00:15:29.766 A:middle
documents do for free, so when

00:15:29.766 --> 00:15:31.336 A:middle
that happens, your file provider

00:15:31.336 --> 00:15:32.406 A:middle
extension is called.

00:15:33.716 --> 00:15:34.756 A:middle
More specifically, in your

00:15:34.756 --> 00:15:37.396 A:middle
subclass, startProvidingItem at

00:15:37.396 --> 00:15:39.306 A:middle
URL with completionHandler is

00:15:39.306 --> 00:15:40.116 A:middle
going to get called.

00:15:41.056 --> 00:15:41.736 A:middle
When you receive such a call, you look

00:15:41.736 --> 00:15:43.596 A:middle
into your disk storage.

00:15:43.596 --> 00:15:44.946 A:middle
You figure out that the item is not

00:15:44.946 --> 00:15:45.236 A:middle
there.

00:15:46.116 --> 00:15:48.456 A:middle
So you go in your server, through

00:15:48.456 --> 00:15:50.636 A:middle
NSURLSession most likely, and

00:15:50.636 --> 00:15:51.406 A:middle
you download the file.

00:15:52.016 --> 00:15:53.816 A:middle
The download completes.

00:15:55.086 --> 00:15:58.546 A:middle
The file is moved into your disk

00:15:58.736 --> 00:15:59.336 A:middle
storage.

00:16:00.526 --> 00:16:01.606 A:middle
Now, you can call the

00:16:01.606 --> 00:16:03.876 A:middle
completionHandler that is going

00:16:03.876 --> 00:16:05.276 A:middle
to grant the coordination to the

00:16:05.626 --> 00:16:07.016 A:middle
document-based app.

00:16:07.296 --> 00:16:09.256 A:middle
And at that point, the file is

00:16:09.256 --> 00:16:09.576 A:middle
opened.

00:16:10.566 --> 00:16:12.556 A:middle
Cool. So what happens if you

00:16:12.556 --> 00:16:13.826 A:middle
want this a second time?

00:16:14.146 --> 00:16:15.726 A:middle
Because this time, the file is

00:16:15.726 --> 00:16:16.136 A:middle
there.

00:16:17.206 --> 00:16:20.456 A:middle
But there is still going to be a

00:16:20.456 --> 00:16:22.586 A:middle
file coordinator reader request

00:16:22.886 --> 00:16:23.396 A:middle
issued.

00:16:23.736 --> 00:16:25.396 A:middle
And at that point, this is

00:16:25.396 --> 00:16:25.956 A:middle
pretty cool.

00:16:26.286 --> 00:16:27.566 A:middle
Your file provider extension

00:16:27.566 --> 00:16:28.756 A:middle
subclass is going to get called

00:16:28.756 --> 00:16:29.056 A:middle
again.

00:16:29.056 --> 00:16:30.716 A:middle
So that's very powerful for you

00:16:30.716 --> 00:16:32.966 A:middle
to track usage on your files.

00:16:33.706 --> 00:16:35.176 A:middle
But this time, the file is here,

00:16:35.176 --> 00:16:36.186 A:middle
so what do you need to do?

00:16:36.256 --> 00:16:36.896 A:middle
Well, you just

00:16:36.896 --> 00:16:38.286 A:middle
completionHandler, and you're

00:16:38.286 --> 00:16:38.536 A:middle
done.

00:16:38.726 --> 00:16:40.896 A:middle
It's very powerful, but at the

00:16:40.896 --> 00:16:42.556 A:middle
same time, it means that your

00:16:42.556 --> 00:16:44.026 A:middle
file provider extension might

00:16:44.106 --> 00:16:46.856 A:middle
be, might delay file loading.

00:16:47.096 --> 00:16:49.606 A:middle
So you better be fast when you

00:16:50.286 --> 00:16:52.586 A:middle
implement startProvidingItem if

00:16:52.586 --> 00:16:53.826 A:middle
the file is already local.

00:16:53.826 --> 00:16:56.466 A:middle
OK, so the coordination is

00:16:56.466 --> 00:16:58.766 A:middle
granted, and you've seen this

00:16:58.766 --> 00:16:59.176 A:middle
before.

00:16:59.176 --> 00:17:00.286 A:middle
The file is now opened.

00:16:59.176 --> 00:17:00.286 A:middle
The file is now opened.

00:17:02.076 --> 00:17:02.816 A:middle
Second part.

00:17:03.126 --> 00:17:06.496 A:middle
In the Files app, the metadata

00:17:06.496 --> 00:17:07.715 A:middle
of your files are prominent.

00:17:07.715 --> 00:17:10.526 A:middle
And the way it works is that for

00:17:10.526 --> 00:17:12.836 A:middle
each item that the files have

00:17:12.836 --> 00:17:14.756 A:middle
displayed, your file provider is

00:17:14.756 --> 00:17:16.955 A:middle
going to be called, and the

00:17:16.955 --> 00:17:18.445 A:middle
specific method this time is

00:17:18.445 --> 00:17:20.685 A:middle
called itemForItemIdentifier,

00:17:21.215 --> 00:17:22.016 A:middle
which returns an

00:17:22.016 --> 00:17:23.165 A:middle
NSFileProviderItem.

00:17:23.246 --> 00:17:25.415 A:middle
That item should be constructed

00:17:25.415 --> 00:17:26.455 A:middle
from your database.

00:17:26.455 --> 00:17:30.116 A:middle
So you look at your database,

00:17:31.216 --> 00:17:32.916 A:middle
you get an NSFileProviderItem,

00:17:33.146 --> 00:17:35.426 A:middle
and you return it.

00:17:36.836 --> 00:17:39.706 A:middle
OK, that was simple, but I did

00:17:39.706 --> 00:17:41.156 A:middle
not actually go into the detail

00:17:41.156 --> 00:17:42.536 A:middle
of what is an

00:17:42.536 --> 00:17:43.416 A:middle
NSFileProviderItem.

00:17:43.416 --> 00:17:45.846 A:middle
So as I told you a bit earlier,

00:17:45.846 --> 00:17:46.666 A:middle
it's a protocol.

00:17:46.666 --> 00:17:49.146 A:middle
And with most protocols, you have

00:17:50.066 --> 00:17:52.276 A:middle
required properties as well as

00:17:52.396 --> 00:17:53.266 A:middle
optional properties.

00:17:53.266 --> 00:17:54.706 A:middle
So let's go into the detail of

00:17:54.706 --> 00:17:56.536 A:middle
the required properties that

00:17:56.536 --> 00:17:58.746 A:middle
your object conforming to

00:17:58.746 --> 00:18:00.376 A:middle
NSFileProviderItem must

00:17:58.746 --> 00:18:00.376 A:middle
NSFileProviderItem must

00:18:00.376 --> 00:18:00.756 A:middle
implement.

00:18:01.266 --> 00:18:03.366 A:middle
So the first properties are

00:18:03.366 --> 00:18:04.726 A:middle
obviously the itemIdentifier, so

00:18:04.806 --> 00:18:05.946 A:middle
that's a simple string.

00:18:06.726 --> 00:18:07.666 A:middle
Then, you have the

00:18:07.666 --> 00:18:09.476 A:middle
typeIdentifier, and that is the

00:18:09.476 --> 00:18:11.596 A:middle
UTI, indicating whether the file

00:18:11.596 --> 00:18:15.016 A:middle
is a PDF, an image, or a folder.

00:18:15.016 --> 00:18:19.106 A:middle
And last but not least, you have

00:18:19.106 --> 00:18:20.926 A:middle
the filename, which is pretty

00:18:20.926 --> 00:18:22.256 A:middle
prominent in the UI.

00:18:22.256 --> 00:18:27.186 A:middle
So now that we've seen the

00:18:27.186 --> 00:18:28.586 A:middle
required properties, that's all

00:18:28.586 --> 00:18:30.236 A:middle
you really need to implement, we

00:18:30.236 --> 00:18:31.496 A:middle
can move on to the optional

00:18:31.496 --> 00:18:33.456 A:middle
properties that we strongly

00:18:33.456 --> 00:18:36.096 A:middle
encourage you to also implement.

00:18:36.216 --> 00:18:39.676 A:middle
For instance, in this particular

00:18:39.676 --> 00:18:43.886 A:middle
screenshot here, there is the

00:18:43.886 --> 00:18:46.906 A:middle
shared status that is displayed

00:18:46.906 --> 00:18:48.926 A:middle
just below the filename.

00:18:49.326 --> 00:18:51.296 A:middle
That shared status is displayed

00:18:51.296 --> 00:18:53.056 A:middle
onscreen if you set the isShared

00:18:53.056 --> 00:18:53.606 A:middle
property.

00:18:53.956 --> 00:18:56.036 A:middle
And to go along with the shared

00:18:56.036 --> 00:18:56.916 A:middle
status, you have the

00:18:56.916 --> 00:18:58.826 A:middle
ownerNameComponents that you can

00:18:58.826 --> 00:18:59.416 A:middle
specify.

00:19:00.076 --> 00:19:01.106 A:middle
And now, you can see on my

00:19:01.106 --> 00:19:02.316 A:middle
document slide, "Shared by

00:19:02.316 --> 00:19:05.376 A:middle
Amaury," which is pretty good to

00:19:05.566 --> 00:19:05.633 A:middle
know.

00:19:05.633 --> 00:19:06.826 A:middle
Then, you have additional states

00:19:06.826 --> 00:19:08.526 A:middle
such as isDownloaded -- that

00:19:08.526 --> 00:19:10.946 A:middle
lets, display a small down arrow

00:19:11.266 --> 00:19:13.386 A:middle
-- isUploading and uploadError.

00:19:13.386 --> 00:19:14.066 A:middle
So the uploadError is

00:19:14.066 --> 00:19:16.106 A:middle
interesting because if your user

00:19:16.106 --> 00:19:16.856 A:middle
doesn't have enough quota

00:19:16.856 --> 00:19:19.086 A:middle
to actually upload the file, you

00:19:19.086 --> 00:19:20.496 A:middle
probably won't position that

00:19:20.496 --> 00:19:20.686 A:middle
error.

00:19:21.196 --> 00:19:22.906 A:middle
OK, there are a lot of

00:19:22.906 --> 00:19:24.006 A:middle
additional properties.

00:19:24.076 --> 00:19:25.346 A:middle
Unfortunately, we don't have

00:19:25.396 --> 00:19:27.036 A:middle
time to go through all of them.

00:19:27.466 --> 00:19:29.316 A:middle
So we're just going to move on,

00:19:29.316 --> 00:19:30.886 A:middle
but I encourage you to read our

00:19:30.886 --> 00:19:32.126 A:middle
documentation, which is pretty

00:19:32.126 --> 00:19:34.146 A:middle
good on the subject, as well as

00:19:34.146 --> 00:19:35.396 A:middle
our header files.

00:19:35.726 --> 00:19:37.216 A:middle
Well, so we've seen the

00:19:37.216 --> 00:19:38.776 A:middle
metadata, but there is one last

00:19:38.776 --> 00:19:40.106 A:middle
piece of metadata we did not

00:19:40.106 --> 00:19:41.246 A:middle
talk about, and it's a fairly

00:19:41.246 --> 00:19:43.036 A:middle
big one, so it used a different

00:19:43.036 --> 00:19:43.536 A:middle
pipeline.

00:19:43.816 --> 00:19:44.746 A:middle
It's the thumbnail.

00:19:45.626 --> 00:19:46.866 A:middle
So when the Files app displays

00:19:46.866 --> 00:19:48.436 A:middle
your file, especially if the

00:19:48.436 --> 00:19:49.796 A:middle
file is not local -- in that

00:19:49.796 --> 00:19:51.026 A:middle
case, there is no way we can

00:19:51.026 --> 00:19:52.906 A:middle
generate a thumbnail out of that

00:19:52.906 --> 00:19:55.126 A:middle
file -- what we are going to do

00:19:55.126 --> 00:19:56.636 A:middle
is to ask your file provider

00:19:56.636 --> 00:19:58.156 A:middle
extension to fetch the

00:19:58.156 --> 00:20:00.076 A:middle
thumbnails for a list of files.

00:19:58.156 --> 00:20:00.076 A:middle
thumbnails for a list of files.

00:20:00.756 --> 00:20:02.846 A:middle
In that case, you can go on your

00:20:02.846 --> 00:20:04.346 A:middle
server, ask it to download the

00:20:04.526 --> 00:20:05.846 A:middle
thumbnail associated to the

00:20:05.846 --> 00:20:06.366 A:middle
file.

00:20:07.516 --> 00:20:09.006 A:middle
When the download completes, you

00:20:09.006 --> 00:20:10.476 A:middle
hand back the thumbnail data.

00:20:10.526 --> 00:20:13.746 A:middle
And at this point, we just

00:20:14.026 --> 00:20:17.216 A:middle
display the thumbnail.

00:20:18.196 --> 00:20:19.896 A:middle
So I'm going to go into detail

00:20:19.896 --> 00:20:21.606 A:middle
of how that fetch thumbnail

00:20:21.606 --> 00:20:22.846 A:middle
function works because it's a

00:20:22.846 --> 00:20:24.146 A:middle
bit more involved than the other

00:20:24.146 --> 00:20:24.486 A:middle
one.

00:20:25.706 --> 00:20:27.996 A:middle
So first, what you have onscreen

00:20:27.996 --> 00:20:29.376 A:middle
if your file provider extension

00:20:29.376 --> 00:20:29.936 A:middle
subclass.

00:20:30.626 --> 00:20:32.986 A:middle
And so we did, it's a file

00:20:32.986 --> 00:20:34.066 A:middle
provider extension subclass

00:20:34.066 --> 00:20:35.436 A:middle
called MyFileProviderExtension.

00:20:35.436 --> 00:20:36.876 A:middle
And there, you want to override

00:20:36.876 --> 00:20:37.986 A:middle
the fetchThumbnail function.

00:20:38.576 --> 00:20:39.896 A:middle
It takes a list of item

00:20:39.896 --> 00:20:40.786 A:middle
identifiers.

00:20:40.786 --> 00:20:41.376 A:middle
Why a list?

00:20:41.506 --> 00:20:42.696 A:middle
Because we want to do batching

00:20:42.696 --> 00:20:45.076 A:middle
for performance reasons so that

00:20:45.076 --> 00:20:46.616 A:middle
we don't hit the server

00:20:46.616 --> 00:20:47.406 A:middle
for every thumbnail.

00:20:48.606 --> 00:20:50.326 A:middle
Then, you have a requestedSize,

00:20:50.616 --> 00:20:52.396 A:middle
a perThumbnailCompletionHandler,

00:20:52.396 --> 00:20:53.446 A:middle
and then an overall

00:20:53.446 --> 00:20:54.376 A:middle
completionHandler.

00:20:54.376 --> 00:20:57.056 A:middle
The first thing you want to do

00:20:57.056 --> 00:20:58.876 A:middle
is to actually create a progress

00:20:58.876 --> 00:20:59.206 A:middle
object.

00:20:59.426 --> 00:21:01.226 A:middle
The reason why is not so much

00:20:59.426 --> 00:21:01.226 A:middle
The reason why is not so much

00:21:01.226 --> 00:21:03.146 A:middle
for reporting, but more for

00:21:03.146 --> 00:21:05.196 A:middle
consideration purposes so that

00:21:05.356 --> 00:21:07.726 A:middle
if the thumbnail request is

00:21:07.726 --> 00:21:08.726 A:middle
canceled because the user

00:21:08.726 --> 00:21:10.556 A:middle
dismissed the Files app, then

00:21:10.556 --> 00:21:11.726 A:middle
you would be aware and you would

00:21:11.726 --> 00:21:12.726 A:middle
be able -- and you must,

00:21:12.726 --> 00:21:13.956 A:middle
actually -- cancel your

00:21:13.956 --> 00:21:14.836 A:middle
thumbnail request.

00:21:17.176 --> 00:21:18.426 A:middle
So now, imagine you download the

00:21:18.426 --> 00:21:20.236 A:middle
files from your server using a

00:21:20.596 --> 00:21:22.216 A:middle
download task.

00:21:23.196 --> 00:21:24.976 A:middle
For each thumbnail, you get the

00:21:24.976 --> 00:21:26.076 A:middle
file UI that you would have

00:21:26.076 --> 00:21:27.466 A:middle
downloaded and you map it.

00:21:27.966 --> 00:21:29.216 A:middle
So be sure to not allocate

00:21:29.216 --> 00:21:29.956 A:middle
memory there.

00:21:29.956 --> 00:21:31.666 A:middle
So I encourage you to use the

00:21:31.666 --> 00:21:32.846 A:middle
alwaysMapped option.

00:21:33.876 --> 00:21:35.466 A:middle
Finally, you call your

00:21:35.466 --> 00:21:36.846 A:middle
perThumbnailCompletionHandler,

00:21:37.376 --> 00:21:39.476 A:middle
and that's not the real finally,

00:21:39.476 --> 00:21:40.846 A:middle
the real finally is this one.

00:21:41.176 --> 00:21:42.766 A:middle
You actually call the overall

00:21:42.766 --> 00:21:43.556 A:middle
completionHandler.

00:21:43.556 --> 00:21:46.286 A:middle
So remember one thing: You must

00:21:46.286 --> 00:21:48.086 A:middle
call it in case of success,

00:21:48.086 --> 00:21:50.656 A:middle
failure, cancellation always.

00:21:51.176 --> 00:21:53.446 A:middle
And now, you can return the

00:21:53.446 --> 00:21:54.486 A:middle
progress object so that the

00:21:54.486 --> 00:21:56.366 A:middle
system knows how to cancel your

00:21:56.366 --> 00:21:57.166 A:middle
thumbnail request.

00:21:58.346 --> 00:21:59.026 A:middle
Boom, well done.

00:21:59.026 --> 00:22:00.456 A:middle
We provided an item, so we're

00:21:59.026 --> 00:22:00.456 A:middle
We provided an item, so we're

00:22:00.456 --> 00:22:00.866 A:middle
happy.

00:22:00.866 --> 00:22:02.106 A:middle
But now, let's move on to the

00:22:02.106 --> 00:22:04.906 A:middle
next topic, which is enumerating

00:22:04.906 --> 00:22:05.236 A:middle
items.

00:22:06.086 --> 00:22:08.476 A:middle
So for that, enumerating items

00:22:08.476 --> 00:22:10.396 A:middle
means actually providing data to

00:22:10.396 --> 00:22:12.676 A:middle
the screenshots or to the Files

00:22:12.676 --> 00:22:14.226 A:middle
app that I have on screenshot

00:22:14.416 --> 00:22:14.826 A:middle
beside me.

00:22:14.906 --> 00:22:17.926 A:middle
And we are going to see how to

00:22:17.926 --> 00:22:19.856 A:middle
paginate items, sync changes,

00:22:20.536 --> 00:22:22.026 A:middle
render push notification, and

00:22:22.026 --> 00:22:23.116 A:middle
then signal changes.

00:22:24.096 --> 00:22:26.896 A:middle
So enumerating item works this

00:22:26.896 --> 00:22:27.116 A:middle
way.

00:22:27.646 --> 00:22:29.736 A:middle
The Files app starts up,

00:22:29.736 --> 00:22:31.076 A:middle
requests a page of item.

00:22:32.066 --> 00:22:33.136 A:middle
Your file provider extension

00:22:33.136 --> 00:22:34.196 A:middle
return the first page.

00:22:36.366 --> 00:22:37.626 A:middle
It's all over.

00:22:37.626 --> 00:22:38.516 A:middle
There's still some room

00:22:38.516 --> 00:22:39.946 A:middle
onscreen, so it's going to ask

00:22:39.946 --> 00:22:40.876 A:middle
for another page.

00:22:41.486 --> 00:22:44.186 A:middle
And so on and so forth until it

00:22:44.186 --> 00:22:44.866 A:middle
does everything.

00:22:45.896 --> 00:22:47.326 A:middle
The question you might ask is,

00:22:47.326 --> 00:22:48.576 A:middle
why do we paginate?

00:22:49.076 --> 00:22:50.676 A:middle
What's the sense of all this?

00:22:51.306 --> 00:22:52.986 A:middle
So what you have to know is that

00:22:52.986 --> 00:22:54.736 A:middle
your extension is granted a tiny

00:22:54.736 --> 00:22:57.126 A:middle
fraction of the memory your app

00:22:57.316 --> 00:22:57.916 A:middle
is granted.

00:22:58.246 --> 00:23:02.586 A:middle
If your app is in blue there,

00:22:58.246 --> 00:23:02.586 A:middle
If your app is in blue there,

00:23:03.026 --> 00:23:04.176 A:middle
your extension is in gray.

00:23:04.656 --> 00:23:06.026 A:middle
You can't even see it onscreen.

00:23:06.746 --> 00:23:08.966 A:middle
What you also have to know is

00:23:08.966 --> 00:23:11.906 A:middle
that above this limit of, if you

00:23:11.906 --> 00:23:13.226 A:middle
allocate more memory than what

00:23:13.226 --> 00:23:15.336 A:middle
you have available, your

00:23:15.396 --> 00:23:16.656 A:middle
extension is terminated.

00:23:16.656 --> 00:23:18.156 A:middle
So we strongly encourage you --

00:23:18.156 --> 00:23:19.826 A:middle
and this is what pagination is

00:23:19.826 --> 00:23:22.596 A:middle
all about -- to avoid peak in

00:23:22.596 --> 00:23:23.816 A:middle
your memory allocation.

00:23:24.646 --> 00:23:27.196 A:middle
I just want to go through some

00:23:27.196 --> 00:23:29.376 A:middle
other tips that we found useful

00:23:29.376 --> 00:23:30.686 A:middle
and that you might also find

00:23:30.686 --> 00:23:31.136 A:middle
useful.

00:23:31.906 --> 00:23:33.976 A:middle
Avoid using all data task.

00:23:34.086 --> 00:23:35.746 A:middle
Instead, prefer the download and

00:23:35.746 --> 00:23:36.756 A:middle
upload task because they

00:23:36.756 --> 00:23:38.566 A:middle
manipulate files, so they don't

00:23:38.566 --> 00:23:40.106 A:middle
require memory allocation.

00:23:41.266 --> 00:23:42.866 A:middle
Use dispatch queues with an

00:23:42.866 --> 00:23:44.806 A:middle
autoreleasepool frequency of always.

00:23:44.996 --> 00:23:46.846 A:middle
Otherwise, you can get memory

00:23:46.846 --> 00:23:49.056 A:middle
peak due to too many allocation

00:23:49.056 --> 00:23:50.036 A:middle
in your autoreleasepool.

00:23:51.116 --> 00:23:52.876 A:middle
And finally, as always, if you

00:23:52.876 --> 00:23:55.246 A:middle
have a long running while or for

00:23:55.246 --> 00:23:56.906 A:middle
loop, be sure to add an

00:23:57.016 --> 00:23:57.666 A:middle
autoreleasepool keyword.

00:23:59.046 --> 00:24:01.006 A:middle
So in any case, we don't have

00:23:59.046 --> 00:24:01.006 A:middle
So in any case, we don't have

00:24:01.046 --> 00:24:02.586 A:middle
time to go into more details, so

00:24:03.086 --> 00:24:05.236 A:middle
check out this super session

00:24:05.236 --> 00:24:07.686 A:middle
from a while back, and there are

00:24:07.686 --> 00:24:08.996 A:middle
some other you can probably

00:24:08.996 --> 00:24:10.076 A:middle
check out online.

00:24:10.716 --> 00:24:12.616 A:middle
OK, let's go back to enumerating

00:24:12.616 --> 00:24:12.986 A:middle
items.

00:24:13.216 --> 00:24:15.106 A:middle
So on your Files app, you've

00:24:15.106 --> 00:24:15.726 A:middle
opened a folder.

00:24:16.396 --> 00:24:18.606 A:middle
And it's going to call your file

00:24:18.606 --> 00:24:20.856 A:middle
provider extension subclass and

00:24:20.856 --> 00:24:22.356 A:middle
ask you to provide an enumerator

00:24:22.356 --> 00:24:24.566 A:middle
for a given item identifier.

00:24:25.216 --> 00:24:27.626 A:middle
Hand waving: you will

00:24:27.626 --> 00:24:28.966 A:middle
locate your NSFileProvider

00:24:28.966 --> 00:24:30.876 A:middle
enumerator and return it to us.

00:24:31.656 --> 00:24:32.956 A:middle
The Files app is going to store

00:24:32.956 --> 00:24:33.456 A:middle
that enumerator.

00:24:33.456 --> 00:24:35.176 A:middle
And the next thing it's going to

00:24:35.176 --> 00:24:38.096 A:middle
do is to ask you to provide the

00:24:38.096 --> 00:24:39.726 A:middle
initial page of item.

00:24:43.806 --> 00:24:45.586 A:middle
You get a callback on your

00:24:45.586 --> 00:24:47.366 A:middle
enumerator this time, which is

00:24:47.366 --> 00:24:48.796 A:middle
called enumerateItems for

00:24:48.796 --> 00:24:50.316 A:middle
observer, startingAt page.

00:24:51.096 --> 00:24:54.336 A:middle
You figure out the items in your

00:24:54.336 --> 00:24:56.426 A:middle
first page.

00:24:56.646 --> 00:24:57.486 A:middle
You return them.

00:24:58.196 --> 00:24:58.996 A:middle
And you say you're done

00:24:58.996 --> 00:24:59.826 A:middle
enumerating.

00:24:59.826 --> 00:25:01.596 A:middle
There is my second page.

00:24:59.826 --> 00:25:01.596 A:middle
There is my second page.

00:25:03.696 --> 00:25:04.286 A:middle
We're done.

00:25:04.346 --> 00:25:05.516 A:middle
We've enumerated a page.

00:25:05.606 --> 00:25:06.946 A:middle
If the Files app wants to

00:25:06.946 --> 00:25:08.086 A:middle
have more items, it will

00:25:08.086 --> 00:25:09.866 A:middle
continue to ask

00:25:09.866 --> 00:25:11.716 A:middle
for more pages using the exact

00:25:11.716 --> 00:25:12.546 A:middle
same mechanism.

00:25:13.566 --> 00:25:16.326 A:middle
Let's go through the different

00:25:16.326 --> 00:25:17.336 A:middle
methods we've seen.

00:25:17.586 --> 00:25:19.736 A:middle
So first method is in your

00:25:19.736 --> 00:25:20.596 A:middle
subclass of

00:25:20.596 --> 00:25:21.896 A:middle
NSFileProviderExtension.

00:25:21.896 --> 00:25:23.066 A:middle
It's called enumerator

00:25:23.066 --> 00:25:24.816 A:middle
forContainer itemIdentifier, and

00:25:24.886 --> 00:25:26.946 A:middle
it returns an object conforming

00:25:26.946 --> 00:25:28.466 A:middle
to NSFileProviderEnumerator.

00:25:28.466 --> 00:25:30.976 A:middle
The itemIdentifier can be one of

00:25:31.046 --> 00:25:33.506 A:middle
workingSet if we're enumerating

00:25:33.506 --> 00:25:35.106 A:middle
the Recents, as Jean-Gabriel was

00:25:35.106 --> 00:25:37.026 A:middle
describing earlier, or the

00:25:37.026 --> 00:25:37.666 A:middle
rootContainer.

00:25:39.076 --> 00:25:41.566 A:middle
Finally, it can also be any of

00:25:41.566 --> 00:25:42.986 A:middle
your folder item identifiers

00:25:43.096 --> 00:25:45.346 A:middle
that you've previously returned.

00:25:45.346 --> 00:25:46.576 A:middle
The other function that we saw

00:25:46.916 --> 00:25:47.916 A:middle
is this time on

00:25:47.916 --> 00:25:49.546 A:middle
NSFileProviderEnumerator.

00:25:49.956 --> 00:25:51.776 A:middle
It's enumerateItems for

00:25:51.776 --> 00:25:53.166 A:middle
observer, startingAt page.

00:25:54.336 --> 00:25:57.246 A:middle
The observer is a system, as we

00:25:57.246 --> 00:26:00.386 A:middle
saw earlier, is a system object

00:25:57.246 --> 00:26:00.386 A:middle
saw earlier, is a system object

00:26:00.386 --> 00:26:03.086 A:middle
presenting, receiving your items

00:26:03.276 --> 00:26:04.256 A:middle
and the next page.

00:26:04.896 --> 00:26:07.456 A:middle
The page is a simple data blob.

00:26:08.396 --> 00:26:10.286 A:middle
It has a type, but it's a simple

00:26:10.286 --> 00:26:13.166 A:middle
data blob that you're free to

00:26:13.166 --> 00:26:15.406 A:middle
decide what's inside, and you're free

00:26:15.406 --> 00:26:17.156 A:middle
to decide what's inside, as long

00:26:17.156 --> 00:26:19.336 A:middle
as it doesn't go above 500

00:26:19.336 --> 00:26:19.696 A:middle
bytes.

00:26:19.916 --> 00:26:21.496 A:middle
What you generally put there is

00:26:21.496 --> 00:26:23.496 A:middle
like a page index -- 1, 2, 3, 4,

00:26:23.496 --> 00:26:25.366 A:middle
5 -- or an item of sets

00:26:25.566 --> 00:26:27.916 A:middle
100, 200, et cetera.

00:26:28.936 --> 00:26:30.476 A:middle
For the first page, it can be

00:26:30.476 --> 00:26:32.396 A:middle
one of any initial page sorted

00:26:32.396 --> 00:26:33.986 A:middle
by date or sorted by name,

00:26:33.986 --> 00:26:37.006 A:middle
depending on what the UI is

00:26:38.856 --> 00:26:39.166 A:middle
displaying.

00:26:39.166 --> 00:26:40.956 A:middle
OK, so let's go back to this

00:26:40.956 --> 00:26:43.126 A:middle
slide that you've seen before.

00:26:43.866 --> 00:26:46.116 A:middle
One crucial thing we've just

00:26:46.116 --> 00:26:47.266 A:middle
added is the ability to

00:26:47.266 --> 00:26:49.116 A:middle
enumerate folders and the

00:26:49.116 --> 00:26:49.766 A:middle
working set.

00:26:50.566 --> 00:26:51.616 A:middle
So we have two kinds of

00:26:51.616 --> 00:26:54.416 A:middle
enumerator, of enumerators, as

00:26:54.416 --> 00:26:55.296 A:middle
you can see onscreen.

00:26:55.756 --> 00:26:58.436 A:middle
And I just want to go back -- or

00:26:58.436 --> 00:26:59.446 A:middle
actually, highlight the

00:26:59.446 --> 00:27:01.676 A:middle
differences between the two.

00:26:59.446 --> 00:27:01.676 A:middle
differences between the two.

00:27:02.426 --> 00:27:04.296 A:middle
So for folder enumerator, what

00:27:04.296 --> 00:27:06.316 A:middle
you typically do is enumerate

00:27:06.316 --> 00:27:07.626 A:middle
the cloud directly.

00:27:08.146 --> 00:27:09.646 A:middle
That's it.

00:27:09.926 --> 00:27:12.556 A:middle
You can do caching, however, if

00:27:12.556 --> 00:27:12.896 A:middle
you want.

00:27:12.896 --> 00:27:13.596 A:middle
It's up to you.

00:27:13.596 --> 00:27:14.206 A:middle
You decide.

00:27:14.586 --> 00:27:16.686 A:middle
However, for the working set,

00:27:17.236 --> 00:27:19.666 A:middle
it's very different.

00:27:20.006 --> 00:27:21.866 A:middle
You need to enumerate your own

00:27:21.866 --> 00:27:24.046 A:middle
local copy of the working set.

00:27:24.796 --> 00:27:26.466 A:middle
So not the cloud.

00:27:27.646 --> 00:27:28.606 A:middle
Just your working set.

00:27:29.806 --> 00:27:31.896 A:middle
The main reason for that is that

00:27:31.896 --> 00:27:33.966 A:middle
your working set must work

00:27:33.966 --> 00:27:34.636 A:middle
offline.

00:27:34.636 --> 00:27:36.216 A:middle
The item is the working set, in

00:27:36.216 --> 00:27:37.276 A:middle
the working set must be

00:27:37.276 --> 00:27:38.376 A:middle
available offline and work

00:27:38.376 --> 00:27:38.766 A:middle
offline.

00:27:39.036 --> 00:27:42.826 A:middle
I just want to reiterate on this

00:27:42.866 --> 00:27:44.136 A:middle
because this is something that

00:27:44.136 --> 00:27:47.366 A:middle
is not obvious.

00:27:47.936 --> 00:27:50.656 A:middle
So I'll say it again.

00:27:51.216 --> 00:27:53.716 A:middle
The working set should never

00:27:53.796 --> 00:27:54.516 A:middle
read the cloud.

00:27:54.876 --> 00:27:56.636 A:middle
The folder enumerator, it's OK.

00:27:57.656 --> 00:27:58.786 A:middle
And the working set should

00:27:58.826 --> 00:28:00.536 A:middle
always read the database, and

00:27:58.826 --> 00:28:00.536 A:middle
always read the database, and

00:28:00.536 --> 00:28:01.906 A:middle
the folders, it's OK if you want

00:28:01.906 --> 00:28:02.486 A:middle
to cache them.

00:28:02.486 --> 00:28:02.946 A:middle
It's fine.

00:28:03.456 --> 00:28:07.446 A:middle
I hope it's clear.

00:28:07.446 --> 00:28:08.816 A:middle
Now, let's move on to the next

00:28:08.816 --> 00:28:10.386 A:middle
topic, which is syncing changes.

00:28:10.516 --> 00:28:12.626 A:middle
So for that, on your cloud

00:28:12.626 --> 00:28:14.086 A:middle
server, you are probably doing

00:28:14.086 --> 00:28:15.536 A:middle
it anyway, but you need to

00:28:15.536 --> 00:28:16.886 A:middle
assign version numbers to your

00:28:16.886 --> 00:28:17.286 A:middle
items.

00:28:17.286 --> 00:28:20.086 A:middle
So here are some version numbers

00:28:20.086 --> 00:28:20.926 A:middle
on my items in the cloud.

00:28:22.256 --> 00:28:24.366 A:middle
The maximum known version number

00:28:24.366 --> 00:28:27.276 A:middle
is what we call the sync anchor.

00:28:27.276 --> 00:28:30.056 A:middle
So here it's 14.

00:28:30.186 --> 00:28:32.446 A:middle
On changes, you need to bump the

00:28:32.446 --> 00:28:33.456 A:middle
file version number.

00:28:33.886 --> 00:28:36.106 A:middle
So here, for instance, 15.

00:28:36.656 --> 00:28:39.726 A:middle
The count sync anchor -- oh, I

00:28:39.726 --> 00:28:41.136 A:middle
went a bit fast, but it's OK.

00:28:41.576 --> 00:28:44.146 A:middle
I did a new file, which is,

00:28:44.336 --> 00:28:45.436 A:middle
which gave the version number

00:28:45.436 --> 00:28:46.006 A:middle
16.

00:28:46.006 --> 00:28:47.256 A:middle
And this time, we bumped the

00:28:47.256 --> 00:28:48.586 A:middle
sync anchor to 16.

00:28:48.586 --> 00:28:49.906 A:middle
And remember, it was 13 at the

00:28:49.906 --> 00:28:51.116 A:middle
beginning, and then I went a bit

00:28:51.116 --> 00:28:52.766 A:middle
fast, but you can see that now.

00:28:53.666 --> 00:28:57.766 A:middle
Then, if you, if we go back to

00:28:57.766 --> 00:28:58.706 A:middle
the Files app in your file

00:28:58.706 --> 00:29:02.116 A:middle
provider extension enumerator,

00:28:58.706 --> 00:29:02.116 A:middle
provider extension enumerator,

00:29:02.116 --> 00:29:04.686 A:middle
what is going to happen -- and I

00:29:04.756 --> 00:29:05.656 A:middle
lied to you earlier.

00:29:06.196 --> 00:29:07.686 A:middle
Before enumerating, what we are

00:29:07.686 --> 00:29:09.646 A:middle
going to do is to ask your

00:29:09.646 --> 00:29:11.096 A:middle
enumerator to provide its

00:29:11.096 --> 00:29:11.936 A:middle
current sync anchor.

00:29:11.936 --> 00:29:15.256 A:middle
So that's before enumerating the

00:29:15.256 --> 00:29:15.816 A:middle
pages.

00:29:17.026 --> 00:29:18.606 A:middle
So this is trivial, you just

00:29:18.726 --> 00:29:19.446 A:middle
have your sync anchor.

00:29:19.446 --> 00:29:21.836 A:middle
You return it back to the Files

00:29:21.836 --> 00:29:23.556 A:middle
app, and the Files app is going

00:29:24.146 --> 00:29:26.176 A:middle
to store it.

00:29:26.176 --> 00:29:28.796 A:middle
After that, we'll just fetch the

00:29:28.796 --> 00:29:31.096 A:middle
pages as we did before, and

00:29:31.096 --> 00:29:31.766 A:middle
we're in sync.

00:29:37.366 --> 00:29:38.616 A:middle
When a new file is added on your

00:29:38.616 --> 00:29:42.186 A:middle
server, you add a new file here

00:29:42.186 --> 00:29:44.806 A:middle
in green, you bump your sync

00:29:44.806 --> 00:29:49.396 A:middle
anchor, it becomes 14, and you

00:29:49.396 --> 00:29:50.296 A:middle
emit a push.

00:29:51.056 --> 00:29:54.266 A:middle
The Files app receives the push.

00:29:54.486 --> 00:29:55.876 A:middle
Your enumerator is called with

00:29:56.316 --> 00:29:57.426 A:middle
this new function,

00:29:57.806 --> 00:29:58.826 A:middle
enumerateChanges.

00:29:58.826 --> 00:30:00.356 A:middle
So before, it was enumerateItem,

00:29:58.826 --> 00:30:00.356 A:middle
So before, it was enumerateItem,

00:30:00.876 --> 00:30:02.366 A:middle
and now, it's enumerateChanges.

00:30:02.626 --> 00:30:04.806 A:middle
And it's passing you the

00:30:04.806 --> 00:30:06.726 A:middle
previous sync anchor it has.

00:30:06.726 --> 00:30:09.026 A:middle
So here it's the current

00:30:09.026 --> 00:30:10.816 A:middle
version, it's the version 13, so

00:30:10.816 --> 00:30:11.956 A:middle
it's passing you 13.

00:30:13.126 --> 00:30:14.506 A:middle
When your enumerator gets that

00:30:14.506 --> 00:30:17.916 A:middle
callback, it fetches the new

00:30:17.916 --> 00:30:20.916 A:middle
item, which is here, 14, the

00:30:20.916 --> 00:30:22.566 A:middle
item with the change number 14.

00:30:23.286 --> 00:30:24.726 A:middle
It sent it back to the observer,

00:30:24.726 --> 00:30:25.926 A:middle
and then it called

00:30:26.106 --> 00:30:28.836 A:middle
finishEnumerating up to the new

00:30:28.836 --> 00:30:30.016 A:middle
version here.

00:30:30.246 --> 00:30:31.596 A:middle
This is 14.

00:30:32.366 --> 00:30:33.256 A:middle
And you don't have anymore

00:30:33.256 --> 00:30:34.526 A:middle
change coming, so you just say,

00:30:34.526 --> 00:30:38.266 A:middle
moreComing false.

00:30:38.446 --> 00:30:39.916 A:middle
OK, and now we're ready to

00:30:39.916 --> 00:30:40.946 A:middle
display the update.

00:30:42.036 --> 00:30:43.266 A:middle
Oh, we forgot one thing, which

00:30:43.266 --> 00:30:47.526 A:middle
is the Files app actually remembers the

00:30:48.536 --> 00:30:50.676 A:middle
new sync anchor.

00:30:50.896 --> 00:30:52.436 A:middle
So I went very fast on push

00:30:52.436 --> 00:30:55.386 A:middle
notification, and it's actually

00:30:55.386 --> 00:30:57.136 A:middle
interesting because for this

00:30:57.196 --> 00:30:58.446 A:middle
time, the push notification

00:30:58.446 --> 00:30:59.826 A:middle
doesn't go to your file provider

00:30:59.826 --> 00:31:00.496 A:middle
extension.

00:30:59.826 --> 00:31:00.496 A:middle
extension.

00:31:01.456 --> 00:31:04.166 A:middle
It goes to the file provider

00:31:04.166 --> 00:31:04.956 A:middle
daemon, actually.

00:31:05.866 --> 00:31:09.316 A:middle
And so when receiving your push,

00:31:09.316 --> 00:31:10.386 A:middle
the file provider daemon is

00:31:10.386 --> 00:31:11.266 A:middle
going to initiate the

00:31:11.266 --> 00:31:14.286 A:middle
enumerateChanges code on your

00:31:14.286 --> 00:31:16.336 A:middle
enumerator, and at that point,

00:31:16.336 --> 00:31:18.146 A:middle
you can return the item.

00:31:18.146 --> 00:31:18.946 A:middle
Under the hood, what you

00:31:18.946 --> 00:31:20.296 A:middle
have to know for push is -- and

00:31:20.296 --> 00:31:21.746 A:middle
I will go briefly into this --

00:31:22.226 --> 00:31:24.526 A:middle
your PKPushType must be a

00:31:24.526 --> 00:31:25.796 A:middle
PKPushType file provider.

00:31:25.796 --> 00:31:27.916 A:middle
The topic name is your

00:31:27.916 --> 00:31:31.136 A:middle
bundle-identifier plus a suffix,

00:31:31.616 --> 00:31:32.976 A:middle
pushkit.fileprovider.

00:31:33.406 --> 00:31:35.506 A:middle
And your payload must include a

00:31:35.506 --> 00:31:36.936 A:middle
container identifier, which

00:31:36.936 --> 00:31:38.576 A:middle
refers to one of the possible

00:31:38.576 --> 00:31:39.056 A:middle
enumerator.

00:31:39.996 --> 00:31:42.256 A:middle
For more on push notification,

00:31:42.256 --> 00:31:43.736 A:middle
check out this session,

00:31:43.736 --> 00:31:45.226 A:middle
Introduction to Notification,

00:31:45.496 --> 00:31:46.266 A:middle
from last year.

00:31:46.726 --> 00:31:48.346 A:middle
So we've seen pushes, but you

00:31:48.346 --> 00:31:49.946 A:middle
might ask, what if I have some

00:31:49.946 --> 00:31:51.196 A:middle
changes and I want to tell the

00:31:51.196 --> 00:31:52.826 A:middle
system about it, but I don't

00:31:52.826 --> 00:31:53.726 A:middle
have a push for it?

00:31:54.816 --> 00:31:57.176 A:middle
In that case, you would want to

00:31:57.286 --> 00:31:59.106 A:middle
code the file provider daemon

00:31:59.106 --> 00:31:59.916 A:middle
and just say, oh, I have a

00:31:59.916 --> 00:32:00.326 A:middle
change.

00:31:59.916 --> 00:32:00.326 A:middle
change.

00:32:00.406 --> 00:32:01.716 A:middle
Well, we have a function just

00:32:01.716 --> 00:32:02.746 A:middle
for that, which is called,

00:32:03.286 --> 00:32:05.546 A:middle
NSFileProvider signalChanges

00:32:05.906 --> 00:32:06.456 A:middle
forContainer.

00:32:07.536 --> 00:32:09.336 A:middle
When receiving such a code, the

00:32:09.336 --> 00:32:10.656 A:middle
file provider daemon is going to

00:32:10.656 --> 00:32:12.416 A:middle
enumerate changes just like it

00:32:12.456 --> 00:32:13.556 A:middle
would do for pushes.

00:32:13.876 --> 00:32:15.046 A:middle
So let me go back to that

00:32:15.046 --> 00:32:15.526 A:middle
method.

00:32:16.476 --> 00:32:19.106 A:middle
The signalChanges method, when

00:32:19.106 --> 00:32:20.866 A:middle
should you call it?

00:32:20.976 --> 00:32:22.436 A:middle
So first, you can tell, you can

00:32:22.436 --> 00:32:23.786 A:middle
call it for the initial set of

00:32:23.786 --> 00:32:24.196 A:middle
files.

00:32:24.196 --> 00:32:25.826 A:middle
Imagine you just installed your

00:32:26.106 --> 00:32:27.476 A:middle
app and you already have some

00:32:27.476 --> 00:32:28.566 A:middle
files in your file provider

00:32:28.566 --> 00:32:30.276 A:middle
extension that you want the

00:32:30.276 --> 00:32:31.326 A:middle
system to know about.

00:32:32.456 --> 00:32:34.156 A:middle
Then, in case of changing

00:32:34.156 --> 00:32:35.066 A:middle
account -- for instance, the

00:32:35.066 --> 00:32:36.676 A:middle
user is logging out, logging in

00:32:36.676 --> 00:32:37.936 A:middle
to a new account -- you would

00:32:37.936 --> 00:32:39.176 A:middle
want to tell the system to

00:32:39.176 --> 00:32:40.636 A:middle
reload after this account change

00:32:41.116 --> 00:32:42.846 A:middle
because usually there were no

00:32:42.846 --> 00:32:43.296 A:middle
pushes.

00:32:43.676 --> 00:32:44.936 A:middle
More generally, you would want

00:32:44.936 --> 00:32:46.316 A:middle
to call that for any change

00:32:46.316 --> 00:32:48.326 A:middle
without a push, including the

00:32:48.326 --> 00:32:49.146 A:middle
one made locally.

00:32:49.536 --> 00:32:51.326 A:middle
So let me go back to one thing,

00:32:51.326 --> 00:32:53.756 A:middle
which is earlier we saw that

00:32:54.546 --> 00:32:56.676 A:middle
your file provider needs to

00:32:56.676 --> 00:32:58.556 A:middle
implement startProviding

00:32:58.556 --> 00:32:59.406 A:middle
itemAtURL.

00:32:59.406 --> 00:33:01.606 A:middle
If the file is not local at that

00:32:59.406 --> 00:33:01.606 A:middle
If the file is not local at that

00:33:01.656 --> 00:33:03.726 A:middle
point, you need to tell the

00:33:03.726 --> 00:33:05.446 A:middle
system that, well, this file is

00:33:05.446 --> 00:33:06.306 A:middle
not downloading.

00:33:06.876 --> 00:33:11.516 A:middle
If it is, what you should do is

00:33:11.516 --> 00:33:13.676 A:middle
you should signal for changes in

00:33:13.676 --> 00:33:15.026 A:middle
the working set if the item is

00:33:15.026 --> 00:33:16.816 A:middle
in the working set.

00:33:18.206 --> 00:33:19.306 A:middle
Same thing if you have an

00:33:19.306 --> 00:33:20.576 A:middle
enumerator running for the

00:33:20.576 --> 00:33:22.346 A:middle
parent, you should call

00:33:22.346 --> 00:33:23.506 A:middle
signalChanges on the

00:33:23.506 --> 00:33:24.766 A:middle
parentItemIdentifier.

00:33:25.286 --> 00:33:27.416 A:middle
Well, so under the hood, signal

00:33:27.416 --> 00:33:28.786 A:middle
changes can be called from both

00:33:29.086 --> 00:33:30.326 A:middle
your app and your file provider

00:33:30.326 --> 00:33:31.206 A:middle
extension, so it's very

00:33:31.206 --> 00:33:31.696 A:middle
convenient.

00:33:33.136 --> 00:33:35.536 A:middle
You must call signalChanges even

00:33:35.536 --> 00:33:37.216 A:middle
for system-initiated changes.

00:33:37.296 --> 00:33:39.036 A:middle
This is exactly what I was

00:33:39.036 --> 00:33:39.756 A:middle
describing earlier.

00:33:39.756 --> 00:33:41.216 A:middle
You could say the system could

00:33:41.216 --> 00:33:43.246 A:middle
infer that the file has changed.

00:33:43.246 --> 00:33:44.206 A:middle
No, we don't do that.

00:33:44.256 --> 00:33:46.226 A:middle
We let you explicitly tell us

00:33:46.226 --> 00:33:47.486 A:middle
that you know about this change.

00:33:48.696 --> 00:33:51.016 A:middle
But don't worry about it.

00:33:51.016 --> 00:33:53.006 A:middle
signalChanges is very, very

00:33:53.006 --> 00:33:53.236 A:middle
cheap.

00:33:53.936 --> 00:33:55.436 A:middle
So now, we've seen all these

00:33:55.566 --> 00:33:57.456 A:middle
three topics on screen: creating

00:33:57.456 --> 00:33:58.786 A:middle
the project, providing an item,

00:33:58.786 --> 00:34:00.096 A:middle
and enumerating items.

00:33:58.786 --> 00:34:00.096 A:middle
and enumerating items.

00:34:00.096 --> 00:34:02.186 A:middle
So now, it's time for Johannes

00:34:02.606 --> 00:34:03.816 A:middle
to come on stage and cover the

00:34:03.816 --> 00:34:04.686 A:middle
last topics.

00:34:05.516 --> 00:34:11.176 A:middle
[ Applause ]

00:34:11.676 --> 00:34:12.226 A:middle
&gt;&gt; Thank you, Pierre.

00:34:13.186 --> 00:34:15.976 A:middle
So we've seen how to get your

00:34:15.976 --> 00:34:18.826 A:middle
items into the Files app or into

00:34:18.826 --> 00:34:19.755 A:middle
the document browser.

00:34:20.606 --> 00:34:23.005 A:middle
But of course, that is only part

00:34:23.005 --> 00:34:24.346 A:middle
of what you are interested in

00:34:24.346 --> 00:34:25.516 A:middle
doing or what your users are

00:34:25.516 --> 00:34:26.366 A:middle
interested in doing.

00:34:26.946 --> 00:34:28.436 A:middle
An equally important part is

00:34:28.806 --> 00:34:30.606 A:middle
that your users are able to

00:34:30.606 --> 00:34:31.656 A:middle
modify files.

00:34:32.426 --> 00:34:35.646 A:middle
And to modify files, there are

00:34:35.646 --> 00:34:37.396 A:middle
various possibilities how you

00:34:37.396 --> 00:34:39.396 A:middle
can modify files in the Files

00:34:39.396 --> 00:34:41.226 A:middle
app and using other

00:34:41.226 --> 00:34:42.156 A:middle
technologies.

00:34:42.795 --> 00:34:44.626 A:middle
So in the Files app, as an

00:34:44.626 --> 00:34:46.596 A:middle
example, bring up this menu

00:34:46.596 --> 00:34:48.536 A:middle
controller here as a user, and

00:34:48.886 --> 00:34:50.366 A:middle
this menu controller gives the

00:34:50.366 --> 00:34:52.466 A:middle
users a variety of options to

00:34:52.466 --> 00:34:54.896 A:middle
modify files or to perform

00:34:54.896 --> 00:34:56.255 A:middle
actions on files.

00:34:56.476 --> 00:34:57.576 A:middle
One of these actions, for

00:34:57.576 --> 00:35:00.396 A:middle
example, is the Info option

00:34:57.576 --> 00:35:00.396 A:middle
example, is the Info option

00:35:00.396 --> 00:35:02.776 A:middle
here, and that simply brings up

00:35:02.776 --> 00:35:04.216 A:middle
a nice Info panel.

00:35:04.616 --> 00:35:05.576 A:middle
And that is backed by

00:35:05.576 --> 00:35:07.686 A:middle
information that you're already

00:35:07.686 --> 00:35:08.366 A:middle
providing.

00:35:08.736 --> 00:35:11.646 A:middle
That's the item method that

00:35:11.646 --> 00:35:12.766 A:middle
you're already implementing.

00:35:13.686 --> 00:35:15.646 A:middle
Other options are, for example,

00:35:15.646 --> 00:35:18.926 A:middle
the Share action here, and that

00:35:18.926 --> 00:35:21.536 A:middle
is backed by a well-known old

00:35:21.536 --> 00:35:22.156 A:middle
friend, the

00:35:22.156 --> 00:35:23.556 A:middle
UIActivityViewController.

00:35:23.556 --> 00:35:25.426 A:middle
And of course, you're able to

00:35:25.426 --> 00:35:27.636 A:middle
simply add activities using

00:35:27.996 --> 00:35:30.026 A:middle
activity plug-ins, and that's

00:35:30.026 --> 00:35:31.426 A:middle
another way for you to expose

00:35:31.426 --> 00:35:32.686 A:middle
actions on these items.

00:35:33.356 --> 00:35:35.036 A:middle
But then, there are other

00:35:35.506 --> 00:35:37.216 A:middle
possible options that are not

00:35:37.216 --> 00:35:39.886 A:middle
backed by any existing system UI

00:35:40.236 --> 00:35:40.786 A:middle
so far.

00:35:41.376 --> 00:35:43.276 A:middle
For example, renaming items.

00:35:43.816 --> 00:35:45.476 A:middle
Renaming items brings up a nice

00:35:45.476 --> 00:35:48.196 A:middle
UI in the Files app, but we're

00:35:48.196 --> 00:35:50.826 A:middle
not so far exposing a way to

00:35:51.806 --> 00:35:53.026 A:middle
actually tell you about the

00:35:53.026 --> 00:35:53.446 A:middle
rename.

00:35:53.646 --> 00:35:55.436 A:middle
And that is what this part of

00:35:55.496 --> 00:35:56.666 A:middle
the session is about.

00:35:57.016 --> 00:35:59.046 A:middle
To back a rename or something

00:35:59.046 --> 00:36:01.806 A:middle
like that, we expose a wide

00:35:59.046 --> 00:36:01.806 A:middle
like that, we expose a wide

00:36:01.806 --> 00:36:03.656 A:middle
variety of options, and these

00:36:03.656 --> 00:36:05.556 A:middle
options are moving files around,

00:36:06.046 --> 00:36:07.666 A:middle
creating files -- for example,

00:36:07.666 --> 00:36:08.826 A:middle
if you, if the user hits the

00:36:08.826 --> 00:36:10.426 A:middle
little + button, that shows up

00:36:10.426 --> 00:36:11.366 A:middle
in the document browser view

00:36:11.366 --> 00:36:13.636 A:middle
controller, or if the user drag

00:36:13.636 --> 00:36:15.306 A:middle
and drops a file into the Files

00:36:15.306 --> 00:36:17.426 A:middle
app or into the document browser

00:36:17.426 --> 00:36:18.546 A:middle
in another application.

00:36:18.756 --> 00:36:20.026 A:middle
Last but not least, modifying

00:36:20.026 --> 00:36:21.076 A:middle
attributes on files.

00:36:21.076 --> 00:36:22.396 A:middle
So if the user performs a

00:36:22.396 --> 00:36:25.106 A:middle
tagging operation or looks at a

00:36:25.106 --> 00:36:26.936 A:middle
file and thus wants to modify

00:36:26.936 --> 00:36:28.476 A:middle
the last use date of the file.

00:36:30.006 --> 00:36:32.476 A:middle
And all of these are actions

00:36:32.516 --> 00:36:34.916 A:middle
that are backed by, that back

00:36:34.966 --> 00:36:35.916 A:middle
user operations.

00:36:36.966 --> 00:36:38.576 A:middle
And you are, your extension is

00:36:38.576 --> 00:36:39.306 A:middle
implementing these.

00:36:40.346 --> 00:36:41.776 A:middle
All right, so that is awfully

00:36:41.776 --> 00:36:43.166 A:middle
abstract, so let's have a look

00:36:43.166 --> 00:36:45.816 A:middle
at one of these actions and how

00:36:45.816 --> 00:36:46.556 A:middle
you implement it.

00:36:46.786 --> 00:36:48.606 A:middle
All right, and as our example,

00:36:48.606 --> 00:36:49.816 A:middle
we're going to use the Import

00:36:49.816 --> 00:36:50.596 A:middle
Document action.

00:36:51.216 --> 00:36:52.926 A:middle
But all of the actions are

00:36:52.926 --> 00:36:54.816 A:middle
actually implemented in a very

00:36:54.816 --> 00:36:55.626 A:middle
similar way.

00:36:55.936 --> 00:36:57.476 A:middle
The Import Document action is a

00:36:57.476 --> 00:36:59.546 A:middle
nice one because it deals with a

00:36:59.546 --> 00:37:02.316 A:middle
new file, but most of these

00:36:59.546 --> 00:37:02.316 A:middle
new file, but most of these

00:37:02.316 --> 00:37:04.306 A:middle
actions are kind of similar.

00:37:04.786 --> 00:37:05.746 A:middle
They have slightly different

00:37:05.746 --> 00:37:06.856 A:middle
parameters and, of course, have

00:37:06.856 --> 00:37:08.036 A:middle
slightly different semantics,

00:37:08.486 --> 00:37:09.836 A:middle
but everything I'm going to tell

00:37:09.836 --> 00:37:11.036 A:middle
you in this session is going to

00:37:11.036 --> 00:37:12.836 A:middle
count for pretty much all of the

00:37:12.836 --> 00:37:13.436 A:middle
actions.

00:37:14.136 --> 00:37:16.126 A:middle
So the Import Document action

00:37:17.346 --> 00:37:17.996 A:middle
works this way.

00:37:18.606 --> 00:37:20.076 A:middle
The system gives you an existing

00:37:20.076 --> 00:37:22.836 A:middle
file URL, so that's a file on

00:37:22.836 --> 00:37:26.396 A:middle
disk, and this file is any

00:37:26.396 --> 00:37:27.806 A:middle
location that the system gives

00:37:27.806 --> 00:37:29.226 A:middle
you, it's possibly in the Temp

00:37:29.226 --> 00:37:31.446 A:middle
folder or wherever the

00:37:31.826 --> 00:37:34.006 A:middle
application that, for example,

00:37:34.006 --> 00:37:35.496 A:middle
performs a create operation

00:37:35.496 --> 00:37:38.966 A:middle
stores its templates, but in any

00:37:38.966 --> 00:37:40.666 A:middle
case, this file is basically for

00:37:40.666 --> 00:37:41.386 A:middle
you to use.

00:37:41.796 --> 00:37:44.046 A:middle
You can go and move this file

00:37:44.046 --> 00:37:46.166 A:middle
into your file provider storage.

00:37:46.496 --> 00:37:48.286 A:middle
So this is, this file is now

00:37:48.286 --> 00:37:49.216 A:middle
under your control.

00:37:49.216 --> 00:37:50.266 A:middle
It's in your container.

00:37:50.816 --> 00:37:53.056 A:middle
At this point, you need to

00:37:53.056 --> 00:37:54.846 A:middle
schedule a background upload so

00:37:54.846 --> 00:37:56.186 A:middle
that this file from your

00:37:56.186 --> 00:37:58.306 A:middle
container actually gets uploaded

00:37:58.306 --> 00:37:59.396 A:middle
into your cloud.

00:37:59.396 --> 00:38:02.156 A:middle
And last but not least, you call

00:37:59.396 --> 00:38:02.156 A:middle
And last but not least, you call

00:38:02.156 --> 00:38:03.016 A:middle
the completion handler.

00:38:03.746 --> 00:38:06.686 A:middle
This is very important, and this

00:38:06.686 --> 00:38:08.806 A:middle
is a very important part of

00:38:08.806 --> 00:38:09.176 A:middle
this.

00:38:09.736 --> 00:38:11.366 A:middle
We just scheduled a background

00:38:11.366 --> 00:38:13.666 A:middle
upload, but we did not wait for

00:38:13.666 --> 00:38:14.996 A:middle
the background upload to finish

00:38:14.996 --> 00:38:16.136 A:middle
until we call the completion

00:38:16.136 --> 00:38:16.516 A:middle
handler.

00:38:17.446 --> 00:38:18.966 A:middle
So the file is actually being

00:38:18.966 --> 00:38:20.186 A:middle
uploaded in the background,

00:38:20.946 --> 00:38:22.406 A:middle
meaning that the user does not

00:38:22.406 --> 00:38:24.626 A:middle
have to wait for this file to be

00:38:24.626 --> 00:38:27.186 A:middle
actually fully uploaded until

00:38:27.386 --> 00:38:29.026 A:middle
you tell the system, hey, I got

00:38:29.026 --> 00:38:29.376 A:middle
this.

00:38:29.446 --> 00:38:30.676 A:middle
I've got this file under my

00:38:30.676 --> 00:38:31.096 A:middle
control.

00:38:31.096 --> 00:38:32.116 A:middle
I'll scheduled the upload.

00:38:32.116 --> 00:38:33.486 A:middle
This file will be in the cloud

00:38:33.486 --> 00:38:34.176 A:middle
at some point.

00:38:35.096 --> 00:38:36.696 A:middle
So the user doesn't have to wait

00:38:36.696 --> 00:38:38.096 A:middle
for this upload of the file that

00:38:38.096 --> 00:38:39.276 A:middle
can be potentially many

00:38:39.276 --> 00:38:39.916 A:middle
megabytes.

00:38:40.266 --> 00:38:42.556 A:middle
So that's how the general flow

00:38:42.556 --> 00:38:43.526 A:middle
of this looks.

00:38:43.526 --> 00:38:44.846 A:middle
Let's have a look at how the

00:38:44.846 --> 00:38:46.776 A:middle
data flow of this operation

00:38:46.776 --> 00:38:47.016 A:middle
looks.

00:38:47.386 --> 00:38:50.236 A:middle
So as I said, the initial

00:38:50.416 --> 00:38:52.506 A:middle
impetus for this operation is

00:38:52.536 --> 00:38:54.186 A:middle
that the user created, or

00:38:54.186 --> 00:38:55.996 A:middle
pasted, or dropped a file into

00:38:56.476 --> 00:38:58.606 A:middle
the, into a container in your

00:38:59.186 --> 00:38:59.956 A:middle
file provider.

00:39:00.626 --> 00:39:03.026 A:middle
And at that point, the Import

00:39:03.026 --> 00:39:05.106 A:middle
Document action on your file

00:39:05.106 --> 00:39:06.616 A:middle
provider extension subclass gets

00:39:06.656 --> 00:39:07.266 A:middle
called.

00:39:07.266 --> 00:39:09.096 A:middle
You make a database entry.

00:39:09.096 --> 00:39:10.136 A:middle
You make sure that the file is

00:39:10.136 --> 00:39:10.976 A:middle
getting uploaded.

00:39:11.916 --> 00:39:13.116 A:middle
So you schedule the upload.

00:39:13.446 --> 00:39:14.276 A:middle
Now, we're done, right?

00:39:14.526 --> 00:39:15.046 A:middle
We can call the

00:39:15.046 --> 00:39:15.806 A:middle
completionHandler.

00:39:15.946 --> 00:39:17.886 A:middle
But as Pierre has told, the

00:39:17.886 --> 00:39:19.786 A:middle
system does not automatically

00:39:19.786 --> 00:39:22.136 A:middle
infer that this file basically

00:39:22.396 --> 00:39:23.296 A:middle
has changed.

00:39:24.046 --> 00:39:25.876 A:middle
So one important bit here is

00:39:25.876 --> 00:39:27.896 A:middle
that you at this point signal us

00:39:28.946 --> 00:39:30.686 A:middle
to tell us, hey, there are

00:39:30.686 --> 00:39:32.186 A:middle
changes on this container.

00:39:32.586 --> 00:39:33.876 A:middle
We need to re-enumerate this

00:39:33.876 --> 00:39:34.346 A:middle
container.

00:39:35.016 --> 00:39:36.146 A:middle
This is important so that the

00:39:36.146 --> 00:39:37.556 A:middle
user gets immediate feedback.

00:39:37.996 --> 00:39:39.356 A:middle
So the next step is actually

00:39:39.356 --> 00:39:40.866 A:middle
that you tell us there are

00:39:40.866 --> 00:39:41.466 A:middle
changes here.

00:39:41.466 --> 00:39:43.656 A:middle
And at that point, we simply

00:39:43.656 --> 00:39:44.256 A:middle
make a note.

00:39:44.306 --> 00:39:46.456 A:middle
We say, OK, for this container

00:39:46.456 --> 00:39:48.406 A:middle
-- and keep in mind, the user is

00:39:48.406 --> 00:39:49.366 A:middle
probably looking at this

00:39:49.366 --> 00:39:50.146 A:middle
container, right?

00:39:50.446 --> 00:39:51.516 A:middle
They just hit the little +

00:39:51.516 --> 00:39:52.266 A:middle
button there.

00:39:52.926 --> 00:39:54.256 A:middle
Of course, they hit the + button

00:39:54.256 --> 00:39:55.176 A:middle
in the container that they're

00:39:55.176 --> 00:39:57.666 A:middle
looking at, so they want to see

00:39:57.666 --> 00:39:58.326 A:middle
these changes.

00:39:58.716 --> 00:40:00.516 A:middle
So you told the system, changes

00:39:58.716 --> 00:40:00.516 A:middle
So you told the system, changes

00:40:00.516 --> 00:40:01.156 A:middle
are pending.

00:40:01.466 --> 00:40:03.826 A:middle
Now, you tell the system, call

00:40:03.826 --> 00:40:04.616 A:middle
the completionHandler.

00:40:04.776 --> 00:40:06.016 A:middle
We're done with this operation.

00:40:06.866 --> 00:40:07.996 A:middle
The system gets unblocked.

00:40:08.106 --> 00:40:09.626 A:middle
And at this point, the system

00:40:09.626 --> 00:40:11.826 A:middle
can go and call, turn around,

00:40:11.826 --> 00:40:13.056 A:middle
and enumerate changes.

00:40:13.406 --> 00:40:15.846 A:middle
You tell us, sweet, we just

00:40:15.846 --> 00:40:17.636 A:middle
added this item, and it's now

00:40:17.636 --> 00:40:18.576 A:middle
uploading, probably.

00:40:19.466 --> 00:40:21.696 A:middle
And you return the changed item

00:40:21.696 --> 00:40:23.916 A:middle
to us as part of a change set.

00:40:25.046 --> 00:40:27.456 A:middle
And we can update our UI and

00:40:27.456 --> 00:40:29.436 A:middle
show a little uploading error in

00:40:29.436 --> 00:40:30.376 A:middle
the corner of the item.

00:40:30.826 --> 00:40:32.606 A:middle
So the user gets immediate

00:40:32.606 --> 00:40:34.246 A:middle
feedback that their data is safe

00:40:34.246 --> 00:40:37.146 A:middle
in your cloud.

00:40:37.286 --> 00:40:38.746 A:middle
So let me reiterate that.

00:40:38.776 --> 00:40:40.016 A:middle
Operations are expected to

00:40:40.016 --> 00:40:42.276 A:middle
finish immediately, and thus,

00:40:42.276 --> 00:40:43.986 A:middle
you need to defer long-running

00:40:44.056 --> 00:40:46.916 A:middle
tasks, such as uploads, to the

00:40:46.916 --> 00:40:48.996 A:middle
background using NSURLSession.

00:40:49.106 --> 00:40:50.306 A:middle
So now, we've got this item

00:40:50.306 --> 00:40:51.756 A:middle
uploading, and that's great,

00:40:52.406 --> 00:40:53.416 A:middle
but, of course, at some point,

00:40:53.416 --> 00:40:54.646 A:middle
this upload is going to finish

00:40:54.646 --> 00:40:56.006 A:middle
and we want to tell the user

00:40:56.006 --> 00:40:57.066 A:middle
about the new status of the

00:40:57.066 --> 00:40:57.456 A:middle
file.

00:40:57.986 --> 00:40:58.836 A:middle
So let's go into that.

00:40:59.626 --> 00:41:01.256 A:middle
The way that works is that

00:40:59.626 --> 00:41:01.256 A:middle
The way that works is that

00:41:01.256 --> 00:41:02.916 A:middle
NSURLSession at some point will

00:41:02.916 --> 00:41:04.666 A:middle
notice, hey, this upload

00:41:04.666 --> 00:41:05.156 A:middle
succeeded.

00:41:05.156 --> 00:41:06.656 A:middle
Sweet, the item is in the cloud.

00:41:06.996 --> 00:41:09.126 A:middle
And the way this, the way

00:41:09.126 --> 00:41:10.456 A:middle
NSURLSession tells you about

00:41:10.496 --> 00:41:11.906 A:middle
that is that it calls a

00:41:12.026 --> 00:41:14.176 A:middle
callback, an NSURLSession

00:41:14.176 --> 00:41:16.156 A:middle
background callback, on your

00:41:16.156 --> 00:41:17.096 A:middle
parent application.

00:41:17.676 --> 00:41:19.506 A:middle
Your parent application at this

00:41:19.506 --> 00:41:20.886 A:middle
point can go and update the

00:41:20.886 --> 00:41:21.786 A:middle
database entry.

00:41:21.866 --> 00:41:23.496 A:middle
It sets a little flag in your

00:41:23.496 --> 00:41:25.156 A:middle
database that says, this file is

00:41:25.156 --> 00:41:25.606 A:middle
uploaded.

00:41:25.606 --> 00:41:26.966 A:middle
It's no longer dirty on

00:41:26.966 --> 00:41:27.226 A:middle
disk.

00:41:27.226 --> 00:41:29.316 A:middle
Our upload succeeded.

00:41:29.706 --> 00:41:31.716 A:middle
We don't have to retry this

00:41:31.716 --> 00:41:32.196 A:middle
upload.

00:41:33.016 --> 00:41:34.446 A:middle
And we should inform the user

00:41:34.446 --> 00:41:35.716 A:middle
that this upload is finished.

00:41:36.476 --> 00:41:38.376 A:middle
So as Pierre mentioned, the

00:41:38.376 --> 00:41:39.756 A:middle
signalChanges method can be

00:41:39.756 --> 00:41:41.226 A:middle
called both by your extension

00:41:41.226 --> 00:41:42.926 A:middle
and the parent application, and

00:41:42.926 --> 00:41:43.606 A:middle
this is why.

00:41:44.046 --> 00:41:45.766 A:middle
Now, you tell us there are

00:41:45.766 --> 00:41:47.346 A:middle
changes on this container.

00:41:47.896 --> 00:41:51.466 A:middle
And at this point, the same old

00:41:51.466 --> 00:41:52.286 A:middle
dance happens.

00:41:52.946 --> 00:41:54.276 A:middle
The system notes that changes

00:41:54.276 --> 00:41:56.756 A:middle
are pending, it re-enumerates

00:41:56.856 --> 00:42:01.406 A:middle
your, the, your working set, and

00:41:56.856 --> 00:42:01.406 A:middle
your, the, your working set, and

00:42:01.936 --> 00:42:03.326 A:middle
at this point, you can return

00:42:03.486 --> 00:42:04.566 A:middle
in, from your file provider

00:42:04.566 --> 00:42:07.156 A:middle
extension that this item is

00:42:07.156 --> 00:42:08.866 A:middle
properly uploaded using the

00:42:09.076 --> 00:42:11.396 A:middle
isUploaded key on the

00:42:11.396 --> 00:42:13.566 A:middle
NSFileProviderItem protocol.

00:42:14.456 --> 00:42:17.266 A:middle
Now, sometimes uploads fail.

00:42:18.316 --> 00:42:19.666 A:middle
For example, your server might

00:42:19.756 --> 00:42:22.566 A:middle
tell us, hey, this user is out

00:42:22.566 --> 00:42:22.956 A:middle
of quota.

00:42:24.376 --> 00:42:26.246 A:middle
And in this situation, the same

00:42:26.246 --> 00:42:27.706 A:middle
dance happens, basically.

00:42:28.066 --> 00:42:30.606 A:middle
So NSURLSession D is going to

00:42:30.606 --> 00:42:32.406 A:middle
tell your parent application,

00:42:32.986 --> 00:42:34.346 A:middle
hey, this upload failed.

00:42:34.586 --> 00:42:35.366 A:middle
That's too bad.

00:42:35.366 --> 00:42:36.556 A:middle
You're going to have to handle

00:42:36.556 --> 00:42:37.186 A:middle
this somehow.

00:42:37.776 --> 00:42:39.196 A:middle
So again, we make a database

00:42:39.196 --> 00:42:39.716 A:middle
entry.

00:42:39.716 --> 00:42:40.926 A:middle
We signal the system.

00:42:42.106 --> 00:42:43.276 A:middle
The system notes that changes

00:42:43.276 --> 00:42:43.956 A:middle
are pending.

00:42:44.526 --> 00:42:45.856 A:middle
The system re-enumerates.

00:42:46.296 --> 00:42:48.356 A:middle
And we can return the updated

00:42:48.356 --> 00:42:48.766 A:middle
item.

00:42:49.386 --> 00:42:50.796 A:middle
Now, this updated item should

00:42:50.796 --> 00:42:53.916 A:middle
reflect the fact that this item

00:42:53.916 --> 00:42:55.696 A:middle
is now in an error state, so to

00:42:55.696 --> 00:42:57.476 A:middle
turn an update error, an upload

00:42:57.476 --> 00:42:59.836 A:middle
error that is reflecting what

00:42:59.836 --> 00:43:00.716 A:middle
actually here.

00:42:59.836 --> 00:43:00.716 A:middle
actually here.

00:43:00.716 --> 00:43:02.056 A:middle
All right, let's get into a bit

00:43:02.056 --> 00:43:02.876 A:middle
more detail.

00:43:02.876 --> 00:43:05.966 A:middle
As I said, you mark the item as

00:43:05.966 --> 00:43:07.796 A:middle
being in an error status by

00:43:07.796 --> 00:43:10.066 A:middle
using the upload error property

00:43:10.066 --> 00:43:11.246 A:middle
on the item properties.

00:43:12.306 --> 00:43:13.696 A:middle
You signal re-enumeration so

00:43:13.696 --> 00:43:15.176 A:middle
that the user can see that this

00:43:15.176 --> 00:43:16.406 A:middle
item's in an error state.

00:43:17.256 --> 00:43:18.786 A:middle
And then, how you actually

00:43:19.266 --> 00:43:21.286 A:middle
continue in this error state

00:43:21.286 --> 00:43:23.116 A:middle
depends completely on the kind

00:43:23.186 --> 00:43:24.966 A:middle
of error that you're looking at.

00:43:25.456 --> 00:43:27.526 A:middle
So some, not all errors are the

00:43:27.526 --> 00:43:28.216 A:middle
same thing.

00:43:29.016 --> 00:43:30.316 A:middle
There's the possibility that

00:43:30.316 --> 00:43:31.076 A:middle
you're running into an

00:43:31.076 --> 00:43:32.016 A:middle
intermittent error.

00:43:32.016 --> 00:43:34.276 A:middle
For example, the user was, I

00:43:34.376 --> 00:43:35.516 A:middle
don't know, camping out in the

00:43:35.516 --> 00:43:37.436 A:middle
jungle for two weeks, and

00:43:37.436 --> 00:43:38.926 A:middle
NSURLSession D just gave up

00:43:38.926 --> 00:43:41.576 A:middle
because there was no Wi-Fi, no

00:43:41.576 --> 00:43:42.846 A:middle
wireless connection.

00:43:43.286 --> 00:43:44.826 A:middle
In this situation, the easiest

00:43:44.826 --> 00:43:46.146 A:middle
thing to do is tell the user,

00:43:46.146 --> 00:43:47.976 A:middle
hey, your data wasn't uploaded,

00:43:48.076 --> 00:43:49.066 A:middle
but we're on it.

00:43:49.136 --> 00:43:51.306 A:middle
We re-enqueue the, your

00:43:51.306 --> 00:43:52.416 A:middle
NSURLSession task.

00:43:53.236 --> 00:43:55.026 A:middle
We still mark this item as being

00:43:55.026 --> 00:43:56.426 A:middle
in an error state, as not being

00:43:56.426 --> 00:43:58.906 A:middle
up to date in the cloud, but we

00:43:58.906 --> 00:43:59.766 A:middle
simply retry.

00:44:00.236 --> 00:44:01.206 A:middle
There's nothing that the user

00:44:01.206 --> 00:44:01.846 A:middle
has to do.

00:44:02.416 --> 00:44:03.486 A:middle
In the error description, you

00:44:03.486 --> 00:44:04.856 A:middle
can possibly tell the user, hey,

00:44:05.356 --> 00:44:07.016 A:middle
maybe go online or something

00:44:07.016 --> 00:44:09.066 A:middle
like that, but that's pretty

00:44:09.066 --> 00:44:10.526 A:middle
much it.

00:44:10.736 --> 00:44:12.116 A:middle
There's also the possibility

00:44:12.636 --> 00:44:13.356 A:middle
that you're running into a

00:44:13.356 --> 00:44:15.126 A:middle
persistent error, and that is

00:44:15.126 --> 00:44:15.586 A:middle
different.

00:44:16.276 --> 00:44:17.786 A:middle
In a persistent error case,

00:44:17.786 --> 00:44:19.016 A:middle
like, for example, the user's

00:44:19.016 --> 00:44:20.836 A:middle
out of quota, what you need to

00:44:20.836 --> 00:44:23.376 A:middle
do is tell the user, hey, you're

00:44:23.466 --> 00:44:24.306 A:middle
out of quota.

00:44:24.306 --> 00:44:26.046 A:middle
You got to go and buy more quota

00:44:26.046 --> 00:44:27.346 A:middle
on our web page.

00:44:27.636 --> 00:44:29.116 A:middle
And in that situation, basically

00:44:29.116 --> 00:44:30.766 A:middle
what you give us is a, an error

00:44:30.766 --> 00:44:32.686 A:middle
that suggests a recovery option.

00:44:34.036 --> 00:44:35.666 A:middle
Now, last but not least, there's

00:44:35.666 --> 00:44:36.496 A:middle
the possibility for

00:44:36.496 --> 00:44:38.146 A:middle
authentication errors, and these

00:44:38.146 --> 00:44:39.026 A:middle
are kind of special.

00:44:39.256 --> 00:44:41.576 A:middle
The user has to do something

00:44:41.816 --> 00:44:43.606 A:middle
specific to your application.

00:44:44.126 --> 00:44:45.476 A:middle
For example, re-authenticate.

00:44:46.666 --> 00:44:48.576 A:middle
Well, that's actually the only

00:44:48.896 --> 00:44:50.226 A:middle
possibility in that situation,

00:44:50.226 --> 00:44:50.616 A:middle
probably.

00:44:51.276 --> 00:44:54.786 A:middle
And for that possibility, a

00:44:54.786 --> 00:44:56.336 A:middle
custom action will be called by

00:44:56.336 --> 00:44:56.866 A:middle
the system.

00:44:57.586 --> 00:44:58.686 A:middle
So what's a custom action?

00:44:59.306 --> 00:45:00.696 A:middle
Well, conveniently, that's our

00:44:59.306 --> 00:45:00.696 A:middle
Well, conveniently, that's our

00:45:00.696 --> 00:45:03.116 A:middle
next section, and let's have a

00:45:03.116 --> 00:45:05.176 A:middle
look at, back at this menu view

00:45:05.176 --> 00:45:06.746 A:middle
controller here, menu controller

00:45:06.746 --> 00:45:06.966 A:middle
here.

00:45:07.286 --> 00:45:09.086 A:middle
We've seen these system-provided

00:45:09.086 --> 00:45:11.366 A:middle
actions here, and the way these

00:45:11.366 --> 00:45:12.696 A:middle
work is that the user just taps

00:45:12.696 --> 00:45:15.286 A:middle
them and is backed by an action

00:45:15.286 --> 00:45:17.036 A:middle
that is internally backed by

00:45:17.036 --> 00:45:17.986 A:middle
your provider.

00:45:18.536 --> 00:45:20.706 A:middle
But we also offer another

00:45:20.706 --> 00:45:22.696 A:middle
opportunity for you to customize

00:45:22.696 --> 00:45:25.856 A:middle
this, which is to introduce a

00:45:25.856 --> 00:45:27.496 A:middle
custom action in this situation.

00:45:28.016 --> 00:45:31.806 A:middle
So that's a action, and this one

00:45:31.806 --> 00:45:32.976 A:middle
here is called Custom on the

00:45:32.976 --> 00:45:34.926 A:middle
slide, but it can be whatever

00:45:34.926 --> 00:45:36.156 A:middle
name you want.

00:45:36.966 --> 00:45:38.276 A:middle
And the way this works is that

00:45:39.226 --> 00:45:41.316 A:middle
you expose an operation, a UI

00:45:41.316 --> 00:45:43.626 A:middle
operation, that is scoped to

00:45:43.626 --> 00:45:44.906 A:middle
your file provider extension.

00:45:46.806 --> 00:45:48.326 A:middle
You provide an interface for

00:45:48.666 --> 00:45:51.006 A:middle
this operation that is backed by

00:45:51.006 --> 00:45:53.866 A:middle
a new type of UI extension.

00:45:55.296 --> 00:45:57.886 A:middle
And this is a separate process

00:45:57.886 --> 00:46:00.186 A:middle
that's running on the system,

00:45:57.886 --> 00:46:00.186 A:middle
that's running on the system,

00:46:00.636 --> 00:46:02.796 A:middle
and it's backed by a subclass of

00:46:02.916 --> 00:46:04.086 A:middle
FPUIActionExtension

00:46:04.086 --> 00:46:04.666 A:middle
ViewController.

00:46:05.246 --> 00:46:07.206 A:middle
So how do we do that?

00:46:07.836 --> 00:46:10.236 A:middle
Well, first of all, we list the

00:46:10.236 --> 00:46:12.196 A:middle
possible number of actions in

00:46:12.286 --> 00:46:13.886 A:middle
the info.plist of our extension,

00:46:13.886 --> 00:46:15.326 A:middle
and this is really easy.

00:46:15.596 --> 00:46:17.396 A:middle
We have an action name, we have

00:46:17.396 --> 00:46:18.856 A:middle
an identifier, and we have an

00:46:18.856 --> 00:46:19.816 A:middle
activation rule.

00:46:19.846 --> 00:46:21.996 A:middle
And this activation rule is used

00:46:21.996 --> 00:46:23.626 A:middle
to figure out which of these

00:46:23.626 --> 00:46:25.316 A:middle
actions applies to which items.

00:46:26.256 --> 00:46:27.966 A:middle
So in this example on the slide,

00:46:27.966 --> 00:46:29.506 A:middle
we're simply using a true

00:46:29.506 --> 00:46:30.806 A:middle
predicate, which means that this

00:46:30.806 --> 00:46:34.186 A:middle
action is, that every item in

00:46:34.186 --> 00:46:35.416 A:middle
your provider's eligible for

00:46:35.416 --> 00:46:36.326 A:middle
this specific action.

00:46:36.936 --> 00:46:38.846 A:middle
But you can basically go wild on

00:46:38.846 --> 00:46:39.156 A:middle
this.

00:46:39.156 --> 00:46:42.966 A:middle
You can expose different keys on

00:46:43.066 --> 00:46:44.826 A:middle
your items and use these for

00:46:44.826 --> 00:46:46.006 A:middle
matching in your activation

00:46:46.006 --> 00:46:46.306 A:middle
rule.

00:46:46.816 --> 00:46:47.976 A:middle
So how does this work?

00:46:48.506 --> 00:46:50.636 A:middle
Well, the user long presses on

00:46:50.636 --> 00:46:52.976 A:middle
an item in the Files app or in

00:46:52.976 --> 00:46:53.976 A:middle
the document browser, and at

00:46:54.556 --> 00:46:56.326 A:middle
this point, we consult the

00:46:56.326 --> 00:46:58.426 A:middle
index, not your extension.

00:46:58.676 --> 00:47:00.356 A:middle
We don't even bring that up.

00:46:58.676 --> 00:47:00.356 A:middle
We don't even bring that up.

00:47:00.356 --> 00:47:02.866 A:middle
We consult the index of the item

00:47:02.866 --> 00:47:04.226 A:middle
that you previously returned to

00:47:04.226 --> 00:47:04.526 A:middle
us.

00:47:04.526 --> 00:47:09.116 A:middle
We look at the attributes and we

00:47:09.116 --> 00:47:10.566 A:middle
match this predicate against the

00:47:10.566 --> 00:47:11.246 A:middle
attributes.

00:47:11.496 --> 00:47:12.616 A:middle
At this point, we know whether

00:47:12.616 --> 00:47:14.176 A:middle
this predicate returns a yes or

00:47:14.176 --> 00:47:16.676 A:middle
a no, and we can simply display

00:47:16.676 --> 00:47:18.066 A:middle
the action if it returns a yes.

00:47:18.916 --> 00:47:21.536 A:middle
OK, so now, the user sees this

00:47:21.536 --> 00:47:23.396 A:middle
action, and probably they tap on

00:47:24.146 --> 00:47:24.213 A:middle
it.

00:47:24.486 --> 00:47:26.266 A:middle
So the user taps on the action.

00:47:26.266 --> 00:47:27.076 A:middle
What happens now?

00:47:27.416 --> 00:47:29.286 A:middle
Well, we bring up your UI

00:47:29.286 --> 00:47:31.476 A:middle
extension, and your UI extension

00:47:31.476 --> 00:47:33.036 A:middle
gets a call to its

00:47:33.036 --> 00:47:34.466 A:middle
prepareForAction method.

00:47:34.946 --> 00:47:36.546 A:middle
What this gets, what this does

00:47:36.546 --> 00:47:40.126 A:middle
is it, we hand it a set of items

00:47:40.456 --> 00:47:41.776 A:middle
plus the actionIdentifier that

00:47:41.776 --> 00:47:43.746 A:middle
the user actually chose, and you

00:47:43.746 --> 00:47:46.056 A:middle
can go and present whatever UI

00:47:46.836 --> 00:47:49.876 A:middle
you have for this action.

00:47:50.046 --> 00:47:51.176 A:middle
You return from this method.

00:47:51.176 --> 00:47:52.466 A:middle
We present your view controller.

00:47:52.466 --> 00:47:54.746 A:middle
It slides up nicely in the Files

00:47:54.746 --> 00:47:54.946 A:middle
app.

00:47:54.946 --> 00:47:56.586 A:middle
And that's it.

00:47:56.586 --> 00:47:58.466 A:middle
At this point, you know which

00:47:58.466 --> 00:47:59.626 A:middle
items you're performing these

00:47:59.626 --> 00:48:00.246 A:middle
actions on.

00:47:59.626 --> 00:48:00.246 A:middle
actions on.

00:48:00.246 --> 00:48:01.986 A:middle
For example, and you can do

00:48:01.986 --> 00:48:03.826 A:middle
whatever is necessary to perform

00:48:03.826 --> 00:48:04.376 A:middle
these actions.

00:48:04.376 --> 00:48:05.386 A:middle
And these actions are completely

00:48:05.386 --> 00:48:07.546 A:middle
custom, so, of course, it's

00:48:07.546 --> 00:48:09.036 A:middle
completely up to you what is

00:48:09.036 --> 00:48:09.636 A:middle
happening here.

00:48:10.486 --> 00:48:12.046 A:middle
At some point, the user will be

00:48:12.046 --> 00:48:12.996 A:middle
done with this action.

00:48:13.756 --> 00:48:14.896 A:middle
Maybe you're implementing a Done

00:48:14.896 --> 00:48:15.236 A:middle
button.

00:48:15.236 --> 00:48:16.986 A:middle
Maybe this is, there's some

00:48:16.986 --> 00:48:18.436 A:middle
natural end to this action.

00:48:18.796 --> 00:48:20.586 A:middle
But at any rate, you call the

00:48:20.586 --> 00:48:22.096 A:middle
completeRequest method on the

00:48:22.096 --> 00:48:24.096 A:middle
extension context, and the

00:48:24.096 --> 00:48:25.856 A:middle
system simply dismisses your UI.

00:48:26.036 --> 00:48:27.746 A:middle
But that's just custom actions.

00:48:27.746 --> 00:48:30.026 A:middle
As I promised earlier, there's a

00:48:30.026 --> 00:48:31.426 A:middle
special case for authentication

00:48:31.426 --> 00:48:32.516 A:middle
actions, so look at that.

00:48:33.376 --> 00:48:34.536 A:middle
Authentication actions are

00:48:34.536 --> 00:48:36.776 A:middle
called exactly the same way as

00:48:36.776 --> 00:48:38.576 A:middle
custom UI actions are called,

00:48:39.296 --> 00:48:40.256 A:middle
except they're called in a

00:48:40.256 --> 00:48:41.446 A:middle
special case, and that's when

00:48:41.446 --> 00:48:42.786 A:middle
you to us return an

00:48:42.786 --> 00:48:43.596 A:middle
authentication error.

00:48:44.126 --> 00:48:45.336 A:middle
So if you return an

00:48:45.336 --> 00:48:46.926 A:middle
authentication error, what

00:48:46.926 --> 00:48:48.276 A:middle
happens is that we call the

00:48:48.276 --> 00:48:49.796 A:middle
prepareForAuthentication method

00:48:50.206 --> 00:48:51.886 A:middle
on your FPUI extension,

00:48:52.296 --> 00:48:53.706 A:middle
ActionExtensionViewController.

00:48:54.416 --> 00:48:55.656 A:middle
And everything from there on

00:48:55.656 --> 00:48:57.186 A:middle
flows just the same way.

00:48:57.756 --> 00:48:59.176 A:middle
You call, you can call, you can

00:48:59.176 --> 00:49:00.676 A:middle
display whatever UI is necessary

00:48:59.176 --> 00:49:00.676 A:middle
display whatever UI is necessary

00:49:00.676 --> 00:49:01.596 A:middle
for authenticating.

00:49:01.826 --> 00:49:03.106 A:middle
At some point, the user has

00:49:03.106 --> 00:49:03.916 A:middle
authenticated.

00:49:03.916 --> 00:49:05.506 A:middle
You can call the dismiss method,

00:49:05.626 --> 00:49:07.126 A:middle
the view controller dismisses,

00:49:07.126 --> 00:49:08.366 A:middle
and you're now authenticated,

00:49:08.366 --> 00:49:09.646 A:middle
and we will simply retry.

00:49:10.536 --> 00:49:11.736 A:middle
So those are actions, and those

00:49:11.736 --> 00:49:15.916 A:middle
are very nice, but all said and

00:49:15.916 --> 00:49:17.686 A:middle
done, they are only showing up

00:49:17.686 --> 00:49:20.756 A:middle
in the, either the document

00:49:20.756 --> 00:49:22.016 A:middle
browser view controller or the

00:49:22.016 --> 00:49:22.536 A:middle
Files app.

00:49:22.876 --> 00:49:24.106 A:middle
And that is great.

00:49:24.656 --> 00:49:26.526 A:middle
That is a great way for you to

00:49:26.526 --> 00:49:28.036 A:middle
expose something to your user,

00:49:28.716 --> 00:49:30.336 A:middle
but sometimes you need something

00:49:30.336 --> 00:49:31.496 A:middle
more, and for that, we have this

00:49:31.496 --> 00:49:32.656 A:middle
concept of Services.

00:49:33.876 --> 00:49:35.106 A:middle
What's a Service?

00:49:35.586 --> 00:49:37.556 A:middle
Well, as I said, there's caveats

00:49:37.556 --> 00:49:38.576 A:middle
for the custom actions.

00:49:39.536 --> 00:49:41.716 A:middle
But sometimes you need

00:49:41.986 --> 00:49:43.996 A:middle
programmatic access to specific

00:49:43.996 --> 00:49:44.466 A:middle
files.

00:49:45.016 --> 00:49:45.816 A:middle
And if you're currently

00:49:45.816 --> 00:49:47.556 A:middle
publishing an SDK, for example,

00:49:47.916 --> 00:49:50.586 A:middle
this is where you export,

00:49:50.586 --> 00:49:52.306 A:middle
expose, where you can expose the

00:49:52.306 --> 00:49:53.726 A:middle
same functionality that your SDK

00:49:53.726 --> 00:49:54.766 A:middle
is currently exposing.

00:49:56.216 --> 00:49:58.596 A:middle
Services are a way for you to

00:49:58.596 --> 00:50:00.416 A:middle
expose functionality directly on

00:49:58.596 --> 00:50:00.416 A:middle
expose functionality directly on

00:50:00.416 --> 00:50:02.196 A:middle
an item, so let's have a look at

00:50:02.196 --> 00:50:03.776 A:middle
how that goes.

00:50:03.966 --> 00:50:05.136 A:middle
First, you need to define what

00:50:05.136 --> 00:50:05.866 A:middle
your service is.

00:50:06.336 --> 00:50:08.736 A:middle
And at the base level, a service

00:50:08.736 --> 00:50:11.186 A:middle
is simply a name that's an

00:50:11.226 --> 00:50:12.516 A:middle
identifier that you give the

00:50:12.516 --> 00:50:15.746 A:middle
service plus an Objective-C

00:50:15.746 --> 00:50:16.496 A:middle
protocol.

00:50:16.606 --> 00:50:18.276 A:middle
And this is basically any old

00:50:18.276 --> 00:50:19.346 A:middle
Objective-C protocol.

00:50:19.956 --> 00:50:21.306 A:middle
There's some caveats here that

00:50:21.306 --> 00:50:22.786 A:middle
we'll go into real soon.

00:50:22.996 --> 00:50:25.546 A:middle
The protocol must be known to

00:50:25.546 --> 00:50:27.576 A:middle
you and to the developer that's

00:50:27.576 --> 00:50:28.056 A:middle
using it.

00:50:28.056 --> 00:50:30.286 A:middle
So both of you need to determine

00:50:30.286 --> 00:50:31.836 A:middle
what the protocol is.

00:50:32.376 --> 00:50:33.746 A:middle
And this is because the

00:50:33.746 --> 00:50:35.736 A:middle
developer using this is going to

00:50:35.736 --> 00:50:37.146 A:middle
perform method calls on an

00:50:37.146 --> 00:50:38.916 A:middle
object that is exposed by you,

00:50:38.916 --> 00:50:39.596 A:middle
effectively.

00:50:40.116 --> 00:50:41.236 A:middle
So if the signatures don't

00:50:41.236 --> 00:50:43.026 A:middle
match, nothing will happen.

00:50:43.026 --> 00:50:44.556 A:middle
This will just result in an

00:50:44.946 --> 00:50:45.036 A:middle
error.

00:50:45.906 --> 00:50:47.596 A:middle
And when I say they're

00:50:47.596 --> 00:50:49.076 A:middle
performing method calls, the way

00:50:49.076 --> 00:50:51.236 A:middle
this works is actually that this

00:50:51.236 --> 00:50:52.876 A:middle
is implemented using NSXPC,

00:50:52.936 --> 00:50:55.136 A:middle
which is a great technology for

00:50:55.136 --> 00:50:56.306 A:middle
interprocess communication.

00:50:56.856 --> 00:50:59.056 A:middle
And that means that the usual

00:50:59.056 --> 00:51:00.206 A:middle
XPC rules apply.

00:50:59.056 --> 00:51:00.206 A:middle
XPC rules apply.

00:51:01.056 --> 00:51:03.316 A:middle
So all the parameters that are

00:51:03.316 --> 00:51:04.446 A:middle
passed through this protocol

00:51:04.446 --> 00:51:05.586 A:middle
have to be secure codable.

00:51:05.876 --> 00:51:07.236 A:middle
And of course, the classes have

00:51:07.236 --> 00:51:09.086 A:middle
to be available in both your

00:51:09.086 --> 00:51:11.916 A:middle
extension and the app that's

00:51:11.946 --> 00:51:12.636 A:middle
calling this.

00:51:13.226 --> 00:51:14.926 A:middle
And you cannot directly return

00:51:15.216 --> 00:51:17.346 A:middle
any objects from this protocol.

00:51:17.996 --> 00:51:20.236 A:middle
So you have to return, if you

00:51:20.306 --> 00:51:21.556 A:middle
want to return something, you

00:51:21.556 --> 00:51:22.996 A:middle
have to call back via completion

00:51:22.996 --> 00:51:23.266 A:middle
block.

00:51:23.866 --> 00:51:25.666 A:middle
Now, the rules for this are

00:51:25.666 --> 00:51:28.576 A:middle
somewhat interesting, and

00:51:28.606 --> 00:51:30.406 A:middle
there's, was a session in 2012

00:51:30.866 --> 00:51:32.206 A:middle
that goes into way more detail

00:51:32.206 --> 00:51:33.906 A:middle
than I can go, possibly go into

00:51:33.906 --> 00:51:34.536 A:middle
here today.

00:51:35.786 --> 00:51:37.546 A:middle
So I encourage you to have a

00:51:37.546 --> 00:51:38.306 A:middle
look at that session.

00:51:39.336 --> 00:51:40.576 A:middle
All right, let's quickly go

00:51:40.786 --> 00:51:41.996 A:middle
through the data flow that is

00:51:41.996 --> 00:51:44.036 A:middle
happening here because that is,

00:51:44.176 --> 00:51:45.596 A:middle
that warrants having a look at.

00:51:46.076 --> 00:51:47.326 A:middle
Your third-party application

00:51:47.976 --> 00:51:50.226 A:middle
goes and basically inquires on

00:51:50.226 --> 00:51:54.416 A:middle
an URL, what are the services

00:51:54.846 --> 00:51:56.686 A:middle
that are exposed on this URL?

00:51:56.686 --> 00:51:57.956 A:middle
And at this point, your

00:51:57.956 --> 00:52:01.566 A:middle
extension gets a call to answer,

00:51:57.956 --> 00:52:01.566 A:middle
extension gets a call to answer,

00:52:01.676 --> 00:52:02.916 A:middle
hey, what are the supported

00:52:02.916 --> 00:52:04.536 A:middle
services on this item?

00:52:05.636 --> 00:52:07.956 A:middle
It returns an array of service

00:52:07.956 --> 00:52:09.336 A:middle
sources, and a service source is

00:52:09.336 --> 00:52:10.326 A:middle
not a service itself.

00:52:10.866 --> 00:52:13.326 A:middle
It's an object that can create a

00:52:13.326 --> 00:52:14.826 A:middle
service, effectively, that can

00:52:14.826 --> 00:52:16.586 A:middle
create an XPC listener endpoint.

00:52:17.046 --> 00:52:19.606 A:middle
We return these services as

00:52:19.766 --> 00:52:21.676 A:middle
services to the application.

00:52:22.136 --> 00:52:23.426 A:middle
So on the service object, the

00:52:23.426 --> 00:52:24.826 A:middle
application can go and then

00:52:25.136 --> 00:52:26.316 A:middle
create a proxy object.

00:52:26.666 --> 00:52:27.916 A:middle
Let's have a look at that, how

00:52:27.916 --> 00:52:28.546 A:middle
that works.

00:52:29.196 --> 00:52:31.146 A:middle
So the third-party application

00:52:31.146 --> 00:52:32.726 A:middle
uses that service after it's

00:52:32.726 --> 00:52:34.216 A:middle
looked at which services are

00:52:34.216 --> 00:52:34.706 A:middle
available.

00:52:34.706 --> 00:52:36.046 A:middle
Of course, they can be any

00:52:36.046 --> 00:52:37.186 A:middle
number of services, right?

00:52:37.776 --> 00:52:39.156 A:middle
So it looks at the identifiers

00:52:39.536 --> 00:52:42.076 A:middle
of these services, figures out

00:52:42.076 --> 00:52:43.796 A:middle
which one it wants to use, and

00:52:43.796 --> 00:52:44.676 A:middle
creates a messenger.

00:52:45.536 --> 00:52:47.696 A:middle
At this point, we are asking

00:52:47.696 --> 00:52:50.126 A:middle
your extension on the service

00:52:50.126 --> 00:52:51.726 A:middle
source to make a listener

00:52:51.726 --> 00:52:52.326 A:middle
endpoint.

00:52:53.076 --> 00:52:54.976 A:middle
So it returned that.

00:52:54.976 --> 00:52:56.276 A:middle
A ListenerEndpoint, that's an

00:52:56.656 --> 00:52:58.436 A:middle
existing NSXPC class, although

00:52:58.436 --> 00:52:59.876 A:middle
it's currently only exposed on

00:52:59.876 --> 00:53:00.426 A:middle
macOS.

00:52:59.876 --> 00:53:00.426 A:middle
macOS.

00:53:00.866 --> 00:53:02.136 A:middle
We're now bringing it to iOS.

00:53:02.576 --> 00:53:03.906 A:middle
At this point, the third-party

00:53:03.906 --> 00:53:05.456 A:middle
application can grab the remote

00:53:05.456 --> 00:53:07.186 A:middle
proxy on this messenger, and

00:53:07.186 --> 00:53:09.266 A:middle
that calls on your listener

00:53:09.266 --> 00:53:10.816 A:middle
delegate the

00:53:10.816 --> 00:53:13.776 A:middle
shouldAcceptConnection callback.

00:53:14.816 --> 00:53:16.396 A:middle
At this point, you can call, you

00:53:16.396 --> 00:53:18.306 A:middle
can configure this connection

00:53:19.246 --> 00:53:21.996 A:middle
and return this connection to

00:53:22.276 --> 00:53:22.896 A:middle
the system.

00:53:23.616 --> 00:53:25.236 A:middle
So in this case, for example,

00:53:25.236 --> 00:53:27.626 A:middle
you provide a proxy object that

00:53:27.626 --> 00:53:28.926 A:middle
is being exported by our

00:53:28.926 --> 00:53:29.526 A:middle
extension.

00:53:30.006 --> 00:53:33.366 A:middle
And from there on out, we can go

00:53:33.366 --> 00:53:35.386 A:middle
and call whatever methods are

00:53:35.736 --> 00:53:37.856 A:middle
defined in our protocol on this

00:53:37.856 --> 00:53:39.206 A:middle
remote proxy object in our

00:53:39.206 --> 00:53:40.206 A:middle
third-party application.

00:53:40.686 --> 00:53:42.156 A:middle
And all of these calls will be

00:53:42.156 --> 00:53:45.236 A:middle
translated into calls in our

00:53:45.236 --> 00:53:45.806 A:middle
extension.

00:53:47.216 --> 00:53:49.706 A:middle
This is a, an extremely powerful

00:53:50.896 --> 00:53:53.106 A:middle
mechanism for you to expose

00:53:54.336 --> 00:53:58.916 A:middle
basically any old possible SDK

00:53:58.916 --> 00:54:01.366 A:middle
operations on your extension.

00:53:58.916 --> 00:54:01.366 A:middle
operations on your extension.

00:54:01.886 --> 00:54:04.276 A:middle
As a, as an aside, we don't

00:54:04.276 --> 00:54:05.486 A:middle
expect everyone to implement

00:54:05.486 --> 00:54:06.876 A:middle
this, and it's perfectly fine if

00:54:06.876 --> 00:54:08.956 A:middle
your first version does not use

00:54:08.956 --> 00:54:09.916 A:middle
this mechanism at all.

00:54:10.246 --> 00:54:11.836 A:middle
This is a very advanced topic,

00:54:12.316 --> 00:54:15.636 A:middle
so if you only, if all you

00:54:15.636 --> 00:54:18.006 A:middle
implement is enumeration and the

00:54:18.006 --> 00:54:19.786 A:middle
usual file provider actions,

00:54:20.106 --> 00:54:21.876 A:middle
we're already super happy.

00:54:22.996 --> 00:54:23.626 A:middle
All right.

00:54:24.076 --> 00:54:25.116 A:middle
Let's summarize what we've seen

00:54:25.116 --> 00:54:25.466 A:middle
today.

00:54:26.336 --> 00:54:27.586 A:middle
We've seen what a file provider

00:54:27.586 --> 00:54:28.996 A:middle
is, and how we can use a file

00:54:28.996 --> 00:54:30.926 A:middle
provider to back the

00:54:31.476 --> 00:54:32.986 A:middle
enumerations in the Files app,

00:54:33.036 --> 00:54:36.846 A:middle
and how to use it to show files

00:54:36.846 --> 00:54:37.986 A:middle
in the document browser.

00:54:39.206 --> 00:54:40.326 A:middle
We've seen how you use

00:54:40.326 --> 00:54:43.606 A:middle
enumerations to expose items to

00:54:43.966 --> 00:54:46.096 A:middle
both of these controls and how

00:54:46.096 --> 00:54:47.236 A:middle
you can enumerate the working

00:54:47.236 --> 00:54:48.196 A:middle
set, how you can enumerate

00:54:48.196 --> 00:54:49.846 A:middle
changes to the working set, and

00:54:49.846 --> 00:54:51.046 A:middle
how you can push changes to the

00:54:51.046 --> 00:54:51.656 A:middle
working set.

00:54:52.496 --> 00:54:54.576 A:middle
And finally, we've seen how you

00:54:54.576 --> 00:54:57.436 A:middle
can implement actions to modify

00:54:57.596 --> 00:54:59.896 A:middle
stuff in your hierarchy and how

00:54:59.896 --> 00:55:01.646 A:middle
you can then go even further,

00:54:59.896 --> 00:55:01.646 A:middle
you can then go even further,

00:55:01.646 --> 00:55:03.726 A:middle
and customize these actions, and

00:55:03.726 --> 00:55:06.286 A:middle
even implement services that are

00:55:06.286 --> 00:55:07.436 A:middle
completely custom to your

00:55:07.436 --> 00:55:09.416 A:middle
provider, and expose those to

00:55:09.416 --> 00:55:10.166 A:middle
third-party apps.

00:55:11.056 --> 00:55:13.116 A:middle
For more information, we have a

00:55:13.116 --> 00:55:16.076 A:middle
page on the developer.apple.com

00:55:17.196 --> 00:55:18.966 A:middle
and we have a list of related

00:55:18.966 --> 00:55:20.916 A:middle
sessions that go into way more

00:55:20.916 --> 00:55:22.226 A:middle
detail than we can possibly do

00:55:22.226 --> 00:55:25.006 A:middle
here on some of the technologies

00:55:25.006 --> 00:55:25.356 A:middle
used.

00:55:26.456 --> 00:55:27.856 A:middle
And with that, I hope you are

00:55:27.856 --> 00:55:29.016 A:middle
having a great conference.

00:55:29.246 --> 00:55:29.946 A:middle
Thank you very much.

00:55:31.016 --> 00:55:33.000 A:middle
[ Applause ]
