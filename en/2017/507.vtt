WEBVTT

00:00:24.046 --> 00:00:25.446 A:middle
&gt;&gt; Welcome to Session 507.

00:00:25.716 --> 00:00:26.576 A:middle
I'm Brad Ford.

00:00:26.756 --> 00:00:27.786 A:middle
I'm from the Camera Software

00:00:27.786 --> 00:00:30.076 A:middle
Team, and I'm very excited to

00:00:30.076 --> 00:00:31.626 A:middle
share some deep thoughts with

00:00:31.626 --> 00:00:32.485 A:middle
you this afternoon.

00:00:32.746 --> 00:00:34.786 A:middle
Did you see what I did there?

00:00:35.196 --> 00:00:36.286 A:middle
All right [applause].

00:00:38.666 --> 00:00:40.216 A:middle
This session is part one of a

00:00:40.216 --> 00:00:41.946 A:middle
two-part series on a very

00:00:41.946 --> 00:00:43.126 A:middle
important initiative for Apple

00:00:43.126 --> 00:00:44.556 A:middle
this year, and that is media

00:00:44.706 --> 00:00:46.376 A:middle
containing depth information.

00:00:47.056 --> 00:00:48.136 A:middle
I'll introduce depth at the

00:00:48.136 --> 00:00:49.506 A:middle
conceptual level, I'll

00:00:49.506 --> 00:00:51.526 A:middle
familiarize you with key terms,

00:00:51.776 --> 00:00:52.556 A:middle
and I'll teach you how to

00:00:52.556 --> 00:00:53.976 A:middle
capture depth data on the

00:00:53.976 --> 00:00:55.666 A:middle
iPhone, much like this.

00:00:55.666 --> 00:00:56.946 A:middle
You'll see a lot of ghostly

00:00:56.946 --> 00:00:58.146 A:middle
images in this session.

00:00:59.406 --> 00:01:00.416 A:middle
Here's the agenda.

00:00:59.406 --> 00:01:00.416 A:middle
Here's the agenda.

00:01:01.476 --> 00:01:03.096 A:middle
First we're going to cover depth

00:01:03.096 --> 00:01:04.756 A:middle
and disparity on iPhone 7 Plus

00:01:05.215 --> 00:01:06.166 A:middle
at a high level.

00:01:07.126 --> 00:01:08.636 A:middle
Then we'll move on to streaming

00:01:08.636 --> 00:01:09.846 A:middle
depth data from the camera,

00:01:11.046 --> 00:01:12.296 A:middle
capturing photos with depth

00:01:12.296 --> 00:01:15.396 A:middle
data, and finally we'll end with

00:01:15.486 --> 00:01:16.836 A:middle
a slight tangent, which is dual

00:01:16.836 --> 00:01:17.696 A:middle
photo capture.

00:01:18.116 --> 00:01:19.596 A:middle
It is the most highly requested

00:01:19.596 --> 00:01:20.706 A:middle
feature we've had on dual

00:01:20.706 --> 00:01:22.206 A:middle
camera, and I'm very excited to

00:01:22.206 --> 00:01:22.836 A:middle
talk about it.

00:01:23.486 --> 00:01:25.566 A:middle
Your job is to listen for all

00:01:25.566 --> 00:01:28.316 A:middle
the truly horrible depth puns

00:01:28.496 --> 00:01:29.656 A:middle
that I have sprinkled throughout

00:01:29.706 --> 00:01:31.936 A:middle
this session, and let's make a

00:01:31.936 --> 00:01:32.456 A:middle
game of it.

00:01:32.456 --> 00:01:34.326 A:middle
Okay? Every time you hear one,

00:01:34.426 --> 00:01:36.276 A:middle
just give me a nice big groan to

00:01:36.276 --> 00:01:37.376 A:middle
let me know that you care.

00:01:37.376 --> 00:01:37.676 A:middle
All right?

00:01:38.016 --> 00:01:38.856 A:middle
Here, let's practice.

00:01:39.416 --> 00:01:40.976 A:middle
Everybody ready for a deep dive?

00:01:41.031 --> 00:01:43.031 A:middle
[ Group groaning ]

00:01:43.046 --> 00:01:43.826 A:middle
Thank you, from the bottom of my

00:01:43.856 --> 00:01:43.976 A:middle
heart.

00:01:44.051 --> 00:01:46.051 A:middle
[ Group groaning ]

00:01:46.086 --> 00:01:47.086 A:middle
All right.

00:01:47.466 --> 00:01:49.816 A:middle
Good. The reason you're all here

00:01:49.816 --> 00:01:51.726 A:middle
today is this guy right here.

00:01:52.006 --> 00:01:53.526 A:middle
This is the iPhone 7 Plus.

00:01:53.996 --> 00:01:55.226 A:middle
The product, of course, has sold

00:01:55.226 --> 00:01:57.196 A:middle
exceptionally well, even better

00:01:57.196 --> 00:01:58.716 A:middle
than its plus size predecessor,

00:01:59.356 --> 00:02:00.746 A:middle
and that's thanks in large part

00:01:59.356 --> 00:02:00.746 A:middle
and that's thanks in large part

00:02:00.746 --> 00:02:01.986 A:middle
to the quality of the dual

00:02:01.986 --> 00:02:02.796 A:middle
camera system.

00:02:03.786 --> 00:02:06.666 A:middle
It is a dual prime lens system

00:02:06.816 --> 00:02:08.656 A:middle
consisting of a 28-millimeter

00:02:08.656 --> 00:02:10.136 A:middle
equivalent wide-angle camera,

00:02:10.536 --> 00:02:12.326 A:middle
and a 56-millimeter equivalent

00:02:12.326 --> 00:02:13.276 A:middle
telephoto camera.

00:02:13.836 --> 00:02:15.686 A:middle
Both of them are 12 megapixels.

00:02:16.006 --> 00:02:17.396 A:middle
They share the same feature set,

00:02:17.546 --> 00:02:18.576 A:middle
the same formats.

00:02:19.146 --> 00:02:20.196 A:middle
You can run either of these

00:02:20.196 --> 00:02:22.176 A:middle
cameras on its own, or you can

00:02:22.176 --> 00:02:24.466 A:middle
address them in tandem using a

00:02:24.466 --> 00:02:26.506 A:middle
third virtual camera, the first

00:02:26.506 --> 00:02:27.826 A:middle
time we've ever delivered one on

00:02:27.936 --> 00:02:29.566 A:middle
iOS, and it's called the dual

00:02:29.566 --> 00:02:29.996 A:middle
camera.

00:02:30.586 --> 00:02:32.076 A:middle
It runs them in a synchronized

00:02:32.076 --> 00:02:33.916 A:middle
fashion, the same frame rate,

00:02:34.446 --> 00:02:35.476 A:middle
and running them together

00:02:35.476 --> 00:02:37.296 A:middle
enables two marquee features.

00:02:38.316 --> 00:02:40.176 A:middle
The first is dual camera zoom.

00:02:41.186 --> 00:02:42.826 A:middle
This switches between the wide

00:02:42.826 --> 00:02:44.486 A:middle
and the tele automatically as

00:02:44.486 --> 00:02:45.106 A:middle
you zoom.

00:02:45.656 --> 00:02:47.816 A:middle
It matches exposure, focus and

00:02:47.816 --> 00:02:49.156 A:middle
frame rate so that it's kind of

00:02:49.156 --> 00:02:49.586 A:middle
magical.

00:02:49.586 --> 00:02:50.496 A:middle
You don't even realize that

00:02:50.496 --> 00:02:52.136 A:middle
we're switching cameras, but all

00:02:52.136 --> 00:02:53.636 A:middle
of this happens very seamlessly.

00:02:54.056 --> 00:02:55.476 A:middle
We also are compensating for the

00:02:55.476 --> 00:02:57.556 A:middle
parallax shift to make it a

00:02:57.556 --> 00:02:59.056 A:middle
smooth transition as you go back

00:02:59.056 --> 00:03:00.216 A:middle
and forth between the wide and

00:02:59.056 --> 00:03:00.216 A:middle
and forth between the wide and

00:03:00.216 --> 00:03:00.676 A:middle
the tele.

00:03:01.246 --> 00:03:03.226 A:middle
And the second marquee feature

00:03:03.226 --> 00:03:04.456 A:middle
is, of course, the Portrait

00:03:04.456 --> 00:03:05.996 A:middle
mode, where the dual camera

00:03:05.996 --> 00:03:08.026 A:middle
system locks into the tele

00:03:08.026 --> 00:03:10.126 A:middle
camera's narrower field of view,

00:03:10.956 --> 00:03:13.086 A:middle
but then uses images from both

00:03:13.136 --> 00:03:15.026 A:middle
the wide and the tele to

00:03:15.026 --> 00:03:16.666 A:middle
generate a beautiful shallow

00:03:16.666 --> 00:03:18.216 A:middle
depth of field effect that you'd

00:03:18.216 --> 00:03:19.256 A:middle
expect from a much more

00:03:19.256 --> 00:03:21.066 A:middle
expensive camera with a fast,

00:03:21.066 --> 00:03:22.106 A:middle
wide-open lens.

00:03:22.866 --> 00:03:24.766 A:middle
The foreground is sharply in

00:03:24.766 --> 00:03:26.596 A:middle
focus, while the background is

00:03:26.596 --> 00:03:28.376 A:middle
progressively blurred in these

00:03:28.376 --> 00:03:30.056 A:middle
pleasing little bouquet circles.

00:03:30.896 --> 00:03:33.196 A:middle
The depth effect has gotten even

00:03:33.196 --> 00:03:34.716 A:middle
better in iOS 11.

00:03:35.286 --> 00:03:36.516 A:middle
We've made improvements to the

00:03:36.516 --> 00:03:38.076 A:middle
rendering of the out-of-focus

00:03:38.076 --> 00:03:38.486 A:middle
area.

00:03:38.896 --> 00:03:40.956 A:middle
It more accurately represents a

00:03:40.956 --> 00:03:43.416 A:middle
wide-open fast lens with sharp

00:03:43.466 --> 00:03:44.876 A:middle
and well-defined bouquet

00:03:44.876 --> 00:03:45.476 A:middle
circles.

00:03:45.996 --> 00:03:47.016 A:middle
We've also improved how the

00:03:47.016 --> 00:03:48.666 A:middle
rendering handles the edges

00:03:48.776 --> 00:03:50.116 A:middle
between the foreground and the

00:03:50.116 --> 00:03:50.656 A:middle
background.

00:03:50.956 --> 00:03:51.846 A:middle
Please check it out if you

00:03:51.846 --> 00:03:52.386 A:middle
haven't yet.

00:03:52.386 --> 00:03:53.306 A:middle
I think you'll be pleasantly

00:03:53.306 --> 00:03:54.646 A:middle
surprised at how great the

00:03:54.646 --> 00:03:56.226 A:middle
quality of the shallow depth of

00:03:56.226 --> 00:03:57.866 A:middle
field effect is in iOS 11.

00:03:58.886 --> 00:04:01.076 A:middle
To generate an effect like this

00:03:58.886 --> 00:04:01.076 A:middle
To generate an effect like this

00:04:01.206 --> 00:04:02.466 A:middle
you need to be able to separate

00:04:02.466 --> 00:04:04.096 A:middle
foreground from background.

00:04:04.156 --> 00:04:05.836 A:middle
In other words, you need depth.

00:04:06.606 --> 00:04:07.916 A:middle
And up to now that depth

00:04:07.916 --> 00:04:09.416 A:middle
information has been exclusive

00:04:09.616 --> 00:04:10.956 A:middle
to the Apple camera app's

00:04:10.956 --> 00:04:13.846 A:middle
Portrait mode, but now new in

00:04:13.926 --> 00:04:15.806 A:middle
iOS 11 we are opening up depth

00:04:15.806 --> 00:04:17.375 A:middle
maps to third party apps.

00:04:18.646 --> 00:04:19.435 A:middle
Here's a gray scale

00:04:19.435 --> 00:04:21.036 A:middle
visualization of the depth map

00:04:21.196 --> 00:04:22.496 A:middle
that was embedded in this image

00:04:22.496 --> 00:04:22.796 A:middle
file.

00:04:24.036 --> 00:04:26.036 A:middle
Having depth information opens

00:04:26.036 --> 00:04:28.096 A:middle
up a world of possibilities for

00:04:28.096 --> 00:04:30.156 A:middle
image editing, such as applying

00:04:30.156 --> 00:04:31.126 A:middle
different filters to the

00:04:31.316 --> 00:04:32.636 A:middle
background and the foreground,

00:04:32.936 --> 00:04:35.176 A:middle
like this.

00:04:35.616 --> 00:04:37.366 A:middle
I've applied a noir black and

00:04:37.366 --> 00:04:39.136 A:middle
white filter to the background

00:04:39.266 --> 00:04:40.436 A:middle
and the fade filter to the

00:04:40.436 --> 00:04:40.956 A:middle
foreground.

00:04:41.446 --> 00:04:42.546 A:middle
And notice how the little girl's

00:04:42.546 --> 00:04:43.776 A:middle
tights are still pink, but

00:04:43.776 --> 00:04:45.236 A:middle
everything behind them is black

00:04:45.236 --> 00:04:45.556 A:middle
and white.

00:04:46.216 --> 00:04:47.656 A:middle
Knowing the gradations of depth,

00:04:48.016 --> 00:04:49.936 A:middle
I can get even fancier and I can

00:04:49.936 --> 00:04:51.346 A:middle
move the switch-over point

00:04:51.516 --> 00:04:53.356 A:middle
forward or backward, like this.

00:04:53.706 --> 00:04:54.876 A:middle
Keep your eyes on the flower.

00:04:56.356 --> 00:04:58.166 A:middle
So now notice that just her hand

00:04:58.166 --> 00:04:59.366 A:middle
and her flower are in color,

00:04:59.366 --> 00:05:00.296 A:middle
while everything else is in

00:04:59.366 --> 00:05:00.296 A:middle
while everything else is in

00:05:00.296 --> 00:05:00.886 A:middle
black and white.

00:05:02.126 --> 00:05:03.716 A:middle
You can even control foreground

00:05:03.716 --> 00:05:05.056 A:middle
and background exposures

00:05:05.056 --> 00:05:06.496 A:middle
differently, like this.

00:05:07.736 --> 00:05:09.736 A:middle
So now she looks like she was

00:05:09.736 --> 00:05:11.106 A:middle
photoshopped into her very own

00:05:11.106 --> 00:05:11.436 A:middle
photo.

00:05:12.196 --> 00:05:13.486 A:middle
I'm not saying you should do it.

00:05:13.486 --> 00:05:15.416 A:middle
I'm saying you could do it.

00:05:16.676 --> 00:05:17.096 A:middle
All right.

00:05:17.096 --> 00:05:17.606 A:middle
Enough fun.

00:05:17.656 --> 00:05:18.516 A:middle
Let's get technical.

00:05:18.946 --> 00:05:21.276 A:middle
I like to call this section deep

00:05:21.676 --> 00:05:22.196 A:middle
learning [group groaning].

00:05:23.566 --> 00:05:23.976 A:middle
Thank you.

00:05:24.036 --> 00:05:25.996 A:middle
First we need to define what a

00:05:25.996 --> 00:05:26.986 A:middle
depth map is.

00:05:27.696 --> 00:05:29.456 A:middle
In the real world depth means

00:05:29.456 --> 00:05:31.786 A:middle
the distance between you and an

00:05:31.786 --> 00:05:32.596 A:middle
observed object.

00:05:33.326 --> 00:05:34.856 A:middle
A depth map is a transformation

00:05:34.856 --> 00:05:36.586 A:middle
of a three-dimensional scene

00:05:36.836 --> 00:05:38.146 A:middle
into a two-dimensional

00:05:38.146 --> 00:05:39.916 A:middle
representation, and you do that

00:05:39.916 --> 00:05:41.036 A:middle
by setting the depth to a

00:05:41.036 --> 00:05:42.336 A:middle
constant distance.

00:05:43.076 --> 00:05:44.066 A:middle
Let me explain what I mean.

00:05:44.356 --> 00:05:45.926 A:middle
I'm going to use a diagram of a

00:05:46.036 --> 00:05:48.066 A:middle
pinhole camera often during this

00:05:48.066 --> 00:05:48.766 A:middle
presentation.

00:05:49.416 --> 00:05:50.636 A:middle
If you've studied computer

00:05:50.636 --> 00:05:51.426 A:middle
vision, you'll be really

00:05:51.426 --> 00:05:52.916 A:middle
familiar with pinhole cameras.

00:05:53.066 --> 00:05:54.436 A:middle
A pinhole camera is a simple

00:05:54.436 --> 00:05:56.976 A:middle
lightproof box without a lens.

00:05:56.976 --> 00:05:58.306 A:middle
Instead, it just has a little

00:05:58.306 --> 00:05:59.926 A:middle
poked hole, a single small

00:05:59.926 --> 00:06:01.986 A:middle
aperture that permits light to

00:05:59.926 --> 00:06:01.986 A:middle
aperture that permits light to

00:06:01.986 --> 00:06:04.446 A:middle
enter in and project itself as

00:06:04.446 --> 00:06:06.126 A:middle
an inverted image on the other

00:06:06.126 --> 00:06:08.766 A:middle
side of the image plane, or a

00:06:08.766 --> 00:06:09.256 A:middle
sensor.

00:06:09.836 --> 00:06:12.606 A:middle
The opposite side is known as

00:06:12.886 --> 00:06:13.866 A:middle
image plane or sensor.

00:06:14.766 --> 00:06:15.926 A:middle
The aperture through which the

00:06:15.926 --> 00:06:17.556 A:middle
light rays pass is called the

00:06:17.556 --> 00:06:19.476 A:middle
focal point, and the field of

00:06:19.476 --> 00:06:20.766 A:middle
view of the image captured

00:06:20.936 --> 00:06:23.306 A:middle
depends on the focal length.

00:06:23.896 --> 00:06:24.876 A:middle
So the focal length is the

00:06:24.876 --> 00:06:26.936 A:middle
distance from the focal point to

00:06:26.936 --> 00:06:27.676 A:middle
the image plane.

00:06:27.946 --> 00:06:30.376 A:middle
A shorter focal length means

00:06:30.376 --> 00:06:32.636 A:middle
wider field of view; whereas,

00:06:32.636 --> 00:06:34.376 A:middle
longer focal length, longer box,

00:06:34.376 --> 00:06:35.656 A:middle
means narrower field of view.

00:06:36.426 --> 00:06:38.116 A:middle
The focal length is that

00:06:38.166 --> 00:06:40.376 A:middle
constant distance by which real

00:06:40.376 --> 00:06:41.646 A:middle
world distances are flattened

00:06:41.646 --> 00:06:42.816 A:middle
into a 2D image.

00:06:43.456 --> 00:06:44.956 A:middle
Put simply, a depth map is a

00:06:44.956 --> 00:06:47.176 A:middle
transformation of a 3D depth

00:06:47.446 --> 00:06:49.826 A:middle
into a 2D, single channel image

00:06:50.116 --> 00:06:51.476 A:middle
where each pixel value is a

00:06:51.476 --> 00:06:52.746 A:middle
different depth, like five

00:06:52.746 --> 00:06:54.396 A:middle
meters, four meters, three

00:06:54.396 --> 00:06:54.846 A:middle
meters.

00:06:56.556 --> 00:06:58.906 A:middle
Now, to truly measure depth you

00:06:58.906 --> 00:07:00.776 A:middle
need a purpose-built camera for

00:06:58.906 --> 00:07:00.776 A:middle
need a purpose-built camera for

00:07:00.776 --> 00:07:01.506 A:middle
this, something like a

00:07:01.506 --> 00:07:02.686 A:middle
time-of-flight camera.

00:07:03.146 --> 00:07:04.596 A:middle
For instance, a system that

00:07:04.976 --> 00:07:07.076 A:middle
bounces light signals off of

00:07:07.076 --> 00:07:08.386 A:middle
objects and then measures the

00:07:08.386 --> 00:07:09.766 A:middle
time that it takes to return

00:07:09.766 --> 00:07:10.656 A:middle
back to the sensor.

00:07:10.986 --> 00:07:13.696 A:middle
The iPhone 7 dual camera is not

00:07:14.026 --> 00:07:15.276 A:middle
a time-of-flight camera.

00:07:16.106 --> 00:07:18.336 A:middle
Instead, it is a disparity-based

00:07:18.336 --> 00:07:18.846 A:middle
system.

00:07:19.366 --> 00:07:21.376 A:middle
Disparity is a measure of the

00:07:21.376 --> 00:07:24.006 A:middle
magnitude of shift of an object

00:07:24.006 --> 00:07:25.276 A:middle
when observed from two different

00:07:25.276 --> 00:07:26.546 A:middle
cameras, like your eyeballs.

00:07:27.116 --> 00:07:28.276 A:middle
Disparity is another name for

00:07:28.276 --> 00:07:28.966 A:middle
parallax.

00:07:29.926 --> 00:07:31.586 A:middle
You can observe this effect by

00:07:31.586 --> 00:07:33.616 A:middle
holding your head steady and

00:07:33.616 --> 00:07:35.496 A:middle
fixing your gaze on something

00:07:35.726 --> 00:07:37.866 A:middle
close, and then without moving

00:07:37.866 --> 00:07:39.446 A:middle
your head, close one eye and

00:07:39.446 --> 00:07:40.106 A:middle
then the other eye.

00:07:40.236 --> 00:07:41.126 A:middle
So, for instance, this would be

00:07:41.126 --> 00:07:44.666 A:middle
left eye, right eye; left eye,

00:07:45.836 --> 00:07:46.266 A:middle
right eye.

00:07:46.766 --> 00:07:47.756 A:middle
And you can see the colored

00:07:47.756 --> 00:07:49.546 A:middle
pencils appear to shift a lot

00:07:49.546 --> 00:07:50.726 A:middle
more than the markers in the

00:07:50.726 --> 00:07:52.106 A:middle
back because they are closer.

00:07:52.246 --> 00:07:53.646 A:middle
That's the parallax effect, or

00:07:53.646 --> 00:07:54.216 A:middle
disparity.

00:07:55.776 --> 00:07:56.976 A:middle
Now back to our pinhole camera

00:07:56.976 --> 00:07:57.306 A:middle
model.

00:07:57.966 --> 00:07:59.676 A:middle
Now I've taken a bird's eye view

00:07:59.906 --> 00:08:02.046 A:middle
of two cameras that are said to

00:07:59.906 --> 00:08:02.046 A:middle
of two cameras that are said to

00:08:02.046 --> 00:08:03.756 A:middle
be stereo rectified.

00:08:04.296 --> 00:08:06.146 A:middle
That means, one, that they are

00:08:06.146 --> 00:08:07.456 A:middle
parallel to one another, they're

00:08:07.456 --> 00:08:08.846 A:middle
pointing in the same direction,

00:08:09.506 --> 00:08:11.386 A:middle
and two, they have the same

00:08:11.386 --> 00:08:12.666 A:middle
focal length, which is very

00:08:12.666 --> 00:08:13.156 A:middle
important.

00:08:13.936 --> 00:08:14.986 A:middle
That's the distance from the

00:08:14.986 --> 00:08:16.386 A:middle
focal point to the image plane

00:08:16.386 --> 00:08:16.976 A:middle
or sensor.

00:08:17.636 --> 00:08:19.426 A:middle
Each camera will have a measured

00:08:19.466 --> 00:08:21.386 A:middle
optical center or a principal

00:08:21.386 --> 00:08:23.336 A:middle
point, and if you draw a

00:08:23.336 --> 00:08:24.726 A:middle
perpendicular line from the

00:08:24.726 --> 00:08:27.816 A:middle
pinhole to the image plane, then

00:08:27.816 --> 00:08:29.166 A:middle
the optical center is the point

00:08:29.166 --> 00:08:30.776 A:middle
at which it intersects with the

00:08:30.776 --> 00:08:31.396 A:middle
image plane.

00:08:31.986 --> 00:08:32.966 A:middle
Now, there's another term that

00:08:32.966 --> 00:08:33.986 A:middle
you should be familiar with and

00:08:33.986 --> 00:08:35.086 A:middle
that is baseline.

00:08:35.716 --> 00:08:37.446 A:middle
Baseline refers to the distance

00:08:37.446 --> 00:08:39.246 A:middle
between the two optical centers

00:08:39.246 --> 00:08:40.336 A:middle
of the lenses in a

00:08:40.336 --> 00:08:41.706 A:middle
stereo-rectified system.

00:08:42.385 --> 00:08:43.176 A:middle
Here's how it works.

00:08:43.756 --> 00:08:45.886 A:middle
Rays of light from an observed

00:08:45.886 --> 00:08:48.236 A:middle
object pass through the optical

00:08:48.236 --> 00:08:51.196 A:middle
centers and -- or through the

00:08:51.196 --> 00:08:53.646 A:middle
apertures and land at different

00:08:53.646 --> 00:08:55.386 A:middle
points on the image planes of

00:08:55.386 --> 00:08:56.196 A:middle
the two cameras.

00:08:57.416 --> 00:08:58.676 A:middle
A fourth term that I'm going to

00:08:58.676 --> 00:09:00.266 A:middle
throw at you right now is Z.

00:08:58.676 --> 00:09:00.266 A:middle
throw at you right now is Z.

00:09:00.446 --> 00:09:02.926 A:middle
Z is the canonical term for

00:09:02.926 --> 00:09:06.316 A:middle
depth, or real-world depth.

00:09:06.316 --> 00:09:07.496 A:middle
Now, watch what happens to the

00:09:07.496 --> 00:09:09.536 A:middle
points on the image plane as the

00:09:09.536 --> 00:09:11.426 A:middle
observed point gets farther

00:09:11.426 --> 00:09:11.766 A:middle
away.

00:09:13.876 --> 00:09:15.396 A:middle
They moved closer together.

00:09:15.396 --> 00:09:16.176 A:middle
I'm going to show that to you

00:09:16.176 --> 00:09:16.786 A:middle
one more time.

00:09:17.896 --> 00:09:19.246 A:middle
So as the real point gets

00:09:19.246 --> 00:09:21.716 A:middle
farther away, they get closer

00:09:21.716 --> 00:09:24.296 A:middle
together on the image plane, and

00:09:24.836 --> 00:09:26.726 A:middle
as the object gets closer, the

00:09:26.726 --> 00:09:28.356 A:middle
dots move farther away from each

00:09:28.356 --> 00:09:28.576 A:middle
other.

00:09:29.106 --> 00:09:30.626 A:middle
So when the cameras are stereo

00:09:30.626 --> 00:09:32.456 A:middle
rectified, these shifts only

00:09:32.456 --> 00:09:33.566 A:middle
move in one direction.

00:09:34.036 --> 00:09:35.516 A:middle
They either move closer or

00:09:35.516 --> 00:09:36.926 A:middle
farther away from one another,

00:09:36.926 --> 00:09:39.176 A:middle
but on the same line, or the

00:09:39.176 --> 00:09:40.196 A:middle
epipolar line.

00:09:41.796 --> 00:09:42.886 A:middle
Now, knowing the baseline you

00:09:42.886 --> 00:09:43.986 A:middle
can essentially line up the

00:09:43.986 --> 00:09:45.266 A:middle
cameras along their optical

00:09:45.266 --> 00:09:47.746 A:middle
centers like this and subtract

00:09:47.746 --> 00:09:48.756 A:middle
the distance between the

00:09:48.756 --> 00:09:50.546 A:middle
observed points on the image

00:09:50.546 --> 00:09:52.726 A:middle
planes to get the disparity.

00:09:53.286 --> 00:09:54.316 A:middle
That's what disparity is.

00:09:55.076 --> 00:09:56.626 A:middle
You can express this distance in

00:09:56.626 --> 00:09:57.986 A:middle
whatever units make sense for

00:09:57.986 --> 00:09:58.746 A:middle
your processing.

00:09:58.916 --> 00:10:00.696 A:middle
It could be pixels, meters,

00:09:58.916 --> 00:10:00.696 A:middle
It could be pixels, meters,

00:10:00.696 --> 00:10:01.436 A:middle
microns.

00:10:02.026 --> 00:10:03.286 A:middle
And it's common to store it in

00:10:03.286 --> 00:10:05.616 A:middle
pixels since we think of RGB

00:10:05.616 --> 00:10:07.436 A:middle
images in pixels.

00:10:08.206 --> 00:10:09.606 A:middle
Now, storing pixel shifts works

00:10:09.606 --> 00:10:11.326 A:middle
fine, as long as the image that

00:10:11.326 --> 00:10:13.236 A:middle
they accompany never changes

00:10:13.336 --> 00:10:13.966 A:middle
size.

00:10:14.946 --> 00:10:16.376 A:middle
It's not so good if you're going

00:10:16.376 --> 00:10:18.386 A:middle
to edit that image because if

00:10:18.386 --> 00:10:19.746 A:middle
you've scaled the image down,

00:10:20.066 --> 00:10:21.556 A:middle
you've now effectively changed

00:10:21.556 --> 00:10:22.436 A:middle
the pixel size.

00:10:22.726 --> 00:10:23.966 A:middle
So you have to go through the

00:10:23.966 --> 00:10:26.046 A:middle
map and you have to scale each

00:10:26.046 --> 00:10:27.196 A:middle
value in the depth map.

00:10:27.616 --> 00:10:28.406 A:middle
That's a very brittle

00:10:28.406 --> 00:10:29.246 A:middle
representation.

00:10:30.626 --> 00:10:32.576 A:middle
Instead, we at Apple have chosen

00:10:32.576 --> 00:10:34.036 A:middle
to express disparity using

00:10:34.196 --> 00:10:36.376 A:middle
normalized values that are

00:10:36.376 --> 00:10:37.976 A:middle
resilient to scaling operations.

00:10:38.376 --> 00:10:39.856 A:middle
So here's how we do that.

00:10:40.206 --> 00:10:41.516 A:middle
Again, going to our observed

00:10:41.516 --> 00:10:43.806 A:middle
point, you'll notice that there

00:10:43.806 --> 00:10:45.376 A:middle
are two similar triangles being

00:10:45.376 --> 00:10:45.776 A:middle
formed.

00:10:46.086 --> 00:10:47.236 A:middle
I'll highlight them for you.

00:10:48.716 --> 00:10:51.056 A:middle
These triangles have equal

00:10:51.056 --> 00:10:53.146 A:middle
ratios of sides and proportions.

00:10:53.836 --> 00:10:55.286 A:middle
Now, if I get rid of the cameras

00:10:55.286 --> 00:10:56.436 A:middle
to just show you the triangles,

00:10:56.906 --> 00:10:58.556 A:middle
the real-world triangle sides

00:10:58.556 --> 00:11:01.856 A:middle
are Z, or meters, and baseline,

00:10:58.556 --> 00:11:01.856 A:middle
are Z, or meters, and baseline,

00:11:01.926 --> 00:11:02.936 A:middle
the distance between the two

00:11:02.936 --> 00:11:03.716 A:middle
optical centers.

00:11:04.996 --> 00:11:06.506 A:middle
Inside the light box, or the

00:11:06.506 --> 00:11:09.496 A:middle
lightproof box, that same

00:11:09.496 --> 00:11:11.356 A:middle
triangle is represented as the

00:11:11.356 --> 00:11:13.366 A:middle
focal length in pixels and the

00:11:13.366 --> 00:11:14.916 A:middle
disparity in pixels.

00:11:15.196 --> 00:11:17.146 A:middle
Do you feel math coming on?

00:11:17.186 --> 00:11:18.036 A:middle
I feel math coming on.

00:11:18.646 --> 00:11:19.766 A:middle
So stay with me here.

00:11:19.766 --> 00:11:21.976 A:middle
This is pretty painless.

00:11:22.736 --> 00:11:29.566 A:middle
Baseline is to Z as pixel

00:11:30.596 --> 00:11:32.936 A:middle
disparity is to focal length.

00:11:33.666 --> 00:11:36.116 A:middle
Okay. Well, what if we divide

00:11:36.116 --> 00:11:38.396 A:middle
both sides by the baseline so

00:11:38.396 --> 00:11:41.026 A:middle
the b's cancel out on the left,

00:11:41.506 --> 00:11:43.646 A:middle
and what you're left with is 1

00:11:43.646 --> 00:11:44.306 A:middle
over z.

00:11:45.286 --> 00:11:45.976 A:middle
That's pretty nice.

00:11:46.636 --> 00:11:48.886 A:middle
1 over z is inverse depth.

00:11:49.386 --> 00:11:50.956 A:middle
That is literally what disparity

00:11:50.956 --> 00:11:51.426 A:middle
means.

00:11:51.896 --> 00:11:53.126 A:middle
When an object moves farther

00:11:53.126 --> 00:11:55.156 A:middle
away, the disparity shrinks.

00:11:55.756 --> 00:11:57.146 A:middle
When it moves closer, the

00:11:57.146 --> 00:11:58.026 A:middle
disparity grows.

00:11:58.026 --> 00:11:59.606 A:middle
So it is the inverse of depth.

00:12:01.336 --> 00:12:02.626 A:middle
What remains on the right is

00:12:02.626 --> 00:12:04.426 A:middle
what we call normalized

00:12:04.426 --> 00:12:05.026 A:middle
disparity.

00:12:05.096 --> 00:12:06.356 A:middle
So it's not a pixel shift

00:12:06.356 --> 00:12:09.156 A:middle
anymore, it's d over focal

00:12:09.156 --> 00:12:11.066 A:middle
length times baseline.

00:12:11.526 --> 00:12:13.236 A:middle
The baseline is baked in so you

00:12:13.236 --> 00:12:14.196 A:middle
don't need to carry that

00:12:14.196 --> 00:12:15.916 A:middle
information with you separately

00:12:16.136 --> 00:12:17.076 A:middle
when you're dealing with the

00:12:17.076 --> 00:12:17.646 A:middle
depth map.

00:12:18.256 --> 00:12:20.176 A:middle
The units are 1 over meters,

00:12:20.176 --> 00:12:22.166 A:middle
just as it's 1 over z, and it

00:12:22.286 --> 00:12:23.896 A:middle
withstands scaling operations,

00:12:24.436 --> 00:12:25.666 A:middle
and as you can see, converting

00:12:25.666 --> 00:12:27.736 A:middle
from depth to disparity is

00:12:27.736 --> 00:12:29.016 A:middle
trivial, since it's just a

00:12:29.016 --> 00:12:30.086 A:middle
1-over operation.

00:12:31.166 --> 00:12:33.416 A:middle
Is anyone feeling way beyond

00:12:33.416 --> 00:12:33.976 A:middle
their depth at this point?

00:12:34.516 --> 00:12:36.586 A:middle
[ Group groaning ]

00:12:37.086 --> 00:12:38.256 A:middle
This is a little tricky stuff,

00:12:38.296 --> 00:12:40.386 A:middle
but the takeaways are simple.

00:12:41.986 --> 00:12:43.326 A:middle
We have a disparity-based

00:12:43.326 --> 00:12:44.206 A:middle
system, not a true

00:12:44.206 --> 00:12:46.066 A:middle
time-of-flight camera, but

00:12:46.066 --> 00:12:47.806 A:middle
disparity is a great proxy for

00:12:47.806 --> 00:12:50.476 A:middle
depth, and normalized disparity

00:12:50.476 --> 00:12:55.176 A:middle
is the inverse of depth.

00:12:55.346 --> 00:12:56.766 A:middle
Hey, speaking of normalized

00:12:56.766 --> 00:12:58.296 A:middle
disparity as being the inverse

00:12:58.296 --> 00:12:58.956 A:middle
of depth, here's a deep thought.

00:13:03.286 --> 00:13:05.906 A:middle
This image has a disparity map,

00:13:06.636 --> 00:13:08.476 A:middle
so I guess this would make this

00:13:08.476 --> 00:13:09.976 A:middle
a depth-defying leap.

00:13:10.516 --> 00:13:12.596 A:middle
[ Group groaning ]

00:13:13.096 --> 00:13:13.556 A:middle
Thank you.

00:13:13.806 --> 00:13:14.796 A:middle
All right.

00:13:15.206 --> 00:13:17.756 A:middle
So in our depth API set we use

00:13:17.756 --> 00:13:20.096 A:middle
the term depth data, and this is

00:13:20.096 --> 00:13:21.436 A:middle
a generic term for anything

00:13:21.436 --> 00:13:22.236 A:middle
that's depthy.

00:13:22.656 --> 00:13:24.746 A:middle
It can refer to either a true

00:13:24.746 --> 00:13:26.636 A:middle
depth map or a disparity map.

00:13:26.766 --> 00:13:28.156 A:middle
Both are related to depth,

00:13:28.356 --> 00:13:29.686 A:middle
they're both depthy, so they are

00:13:29.686 --> 00:13:30.846 A:middle
both depth data.

00:13:32.466 --> 00:13:34.236 A:middle
And we have a purpose-built

00:13:34.236 --> 00:13:35.276 A:middle
object for this.

00:13:35.396 --> 00:13:36.956 A:middle
The canonical representation on

00:13:36.956 --> 00:13:38.456 A:middle
our platform for depth is called

00:13:38.456 --> 00:13:40.136 A:middle
an AVDepthData.

00:13:40.516 --> 00:13:42.886 A:middle
It's available on iOS, macOS and

00:13:42.886 --> 00:13:43.376 A:middle
tvOS.

00:13:43.946 --> 00:13:45.386 A:middle
It's a class in the AVFoundation

00:13:45.386 --> 00:13:47.286 A:middle
framework and it represents

00:13:47.286 --> 00:13:49.026 A:middle
either depth or disparity maps.

00:13:49.516 --> 00:13:50.986 A:middle
It also provides some nice

00:13:50.986 --> 00:13:52.606 A:middle
facilities to convert between

00:13:52.606 --> 00:13:53.676 A:middle
depth and disparity.

00:13:54.716 --> 00:13:55.826 A:middle
Okay. Let's get into the nuts

00:13:55.826 --> 00:13:57.406 A:middle
and bolts of depth maps.

00:13:58.106 --> 00:13:59.886 A:middle
Depth maps are images, if you

00:13:59.886 --> 00:14:00.966 A:middle
haven't figured out by now.

00:13:59.886 --> 00:14:00.966 A:middle
haven't figured out by now.

00:14:01.026 --> 00:14:02.766 A:middle
They're kind of like RGB images,

00:14:02.766 --> 00:14:04.106 A:middle
except they're single channel,

00:14:04.606 --> 00:14:05.846 A:middle
but they can still be expressed

00:14:05.846 --> 00:14:08.016 A:middle
as CV pixel buffers, and now

00:14:08.016 --> 00:14:09.866 A:middle
CoreVideo defines four new pixel

00:14:09.866 --> 00:14:12.206 A:middle
formats for the types that we

00:14:12.206 --> 00:14:13.456 A:middle
saw on the previous slide.

00:14:13.516 --> 00:14:14.996 A:middle
They're all floating point.

00:14:15.706 --> 00:14:18.166 A:middle
The first two are for normalized

00:14:18.166 --> 00:14:20.026 A:middle
disparity and it's measured in 1

00:14:20.026 --> 00:14:20.866 A:middle
over meters.

00:14:20.866 --> 00:14:22.296 A:middle
Notice that there's a 16-bit

00:14:22.296 --> 00:14:24.216 A:middle
flavor and a 32-bit flavor.

00:14:24.916 --> 00:14:27.146 A:middle
The second two are for depth and

00:14:27.146 --> 00:14:28.206 A:middle
they're measured in meters.

00:14:29.156 --> 00:14:31.006 A:middle
They also come in 16- or 32-bit

00:14:31.006 --> 00:14:31.456 A:middle
flavors.

00:14:31.586 --> 00:14:32.536 A:middle
Why would we do this?

00:14:33.226 --> 00:14:34.096 A:middle
Well, if you're going to be

00:14:34.096 --> 00:14:35.756 A:middle
working with depth on the GPU,

00:14:35.756 --> 00:14:36.956 A:middle
it would make sense for you to

00:14:36.956 --> 00:14:39.186 A:middle
request 16-bit or half float

00:14:39.306 --> 00:14:40.716 A:middle
values of depth.

00:14:40.716 --> 00:14:42.156 A:middle
If you'll be working on the CPU,

00:14:42.446 --> 00:14:43.846 A:middle
you should work with the full

00:14:43.846 --> 00:14:46.116 A:middle
32-bit float variants.

00:14:46.116 --> 00:14:46.736 A:middle
They'll work better.

00:14:48.476 --> 00:14:49.646 A:middle
We'll talk later about where an

00:14:49.646 --> 00:14:51.436 A:middle
AVDepthData object might come

00:14:51.436 --> 00:14:52.636 A:middle
from, but for right now let's

00:14:52.636 --> 00:14:53.706 A:middle
just focus on its core

00:14:53.706 --> 00:14:54.366 A:middle
properties.

00:14:55.136 --> 00:14:57.156 A:middle
Given an AVDepthData object you

00:14:57.156 --> 00:14:58.856 A:middle
can query its depth data type,

00:14:59.216 --> 00:15:00.536 A:middle
which is one of those four pixel

00:14:59.216 --> 00:15:00.536 A:middle
which is one of those four pixel

00:15:00.536 --> 00:15:02.976 A:middle
formats; you can get access to

00:15:02.976 --> 00:15:04.926 A:middle
the depthDataMap itself which,

00:15:04.926 --> 00:15:06.876 A:middle
again, is a CV pixel buffer; you

00:15:06.876 --> 00:15:08.346 A:middle
can iterate through it by row

00:15:08.346 --> 00:15:09.926 A:middle
and column using standard CV

00:15:09.926 --> 00:15:10.766 A:middle
pixel buffer APIs.

00:15:10.766 --> 00:15:13.566 A:middle
And the final two properties I

00:15:13.566 --> 00:15:15.036 A:middle
want to highlight here have to

00:15:15.036 --> 00:15:16.966 A:middle
do with inherent problems in

00:15:16.966 --> 00:15:19.326 A:middle
capturing depth data, and we're

00:15:19.326 --> 00:15:19.906 A:middle
going to go through these

00:15:19.906 --> 00:15:21.426 A:middle
problems one at a time and

00:15:21.426 --> 00:15:22.646 A:middle
discuss the solutions.

00:15:23.236 --> 00:15:25.646 A:middle
The first problem is holes,

00:15:25.956 --> 00:15:27.416 A:middle
holes in the depth data.

00:15:27.606 --> 00:15:29.626 A:middle
To calculate disparity both

00:15:29.626 --> 00:15:31.386 A:middle
cameras need to observe that

00:15:31.386 --> 00:15:32.886 A:middle
same point, but from two

00:15:32.886 --> 00:15:33.736 A:middle
different perspectives.

00:15:34.156 --> 00:15:36.116 A:middle
If they can't see it, no

00:15:36.116 --> 00:15:36.676 A:middle
disparity.

00:15:37.256 --> 00:15:38.616 A:middle
So why might they not be able to

00:15:38.616 --> 00:15:38.966 A:middle
see it?

00:15:39.756 --> 00:15:42.286 A:middle
For one, occlusions, such as a

00:15:42.286 --> 00:15:43.756 A:middle
creepy finger coming in and

00:15:43.946 --> 00:15:45.286 A:middle
suddenly blocking one of your

00:15:45.286 --> 00:15:45.826 A:middle
cameras.

00:15:45.826 --> 00:15:47.886 A:middle
If it's partially obscuring it

00:15:47.886 --> 00:15:49.426 A:middle
or obscuring it, you don't have

00:15:49.486 --> 00:15:52.356 A:middle
two points of view anymore,

00:15:52.356 --> 00:15:53.326 A:middle
therefore, you have no

00:15:53.326 --> 00:15:53.886 A:middle
disparity.

00:15:55.066 --> 00:15:56.856 A:middle
Another more common reason is

00:15:56.896 --> 00:15:58.706 A:middle
difficulty in finding features.

00:15:59.536 --> 00:16:01.106 A:middle
When camera one and camera two's

00:15:59.536 --> 00:16:01.106 A:middle
When camera one and camera two's

00:16:01.106 --> 00:16:03.006 A:middle
images are compared, remember,

00:16:03.006 --> 00:16:04.906 A:middle
they line them up by optical

00:16:04.906 --> 00:16:06.306 A:middle
center and look for features

00:16:07.176 --> 00:16:08.426 A:middle
matching key points.

00:16:08.996 --> 00:16:10.866 A:middle
Let's say it's dark out and the

00:16:10.866 --> 00:16:12.506 A:middle
observed point may not have very

00:16:12.506 --> 00:16:13.986 A:middle
well-defined features anymore,

00:16:14.406 --> 00:16:16.716 A:middle
the color is a little bit noisy,

00:16:16.716 --> 00:16:18.106 A:middle
the edges are hard to find.

00:16:18.806 --> 00:16:20.136 A:middle
Another example would be if you

00:16:20.136 --> 00:16:21.396 A:middle
point the cameras at a flat,

00:16:21.396 --> 00:16:24.146 A:middle
white wall with no texture to

00:16:24.146 --> 00:16:26.086 A:middle
it, there are no features so

00:16:26.086 --> 00:16:27.346 A:middle
it's very hard to find

00:16:27.346 --> 00:16:29.346 A:middle
differences in matching.

00:16:29.466 --> 00:16:30.866 A:middle
For any of these reasons you

00:16:30.866 --> 00:16:32.456 A:middle
might have areas in your image

00:16:32.886 --> 00:16:35.156 A:middle
where there is no disparity, and

00:16:35.156 --> 00:16:36.096 A:middle
those are called holes.

00:16:37.306 --> 00:16:39.106 A:middle
Holes are expressed in the

00:16:39.106 --> 00:16:41.766 A:middle
depthDataMap as not a number

00:16:42.186 --> 00:16:43.526 A:middle
standard floating-point

00:16:43.526 --> 00:16:45.096 A:middle
representation, either 16-bit or

00:16:45.096 --> 00:16:45.796 A:middle
32-bit.

00:16:46.506 --> 00:16:48.616 A:middle
Depth maps may also be processed

00:16:48.886 --> 00:16:50.046 A:middle
to fill in the holes.

00:16:50.526 --> 00:16:52.706 A:middle
We can do this by interpolating

00:16:52.706 --> 00:16:54.226 A:middle
based on surrounding depth data

00:16:54.226 --> 00:16:56.436 A:middle
that's good or by using metadata

00:16:56.436 --> 00:16:58.166 A:middle
present in the RGB image.

00:16:58.866 --> 00:17:01.176 A:middle
The isDepthDataFiltered property

00:16:58.866 --> 00:17:01.176 A:middle
The isDepthDataFiltered property

00:17:01.176 --> 00:17:03.266 A:middle
of AVDepthData tells you whether

00:17:03.266 --> 00:17:04.876 A:middle
the map has been processed in

00:17:04.876 --> 00:17:05.346 A:middle
this way.

00:17:06.336 --> 00:17:08.036 A:middle
If you receive an unfiltered

00:17:08.036 --> 00:17:09.786 A:middle
AVDepthData, you can expect to

00:17:09.786 --> 00:17:11.756 A:middle
find not a number values within

00:17:11.906 --> 00:17:13.046 A:middle
that map.

00:17:13.326 --> 00:17:14.715 A:middle
Okay. We'll talk a little bit

00:17:14.715 --> 00:17:16.435 A:middle
more about how you can request

00:17:16.435 --> 00:17:17.576 A:middle
filtering later on.

00:17:18.616 --> 00:17:20.376 A:middle
The second problem that

00:17:20.376 --> 00:17:21.486 A:middle
interferes with accurate

00:17:21.486 --> 00:17:22.955 A:middle
disparity generation is

00:17:23.156 --> 00:17:24.056 A:middle
calibration error.

00:17:24.556 --> 00:17:25.715 A:middle
There are lots of different

00:17:25.715 --> 00:17:26.915 A:middle
kinds of calibration errors that

00:17:26.915 --> 00:17:28.836 A:middle
can happen that we can correct,

00:17:29.246 --> 00:17:30.366 A:middle
but there's one that we can't,

00:17:30.806 --> 00:17:32.516 A:middle
and that is incorrect accounting

00:17:32.516 --> 00:17:34.606 A:middle
of the optical center in either

00:17:34.606 --> 00:17:36.346 A:middle
of the two cameras.

00:17:36.746 --> 00:17:38.886 A:middle
So for this one I've shifted our

00:17:39.476 --> 00:17:40.816 A:middle
pinhole cameras down to the

00:17:40.816 --> 00:17:42.276 A:middle
bottom by 90 degrees to give

00:17:42.276 --> 00:17:43.386 A:middle
myself a little more room at the

00:17:43.386 --> 00:17:43.786 A:middle
top.

00:17:44.356 --> 00:17:46.026 A:middle
In an ideal stereo-rectified

00:17:46.026 --> 00:17:48.346 A:middle
system, perspective only shifts

00:17:48.346 --> 00:17:50.426 A:middle
in one direction, left or right,

00:17:51.216 --> 00:17:52.696 A:middle
along these same lines.

00:17:53.096 --> 00:17:54.596 A:middle
So if there's a ray that's

00:17:54.596 --> 00:17:56.936 A:middle
observed from camera one, it

00:17:56.936 --> 00:17:58.816 A:middle
would be viewed as a series of

00:17:58.866 --> 00:18:01.056 A:middle
intersecting points on a line

00:17:58.866 --> 00:18:01.056 A:middle
intersecting points on a line

00:18:01.306 --> 00:18:01.956 A:middle
from camera two, like this.

00:18:06.046 --> 00:18:06.956 A:middle
So for disparities to be

00:18:06.956 --> 00:18:09.496 A:middle
measured accurately you must

00:18:09.496 --> 00:18:11.236 A:middle
have an accurate baseline.

00:18:11.526 --> 00:18:12.886 A:middle
And baseline, again, is the

00:18:12.886 --> 00:18:14.096 A:middle
distance between the two optical

00:18:14.096 --> 00:18:14.506 A:middle
centers.

00:18:15.066 --> 00:18:16.156 A:middle
If you don't have an accurate

00:18:16.156 --> 00:18:18.186 A:middle
baseline, you can't align those

00:18:18.186 --> 00:18:19.786 A:middle
two cameras' optical centers and

00:18:19.786 --> 00:18:21.146 A:middle
you can't figure out how much

00:18:21.146 --> 00:18:22.106 A:middle
disparity there is.

00:18:23.336 --> 00:18:24.676 A:middle
Now, what happens if the optical

00:18:24.676 --> 00:18:27.196 A:middle
center is calculated wrong or

00:18:27.196 --> 00:18:28.156 A:middle
just misreported?

00:18:28.916 --> 00:18:29.856 A:middle
Let's say the true optical

00:18:29.856 --> 00:18:32.746 A:middle
center is here, but for some

00:18:32.746 --> 00:18:35.116 A:middle
reason it's misreported as being

00:18:35.846 --> 00:18:36.106 A:middle
here.

00:18:36.956 --> 00:18:38.196 A:middle
Now suddenly all of our

00:18:38.326 --> 00:18:39.856 A:middle
disparity points on camera two's

00:18:39.856 --> 00:18:41.216 A:middle
image plane are shifted to the

00:18:41.216 --> 00:18:44.176 A:middle
left by the same fixed amount.

00:18:44.896 --> 00:18:46.556 A:middle
Now all the objects will be

00:18:46.556 --> 00:18:48.266 A:middle
reported as being farther than

00:18:48.266 --> 00:18:49.066 A:middle
they truly are.

00:18:50.106 --> 00:18:51.216 A:middle
If the error were in the other

00:18:51.216 --> 00:18:52.496 A:middle
direction, then the objects

00:18:52.496 --> 00:18:53.646 A:middle
would be misreported as being

00:18:53.646 --> 00:18:54.286 A:middle
too close.

00:18:55.026 --> 00:18:56.936 A:middle
So we can detect and fix a lot

00:18:56.936 --> 00:18:57.936 A:middle
of problems, but this one we

00:18:57.936 --> 00:18:59.616 A:middle
can't detect and fix because,

00:18:59.616 --> 00:19:00.986 A:middle
again, all of those points still

00:18:59.616 --> 00:19:00.986 A:middle
again, all of those points still

00:19:00.986 --> 00:19:02.136 A:middle
look like they're on the same

00:19:02.186 --> 00:19:03.086 A:middle
correct line.

00:19:03.376 --> 00:19:04.146 A:middle
We don't know the difference

00:19:04.146 --> 00:19:05.656 A:middle
between the baseline being wrong

00:19:06.046 --> 00:19:07.926 A:middle
and the person actually moving

00:19:08.046 --> 00:19:08.916 A:middle
further or closer.

00:19:10.136 --> 00:19:11.136 A:middle
Now, how can this happen; why

00:19:11.136 --> 00:19:12.446 A:middle
would there be problems with

00:19:12.656 --> 00:19:15.106 A:middle
optical center calculation?

00:19:16.096 --> 00:19:17.766 A:middle
iPhone cameras don't use

00:19:17.766 --> 00:19:20.606 A:middle
pinholes, they have lenses, and

00:19:20.606 --> 00:19:23.106 A:middle
on iPhones those lenses don't

00:19:23.106 --> 00:19:23.686 A:middle
stay still.

00:19:24.366 --> 00:19:26.916 A:middle
If OIS is engaged, then the lens

00:19:26.916 --> 00:19:28.436 A:middle
may be moving laterally to

00:19:28.436 --> 00:19:30.006 A:middle
counteract hand shake.

00:19:30.706 --> 00:19:32.386 A:middle
Gravity can come into play

00:19:32.386 --> 00:19:33.576 A:middle
because it can cause the lenses

00:19:33.576 --> 00:19:34.156 A:middle
to sag.

00:19:34.896 --> 00:19:36.746 A:middle
The focus actuators are actually

00:19:36.746 --> 00:19:38.666 A:middle
springs to which an electrical

00:19:38.666 --> 00:19:39.556 A:middle
current is applied.

00:19:40.166 --> 00:19:41.676 A:middle
So all of these reasons might

00:19:41.676 --> 00:19:43.056 A:middle
cause it to move around

00:19:43.056 --> 00:19:44.016 A:middle
laterally a little bit, and

00:19:44.456 --> 00:19:45.736 A:middle
these very small errors in

00:19:45.736 --> 00:19:46.856 A:middle
optical center position can

00:19:46.856 --> 00:19:49.146 A:middle
result in large errors in

00:19:49.146 --> 00:19:49.656 A:middle
disparity.

00:19:50.506 --> 00:19:52.176 A:middle
When this occurs, the result is

00:19:52.176 --> 00:19:54.886 A:middle
a constant amount of error in

00:19:54.886 --> 00:19:56.016 A:middle
every pixel in the map.

00:19:57.336 --> 00:19:58.816 A:middle
The disparity values are still

00:19:59.066 --> 00:20:01.336 A:middle
usable relative to one another,

00:19:59.066 --> 00:20:01.336 A:middle
usable relative to one another,

00:20:01.736 --> 00:20:04.566 A:middle
but they no longer reflect

00:20:04.566 --> 00:20:05.876 A:middle
real-world distances.

00:20:07.016 --> 00:20:09.546 A:middle
For this reason AVDepthData

00:20:09.546 --> 00:20:11.046 A:middle
objects have to have a concept

00:20:11.046 --> 00:20:12.086 A:middle
of accuracy.

00:20:12.896 --> 00:20:15.086 A:middle
An accuracy value of absolute

00:20:15.086 --> 00:20:17.676 A:middle
would mean the units do reflect

00:20:17.676 --> 00:20:19.026 A:middle
real-world distances, there's no

00:20:19.026 --> 00:20:20.076 A:middle
calibration problem.

00:20:20.716 --> 00:20:22.876 A:middle
Relative accuracy means that the

00:20:22.876 --> 00:20:24.436 A:middle
Z ordering is still preserved,

00:20:25.116 --> 00:20:26.946 A:middle
but the real-world scale has

00:20:26.946 --> 00:20:27.546 A:middle
been lost.

00:20:28.436 --> 00:20:29.846 A:middle
Depth data captured from, say, a

00:20:29.846 --> 00:20:31.486 A:middle
third-party camera can be

00:20:31.486 --> 00:20:33.656 A:middle
reported as either absolute or

00:20:33.656 --> 00:20:36.276 A:middle
relative, but iPhone 7 Plus

00:20:36.276 --> 00:20:38.916 A:middle
always reports relative accuracy

00:20:39.246 --> 00:20:40.466 A:middle
due to the calibration errors

00:20:40.466 --> 00:20:41.306 A:middle
that I just mentioned.

00:20:41.886 --> 00:20:42.706 A:middle
But I don't want you to be

00:20:42.706 --> 00:20:43.476 A:middle
frightened by that.

00:20:43.876 --> 00:20:46.816 A:middle
Relative accuracy is not bad

00:20:46.816 --> 00:20:47.456 A:middle
accuracy.

00:20:47.946 --> 00:20:49.246 A:middle
Dual camera depth is still

00:20:49.246 --> 00:20:51.376 A:middle
totally usable, and let me show

00:20:51.376 --> 00:20:53.426 A:middle
you how.

00:20:53.656 --> 00:20:55.156 A:middle
Awesome, formulas on slides.

00:20:55.966 --> 00:20:56.986 A:middle
Okay. Here comes a bit of math

00:20:56.986 --> 00:20:57.196 A:middle
again.

00:20:57.436 --> 00:20:59.286 A:middle
Let's say we've got a relative

00:20:59.286 --> 00:21:00.986 A:middle
accuracy disparity value on the

00:20:59.286 --> 00:21:00.986 A:middle
accuracy disparity value on the

00:21:00.986 --> 00:21:03.126 A:middle
left, which is the d with the

00:21:03.126 --> 00:21:05.266 A:middle
little dunce cap over it because

00:21:05.266 --> 00:21:07.696 A:middle
it's bad, and that's equivalent

00:21:07.696 --> 00:21:10.166 A:middle
to an absolute disparity d plus

00:21:10.166 --> 00:21:11.876 A:middle
a fixed amount of error.

00:21:12.486 --> 00:21:13.336 A:middle
We don't know what the fixed

00:21:13.336 --> 00:21:14.346 A:middle
amount of error is, but it's

00:21:14.386 --> 00:21:14.576 A:middle
there.

00:21:15.986 --> 00:21:16.926 A:middle
Now, let's take a common

00:21:16.926 --> 00:21:18.996 A:middle
operation such as finding the

00:21:18.996 --> 00:21:20.166 A:middle
difference between two

00:21:20.166 --> 00:21:22.176 A:middle
disparities in the same map,

00:21:22.826 --> 00:21:23.896 A:middle
it's like subtracting the

00:21:23.896 --> 00:21:24.416 A:middle
differences.

00:21:24.876 --> 00:21:27.416 A:middle
So let's say the equation looks

00:21:27.416 --> 00:21:27.996 A:middle
like this.

00:21:28.946 --> 00:21:31.056 A:middle
You have two bad datas where

00:21:31.056 --> 00:21:33.276 A:middle
you're subtracting two bad

00:21:33.276 --> 00:21:34.926 A:middle
disparities, and that's the same

00:21:34.926 --> 00:21:36.116 A:middle
as two good disparities with the

00:21:36.116 --> 00:21:37.006 A:middle
same fixed error.

00:21:37.466 --> 00:21:39.436 A:middle
If we reorder things, we find

00:21:39.436 --> 00:21:41.486 A:middle
that actually we can get rid of

00:21:41.486 --> 00:21:43.806 A:middle
the errors because they cancel

00:21:43.806 --> 00:21:45.736 A:middle
each other out and we're left

00:21:45.736 --> 00:21:47.756 A:middle
with a very happy coincidence

00:21:47.756 --> 00:21:47.996 A:middle
here.

00:21:49.456 --> 00:21:51.056 A:middle
This happy discovery is that the

00:21:51.056 --> 00:21:52.476 A:middle
differences are the same,

00:21:53.106 --> 00:21:54.076 A:middle
whether your disparity is

00:21:54.076 --> 00:21:55.796 A:middle
perfect or your disparity is

00:21:55.796 --> 00:21:56.256 A:middle
relative.

00:21:56.876 --> 00:21:58.356 A:middle
This formula kind of proves that

00:21:58.356 --> 00:21:59.756 A:middle
relative is just as good as

00:21:59.756 --> 00:22:01.306 A:middle
absolute if you're creating

00:21:59.756 --> 00:22:01.306 A:middle
absolute if you're creating

00:22:01.306 --> 00:22:03.276 A:middle
effects that only rely on, say,

00:22:03.276 --> 00:22:04.766 A:middle
differences within the same map.

00:22:05.046 --> 00:22:06.176 A:middle
And that's why the effects

00:22:06.176 --> 00:22:08.416 A:middle
produced from relative accuracy

00:22:08.416 --> 00:22:09.956 A:middle
depth still look fantastic.

00:22:10.276 --> 00:22:13.276 A:middle
And with that I think we've

00:22:13.276 --> 00:22:15.006 A:middle
wrapped up our AVDepthData

00:22:15.006 --> 00:22:16.456 A:middle
intro, or maybe we've gotten to

00:22:16.456 --> 00:22:17.426 A:middle
the bottom of it [group

00:22:17.426 --> 00:22:19.256 A:middle
groaning].

00:22:19.256 --> 00:22:20.436 A:middle
It's time to move on to our

00:22:20.436 --> 00:22:21.936 A:middle
first capture case, which is

00:22:21.986 --> 00:22:24.446 A:middle
streaming depth, and I feel a

00:22:24.446 --> 00:22:24.976 A:middle
demo coming on.

00:22:32.046 --> 00:22:33.956 A:middle
Okay. Let's start with a demo

00:22:33.956 --> 00:22:35.666 A:middle
called AVCamPhotoFilter.

00:22:36.316 --> 00:22:37.646 A:middle
This is an app that we released

00:22:37.646 --> 00:22:39.756 A:middle
last year as sample code with

00:22:39.756 --> 00:22:41.216 A:middle
the show, and this was to show

00:22:41.216 --> 00:22:43.156 A:middle
you how to apply an effect in

00:22:43.156 --> 00:22:46.716 A:middle
real time to a preview and

00:22:46.786 --> 00:22:48.106 A:middle
render that same effect to the

00:22:48.106 --> 00:22:48.626 A:middle
photo.

00:22:49.026 --> 00:22:50.246 A:middle
So last year it just had one

00:22:50.246 --> 00:22:51.526 A:middle
button at the top and that was

00:22:51.526 --> 00:22:53.026 A:middle
to filter the video, and it did,

00:22:53.096 --> 00:22:54.086 A:middle
you know, kind of a cheesy

00:22:54.086 --> 00:22:56.786 A:middle
little rosy effect to the video,

00:22:56.786 --> 00:22:57.946 A:middle
but it shows it to you in real

00:22:57.946 --> 00:23:00.356 A:middle
time on the preview and it also

00:22:57.946 --> 00:23:00.356 A:middle
time on the preview and it also

00:23:00.356 --> 00:23:01.716 A:middle
renders it to the photo when you

00:23:01.716 --> 00:23:02.456 A:middle
take a photo.

00:23:02.906 --> 00:23:05.546 A:middle
This year we've added some depth

00:23:05.606 --> 00:23:08.226 A:middle
to this sample by showing you

00:23:08.226 --> 00:23:11.156 A:middle
how to preview depth in a

00:23:11.156 --> 00:23:11.976 A:middle
streaming fashion.

00:23:12.666 --> 00:23:13.866 A:middle
So now what we're doing is

00:23:13.866 --> 00:23:16.106 A:middle
turning on depth and we're

00:23:16.106 --> 00:23:19.186 A:middle
previewing it by mixing between

00:23:19.186 --> 00:23:24.096 A:middle
full RGB and full depth.

00:23:24.256 --> 00:23:25.576 A:middle
I'm going to call up my lovely

00:23:25.576 --> 00:23:26.796 A:middle
assistant Vanna -- actually,

00:23:26.796 --> 00:23:27.246 A:middle
it's Eric.

00:23:27.356 --> 00:23:27.856 A:middle
Thanks, Eric.

00:23:28.256 --> 00:23:29.336 A:middle
He's going to come up and show

00:23:30.546 --> 00:23:32.046 A:middle
us something that's dynamic,

00:23:32.046 --> 00:23:32.976 A:middle
like a baseball glove.

00:23:33.056 --> 00:23:33.506 A:middle
I love it.

00:23:34.026 --> 00:23:35.546 A:middle
Now, notice that it's quite

00:23:35.546 --> 00:23:36.966 A:middle
noisy, there's a lot of jumping

00:23:36.966 --> 00:23:37.586 A:middle
around happening.

00:23:37.586 --> 00:23:38.556 A:middle
You can definitely see what it

00:23:38.556 --> 00:23:40.716 A:middle
is, but it's not perfect and

00:23:40.716 --> 00:23:41.746 A:middle
there's a lot of temporal

00:23:41.746 --> 00:23:43.256 A:middle
problems going on, but I can

00:23:43.256 --> 00:23:45.456 A:middle
click the Smooth button and

00:23:45.456 --> 00:23:47.246 A:middle
suddenly we have filtered the

00:23:47.246 --> 00:23:49.096 A:middle
depth to fill in the holes and

00:23:49.096 --> 00:23:50.416 A:middle
temporally smooth them, and now

00:23:50.416 --> 00:23:51.706 A:middle
it's a really nice-looking

00:23:52.086 --> 00:23:52.646 A:middle
disparity.

00:23:52.646 --> 00:23:54.076 A:middle
I'm going to go ahead and take a

00:23:54.076 --> 00:23:54.536 A:middle
photo.

00:23:54.596 --> 00:23:58.546 A:middle
And now if I go back to the

00:23:58.546 --> 00:24:00.886 A:middle
Photos app, we'll find that we

00:23:58.546 --> 00:24:00.886 A:middle
Photos app, we'll find that we

00:24:00.886 --> 00:24:03.146 A:middle
just captured a really lovely

00:24:03.776 --> 00:24:05.326 A:middle
looking depth representation,

00:24:05.796 --> 00:24:07.466 A:middle
and now this is an educational

00:24:07.466 --> 00:24:09.486 A:middle
app because finally we can

00:24:09.536 --> 00:24:11.496 A:middle
answer the question how deep is

00:24:11.496 --> 00:24:13.456 A:middle
your glove, how deep is your

00:24:13.456 --> 00:24:13.836 A:middle
glove [group groaning].

00:24:14.396 --> 00:24:15.486 A:middle
You really need to learn.

00:24:16.366 --> 00:24:17.186 A:middle
All right.

00:24:17.186 --> 00:24:20.466 A:middle
Let's go back to slides.

00:24:20.946 --> 00:24:21.646 A:middle
I know it's late.

00:24:21.646 --> 00:24:22.776 A:middle
I'm trying to keep you awake.

00:24:24.656 --> 00:24:24.996 A:middle
All right.

00:24:24.996 --> 00:24:25.816 A:middle
How did we do that.

00:24:27.666 --> 00:24:29.236 A:middle
AVFoundation frameworks camera

00:24:29.236 --> 00:24:30.876 A:middle
capture classes are divided into

00:24:30.876 --> 00:24:32.376 A:middle
three main groups.

00:24:32.776 --> 00:24:33.406 A:middle
The first is the

00:24:33.406 --> 00:24:34.936 A:middle
AVCaptureSession, which is just

00:24:34.936 --> 00:24:36.046 A:middle
a control object.

00:24:36.536 --> 00:24:37.816 A:middle
You tell it to start or stop

00:24:37.816 --> 00:24:38.856 A:middle
running, but it doesn't do

00:24:38.856 --> 00:24:40.216 A:middle
anything unless you give it some

00:24:40.216 --> 00:24:42.466 A:middle
input, and for that we have AV

00:24:42.466 --> 00:24:44.316 A:middle
capture inputs, such as an

00:24:44.316 --> 00:24:46.416 A:middle
AVCaptureDeviceInput, I've made

00:24:46.416 --> 00:24:48.216 A:middle
one here associated with the

00:24:48.216 --> 00:24:50.076 A:middle
dual camera, and that provides

00:24:50.076 --> 00:24:51.796 A:middle
input to the session, but now

00:24:51.796 --> 00:24:53.206 A:middle
you need to direct it somewhere

00:24:53.206 --> 00:24:53.886 A:middle
as an output.

00:24:54.256 --> 00:24:55.796 A:middle
And now we have a new kind of

00:24:55.796 --> 00:24:56.476 A:middle
output called an

00:24:56.476 --> 00:24:58.406 A:middle
AVCaptureDepthDataOutput.

00:24:59.216 --> 00:25:01.586 A:middle
This is affectionately referred

00:24:59.216 --> 00:25:01.586 A:middle
This is affectionately referred

00:25:01.586 --> 00:25:04.256 A:middle
to on our team as the DDO, and

00:25:04.256 --> 00:25:05.686 A:middle
it functions similarly to our

00:25:05.686 --> 00:25:07.806 A:middle
VideoDataOutput, except that

00:25:07.806 --> 00:25:09.126 A:middle
instead of delivering CoreMedia

00:25:09.126 --> 00:25:11.056 A:middle
sample buffers, it delivers

00:25:11.196 --> 00:25:14.006 A:middle
AVDepthData objects, that

00:25:14.006 --> 00:25:15.316 A:middle
canonical representation that I

00:25:15.316 --> 00:25:15.996 A:middle
was talking about.

00:25:16.456 --> 00:25:17.566 A:middle
It delivers them in a streaming

00:25:17.566 --> 00:25:17.976 A:middle
fashion.

00:25:23.046 --> 00:25:24.366 A:middle
Now, where is

00:25:24.366 --> 00:25:25.476 A:middle
AVCaptureDepthDataOutput

00:25:25.476 --> 00:25:26.176 A:middle
supported?

00:25:26.176 --> 00:25:27.266 A:middle
You can, of course, add it to

00:25:27.266 --> 00:25:29.366 A:middle
any session anywhere, but you're

00:25:29.366 --> 00:25:31.066 A:middle
not going to get depth unless

00:25:31.066 --> 00:25:32.266 A:middle
you are on the dual camera

00:25:32.266 --> 00:25:33.816 A:middle
because that is the only dual

00:25:34.256 --> 00:25:35.976 A:middle
system or stereo system that we

00:25:35.976 --> 00:25:37.766 A:middle
have for calculating disparity.

00:25:39.176 --> 00:25:40.246 A:middle
When you attach a

00:25:40.246 --> 00:25:42.166 A:middle
DepthDataOutput to your session,

00:25:42.446 --> 00:25:43.306 A:middle
some things happen.

00:25:43.716 --> 00:25:45.146 A:middle
The dual camera automatically

00:25:45.146 --> 00:25:48.286 A:middle
zooms to 2X, that is the full

00:25:48.286 --> 00:25:50.136 A:middle
field of view of the tele, and

00:25:50.136 --> 00:25:51.276 A:middle
that's because in order to

00:25:51.276 --> 00:25:53.066 A:middle
calculate disparity, the focal

00:25:53.066 --> 00:25:55.106 A:middle
lengths need to be the same and

00:25:55.166 --> 00:25:57.086 A:middle
at 2X zoom the wide-angle

00:25:57.086 --> 00:25:58.776 A:middle
camera's focal length matches

00:25:58.826 --> 00:25:59.246 A:middle
the tele.

00:26:00.536 --> 00:26:02.366 A:middle
Also zoom is disabled while you

00:26:02.366 --> 00:26:03.776 A:middle
are calculating depth.

00:26:04.656 --> 00:26:06.646 A:middle
We've added some new accessors

00:26:06.646 --> 00:26:08.256 A:middle
to AVCaptureDevice.

00:26:08.926 --> 00:26:10.526 A:middle
On the dual camera you can

00:26:10.526 --> 00:26:12.536 A:middle
discover which video formats

00:26:12.536 --> 00:26:14.196 A:middle
support depth by querying the

00:26:14.196 --> 00:26:15.526 A:middle
supportedDepthDataFormats

00:26:15.526 --> 00:26:16.046 A:middle
property.

00:26:16.196 --> 00:26:18.296 A:middle
And there's also a new

00:26:18.496 --> 00:26:20.656 A:middle
activeDepthDataFormat property

00:26:20.656 --> 00:26:22.186 A:middle
that lets you see what the

00:26:22.186 --> 00:26:23.846 A:middle
activeDepthDataFormat is or

00:26:23.846 --> 00:26:26.766 A:middle
select a new DepthDataFormat.

00:26:28.276 --> 00:26:30.526 A:middle
We currently support three video

00:26:30.526 --> 00:26:33.396 A:middle
resolutions or presets for

00:26:33.396 --> 00:26:34.406 A:middle
depth, and let me go through

00:26:34.406 --> 00:26:35.176 A:middle
them one at a time.

00:26:35.446 --> 00:26:37.116 A:middle
The first is the ever-popular

00:26:37.116 --> 00:26:38.016 A:middle
Photo Preset.

00:26:38.656 --> 00:26:41.416 A:middle
In the Photo Preset you get a

00:26:41.416 --> 00:26:43.186 A:middle
screen-sized preview coming out

00:26:43.186 --> 00:26:44.716 A:middle
of VideoDataOutput, and you get

00:26:44.716 --> 00:26:46.676 A:middle
full res 12-megapixel images

00:26:46.906 --> 00:26:48.466 A:middle
coming out of the photoOutput.

00:26:48.916 --> 00:26:49.696 A:middle
So here you see that the

00:26:49.696 --> 00:26:50.966 A:middle
VideoDataOutput is delivering

00:26:50.966 --> 00:26:52.506 A:middle
1440x1080, which is

00:26:52.506 --> 00:26:53.336 A:middle
screen-sized.

00:26:53.836 --> 00:26:54.986 A:middle
Accompanying that, if you use a

00:26:54.986 --> 00:26:57.966 A:middle
DepthDataOutput, you get 320x240

00:26:58.146 --> 00:27:00.086 A:middle
at a maximum of 24 fps.

00:26:58.146 --> 00:27:00.086 A:middle
at a maximum of 24 fps.

00:27:00.496 --> 00:27:01.236 A:middle
Why so small?

00:27:01.756 --> 00:27:03.096 A:middle
Well, it takes a lot of

00:27:03.096 --> 00:27:04.736 A:middle
horsepower to do that disparity

00:27:04.736 --> 00:27:06.206 A:middle
map 24 times a second.

00:27:06.916 --> 00:27:08.446 A:middle
You can also get it at a lower

00:27:08.556 --> 00:27:09.956 A:middle
resolution if you would like,

00:27:09.956 --> 00:27:11.356 A:middle
160x120.

00:27:11.666 --> 00:27:13.976 A:middle
Next we have a 16x9 format.

00:27:13.976 --> 00:27:15.476 A:middle
This is a new format this year.

00:27:16.066 --> 00:27:18.496 A:middle
Last year we had a 720p 16x9

00:27:18.496 --> 00:27:19.766 A:middle
format that went up to 60 fps.

00:27:19.766 --> 00:27:21.566 A:middle
This is a new one that goes up

00:27:21.566 --> 00:27:23.106 A:middle
to 30 fps, but it supports

00:27:23.106 --> 00:27:23.526 A:middle
depth.

00:27:23.796 --> 00:27:25.816 A:middle
And again, it is aspect correct

00:27:25.816 --> 00:27:26.926 A:middle
in the DepthDataOutput at

00:27:26.926 --> 00:27:29.356 A:middle
320x180 or 160x90.

00:27:29.936 --> 00:27:31.076 A:middle
And finally, we have a very

00:27:31.076 --> 00:27:34.326 A:middle
small VGA-sized preset or active

00:27:34.326 --> 00:27:35.566 A:middle
format that you can use if you

00:27:35.566 --> 00:27:36.616 A:middle
just want something very small

00:27:36.616 --> 00:27:36.976 A:middle
very fast.

00:27:41.426 --> 00:27:42.566 A:middle
Let's talk about frame rates.

00:27:42.756 --> 00:27:44.266 A:middle
AVCaptureDevice allows you to

00:27:44.266 --> 00:27:46.286 A:middle
set the min and max video frame

00:27:46.286 --> 00:27:47.676 A:middle
rates, but it does not allow you

00:27:47.676 --> 00:27:50.126 A:middle
to set the depth frame rates

00:27:50.226 --> 00:27:51.626 A:middle
independent of the video frame

00:27:51.626 --> 00:27:51.816 A:middle
rate.

00:27:52.206 --> 00:27:54.146 A:middle
That is because depth needs to

00:27:54.146 --> 00:27:56.266 A:middle
be delivered coincident with the

00:27:56.266 --> 00:28:00.046 A:middle
video or at an even fraction of

00:27:56.266 --> 00:28:00.046 A:middle
video or at an even fraction of

00:28:00.516 --> 00:28:01.586 A:middle
the video frame rate.

00:28:02.316 --> 00:28:04.786 A:middle
So, for example, if you select a

00:28:04.786 --> 00:28:08.106 A:middle
max video frame rate of 24, the

00:28:08.106 --> 00:28:09.536 A:middle
depth can keep up with that, so

00:28:09.536 --> 00:28:11.226 A:middle
you get 24 fps of depth.

00:28:11.736 --> 00:28:13.896 A:middle
If, however, you select 30 fps

00:28:13.896 --> 00:28:16.466 A:middle
video, the depth cannot keep up

00:28:16.566 --> 00:28:18.376 A:middle
so it will select not 24, but

00:28:18.376 --> 00:28:20.206 A:middle
15, so that you got nice even

00:28:20.326 --> 00:28:20.936 A:middle
multiples.

00:28:22.176 --> 00:28:24.776 A:middle
DepthDataOutput supports

00:28:25.016 --> 00:28:26.416 A:middle
filtering depth data, as I just

00:28:26.416 --> 00:28:26.886 A:middle
showed you in the

00:28:26.886 --> 00:28:28.216 A:middle
AVCamPhotoFilter demo.

00:28:28.746 --> 00:28:30.806 A:middle
That fills the holes and it also

00:28:30.806 --> 00:28:32.886 A:middle
smooths things out as you move

00:28:32.886 --> 00:28:34.176 A:middle
around so that you don't see

00:28:34.286 --> 00:28:35.456 A:middle
temporal jumps from

00:28:35.456 --> 00:28:37.616 A:middle
frame-to-frame.

00:28:38.196 --> 00:28:38.636 A:middle
All right.

00:28:38.906 --> 00:28:39.856 A:middle
Let's look at our current

00:28:40.056 --> 00:28:42.176 A:middle
landscape as far as data

00:28:42.176 --> 00:28:42.836 A:middle
outputs.

00:28:43.316 --> 00:28:44.666 A:middle
We have four of them now.

00:28:45.326 --> 00:28:45.936 A:middle
The first is the

00:28:45.936 --> 00:28:47.146 A:middle
VideoDataOutput, which has been

00:28:47.146 --> 00:28:49.686 A:middle
around since iOS 4, and it is

00:28:49.686 --> 00:28:51.106 A:middle
the thing that gives you video

00:28:51.106 --> 00:28:52.666 A:middle
frames one at a time in a

00:28:52.666 --> 00:28:54.786 A:middle
streaming fashion at 30 fps or

00:28:54.786 --> 00:28:56.316 A:middle
60 fps, whatever you set it to.

00:28:57.066 --> 00:28:58.886 A:middle
We also have an AudioDataOutput

00:28:59.226 --> 00:29:00.726 A:middle
which typically gives you pushes

00:28:59.226 --> 00:29:00.726 A:middle
which typically gives you pushes

00:29:00.726 --> 00:29:03.576 A:middle
of PCM frames in 1024 at a time

00:29:03.956 --> 00:29:05.416 A:middle
at 44.1.

00:29:05.846 --> 00:29:08.186 A:middle
We also have a MetadataOutput

00:29:08.186 --> 00:29:10.126 A:middle
that can deliver either faces,

00:29:10.126 --> 00:29:12.536 A:middle
detected faces or barcodes, and

00:29:12.536 --> 00:29:13.736 A:middle
these come in sporadically.

00:29:14.136 --> 00:29:15.446 A:middle
They may have some latency, up

00:29:15.446 --> 00:29:16.776 A:middle
to four frames of latency for

00:29:16.776 --> 00:29:17.566 A:middle
finding faces.

00:29:18.536 --> 00:29:19.446 A:middle
And now we're adding

00:29:19.446 --> 00:29:21.276 A:middle
DepthDataOutput, which, as I

00:29:21.276 --> 00:29:22.516 A:middle
just mentioned, is either

00:29:22.516 --> 00:29:23.696 A:middle
delivered at the frame rate of

00:29:23.696 --> 00:29:26.626 A:middle
the video or at a rate evenly

00:29:26.706 --> 00:29:28.176 A:middle
divisible by the video.

00:29:28.576 --> 00:29:30.246 A:middle
So now this is kind of getting

00:29:30.246 --> 00:29:30.876 A:middle
ridiculous.

00:29:31.366 --> 00:29:32.266 A:middle
In order to work with all of

00:29:32.266 --> 00:29:33.806 A:middle
these data outputs you have to

00:29:33.806 --> 00:29:34.996 A:middle
have a very sophisticated

00:29:34.996 --> 00:29:37.216 A:middle
buffering mechanism to keep

00:29:37.216 --> 00:29:38.276 A:middle
track of when everything's

00:29:38.276 --> 00:29:39.706 A:middle
coming in if you care about

00:29:39.796 --> 00:29:41.106 A:middle
dealing with all of them at the

00:29:41.106 --> 00:29:42.856 A:middle
same time, or dealing with a

00:29:42.856 --> 00:29:44.086 A:middle
certain presentation time

00:29:44.086 --> 00:29:44.696 A:middle
altogether.

00:29:45.556 --> 00:29:47.826 A:middle
We have recognized this as a

00:29:47.826 --> 00:29:51.206 A:middle
problem for a while now, but the

00:29:51.206 --> 00:29:52.966 A:middle
DepthDataOutput has proven to be

00:29:53.046 --> 00:29:54.756 A:middle
the bridge too far.

00:29:54.756 --> 00:29:58.026 A:middle
That wasn't very loud.

00:29:58.246 --> 00:29:59.626 A:middle
Next one, better effort, please.

00:30:00.116 --> 00:30:01.916 A:middle
In iOS 11 we've added a new

00:30:01.916 --> 00:30:05.136 A:middle
synchronizing object called an

00:30:05.136 --> 00:30:06.186 A:middle
AVCaptureDataOutput

00:30:06.186 --> 00:30:06.806 A:middle
Synchronizer.

00:30:07.356 --> 00:30:08.886 A:middle
It delivers all of the available

00:30:08.886 --> 00:30:10.316 A:middle
data for a given presentation

00:30:10.316 --> 00:30:12.426 A:middle
time in a single unified

00:30:12.646 --> 00:30:14.926 A:middle
callback, and it delivers a

00:30:14.976 --> 00:30:16.656 A:middle
collection object called an

00:30:16.656 --> 00:30:18.406 A:middle
AVCaptureSynchronizedData

00:30:18.406 --> 00:30:18.806 A:middle
Collection.

00:30:19.396 --> 00:30:21.136 A:middle
So this allows you to designate

00:30:21.136 --> 00:30:22.906 A:middle
a master output, the one that's

00:30:22.906 --> 00:30:24.106 A:middle
most important to you, the one

00:30:24.106 --> 00:30:25.136 A:middle
that you want everything else to

00:30:25.136 --> 00:30:27.186 A:middle
be synchronized to, and then it

00:30:27.316 --> 00:30:28.856 A:middle
will do the job of holding on to

00:30:28.856 --> 00:30:30.296 A:middle
the media as long as it needs

00:30:30.296 --> 00:30:31.986 A:middle
to, to ensure that all of the

00:30:31.986 --> 00:30:33.356 A:middle
data for a given presentation

00:30:33.356 --> 00:30:34.906 A:middle
time is available before it

00:30:34.906 --> 00:30:36.136 A:middle
gives you that single unified

00:30:36.136 --> 00:30:36.676 A:middle
callback.

00:30:36.966 --> 00:30:38.986 A:middle
It will either give you all of

00:30:38.986 --> 00:30:40.566 A:middle
the data for all of the outputs,

00:30:40.566 --> 00:30:41.856 A:middle
or if it's assured that there is

00:30:41.856 --> 00:30:43.676 A:middle
no data for a particular output,

00:30:43.676 --> 00:30:44.686 A:middle
it will go ahead and give you

00:30:44.686 --> 00:30:46.226 A:middle
the collection with what it had.

00:30:47.316 --> 00:30:48.786 A:middle
So here's a little code snippet

00:30:48.786 --> 00:30:49.736 A:middle
showing how to work with the

00:30:49.736 --> 00:30:51.036 A:middle
data output synchronizer's

00:30:51.036 --> 00:30:53.096 A:middle
unified delegate callback, which

00:30:53.096 --> 00:30:54.316 A:middle
passes you, again, a

00:30:54.316 --> 00:30:55.986 A:middle
SynchronizedDataCollection.

00:30:56.526 --> 00:30:57.066 A:middle
It's cool.

00:30:57.226 --> 00:30:59.176 A:middle
You can use it like an array or

00:30:59.176 --> 00:31:00.476 A:middle
like a dictionary, depending on

00:30:59.176 --> 00:31:00.476 A:middle
like a dictionary, depending on

00:31:00.476 --> 00:31:01.226 A:middle
what you want to do with it.

00:31:01.226 --> 00:31:03.876 A:middle
You can iterate through it like

00:31:03.876 --> 00:31:06.066 A:middle
you would an array, using fast

00:31:06.066 --> 00:31:07.316 A:middle
enumeration if you just want to

00:31:07.316 --> 00:31:08.516 A:middle
get a list of everything that's

00:31:08.516 --> 00:31:09.526 A:middle
in the current collection.

00:31:10.526 --> 00:31:13.166 A:middle
Or if you want to deal with it

00:31:13.166 --> 00:31:14.936 A:middle
in a dictionary like fashion,

00:31:15.286 --> 00:31:18.446 A:middle
you can index by subscripting a

00:31:18.446 --> 00:31:19.246 A:middle
data output that you're

00:31:19.246 --> 00:31:19.896 A:middle
concerned with.

00:31:19.896 --> 00:31:21.486 A:middle
For instance, here I'm just

00:31:21.486 --> 00:31:22.546 A:middle
looking for the particular

00:31:22.546 --> 00:31:23.586 A:middle
result that came from the

00:31:23.586 --> 00:31:25.306 A:middle
DepthDataOutput and if it's

00:31:25.306 --> 00:31:26.846 A:middle
present, it will give it to me.

00:31:27.166 --> 00:31:28.766 A:middle
You have to guard your code to

00:31:28.766 --> 00:31:30.096 A:middle
look for nil because, again,

00:31:30.096 --> 00:31:31.426 A:middle
there might not be any depth for

00:31:31.426 --> 00:31:32.706 A:middle
that given presentation time.

00:31:32.786 --> 00:31:33.036 A:middle
All right.

00:31:34.136 --> 00:31:36.626 A:middle
For an example of how to use

00:31:36.626 --> 00:31:37.636 A:middle
AVCaptureDataOutput

00:31:37.636 --> 00:31:38.906 A:middle
Synchronizer, again, use

00:31:38.906 --> 00:31:40.726 A:middle
AVCamPhotoFilter.

00:31:41.016 --> 00:31:42.186 A:middle
That sample code is already

00:31:42.186 --> 00:31:42.716 A:middle
available.

00:31:42.796 --> 00:31:43.716 A:middle
It's associated with this

00:31:43.716 --> 00:31:44.206 A:middle
session.

00:31:44.206 --> 00:31:45.226 A:middle
You can download it right now.

00:31:47.226 --> 00:31:48.176 A:middle
There's another new streaming

00:31:48.176 --> 00:31:50.076 A:middle
feature in iOS 11, a slight

00:31:50.076 --> 00:31:51.916 A:middle
tangent here, and that is

00:31:51.916 --> 00:31:53.966 A:middle
support for delivering camera

00:31:53.966 --> 00:31:56.366 A:middle
intrinsics with each video frame

00:31:56.666 --> 00:31:57.296 A:middle
when you're using

00:31:57.296 --> 00:31:58.156 A:middle
VideoDataOutput.

00:31:58.336 --> 00:32:00.186 A:middle
If you recall our pinhole

00:31:58.336 --> 00:32:00.186 A:middle
If you recall our pinhole

00:32:00.186 --> 00:32:02.506 A:middle
camera, in order to transform

00:32:02.506 --> 00:32:04.186 A:middle
points from a 3D space to a 2D

00:32:04.186 --> 00:32:05.596 A:middle
space, we needed two bits of

00:32:05.596 --> 00:32:06.226 A:middle
information.

00:32:06.566 --> 00:32:08.786 A:middle
We needed the optical center, or

00:32:08.786 --> 00:32:10.916 A:middle
principal point, and we needed

00:32:10.916 --> 00:32:12.156 A:middle
the focal length.

00:32:12.156 --> 00:32:13.616 A:middle
In computer vision you can use

00:32:13.616 --> 00:32:16.286 A:middle
these properties to re-project a

00:32:16.286 --> 00:32:18.706 A:middle
2D image back to the 3D space by

00:32:18.706 --> 00:32:19.716 A:middle
using the inverse

00:32:19.886 --> 00:32:22.716 A:middle
transformation, and this figures

00:32:22.716 --> 00:32:24.356 A:middle
prominently in the new AR kit.

00:32:25.296 --> 00:32:27.366 A:middle
New in iOS 11 you can opt in to

00:32:27.366 --> 00:32:30.496 A:middle
receive such a set of intrinsics

00:32:30.886 --> 00:32:33.006 A:middle
with each and every video frame

00:32:33.006 --> 00:32:34.256 A:middle
that you're delivered, and you

00:32:34.256 --> 00:32:35.556 A:middle
opt in by calling the

00:32:35.556 --> 00:32:36.746 A:middle
AVCaptureConnection

00:32:37.236 --> 00:32:38.806 A:middle
isCameraIntrinsic

00:32:38.806 --> 00:32:40.376 A:middle
MatrixDeliveryEnabled.

00:32:41.156 --> 00:32:42.846 A:middle
When you do that you can expect

00:32:42.846 --> 00:32:45.416 A:middle
to get one attachment per buffer

00:32:45.546 --> 00:32:46.526 A:middle
with the intrinsics.

00:32:47.066 --> 00:32:48.686 A:middle
Let me show you what the matrix

00:32:48.686 --> 00:32:49.606 A:middle
itself looks like.

00:32:49.776 --> 00:32:51.336 A:middle
It may look imposing, but it's

00:32:51.336 --> 00:32:52.126 A:middle
really quite simple.

00:32:52.996 --> 00:32:55.126 A:middle
Camera intrinsics are a 3x3

00:32:55.126 --> 00:32:56.976 A:middle
matrix that describe the

00:32:57.406 --> 00:32:58.576 A:middle
geometric properties of the

00:32:58.576 --> 00:32:59.006 A:middle
camera.

00:32:59.826 --> 00:33:02.686 A:middle
fx and fy are the pixel focal

00:32:59.826 --> 00:33:02.686 A:middle
fx and fy are the pixel focal

00:33:02.686 --> 00:33:02.996 A:middle
length.

00:33:03.626 --> 00:33:05.106 A:middle
They're separate x and y values

00:33:05.106 --> 00:33:06.916 A:middle
because sometimes cameras have

00:33:07.226 --> 00:33:09.216 A:middle
anamorphic lens or anamorphic

00:33:09.266 --> 00:33:09.766 A:middle
pixels.

00:33:10.416 --> 00:33:12.326 A:middle
On iOS devices, our cameras

00:33:12.326 --> 00:33:14.756 A:middle
always have square pixels, so fx

00:33:14.756 --> 00:33:15.956 A:middle
and fy are always going to be

00:33:15.956 --> 00:33:16.706 A:middle
the same value.

00:33:17.776 --> 00:33:20.956 A:middle
Then x naught and y naught are

00:33:20.956 --> 00:33:22.266 A:middle
the pixel coordinates of the

00:33:22.266 --> 00:33:23.866 A:middle
lens' principal point, or

00:33:23.866 --> 00:33:24.566 A:middle
optical center.

00:33:25.176 --> 00:33:27.146 A:middle
These are all in pixel values

00:33:27.146 --> 00:33:27.816 A:middle
and they're given at the

00:33:27.816 --> 00:33:29.356 A:middle
resolution of the video buffer

00:33:29.456 --> 00:33:30.736 A:middle
with which they're provided.

00:33:30.986 --> 00:33:32.646 A:middle
So, once you've opted in, you

00:33:32.646 --> 00:33:34.686 A:middle
can expect to get sample buffers

00:33:34.686 --> 00:33:35.806 A:middle
in a streaming fashion and you

00:33:35.806 --> 00:33:37.476 A:middle
can get this attachment from

00:33:37.476 --> 00:33:39.706 A:middle
them, and the payload is a C/F

00:33:39.706 --> 00:33:42.106 A:middle
data that wraps a matrix float

00:33:42.106 --> 00:33:44.656 A:middle
3x3, which is a SIMD data type.

00:33:45.326 --> 00:33:46.836 A:middle
If you're doing computer vision,

00:33:47.236 --> 00:33:48.316 A:middle
you'll be really interested in

00:33:48.316 --> 00:33:48.996 A:middle
this new feature.

00:33:50.246 --> 00:33:52.016 A:middle
Okay. I think we've officially

00:33:52.016 --> 00:33:52.976 A:middle
deep sixed the streaming topics.

00:33:53.516 --> 00:33:55.546 A:middle
[ Group groaning ]

00:33:56.046 --> 00:33:57.086 A:middle
Better effort.

00:33:57.086 --> 00:33:58.656 A:middle
Let's move on to the photo

00:33:58.656 --> 00:33:59.856 A:middle
capture, and let's start with a

00:33:59.856 --> 00:33:59.976 A:middle
demo.

00:34:07.726 --> 00:34:08.846 A:middle
This is a two-for-one.

00:34:08.916 --> 00:34:10.436 A:middle
We're going to do two apps here.

00:34:11.176 --> 00:34:13.056 A:middle
AVCam is the venerable piece of

00:34:13.056 --> 00:34:14.636 A:middle
sample code that shows how to

00:34:14.636 --> 00:34:17.726 A:middle
take photos and movies using

00:34:17.726 --> 00:34:18.436 A:middle
AVFoundation.

00:34:19.735 --> 00:34:21.306 A:middle
And notice here, though we've

00:34:21.306 --> 00:34:22.966 A:middle
added depth support to it, you

00:34:22.966 --> 00:34:24.226 A:middle
don't see anything happening

00:34:24.226 --> 00:34:24.755 A:middle
with depth.

00:34:25.206 --> 00:34:27.416 A:middle
That's because while I'm able to

00:34:27.416 --> 00:34:30.246 A:middle
take a picture of these pencils

00:34:30.246 --> 00:34:32.286 A:middle
here, you don't actually see a

00:34:32.286 --> 00:34:34.706 A:middle
representation of the depth, but

00:34:34.706 --> 00:34:35.906 A:middle
it was stored in the photo.

00:34:35.956 --> 00:34:37.735 A:middle
So when I go into the Photos app

00:34:38.755 --> 00:34:40.226 A:middle
and I look at it, and let's say

00:34:40.226 --> 00:34:42.936 A:middle
I go into the Editing menu, look

00:34:42.936 --> 00:34:44.626 A:middle
what popped up, Depth at the

00:34:44.626 --> 00:34:44.896 A:middle
top.

00:34:44.896 --> 00:34:47.056 A:middle
So I can now touch the Depth and

00:34:47.056 --> 00:34:48.606 A:middle
suddenly it will apply that blur

00:34:48.606 --> 00:34:50.266 A:middle
effect to the background, which

00:34:50.266 --> 00:34:50.856 A:middle
is pretty cool.

00:34:51.216 --> 00:34:53.876 A:middle
So now photos that you take in

00:34:53.876 --> 00:34:57.286 A:middle
your app are eligible to have

00:34:57.406 --> 00:34:58.566 A:middle
the shallow depth of field

00:34:58.566 --> 00:34:59.936 A:middle
effect applied to them as well.

00:34:59.936 --> 00:35:01.076 A:middle
That's pretty cool.

00:34:59.936 --> 00:35:01.076 A:middle
That's pretty cool.

00:35:02.006 --> 00:35:03.286 A:middle
We can also do other more

00:35:03.286 --> 00:35:05.456 A:middle
interesting things with depth,

00:35:05.536 --> 00:35:06.716 A:middle
knowing now that we've got them

00:35:06.716 --> 00:35:07.706 A:middle
in all of these photos.

00:35:08.056 --> 00:35:10.516 A:middle
And by the way, in iOS 11 all of

00:35:10.516 --> 00:35:11.546 A:middle
the photos that you take in the

00:35:11.546 --> 00:35:13.116 A:middle
Portrait mode are now storing

00:35:13.116 --> 00:35:15.466 A:middle
depth information in the photos,

00:35:15.516 --> 00:35:18.036 A:middle
so they are fodder for your new

00:35:18.036 --> 00:35:18.756 A:middle
creative apps.

00:35:19.296 --> 00:35:20.906 A:middle
I'm going to use this app called

00:35:20.906 --> 00:35:23.336 A:middle
Wiggle Me to show some creative

00:35:23.336 --> 00:35:24.586 A:middle
things that you can do with the

00:35:24.586 --> 00:35:24.976 A:middle
depth.

00:35:26.956 --> 00:35:29.426 A:middle
I'll select an easy one for

00:35:29.936 --> 00:35:30.626 A:middle
beginning.

00:35:31.176 --> 00:35:32.096 A:middle
What it's doing is taking

00:35:32.096 --> 00:35:34.336 A:middle
something that was flat and it's

00:35:34.426 --> 00:35:36.556 A:middle
re-projecting it out into a 3D

00:35:36.726 --> 00:35:39.456 A:middle
space and it's kind of rolling

00:35:39.456 --> 00:35:41.766 A:middle
it around, or I can just stop it

00:35:41.766 --> 00:35:43.116 A:middle
from rolling and I'm just going

00:35:43.116 --> 00:35:45.326 A:middle
to use the gyro to move my phone

00:35:45.326 --> 00:35:45.736 A:middle
around.

00:35:45.806 --> 00:35:47.766 A:middle
Isn't that a neat effect?

00:35:48.096 --> 00:35:49.436 A:middle
It sort of comes to life.

00:35:49.436 --> 00:35:50.866 A:middle
I'm going to pick a different

00:35:50.866 --> 00:35:51.116 A:middle
one.

00:35:51.836 --> 00:35:53.966 A:middle
I really like the dog.

00:35:55.076 --> 00:35:55.936 A:middle
The dog looks great.

00:35:56.176 --> 00:35:59.576 A:middle
So now he kind of moves around

00:35:59.576 --> 00:36:00.626 A:middle
from side-to-side.

00:35:59.576 --> 00:36:00.626 A:middle
from side-to-side.

00:36:01.296 --> 00:36:02.746 A:middle
You can also do something which

00:36:02.746 --> 00:36:04.216 A:middle
is force the perspective to

00:36:04.216 --> 00:36:04.836 A:middle
change.

00:36:04.836 --> 00:36:07.556 A:middle
Knowing where the depth is, you

00:36:07.556 --> 00:36:09.406 A:middle
can mess with the depth, like

00:36:09.406 --> 00:36:09.806 A:middle
this.

00:36:10.816 --> 00:36:11.846 A:middle
Dolly zoom [laughter].

00:36:13.236 --> 00:36:14.746 A:middle
Dolly zoom, dog in your face.

00:36:15.046 --> 00:36:16.726 A:middle
I have preferred to rotate it

00:36:16.726 --> 00:36:18.186 A:middle
while Dolly zooming, because

00:36:18.186 --> 00:36:19.246 A:middle
it's sort of like a gangster

00:36:19.246 --> 00:36:19.576 A:middle
dog.

00:36:19.576 --> 00:36:23.496 A:middle
I think the appropriate music

00:36:23.496 --> 00:36:24.396 A:middle
for this part would be "Rolling

00:36:24.396 --> 00:36:24.976 A:middle
in the Deep," don't you?

00:36:25.516 --> 00:36:28.066 A:middle
[ Group groaning ]

00:36:28.566 --> 00:36:29.926 A:middle
You guys are doing a great job.

00:36:29.926 --> 00:36:30.486 A:middle
I appreciate.

00:36:30.486 --> 00:36:30.976 A:middle
I really appreciate it.

00:36:37.046 --> 00:36:39.016 A:middle
Okay. When taking photos with

00:36:39.016 --> 00:36:41.146 A:middle
depth, we support a wide gamut

00:36:41.186 --> 00:36:42.276 A:middle
of capture options.

00:36:43.156 --> 00:36:44.776 A:middle
You can do flash captures with

00:36:44.806 --> 00:36:46.446 A:middle
depth, you can do still image

00:36:46.446 --> 00:36:48.026 A:middle
stabilization with depth.

00:36:48.466 --> 00:36:49.776 A:middle
You can even do auto exposure

00:36:49.776 --> 00:36:51.746 A:middle
brackets, such as a plus 2,

00:36:51.746 --> 00:36:52.886 A:middle
minus 2, 0 EV.

00:36:52.886 --> 00:36:56.626 A:middle
You can do Live Photos with the

00:36:56.626 --> 00:36:58.096 A:middle
depth stored in the photo

00:36:58.096 --> 00:36:58.606 A:middle
itself.

00:37:00.686 --> 00:37:02.526 A:middle
AVCapturePhotoOutput is what you

00:37:02.526 --> 00:37:04.966 A:middle
need to use to get photos with

00:37:05.016 --> 00:37:05.256 A:middle
depth.

00:37:05.726 --> 00:37:06.576 A:middle
This is a class that we

00:37:06.576 --> 00:37:07.846 A:middle
introduced last year as the

00:37:07.846 --> 00:37:08.726 A:middle
successor to

00:37:08.726 --> 00:37:10.126 A:middle
AVCaptureStillImageOutput.

00:37:10.946 --> 00:37:13.376 A:middle
It excels at handling complex

00:37:13.376 --> 00:37:14.396 A:middle
photo requests.

00:37:14.796 --> 00:37:15.846 A:middle
I'm talking about a request

00:37:15.846 --> 00:37:17.526 A:middle
where you expect to get multiple

00:37:17.526 --> 00:37:19.306 A:middle
assets and they need to be

00:37:19.306 --> 00:37:21.256 A:middle
tracked and delivered, such as

00:37:21.726 --> 00:37:24.016 A:middle
you're going to get a raw and a

00:37:24.016 --> 00:37:27.286 A:middle
JPEG, and a live photo movie, et

00:37:27.286 --> 00:37:27.586 A:middle
cetera.

00:37:27.586 --> 00:37:28.956 A:middle
You could get multiple things

00:37:28.956 --> 00:37:29.636 A:middle
and they're coming in at

00:37:29.636 --> 00:37:30.316 A:middle
different points.

00:37:30.706 --> 00:37:31.836 A:middle
The programming model is that

00:37:31.836 --> 00:37:34.136 A:middle
you fill out a request, which is

00:37:34.136 --> 00:37:34.426 A:middle
called an

00:37:34.426 --> 00:37:36.396 A:middle
AVCapturePhotoSettings, you

00:37:36.396 --> 00:37:37.676 A:middle
initiate the photo capture by

00:37:37.676 --> 00:37:39.456 A:middle
passing the request and the

00:37:39.456 --> 00:37:40.796 A:middle
delegate to be called later.

00:37:41.576 --> 00:37:44.046 A:middle
And as your photoOutput is the

00:37:44.046 --> 00:37:45.506 A:middle
one and only interface for

00:37:45.506 --> 00:37:49.956 A:middle
capturing Live Photos, bare RAW

00:37:49.956 --> 00:37:52.946 A:middle
images, and Apple P3 wide-color

00:37:52.946 --> 00:37:53.436 A:middle
images.

00:37:54.426 --> 00:37:56.676 A:middle
Also, now in iOS 11 it is the

00:37:56.676 --> 00:37:59.636 A:middle
one and only way to capture HEIF

00:37:59.756 --> 00:38:01.846 A:middle
file format, which was mentioned

00:37:59.756 --> 00:38:01.846 A:middle
file format, which was mentioned

00:38:01.846 --> 00:38:02.516 A:middle
in the keynote.

00:38:04.066 --> 00:38:05.366 A:middle
A great many changes needed to

00:38:05.366 --> 00:38:06.396 A:middle
be made to the

00:38:06.396 --> 00:38:08.266 A:middle
AVCapturePhotoOutput to support

00:38:08.436 --> 00:38:11.096 A:middle
HEIF and so in iOS 11, to

00:38:11.096 --> 00:38:13.296 A:middle
accommodate those great many

00:38:13.296 --> 00:38:15.156 A:middle
changes, we have added a new

00:38:15.156 --> 00:38:16.156 A:middle
delegate callback.

00:38:17.036 --> 00:38:18.676 A:middle
It's a simple one.

00:38:19.126 --> 00:38:21.026 A:middle
This is a replacement for the

00:38:21.026 --> 00:38:22.766 A:middle
callbacks where you would get a

00:38:22.766 --> 00:38:23.476 A:middle
sample buffer.

00:38:23.896 --> 00:38:25.166 A:middle
Instead, you now get a new

00:38:25.406 --> 00:38:27.316 A:middle
object called an AVCapturePhoto.

00:38:27.316 --> 00:38:30.486 A:middle
AVCapturePhoto is the only

00:38:30.556 --> 00:38:32.756 A:middle
delivery vehicle for depth, so

00:38:32.756 --> 00:38:34.486 A:middle
if you want depth, you need to

00:38:34.566 --> 00:38:36.856 A:middle
opt in by implementing this new

00:38:36.856 --> 00:38:37.676 A:middle
delegate callback.

00:38:39.096 --> 00:38:41.116 A:middle
In addition, you need to

00:38:41.116 --> 00:38:42.786 A:middle
explicitly opt in for

00:38:42.786 --> 00:38:44.536 A:middle
DepthDataDelivery before

00:38:44.536 --> 00:38:45.486 A:middle
starting your session.

00:38:46.166 --> 00:38:48.496 A:middle
Why? Well, remember, the dual

00:38:48.496 --> 00:38:49.806 A:middle
camera needs to do some special

00:38:49.806 --> 00:38:51.186 A:middle
behavior when it's doing depth.

00:38:51.186 --> 00:38:53.036 A:middle
It needs to zoom up to 2X so

00:38:53.036 --> 00:38:54.846 A:middle
that the focal lengths match,

00:38:55.326 --> 00:38:56.506 A:middle
and it needs to lock itself

00:38:56.506 --> 00:38:57.446 A:middle
there so that you're not

00:38:57.446 --> 00:38:57.836 A:middle
zooming.

00:38:58.616 --> 00:39:00.736 A:middle
So the way that you do that is

00:38:58.616 --> 00:39:00.736 A:middle
So the way that you do that is

00:39:00.736 --> 00:39:01.696 A:middle
before you start running your

00:39:01.696 --> 00:39:02.746 A:middle
session, you tell the

00:39:02.746 --> 00:39:04.436 A:middle
photoOutput I want

00:39:04.436 --> 00:39:06.066 A:middle
DepthDataDeliveryEnabled, and

00:39:06.706 --> 00:39:08.946 A:middle
then on a per photo request

00:39:08.946 --> 00:39:10.196 A:middle
basis, that would be when you

00:39:10.196 --> 00:39:11.816 A:middle
actually snap the photo, you

00:39:11.816 --> 00:39:13.096 A:middle
would fill out a settings object

00:39:13.096 --> 00:39:15.286 A:middle
and say, again, I want depth in

00:39:15.286 --> 00:39:16.276 A:middle
this particular photo.

00:39:17.916 --> 00:39:19.526 A:middle
Then you work with the resulting

00:39:19.826 --> 00:39:21.776 A:middle
AVCapturePhoto that comes back

00:39:22.236 --> 00:39:23.706 A:middle
and it has an accessor called

00:39:23.776 --> 00:39:25.326 A:middle
AVDepthData.

00:39:25.326 --> 00:39:26.526 A:middle
Wow, that AVDepthData, it's

00:39:26.526 --> 00:39:26.966 A:middle
everywhere.

00:39:26.966 --> 00:39:27.826 A:middle
It's like pervasive.

00:39:28.596 --> 00:39:29.756 A:middle
It's like deeply integrated into

00:39:29.756 --> 00:39:29.976 A:middle
the API.

00:39:30.516 --> 00:39:33.996 A:middle
[ Group groaning ]

00:39:34.496 --> 00:39:36.576 A:middle
On iOS most AVCaptureDevice

00:39:36.576 --> 00:39:38.056 A:middle
formats have the ability to take

00:39:38.186 --> 00:39:40.526 A:middle
higher resolution stills than

00:39:40.526 --> 00:39:41.836 A:middle
their streaming resolution.

00:39:42.326 --> 00:39:43.436 A:middle
Looking at our formats that

00:39:43.436 --> 00:39:45.786 A:middle
support depth on iPhone 7 Plus,

00:39:46.256 --> 00:39:49.056 A:middle
here you see the streaming video

00:39:49.056 --> 00:39:50.626 A:middle
resolution compared to the high

00:39:50.626 --> 00:39:51.966 A:middle
res photo resolution that you

00:39:51.966 --> 00:39:52.246 A:middle
get.

00:39:52.736 --> 00:39:54.596 A:middle
So, for instance, for photo, if

00:39:54.596 --> 00:39:55.606 A:middle
you're streaming, you only get

00:39:55.606 --> 00:39:56.976 A:middle
screen-sized buffers, but you

00:39:56.976 --> 00:39:58.786 A:middle
get 12-megapixel stills.

00:39:59.706 --> 00:40:01.366 A:middle
The same holds true for depth.

00:39:59.706 --> 00:40:01.366 A:middle
The same holds true for depth.

00:40:02.576 --> 00:40:03.586 A:middle
Remember what I told you that

00:40:03.586 --> 00:40:04.536 A:middle
when we're streaming depth,

00:40:04.536 --> 00:40:05.996 A:middle
there's a lot of work to be done

00:40:06.096 --> 00:40:08.026 A:middle
in a real-time fashion to meet

00:40:08.026 --> 00:40:10.746 A:middle
that 24 fps, but when doing a

00:40:10.746 --> 00:40:12.186 A:middle
photo, we have a little extra

00:40:12.186 --> 00:40:13.946 A:middle
time since it doesn't need to be

00:40:13.946 --> 00:40:15.526 A:middle
delivered real time, so we can

00:40:15.526 --> 00:40:17.246 A:middle
give you a very high quality,

00:40:17.496 --> 00:40:18.746 A:middle
great looking map that's over

00:40:18.746 --> 00:40:20.106 A:middle
twice the resolution of the

00:40:20.106 --> 00:40:20.596 A:middle
streaming.

00:40:21.826 --> 00:40:24.026 A:middle
The aspect ratio always matches

00:40:24.026 --> 00:40:24.896 A:middle
that of the video.

00:40:24.896 --> 00:40:26.446 A:middle
So if you're doing 16x9 video,

00:40:26.706 --> 00:40:29.776 A:middle
you get a 16x9 map.

00:40:30.456 --> 00:40:30.946 A:middle
All right.

00:40:31.226 --> 00:40:32.636 A:middle
Now it's time to talk about the

00:40:32.636 --> 00:40:33.936 A:middle
dirty little subject of

00:40:34.206 --> 00:40:35.056 A:middle
distortions.

00:40:36.246 --> 00:40:37.876 A:middle
The depth maps that we capture

00:40:37.876 --> 00:40:39.546 A:middle
and embed in photos are

00:40:40.326 --> 00:40:40.986 A:middle
distorted.

00:40:41.956 --> 00:40:43.416 A:middle
I'm sorry to be the bearer of

00:40:43.416 --> 00:40:44.816 A:middle
that news, but it's actually a

00:40:44.816 --> 00:40:45.276 A:middle
good thing.

00:40:45.846 --> 00:40:46.716 A:middle
Let me explain why.

00:40:47.766 --> 00:40:49.066 A:middle
All the camera diagrams that I

00:40:49.066 --> 00:40:51.026 A:middle
showed you up to this point were

00:40:51.026 --> 00:40:52.176 A:middle
pinhole cameras.

00:40:52.866 --> 00:40:54.576 A:middle
Pinhole cameras have no lenses

00:40:55.186 --> 00:40:57.526 A:middle
so the images are rectilinear;

00:40:58.216 --> 00:41:00.006 A:middle
that is, light passes through

00:40:58.216 --> 00:41:00.006 A:middle
that is, light passes through

00:41:00.006 --> 00:41:01.856 A:middle
the little aperture in straight

00:41:01.856 --> 00:41:04.976 A:middle
lines and presents a

00:41:04.976 --> 00:41:08.046 A:middle
geometrically perfect replicated

00:41:08.046 --> 00:41:09.606 A:middle
inverted object on the image

00:41:09.606 --> 00:41:09.946 A:middle
plane.

00:41:10.666 --> 00:41:12.506 A:middle
So if you had a perfect grid of

00:41:12.506 --> 00:41:14.206 A:middle
squares like this and you took a

00:41:14.206 --> 00:41:15.706 A:middle
picture of it with a pinhole

00:41:15.706 --> 00:41:17.366 A:middle
camera, it would look like this

00:41:17.366 --> 00:41:18.266 A:middle
on the image plane, but

00:41:18.266 --> 00:41:18.806 A:middle
upside-down.

00:41:19.486 --> 00:41:21.866 A:middle
So straight lines would remain

00:41:21.866 --> 00:41:22.226 A:middle
straight.

00:41:23.876 --> 00:41:25.416 A:middle
Unfortunately, in the real world

00:41:25.416 --> 00:41:26.986 A:middle
we need to let more light in, so

00:41:26.986 --> 00:41:29.126 A:middle
we need lenses, and lenses have

00:41:29.126 --> 00:41:30.066 A:middle
radial distortions.

00:41:30.816 --> 00:41:32.376 A:middle
These distortions are present in

00:41:32.376 --> 00:41:33.686 A:middle
the captured images as well

00:41:33.686 --> 00:41:36.486 A:middle
because they were sort of bent

00:41:36.486 --> 00:41:39.396 A:middle
in slightly odd ways to get to

00:41:39.396 --> 00:41:40.146 A:middle
the image sensor.

00:41:40.396 --> 00:41:42.336 A:middle
And in an extreme case, straight

00:41:42.336 --> 00:41:43.586 A:middle
lines captured through a bad

00:41:43.586 --> 00:41:44.776 A:middle
lens might look something like

00:41:44.776 --> 00:41:45.186 A:middle
this.

00:41:45.726 --> 00:41:47.196 A:middle
This is no good for finding

00:41:47.196 --> 00:41:49.396 A:middle
disparity, since two images need

00:41:49.396 --> 00:41:51.136 A:middle
to be matched to find features.

00:41:51.506 --> 00:41:53.506 A:middle
Well, if camera one has got a

00:41:53.506 --> 00:41:54.856 A:middle
set of distortions and camera

00:41:54.856 --> 00:41:56.036 A:middle
two has got a different set of

00:41:56.036 --> 00:41:57.416 A:middle
distortions, how are you going

00:41:57.416 --> 00:41:59.246 A:middle
to find the same set of features

00:41:59.246 --> 00:42:01.126 A:middle
in those two images since

00:41:59.246 --> 00:42:01.126 A:middle
in those two images since

00:42:01.126 --> 00:42:02.246 A:middle
they're warped differently?

00:42:02.406 --> 00:42:06.216 A:middle
I left out an important step

00:42:06.216 --> 00:42:07.236 A:middle
when I described how we

00:42:07.236 --> 00:42:09.286 A:middle
calculate disparities and I'm

00:42:09.286 --> 00:42:10.316 A:middle
going to fill it in right now.

00:42:10.976 --> 00:42:12.696 A:middle
Before comparing the tele and

00:42:12.696 --> 00:42:14.696 A:middle
the wide images, we have to do

00:42:14.696 --> 00:42:15.336 A:middle
an extra step.

00:42:15.966 --> 00:42:17.176 A:middle
We have to make those warped

00:42:17.176 --> 00:42:20.546 A:middle
images rectilinear; that is, we

00:42:20.596 --> 00:42:22.656 A:middle
unwarp them using a calibrated

00:42:22.656 --> 00:42:25.196 A:middle
set of coefficients and those

00:42:25.196 --> 00:42:26.456 A:middle
characterize the lens'

00:42:26.736 --> 00:42:27.406 A:middle
distortions.

00:42:28.536 --> 00:42:30.086 A:middle
After each image is corrected

00:42:30.546 --> 00:42:32.206 A:middle
they look like this; satisfying,

00:42:32.526 --> 00:42:33.656 A:middle
straight lines, straight.

00:42:34.406 --> 00:42:35.736 A:middle
Now we can, with certainty,

00:42:35.736 --> 00:42:37.396 A:middle
compare points in the two images

00:42:37.396 --> 00:42:40.536 A:middle
and find a perfect, real-world,

00:42:40.976 --> 00:42:43.446 A:middle
rectilinear disparity map, which

00:42:43.446 --> 00:42:44.966 A:middle
looks like that.

00:42:45.656 --> 00:42:46.606 A:middle
Now we have the opposite

00:42:46.606 --> 00:42:47.036 A:middle
problem.

00:42:47.676 --> 00:42:49.016 A:middle
The disparity map matches the

00:42:49.016 --> 00:42:51.296 A:middle
physical world, but it doesn't

00:42:51.296 --> 00:42:53.036 A:middle
match the image that we just

00:42:53.036 --> 00:42:54.636 A:middle
took, which has warping due to

00:42:54.636 --> 00:42:56.376 A:middle
the lens, so now we have to do

00:42:56.376 --> 00:42:59.246 A:middle
another step, which is to rewarp

00:42:59.666 --> 00:43:01.966 A:middle
the disparity map back to the

00:42:59.666 --> 00:43:01.966 A:middle
the disparity map back to the

00:43:01.966 --> 00:43:04.276 A:middle
image so that it -- we use a set

00:43:04.276 --> 00:43:06.216 A:middle
of inverse lens coefficients to

00:43:06.216 --> 00:43:08.026 A:middle
do this, and the final disparity

00:43:08.026 --> 00:43:09.846 A:middle
map has the same geometric

00:43:10.006 --> 00:43:11.856 A:middle
distortions as its accompanying

00:43:11.856 --> 00:43:12.246 A:middle
image.

00:43:13.296 --> 00:43:14.546 A:middle
So I said that this was a good

00:43:14.546 --> 00:43:14.776 A:middle
thing.

00:43:14.776 --> 00:43:15.596 A:middle
Let me explain why.

00:43:16.146 --> 00:43:18.396 A:middle
It means that out of the box our

00:43:18.396 --> 00:43:20.496 A:middle
depthDataMaps that come with

00:43:20.496 --> 00:43:23.586 A:middle
photos are meant for filters,

00:43:23.666 --> 00:43:24.256 A:middle
for effects.

00:43:24.636 --> 00:43:26.756 A:middle
They always match the image that

00:43:26.756 --> 00:43:27.356 A:middle
they accompany.

00:43:27.766 --> 00:43:29.506 A:middle
So if you're working on effects,

00:43:29.506 --> 00:43:31.386 A:middle
if you want to do stuff with

00:43:31.496 --> 00:43:33.676 A:middle
like the Wiggle Me app, you want

00:43:33.676 --> 00:43:36.146 A:middle
to do interesting effects with

00:43:36.266 --> 00:43:37.596 A:middle
the image such as I showed at

00:43:37.596 --> 00:43:39.256 A:middle
the very beginning, they're

00:43:39.256 --> 00:43:40.046 A:middle
perfect for that.

00:43:40.676 --> 00:43:42.126 A:middle
What they're not perfect for is

00:43:42.176 --> 00:43:43.926 A:middle
reconstructing a 3D scene.

00:43:44.426 --> 00:43:45.556 A:middle
If you want to do that, you

00:43:45.556 --> 00:43:47.086 A:middle
should make them rectilinear,

00:43:48.066 --> 00:43:48.896 A:middle
and you can do that.

00:43:48.896 --> 00:43:49.866 A:middle
I'm going to talk about that in

00:43:51.236 --> 00:43:52.136 A:middle
a minute.

00:43:52.136 --> 00:43:53.736 A:middle
I'd like to just touch briefly

00:43:53.736 --> 00:43:55.656 A:middle
on the physical structure of the

00:43:55.656 --> 00:43:57.946 A:middle
depth data in our image files.

00:43:58.556 --> 00:44:01.056 A:middle
In iOS 11 we support two kinds

00:43:58.556 --> 00:44:01.056 A:middle
In iOS 11 we support two kinds

00:44:01.056 --> 00:44:02.506 A:middle
of images with depth.

00:44:02.616 --> 00:44:05.056 A:middle
The first is HEIF HEVC, the new

00:44:05.056 --> 00:44:08.156 A:middle
format, also called HEIC files,

00:44:08.816 --> 00:44:10.776 A:middle
and there, there is first-class

00:44:10.776 --> 00:44:11.786 A:middle
support for depth.

00:44:12.346 --> 00:44:13.986 A:middle
There's an area inside the file

00:44:13.986 --> 00:44:15.646 A:middle
called the auxiliary image,

00:44:15.646 --> 00:44:17.736 A:middle
which can store a disparity or a

00:44:17.736 --> 00:44:20.096 A:middle
depth or an alpha map, and

00:44:20.096 --> 00:44:21.006 A:middle
that's where we store it.

00:44:21.586 --> 00:44:24.786 A:middle
We encode it as monochrome HEVC,

00:44:25.476 --> 00:44:27.016 A:middle
and we also store metadata

00:44:27.016 --> 00:44:29.466 A:middle
that's important for working

00:44:29.466 --> 00:44:32.256 A:middle
with that depth, such as

00:44:32.256 --> 00:44:33.396 A:middle
information about whether or not

00:44:33.396 --> 00:44:35.766 A:middle
it was filtered, what is its

00:44:35.766 --> 00:44:38.166 A:middle
accuracy, camera calibration

00:44:38.166 --> 00:44:39.176 A:middle
information like lens

00:44:39.176 --> 00:44:41.036 A:middle
distortions, and also some

00:44:41.036 --> 00:44:42.086 A:middle
rendering instructions.

00:44:42.546 --> 00:44:45.496 A:middle
All of those are encoded as XMP

00:44:45.626 --> 00:44:47.196 A:middle
along with the auxiliary image.

00:44:48.636 --> 00:44:50.296 A:middle
The second format we support is

00:44:50.296 --> 00:44:50.596 A:middle
JPEG.

00:44:51.406 --> 00:44:53.336 A:middle
Boy, JPEG wasn't meant to do

00:44:53.336 --> 00:44:54.546 A:middle
tricks like this, but we made it

00:44:54.546 --> 00:44:55.486 A:middle
do this trick anyway.

00:44:56.086 --> 00:44:59.426 A:middle
The map is 8-bit lossy JPEG if

00:44:59.426 --> 00:45:01.246 A:middle
it's filtered, or if it has not

00:44:59.426 --> 00:45:01.246 A:middle
it's filtered, or if it has not

00:45:01.246 --> 00:45:04.156 A:middle
a numbers in it, we use 16-bit

00:45:04.156 --> 00:45:06.126 A:middle
lossless JPEG encoding to

00:45:06.126 --> 00:45:07.156 A:middle
preserve all of the not a

00:45:07.156 --> 00:45:09.426 A:middle
numbers, and we store it as a

00:45:09.426 --> 00:45:11.056 A:middle
second image at the bottom of

00:45:11.056 --> 00:45:12.146 A:middle
the JPEG, so it's like a

00:45:12.146 --> 00:45:13.486 A:middle
multipicture object, if you're

00:45:13.486 --> 00:45:14.196 A:middle
familiar with that.

00:45:15.036 --> 00:45:17.096 A:middle
Again, we store the metadata as

00:45:17.186 --> 00:45:20.136 A:middle
XMP, just as we do with HEIF

00:45:21.956 --> 00:45:22.356 A:middle
HEVC.

00:45:23.436 --> 00:45:23.826 A:middle
All right.

00:45:23.826 --> 00:45:25.096 A:middle
On to the most requested

00:45:25.096 --> 00:45:26.656 A:middle
developer feature for the dual

00:45:26.656 --> 00:45:28.416 A:middle
camera, and that's dual photo

00:45:28.416 --> 00:45:28.836 A:middle
capture.

00:45:29.786 --> 00:45:31.626 A:middle
What do I mean by this.

00:45:32.136 --> 00:45:33.836 A:middle
So far, when you use the dual

00:45:33.836 --> 00:45:35.936 A:middle
camera and take a picture, you

00:45:35.936 --> 00:45:37.226 A:middle
still just get one image.

00:45:37.316 --> 00:45:38.706 A:middle
It's either from the wide or

00:45:38.706 --> 00:45:40.016 A:middle
it's from the tele, depending

00:45:40.016 --> 00:45:41.386 A:middle
where you're zoomed, or if

00:45:41.386 --> 00:45:43.036 A:middle
you're in the area between one

00:45:43.036 --> 00:45:45.266 A:middle
and 2X you might get portions of

00:45:45.356 --> 00:45:46.926 A:middle
both as we do some blending to

00:45:46.926 --> 00:45:48.716 A:middle
make an even nicer picture, but

00:45:48.716 --> 00:45:49.746 A:middle
you still only get one.

00:45:50.486 --> 00:45:52.556 A:middle
You've been clamoring for both

00:45:52.686 --> 00:45:53.836 A:middle
images and that's what we're

00:45:53.836 --> 00:45:54.426 A:middle
giving you now.

00:45:54.736 --> 00:45:56.186 A:middle
With a single request, you can

00:45:56.186 --> 00:45:58.396 A:middle
get both the wide and the tele

00:45:58.466 --> 00:46:00.736 A:middle
in their full 12-megapixel glory

00:45:58.466 --> 00:46:00.736 A:middle
in their full 12-megapixel glory

00:46:00.736 --> 00:46:01.506 A:middle
and you can do whatever the heck

00:46:01.506 --> 00:46:01.976 A:middle
you want with them.

00:46:02.516 --> 00:46:08.256 A:middle
[ Applause ]

00:46:08.756 --> 00:46:09.616 A:middle
Here's how you do it.

00:46:09.746 --> 00:46:11.026 A:middle
It's very similar to opting in

00:46:11.026 --> 00:46:11.576 A:middle
for depth.

00:46:12.446 --> 00:46:13.606 A:middle
Before starting the capture

00:46:13.606 --> 00:46:15.436 A:middle
session, you need to opt in by

00:46:15.436 --> 00:46:16.656 A:middle
telling the photoOutput I'm

00:46:17.276 --> 00:46:19.416 A:middle
going to ask for dual photo so

00:46:19.646 --> 00:46:20.166 A:middle
enable it.

00:46:21.246 --> 00:46:23.406 A:middle
And then as you are capturing on

00:46:23.406 --> 00:46:25.836 A:middle
a per photo request basis you

00:46:25.836 --> 00:46:27.316 A:middle
can fill out your settings by

00:46:27.316 --> 00:46:28.706 A:middle
saying I would like this

00:46:28.706 --> 00:46:30.536 A:middle
particular photo to be a dual

00:46:30.536 --> 00:46:32.246 A:middle
photo, give me both wide and

00:46:32.246 --> 00:46:32.546 A:middle
tele.

00:46:34.316 --> 00:46:36.286 A:middle
When you do that, the number of

00:46:36.286 --> 00:46:37.976 A:middle
photo callbacks that you get

00:46:38.036 --> 00:46:38.726 A:middle
doubles.

00:46:38.886 --> 00:46:39.926 A:middle
It's not just that you get two

00:46:39.926 --> 00:46:40.506 A:middle
callbacks.

00:46:40.916 --> 00:46:43.466 A:middle
Let's say you're asking for RAW

00:46:43.466 --> 00:46:45.796 A:middle
plus HEIF dual photo.

00:46:45.796 --> 00:46:47.216 A:middle
Well, that would be four because

00:46:47.216 --> 00:46:48.886 A:middle
you're going to get two wides

00:46:48.886 --> 00:46:52.416 A:middle
and two teles of RAW and HEIF.

00:46:53.006 --> 00:46:54.416 A:middle
So whatever you were expecting

00:46:54.416 --> 00:46:55.986 A:middle
to get before, the number of

00:46:55.986 --> 00:46:56.746 A:middle
callbacks will double.

00:46:58.936 --> 00:47:01.666 A:middle
Now, we support all of the same

00:46:58.936 --> 00:47:01.666 A:middle
Now, we support all of the same

00:47:01.666 --> 00:47:03.146 A:middle
gamut of features that we do

00:47:03.146 --> 00:47:04.966 A:middle
with depth, and that is you can

00:47:04.966 --> 00:47:07.686 A:middle
do flash with dual photo, auto

00:47:07.686 --> 00:47:10.556 A:middle
SIS, exposure brackets and you

00:47:10.556 --> 00:47:12.536 A:middle
can optionally get depth if you

00:47:12.536 --> 00:47:13.406 A:middle
need it.

00:47:14.016 --> 00:47:16.866 A:middle
How do we deal with zoom?

00:47:17.056 --> 00:47:20.136 A:middle
This is a problem of security

00:47:20.136 --> 00:47:21.346 A:middle
and confidence.

00:47:21.746 --> 00:47:23.176 A:middle
Let's say that your app only

00:47:23.176 --> 00:47:25.126 A:middle
shows the field of view of the

00:47:25.126 --> 00:47:25.606 A:middle
tele.

00:47:26.396 --> 00:47:28.256 A:middle
Well, the wide-angle camera has

00:47:28.256 --> 00:47:29.816 A:middle
more information, so if you take

00:47:29.816 --> 00:47:30.866 A:middle
a picture, you're actually

00:47:30.866 --> 00:47:32.986 A:middle
giving people something outside

00:47:32.986 --> 00:47:34.386 A:middle
of the viewable area and that

00:47:34.386 --> 00:47:35.696 A:middle
might be a privacy concern.

00:47:36.156 --> 00:47:38.306 A:middle
So if you are zooming, we

00:47:38.306 --> 00:47:40.216 A:middle
deliver dual photos, but with

00:47:40.276 --> 00:47:43.016 A:middle
the outside blackened so that

00:47:43.016 --> 00:47:44.226 A:middle
they match the field of view

00:47:44.226 --> 00:47:45.336 A:middle
that's seen in preview.

00:47:45.776 --> 00:47:46.876 A:middle
If you want the full image, you

00:47:46.876 --> 00:47:48.476 A:middle
can, just don't set the zoom to

00:47:48.476 --> 00:47:49.516 A:middle
anything other than one.

00:47:50.496 --> 00:47:52.136 A:middle
How do you know if it has this

00:47:52.136 --> 00:47:53.776 A:middle
blackened area on the outside?

00:47:54.186 --> 00:47:56.096 A:middle
Well, inside the image we store

00:47:56.096 --> 00:47:57.676 A:middle
a clean aperture rectangle that

00:47:57.676 --> 00:47:59.306 A:middle
defines the area with valid

00:47:59.306 --> 00:47:59.816 A:middle
pixels.

00:47:59.816 --> 00:48:03.856 A:middle
Dual photos can be delivered

00:47:59.816 --> 00:48:03.856 A:middle
Dual photos can be delivered

00:48:03.856 --> 00:48:05.706 A:middle
with camera calibration data,

00:48:05.706 --> 00:48:05.996 A:middle
too.

00:48:06.536 --> 00:48:08.456 A:middle
Camera calibration data is the

00:48:08.456 --> 00:48:10.756 A:middle
kind of data that you need to do

00:48:11.116 --> 00:48:13.976 A:middle
augmented reality, virtual

00:48:13.976 --> 00:48:15.896 A:middle
reality, lens distortion

00:48:15.896 --> 00:48:17.086 A:middle
correction, et cetera.

00:48:17.666 --> 00:48:20.896 A:middle
So with both a wide and a tele

00:48:21.376 --> 00:48:23.846 A:middle
and camera calibration data, you

00:48:23.846 --> 00:48:25.416 A:middle
can make your own depth maps.

00:48:25.796 --> 00:48:26.996 A:middle
I challenge you to make one

00:48:26.996 --> 00:48:29.196 A:middle
better than Apple does.

00:48:29.586 --> 00:48:30.846 A:middle
You can also augment reality, of

00:48:30.846 --> 00:48:31.936 A:middle
course, because you get the

00:48:31.936 --> 00:48:32.636 A:middle
intrinsics.

00:48:33.016 --> 00:48:34.826 A:middle
Let's talk about the individual

00:48:34.826 --> 00:48:35.996 A:middle
properties of camera

00:48:35.996 --> 00:48:36.716 A:middle
calibration.

00:48:36.716 --> 00:48:37.906 A:middle
This is the last object that I'm

00:48:37.906 --> 00:48:38.926 A:middle
going to introduce tonight.

00:48:39.876 --> 00:48:42.596 A:middle
The AVCameraCalibrationData is

00:48:42.596 --> 00:48:44.376 A:middle
our model class for camera

00:48:44.376 --> 00:48:45.166 A:middle
calibrations.

00:48:46.166 --> 00:48:46.936 A:middle
Where does it live?

00:48:47.146 --> 00:48:49.076 A:middle
Well, if you ask for depth, you

00:48:49.076 --> 00:48:50.686 A:middle
get it with an AVDepthData.

00:48:50.786 --> 00:48:53.076 A:middle
It is a property of that.

00:48:53.356 --> 00:48:54.886 A:middle
You can also get it if you've

00:48:54.886 --> 00:48:57.276 A:middle
opted in from an AVCapturePhoto.

00:48:57.276 --> 00:48:59.826 A:middle
So you opt in by saying I would

00:48:59.826 --> 00:49:01.256 A:middle
like to camera calibration with

00:48:59.826 --> 00:49:01.256 A:middle
like to camera calibration with

00:49:01.256 --> 00:49:03.166 A:middle
this photo, which works rather

00:49:03.166 --> 00:49:03.536 A:middle
nicely.

00:49:03.536 --> 00:49:04.426 A:middle
If you're doing dual photo

00:49:04.426 --> 00:49:06.016 A:middle
capture, you ask for dual photo

00:49:06.016 --> 00:49:07.166 A:middle
and you ask for the camera

00:49:07.166 --> 00:49:09.496 A:middle
calibrations, you get two photo

00:49:09.496 --> 00:49:10.866 A:middle
callbacks and you get the

00:49:10.866 --> 00:49:12.336 A:middle
calibrations for the wide, with

00:49:12.406 --> 00:49:13.756 A:middle
the wide result and the tele

00:49:13.756 --> 00:49:14.666 A:middle
with the tele result.

00:49:16.206 --> 00:49:17.496 A:middle
What does an intrinsicMatrix

00:49:17.496 --> 00:49:17.936 A:middle
look like?

00:49:18.196 --> 00:49:19.306 A:middle
I hope this is a little bit

00:49:19.306 --> 00:49:20.926 A:middle
familiar, since it's the same as

00:49:20.976 --> 00:49:22.256 A:middle
what we looked at earlier for

00:49:22.256 --> 00:49:23.606 A:middle
the streaming VideoDataOutput

00:49:23.606 --> 00:49:23.996 A:middle
case.

00:49:24.696 --> 00:49:27.146 A:middle
Again, it's a 3x3 matrix and the

00:49:27.466 --> 00:49:31.566 A:middle
CameraCalibrationData, it's used

00:49:31.566 --> 00:49:35.006 A:middle
for going from the 3D space to

00:49:35.006 --> 00:49:37.486 A:middle
the 2D space when flattening an

00:49:37.486 --> 00:49:37.926 A:middle
image.

00:49:38.076 --> 00:49:39.386 A:middle
You can apply the inverse when

00:49:39.386 --> 00:49:40.846 A:middle
going back to the 3D space.

00:49:41.666 --> 00:49:46.466 A:middle
It has pixel focal length which,

00:49:46.466 --> 00:49:48.496 A:middle
again, are two different

00:49:48.496 --> 00:49:49.596 A:middle
numbers, but because we have

00:49:49.596 --> 00:49:50.836 A:middle
square pixels, they are the same

00:49:50.836 --> 00:49:51.156 A:middle
number.

00:49:53.036 --> 00:49:55.596 A:middle
And it also has an x and y for

00:49:55.596 --> 00:49:56.846 A:middle
the optical center.

00:49:58.456 --> 00:50:00.246 A:middle
The pixel values are given at a

00:49:58.456 --> 00:50:00.246 A:middle
The pixel values are given at a

00:50:00.246 --> 00:50:02.936 A:middle
resolution of a reference frame.

00:50:04.016 --> 00:50:05.376 A:middle
Again, the depth data might be

00:50:05.376 --> 00:50:06.476 A:middle
very low resolution.

00:50:06.476 --> 00:50:07.466 A:middle
We don't want to give it to you

00:50:07.466 --> 00:50:08.776 A:middle
at that low resolution so,

00:50:08.776 --> 00:50:10.936 A:middle
therefore, we provide a separate

00:50:11.096 --> 00:50:12.116 A:middle
set of dimensions.

00:50:12.286 --> 00:50:13.556 A:middle
Typically, they're the full size

00:50:13.556 --> 00:50:14.916 A:middle
of the sensor, therefore, you

00:50:14.916 --> 00:50:17.366 A:middle
get a lot of accuracy, a lot of

00:50:17.366 --> 00:50:18.686 A:middle
resolution in the

00:50:18.686 --> 00:50:19.916 A:middle
intrinsicMatrix.

00:50:19.976 --> 00:50:24.176 A:middle
Next is the extrinsicMatrix.

00:50:24.726 --> 00:50:25.886 A:middle
This is a property that

00:50:25.886 --> 00:50:27.906 A:middle
describes the camera's pose in

00:50:27.906 --> 00:50:28.366 A:middle
the world.

00:50:29.456 --> 00:50:30.506 A:middle
You need it when you're working

00:50:30.506 --> 00:50:31.456 A:middle
with images from

00:50:31.456 --> 00:50:33.526 A:middle
stereo-rectified cameras to

00:50:33.526 --> 00:50:35.216 A:middle
triangulate where one is

00:50:35.366 --> 00:50:36.476 A:middle
compared to another one.

00:50:37.006 --> 00:50:39.036 A:middle
And our extrinsics are presented

00:50:39.306 --> 00:50:42.816 A:middle
as a single matrix, but kind of

00:50:42.956 --> 00:50:44.646 A:middle
two matrices squashed together.

00:50:45.356 --> 00:50:46.596 A:middle
So the first one, the one on the

00:50:46.596 --> 00:50:48.746 A:middle
left, is the rotation matrix.

00:50:49.096 --> 00:50:51.486 A:middle
It's a 3x3 that describes how

00:50:51.486 --> 00:50:53.676 A:middle
the camera is rotated with

00:50:53.676 --> 00:50:55.726 A:middle
respect to the world origin,

00:50:55.726 --> 00:50:56.826 A:middle
wherever that happens to be.

00:50:57.306 --> 00:50:59.266 A:middle
And there's also a 1x3 matrix

00:50:59.346 --> 00:51:00.486 A:middle
describing the camera's

00:50:59.346 --> 00:51:00.486 A:middle
describing the camera's

00:51:00.846 --> 00:51:02.846 A:middle
translation, or sort of distance

00:51:03.106 --> 00:51:04.686 A:middle
from the world origin.

00:51:05.756 --> 00:51:07.566 A:middle
It's important to note that the

00:51:07.566 --> 00:51:10.396 A:middle
tele camera is the origin of the

00:51:10.396 --> 00:51:11.766 A:middle
world when you're using the dual

00:51:11.766 --> 00:51:13.206 A:middle
camera, which makes it very

00:51:13.206 --> 00:51:13.536 A:middle
easy.

00:51:13.536 --> 00:51:14.566 A:middle
If you're just getting a tele

00:51:14.566 --> 00:51:17.626 A:middle
image, the matrix that you get

00:51:17.626 --> 00:51:19.336 A:middle
will be an identity matrix.

00:51:19.956 --> 00:51:21.586 A:middle
If you're working with wide and

00:51:21.616 --> 00:51:23.606 A:middle
tele, then the wide will, of

00:51:23.606 --> 00:51:24.796 A:middle
course, not be an identity

00:51:24.796 --> 00:51:26.546 A:middle
matrix, since it's describing

00:51:26.546 --> 00:51:29.466 A:middle
its pose and distance from the

00:51:29.696 --> 00:51:31.366 A:middle
tele camera.

00:51:31.726 --> 00:51:32.896 A:middle
But using the extrinsics, you

00:51:32.896 --> 00:51:34.056 A:middle
could, for instance, compute the

00:51:34.056 --> 00:51:35.556 A:middle
baseline between the wide and

00:51:35.556 --> 00:51:35.946 A:middle
the tele.

00:51:37.456 --> 00:51:39.236 A:middle
There are also several

00:51:39.236 --> 00:51:40.146 A:middle
properties dealing with the

00:51:40.146 --> 00:51:41.586 A:middle
geometric distortions of the

00:51:41.586 --> 00:51:42.806 A:middle
lens, as we talked about

00:51:42.806 --> 00:51:43.166 A:middle
earlier.

00:51:43.806 --> 00:51:44.906 A:middle
These are useful for when you

00:51:44.906 --> 00:51:46.976 A:middle
need to make either an image or

00:51:46.976 --> 00:51:48.706 A:middle
a depth map rectilinear.

00:51:49.936 --> 00:51:51.916 A:middle
There are two properties that

00:51:51.916 --> 00:51:52.896 A:middle
you need to be concerned with.

00:51:52.896 --> 00:51:53.516 A:middle
The first is

00:51:53.566 --> 00:51:55.646 A:middle
lensDistortionCenter.

00:51:56.646 --> 00:51:58.166 A:middle
This describes the point on the

00:51:58.166 --> 00:51:59.936 A:middle
sensor that coincides with the

00:51:59.936 --> 00:52:02.866 A:middle
center of the lens' distortion.

00:51:59.936 --> 00:52:02.866 A:middle
center of the lens' distortion.

00:52:03.186 --> 00:52:05.206 A:middle
This is frequently different

00:52:05.206 --> 00:52:06.506 A:middle
from the optical center of the

00:52:06.506 --> 00:52:06.896 A:middle
lens.

00:52:07.116 --> 00:52:08.196 A:middle
It's like if you looked at all

00:52:08.196 --> 00:52:09.966 A:middle
of the distortions, radial

00:52:09.966 --> 00:52:11.306 A:middle
distortions on the lens sort of

00:52:11.306 --> 00:52:13.176 A:middle
like tree rings, this would be

00:52:13.176 --> 00:52:15.276 A:middle
the center of the tree rings.

00:52:16.226 --> 00:52:17.956 A:middle
Also, along with this distortion

00:52:17.956 --> 00:52:19.416 A:middle
center we have a

00:52:19.416 --> 00:52:22.406 A:middle
lensDistortionLookupTable, which

00:52:22.406 --> 00:52:23.856 A:middle
you can think of as being a

00:52:23.856 --> 00:52:26.686 A:middle
number of floating point dots

00:52:27.226 --> 00:52:27.996 A:middle
connecting the

00:52:27.996 --> 00:52:29.516 A:middle
lensDistortionCenter to the

00:52:29.516 --> 00:52:30.846 A:middle
longest radius.

00:52:31.196 --> 00:52:32.076 A:middle
Again, if you drew little

00:52:32.076 --> 00:52:34.086 A:middle
circles from each of these dots,

00:52:34.336 --> 00:52:35.126 A:middle
you would get something that

00:52:35.126 --> 00:52:36.226 A:middle
looks like tree rings that would

00:52:36.226 --> 00:52:37.686 A:middle
show you the radial distortions

00:52:37.686 --> 00:52:38.306 A:middle
of the lens.

00:52:39.216 --> 00:52:41.256 A:middle
The lensDistortionLookupTable is

00:52:41.256 --> 00:52:43.096 A:middle
a C array of floats that are

00:52:43.096 --> 00:52:43.896 A:middle
wrapped in a data.

00:52:45.246 --> 00:52:46.926 A:middle
If each and every point along

00:52:46.926 --> 00:52:49.256 A:middle
those dotted lines was a 0, you

00:52:49.256 --> 00:52:50.656 A:middle
would have the one and only

00:52:50.716 --> 00:52:52.016 A:middle
perfect lens in the world.

00:52:52.176 --> 00:52:54.026 A:middle
It has no radial distortions at

00:52:54.026 --> 00:52:54.296 A:middle
all.

00:52:54.566 --> 00:52:57.006 A:middle
If there is a positive value, it

00:52:57.006 --> 00:52:58.016 A:middle
indicates that there is a

00:52:58.016 --> 00:52:59.816 A:middle
lengthening of the radius there.

00:53:00.516 --> 00:53:01.976 A:middle
If you have a negative value, it

00:53:01.976 --> 00:53:03.676 A:middle
indicates that it was shrunk

00:53:03.676 --> 00:53:03.906 A:middle
there.

00:53:04.356 --> 00:53:06.196 A:middle
But looking at this entire table

00:53:06.326 --> 00:53:07.916 A:middle
together, you can sort of get a

00:53:07.916 --> 00:53:10.586 A:middle
feel for where the bumps in the

00:53:10.586 --> 00:53:11.126 A:middle
lens are.

00:53:12.236 --> 00:53:14.716 A:middle
To apply distortion correction

00:53:14.716 --> 00:53:16.096 A:middle
to an image you'd begin with an

00:53:16.096 --> 00:53:18.396 A:middle
empty destination buffer and

00:53:18.396 --> 00:53:19.226 A:middle
then iterate through it

00:53:19.226 --> 00:53:21.316 A:middle
row-by-row and for each point

00:53:21.806 --> 00:53:22.416 A:middle
you would use the

00:53:22.416 --> 00:53:24.426 A:middle
lensDistortionLookupTable to

00:53:24.426 --> 00:53:26.186 A:middle
find the corresponding value in

00:53:26.186 --> 00:53:27.976 A:middle
the distorted image, and then

00:53:28.016 --> 00:53:29.296 A:middle
write that value to the right

00:53:29.296 --> 00:53:30.786 A:middle
position in your output buffer.

00:53:31.556 --> 00:53:33.536 A:middle
This is extremely tricky code to

00:53:33.536 --> 00:53:33.836 A:middle
write.

00:53:34.076 --> 00:53:34.786 A:middle
We know this.

00:53:34.906 --> 00:53:36.856 A:middle
So, we've provided a reference

00:53:36.856 --> 00:53:38.736 A:middle
implementation for you in

00:53:38.736 --> 00:53:41.436 A:middle
AVCameraCalibrationData.h. We

00:53:41.516 --> 00:53:44.816 A:middle
actually put code in a header

00:53:44.816 --> 00:53:45.176 A:middle
file.

00:53:45.886 --> 00:53:46.866 A:middle
It's all commented out.

00:53:46.866 --> 00:53:48.356 A:middle
It's a big objective C function.

00:53:48.826 --> 00:53:50.166 A:middle
Please take a look at it.

00:53:50.166 --> 00:53:53.146 A:middle
It describes how to rectify an

00:53:53.146 --> 00:53:55.626 A:middle
image or how to rewarp an image,

00:53:55.856 --> 00:53:57.356 A:middle
depending on which table you

00:53:57.356 --> 00:53:59.166 A:middle
pass it.

00:53:59.686 --> 00:54:00.556 A:middle
There is also, as you might

00:53:59.686 --> 00:54:00.556 A:middle
There is also, as you might

00:54:00.556 --> 00:54:02.456 A:middle
expect, the inverse of that

00:54:02.456 --> 00:54:04.486 A:middle
table, which describes how to go

00:54:04.846 --> 00:54:08.106 A:middle
from the warped back to

00:54:08.306 --> 00:54:08.786 A:middle
unwarped.

00:54:10.816 --> 00:54:12.266 A:middle
It's really easier to show you

00:54:12.266 --> 00:54:12.626 A:middle
with a demo.

00:54:12.626 --> 00:54:12.976 A:middle
Let's do a demo.

00:54:18.286 --> 00:54:20.076 A:middle
This will be our fourth and

00:54:20.336 --> 00:54:22.416 A:middle
final sample app of the day, and

00:54:22.986 --> 00:54:24.866 A:middle
it's called Straighten Up.

00:54:25.076 --> 00:54:26.176 A:middle
I bet you can guess what it

00:54:26.216 --> 00:54:26.526 A:middle
does.

00:54:28.626 --> 00:54:30.536 A:middle
This is an app that uses the

00:54:30.536 --> 00:54:33.076 A:middle
AVCameraCalibrationData,

00:54:33.076 --> 00:54:34.556 A:middle
specifically the lens distortion

00:54:34.556 --> 00:54:36.606 A:middle
characterizations, to make an

00:54:36.606 --> 00:54:37.846 A:middle
image rectilinear.

00:54:38.896 --> 00:54:41.576 A:middle
This morning I went outside and

00:54:41.576 --> 00:54:43.646 A:middle
I took a series of dual photos.

00:54:44.046 --> 00:54:44.976 A:middle
You can tell that they're dual

00:54:44.976 --> 00:54:46.546 A:middle
photos and that I was zoomed in

00:54:46.546 --> 00:54:48.086 A:middle
to 2X because of the black

00:54:48.446 --> 00:54:50.286 A:middle
border around them.

00:54:50.286 --> 00:54:52.446 A:middle
This one is, of course, from the

00:54:52.576 --> 00:54:55.946 A:middle
tele and this is the distorted

00:54:55.946 --> 00:54:56.406 A:middle
image.

00:54:57.426 --> 00:54:59.146 A:middle
Now, when I press the Undistort

00:54:59.146 --> 00:55:01.126 A:middle
button, you'll see something

00:54:59.146 --> 00:55:01.126 A:middle
button, you'll see something

00:55:01.126 --> 00:55:02.726 A:middle
that's a little bit subtle.

00:55:07.046 --> 00:55:08.156 A:middle
You can definitely see it, but

00:55:08.156 --> 00:55:08.836 A:middle
it's pretty subtle.

00:55:09.336 --> 00:55:12.676 A:middle
Typically telephoto lenses have

00:55:12.676 --> 00:55:13.986 A:middle
less curvature so they have

00:55:14.106 --> 00:55:15.956 A:middle
fewer radial distortions at the

00:55:16.146 --> 00:55:19.236 A:middle
edges than wide lenses.

00:55:19.526 --> 00:55:20.766 A:middle
I'll zoom in to a portion so you

00:55:20.766 --> 00:55:22.306 A:middle
can see the difference.

00:55:22.656 --> 00:55:24.486 A:middle
This is rectilinear, straight

00:55:24.486 --> 00:55:26.606 A:middle
lines are straight, and this is

00:55:26.606 --> 00:55:27.146 A:middle
distorted.

00:55:28.006 --> 00:55:29.976 A:middle
Now, if I go into the wide

00:55:29.976 --> 00:55:33.906 A:middle
image, again, we don't have the

00:55:33.906 --> 00:55:38.176 A:middle
corners, but you can see in the

00:55:38.176 --> 00:55:39.316 A:middle
image data that we do have

00:55:39.316 --> 00:55:41.516 A:middle
already that the distortions are

00:55:41.516 --> 00:55:42.206 A:middle
more prominent.

00:55:43.656 --> 00:55:46.526 A:middle
So distorted, undistorted.

00:55:46.766 --> 00:55:48.426 A:middle
Distorted, undistorted.

00:55:48.426 --> 00:55:49.466 A:middle
You can definitely see around

00:55:49.466 --> 00:55:51.276 A:middle
the edges that they are pulling

00:55:51.276 --> 00:55:51.846 A:middle
in more.

00:55:54.416 --> 00:55:55.406 A:middle
Undistorted.

00:55:55.686 --> 00:55:57.076 A:middle
Distorted, undistorted.

00:55:59.146 --> 00:55:59.446 A:middle
All right.

00:55:59.566 --> 00:55:59.976 A:middle
Back to slides.

00:56:07.616 --> 00:56:10.046 A:middle
Time for the wrap-up.

00:56:10.046 --> 00:56:13.116 A:middle
iPhone 7 Plus dual camera is not

00:56:13.206 --> 00:56:14.856 A:middle
a time-of-flight camera system.

00:56:14.856 --> 00:56:15.386 A:middle
It's a?

00:56:16.406 --> 00:56:17.126 A:middle
&gt;&gt; [Group] Disparity.

00:56:17.126 --> 00:56:18.126 A:middle
&gt;&gt; Disparity system.

00:56:18.126 --> 00:56:19.476 A:middle
If you leave with only one piece

00:56:19.476 --> 00:56:20.696 A:middle
of knowledge, it's that, and I

00:56:20.696 --> 00:56:22.186 A:middle
hope you know how disparity

00:56:22.186 --> 00:56:23.186 A:middle
differs from depth.

00:56:24.676 --> 00:56:25.716 A:middle
Also, the canonical

00:56:25.716 --> 00:56:27.146 A:middle
representation on our platform

00:56:27.146 --> 00:56:29.566 A:middle
for depth is AVDepthData.

00:56:30.596 --> 00:56:32.576 A:middle
We learned about intrinsics,

00:56:32.576 --> 00:56:34.896 A:middle
extrinsics, lens distortion

00:56:34.896 --> 00:56:35.336 A:middle
info.

00:56:35.446 --> 00:56:37.136 A:middle
These are all properties of an

00:56:37.136 --> 00:56:38.716 A:middle
AVCameraCalibrationData.

00:56:40.376 --> 00:56:41.126 A:middle
We learned about the

00:56:41.126 --> 00:56:43.556 A:middle
AVCaptureDepthDataOutput, and

00:56:43.556 --> 00:56:45.596 A:middle
that it provides streaming depth

00:56:45.966 --> 00:56:47.556 A:middle
which you can filter, or not.

00:56:48.136 --> 00:56:50.976 A:middle
And we learned that you can

00:56:50.976 --> 00:56:52.696 A:middle
capture photos using

00:56:52.696 --> 00:56:55.336 A:middle
AVCapturePhotoOutput and have

00:56:55.336 --> 00:56:56.946 A:middle
depth delivery enabled.

00:56:58.616 --> 00:57:00.446 A:middle
Finally, we spent a little bit

00:56:58.616 --> 00:57:00.446 A:middle
Finally, we spent a little bit

00:57:00.446 --> 00:57:01.696 A:middle
of time talking about the dual

00:57:01.696 --> 00:57:03.736 A:middle
camera, dual photo delivery

00:57:04.066 --> 00:57:05.896 A:middle
which produces a wide and a tele

00:57:05.896 --> 00:57:07.626 A:middle
for a single image with which

00:57:07.626 --> 00:57:09.046 A:middle
you can do interesting computer

00:57:09.046 --> 00:57:12.476 A:middle
vision tasks, and I hope you do.

00:57:12.716 --> 00:57:13.856 A:middle
We have three pieces of sample

00:57:13.856 --> 00:57:14.836 A:middle
code that are available right

00:57:14.836 --> 00:57:16.216 A:middle
now and are associated with this

00:57:16.216 --> 00:57:19.226 A:middle
session; AVCam, PhotoFilter and

00:57:19.226 --> 00:57:19.636 A:middle
Wiggle Me.

00:57:21.176 --> 00:57:23.076 A:middle
For more information, here is

00:57:23.826 --> 00:57:24.786 A:middle
the URL for the site.

00:57:26.346 --> 00:57:29.236 A:middle
And don't tune me out just yet.

00:57:29.846 --> 00:57:31.286 A:middle
Directly following this session

00:57:31.286 --> 00:57:32.406 A:middle
there is an informal

00:57:32.406 --> 00:57:35.046 A:middle
get-together for developers with

00:57:35.046 --> 00:57:36.596 A:middle
an interest in photography.

00:57:37.016 --> 00:57:38.946 A:middle
[Whispering] That's all of you.

00:57:39.116 --> 00:57:40.816 A:middle
So you can come and mingle with

00:57:40.846 --> 00:57:43.126 A:middle
members of the Apple Media

00:57:43.126 --> 00:57:44.326 A:middle
Technologies Group.

00:57:45.436 --> 00:57:46.296 A:middle
You can ask questions, of

00:57:46.296 --> 00:57:49.366 A:middle
course, or we can just talk and

00:57:49.366 --> 00:57:49.856 A:middle
socialize.

00:57:50.426 --> 00:57:52.286 A:middle
Tomorrow there is a sister

00:57:52.286 --> 00:57:54.436 A:middle
session at 11:00 a.m. where

00:57:54.436 --> 00:57:56.016 A:middle
you'll learn how to read and

00:57:56.016 --> 00:57:57.726 A:middle
manipulate the depth data that's

00:57:57.726 --> 00:57:58.686 A:middle
in image files.

00:57:58.896 --> 00:58:00.176 A:middle
Today we just briefly touched on

00:57:58.896 --> 00:58:00.176 A:middle
Today we just briefly touched on

00:58:00.176 --> 00:58:01.446 A:middle
the surface of what you can do

00:58:01.446 --> 00:58:03.466 A:middle
with images with depth.

00:58:04.046 --> 00:58:05.526 A:middle
Tomorrow you get a whole host of

00:58:05.526 --> 00:58:05.936 A:middle
demos.

00:58:05.936 --> 00:58:06.946 A:middle
So I really hope you'll make

00:58:06.946 --> 00:58:07.956 A:middle
time for that tomorrow.

00:58:08.346 --> 00:58:10.706 A:middle
If you do, I'd deeply appreciate

00:58:10.706 --> 00:58:10.836 A:middle
it [group groaning].

00:58:12.306 --> 00:58:14.346 A:middle
And finally, I will be

00:58:14.346 --> 00:58:15.976 A:middle
presenting a dedicated session

00:58:16.016 --> 00:58:18.206 A:middle
on working with HEIF on Friday

00:58:18.206 --> 00:58:19.816 A:middle
morning that I also hope you'll

00:58:20.626 --> 00:58:21.086 A:middle
attend.

00:58:21.376 --> 00:58:24.136 A:middle
In that one I will delve deeply

00:58:24.346 --> 00:58:25.756 A:middle
into the AVCapturePhoto

00:58:25.756 --> 00:58:26.506 A:middle
interface.

00:58:26.646 --> 00:58:28.816 A:middle
Thank you, and enjoy the rest of

00:58:28.816 --> 00:58:28.936 A:middle
the show.

00:58:29.516 --> 00:58:32.500 A:middle
[ Applause ]
