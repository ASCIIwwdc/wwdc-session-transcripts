WEBVTT

00:00:29.056 --> 00:00:30.276 A:middle
&gt;&gt; Good morning, and welcome to

00:00:30.276 --> 00:00:31.546 A:middle
What's New in Cocoa Touch.

00:00:31.936 --> 00:00:33.476 A:middle
I'm Eliza, and I'll be joined

00:00:33.476 --> 00:00:34.826 A:middle
shortly on stage by Josh

00:00:35.136 --> 00:00:35.376 A:middle
Shaffer.

00:00:35.806 --> 00:00:38.046 A:middle
And today, we have a ton of

00:00:38.046 --> 00:00:39.446 A:middle
great new APIs to tell you

00:00:39.446 --> 00:00:39.996 A:middle
about.

00:00:41.046 --> 00:00:42.346 A:middle
We're going to start with some

00:00:42.346 --> 00:00:44.456 A:middle
of the brand new productivity

00:00:44.456 --> 00:00:46.306 A:middle
APIs for iPad and iPhone.

00:00:48.096 --> 00:00:50.726 A:middle
After that, we'll show you some

00:00:50.726 --> 00:00:52.346 A:middle
of the refinements to the User

00:00:52.346 --> 00:00:53.646 A:middle
Interfaces on these devices, and

00:00:53.646 --> 00:00:55.066 A:middle
we'll talk about how you can get

00:00:55.066 --> 00:00:56.156 A:middle
these effects in your own

00:00:56.156 --> 00:00:56.786 A:middle
applications.

00:00:57.776 --> 00:00:59.156 A:middle
And finally, we'll go through an

00:00:59.156 --> 00:01:00.986 A:middle
assortment of additions and

00:00:59.156 --> 00:01:00.986 A:middle
assortment of additions and

00:01:00.986 --> 00:01:03.176 A:middle
improvements to existing APIs

00:01:03.306 --> 00:01:04.646 A:middle
across Cocoa Touch.

00:01:05.325 --> 00:01:09.306 A:middle
So, the most important

00:01:09.366 --> 00:01:12.976 A:middle
productivity API in iOS 11, as

00:01:12.976 --> 00:01:14.466 A:middle
you heard in the keynote, is

00:01:14.466 --> 00:01:15.176 A:middle
Drag and Drop.

00:01:15.766 --> 00:01:17.506 A:middle
This is an incredibly powerful

00:01:17.506 --> 00:01:17.736 A:middle
API.

00:01:17.736 --> 00:01:19.746 A:middle
Here's a video showing a couple

00:01:19.746 --> 00:01:24.566 A:middle
of the things that it can do.

00:01:24.836 --> 00:01:26.756 A:middle
So, I can pick up an item, drag

00:01:26.756 --> 00:01:27.286 A:middle
it around.

00:01:27.286 --> 00:01:28.756 A:middle
I can tap to add additional

00:01:28.756 --> 00:01:29.706 A:middle
items to the drag.

00:01:30.056 --> 00:01:31.466 A:middle
The system remains fully

00:01:31.466 --> 00:01:32.986 A:middle
interactive while my drags are

00:01:32.986 --> 00:01:34.826 A:middle
in progress, and I can even drag

00:01:34.826 --> 00:01:35.986 A:middle
data between different

00:01:35.986 --> 00:01:36.626 A:middle
applications.

00:01:37.216 --> 00:01:39.076 A:middle
So, we're really excited for you

00:01:39.076 --> 00:01:41.256 A:middle
guys to be adopting this API in

00:01:41.256 --> 00:01:41.976 A:middle
your apps.

00:01:42.236 --> 00:01:44.546 A:middle
And there are no fewer than four

00:01:44.656 --> 00:01:46.536 A:middle
sessions this week, telling you

00:01:46.836 --> 00:01:48.126 A:middle
all about how to do that.

00:01:48.966 --> 00:01:50.226 A:middle
So, right now, I'm going to give

00:01:50.226 --> 00:01:51.946 A:middle
you just a very brief overview

00:01:51.946 --> 00:01:54.136 A:middle
of some of the key components of

00:01:54.136 --> 00:01:56.196 A:middle
this API, beginning with

00:01:56.196 --> 00:01:57.676 A:middle
enabling drags in your

00:01:57.676 --> 00:01:58.176 A:middle
application.

00:01:58.726 --> 00:02:00.396 A:middle
So, suppose you have a custom

00:01:58.726 --> 00:02:00.396 A:middle
So, suppose you have a custom

00:02:00.396 --> 00:02:03.356 A:middle
view with some sub-views, maybe

00:02:03.356 --> 00:02:04.926 A:middle
little icon like views, here,

00:02:04.926 --> 00:02:06.706 A:middle
that you want to make draggable.

00:02:07.766 --> 00:02:09.976 A:middle
What you'll do, is create a UI

00:02:09.976 --> 00:02:11.696 A:middle
drag interaction, which is a new

00:02:11.746 --> 00:02:13.386 A:middle
subclass of UI interaction.

00:02:13.776 --> 00:02:16.076 A:middle
And you'll attach it to the view

00:02:16.076 --> 00:02:17.596 A:middle
that you want to allow the user

00:02:17.596 --> 00:02:18.036 A:middle
to drag.

00:02:19.606 --> 00:02:22.456 A:middle
Now, a UI interaction is kind of

00:02:22.456 --> 00:02:23.906 A:middle
like a gesture recognizer.

00:02:24.596 --> 00:02:26.326 A:middle
You make one, you set a delegate

00:02:26.326 --> 00:02:28.156 A:middle
on it, you attach it to a view,

00:02:28.156 --> 00:02:29.736 A:middle
and then, the system takes care

00:02:29.736 --> 00:02:30.156 A:middle
of the rest.

00:02:30.726 --> 00:02:31.936 A:middle
Your delegate will be called

00:02:32.156 --> 00:02:33.566 A:middle
back to provide information.

00:02:34.616 --> 00:02:36.836 A:middle
It's really quite easy to use.

00:02:37.076 --> 00:02:40.596 A:middle
So, here we would create a drag

00:02:40.596 --> 00:02:43.056 A:middle
interaction object, assign

00:02:43.056 --> 00:02:44.696 A:middle
ourself as a delegate, attach it

00:02:44.696 --> 00:02:45.196 A:middle
to this view.

00:02:45.196 --> 00:02:46.596 A:middle
And we would also, do the same

00:02:46.886 --> 00:02:48.106 A:middle
for the other views that we want

00:02:48.106 --> 00:02:48.796 A:middle
to make draggable.

00:02:49.906 --> 00:02:50.806 A:middle
Now, the

00:02:50.806 --> 00:02:52.886 A:middle
UIDragInteractionDelegate

00:02:53.056 --> 00:02:55.216 A:middle
protocol gives you a ton of

00:02:55.216 --> 00:02:57.196 A:middle
opportunity to customize what's

00:02:57.236 --> 00:02:58.306 A:middle
going on with this drag.

00:02:58.716 --> 00:03:00.146 A:middle
The one thing you absolutely

00:02:58.716 --> 00:03:00.146 A:middle
The one thing you absolutely

00:03:00.236 --> 00:03:02.256 A:middle
have to do, is provide the data

00:03:02.716 --> 00:03:03.776 A:middle
for the item that's being

00:03:03.776 --> 00:03:04.156 A:middle
dragged.

00:03:04.536 --> 00:03:05.386 A:middle
But apart from that, it's

00:03:05.386 --> 00:03:06.316 A:middle
entirely up to you.

00:03:06.316 --> 00:03:08.016 A:middle
You can go with the system

00:03:08.016 --> 00:03:09.966 A:middle
defaults, or you can customize

00:03:09.966 --> 00:03:11.296 A:middle
all kinds of aspects of the

00:03:11.296 --> 00:03:11.586 A:middle
drag.

00:03:11.586 --> 00:03:13.066 A:middle
Like, the lift animation, the

00:03:13.066 --> 00:03:16.036 A:middle
previews, you can get callbacks

00:03:16.036 --> 00:03:17.806 A:middle
as the touch moves around on the

00:03:17.806 --> 00:03:19.586 A:middle
screen and do things in

00:03:19.586 --> 00:03:20.056 A:middle
response.

00:03:20.586 --> 00:03:23.096 A:middle
It's entirely open to your

00:03:23.096 --> 00:03:24.066 A:middle
application's needs.

00:03:25.476 --> 00:03:27.036 A:middle
So, the other major component of

00:03:27.036 --> 00:03:28.586 A:middle
Drag and Drop, obviously, is the

00:03:28.586 --> 00:03:29.386 A:middle
drop component.

00:03:29.776 --> 00:03:32.016 A:middle
And to enable that, you also use

00:03:32.016 --> 00:03:33.786 A:middle
a new type of UI interaction

00:03:33.786 --> 00:03:35.666 A:middle
called the UIDropInteraction.

00:03:36.206 --> 00:03:39.346 A:middle
And you attach that not to the

00:03:39.346 --> 00:03:40.716 A:middle
individual draggable views, but

00:03:40.716 --> 00:03:42.246 A:middle
to the super view, the container

00:03:42.486 --> 00:03:43.986 A:middle
that's going to receive items

00:03:43.986 --> 00:03:44.466 A:middle
dropped.

00:03:46.936 --> 00:03:48.586 A:middle
Once again, you set a delegate.

00:03:48.586 --> 00:03:50.626 A:middle
And once again, this delegate

00:03:50.666 --> 00:03:53.516 A:middle
has the opportunity to do all

00:03:53.516 --> 00:03:54.896 A:middle
kinds of customization.

00:03:55.976 --> 00:03:57.596 A:middle
You can update your UI to make

00:03:57.596 --> 00:03:58.886 A:middle
the other items get out of the

00:03:58.886 --> 00:04:00.636 A:middle
way as the drag moves around,

00:03:58.886 --> 00:04:00.636 A:middle
way as the drag moves around,

00:04:00.946 --> 00:04:02.226 A:middle
show a visual indication of

00:04:02.226 --> 00:04:03.966 A:middle
where a drop would go, what

00:04:03.966 --> 00:04:05.246 A:middle
would happen if the user were to

00:04:05.246 --> 00:04:06.276 A:middle
drop.

00:04:06.506 --> 00:04:08.056 A:middle
You receive the data when the

00:04:08.056 --> 00:04:10.006 A:middle
drop is actually performed and

00:04:10.006 --> 00:04:11.436 A:middle
you can update your model in

00:04:11.436 --> 00:04:11.936 A:middle
response.

00:04:12.746 --> 00:04:13.956 A:middle
And then, you can also customize

00:04:13.956 --> 00:04:15.046 A:middle
all kinds of aspects of this

00:04:15.046 --> 00:04:15.536 A:middle
animation.

00:04:15.536 --> 00:04:16.826 A:middle
You can customize the preview,

00:04:16.826 --> 00:04:18.315 A:middle
during the drop, the drop

00:04:18.315 --> 00:04:19.685 A:middle
animation itself, it's really

00:04:19.685 --> 00:04:20.516 A:middle
very powerful.

00:04:21.786 --> 00:04:23.446 A:middle
So, we're excited to see what

00:04:23.446 --> 00:04:25.406 A:middle
you will create with all of the

00:04:25.406 --> 00:04:26.456 A:middle
power of this feature.

00:04:26.656 --> 00:04:27.716 A:middle
But to make it really easy to

00:04:27.716 --> 00:04:29.376 A:middle
get started, the system has

00:04:29.376 --> 00:04:32.416 A:middle
built-in support in a number of

00:04:32.416 --> 00:04:33.766 A:middle
the existing classes that you're

00:04:33.766 --> 00:04:34.996 A:middle
probably already using.

00:04:35.336 --> 00:04:36.556 A:middle
So, to get this going with

00:04:36.586 --> 00:04:38.186 A:middle
TableView, CollectionView, and

00:04:38.186 --> 00:04:39.666 A:middle
the various Text and Web views,

00:04:40.166 --> 00:04:41.606 A:middle
there's very little work for you

00:04:41.796 --> 00:04:42.736 A:middle
to do, in addition.

00:04:44.176 --> 00:04:45.486 A:middle
One other useful piece of

00:04:45.486 --> 00:04:46.736 A:middle
integration on this system, is

00:04:46.736 --> 00:04:48.156 A:middle
with UIPasteConfiguration.

00:04:48.736 --> 00:04:50.986 A:middle
So, if your application already

00:04:51.266 --> 00:04:52.946 A:middle
knows how to handle the paste

00:04:52.946 --> 00:04:54.266 A:middle
part of a copy and paste

00:04:54.546 --> 00:04:56.346 A:middle
operation, there's very little

00:04:56.756 --> 00:04:58.506 A:middle
extra work that you need to do

00:04:58.506 --> 00:05:00.526 A:middle
to make that same view a drop

00:04:58.506 --> 00:05:00.526 A:middle
to make that same view a drop

00:05:00.526 --> 00:05:00.786 A:middle
target.

00:05:01.706 --> 00:05:05.456 A:middle
So, here are the sessions on

00:05:05.456 --> 00:05:06.016 A:middle
Drag and Drop.

00:05:06.236 --> 00:05:07.276 A:middle
And the first one is

00:05:07.276 --> 00:05:08.286 A:middle
introduction to Drag and Drop,

00:05:08.476 --> 00:05:09.776 A:middle
right here, right after this

00:05:09.816 --> 00:05:10.136 A:middle
session.

00:05:10.136 --> 00:05:11.256 A:middle
And so, we really encourage you

00:05:11.256 --> 00:05:11.786 A:middle
to stay for that.

00:05:12.986 --> 00:05:14.486 A:middle
Tomorrow, we have Mastering Drag

00:05:14.486 --> 00:05:14.876 A:middle
and Drop.

00:05:15.206 --> 00:05:16.256 A:middle
And then, there's an entire

00:05:16.306 --> 00:05:18.096 A:middle
session devoted to getting Drag

00:05:18.096 --> 00:05:19.216 A:middle
and Drop working with your table

00:05:19.216 --> 00:05:20.156 A:middle
and collection views.

00:05:20.386 --> 00:05:22.076 A:middle
And a really important session

00:05:22.146 --> 00:05:24.756 A:middle
on the various ways that you can

00:05:24.756 --> 00:05:26.846 A:middle
manipulate data with your drags

00:05:26.846 --> 00:05:27.336 A:middle
and drops.

00:05:27.576 --> 00:05:28.806 A:middle
There's actually a lot that you

00:05:28.806 --> 00:05:29.706 A:middle
can do there, that's very

00:05:29.706 --> 00:05:30.196 A:middle
powerful.

00:05:30.196 --> 00:05:31.026 A:middle
So, we encourage you to check

00:05:31.066 --> 00:05:31.646 A:middle
that out, as well.

00:05:31.646 --> 00:05:33.386 A:middle
All right.

00:05:33.546 --> 00:05:35.306 A:middle
So, the other piece of our

00:05:35.346 --> 00:05:36.986 A:middle
productivity enhancements on

00:05:36.986 --> 00:05:38.876 A:middle
iPad and iPhone is File

00:05:38.876 --> 00:05:39.366 A:middle
Management.

00:05:40.566 --> 00:05:42.096 A:middle
We're introducing this wonderful

00:05:42.096 --> 00:05:44.086 A:middle
view controller that allows your

00:05:44.086 --> 00:05:46.006 A:middle
users to browse their documents,

00:05:46.356 --> 00:05:47.726 A:middle
right in your app.

00:05:47.726 --> 00:05:49.196 A:middle
And this gives them access not

00:05:49.196 --> 00:05:51.206 A:middle
only to the local documents in

00:05:51.206 --> 00:05:52.786 A:middle
your app's documents folder, but

00:05:52.786 --> 00:05:54.346 A:middle
also, to documents stored on the

00:05:54.346 --> 00:05:56.736 A:middle
cloud in iCloud Drive, and also

00:05:56.736 --> 00:05:58.256 A:middle
in participating third party

00:05:58.256 --> 00:05:59.446 A:middle
cloud storage services.

00:06:00.156 --> 00:06:03.926 A:middle
To make one of these.

00:06:03.926 --> 00:06:06.136 A:middle
So, the class is called

00:06:06.136 --> 00:06:08.196 A:middle
UIDocumentBrowserViewController.

00:06:08.826 --> 00:06:11.206 A:middle
And to make one, you pass it in

00:06:11.206 --> 00:06:13.226 A:middle
array of the file types that

00:06:13.226 --> 00:06:14.556 A:middle
your app knows how to handle.

00:06:14.916 --> 00:06:16.246 A:middle
That way, the user can't open a

00:06:16.246 --> 00:06:18.236 A:middle
file using this API that your

00:06:18.396 --> 00:06:19.186 A:middle
app doesn't know what to do

00:06:19.186 --> 00:06:19.366 A:middle
with.

00:06:20.006 --> 00:06:22.776 A:middle
And this class is actually quite

00:06:22.776 --> 00:06:23.506 A:middle
customizable.

00:06:24.266 --> 00:06:25.696 A:middle
The appearance can be changed in

00:06:25.696 --> 00:06:26.566 A:middle
a variety of ways.

00:06:26.756 --> 00:06:27.936 A:middle
And you can also set different

00:06:27.936 --> 00:06:30.076 A:middle
behaviors to occur as the user

00:06:30.076 --> 00:06:31.276 A:middle
navigates their files and

00:06:31.276 --> 00:06:31.896 A:middle
selects one.

00:06:32.436 --> 00:06:35.546 A:middle
As I mentioned, this gives you

00:06:35.546 --> 00:06:37.296 A:middle
access both to local storage,

00:06:37.426 --> 00:06:38.776 A:middle
and documents stored on the

00:06:38.776 --> 00:06:38.926 A:middle
cloud.

00:06:38.986 --> 00:06:40.756 A:middle
And that comes with one

00:06:40.806 --> 00:06:42.526 A:middle
important caveat that's really

00:06:42.526 --> 00:06:43.686 A:middle
important to keep in mind.

00:06:43.996 --> 00:06:45.696 A:middle
Which is that you can no longer

00:06:45.836 --> 00:06:48.736 A:middle
depend on your application being

00:06:48.736 --> 00:06:50.166 A:middle
the only one touching a

00:06:50.166 --> 00:06:51.866 A:middle
particular file at a given time.

00:06:52.256 --> 00:06:53.766 A:middle
So, it's really crucial to

00:06:53.766 --> 00:06:55.686 A:middle
coordinate file access with

00:06:55.686 --> 00:06:57.066 A:middle
documents that you're accessing

00:06:57.066 --> 00:06:57.646 A:middle
using this class.

00:06:58.106 --> 00:07:00.146 A:middle
And you can do that by using

00:06:58.106 --> 00:07:00.146 A:middle
And you can do that by using

00:07:00.146 --> 00:07:02.716 A:middle
NSFileCoordinator, directly, or

00:07:02.916 --> 00:07:04.526 A:middle
by sub-classing UIDocument,

00:07:05.316 --> 00:07:06.586 A:middle
which builds in a lot of file

00:07:06.586 --> 00:07:07.876 A:middle
coordination behavior for you.

00:07:09.246 --> 00:07:11.236 A:middle
To hear more about this class

00:07:11.406 --> 00:07:13.136 A:middle
and other document based topics,

00:07:13.476 --> 00:07:15.576 A:middle
please check out this session on

00:07:15.846 --> 00:07:16.286 A:middle
Thursday.

00:07:17.186 --> 00:07:18.946 A:middle
And now, I'm going to invite

00:07:18.946 --> 00:07:21.156 A:middle
Josh onstage, to talk us through

00:07:21.156 --> 00:07:22.536 A:middle
some of the UI refinements in

00:07:22.836 --> 00:07:23.976 A:middle
iOS 11.

00:07:24.516 --> 00:07:29.086 A:middle
[ Applause ]

00:07:29.586 --> 00:07:29.936 A:middle
&gt;&gt; All right.

00:07:29.936 --> 00:07:30.576 A:middle
Thanks, Eliza.

00:07:31.266 --> 00:07:33.016 A:middle
So, there's a lot of really

00:07:33.016 --> 00:07:34.016 A:middle
great enhancements to

00:07:34.016 --> 00:07:35.766 A:middle
productivity APIs in iOS 11.

00:07:35.846 --> 00:07:37.376 A:middle
But we've also got some really

00:07:37.376 --> 00:07:39.056 A:middle
great UI refinements, as well.

00:07:39.056 --> 00:07:40.246 A:middle
And I want to talk through a

00:07:40.246 --> 00:07:41.806 A:middle
bunch of them, starting with one

00:07:41.806 --> 00:07:43.076 A:middle
of the most visible, which is

00:07:43.076 --> 00:07:45.166 A:middle
the new large title at the top

00:07:45.166 --> 00:07:46.116 A:middle
of the navigation bar.

00:07:46.986 --> 00:07:48.146 A:middle
And this is the most visible

00:07:48.146 --> 00:07:49.256 A:middle
change that you'll probably

00:07:49.256 --> 00:07:50.446 A:middle
immediately notice, when you

00:07:50.446 --> 00:07:51.866 A:middle
start using iOS 11.

00:07:52.816 --> 00:07:53.886 A:middle
It includes this new large

00:07:53.886 --> 00:07:55.176 A:middle
prominent title displayed at the

00:07:55.176 --> 00:07:55.756 A:middle
top.

00:07:55.916 --> 00:07:57.696 A:middle
Along, with a new unified search

00:07:57.696 --> 00:07:59.356 A:middle
field design that integrates it

00:07:59.356 --> 00:08:00.026 A:middle
right in the bar.

00:07:59.356 --> 00:08:00.026 A:middle
right in the bar.

00:08:00.946 --> 00:08:02.056 A:middle
So, while your content is

00:08:02.056 --> 00:08:03.506 A:middle
scrolled to the top, you're

00:08:03.506 --> 00:08:04.576 A:middle
going to be able to have easy

00:08:04.576 --> 00:08:05.946 A:middle
visibility of the large title

00:08:05.946 --> 00:08:07.216 A:middle
that tell exactly where you are,

00:08:07.216 --> 00:08:08.926 A:middle
and easier access to the search

00:08:08.926 --> 00:08:09.206 A:middle
field.

00:08:09.206 --> 00:08:10.376 A:middle
Because it's now pulled down a

00:08:10.376 --> 00:08:11.726 A:middle
little bit farther than where it

00:08:11.726 --> 00:08:13.956 A:middle
usually would have been, in the

00:08:14.696 --> 00:08:14.836 A:middle
past.

00:08:15.006 --> 00:08:16.736 A:middle
However, to maximize the area

00:08:16.736 --> 00:08:18.016 A:middle
available for displaying your

00:08:18.016 --> 00:08:20.006 A:middle
actual content, as you start

00:08:20.046 --> 00:08:21.666 A:middle
scrolling, both of these will

00:08:21.666 --> 00:08:23.626 A:middle
collapse in order to maximize

00:08:23.666 --> 00:08:25.276 A:middle
the space below the bar, so you

00:08:25.276 --> 00:08:26.536 A:middle
can see as much content as

00:08:26.536 --> 00:08:27.046 A:middle
possible.

00:08:27.736 --> 00:08:29.206 A:middle
First, the search bar will

00:08:29.206 --> 00:08:30.186 A:middle
collapse itself.

00:08:30.186 --> 00:08:31.826 A:middle
And then, the large title will

00:08:31.866 --> 00:08:33.326 A:middle
scroll up under the bar, and

00:08:33.326 --> 00:08:34.416 A:middle
you'll end up with a view that

00:08:34.416 --> 00:08:35.416 A:middle
looks very much like what you

00:08:35.416 --> 00:08:37.216 A:middle
were used to, prior to iOS 11.

00:08:38.376 --> 00:08:40.285 A:middle
Now, UINavigationController will

00:08:40.285 --> 00:08:42.176 A:middle
automatically find the main

00:08:42.176 --> 00:08:43.736 A:middle
primary content scroll view

00:08:44.006 --> 00:08:45.336 A:middle
inside of your currently visible

00:08:45.336 --> 00:08:46.046 A:middle
view controller.

00:08:46.396 --> 00:08:48.146 A:middle
And track its content offset to

00:08:48.146 --> 00:08:49.236 A:middle
make sure that it can do this on

00:08:49.236 --> 00:08:49.506 A:middle
your behalf.

00:08:50.316 --> 00:08:51.316 A:middle
So, in most cases, there's

00:08:51.316 --> 00:08:52.676 A:middle
actually not a lot of work that

00:08:52.676 --> 00:08:53.946 A:middle
you need to do, in order to

00:08:54.976 --> 00:08:56.786 A:middle
adopt that.

00:08:56.996 --> 00:08:58.366 A:middle
Enabling all this behavior is

00:08:58.366 --> 00:08:59.666 A:middle
actually really straightforward.

00:09:00.126 --> 00:09:01.396 A:middle
There's one new property on

00:09:01.396 --> 00:09:02.956 A:middle
UINavigationBar called

00:09:02.956 --> 00:09:04.026 A:middle
prefersLargeTitle.

00:09:04.026 --> 00:09:05.556 A:middle
And if you just set that to yes,

00:09:06.186 --> 00:09:07.016 A:middle
you're going to get the large

00:09:07.016 --> 00:09:08.246 A:middle
title appearance and

00:09:08.246 --> 00:09:09.466 A:middle
NavigationController will

00:09:09.466 --> 00:09:10.786 A:middle
automatically do that tracking

00:09:10.786 --> 00:09:11.666 A:middle
that we just talked about.

00:09:11.666 --> 00:09:13.116 A:middle
Finding your scroll view,

00:09:13.326 --> 00:09:14.616 A:middle
tracking its offset, and

00:09:14.616 --> 00:09:15.426 A:middle
handling the shrinking.

00:09:16.036 --> 00:09:18.606 A:middle
Now, the second thing is a new

00:09:18.606 --> 00:09:20.256 A:middle
property on UINavigationItem.

00:09:20.776 --> 00:09:22.016 A:middle
And this lets you control the

00:09:22.016 --> 00:09:23.256 A:middle
appearance of the large title

00:09:23.256 --> 00:09:24.516 A:middle
for every level of your

00:09:24.516 --> 00:09:25.636 A:middle
navigation hierarchy.

00:09:26.216 --> 00:09:27.736 A:middle
So, not every level, as you're

00:09:27.786 --> 00:09:28.976 A:middle
pushing view controllers onto

00:09:28.976 --> 00:09:30.396 A:middle
the Navstack, needs to display

00:09:30.396 --> 00:09:31.106 A:middle
the large title.

00:09:31.536 --> 00:09:32.966 A:middle
And in fact, many often do not.

00:09:32.966 --> 00:09:34.526 A:middle
So, you can control at each

00:09:34.526 --> 00:09:36.176 A:middle
level using this navigation item

00:09:36.176 --> 00:09:37.726 A:middle
property, whether the large

00:09:37.776 --> 00:09:39.796 A:middle
title, or the older more small

00:09:39.986 --> 00:09:41.246 A:middle
traditional style is what you'll

00:09:41.306 --> 00:09:43.526 A:middle
see at any given point.

00:09:43.716 --> 00:09:44.956 A:middle
Adopting the searchController

00:09:44.956 --> 00:09:46.316 A:middle
appearance is also, really easy.

00:09:46.646 --> 00:09:47.556 A:middle
You can just use this new

00:09:47.556 --> 00:09:49.056 A:middle
searchController property, in

00:09:49.326 --> 00:09:51.166 A:middle
order to get that new appearance

00:09:51.166 --> 00:09:52.326 A:middle
and all the new behaviors.

00:09:52.736 --> 00:09:53.976 A:middle
Now, traditionally in the past,

00:09:53.976 --> 00:09:54.786 A:middle
you would have taken your

00:09:54.786 --> 00:09:56.716 A:middle
navigation bar and probably

00:09:56.716 --> 00:09:57.796 A:middle
included it as part of your

00:09:57.796 --> 00:09:59.496 A:middle
content, maybe made it the table

00:09:59.496 --> 00:10:00.236 A:middle
header view for your

00:09:59.496 --> 00:10:00.236 A:middle
header view for your

00:10:00.236 --> 00:10:00.976 A:middle
UITableView.

00:10:01.576 --> 00:10:02.596 A:middle
Now, instead of doing that,

00:10:02.736 --> 00:10:03.786 A:middle
because the new appearance looks

00:10:03.786 --> 00:10:05.476 A:middle
more like it's part of the bar,

00:10:05.476 --> 00:10:06.616 A:middle
you can just use this property

00:10:06.756 --> 00:10:07.426 A:middle
and you'll get all those

00:10:07.426 --> 00:10:08.056 A:middle
behaviors.

00:10:09.376 --> 00:10:12.356 A:middle
Now generally, the first view on

00:10:12.356 --> 00:10:13.856 A:middle
your navigation stack is the

00:10:13.856 --> 00:10:15.136 A:middle
only one that you would use the

00:10:15.136 --> 00:10:16.196 A:middle
large title for.

00:10:16.646 --> 00:10:18.156 A:middle
This is a general bit of

00:10:18.156 --> 00:10:20.386 A:middle
guidance for designing your apps

00:10:20.426 --> 00:10:21.426 A:middle
to use these large titles.

00:10:22.196 --> 00:10:23.866 A:middle
Then, as you push in to a second

00:10:23.866 --> 00:10:25.806 A:middle
level view and keep navigating

00:10:25.806 --> 00:10:27.546 A:middle
deeper, you'd usually use the

00:10:27.546 --> 00:10:28.826 A:middle
more smaller traditional size.

00:10:29.636 --> 00:10:30.736 A:middle
This is a great starting point

00:10:30.736 --> 00:10:32.216 A:middle
for your designs, but as we just

00:10:32.216 --> 00:10:33.726 A:middle
mentioned, it is fully under

00:10:33.726 --> 00:10:35.626 A:middle
your control via the API, so you

00:10:35.626 --> 00:10:36.756 A:middle
can do the right thing for your

00:10:36.886 --> 00:10:36.966 A:middle
app.

00:10:36.966 --> 00:10:38.396 A:middle
And in fact, if you look through

00:10:38.396 --> 00:10:39.596 A:middle
some of ours, you'll find that

00:10:39.596 --> 00:10:41.006 A:middle
Mail, for instance, uses the

00:10:41.006 --> 00:10:42.366 A:middle
large title at the first two

00:10:42.366 --> 00:10:42.746 A:middle
levels.

00:10:43.306 --> 00:10:45.896 A:middle
You'll also notice that the

00:10:45.896 --> 00:10:47.086 A:middle
refresh control is now

00:10:47.116 --> 00:10:48.896 A:middle
integrated in this new, single,

00:10:48.896 --> 00:10:49.566 A:middle
large title.

00:10:50.166 --> 00:10:51.546 A:middle
Now, if you use a UI refresh

00:10:51.546 --> 00:10:52.996 A:middle
control in your app to get your

00:10:52.996 --> 00:10:54.506 A:middle
Pull to Refresh behavior, this

00:10:54.506 --> 00:10:55.226 A:middle
will actually happen

00:10:55.226 --> 00:10:55.946 A:middle
automatically.

00:10:56.016 --> 00:10:57.066 A:middle
So, there's no additional work

00:10:57.066 --> 00:10:58.226 A:middle
you have to do to get that

00:10:58.286 --> 00:11:02.066 A:middle
visual integration with the bar.

00:10:58.286 --> 00:11:02.066 A:middle
visual integration with the bar.

00:11:02.686 --> 00:11:03.816 A:middle
One important thing to note

00:11:03.816 --> 00:11:05.246 A:middle
about these large titles and the

00:11:05.246 --> 00:11:06.766 A:middle
bar is that they're actually

00:11:06.846 --> 00:11:08.526 A:middle
part of the navigation bar, not

00:11:08.526 --> 00:11:09.766 A:middle
part of your content view.

00:11:11.056 --> 00:11:12.536 A:middle
As a result, the navigation bar

00:11:12.536 --> 00:11:13.886 A:middle
itself, is actually quite a bit

00:11:13.946 --> 00:11:15.126 A:middle
taller than you might normally

00:11:15.126 --> 00:11:16.586 A:middle
be used to from previous

00:11:16.586 --> 00:11:17.536 A:middle
releases of iOS.

00:11:18.006 --> 00:11:19.276 A:middle
And in fact, it can now change

00:11:19.356 --> 00:11:20.926 A:middle
height as the content scrolls.

00:11:22.666 --> 00:11:23.906 A:middle
As you can see, it's larger

00:11:23.906 --> 00:11:24.646 A:middle
while the large title is

00:11:24.646 --> 00:11:25.046 A:middle
visible.

00:11:25.136 --> 00:11:27.406 A:middle
And then, as the user scrolls

00:11:27.576 --> 00:11:28.756 A:middle
and the large title disappears,

00:11:28.786 --> 00:11:30.036 A:middle
the navigation bar takes on a

00:11:30.036 --> 00:11:32.126 A:middle
more traditional height as you

00:11:32.126 --> 00:11:33.096 A:middle
would normally be used to.

00:11:33.986 --> 00:11:34.866 A:middle
Now, you might initially be

00:11:34.866 --> 00:11:35.916 A:middle
concerned that this could be

00:11:35.916 --> 00:11:36.926 A:middle
complicated to deal with.

00:11:37.426 --> 00:11:38.486 A:middle
But the teams have been working

00:11:38.486 --> 00:11:39.726 A:middle
really hard to make sure that

00:11:39.726 --> 00:11:41.356 A:middle
this is as easy as possible to

00:11:41.356 --> 00:11:42.376 A:middle
deal with, in your apps.

00:11:42.536 --> 00:11:43.616 A:middle
And in most cases, it can

00:11:43.656 --> 00:11:44.406 A:middle
actually be handled

00:11:44.406 --> 00:11:45.826 A:middle
automatically on your behalf,

00:11:45.956 --> 00:11:46.866 A:middle
with no additional work.

00:11:47.346 --> 00:11:48.716 A:middle
UINavigationController does a

00:11:48.716 --> 00:11:49.586 A:middle
lot of this for you.

00:11:50.496 --> 00:11:51.896 A:middle
Now, to make it easier, though,

00:11:51.896 --> 00:11:54.786 A:middle
to find out as these bars change

00:11:54.896 --> 00:11:56.556 A:middle
height, there's a new property

00:11:56.596 --> 00:11:58.166 A:middle
on UIView, that's actually

00:11:58.166 --> 00:11:59.736 A:middle
really generally useful and can

00:11:59.736 --> 00:12:00.976 A:middle
apply across your entire

00:11:59.736 --> 00:12:00.976 A:middle
apply across your entire

00:12:00.976 --> 00:12:01.496 A:middle
application.

00:12:01.496 --> 00:12:03.566 A:middle
And that's the new safeAreaInset

00:12:03.606 --> 00:12:03.986 A:middle
property.

00:12:05.256 --> 00:12:07.236 A:middle
So, safeAreaInset lets you know

00:12:07.236 --> 00:12:09.176 A:middle
the area of your content that is

00:12:09.256 --> 00:12:10.506 A:middle
visible underneath anything that

00:12:10.506 --> 00:12:11.776 A:middle
might be obscured by bars.

00:12:11.866 --> 00:12:14.286 A:middle
So, you can reliably and easily

00:12:14.326 --> 00:12:15.766 A:middle
place your content in the area

00:12:15.766 --> 00:12:17.246 A:middle
that will be visible and not

00:12:17.246 --> 00:12:19.216 A:middle
obstructed by any of these other

00:12:19.216 --> 00:12:21.146 A:middle
system UIs, like the bar at the

00:12:21.146 --> 00:12:21.986 A:middle
top and bottom.

00:12:22.816 --> 00:12:23.746 A:middle
Now, with this information, you

00:12:23.746 --> 00:12:25.016 A:middle
can easily do that layout.

00:12:25.316 --> 00:12:26.766 A:middle
And as the bar changes height

00:12:26.766 --> 00:12:28.236 A:middle
while the user scrolls, the

00:12:28.236 --> 00:12:30.136 A:middle
safeAreaInset will grow so that

00:12:30.136 --> 00:12:31.586 A:middle
you can easily stay below the

00:12:31.586 --> 00:12:31.876 A:middle
bar.

00:12:34.456 --> 00:12:35.996 A:middle
Now, if your view is overlapped

00:12:35.996 --> 00:12:37.566 A:middle
by a toolbar or a tab bar on the

00:12:37.606 --> 00:12:38.986 A:middle
bottom, you're going to find

00:12:38.986 --> 00:12:40.206 A:middle
that the safeAreaInset has a

00:12:40.206 --> 00:12:41.666 A:middle
value for its bottom, as well.

00:12:41.856 --> 00:12:42.946 A:middle
So that you can be sure that you

00:12:42.946 --> 00:12:44.496 A:middle
know the exact area, top and

00:12:44.496 --> 00:12:45.516 A:middle
bottom, that you can safely

00:12:45.516 --> 00:12:47.046 A:middle
display content in.

00:12:48.696 --> 00:12:50.206 A:middle
The safeAreaInsets are really

00:12:50.206 --> 00:12:51.276 A:middle
easy to access, too.

00:12:51.656 --> 00:12:53.116 A:middle
So, there's three new properties

00:12:53.116 --> 00:12:54.506 A:middle
on UIView that make it easy to

00:12:54.506 --> 00:12:54.946 A:middle
use this.

00:12:55.496 --> 00:12:56.026 A:middle
The first is the

00:12:56.026 --> 00:12:57.096 A:middle
safeAreaLayoutGuide.

00:12:57.476 --> 00:12:58.826 A:middle
Now, with safeAreaLayoutGuide,

00:12:58.826 --> 00:13:00.136 A:middle
you can easily integrate safe

00:12:58.826 --> 00:13:00.136 A:middle
you can easily integrate safe

00:13:00.136 --> 00:13:01.356 A:middle
areas with all of your auto

00:13:01.356 --> 00:13:01.966 A:middle
layout code.

00:13:01.966 --> 00:13:03.366 A:middle
So, you can set up constraints

00:13:03.416 --> 00:13:04.826 A:middle
against this layout guide to

00:13:04.866 --> 00:13:06.216 A:middle
position all of your content

00:13:06.216 --> 00:13:07.176 A:middle
within the safe area.

00:13:08.646 --> 00:13:09.606 A:middle
Now, if you're performing layout

00:13:09.646 --> 00:13:11.066 A:middle
manually, you may actually just

00:13:11.066 --> 00:13:12.136 A:middle
want to read the current safe

00:13:12.136 --> 00:13:13.386 A:middle
area values for a particular

00:13:13.386 --> 00:13:13.996 A:middle
point in time.

00:13:14.546 --> 00:13:15.386 A:middle
And you can do that with the

00:13:15.386 --> 00:13:16.676 A:middle
safeAreaInsets property.

00:13:17.266 --> 00:13:18.156 A:middle
Now, this is in the coordinate

00:13:18.156 --> 00:13:19.666 A:middle
space of your view, so it's

00:13:19.666 --> 00:13:21.006 A:middle
really easy to use to position

00:13:21.006 --> 00:13:22.146 A:middle
your content exactly where you

00:13:22.146 --> 00:13:22.346 A:middle
want.

00:13:22.346 --> 00:13:23.796 A:middle
Now, of course, if you're doing

00:13:23.796 --> 00:13:25.216 A:middle
manual layout, you'll also need

00:13:25.216 --> 00:13:26.306 A:middle
to know when that changes.

00:13:26.306 --> 00:13:27.586 A:middle
And so, you can override the

00:13:27.586 --> 00:13:29.596 A:middle
safeAreaInsetsDidChange property

00:13:29.876 --> 00:13:31.266 A:middle
to find out when it changes and

00:13:31.266 --> 00:13:32.686 A:middle
adjust your layout.

00:13:33.976 --> 00:13:35.836 A:middle
Now, there's a lot of things,

00:13:35.836 --> 00:13:36.966 A:middle
because this is integrated

00:13:36.966 --> 00:13:38.266 A:middle
throughout UIKit, that could be

00:13:38.266 --> 00:13:39.496 A:middle
handled automatically for you,

00:13:39.496 --> 00:13:40.396 A:middle
that previously would have been

00:13:40.396 --> 00:13:40.966 A:middle
more difficult.

00:13:41.616 --> 00:13:43.206 A:middle
For instance, UIScrollView can

00:13:43.206 --> 00:13:44.386 A:middle
automatically include the

00:13:44.386 --> 00:13:46.196 A:middle
safeAreaInsets as additional

00:13:46.196 --> 00:13:47.916 A:middle
scrollable padding at the top

00:13:47.916 --> 00:13:48.866 A:middle
and bottom of your views.

00:13:49.266 --> 00:13:50.236 A:middle
So, that even if they're

00:13:50.236 --> 00:13:51.886 A:middle
underlapping the bars, you can

00:13:51.886 --> 00:13:53.086 A:middle
be sure that your content can

00:13:53.086 --> 00:13:54.356 A:middle
always be scrolled into view.

00:13:55.096 --> 00:13:56.336 A:middle
Now, in previous releases,

00:13:56.336 --> 00:13:57.856 A:middle
UINavigationController tried to

00:13:57.856 --> 00:13:58.716 A:middle
handle some of this on your

00:13:58.716 --> 00:14:00.126 A:middle
behalf by calculating the

00:13:58.716 --> 00:14:00.126 A:middle
behalf by calculating the

00:14:00.126 --> 00:14:01.106 A:middle
overlap of the bars.

00:14:01.106 --> 00:14:02.666 A:middle
And then, setting a value on the

00:14:02.786 --> 00:14:04.266 A:middle
contentInset property for your

00:14:04.266 --> 00:14:05.026 A:middle
UIScrollView.

00:14:05.686 --> 00:14:07.146 A:middle
Now, you may have noticed that

00:14:07.146 --> 00:14:08.116 A:middle
if you ever tried to set your

00:14:08.116 --> 00:14:09.336 A:middle
own contentInset for the

00:14:09.336 --> 00:14:10.846 A:middle
UIScrollView, because you'd end

00:14:10.846 --> 00:14:11.446 A:middle
up fighting with

00:14:11.446 --> 00:14:12.906 A:middle
NavigationController over who

00:14:12.906 --> 00:14:14.206 A:middle
owned that current value at a

00:14:14.206 --> 00:14:14.786 A:middle
given time.

00:14:15.616 --> 00:14:17.236 A:middle
In iOS 11, that conflict is

00:14:17.236 --> 00:14:18.436 A:middle
gone, because

00:14:18.436 --> 00:14:19.976 A:middle
UINavigationController no longer

00:14:20.076 --> 00:14:21.286 A:middle
has to set the contentInset

00:14:21.286 --> 00:14:21.686 A:middle
property.

00:14:22.306 --> 00:14:23.716 A:middle
ScrollView can set it on its own

00:14:23.716 --> 00:14:24.706 A:middle
behalf, by just looking at the

00:14:24.706 --> 00:14:26.396 A:middle
safeAreaInsets, leaving the

00:14:26.396 --> 00:14:28.226 A:middle
actual value of contentInset to

00:14:28.226 --> 00:14:29.516 A:middle
be owned by you, for your

00:14:29.516 --> 00:14:30.346 A:middle
application needs.

00:14:31.516 --> 00:14:37.836 A:middle
[ Applause ]

00:14:38.336 --> 00:14:40.006 A:middle
So, UIScrollView tries to do the

00:14:40.006 --> 00:14:41.426 A:middle
right thing, automatically, as

00:14:41.426 --> 00:14:42.626 A:middle
much as possible for this case.

00:14:43.026 --> 00:14:44.456 A:middle
But it's not always possible, of

00:14:44.456 --> 00:14:46.016 A:middle
course, to get it right 100% of

00:14:46.016 --> 00:14:46.476 A:middle
the time.

00:14:46.476 --> 00:14:47.616 A:middle
And we know some of your apps

00:14:47.616 --> 00:14:48.366 A:middle
have different needs.

00:14:49.096 --> 00:14:50.306 A:middle
So, to help make sure that you

00:14:50.306 --> 00:14:51.316 A:middle
can always have the right

00:14:51.316 --> 00:14:52.976 A:middle
behavior, we have a new property

00:14:52.976 --> 00:14:54.066 A:middle
on UIScrollView that gives you

00:14:54.126 --> 00:14:56.316 A:middle
full control over how ScrollView

00:14:56.316 --> 00:14:57.856 A:middle
interprets these safeAreaInsets.

00:14:59.426 --> 00:15:00.446 A:middle
So, with this, you can tell it

00:14:59.426 --> 00:15:00.446 A:middle
So, with this, you can tell it

00:15:00.446 --> 00:15:01.606 A:middle
whether it should automatically

00:15:01.606 --> 00:15:03.536 A:middle
apply the insets, or just ignore

00:15:03.536 --> 00:15:04.206 A:middle
them, entirely.

00:15:04.496 --> 00:15:05.296 A:middle
So, that you can do the right

00:15:05.296 --> 00:15:06.326 A:middle
thing for your app, if it

00:15:06.326 --> 00:15:07.426 A:middle
happens to be the case that the

00:15:07.426 --> 00:15:08.986 A:middle
automatic behavior isn't exactly

00:15:08.986 --> 00:15:09.496 A:middle
what you want.

00:15:10.276 --> 00:15:11.296 A:middle
And if you want to find out

00:15:11.296 --> 00:15:13.316 A:middle
exactly what has happened, as

00:15:13.316 --> 00:15:14.096 A:middle
far as the ScrollView is

00:15:14.096 --> 00:15:16.656 A:middle
concerned, you can look at one

00:15:16.656 --> 00:15:18.156 A:middle
new property that can give you

00:15:18.156 --> 00:15:20.086 A:middle
the current value of what it has

00:15:20.086 --> 00:15:21.686 A:middle
computed from safeAreaInsets,

00:15:22.006 --> 00:15:23.726 A:middle
plus the sum of an contentInsets

00:15:23.726 --> 00:15:25.976 A:middle
that you have set, yourself with

00:15:25.976 --> 00:15:27.046 A:middle
the adjustedContentInset

00:15:27.046 --> 00:15:27.476 A:middle
property.

00:15:27.476 --> 00:15:29.146 A:middle
So, you can find out exactly how

00:15:29.146 --> 00:15:30.446 A:middle
much space the ScrollView thinks

00:15:30.446 --> 00:15:32.066 A:middle
it needs to have for scrollable

00:15:34.676 --> 00:15:34.846 A:middle
padding.

00:15:35.006 --> 00:15:36.136 A:middle
So, so far, we've focused a lot

00:15:36.136 --> 00:15:36.666 A:middle
on bars.

00:15:36.666 --> 00:15:37.886 A:middle
But there's also some other

00:15:37.886 --> 00:15:39.036 A:middle
refinements to other parts of

00:15:39.036 --> 00:15:39.826 A:middle
the UI, as well.

00:15:41.186 --> 00:15:42.396 A:middle
You'll find that UITableViews

00:15:42.396 --> 00:15:43.976 A:middle
across the system, how have a

00:15:43.976 --> 00:15:45.676 A:middle
new unified swipe delete

00:15:45.676 --> 00:15:47.566 A:middle
implementation that feels just

00:15:47.566 --> 00:15:48.476 A:middle
like what you're used to from

00:15:48.476 --> 00:15:49.416 A:middle
the Mail app.

00:15:50.666 --> 00:15:53.086 A:middle
It includes support for multiple

00:15:53.166 --> 00:15:55.236 A:middle
actions on both the left and

00:15:55.236 --> 00:15:57.366 A:middle
right swipes, as well as single

00:15:57.366 --> 00:15:58.796 A:middle
gesture activation of the

00:15:58.796 --> 00:16:00.486 A:middle
default one, with a full gesture

00:15:58.796 --> 00:16:00.486 A:middle
default one, with a full gesture

00:16:00.486 --> 00:16:01.676 A:middle
across the entire TableView.

00:16:02.386 --> 00:16:03.896 A:middle
It's also really easy to use in

00:16:03.896 --> 00:16:04.606 A:middle
your apps, as well.

00:16:05.356 --> 00:16:06.406 A:middle
So, with the new

00:16:06.406 --> 00:16:08.616 A:middle
UIContextualAction class, you

00:16:08.616 --> 00:16:09.856 A:middle
can specify the actions that you

00:16:09.856 --> 00:16:11.786 A:middle
want to be able to display in

00:16:11.826 --> 00:16:13.126 A:middle
the TableView's rows.

00:16:13.806 --> 00:16:14.946 A:middle
Just providing the style that

00:16:14.946 --> 00:16:15.896 A:middle
you'd like them to appear with,

00:16:16.266 --> 00:16:17.636 A:middle
and the title of the action, and

00:16:17.636 --> 00:16:19.176 A:middle
a block to invoke when they

00:16:19.176 --> 00:16:19.686 A:middle
should be run.

00:16:19.686 --> 00:16:21.436 A:middle
And then, with the new

00:16:21.436 --> 00:16:22.936 A:middle
UISwipeActionConfiguration

00:16:22.936 --> 00:16:24.406 A:middle
class, you can group together

00:16:24.696 --> 00:16:26.086 A:middle
multiple of these contextual

00:16:26.086 --> 00:16:28.466 A:middle
actions to display on the left

00:16:28.466 --> 00:16:29.826 A:middle
and right side of individual

00:16:29.826 --> 00:16:30.226 A:middle
rows.

00:16:30.516 --> 00:16:31.766 A:middle
And you can also specify whether

00:16:31.766 --> 00:16:32.646 A:middle
the first one should

00:16:32.646 --> 00:16:34.016 A:middle
automatically be invoked when a

00:16:34.016 --> 00:16:35.726 A:middle
full gesture occurs across the

00:16:35.726 --> 00:16:36.316 A:middle
entire row.

00:16:36.876 --> 00:16:38.786 A:middle
Yeah, it's very cool.

00:16:39.116 --> 00:16:41.116 A:middle
[ Applause ]

00:16:41.216 --> 00:16:42.496 A:middle
We do actually use this, now,

00:16:42.496 --> 00:16:43.146 A:middle
across the system.

00:16:43.146 --> 00:16:44.506 A:middle
You'll find more actions in many

00:16:44.506 --> 00:16:45.496 A:middle
more places than before.

00:16:45.866 --> 00:16:47.006 A:middle
But do keep in mind, though,

00:16:47.006 --> 00:16:48.296 A:middle
when you're using it, that any

00:16:48.386 --> 00:16:49.926 A:middle
actions that you put in the rows

00:16:49.926 --> 00:16:51.526 A:middle
behind the swipe actions will be

00:16:51.526 --> 00:16:52.906 A:middle
hard to discover than

00:16:52.906 --> 00:16:53.776 A:middle
something's that's visually

00:16:53.826 --> 00:16:55.406 A:middle
prominent in your application.

00:16:55.796 --> 00:16:56.836 A:middle
So, definitely use it as an

00:16:56.836 --> 00:16:58.506 A:middle
accelerator, but probably don't

00:16:58.506 --> 00:17:00.066 A:middle
make it the only way to perform

00:16:58.506 --> 00:17:00.066 A:middle
make it the only way to perform

00:17:00.066 --> 00:17:00.906 A:middle
a particular action.

00:17:02.156 --> 00:17:03.686 A:middle
So, outside of that, we've also

00:17:03.686 --> 00:17:05.006 A:middle
given you more control over the

00:17:05.076 --> 00:17:06.846 A:middle
placement of separators in your

00:17:06.846 --> 00:17:07.516 A:middle
UITableView.

00:17:07.996 --> 00:17:09.665 A:middle
So, there's a new property on

00:17:09.665 --> 00:17:10.606 A:middle
UITableView that lets you

00:17:10.606 --> 00:17:12.316 A:middle
control how separatorInsets that

00:17:12.316 --> 00:17:13.596 A:middle
you set on the TableView are

00:17:13.596 --> 00:17:14.106 A:middle
interpreted.

00:17:14.546 --> 00:17:15.646 A:middle
You can indicate that they are

00:17:15.806 --> 00:17:17.576 A:middle
absolute values so they're

00:17:17.576 --> 00:17:18.906 A:middle
relative from the edge of the

00:17:18.906 --> 00:17:19.326 A:middle
cell.

00:17:19.705 --> 00:17:21.016 A:middle
Or you can indicate that they're

00:17:21.016 --> 00:17:22.965 A:middle
meant to be deltas, offset from

00:17:22.965 --> 00:17:24.046 A:middle
where the TableView would have

00:17:24.046 --> 00:17:24.986 A:middle
otherwise placed the

00:17:24.986 --> 00:17:26.316 A:middle
separatorInsets had you not

00:17:26.316 --> 00:17:27.226 A:middle
specified anything.

00:17:27.726 --> 00:17:29.026 A:middle
This makes it a lot easier to

00:17:29.026 --> 00:17:30.186 A:middle
make sure that your separators

00:17:30.186 --> 00:17:31.486 A:middle
end at exactly where you want

00:17:31.486 --> 00:17:31.746 A:middle
them.

00:17:31.746 --> 00:17:32.946 A:middle
Regardless of the device that

00:17:32.946 --> 00:17:34.916 A:middle
you're running on or the size

00:17:34.916 --> 00:17:35.686 A:middle
class that you're currently

00:17:35.686 --> 00:17:35.976 A:middle
running in.

00:17:36.516 --> 00:17:41.136 A:middle
[ Applause ]

00:17:41.636 --> 00:17:43.276 A:middle
So, there's a ton of new UI

00:17:43.276 --> 00:17:44.046 A:middle
refinements.

00:17:44.416 --> 00:17:45.756 A:middle
And there's a whole session that

00:17:45.756 --> 00:17:47.096 A:middle
can tell you about this and many

00:17:47.096 --> 00:17:47.396 A:middle
more.

00:17:48.786 --> 00:17:50.266 A:middle
It's the Updating Your App for

00:17:50.396 --> 00:17:51.416 A:middle
iOS 11 session.

00:17:51.606 --> 00:17:52.386 A:middle
So, you should definitely check

00:17:52.386 --> 00:17:52.726 A:middle
that out.

00:17:52.726 --> 00:17:54.696 A:middle
And to give you some ideas on

00:17:54.696 --> 00:17:56.096 A:middle
the thinking behind the design

00:17:56.096 --> 00:17:57.716 A:middle
of some of these new updates and

00:17:57.716 --> 00:17:58.906 A:middle
how you can best integrate them

00:17:58.906 --> 00:18:00.766 A:middle
into your apps, definitely also,

00:17:58.906 --> 00:18:00.766 A:middle
into your apps, definitely also,

00:18:00.806 --> 00:18:02.116 A:middle
check out the design session,

00:18:02.406 --> 00:18:04.906 A:middle
Design Studio Shorts 2, later

00:18:04.906 --> 00:18:05.666 A:middle
this week, as well.

00:18:06.776 --> 00:18:08.186 A:middle
So, with that, I'll hand things

00:18:08.186 --> 00:18:09.336 A:middle
back to Eliza to tell you about

00:18:09.336 --> 00:18:10.646 A:middle
some more API enhancements

00:18:10.646 --> 00:18:11.556 A:middle
around Cocoa Touch.

00:18:11.786 --> 00:18:11.976 A:middle
Thanks.

00:18:12.516 --> 00:18:16.646 A:middle
[ Applause ]

00:18:17.146 --> 00:18:17.516 A:middle
All right.

00:18:17.516 --> 00:18:18.856 A:middle
I'd like to start with some of

00:18:18.856 --> 00:18:21.216 A:middle
the new APIs in Swift 4 and

00:18:21.216 --> 00:18:21.776 A:middle
Foundation.

00:18:22.466 --> 00:18:23.696 A:middle
So, there's actually a lot of

00:18:23.696 --> 00:18:25.316 A:middle
really exciting additions to

00:18:25.316 --> 00:18:25.846 A:middle
Swift 4.

00:18:26.146 --> 00:18:27.336 A:middle
And I'm only going to cover two

00:18:27.336 --> 00:18:28.046 A:middle
things, now.

00:18:28.456 --> 00:18:32.416 A:middle
The first is archiving Swift

00:18:32.416 --> 00:18:32.926 A:middle
native types.

00:18:33.456 --> 00:18:35.626 A:middle
So, if you've attempted to use

00:18:35.766 --> 00:18:36.926 A:middle
Swift 4 native types like

00:18:36.926 --> 00:18:38.886 A:middle
enumerations and structs with

00:18:38.886 --> 00:18:40.736 A:middle
code that needs to participate

00:18:40.736 --> 00:18:42.336 A:middle
in, for example, NSCoding,

00:18:42.656 --> 00:18:43.506 A:middle
you'll have found that this has

00:18:43.506 --> 00:18:44.556 A:middle
been historically quite

00:18:44.556 --> 00:18:47.186 A:middle
difficult to do.

00:18:47.526 --> 00:18:50.396 A:middle
Swift 4 solves that problem with

00:18:50.396 --> 00:18:51.586 A:middle
the introduction of a new

00:18:51.646 --> 00:18:53.056 A:middle
Codable protocol.

00:18:53.956 --> 00:18:56.176 A:middle
And as long as the underlying

00:18:56.176 --> 00:18:57.646 A:middle
types in your enumerations and

00:18:57.646 --> 00:18:59.276 A:middle
structs, are themselves codable,

00:18:59.736 --> 00:19:01.286 A:middle
all you have to do to adopt this

00:18:59.736 --> 00:19:01.286 A:middle
all you have to do to adopt this

00:19:01.286 --> 00:19:02.896 A:middle
is declare conformance to the

00:19:02.896 --> 00:19:03.396 A:middle
protocol.

00:19:03.686 --> 00:19:05.066 A:middle
And then, Swift handles the

00:19:05.066 --> 00:19:05.236 A:middle
rest.

00:19:05.476 --> 00:19:07.746 A:middle
So, that allows these native

00:19:07.746 --> 00:19:09.866 A:middle
types to participate easily in

00:19:10.166 --> 00:19:10.636 A:middle
NSCoding.

00:19:10.966 --> 00:19:12.376 A:middle
And Foundation has also added

00:19:12.436 --> 00:19:14.636 A:middle
support for archiving to JSON

00:19:14.706 --> 00:19:16.506 A:middle
and property lists.

00:19:18.756 --> 00:19:20.586 A:middle
Another really exciting edition

00:19:20.636 --> 00:19:23.686 A:middle
to Swift 4 is the new KeyPath

00:19:23.826 --> 00:19:25.426 A:middle
type, and a literal syntax, and

00:19:25.426 --> 00:19:26.536 A:middle
getters and setters that

00:19:26.536 --> 00:19:27.266 A:middle
correspond to it.

00:19:27.936 --> 00:19:29.696 A:middle
So, in the past, you specified

00:19:29.786 --> 00:19:31.966 A:middle
KeyPaths by hardcoding a String

00:19:32.036 --> 00:19:33.876 A:middle
in your code, which as a result,

00:19:33.876 --> 00:19:35.596 A:middle
couldn't be, if you had a typo

00:19:35.596 --> 00:19:36.646 A:middle
in it, it wouldn't be found at

00:19:36.646 --> 00:19:37.476 A:middle
compile time.

00:19:38.516 --> 00:19:39.776 A:middle
Now, there's a new literal

00:19:39.776 --> 00:19:42.516 A:middle
syntax, this /, that allows you

00:19:42.516 --> 00:19:44.146 A:middle
to construct a KeyPath, and this

00:19:44.146 --> 00:19:45.286 A:middle
is a strongly typed object.

00:19:45.716 --> 00:19:47.436 A:middle
So, if I have a presenter

00:19:47.436 --> 00:19:49.636 A:middle
object, for example, that has a

00:19:49.636 --> 00:19:50.746 A:middle
couple properties, a

00:19:50.746 --> 00:19:51.966 A:middle
copresenter, which is another

00:19:51.966 --> 00:19:53.506 A:middle
presenter, and a name.

00:19:53.586 --> 00:19:56.166 A:middle
I can construct a KeyPath object

00:19:56.586 --> 00:19:58.186 A:middle
representing my copresenter's

00:19:58.186 --> 00:19:58.626 A:middle
name.

00:19:59.246 --> 00:20:00.806 A:middle
And then, I can use this new

00:19:59.246 --> 00:20:00.806 A:middle
And then, I can use this new

00:20:00.806 --> 00:20:02.486 A:middle
square bracket getter notation

00:20:02.786 --> 00:20:04.356 A:middle
to access that property on one

00:20:04.356 --> 00:20:04.976 A:middle
of my presenter objects.

00:20:05.046 --> 00:20:07.306 A:middle
So, in this case, accessing it

00:20:07.306 --> 00:20:09.066 A:middle
on an object representing me

00:20:09.236 --> 00:20:10.886 A:middle
would return the String Josh.

00:20:12.156 --> 00:20:14.326 A:middle
You can also forego making the

00:20:14.326 --> 00:20:15.536 A:middle
KeyPath object as a separate

00:20:15.666 --> 00:20:17.206 A:middle
step and just use the literal

00:20:17.206 --> 00:20:18.266 A:middle
syntax in the getter.

00:20:18.266 --> 00:20:20.456 A:middle
And take advantage of Swift's

00:20:20.456 --> 00:20:22.346 A:middle
type inference, to leave off the

00:20:22.346 --> 00:20:23.636 A:middle
type, if you do it that way.

00:20:25.196 --> 00:20:26.166 A:middle
So, this is very cool.

00:20:26.566 --> 00:20:28.796 A:middle
And Foundation has taken it one

00:20:28.796 --> 00:20:32.086 A:middle
step further by introducing an

00:20:32.156 --> 00:20:35.166 A:middle
updated way of using KVO with

00:20:35.216 --> 00:20:37.066 A:middle
these KeyPaths.

00:20:37.106 --> 00:20:38.226 A:middle
So, this is a picture of what

00:20:38.226 --> 00:20:39.736 A:middle
you used to have to do to

00:20:39.736 --> 00:20:41.606 A:middle
observe changes to a property on

00:20:41.606 --> 00:20:42.386 A:middle
one of your objects.

00:20:42.676 --> 00:20:43.796 A:middle
It was a little bit involved.

00:20:44.156 --> 00:20:45.606 A:middle
You had to override a method.

00:20:45.756 --> 00:20:47.476 A:middle
And because your Superclass

00:20:47.476 --> 00:20:48.866 A:middle
might also override that method,

00:20:48.866 --> 00:20:50.706 A:middle
you had to use a context pointer

00:20:50.706 --> 00:20:52.406 A:middle
to disambiguate which one of you

00:20:52.406 --> 00:20:53.556 A:middle
is getting it at any given time.

00:20:53.746 --> 00:20:54.836 A:middle
And it was quite difficult to

00:20:54.836 --> 00:20:55.246 A:middle
get right.

00:20:55.986 --> 00:20:58.896 A:middle
So, new in iOS 11, we have

00:20:58.896 --> 00:20:59.996 A:middle
block-based KVO.

00:21:00.226 --> 00:21:01.196 A:middle
We're really excited about it.

00:21:02.516 --> 00:21:07.216 A:middle
[ Applause ]

00:21:07.716 --> 00:21:09.576 A:middle
If I want to observe the changes

00:21:09.576 --> 00:21:11.286 A:middle
to my copresenter, I'm not sure

00:21:11.286 --> 00:21:12.226 A:middle
why I would, since it never

00:21:12.226 --> 00:21:14.436 A:middle
seems to change, I can do so by

00:21:14.436 --> 00:21:15.756 A:middle
simply setting a block and

00:21:15.756 --> 00:21:17.156 A:middle
observing one of these KeyPaths

00:21:17.396 --> 00:21:18.306 A:middle
using a literal syntax.

00:21:18.706 --> 00:21:19.386 A:middle
So, that's very cool.

00:21:20.236 --> 00:21:21.746 A:middle
There's a lot of new topics in

00:21:21.746 --> 00:21:22.286 A:middle
Foundation.

00:21:22.286 --> 00:21:23.646 A:middle
And please check out their

00:21:23.646 --> 00:21:25.676 A:middle
related session, on Wednesday.

00:21:27.126 --> 00:21:28.946 A:middle
Okay, deferring system gestures.

00:21:28.946 --> 00:21:29.946 A:middle
And this is a funny case.

00:21:30.536 --> 00:21:33.696 A:middle
So, if you have an app that

00:21:33.696 --> 00:21:36.876 A:middle
maybe, shows some content, and

00:21:36.876 --> 00:21:38.776 A:middle
shows its status bar, the user

00:21:38.776 --> 00:21:41.246 A:middle
can swipe down from the top to

00:21:41.246 --> 00:21:42.456 A:middle
bring in the notification

00:21:42.456 --> 00:21:42.676 A:middle
center.

00:21:44.066 --> 00:21:45.756 A:middle
However, if you hid your status

00:21:45.756 --> 00:21:47.146 A:middle
bar and the user swipes down

00:21:47.146 --> 00:21:48.596 A:middle
from the top, they'll instead

00:21:48.596 --> 00:21:49.836 A:middle
see this tab UI.

00:21:51.416 --> 00:21:53.486 A:middle
And in that case, your app will

00:21:53.536 --> 00:21:54.876 A:middle
actually receive the touches

00:21:54.876 --> 00:21:55.976 A:middle
that are originating near the

00:21:55.976 --> 00:21:56.746 A:middle
top of the screen.

00:21:57.116 --> 00:21:59.616 A:middle
Now, we did this in iOS 5, when

00:21:59.616 --> 00:22:00.846 A:middle
we introduced the Notification

00:21:59.616 --> 00:22:00.846 A:middle
we introduced the Notification

00:22:00.846 --> 00:22:01.056 A:middle
Center.

00:22:01.056 --> 00:22:02.326 A:middle
Because we wanted to make sure

00:22:02.626 --> 00:22:04.846 A:middle
that apps that might need to see

00:22:04.846 --> 00:22:06.306 A:middle
touches near the edges of the

00:22:06.346 --> 00:22:07.706 A:middle
screen, could do so.

00:22:08.066 --> 00:22:09.296 A:middle
And we took the presence or

00:22:09.406 --> 00:22:10.906 A:middle
absence of the status bar as an

00:22:10.906 --> 00:22:13.176 A:middle
indication of whether your app

00:22:13.176 --> 00:22:14.066 A:middle
fell in that category.

00:22:14.996 --> 00:22:18.356 A:middle
So, then in iOS 7, we introduced

00:22:19.036 --> 00:22:21.286 A:middle
the Control Center with a swipe

00:22:21.286 --> 00:22:21.926 A:middle
up from the bottom.

00:22:21.926 --> 00:22:25.746 A:middle
If your app hid its status bar,

00:22:26.096 --> 00:22:27.846 A:middle
we used the same rule and we

00:22:27.846 --> 00:22:29.266 A:middle
would show the tab instead of

00:22:29.266 --> 00:22:29.886 A:middle
the control center.

00:22:29.886 --> 00:22:32.336 A:middle
Now, that made a little bit less

00:22:32.336 --> 00:22:33.576 A:middle
sense, because the status bar is

00:22:33.576 --> 00:22:34.686 A:middle
at the top of the screen, not

00:22:34.686 --> 00:22:35.166 A:middle
the bottom.

00:22:35.216 --> 00:22:36.676 A:middle
And so, the presence or absence

00:22:36.676 --> 00:22:37.546 A:middle
of the status bar shouldn't

00:22:37.546 --> 00:22:38.956 A:middle
really tell us very much about

00:22:38.956 --> 00:22:41.226 A:middle
what your app needs to see, in

00:22:41.226 --> 00:22:42.066 A:middle
terms of touches near the

00:22:42.066 --> 00:22:42.496 A:middle
bottom.

00:22:43.206 --> 00:22:46.026 A:middle
So, the other problem with the

00:22:46.286 --> 00:22:49.036 A:middle
status quo, here, is that your

00:22:49.036 --> 00:22:50.976 A:middle
users really want, when they

00:22:50.976 --> 00:22:52.056 A:middle
swipe near the edge of the

00:22:52.056 --> 00:22:54.476 A:middle
screen, to see the system UIs

00:22:54.996 --> 00:22:55.886 A:middle
components appear.

00:22:56.416 --> 00:22:57.626 A:middle
That's what they expect to have

00:22:57.626 --> 00:22:58.056 A:middle
happen.

00:22:58.056 --> 00:22:59.236 A:middle
So, unless your app actually

00:22:59.236 --> 00:23:01.396 A:middle
needs to get access to the

00:22:59.236 --> 00:23:01.396 A:middle
needs to get access to the

00:23:01.396 --> 00:23:02.706 A:middle
touches near the edge, it's a

00:23:02.706 --> 00:23:05.026 A:middle
better user experience to allow

00:23:05.026 --> 00:23:06.896 A:middle
those notifications that are in

00:23:06.896 --> 00:23:08.156 A:middle
Control Center to simply appear

00:23:08.156 --> 00:23:08.576 A:middle
right away.

00:23:09.376 --> 00:23:11.186 A:middle
So, in iOS 11, we're allowing

00:23:11.186 --> 00:23:12.906 A:middle
you to make this explicit by

00:23:13.136 --> 00:23:13.816 A:middle
adding this new

00:23:13.816 --> 00:23:16.396 A:middle
preferredScreenEdgesForDeferring

00:23:16.396 --> 00:23:17.656 A:middle
System Gestures method.

00:23:17.776 --> 00:23:19.086 A:middle
If you override it in your

00:23:19.086 --> 00:23:20.806 A:middle
viewControllers, you can return

00:23:20.936 --> 00:23:22.396 A:middle
a UIRectEdge, which is a

00:23:22.396 --> 00:23:23.886 A:middle
collection of different edges.

00:23:23.886 --> 00:23:25.476 A:middle
And we strongly encourage you to

00:23:25.476 --> 00:23:27.336 A:middle
only return edges that you want

00:23:27.336 --> 00:23:29.566 A:middle
to protect from system gestures.

00:23:29.566 --> 00:23:30.896 A:middle
If you really need to see

00:23:30.896 --> 00:23:32.786 A:middle
touches that are right on that

00:23:32.786 --> 00:23:33.256 A:middle
edge of the screen.

00:23:33.256 --> 00:23:34.126 A:middle
Because it will be a better

00:23:34.126 --> 00:23:36.566 A:middle
experience for you users to just

00:23:36.566 --> 00:23:38.586 A:middle
allow the system gestures to

00:23:38.626 --> 00:23:39.946 A:middle
happen as they normally would.

00:23:40.056 --> 00:23:41.376 A:middle
All right.

00:23:42.106 --> 00:23:43.816 A:middle
So, another topic where we've

00:23:43.816 --> 00:23:45.116 A:middle
made some improvements, is Auto

00:23:45.116 --> 00:23:45.416 A:middle
Layout.

00:23:45.416 --> 00:23:46.656 A:middle
And in particular, the

00:23:46.876 --> 00:23:49.066 A:middle
interaction of Auto Layout and

00:23:49.396 --> 00:23:51.956 A:middle
Scroll Views.

00:23:52.066 --> 00:23:58.016 A:middle
So, Scroll Views pose kind of a

00:23:58.016 --> 00:23:59.176 A:middle
challenge for Auto Layout,

00:23:59.176 --> 00:24:01.676 A:middle
because they represent two

00:23:59.176 --> 00:24:01.676 A:middle
because they represent two

00:24:01.676 --> 00:24:03.086 A:middle
different coordinate systems

00:24:03.086 --> 00:24:04.006 A:middle
mushed into one.

00:24:04.306 --> 00:24:05.546 A:middle
You have the frame of the Scroll

00:24:05.546 --> 00:24:06.946 A:middle
View, and then, you have the

00:24:06.946 --> 00:24:07.826 A:middle
coordinate system of its

00:24:07.856 --> 00:24:08.416 A:middle
content.

00:24:08.666 --> 00:24:10.076 A:middle
Which is often larger than the

00:24:10.076 --> 00:24:11.506 A:middle
Scroll View, and is almost

00:24:11.506 --> 00:24:12.956 A:middle
always offset relative to the

00:24:12.956 --> 00:24:13.856 A:middle
Scroll View's origin.

00:24:15.336 --> 00:24:16.566 A:middle
So, when you're composing your

00:24:16.566 --> 00:24:18.196 A:middle
constraints for Scroll Views,

00:24:18.816 --> 00:24:21.116 A:middle
Scroll View has a lot of

00:24:21.116 --> 00:24:22.456 A:middle
know-how kind of built in, where

00:24:22.456 --> 00:24:23.626 A:middle
it guesses what you probably

00:24:23.626 --> 00:24:23.986 A:middle
meant.

00:24:23.986 --> 00:24:24.976 A:middle
And it tries to do the right

00:24:25.146 --> 00:24:26.706 A:middle
thing based on the constraints

00:24:26.706 --> 00:24:27.456 A:middle
that you're composing.

00:24:27.936 --> 00:24:30.076 A:middle
But in iOS 11, we're allowing

00:24:30.076 --> 00:24:31.576 A:middle
you to make it really clear what

00:24:31.576 --> 00:24:33.286 A:middle
you mean and be completely

00:24:33.286 --> 00:24:34.646 A:middle
explicit about it, by

00:24:34.646 --> 00:24:36.016 A:middle
introducing two new Layout

00:24:36.046 --> 00:24:37.156 A:middle
guides on Scroll View.

00:24:37.416 --> 00:24:38.836 A:middle
A contentLayoutGuide and a

00:24:38.916 --> 00:24:39.636 A:middle
frameLayoutGuide.

00:24:39.636 --> 00:24:40.616 A:middle
So, now you can construct

00:24:40.616 --> 00:24:42.546 A:middle
constraints that specifically

00:24:42.546 --> 00:24:43.616 A:middle
represent one of these

00:24:43.616 --> 00:24:44.836 A:middle
coordinate systems or the other.

00:24:45.516 --> 00:24:47.536 A:middle
[ Applause ]

00:24:48.036 --> 00:24:48.956 A:middle
So, this allows you to do

00:24:48.956 --> 00:24:51.176 A:middle
something really easily, that

00:24:51.176 --> 00:24:51.946 A:middle
used to be hard.

00:24:52.366 --> 00:24:54.356 A:middle
So, sometimes when you have a

00:24:54.356 --> 00:24:55.606 A:middle
Scroll View and you have content

00:24:55.606 --> 00:24:56.556 A:middle
that can zoom in and out.

00:24:56.906 --> 00:24:58.426 A:middle
You want the content to come to

00:24:58.426 --> 00:25:00.476 A:middle
rest in the center of the Scroll

00:24:58.426 --> 00:25:00.476 A:middle
rest in the center of the Scroll

00:25:00.476 --> 00:25:02.136 A:middle
View as you're zooming out on

00:25:02.536 --> 00:25:02.736 A:middle
it.

00:25:02.736 --> 00:25:03.686 A:middle
Now, Josh and I, a couple of

00:25:03.686 --> 00:25:05.516 A:middle
years ago, spent one-third of

00:25:05.516 --> 00:25:07.556 A:middle
the WWDC presentation explaining

00:25:07.556 --> 00:25:08.776 A:middle
how you could get this effect in

00:25:08.776 --> 00:25:09.496 A:middle
your Scroll Views.

00:25:09.856 --> 00:25:11.646 A:middle
And up until recently, it was

00:25:11.646 --> 00:25:13.056 A:middle
actually really hard to do it

00:25:13.056 --> 00:25:13.726 A:middle
with Auto Layout.

00:25:14.416 --> 00:25:16.136 A:middle
But now, you can do it in two

00:25:16.136 --> 00:25:16.816 A:middle
lines of code.

00:25:17.246 --> 00:25:18.606 A:middle
All you need to do is set the

00:25:18.696 --> 00:25:21.046 A:middle
centerXAnchor of the imageView,

00:25:21.046 --> 00:25:22.496 A:middle
or whatever the content of your

00:25:22.496 --> 00:25:24.586 A:middle
Scroll View is, equal to the

00:25:24.586 --> 00:25:26.116 A:middle
contentLayoutGuide's

00:25:26.466 --> 00:25:27.276 A:middle
centerXAnchor.

00:25:27.276 --> 00:25:28.396 A:middle
And then, you would do the same

00:25:28.396 --> 00:25:29.936 A:middle
thing in the Y coordinate.

00:25:30.566 --> 00:25:33.616 A:middle
And then, this will just happen.

00:25:34.508 --> 00:25:36.508 A:middle
[ Applause ]

00:25:39.316 --> 00:25:39.916 A:middle
All right.

00:25:40.176 --> 00:25:41.456 A:middle
So, Dynamic Type.

00:25:41.796 --> 00:25:44.246 A:middle
Now, dynamic type is a really

00:25:44.246 --> 00:25:46.646 A:middle
important feature on iOS.

00:25:46.866 --> 00:25:48.056 A:middle
And here's a picture of a whole

00:25:48.056 --> 00:25:49.276 A:middle
bunch of different dynamic type

00:25:49.276 --> 00:25:50.916 A:middle
sizes that the user may

00:25:50.916 --> 00:25:52.226 A:middle
configure, and how we're

00:25:52.226 --> 00:25:53.836 A:middle
handling it in our own Calendar

00:25:53.836 --> 00:25:53.906 A:middle
app.

00:25:54.166 --> 00:25:55.576 A:middle
So, here's a small setting for

00:25:55.576 --> 00:25:56.276 A:middle
dynamic type.

00:25:56.936 --> 00:25:58.786 A:middle
Larger. Larger.

00:25:58.786 --> 00:25:59.416 A:middle
Very large.

00:25:59.416 --> 00:26:01.056 A:middle
And there even are larger

00:25:59.416 --> 00:26:01.056 A:middle
And there even are larger

00:26:01.056 --> 00:26:02.706 A:middle
accessibility dynamic type sizes

00:26:02.706 --> 00:26:04.476 A:middle
that can be selected.

00:26:04.886 --> 00:26:07.206 A:middle
So, this can pose a challenge in

00:26:07.206 --> 00:26:08.916 A:middle
a number of ways to support in

00:26:08.916 --> 00:26:09.656 A:middle
your applications.

00:26:09.866 --> 00:26:11.486 A:middle
But for users who have chosen a

00:26:11.486 --> 00:26:13.036 A:middle
nonstandard dynamic type size,

00:26:13.286 --> 00:26:14.596 A:middle
it's a really bad user

00:26:14.596 --> 00:26:16.056 A:middle
experience if your app doesn't

00:26:16.056 --> 00:26:17.476 A:middle
participate or honor their

00:26:17.536 --> 00:26:17.916 A:middle
selection.

00:26:18.476 --> 00:26:20.756 A:middle
So, we've made a few

00:26:20.756 --> 00:26:22.366 A:middle
improvements to make it easier

00:26:22.916 --> 00:26:24.106 A:middle
to do this correctly in your

00:26:24.106 --> 00:26:24.706 A:middle
applications.

00:26:25.016 --> 00:26:26.696 A:middle
And the first one has to do with

00:26:26.816 --> 00:26:27.446 A:middle
sizing your text.

00:26:28.396 --> 00:26:31.956 A:middle
So, suppose you have a 16-point

00:26:32.146 --> 00:26:33.516 A:middle
font that you're using for the

00:26:33.566 --> 00:26:34.366 A:middle
standard type size.

00:26:34.686 --> 00:26:36.986 A:middle
How do you decide what font to

00:26:36.986 --> 00:26:38.016 A:middle
use if the user has a

00:26:38.016 --> 00:26:39.166 A:middle
nonstandard dynamic type

00:26:39.586 --> 00:26:40.086 A:middle
selection?

00:26:41.086 --> 00:26:42.806 A:middle
The old way of doing this was

00:26:42.876 --> 00:26:44.286 A:middle
you could ask UIFont for the

00:26:44.336 --> 00:26:46.446 A:middle
preferred font for a given text

00:26:46.446 --> 00:26:47.036 A:middle
style, which.

00:26:47.036 --> 00:26:48.046 A:middle
And there's a number of text

00:26:48.046 --> 00:26:50.226 A:middle
styles, Body, Title, a variety

00:26:50.226 --> 00:26:51.056 A:middle
of them you can look up.

00:26:51.056 --> 00:26:52.266 A:middle
And this was pretty good,

00:26:52.746 --> 00:26:53.746 A:middle
because it would get you a good

00:26:53.746 --> 00:26:56.186 A:middle
font for the appropriate place

00:26:56.186 --> 00:26:56.936 A:middle
in your application.

00:26:57.186 --> 00:26:58.546 A:middle
But it was a little inflexible,

00:26:58.746 --> 00:26:59.806 A:middle
because what if you needed a

00:26:59.806 --> 00:27:00.426 A:middle
custom font?

00:26:59.806 --> 00:27:00.426 A:middle
custom font?

00:27:00.646 --> 00:27:01.426 A:middle
This is just going to give you

00:27:01.426 --> 00:27:03.286 A:middle
the system font, every time.

00:27:03.286 --> 00:27:04.086 A:middle
What if you wanted to use a

00:27:04.086 --> 00:27:06.006 A:middle
Monospace Number font in some

00:27:06.006 --> 00:27:06.706 A:middle
particular case?

00:27:06.986 --> 00:27:09.026 A:middle
Or just some font that, you

00:27:09.026 --> 00:27:10.616 A:middle
know, matched your branding a

00:27:10.616 --> 00:27:11.176 A:middle
little bit better.

00:27:11.706 --> 00:27:13.776 A:middle
In iOS 11, we're introducing a

00:27:13.946 --> 00:27:15.126 A:middle
new class that solves this

00:27:15.126 --> 00:27:16.716 A:middle
problem, called UIFontMetrics.

00:27:17.216 --> 00:27:18.796 A:middle
And the way you use it, is you

00:27:18.796 --> 00:27:21.096 A:middle
create a FontMetrics object for

00:27:21.096 --> 00:27:23.066 A:middle
the text style that you're

00:27:23.066 --> 00:27:23.776 A:middle
interested in.

00:27:24.936 --> 00:27:26.476 A:middle
You then, choose any font you

00:27:26.476 --> 00:27:28.506 A:middle
want, sized for the standard

00:27:28.506 --> 00:27:29.436 A:middle
dynamic type size.

00:27:29.516 --> 00:27:31.816 A:middle
And then, you can ask the

00:27:31.886 --> 00:27:33.556 A:middle
FontMetrics object to scale that

00:27:33.776 --> 00:27:35.426 A:middle
font given the user's current

00:27:35.426 --> 00:27:35.686 A:middle
settings.

00:27:35.686 --> 00:27:37.316 A:middle
And that gets you back a font,

00:27:37.686 --> 00:27:39.046 A:middle
any font you want, at the

00:27:39.046 --> 00:27:40.406 A:middle
appropriate size to display.

00:27:41.366 --> 00:27:42.166 A:middle
Yeah, this is really cool.

00:27:42.166 --> 00:27:47.236 A:middle
So, just that, alone, doesn't

00:27:47.236 --> 00:27:48.606 A:middle
completely solve the problem,

00:27:48.606 --> 00:27:50.426 A:middle
because imagine you have like a

00:27:50.546 --> 00:27:52.176 A:middle
custom button, or maybe a custom

00:27:52.176 --> 00:27:52.636 A:middle
bar.

00:27:52.756 --> 00:27:53.956 A:middle
And you're putting some text

00:27:53.956 --> 00:27:54.486 A:middle
inside it.

00:27:54.806 --> 00:27:56.106 A:middle
How tall do you want to make

00:27:56.106 --> 00:27:56.646 A:middle
that button?

00:27:57.446 --> 00:27:58.746 A:middle
If the user has a nonstandard

00:27:58.746 --> 00:28:00.656 A:middle
dynamic type setting, it might

00:27:58.746 --> 00:28:00.656 A:middle
dynamic type setting, it might

00:28:00.656 --> 00:28:02.106 A:middle
overrun the height that you've

00:28:02.106 --> 00:28:02.696 A:middle
made available.

00:28:03.026 --> 00:28:05.016 A:middle
So, UIFontMetrics has solved

00:28:05.016 --> 00:28:06.006 A:middle
this problem, as well, by

00:28:06.006 --> 00:28:07.406 A:middle
allowing you to scale arbitrary

00:28:07.406 --> 00:28:08.056 A:middle
layout values.

00:28:08.096 --> 00:28:10.456 A:middle
So, you create, once again, a

00:28:10.936 --> 00:28:11.926 A:middle
FontMetrics object.

00:28:12.306 --> 00:28:13.356 A:middle
You choose a height that would

00:28:13.356 --> 00:28:14.356 A:middle
look good at the standard

00:28:14.356 --> 00:28:15.836 A:middle
dynamic type size, and then you

00:28:15.836 --> 00:28:17.346 A:middle
can scale it based on the user's

00:28:17.346 --> 00:28:17.936 A:middle
current settings.

00:28:17.936 --> 00:28:20.136 A:middle
So, this is super useful for

00:28:20.136 --> 00:28:21.726 A:middle
your font sizing and layout.

00:28:22.556 --> 00:28:26.886 A:middle
Now, we also have an addition to

00:28:26.886 --> 00:28:28.446 A:middle
Auto Layout to support dynamic

00:28:28.486 --> 00:28:29.946 A:middle
type, which we're pretty excited

00:28:30.666 --> 00:28:30.806 A:middle
about.

00:28:31.496 --> 00:28:34.296 A:middle
Suppose that I have two labels

00:28:34.436 --> 00:28:36.016 A:middle
with different fonts, maybe,

00:28:36.276 --> 00:28:37.256 A:middle
laid out vertically.

00:28:37.496 --> 00:28:39.756 A:middle
And I've chosen a baseline to

00:28:39.756 --> 00:28:41.776 A:middle
baseline spacing that looks good

00:28:42.216 --> 00:28:43.836 A:middle
at this font size.

00:28:44.316 --> 00:28:48.146 A:middle
Now, my user might have chosen a

00:28:48.146 --> 00:28:50.546 A:middle
larger or a smaller dynamic type

00:28:50.606 --> 00:28:50.956 A:middle
size.

00:28:51.266 --> 00:28:53.586 A:middle
And as a result, the spacing

00:28:53.586 --> 00:28:56.146 A:middle
might actually look quite a bit

00:28:56.146 --> 00:28:58.516 A:middle
too tight or too loose.

00:28:58.516 --> 00:29:00.226 A:middle
So, with Auto Layout, there's

00:28:58.516 --> 00:29:00.226 A:middle
So, with Auto Layout, there's

00:29:00.226 --> 00:29:01.826 A:middle
now a solution for this problem,

00:29:02.106 --> 00:29:03.356 A:middle
which is that we're exposing a

00:29:03.356 --> 00:29:04.956 A:middle
way to access the system

00:29:04.956 --> 00:29:05.896 A:middle
recommended spacing.

00:29:06.806 --> 00:29:08.736 A:middle
And you do this by, first of

00:29:08.736 --> 00:29:09.806 A:middle
all, there's two ingredients.

00:29:09.806 --> 00:29:11.036 A:middle
You need to be doing baseline to

00:29:11.036 --> 00:29:12.296 A:middle
baseline spacing, in order to

00:29:12.296 --> 00:29:13.476 A:middle
inform Auto Layout that it

00:29:13.476 --> 00:29:14.746 A:middle
should take font sizes into

00:29:14.746 --> 00:29:15.566 A:middle
consideration.

00:29:15.566 --> 00:29:18.286 A:middle
So, I would make a topAnchor

00:29:18.286 --> 00:29:19.726 A:middle
using the lastBaselineAnchor of

00:29:19.726 --> 00:29:21.446 A:middle
my topLabel, and a bottomAnchor

00:29:21.446 --> 00:29:22.796 A:middle
using the firstBaselineAnchor of

00:29:22.796 --> 00:29:23.686 A:middle
my bottomLabel.

00:29:24.226 --> 00:29:25.716 A:middle
And then, I would use the new

00:29:25.716 --> 00:29:27.556 A:middle
constraintEqualToSystemSpacing

00:29:27.556 --> 00:29:30.326 A:middle
below method to ask Auto Layout

00:29:30.386 --> 00:29:32.156 A:middle
to choose a value that will look

00:29:32.156 --> 00:29:33.456 A:middle
good, given the font sizes that

00:29:33.456 --> 00:29:34.116 A:middle
are being displayed.

00:29:34.116 --> 00:29:35.596 A:middle
And that will cause the text to

00:29:35.596 --> 00:29:37.146 A:middle
adjust, so that's it's visually

00:29:37.256 --> 00:29:38.476 A:middle
pleasing at all of the different

00:29:38.476 --> 00:29:39.356 A:middle
dynamic type sizes.

00:29:39.536 --> 00:29:41.886 A:middle
And this works with the Visual

00:29:41.936 --> 00:29:42.896 A:middle
Format Language, as well.

00:29:43.136 --> 00:29:44.076 A:middle
Again, we have the same two

00:29:44.076 --> 00:29:44.676 A:middle
ingredients.

00:29:44.676 --> 00:29:46.276 A:middle
We have the system spacing,

00:29:46.276 --> 00:29:47.506 A:middle
which is provided by the dashes

00:29:47.506 --> 00:29:49.706 A:middle
in my Visual Format String, and

00:29:49.706 --> 00:29:51.146 A:middle
then, a new baseline to baseline

00:29:51.216 --> 00:29:52.326 A:middle
option to pass.

00:29:52.526 --> 00:29:54.816 A:middle
So, that the Auto Layout system

00:29:54.816 --> 00:29:56.406 A:middle
will know to do this work for

00:29:56.406 --> 00:29:56.616 A:middle
you.

00:29:56.836 --> 00:29:57.936 A:middle
And it also works with

00:29:57.936 --> 00:29:59.306 A:middle
UIStackView, again, passing

00:29:59.336 --> 00:29:59.976 A:middle
those same two options.

00:30:00.066 --> 00:30:03.316 A:middle
So, to find out more about

00:30:03.316 --> 00:30:05.486 A:middle
building your apps with dynamic

00:30:05.756 --> 00:30:07.366 A:middle
type, please check out this

00:30:07.366 --> 00:30:08.696 A:middle
associated session, on Friday.

00:30:09.206 --> 00:30:11.126 A:middle
A lot of good content, here.

00:30:12.896 --> 00:30:13.456 A:middle
All right.

00:30:14.006 --> 00:30:14.916 A:middle
Password Autofill.

00:30:14.916 --> 00:30:16.696 A:middle
This is my very favorite new

00:30:16.696 --> 00:30:17.966 A:middle
API, that we're introducing,

00:30:17.966 --> 00:30:18.346 A:middle
this year.

00:30:18.346 --> 00:30:19.606 A:middle
I'm really excited about it.

00:30:20.446 --> 00:30:21.706 A:middle
Some of you may have experienced

00:30:21.706 --> 00:30:23.016 A:middle
a workflow similar to this.

00:30:23.156 --> 00:30:24.466 A:middle
This is my standard workflow

00:30:24.466 --> 00:30:25.446 A:middle
when I sign up for a web

00:30:25.446 --> 00:30:25.716 A:middle
service.

00:30:25.716 --> 00:30:27.626 A:middle
I sign up for the web service of

00:30:27.876 --> 00:30:28.446 A:middle
some kind.

00:30:29.966 --> 00:30:32.706 A:middle
I allow Safari to suggest a

00:30:32.706 --> 00:30:34.006 A:middle
password, which I dutifully

00:30:34.006 --> 00:30:34.376 A:middle
accept.

00:30:34.376 --> 00:30:35.646 A:middle
It's a nice strong password that

00:30:35.646 --> 00:30:36.726 A:middle
I would never want type in a

00:30:36.726 --> 00:30:37.296 A:middle
million years.

00:30:38.146 --> 00:30:40.706 A:middle
Then, the service says, ''Hey,

00:30:40.706 --> 00:30:42.146 A:middle
download our app.'' And so, I

00:30:42.146 --> 00:30:42.716 A:middle
do.

00:30:43.026 --> 00:30:44.716 A:middle
I launch the app, and I'm

00:30:44.716 --> 00:30:46.836 A:middle
immediately presented with this

00:30:47.046 --> 00:30:48.896 A:middle
password entry field.

00:30:49.246 --> 00:30:50.556 A:middle
And of course, I've saved this

00:30:50.556 --> 00:30:52.276 A:middle
strong password in my iCloud

00:30:52.356 --> 00:30:52.896 A:middle
Keychain.

00:30:53.256 --> 00:30:54.046 A:middle
So, I don't know it.

00:30:54.656 --> 00:30:55.566 A:middle
So, I'm completely stuck.

00:30:55.966 --> 00:30:57.216 A:middle
So, I go back to the web

00:30:57.666 --> 00:30:59.036 A:middle
interface, and I say I forgot my

00:30:59.036 --> 00:30:59.536 A:middle
password.

00:30:59.536 --> 00:31:00.556 A:middle
And I reset the password to

00:30:59.536 --> 00:31:00.556 A:middle
And I reset the password to

00:31:00.556 --> 00:31:01.566 A:middle
something really easy like

00:31:01.696 --> 00:31:02.236 A:middle
Password.

00:31:02.556 --> 00:31:04.756 A:middle
And now, I go in and I log in

00:31:04.756 --> 00:31:06.226 A:middle
and I've got no security.

00:31:06.226 --> 00:31:07.296 A:middle
And I probably get hacked.

00:31:07.296 --> 00:31:08.826 A:middle
It's a disaster.

00:31:08.826 --> 00:31:10.316 A:middle
So, starting with iOS 11, this

00:31:10.316 --> 00:31:11.836 A:middle
nightmare is going to end.

00:31:12.506 --> 00:31:14.176 A:middle
We are introducing a really

00:31:14.176 --> 00:31:15.526 A:middle
great new feature, where when we

00:31:15.526 --> 00:31:16.696 A:middle
detect that you're showing a

00:31:16.696 --> 00:31:18.256 A:middle
username and password field,

00:31:18.756 --> 00:31:20.956 A:middle
this key UI will appear in the

00:31:20.956 --> 00:31:21.606 A:middle
candidate bar.

00:31:22.526 --> 00:31:26.306 A:middle
And if you click on it you get a

00:31:26.306 --> 00:31:28.086 A:middle
list of all of your saved

00:31:28.086 --> 00:31:29.806 A:middle
passwords in the iCloud

00:31:29.806 --> 00:31:30.326 A:middle
Keychain.

00:31:30.846 --> 00:31:31.946 A:middle
And you can go through and

00:31:31.946 --> 00:31:32.746 A:middle
select the right one.

00:31:33.006 --> 00:31:35.646 A:middle
Now, that already is a better

00:31:35.646 --> 00:31:36.976 A:middle
experience than the one where

00:31:36.976 --> 00:31:37.896 A:middle
you're completely stuck.

00:31:38.176 --> 00:31:39.376 A:middle
But it's not ideal.

00:31:39.376 --> 00:31:40.456 A:middle
For a lot of users, they're not

00:31:40.456 --> 00:31:41.506 A:middle
really going to know what to do

00:31:41.506 --> 00:31:41.926 A:middle
with this list.

00:31:41.926 --> 00:31:42.806 A:middle
If you're like me, you have a

00:31:42.806 --> 00:31:44.246 A:middle
lot of passwords on this list.

00:31:44.246 --> 00:31:45.386 A:middle
And scrolling through it to find

00:31:45.386 --> 00:31:46.306 A:middle
the right one might be a little

00:31:46.306 --> 00:31:47.076 A:middle
bit challenging.

00:31:48.216 --> 00:31:50.906 A:middle
So, there's a way that you can

00:31:51.176 --> 00:31:52.596 A:middle
make an even better experience

00:31:52.596 --> 00:31:53.446 A:middle
for your users, here.

00:31:53.806 --> 00:31:55.456 A:middle
Which is just a couple steps.

00:31:55.936 --> 00:31:58.596 A:middle
So, we what we want is for the

00:31:58.596 --> 00:32:01.076 A:middle
correct suggestion to appear in

00:31:58.596 --> 00:32:01.076 A:middle
correct suggestion to appear in

00:32:01.076 --> 00:32:02.206 A:middle
the candidate bar, by default.

00:32:02.386 --> 00:32:03.456 A:middle
And then, you don't even need to

00:32:03.456 --> 00:32:04.886 A:middle
mess around with finding the

00:32:04.886 --> 00:32:06.536 A:middle
right value in that list.

00:32:06.536 --> 00:32:08.176 A:middle
And to do that, it's just two

00:32:08.176 --> 00:32:08.556 A:middle
things.

00:32:09.116 --> 00:32:10.986 A:middle
You have to add one entitlement

00:32:10.986 --> 00:32:11.866 A:middle
to your application, and a

00:32:11.996 --> 00:32:14.076 A:middle
couple of lines of JSON to your

00:32:14.076 --> 00:32:14.546 A:middle
web service.

00:32:14.546 --> 00:32:15.896 A:middle
And you might have already done

00:32:15.896 --> 00:32:17.376 A:middle
these steps to support universal

00:32:17.376 --> 00:32:17.646 A:middle
links.

00:32:18.316 --> 00:32:19.916 A:middle
So, if you have done that, then

00:32:19.916 --> 00:32:21.456 A:middle
this really good UI will appear.

00:32:21.456 --> 00:32:23.806 A:middle
And when I tap on it, I simply

00:32:23.806 --> 00:32:25.666 A:middle
get my password filled in.

00:32:25.926 --> 00:32:27.856 A:middle
So, please for my sake, adopt

00:32:27.856 --> 00:32:28.586 A:middle
this in your apps.

00:32:28.586 --> 00:32:29.656 A:middle
We're really excited about it.

00:32:29.866 --> 00:32:31.356 A:middle
And go to the associated

00:32:31.356 --> 00:32:32.086 A:middle
session, tomorrow.

00:32:33.516 --> 00:32:38.500 A:middle
[ Applause ]

00:32:41.046 --> 00:32:41.346 A:middle
All right.

00:32:41.346 --> 00:32:42.676 A:middle
There's a couple of improvements

00:32:42.676 --> 00:32:44.446 A:middle
to Asset Catalogs that we're

00:32:44.446 --> 00:32:45.476 A:middle
excited to tell you about.

00:32:46.726 --> 00:32:48.266 A:middle
Colors can now be added to Asset

00:32:48.446 --> 00:32:50.596 A:middle
Catalogs, as well as icons.

00:32:50.866 --> 00:32:52.146 A:middle
So, you can now make named

00:32:52.306 --> 00:32:52.676 A:middle
colors.

00:32:53.516 --> 00:32:56.966 A:middle
[ Applause ]

00:32:57.466 --> 00:32:59.776 A:middle
And this allows you to easily

00:32:59.776 --> 00:33:02.056 A:middle
support wide gamut colors on the

00:32:59.776 --> 00:33:02.056 A:middle
support wide gamut colors on the

00:33:02.056 --> 00:33:03.306 A:middle
appropriate devices.

00:33:03.716 --> 00:33:06.006 A:middle
So, you can create a wide gamut

00:33:06.086 --> 00:33:07.336 A:middle
color and add it to your Asset

00:33:07.336 --> 00:33:07.726 A:middle
Catalog.

00:33:07.726 --> 00:33:08.806 A:middle
You can access it by name.

00:33:08.806 --> 00:33:09.646 A:middle
And you can also, make a

00:33:09.646 --> 00:33:12.086 A:middle
fallback color to be used in the

00:33:12.086 --> 00:33:13.546 A:middle
sRGB Color Space for devices

00:33:13.546 --> 00:33:14.696 A:middle
that don't support wide gamut.

00:33:14.696 --> 00:33:15.926 A:middle
And you can now, do the same

00:33:15.926 --> 00:33:16.986 A:middle
thing with your app icons.

00:33:17.326 --> 00:33:18.936 A:middle
So, app icons can now include

00:33:18.936 --> 00:33:20.396 A:middle
wide gamut colors, which will be

00:33:20.396 --> 00:33:21.806 A:middle
displayed on devices that

00:33:21.806 --> 00:33:24.606 A:middle
support the P3 Color Space.

00:33:24.816 --> 00:33:27.166 A:middle
In addition, you may find that,

00:33:27.596 --> 00:33:28.516 A:middle
well, at least it's true for

00:33:28.516 --> 00:33:30.586 A:middle
certain apps, that the icons are

00:33:30.586 --> 00:33:32.396 A:middle
actually the largest aspect of

00:33:32.396 --> 00:33:33.286 A:middle
your app's footprint.

00:33:33.726 --> 00:33:35.696 A:middle
And so, by incorporating them in

00:33:35.876 --> 00:33:37.406 A:middle
Asset Catalogs, we're now able

00:33:37.406 --> 00:33:40.156 A:middle
to have them participate in the

00:33:40.326 --> 00:33:42.016 A:middle
app thinning, which will

00:33:42.096 --> 00:33:43.846 A:middle
significantly lower your app's

00:33:43.846 --> 00:33:44.186 A:middle
footprint.

00:33:44.346 --> 00:33:45.686 A:middle
So, this is a really exciting

00:33:45.686 --> 00:33:46.506 A:middle
thing to adopt, and it will be

00:33:46.506 --> 00:33:47.746 A:middle
adopted by default in new

00:33:47.746 --> 00:33:49.066 A:middle
projects in iOS 11.

00:33:49.066 --> 00:33:52.006 A:middle
You can opt into it in existing

00:33:52.006 --> 00:33:53.486 A:middle
projects by adding a key to your

00:33:53.486 --> 00:33:54.026 A:middle
Info.plist.

00:33:54.686 --> 00:33:58.406 A:middle
So, PDF-backed images.

00:33:58.486 --> 00:33:59.356 A:middle
These are something that have

00:33:59.356 --> 00:34:00.846 A:middle
been possible for a little

00:33:59.356 --> 00:34:00.846 A:middle
been possible for a little

00:34:00.846 --> 00:34:01.366 A:middle
while, now.

00:34:01.466 --> 00:34:02.746 A:middle
But there's a new option when

00:34:02.746 --> 00:34:04.236 A:middle
you add an image to your Asset

00:34:04.236 --> 00:34:05.726 A:middle
Catalog, that's PDF-backed.

00:34:06.306 --> 00:34:07.906 A:middle
You're given the option to

00:34:07.906 --> 00:34:08.946 A:middle
preserve the vector data.

00:34:09.196 --> 00:34:10.985 A:middle
So, this is new in iOS 11.

00:34:10.985 --> 00:34:12.016 A:middle
And it's a really powerful

00:34:12.016 --> 00:34:12.386 A:middle
feature.

00:34:12.866 --> 00:34:14.686 A:middle
If you click that box, the

00:34:14.686 --> 00:34:16.826 A:middle
vector data will be shipped with

00:34:16.826 --> 00:34:17.556 A:middle
your application.

00:34:17.946 --> 00:34:19.735 A:middle
Which, on the one hand, makes

00:34:19.815 --> 00:34:20.656 A:middle
your application a little bit

00:34:20.656 --> 00:34:22.226 A:middle
larger, because the vector data

00:34:22.266 --> 00:34:23.326 A:middle
takes up some space.

00:34:23.846 --> 00:34:25.275 A:middle
But on the other hand, will give

00:34:25.275 --> 00:34:26.956 A:middle
you the opportunity to scale

00:34:26.956 --> 00:34:27.956 A:middle
these images, which might be

00:34:27.956 --> 00:34:29.315 A:middle
useful in a number of different

00:34:29.315 --> 00:34:29.866 A:middle
situations.

00:34:29.866 --> 00:34:31.376 A:middle
So, one is, if you know that

00:34:31.376 --> 00:34:32.616 A:middle
this particular image is going

00:34:32.616 --> 00:34:34.146 A:middle
to be used at multiple sizes.

00:34:34.146 --> 00:34:37.496 A:middle
But that might be less obvious.

00:34:37.636 --> 00:34:39.886 A:middle
So, one case is a symbolic glyph

00:34:39.926 --> 00:34:41.446 A:middle
that should resize with dynamic

00:34:41.476 --> 00:34:41.696 A:middle
type.

00:34:41.946 --> 00:34:42.826 A:middle
Since we're thinking about

00:34:42.826 --> 00:34:44.295 A:middle
dynamic type, you should also be

00:34:44.295 --> 00:34:45.666 A:middle
thinking about having glyphs

00:34:45.706 --> 00:34:47.906 A:middle
that are appearing next to type

00:34:48.216 --> 00:34:49.235 A:middle
resize appropriately.

00:34:49.235 --> 00:34:52.996 A:middle
Another case that's really not

00:34:52.996 --> 00:34:54.596 A:middle
obvious, is tab bar images.

00:34:54.786 --> 00:34:56.386 A:middle
So, you're probably used to your

00:34:56.386 --> 00:34:58.476 A:middle
tab bar images appearing at just

00:34:58.476 --> 00:34:59.256 A:middle
a single size.

00:34:59.746 --> 00:35:01.476 A:middle
But there's a really great

00:34:59.746 --> 00:35:01.476 A:middle
But there's a really great

00:35:01.476 --> 00:35:03.986 A:middle
accessibility feature that we

00:35:03.986 --> 00:35:05.936 A:middle
strongly recommend supporting,

00:35:06.446 --> 00:35:08.716 A:middle
that allows for user that have

00:35:08.716 --> 00:35:11.626 A:middle
turned their dynamic type size

00:35:12.446 --> 00:35:12.526 A:middle
up.

00:35:12.786 --> 00:35:14.706 A:middle
When they tap and hold on a tab

00:35:14.706 --> 00:35:17.006 A:middle
bar image, a larger version

00:35:17.006 --> 00:35:18.166 A:middle
appears in the center of the

00:35:18.216 --> 00:35:19.056 A:middle
screen in a Hud.

00:35:19.806 --> 00:35:21.236 A:middle
And as you swipe your finger you

00:35:21.236 --> 00:35:22.556 A:middle
can see different ones.

00:35:23.006 --> 00:35:24.696 A:middle
So, you can support this in your

00:35:25.036 --> 00:35:26.916 A:middle
apps by returning a different

00:35:26.916 --> 00:35:28.296 A:middle
image to use for this purpose.

00:35:28.606 --> 00:35:31.226 A:middle
But if you use PDF-backed images

00:35:31.226 --> 00:35:33.236 A:middle
and preserve the vector data for

00:35:33.236 --> 00:35:34.376 A:middle
your tab bar images, it will

00:35:34.376 --> 00:35:35.586 A:middle
just happen by default.

00:35:35.856 --> 00:35:37.116 A:middle
So, we really recommend doing

00:35:37.346 --> 00:35:38.936 A:middle
that to increase the usability

00:35:38.936 --> 00:35:40.356 A:middle
of your app across all users.

00:35:40.396 --> 00:35:40.546 A:middle
All right.

00:35:40.996 --> 00:35:45.076 A:middle
And the final topic that I want

00:35:45.076 --> 00:35:46.496 A:middle
to discuss, is ProMotion.

00:35:46.996 --> 00:35:49.456 A:middle
So, as you heard, on certain new

00:35:49.686 --> 00:35:51.306 A:middle
iPads we're increasing the

00:35:51.306 --> 00:35:52.536 A:middle
refresh rate of the screen.

00:35:52.866 --> 00:35:55.356 A:middle
And you can find out what the

00:35:55.356 --> 00:35:56.586 A:middle
screen's refresh rate is on a

00:35:56.586 --> 00:35:58.176 A:middle
particular device, by querying

00:35:58.376 --> 00:35:59.796 A:middle
this property on UIScreen.

00:36:03.456 --> 00:36:05.806 A:middle
So, once you've queried it, what

00:36:05.806 --> 00:36:06.496 A:middle
should you do with that

00:36:06.496 --> 00:36:07.126 A:middle
information?

00:36:08.106 --> 00:36:09.736 A:middle
Well, it depends on what kind of

00:36:09.736 --> 00:36:10.306 A:middle
app you're building.

00:36:10.676 --> 00:36:11.846 A:middle
So, if you have a UIKit

00:36:11.846 --> 00:36:13.246 A:middle
application, the answer is

00:36:13.246 --> 00:36:14.526 A:middle
actually you really shouldn't do

00:36:14.526 --> 00:36:15.746 A:middle
much with this.

00:36:15.796 --> 00:36:17.146 A:middle
The crucial thing for a UIKit

00:36:17.146 --> 00:36:18.566 A:middle
application, is you just want to

00:36:18.716 --> 00:36:20.276 A:middle
optimize your drawing code.

00:36:20.526 --> 00:36:21.756 A:middle
You just want to make sure that

00:36:21.756 --> 00:36:23.246 A:middle
you're getting your frame rate

00:36:23.246 --> 00:36:24.706 A:middle
as high as you can on all

00:36:24.706 --> 00:36:25.176 A:middle
devices.

00:36:25.176 --> 00:36:26.516 A:middle
And to do that, we strongly

00:36:26.516 --> 00:36:27.746 A:middle
recommend using Instruments.

00:36:28.016 --> 00:36:29.226 A:middle
You can check out the frame rate

00:36:29.226 --> 00:36:30.436 A:middle
that you're achieving during

00:36:30.436 --> 00:36:31.646 A:middle
scrolling and animations.

00:36:31.646 --> 00:36:32.766 A:middle
And find out what might be

00:36:32.766 --> 00:36:33.536 A:middle
bogging you down.

00:36:33.786 --> 00:36:35.006 A:middle
And if you do that, then it will

00:36:35.006 --> 00:36:36.486 A:middle
really improve the user

00:36:36.486 --> 00:36:37.776 A:middle
experience on your app across

00:36:37.776 --> 00:36:39.806 A:middle
all devices, including ones with

00:36:39.806 --> 00:36:41.946 A:middle
a higher screen refresh rate.

00:36:42.516 --> 00:36:44.136 A:middle
The situation is more

00:36:44.136 --> 00:36:46.996 A:middle
complicated for Metal apps.

00:36:46.996 --> 00:36:50.316 A:middle
So, for apps that are using

00:36:50.316 --> 00:36:52.036 A:middle
Metal, you're going to want to

00:36:52.086 --> 00:36:54.116 A:middle
think more about what refresh

00:36:54.116 --> 00:36:55.506 A:middle
rates to try to hit in different

00:36:55.506 --> 00:36:56.116 A:middle
situations.

00:36:56.646 --> 00:36:59.596 A:middle
So, your goal here, is to ensure

00:36:59.596 --> 00:37:00.666 A:middle
smooth playback.

00:36:59.596 --> 00:37:00.666 A:middle
smooth playback.

00:37:00.666 --> 00:37:02.306 A:middle
And in the past, you might have

00:37:02.306 --> 00:37:04.706 A:middle
been actually pessimistically

00:37:04.706 --> 00:37:06.486 A:middle
clamping your refresh rate to 30

00:37:06.486 --> 00:37:07.976 A:middle
frames per second to make sure

00:37:07.976 --> 00:37:09.156 A:middle
that the frame rate is smooth.

00:37:09.386 --> 00:37:10.926 A:middle
But now, on devices that support

00:37:10.926 --> 00:37:12.296 A:middle
higher screen refresh rates, you

00:37:12.296 --> 00:37:13.886 A:middle
could, for example, clamp to 40

00:37:13.886 --> 00:37:14.846 A:middle
frames per second to get a

00:37:14.846 --> 00:37:16.146 A:middle
better smooth playback

00:37:16.146 --> 00:37:17.786 A:middle
experience, since 40 divides

00:37:17.786 --> 00:37:19.696 A:middle
evenly into 120 frames per

00:37:20.136 --> 00:37:20.416 A:middle
second.

00:37:20.416 --> 00:37:21.506 A:middle
If you're showing cinematic

00:37:21.626 --> 00:37:23.686 A:middle
content, you might want to

00:37:23.686 --> 00:37:25.206 A:middle
choose a refresh rate of 24

00:37:25.206 --> 00:37:26.346 A:middle
frames per second, which now

00:37:26.346 --> 00:37:28.846 A:middle
also, will look really smooth on

00:37:28.846 --> 00:37:29.436 A:middle
these devices.

00:37:29.806 --> 00:37:31.176 A:middle
So, a lot of options, here.

00:37:31.406 --> 00:37:33.636 A:middle
You probably want to think about

00:37:33.636 --> 00:37:34.516 A:middle
the content that you're

00:37:34.516 --> 00:37:36.146 A:middle
displaying to conserve power.

00:37:36.146 --> 00:37:37.526 A:middle
You don't want to be hitting 120

00:37:37.526 --> 00:37:40.456 A:middle
fps all the time.

00:37:40.566 --> 00:37:42.366 A:middle
And finally, you can use XCode's

00:37:42.366 --> 00:37:44.696 A:middle
GPU Report feature to look at

00:37:44.776 --> 00:37:46.056 A:middle
the performance characteristics

00:37:46.056 --> 00:37:47.076 A:middle
of your Metal applications.

00:37:47.136 --> 00:37:50.286 A:middle
There is a session on

00:37:50.496 --> 00:37:53.556 A:middle
Introducing Metal 2, that we

00:37:53.556 --> 00:37:54.706 A:middle
strongly recommend going to.

00:37:55.136 --> 00:37:57.776 A:middle
And that's what's new.

00:37:57.776 --> 00:37:59.376 A:middle
So, I'm going to hand it back

00:37:59.376 --> 00:37:59.896 A:middle
over to Josh.

00:38:00.086 --> 00:38:00.756 A:middle
Thanks, very much.

00:38:01.516 --> 00:38:06.386 A:middle
[ Applause ]

00:38:06.886 --> 00:38:08.146 A:middle
&gt;&gt; Thanks, Eliza.

00:38:08.216 --> 00:38:09.226 A:middle
We got a late start, this

00:38:09.226 --> 00:38:09.576 A:middle
morning.

00:38:09.576 --> 00:38:10.396 A:middle
So, we're going to have a really

00:38:10.396 --> 00:38:11.376 A:middle
quick end, right now.

00:38:11.736 --> 00:38:13.446 A:middle
I have one last topic I wanted

00:38:13.446 --> 00:38:14.436 A:middle
to talk about, really quickly,

00:38:14.726 --> 00:38:15.786 A:middle
and I promise this is really

00:38:15.786 --> 00:38:16.016 A:middle
quick.

00:38:16.166 --> 00:38:18.546 A:middle
So, Localization is a really key

00:38:18.546 --> 00:38:20.126 A:middle
way to broaden the reach of your

00:38:20.126 --> 00:38:20.226 A:middle
apps.

00:38:21.196 --> 00:38:21.906 A:middle
And for many people,

00:38:21.906 --> 00:38:23.976 A:middle
Localization can seem synonymous

00:38:23.976 --> 00:38:26.046 A:middle
with translation.

00:38:26.166 --> 00:38:27.146 A:middle
But it's actually more than

00:38:27.146 --> 00:38:27.446 A:middle
that.

00:38:27.736 --> 00:38:29.496 A:middle
And one quick thing I just want

00:38:29.496 --> 00:38:32.186 A:middle
to mention is considering

00:38:32.186 --> 00:38:33.396 A:middle
layouts that are important for

00:38:33.396 --> 00:38:34.916 A:middle
localized applications.

00:38:35.366 --> 00:38:36.336 A:middle
So, take a look at this, really

00:38:36.336 --> 00:38:36.726 A:middle
quickly.

00:38:37.756 --> 00:38:38.896 A:middle
For many of you, this probably

00:38:38.896 --> 00:38:40.056 A:middle
feels really comfortable.

00:38:40.516 --> 00:38:42.816 A:middle
But if you now, keep watching.

00:38:42.816 --> 00:38:43.816 A:middle
I'm going to change it, and

00:38:43.976 --> 00:38:45.116 A:middle
hopefully, make you feel kind of

00:38:45.116 --> 00:38:45.716 A:middle
uncomfortable.

00:38:46.366 --> 00:38:48.716 A:middle
Now, this probably seems really

00:38:48.716 --> 00:38:49.126 A:middle
backwards.

00:38:49.836 --> 00:38:51.506 A:middle
Labels are aligned weird, arrows

00:38:51.506 --> 00:38:52.476 A:middle
are in the wrong direction,

00:38:52.716 --> 00:38:54.326 A:middle
animations happen the wrong way.

00:38:54.976 --> 00:38:56.436 A:middle
But believe it or not, this is

00:38:56.436 --> 00:38:57.596 A:middle
actually a real layout.

00:38:57.976 --> 00:38:58.906 A:middle
You just don't usually see it

00:38:58.906 --> 00:38:59.626 A:middle
with English.

00:38:59.886 --> 00:39:01.106 A:middle
You usually see it with a

00:38:59.886 --> 00:39:01.106 A:middle
You usually see it with a

00:39:01.106 --> 00:39:02.016 A:middle
language that reads right to

00:39:02.016 --> 00:39:03.536 A:middle
left, like Arabic or Hebrew.

00:39:04.216 --> 00:39:05.526 A:middle
Now, for a user that expects to

00:39:05.526 --> 00:39:07.266 A:middle
see this, this feels really

00:39:07.266 --> 00:39:07.736 A:middle
natural.

00:39:08.266 --> 00:39:09.396 A:middle
So, if you felt comfortable with

00:39:09.396 --> 00:39:11.286 A:middle
this and uncomfortable with

00:39:11.286 --> 00:39:11.786 A:middle
this.

00:39:12.096 --> 00:39:13.266 A:middle
Then, now you know what someone

00:39:13.266 --> 00:39:14.676 A:middle
whose native language reads

00:39:14.676 --> 00:39:16.426 A:middle
right to left feels like if

00:39:16.426 --> 00:39:17.486 A:middle
they're not presented with this.

00:39:18.266 --> 00:39:19.206 A:middle
Now, you want to make sure if

00:39:19.206 --> 00:39:21.046 A:middle
you're localizing, that you also

00:39:21.156 --> 00:39:23.576 A:middle
support RTL in your layouts, if

00:39:23.576 --> 00:39:24.406 A:middle
you're going to support RTL

00:39:24.406 --> 00:39:25.016 A:middle
languages.

00:39:25.186 --> 00:39:26.416 A:middle
Because the system is doing this

00:39:26.466 --> 00:39:27.206 A:middle
all over the place.

00:39:27.406 --> 00:39:28.746 A:middle
Many teams have been spending a

00:39:28.746 --> 00:39:30.106 A:middle
lot of time to make sure that

00:39:30.136 --> 00:39:30.646 A:middle
this is right.

00:39:30.646 --> 00:39:32.416 A:middle
And in fact, UIKit does a lot of

00:39:32.416 --> 00:39:32.906 A:middle
it for you.

00:39:33.236 --> 00:39:34.526 A:middle
So, navigation controllers and

00:39:34.526 --> 00:39:35.566 A:middle
switches will switch

00:39:35.566 --> 00:39:36.286 A:middle
automatically.

00:39:36.616 --> 00:39:37.646 A:middle
But if you're building your own

00:39:37.646 --> 00:39:39.676 A:middle
custom views, you definitely

00:39:39.676 --> 00:39:41.506 A:middle
want to take a look at your

00:39:41.606 --> 00:39:43.166 A:middle
layouts in RTL languages, as

00:39:43.166 --> 00:39:44.516 A:middle
well, if you localize in those

00:39:44.516 --> 00:39:44.996 A:middle
languages.

00:39:44.996 --> 00:39:47.486 A:middle
So, that was my really quick

00:39:47.486 --> 00:39:48.416 A:middle
wrap-up on that.

00:39:48.416 --> 00:39:49.356 A:middle
Lots more information about

00:39:49.356 --> 00:39:50.916 A:middle
localization in the Localization

00:39:50.916 --> 00:39:52.466 A:middle
Guide on developer.apple.com.

00:39:53.096 --> 00:39:54.496 A:middle
And of course, there's plenty

00:39:54.496 --> 00:39:57.306 A:middle
more info available from this

00:39:57.306 --> 00:39:59.286 A:middle
session, and a ton of related

00:39:59.286 --> 00:39:59.976 A:middle
sessions, all week.

00:40:00.326 --> 00:40:01.496 A:middle
The four Drag and Drop sessions

00:40:01.496 --> 00:40:02.136 A:middle
are going to be great.

00:40:02.176 --> 00:40:03.086 A:middle
You definitely should check them

00:40:03.776 --> 00:40:04.126 A:middle
out.

00:40:04.126 --> 00:40:05.776 A:middle
Updating Your App for iOS 11 is

00:40:05.776 --> 00:40:06.736 A:middle
really going to be a great

00:40:06.736 --> 00:40:07.446 A:middle
session, as well.

00:40:07.836 --> 00:40:09.226 A:middle
And make Eliza happy and go

00:40:09.226 --> 00:40:10.356 A:middle
check out the Introducing

00:40:10.356 --> 00:40:12.026 A:middle
Password Autofill for Your Apps.

00:40:12.026 --> 00:40:12.856 A:middle
And implement that.

00:40:13.156 --> 00:40:13.876 A:middle
Thanks, very much.

00:40:13.876 --> 00:40:14.526 A:middle
And enjoy the week.

00:40:15.516 --> 00:40:21.500 A:middle
[ Applause ]
