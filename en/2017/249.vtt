WEBVTT

00:00:18.046 --> 00:00:19.576 A:middle
&gt;&gt; Hello. My name is Stewart

00:00:19.576 --> 00:00:21.036 A:middle
Montgomery and in this session

00:00:21.036 --> 00:00:22.486 A:middle
we'll discuss how your app can

00:00:22.486 --> 00:00:24.806 A:middle
use new APIs and iOS 11 to

00:00:24.806 --> 00:00:27.126 A:middle
filter out unwanted SMS and MMS

00:00:27.126 --> 00:00:29.056 A:middle
messages and help users avoid an

00:00:29.056 --> 00:00:30.026 A:middle
increasing nuisance.

00:00:31.776 --> 00:00:33.316 A:middle
Before we dive in, let's take a

00:00:33.316 --> 00:00:34.496 A:middle
look at what happens when we

00:00:34.496 --> 00:00:36.476 A:middle
receive an unwanted SMS message

00:00:36.476 --> 00:00:37.906 A:middle
in iOS 10.3.

00:00:41.046 --> 00:00:42.066 A:middle
Here we see what is pretty

00:00:42.066 --> 00:00:44.066 A:middle
obviously an unwanted, spam SMS.

00:00:45.296 --> 00:00:46.666 A:middle
Messages like this are annoying

00:00:46.666 --> 00:00:48.346 A:middle
for users since they play a tone

00:00:48.346 --> 00:00:49.856 A:middle
or vibrate just like a normal

00:00:49.856 --> 00:00:50.536 A:middle
message and distract from

00:00:50.536 --> 00:00:50.976 A:middle
whatever you're doing.

00:00:55.576 --> 00:00:57.116 A:middle
And if I launch messages it's

00:00:57.116 --> 00:00:58.656 A:middle
right there at the top, mixed in

00:00:58.656 --> 00:00:59.946 A:middle
with my real messages and

00:00:59.946 --> 00:01:00.936 A:middle
cluttering up the list.

00:00:59.946 --> 00:01:00.936 A:middle
cluttering up the list.

00:01:01.966 --> 00:01:03.616 A:middle
Unfortunately some iPhone users

00:01:03.616 --> 00:01:05.025 A:middle
get a lot of these messages and

00:01:05.025 --> 00:01:06.086 A:middle
they would love to have a way to

00:01:06.086 --> 00:01:06.726 A:middle
filter them out.

00:01:07.786 --> 00:01:09.926 A:middle
With iOS 11 we are introducing

00:01:09.926 --> 00:01:11.356 A:middle
APIs to allow your app to

00:01:11.356 --> 00:01:13.196 A:middle
analyze the sender and content

00:01:13.196 --> 00:01:15.336 A:middle
of any SMS or MMS message from

00:01:15.336 --> 00:01:17.046 A:middle
an unknown sender and attempt to

00:01:17.046 --> 00:01:18.156 A:middle
filter out those which are

00:01:18.156 --> 00:01:18.776 A:middle
unsolicited.

00:01:18.866 --> 00:01:19.936 A:middle
Let me show you how it works.

00:01:23.046 --> 00:01:24.756 A:middle
Here on my iPhone running iOS 11

00:01:25.356 --> 00:01:26.546 A:middle
I'll launch the New Messages

00:01:26.546 --> 00:01:26.756 A:middle
app.

00:01:27.806 --> 00:01:29.036 A:middle
And since I've already installed

00:01:29.036 --> 00:01:30.556 A:middle
a Message Filter app extension

00:01:30.746 --> 00:01:32.736 A:middle
and enabled it in settings I now

00:01:32.736 --> 00:01:34.696 A:middle
see a second tab called SMS

00:01:34.696 --> 00:01:34.976 A:middle
Junk.

00:01:35.376 --> 00:01:36.966 A:middle
And if I get a message which the

00:01:36.966 --> 00:01:38.726 A:middle
app believes is junk it'll only

00:01:38.726 --> 00:01:39.716 A:middle
appear under that tab.

00:01:41.476 --> 00:01:42.726 A:middle
Ah, there's a new message now.

00:01:43.016 --> 00:01:43.806 A:middle
Let's see what it is.

00:01:46.146 --> 00:01:47.316 A:middle
This is the same message as

00:01:47.316 --> 00:01:49.156 A:middle
before, but now it no longer

00:01:49.156 --> 00:01:50.466 A:middle
appears in the regular list with

00:01:50.466 --> 00:01:52.056 A:middle
my known contacts and doesn't

00:01:52.056 --> 00:01:53.406 A:middle
distract me with a sound or

00:01:53.406 --> 00:01:54.056 A:middle
notification.

00:01:56.046 --> 00:01:57.986 A:middle
And if I tap to read it I can

00:01:57.986 --> 00:01:59.266 A:middle
see from the label at the bottom

00:01:59.496 --> 00:02:00.576 A:middle
that it was marked as junk by an

00:01:59.496 --> 00:02:00.576 A:middle
that it was marked as junk by an

00:02:00.576 --> 00:02:00.966 A:middle
app called Filter It.

00:02:05.226 --> 00:02:06.516 A:middle
Now there are a few reasons why

00:02:06.516 --> 00:02:07.536 A:middle
we decided to add this

00:02:07.536 --> 00:02:08.166 A:middle
functionality.

00:02:09.726 --> 00:02:11.246 A:middle
Unwanted messages, which include

00:02:11.246 --> 00:02:13.306 A:middle
any unsolicited or spam messages

00:02:13.306 --> 00:02:15.036 A:middle
a user receives, have been an

00:02:15.036 --> 00:02:16.536 A:middle
increasing nuisance for users in

00:02:16.536 --> 00:02:17.226 A:middle
the recent years.

00:02:18.396 --> 00:02:19.856 A:middle
But beyond the annoyance, what's

00:02:19.856 --> 00:02:21.286 A:middle
more concerning is that often

00:02:21.286 --> 00:02:22.506 A:middle
these messages are phishing

00:02:22.506 --> 00:02:24.186 A:middle
attempts and include links which

00:02:24.186 --> 00:02:25.076 A:middle
may harm users.

00:02:25.756 --> 00:02:27.016 A:middle
So of course we want to prevent

00:02:27.016 --> 00:02:28.036 A:middle
these messages from being

00:02:28.036 --> 00:02:29.316 A:middle
delivered whenever possible.

00:02:30.106 --> 00:02:31.506 A:middle
Now there's an important

00:02:31.506 --> 00:02:32.866 A:middle
difference worth noting between

00:02:32.976 --> 00:02:34.626 A:middle
iMessage and SMS and MMS

00:02:34.626 --> 00:02:35.166 A:middle
messages.

00:02:36.096 --> 00:02:38.016 A:middle
For iMessage we offer the report

00:02:38.016 --> 00:02:39.976 A:middle
as Junk Service on-device since

00:02:39.976 --> 00:02:41.586 A:middle
those messages are encrypted end

00:02:41.586 --> 00:02:43.156 A:middle
to end and delivered over the

00:02:43.156 --> 00:02:43.896 A:middle
iMessage network.

00:02:43.896 --> 00:02:45.786 A:middle
But we don't have the ability to

00:02:45.786 --> 00:02:47.696 A:middle
do this for SMS or MMSs since

00:02:47.996 --> 00:02:49.476 A:middle
they are delivered directly from

00:02:49.476 --> 00:02:50.936 A:middle
a wireless carrier to a user's

00:02:50.936 --> 00:02:51.446 A:middle
device.

00:02:52.076 --> 00:02:53.116 A:middle
So the filtering of these

00:02:53.116 --> 00:02:54.586 A:middle
messages must happen locally

00:02:54.586 --> 00:02:55.686 A:middle
rather than on a centralized

00:02:55.686 --> 00:02:57.196 A:middle
server, and that's where these

00:02:57.196 --> 00:02:58.096 A:middle
new APIs come in.

00:02:59.486 --> 00:03:00.906 A:middle
Finally, we've heard that many

00:02:59.486 --> 00:03:00.906 A:middle
Finally, we've heard that many

00:03:00.906 --> 00:03:02.436 A:middle
of you have developed expertise

00:03:02.436 --> 00:03:03.946 A:middle
in analyzing messages and

00:03:03.946 --> 00:03:04.896 A:middle
detecting which ones are

00:03:04.896 --> 00:03:06.566 A:middle
unwanted and we're excited to

00:03:06.566 --> 00:03:07.816 A:middle
invite apps to help with this

00:03:07.816 --> 00:03:07.976 A:middle
task.

00:03:11.046 --> 00:03:11.926 A:middle
So for the remainder of this

00:03:11.926 --> 00:03:13.516 A:middle
session I'll cover a few areas

00:03:13.516 --> 00:03:13.936 A:middle
in detail.

00:03:15.376 --> 00:03:16.636 A:middle
First I'll walk through the

00:03:16.636 --> 00:03:18.176 A:middle
details of what we call Message

00:03:18.176 --> 00:03:19.476 A:middle
Filter Extensions and show how

00:03:19.476 --> 00:03:19.816 A:middle
they work.

00:03:21.806 --> 00:03:23.086 A:middle
Next I'll talk about some

00:03:23.086 --> 00:03:24.356 A:middle
important considerations around

00:03:24.356 --> 00:03:26.106 A:middle
privacy since these extensions

00:03:26.106 --> 00:03:27.416 A:middle
come with some special rules.

00:03:28.806 --> 00:03:29.996 A:middle
Then I'll talk about how an

00:03:29.996 --> 00:03:31.046 A:middle
extension can check with a

00:03:31.046 --> 00:03:32.536 A:middle
network-backed service, which

00:03:32.536 --> 00:03:35.356 A:middle
some apps might find useful and

00:03:35.356 --> 00:03:36.486 A:middle
I'll show a couple of demos

00:03:36.486 --> 00:03:38.076 A:middle
along the way through creating

00:03:38.076 --> 00:03:39.006 A:middle
one of these extensions in

00:03:39.006 --> 00:03:39.156 A:middle
Xcode.

00:03:39.156 --> 00:03:39.976 A:middle
So let's get started.

00:03:43.556 --> 00:03:44.606 A:middle
The way this works is using

00:03:44.606 --> 00:03:46.196 A:middle
something we call Message Filter

00:03:46.196 --> 00:03:46.806 A:middle
Extensions.

00:03:47.196 --> 00:03:48.146 A:middle
So let's talk about those

00:03:48.146 --> 00:03:48.596 A:middle
in-depth.

00:03:50.266 --> 00:03:51.756 A:middle
As the name implies, this is a

00:03:51.756 --> 00:03:53.276 A:middle
new app extension type, which

00:03:53.276 --> 00:03:54.096 A:middle
your app can include.

00:03:54.096 --> 00:03:57.206 A:middle
The APIs for it are in a new

00:03:57.206 --> 00:03:58.976 A:middle
framework in iOS-11 called

00:03:58.976 --> 00:03:59.816 A:middle
Identity Look Up.

00:04:00.916 --> 00:04:02.436 A:middle
Now once a user has installed an

00:04:02.436 --> 00:04:03.136 A:middle
app with one of these

00:04:03.136 --> 00:04:05.086 A:middle
extensions, to begin using it

00:04:05.126 --> 00:04:06.206 A:middle
they must first enable the

00:04:06.206 --> 00:04:07.776 A:middle
extension in Messages Settings.

00:04:09.226 --> 00:04:10.426 A:middle
Only one extension can be

00:04:10.426 --> 00:04:12.226 A:middle
enabled at a time, or if the

00:04:12.226 --> 00:04:13.336 A:middle
user wants to disable the

00:04:13.336 --> 00:04:14.736 A:middle
feature they can choose None.

00:04:15.636 --> 00:04:17.396 A:middle
And once it's enabled that

00:04:17.396 --> 00:04:19.076 A:middle
extension is invoked every time

00:04:19.076 --> 00:04:20.736 A:middle
an SMS or MMS message is

00:04:20.736 --> 00:04:22.156 A:middle
received from an unknown sender.

00:04:23.196 --> 00:04:24.436 A:middle
And there is some other criteria

00:04:24.436 --> 00:04:25.836 A:middle
used when deciding when to send

00:04:25.836 --> 00:04:26.936 A:middle
a message to the extension,

00:04:27.116 --> 00:04:28.026 A:middle
which I'll discuss in a few

00:04:28.026 --> 00:04:28.396 A:middle
minutes.

00:04:28.616 --> 00:04:29.686 A:middle
Let's walk through a diagram

00:04:29.686 --> 00:04:30.736 A:middle
showing the overall flow.

00:04:31.976 --> 00:04:33.116 A:middle
When a message is received by

00:04:33.116 --> 00:04:34.616 A:middle
the phone it starts in the

00:04:34.616 --> 00:04:37.386 A:middle
Messages app and if it is an SMS

00:04:37.386 --> 00:04:39.296 A:middle
or MMS and it's from a sender

00:04:39.296 --> 00:04:40.436 A:middle
which isn't in the recipient's

00:04:40.436 --> 00:04:42.546 A:middle
contacts, then the extension,

00:04:42.546 --> 00:04:43.626 A:middle
which the user selected in

00:04:43.626 --> 00:04:45.076 A:middle
Settings will be launched and

00:04:45.076 --> 00:04:46.216 A:middle
will be passed the messages

00:04:46.216 --> 00:04:48.146 A:middle
sender and body via an object

00:04:48.146 --> 00:04:50.296 A:middle
called IL Message Filter Query

00:04:50.296 --> 00:04:51.826 A:middle
Request, which is part of the

00:04:51.826 --> 00:04:52.996 A:middle
identity look-up framework.

00:04:54.546 --> 00:04:55.886 A:middle
When the extension receives this

00:04:56.046 --> 00:04:57.506 A:middle
it begins examining the message,

00:04:57.726 --> 00:04:58.876 A:middle
looking at the sender or the

00:04:58.876 --> 00:05:00.346 A:middle
body of the message, or both,

00:04:58.876 --> 00:05:00.346 A:middle
body of the message, or both,

00:05:00.866 --> 00:05:02.036 A:middle
and it might check against a

00:05:02.036 --> 00:05:03.986 A:middle
known list of bad phone numbers

00:05:04.436 --> 00:05:05.446 A:middle
or it could look for a

00:05:05.446 --> 00:05:06.826 A:middle
suspicious looking web link in

00:05:06.826 --> 00:05:08.086 A:middle
the body, whatever is

00:05:08.086 --> 00:05:08.536 A:middle
appropriate.

00:05:09.256 --> 00:05:10.666 A:middle
Ultimately the extension has to

00:05:10.666 --> 00:05:12.736 A:middle
form a response using an object

00:05:12.736 --> 00:05:14.786 A:middle
called IL Message Filter Query

00:05:14.786 --> 00:05:16.786 A:middle
Response, describing whether to

00:05:16.786 --> 00:05:19.026 A:middle
allow or filter the message, and

00:05:19.026 --> 00:05:19.966 A:middle
it sends this back to the

00:05:19.966 --> 00:05:20.586 A:middle
Messages app.

00:05:21.686 --> 00:05:23.166 A:middle
And once it receives a response,

00:05:23.476 --> 00:05:24.656 A:middle
Messages will either alert the

00:05:24.656 --> 00:05:26.346 A:middle
user normally or suppress the

00:05:26.346 --> 00:05:27.586 A:middle
notification and move the

00:05:27.586 --> 00:05:28.966 A:middle
message thread to the Junk tab.

00:05:33.226 --> 00:05:34.346 A:middle
So that's a basic overview of

00:05:34.346 --> 00:05:36.226 A:middle
how it works and before we go on

00:05:36.256 --> 00:05:37.346 A:middle
I'd like to touch on a very

00:05:37.346 --> 00:05:38.946 A:middle
important topic, and that's user

00:05:38.946 --> 00:05:39.386 A:middle
privacy.

00:05:40.886 --> 00:05:41.956 A:middle
We thought a lot about how to

00:05:41.956 --> 00:05:43.236 A:middle
maintain the strong level of

00:05:43.296 --> 00:05:45.026 A:middle
privacy Apple customers expect,

00:05:45.546 --> 00:05:46.946 A:middle
but also allow them to enable

00:05:46.946 --> 00:05:48.136 A:middle
this if they want to confront

00:05:48.136 --> 00:05:49.446 A:middle
this persistent problem of

00:05:49.446 --> 00:05:50.466 A:middle
unwanted messages.

00:05:51.036 --> 00:05:52.476 A:middle
So there are a few special rules

00:05:52.476 --> 00:05:53.906 A:middle
that extensions must comply with

00:05:53.996 --> 00:05:54.876 A:middle
when using this API.

00:05:57.046 --> 00:05:58.446 A:middle
The first rule is that a message

00:05:58.446 --> 00:05:59.706 A:middle
recipient's phone number is

00:05:59.706 --> 00:06:02.166 A:middle
never sent to an extension, only

00:05:59.706 --> 00:06:02.166 A:middle
never sent to an extension, only

00:06:02.166 --> 00:06:03.406 A:middle
the sender's phone number or

00:06:03.406 --> 00:06:04.996 A:middle
email address is included, since

00:06:04.996 --> 00:06:05.706 A:middle
that's all that should be

00:06:05.706 --> 00:06:07.006 A:middle
required to make a decision

00:06:07.006 --> 00:06:07.986 A:middle
about whether to filter a

00:06:07.986 --> 00:06:08.466 A:middle
message.

00:06:09.506 --> 00:06:10.736 A:middle
Another key rule is that a

00:06:10.736 --> 00:06:12.176 A:middle
message filter extension can

00:06:12.176 --> 00:06:13.536 A:middle
never export the contents of

00:06:13.536 --> 00:06:14.866 A:middle
messages outside its container,

00:06:14.866 --> 00:06:16.836 A:middle
and these extensions have some

00:06:16.836 --> 00:06:18.166 A:middle
additional restrictions because

00:06:18.166 --> 00:06:18.546 A:middle
of this.

00:06:19.666 --> 00:06:20.706 A:middle
They cannot write to files

00:06:20.706 --> 00:06:21.926 A:middle
shared with their containing app

00:06:22.706 --> 00:06:23.976 A:middle
and they cannot perform network

00:06:23.976 --> 00:06:24.606 A:middle
operations.

00:06:25.576 --> 00:06:26.706 A:middle
The reason for this is that,

00:06:26.706 --> 00:06:27.956 A:middle
although some messages may be

00:06:27.956 --> 00:06:29.926 A:middle
unwanted junk, others may be

00:06:29.926 --> 00:06:31.046 A:middle
legitimate and be sent from

00:06:31.046 --> 00:06:32.316 A:middle
someone who's just not on the

00:06:32.316 --> 00:06:33.636 A:middle
recipient's contacts yet.

00:06:34.156 --> 00:06:35.476 A:middle
So then it's imperative that all

00:06:35.476 --> 00:06:36.926 A:middle
the messages be kept private and

00:06:36.926 --> 00:06:38.756 A:middle
never exported in any way that

00:06:38.756 --> 00:06:40.316 A:middle
reveals more about the recipient

00:06:40.356 --> 00:06:41.266 A:middle
than what is contained in the

00:06:41.266 --> 00:06:42.036 A:middle
message itself.

00:06:43.976 --> 00:06:44.956 A:middle
Although they can't perform

00:06:44.956 --> 00:06:46.696 A:middle
networking themselves, it is

00:06:46.696 --> 00:06:48.096 A:middle
possible for these extensions to

00:06:48.096 --> 00:06:49.666 A:middle
defer a request to their server

00:06:49.666 --> 00:06:51.246 A:middle
indirectly, and when an

00:06:51.246 --> 00:06:53.666 A:middle
extension requests to defer iOS

00:06:53.666 --> 00:06:54.936 A:middle
will make a web request on the

00:06:54.936 --> 00:06:56.546 A:middle
extension's behalf in a secure

00:06:56.546 --> 00:06:56.836 A:middle
way.

00:06:57.496 --> 00:06:58.476 A:middle
We'll see an example of that

00:06:58.476 --> 00:06:58.776 A:middle
later.

00:06:59.726 --> 00:07:01.146 A:middle
The main thing to keep in mind

00:06:59.726 --> 00:07:01.146 A:middle
The main thing to keep in mind

00:07:01.326 --> 00:07:02.576 A:middle
is that your extension should

00:07:02.576 --> 00:07:04.396 A:middle
never export messages outside of

00:07:04.396 --> 00:07:05.736 A:middle
its container to maintain user

00:07:05.736 --> 00:07:05.976 A:middle
privacy.

00:07:10.046 --> 00:07:11.046 A:middle
Now there is some specific

00:07:11.046 --> 00:07:12.506 A:middle
criteria that the Messages app

00:07:12.506 --> 00:07:14.136 A:middle
uses to decide whether or not to

00:07:14.136 --> 00:07:15.526 A:middle
send a given message to an

00:07:15.526 --> 00:07:16.066 A:middle
extension.

00:07:17.086 --> 00:07:18.776 A:middle
First, this feature is only used

00:07:18.776 --> 00:07:21.026 A:middle
with SMS and MMS messages and

00:07:21.026 --> 00:07:22.056 A:middle
never with iMessage.

00:07:22.856 --> 00:07:24.526 A:middle
As I mentioned earlier, unwanted

00:07:24.626 --> 00:07:25.996 A:middle
iMessages are handled using a

00:07:25.996 --> 00:07:27.386 A:middle
different mechanism, so this

00:07:27.386 --> 00:07:28.916 A:middle
only applies to SMS and MMS.

00:07:31.046 --> 00:07:32.206 A:middle
As I've mentioned a few times,

00:07:32.396 --> 00:07:34.176 A:middle
only unknown senders, or those

00:07:34.176 --> 00:07:35.246 A:middle
which are not in the recipient's

00:07:35.246 --> 00:07:36.886 A:middle
contacts are actually sent to

00:07:36.886 --> 00:07:38.216 A:middle
the extension for analysis.

00:07:39.156 --> 00:07:41.496 A:middle
If a sender is in Contacts we

00:07:41.496 --> 00:07:42.786 A:middle
assume that that recipient knows

00:07:42.786 --> 00:07:44.866 A:middle
the sender and wants to receive

00:07:44.866 --> 00:07:45.676 A:middle
messages from them.

00:07:46.296 --> 00:07:47.356 A:middle
That also means that if a

00:07:47.356 --> 00:07:48.956 A:middle
message is ever miscategorized

00:07:48.956 --> 00:07:50.706 A:middle
as junk then the user can add

00:07:50.706 --> 00:07:52.146 A:middle
that sender to their contacts to

00:07:52.146 --> 00:07:53.406 A:middle
ensure they aren't filtered out

00:07:53.406 --> 00:07:53.926 A:middle
in the future.

00:07:55.446 --> 00:07:57.136 A:middle
Also, if a user is exchanging

00:07:57.136 --> 00:07:58.436 A:middle
messages with someone who is not

00:07:58.436 --> 00:08:00.346 A:middle
in their Contacts and they reply

00:07:58.436 --> 00:08:00.346 A:middle
in their Contacts and they reply

00:08:00.346 --> 00:08:01.906 A:middle
to that thread multiple times,

00:08:02.446 --> 00:08:03.786 A:middle
then we will stop sending any

00:08:03.786 --> 00:08:05.046 A:middle
subsequent messages in that

00:08:05.046 --> 00:08:06.156 A:middle
thread to the extension.

00:08:07.006 --> 00:08:09.036 A:middle
Or, if the user replies multiple

00:08:09.036 --> 00:08:10.196 A:middle
times to a thread, which is

00:08:10.196 --> 00:08:12.086 A:middle
already marked as junk, that

00:08:12.086 --> 00:08:13.196 A:middle
thread will be restored to the

00:08:13.196 --> 00:08:14.026 A:middle
non-junk tab.

00:08:15.136 --> 00:08:16.496 A:middle
Responding multiple times is

00:08:16.496 --> 00:08:17.886 A:middle
interpreted as a signal from the

00:08:17.886 --> 00:08:19.276 A:middle
recipient that they really do

00:08:19.276 --> 00:08:20.386 A:middle
want to be communicating with

00:08:20.386 --> 00:08:20.806 A:middle
the sender.

00:08:22.256 --> 00:08:23.716 A:middle
So all of this criteria doesn't

00:08:23.716 --> 00:08:25.746 A:middle
directly affect the API, but it

00:08:25.746 --> 00:08:27.336 A:middle
is something you, as a developer

00:08:27.336 --> 00:08:28.386 A:middle
of one of these extensions,

00:08:28.386 --> 00:08:29.876 A:middle
should be aware of when testing

00:08:29.876 --> 00:08:30.916 A:middle
or troubleshooting your app.

00:08:35.046 --> 00:08:36.176 A:middle
So now I'd like to show a demo

00:08:36.176 --> 00:08:37.726 A:middle
in Xcode of how you can create a

00:08:37.726 --> 00:08:38.926 A:middle
message filter extension.

00:08:40.736 --> 00:08:42.006 A:middle
Here we have an app I've made

00:08:42.035 --> 00:08:43.765 A:middle
called Filter It and I'd like to

00:08:43.765 --> 00:08:45.206 A:middle
add a message filter extension.

00:08:47.126 --> 00:08:48.496 A:middle
The first thing I need to do is

00:08:48.496 --> 00:08:48.976 A:middle
add a new target.

00:08:53.046 --> 00:08:53.776 A:middle
And I'll choose the new message

00:08:53.776 --> 00:08:56.526 A:middle
filter template for iOS and I'll

00:08:56.526 --> 00:08:56.976 A:middle
give it a name.

00:09:03.046 --> 00:09:04.336 A:middle
I've got a new file added to my

00:09:04.376 --> 00:09:05.576 A:middle
project now called

00:09:05.876 --> 00:09:07.276 A:middle
messagefiltereextension.swift.

00:09:07.276 --> 00:09:08.976 A:middle
Now let's take a look at that.

00:09:20.106 --> 00:09:21.176 A:middle
The first thing we see is a

00:09:21.176 --> 00:09:22.826 A:middle
method called Handle Query

00:09:22.826 --> 00:09:24.916 A:middle
Request with Context and this is

00:09:24.916 --> 00:09:26.376 A:middle
called on our extension so that

00:09:26.376 --> 00:09:27.516 A:middle
it can examine the incoming

00:09:27.516 --> 00:09:29.126 A:middle
message and return a response

00:09:29.196 --> 00:09:30.356 A:middle
using the completion handler.

00:09:33.286 --> 00:09:34.416 A:middle
Now the template is structured

00:09:34.416 --> 00:09:36.056 A:middle
to first attempt an offline

00:09:36.056 --> 00:09:37.926 A:middle
check using this method, called

00:09:38.206 --> 00:09:40.106 A:middle
Offline Action for Query Request

00:09:41.936 --> 00:09:43.326 A:middle
and it returns an action which

00:09:43.326 --> 00:09:45.356 A:middle
is either allow, filter, or

00:09:45.356 --> 00:09:45.686 A:middle
none.

00:09:48.366 --> 00:09:49.756 A:middle
So for this demo what we need to

00:09:49.756 --> 00:09:51.366 A:middle
do is customize this offline

00:09:51.366 --> 00:09:52.366 A:middle
action helper method.

00:09:52.966 --> 00:09:53.736 A:middle
Let's look at what it does

00:09:53.736 --> 00:09:53.966 A:middle
currently.

00:09:58.046 --> 00:09:59.236 A:middle
Right now it always returns

00:09:59.236 --> 00:10:01.196 A:middle
none, but I'll replace that with

00:09:59.236 --> 00:10:01.196 A:middle
none, but I'll replace that with

00:10:01.196 --> 00:10:02.736 A:middle
some simple logic to always

00:10:02.736 --> 00:10:04.176 A:middle
filter if the message contains

00:10:04.216 --> 00:10:04.976 A:middle
the word junk.

00:10:09.656 --> 00:10:10.896 A:middle
In a real extension this could

00:10:10.896 --> 00:10:12.326 A:middle
do something more sophisticated,

00:10:12.506 --> 00:10:14.716 A:middle
but this works for now and

00:10:14.716 --> 00:10:15.746 A:middle
that's all it takes to create a

00:10:15.746 --> 00:10:17.476 A:middle
simple, offline only, message

00:10:17.476 --> 00:10:17.976 A:middle
filter extension.

00:10:22.196 --> 00:10:23.366 A:middle
Now although some apps may be

00:10:23.366 --> 00:10:24.826 A:middle
able to do most or all of their

00:10:24.826 --> 00:10:27.046 A:middle
checking offline, other apps may

00:10:27.046 --> 00:10:28.256 A:middle
find it useful to check with a

00:10:28.256 --> 00:10:29.686 A:middle
network server whether to filter

00:10:29.686 --> 00:10:30.466 A:middle
messages or not.

00:10:30.866 --> 00:10:32.116 A:middle
So next I'd like to talk about

00:10:32.116 --> 00:10:32.916 A:middle
network deferral.

00:10:34.626 --> 00:10:36.286 A:middle
The best way to show how network

00:10:36.286 --> 00:10:37.706 A:middle
deferral works is with another

00:10:37.706 --> 00:10:38.196 A:middle
diagram.

00:10:39.616 --> 00:10:41.236 A:middle
As before, when a message is

00:10:41.236 --> 00:10:42.536 A:middle
received it starts in the

00:10:42.536 --> 00:10:44.076 A:middle
Messages app and is sent to the

00:10:44.076 --> 00:10:46.736 A:middle
chosen extension, but this time

00:10:46.856 --> 00:10:48.226 A:middle
the extension chooses to defer

00:10:48.226 --> 00:10:49.366 A:middle
this request to its network

00:10:49.366 --> 00:10:51.356 A:middle
server, whose URL is specified

00:10:51.356 --> 00:10:52.606 A:middle
in its info.plist.

00:10:53.406 --> 00:10:54.976 A:middle
So it tells Messages to defer

00:10:55.376 --> 00:10:57.136 A:middle
and Messages then makes a JSON

00:10:57.136 --> 00:10:58.896 A:middle
request to that server URL.

00:11:00.166 --> 00:11:01.436 A:middle
The server then examines the

00:11:01.436 --> 00:11:02.866 A:middle
Messages contents inside the

00:11:02.866 --> 00:11:04.876 A:middle
JSON request and can respond in

00:11:04.876 --> 00:11:06.886 A:middle
any format it wants and that

00:11:06.886 --> 00:11:08.446 A:middle
response is handed right back to

00:11:08.446 --> 00:11:09.066 A:middle
the extension.

00:11:10.026 --> 00:11:11.476 A:middle
And from here, the extension

00:11:11.476 --> 00:11:12.476 A:middle
reads the response from the

00:11:12.476 --> 00:11:14.836 A:middle
server and finally returns an IL

00:11:14.836 --> 00:11:16.566 A:middle
message filter query response

00:11:16.566 --> 00:11:16.976 A:middle
back to Messages.

00:11:22.326 --> 00:11:23.466 A:middle
There are a few restrictions to

00:11:23.466 --> 00:11:24.846 A:middle
be aware of when using network

00:11:24.846 --> 00:11:25.266 A:middle
deferral.

00:11:26.366 --> 00:11:27.976 A:middle
First, the deferred network

00:11:27.976 --> 00:11:29.876 A:middle
requests contain no personally

00:11:29.876 --> 00:11:31.556 A:middle
identifiable information about

00:11:31.556 --> 00:11:32.926 A:middle
the recipient of the message.

00:11:35.296 --> 00:11:36.926 A:middle
The network URL is hardcoded

00:11:36.926 --> 00:11:38.426 A:middle
statically into the extension's

00:11:38.456 --> 00:11:40.836 A:middle
info.plist file under a key

00:11:40.836 --> 00:11:42.616 A:middle
called IL Message Filter

00:11:42.616 --> 00:11:44.166 A:middle
Extension Network URL.

00:11:44.766 --> 00:11:46.046 A:middle
So it cannot vary between

00:11:46.046 --> 00:11:47.706 A:middle
requests or for individual

00:11:47.706 --> 00:11:47.976 A:middle
users.

00:11:53.066 --> 00:11:55.176 A:middle
All URLs must be secure https

00:11:55.176 --> 00:11:56.726 A:middle
and the server must be

00:11:56.726 --> 00:11:58.106 A:middle
configured such that it doesn't

00:11:58.106 --> 00:11:59.666 A:middle
require any app transport

00:11:59.666 --> 00:12:01.786 A:middle
security, or ATS, overrides

00:11:59.666 --> 00:12:01.786 A:middle
security, or ATS, overrides

00:12:02.116 --> 00:12:02.896 A:middle
since there's no way to

00:12:02.896 --> 00:12:04.586 A:middle
configure them.

00:12:05.686 --> 00:12:07.426 A:middle
Also, this feature requires that

00:12:07.426 --> 00:12:09.276 A:middle
both your app and server use the

00:12:09.276 --> 00:12:11.786 A:middle
associated domains, or Apple App

00:12:11.786 --> 00:12:13.866 A:middle
Site Association Feature, which

00:12:13.866 --> 00:12:14.986 A:middle
is something you may be familiar

00:12:14.986 --> 00:12:16.796 A:middle
with if you've adopted other iOS

00:12:16.796 --> 00:12:18.186 A:middle
features like App Links or

00:12:18.186 --> 00:12:19.326 A:middle
Shared Web Credentials.

00:12:20.906 --> 00:12:22.226 A:middle
And for more information, see

00:12:22.226 --> 00:12:23.906 A:middle
the session; Seamless Linking to

00:12:23.906 --> 00:12:26.496 A:middle
Your App from WWDC2015.

00:12:26.986 --> 00:12:29.516 A:middle
And the last restriction to be

00:12:29.516 --> 00:12:31.106 A:middle
aware of is that any cookies

00:12:31.106 --> 00:12:32.346 A:middle
that the webserver attempt to

00:12:32.346 --> 00:12:33.666 A:middle
set will be ignored to maintain

00:12:33.666 --> 00:12:33.976 A:middle
privacy.

00:12:38.216 --> 00:12:39.566 A:middle
The request made to the network

00:12:39.566 --> 00:12:41.526 A:middle
server is formatted using JSON

00:12:41.896 --> 00:12:43.166 A:middle
and includes the same things

00:12:43.166 --> 00:12:44.606 A:middle
which are in the IL Message

00:12:44.606 --> 00:12:46.176 A:middle
Filter Query Request Object

00:12:46.456 --> 00:12:48.226 A:middle
including the message sender,

00:12:48.496 --> 00:12:49.846 A:middle
which is a phone number or email

00:12:49.846 --> 00:12:51.856 A:middle
address, and the message body.

00:12:53.196 --> 00:12:54.856 A:middle
The request also includes the

00:12:54.856 --> 00:12:56.296 A:middle
version of your app, which is

00:12:56.296 --> 00:12:57.956 A:middle
the CF Bundle Version Key from

00:12:57.956 --> 00:12:59.406 A:middle
the app's info.plist.

00:13:00.356 --> 00:13:01.966 A:middle
This may be useful in cases you

00:13:01.966 --> 00:13:02.926 A:middle
have -- in case you have

00:13:02.926 --> 00:13:04.406 A:middle
released several versions of

00:13:04.406 --> 00:13:05.186 A:middle
your app with different

00:13:05.186 --> 00:13:06.746 A:middle
capabilities and need to format

00:13:06.746 --> 00:13:08.176 A:middle
the response to insure that

00:13:08.176 --> 00:13:09.436 A:middle
particular version of the app

00:13:09.436 --> 00:13:11.066 A:middle
can understand it.

00:13:11.706 --> 00:13:12.896 A:middle
And we include the version of

00:13:12.896 --> 00:13:14.706 A:middle
the JSON request format itself,

00:13:14.806 --> 00:13:15.726 A:middle
which is currently one.

00:13:17.386 --> 00:13:18.826 A:middle
Now, unlike the request format,

00:13:19.286 --> 00:13:20.916 A:middle
the response format is entirely

00:13:20.916 --> 00:13:22.576 A:middle
up to your app to define and

00:13:22.576 --> 00:13:23.876 A:middle
doesn't necessarily have to be

00:13:23.876 --> 00:13:24.326 A:middle
JSON.

00:13:25.156 --> 00:13:26.766 A:middle
The response body is passed back

00:13:26.766 --> 00:13:28.196 A:middle
to your extension to parse, so

00:13:28.196 --> 00:13:29.406 A:middle
there are not requirements about

00:13:29.406 --> 00:13:29.856 A:middle
its format.

00:13:33.046 --> 00:13:34.086 A:middle
And here's a quick look at the

00:13:34.086 --> 00:13:35.726 A:middle
JSON request format, and you can

00:13:35.726 --> 00:13:36.696 A:middle
see it includes all of the info

00:13:36.696 --> 00:13:36.976 A:middle
I mentioned.

00:13:44.066 --> 00:13:45.246 A:middle
Now, let's go back to my Filter

00:13:45.246 --> 00:13:46.776 A:middle
It app and add network deferral

00:13:46.776 --> 00:13:47.956 A:middle
capability to the extension.

00:13:52.316 --> 00:13:53.536 A:middle
If we take another look at the

00:13:53.536 --> 00:13:55.166 A:middle
Handle Query Request method from

00:13:55.166 --> 00:13:57.266 A:middle
earlier we can now see that,

00:13:57.306 --> 00:13:58.526 A:middle
after the offline check is

00:13:58.526 --> 00:14:00.336 A:middle
performed, if the action it

00:13:58.526 --> 00:14:00.336 A:middle
performed, if the action it

00:14:00.336 --> 00:14:02.376 A:middle
returned was none and it falls

00:14:02.376 --> 00:14:03.656 A:middle
into this case of the switch

00:14:03.656 --> 00:14:05.376 A:middle
statement, we assume that this

00:14:05.376 --> 00:14:06.746 A:middle
query request could not be

00:14:06.746 --> 00:14:08.446 A:middle
handled using only an offline

00:14:08.446 --> 00:14:09.996 A:middle
check and actually needs to

00:14:09.996 --> 00:14:11.436 A:middle
consult our network server to

00:14:11.436 --> 00:14:11.976 A:middle
get an answer.

00:14:19.046 --> 00:14:20.506 A:middle
To do this our code calls the

00:14:20.506 --> 00:14:22.726 A:middle
defer query requests to network

00:14:22.726 --> 00:14:24.706 A:middle
method on our extension context

00:14:25.506 --> 00:14:26.766 A:middle
and this causes a network

00:14:26.766 --> 00:14:27.906 A:middle
request to be made on our

00:14:27.906 --> 00:14:29.606 A:middle
extension's behalf, which will

00:14:29.606 --> 00:14:31.096 A:middle
call this completion block

00:14:31.096 --> 00:14:32.006 A:middle
asynchronously when it

00:14:32.006 --> 00:14:32.516 A:middle
completes.

00:14:33.736 --> 00:14:35.456 A:middle
Inside the completion block, if

00:14:35.456 --> 00:14:36.466 A:middle
there was a response from the

00:14:36.466 --> 00:14:37.776 A:middle
network and there wasn't an

00:14:37.776 --> 00:14:39.686 A:middle
error, we use another helper

00:14:39.686 --> 00:14:41.686 A:middle
method called Action for Network

00:14:41.686 --> 00:14:43.566 A:middle
Response to translate it into an

00:14:43.566 --> 00:14:43.966 A:middle
action.

00:14:44.566 --> 00:14:45.506 A:middle
Let's jump to that method and

00:14:45.506 --> 00:14:45.976 A:middle
see what it does.

00:14:51.046 --> 00:14:52.236 A:middle
Just like with the offline check

00:14:52.236 --> 00:14:53.816 A:middle
helper method this method

00:14:53.816 --> 00:14:55.726 A:middle
defaults to returning none, but

00:14:55.726 --> 00:14:57.136 A:middle
let's customize that to parse

00:14:57.136 --> 00:14:58.366 A:middle
the response from our server.

00:14:59.766 --> 00:15:01.116 A:middle
I'll assume the server returns

00:14:59.766 --> 00:15:01.116 A:middle
I'll assume the server returns

00:15:01.116 --> 00:15:02.586 A:middle
JSON, although it doesn't have

00:15:02.646 --> 00:15:04.326 A:middle
to, and I'll use the new

00:15:04.326 --> 00:15:06.066 A:middle
Foundation Decoding APIs in

00:15:06.066 --> 00:15:07.976 A:middle
Swift 4 to decode the response.

00:15:09.426 --> 00:15:10.526 A:middle
I'll paste some code I've

00:15:10.586 --> 00:15:12.246 A:middle
already written to do this, but

00:15:12.246 --> 00:15:12.976 A:middle
let's briefly walk through it.

00:15:19.546 --> 00:15:21.406 A:middle
I first define a struct, which

00:15:21.406 --> 00:15:22.966 A:middle
describes the JSON format that

00:15:22.966 --> 00:15:26.446 A:middle
my server returns, then I create

00:15:26.446 --> 00:15:29.556 A:middle
a JSON decoder instance and I

00:15:29.556 --> 00:15:31.236 A:middle
use it to decode the data from

00:15:31.236 --> 00:15:32.856 A:middle
the network as an instance of

00:15:32.856 --> 00:15:33.346 A:middle
the struct.

00:15:34.946 --> 00:15:37.006 A:middle
Finally I return the action,

00:15:37.006 --> 00:15:38.456 A:middle
which was decoded, and store it

00:15:38.456 --> 00:15:38.976 A:middle
in the struct.

00:15:43.046 --> 00:15:44.076 A:middle
And if there were any errors I

00:15:44.076 --> 00:15:44.876 A:middle
handle them below.

00:15:48.046 --> 00:15:49.736 A:middle
And return the default response

00:15:49.736 --> 00:15:49.966 A:middle
of none.

00:15:54.096 --> 00:15:55.526 A:middle
And just like that we've added

00:15:55.526 --> 00:15:57.066 A:middle
network deferral support to our

00:15:57.066 --> 00:15:58.616 A:middle
message filter app extension.

00:15:59.196 --> 00:16:00.986 A:middle
So it now supports both offline

00:15:59.196 --> 00:16:00.986 A:middle
So it now supports both offline

00:16:01.186 --> 00:16:02.726 A:middle
and network checking of incoming

00:16:02.726 --> 00:16:02.966 A:middle
messages.

00:16:07.266 --> 00:16:08.956 A:middle
So that's how your app can help

00:16:08.956 --> 00:16:10.626 A:middle
filter unwanted messages using

00:16:10.626 --> 00:16:11.656 A:middle
the new message filter

00:16:11.656 --> 00:16:13.296 A:middle
extensions and identity look up

00:16:13.296 --> 00:16:14.586 A:middle
framework in iOS 11.

00:16:15.816 --> 00:16:17.166 A:middle
We've tried to strike a balance

00:16:17.166 --> 00:16:19.136 A:middle
between user privacy and solving

00:16:19.136 --> 00:16:20.636 A:middle
a very pressing need our users

00:16:20.636 --> 00:16:20.916 A:middle
have.

00:16:21.386 --> 00:16:22.926 A:middle
And the result is a powerful new

00:16:22.926 --> 00:16:25.196 A:middle
API your app can use, but it is

00:16:25.196 --> 00:16:26.616 A:middle
subject to some special rules

00:16:26.616 --> 00:16:27.466 A:middle
you need to be aware of.

00:16:28.666 --> 00:16:30.596 A:middle
So please, download the new STK,

00:16:31.076 --> 00:16:32.366 A:middle
check out the new identity look

00:16:32.366 --> 00:16:33.906 A:middle
up framework, and try making a

00:16:33.906 --> 00:16:35.456 A:middle
message filter extension filter

00:16:37.446 --> 00:16:37.566 A:middle
today.

00:16:38.576 --> 00:16:40.086 A:middle
For more information see this

00:16:40.086 --> 00:16:41.436 A:middle
link for the Sessions page on

00:16:41.436 --> 00:16:43.066 A:middle
the official WWDC site.

00:16:45.906 --> 00:16:46.906 A:middle
We do have a few related

00:16:46.906 --> 00:16:47.806 A:middle
sessions and this year's

00:16:47.806 --> 00:16:48.846 A:middle
conference to mention.

00:16:49.196 --> 00:16:50.846 A:middle
For more information about

00:16:50.846 --> 00:16:51.976 A:middle
privacy practices on our

00:16:51.976 --> 00:16:54.166 A:middle
platforms see the Privacy and

00:16:54.166 --> 00:16:55.706 A:middle
Your Apps session happening in

00:16:55.706 --> 00:16:57.026 A:middle
the Executive Ballroom on

00:16:57.026 --> 00:16:58.306 A:middle
Tuesday at 11:20.

00:16:59.706 --> 00:17:01.026 A:middle
And for more info about the new

00:16:59.706 --> 00:17:01.026 A:middle
And for more info about the new

00:17:01.026 --> 00:17:02.686 A:middle
foundation and coding APIs I

00:17:02.686 --> 00:17:04.746 A:middle
showed in my demo, see the new

00:17:04.886 --> 00:17:06.106 A:middle
-- see the What's New in

00:17:06.106 --> 00:17:08.006 A:middle
Foundation session in Hall Two

00:17:08.006 --> 00:17:09.086 A:middle
on Wednesday at 11.

00:17:10.435 --> 00:17:13.486 A:middle
Also, WWDC2015 had an excellent

00:17:13.486 --> 00:17:15.366 A:middle
session called Seamless Linking

00:17:15.366 --> 00:17:16.816 A:middle
to Your App, which walked

00:17:16.816 --> 00:17:18.185 A:middle
through the associated domains

00:17:18.185 --> 00:17:19.415 A:middle
feature which message filter

00:17:19.415 --> 00:17:20.846 A:middle
extensions require when using

00:17:20.846 --> 00:17:21.586 A:middle
network deferral.

00:17:22.195 --> 00:17:23.396 A:middle
So check out that session in the

00:17:23.396 --> 00:17:24.906 A:middle
archive for details about how to

00:17:24.906 --> 00:17:26.425 A:middle
implement it in your app and on

00:17:26.425 --> 00:17:26.876 A:middle
the server.

00:17:27.286 --> 00:17:27.976 A:middle
Thanks so much for watching.
