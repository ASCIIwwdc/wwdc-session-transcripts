WEBVTT

00:00:00.506 --> 00:00:26.546 A:middle
[ Applause ]

00:00:27.046 --> 00:00:27.376 A:middle
&gt;&gt; Good morning.

00:00:28.036 --> 00:00:29.106 A:middle
My name is Dave Browning.

00:00:29.376 --> 00:00:30.576 A:middle
I'm on the CloudKit team here at

00:00:30.576 --> 00:00:32.665 A:middle
Apple, and I'm super excited to

00:00:32.665 --> 00:00:33.626 A:middle
talk to you about some new

00:00:33.626 --> 00:00:35.336 A:middle
things in CloudKit, especially a

00:00:35.336 --> 00:00:36.856 A:middle
brand-new CloudKit Dashboard.

00:00:36.996 --> 00:00:38.626 A:middle
If you're not familiar with it,

00:00:38.886 --> 00:00:39.806 A:middle
the Dashboard is a web

00:00:39.806 --> 00:00:41.626 A:middle
application designed to help you

00:00:41.626 --> 00:00:42.766 A:middle
as you're adding CloudKit

00:00:42.766 --> 00:00:44.606 A:middle
functionality to your apps.

00:00:46.176 --> 00:00:47.796 A:middle
So first, I'd like to talk about

00:00:47.796 --> 00:00:49.216 A:middle
some of our goals behind the

00:00:49.216 --> 00:00:50.306 A:middle
things we're announcing today,

00:00:50.806 --> 00:00:52.136 A:middle
and at a high level, as the

00:00:52.136 --> 00:00:54.346 A:middle
title of this session suggests,

00:00:55.006 --> 00:00:56.236 A:middle
we really want to help you build

00:00:56.236 --> 00:00:57.816 A:middle
better applications on top of

00:00:57.856 --> 00:00:59.726 A:middle
CloudKit, and we want to do that

00:00:59.726 --> 00:01:00.966 A:middle
in a number of different ways.

00:00:59.726 --> 00:01:00.966 A:middle
in a number of different ways.

00:01:02.006 --> 00:01:03.786 A:middle
First, we want to help you

00:01:03.786 --> 00:01:05.206 A:middle
through all stages of your app's

00:01:05.206 --> 00:01:05.736 A:middle
lifecycle.

00:01:06.406 --> 00:01:07.226 A:middle
So, when you're first learning

00:01:07.226 --> 00:01:08.496 A:middle
about CloudKit, when you're

00:01:08.496 --> 00:01:09.386 A:middle
starting to build your

00:01:09.386 --> 00:01:10.346 A:middle
functionality into your

00:01:10.346 --> 00:01:11.996 A:middle
application, when you're beta

00:01:11.996 --> 00:01:13.736 A:middle
testing with users, when you're

00:01:13.736 --> 00:01:14.576 A:middle
getting your app out into the

00:01:14.576 --> 00:01:15.886 A:middle
App Store, going to production,

00:01:16.076 --> 00:01:17.556 A:middle
scaling up, really honing in

00:01:17.556 --> 00:01:19.276 A:middle
your user experience, and then

00:01:19.276 --> 00:01:20.856 A:middle
finally, potentially supporting

00:01:20.856 --> 00:01:22.176 A:middle
customer problems in the wild.

00:01:22.916 --> 00:01:24.016 A:middle
We want to give you the tools

00:01:24.016 --> 00:01:25.396 A:middle
necessary to help you throughout

00:01:25.396 --> 00:01:26.216 A:middle
all of those phases.

00:01:26.216 --> 00:01:29.836 A:middle
We also want to give you a way

00:01:29.836 --> 00:01:31.386 A:middle
to experiment with the entire

00:01:31.386 --> 00:01:31.636 A:middle
API.

00:01:31.636 --> 00:01:33.486 A:middle
Now, obviously, you can jump

00:01:33.486 --> 00:01:35.196 A:middle
right in to Xcode and start

00:01:35.196 --> 00:01:36.816 A:middle
using our API and figuring out

00:01:36.816 --> 00:01:38.346 A:middle
how it works, but we want to

00:01:38.346 --> 00:01:39.066 A:middle
give you something to sit

00:01:39.066 --> 00:01:40.946 A:middle
alongside Xcode that lets you

00:01:40.946 --> 00:01:42.666 A:middle
visually play with that same API

00:01:42.666 --> 00:01:44.376 A:middle
so that you can experiment with

00:01:44.376 --> 00:01:45.966 A:middle
it, understand how it works,

00:01:46.366 --> 00:01:47.216 A:middle
while you're building that

00:01:47.216 --> 00:01:48.266 A:middle
functionality into your

00:01:48.266 --> 00:01:48.786 A:middle
application.

00:01:49.286 --> 00:01:51.796 A:middle
We also want to give you

00:01:51.796 --> 00:01:53.226 A:middle
visibility into all events

00:01:53.226 --> 00:01:54.846 A:middle
across the system, across all of

00:01:54.846 --> 00:01:56.926 A:middle
your users, and especially once

00:01:56.926 --> 00:01:57.856 A:middle
you're out in production in the

00:01:57.856 --> 00:01:59.526 A:middle
App Store and growing your user

00:01:59.526 --> 00:02:01.126 A:middle
base, we want to help you

00:01:59.526 --> 00:02:01.126 A:middle
base, we want to help you

00:02:01.126 --> 00:02:02.376 A:middle
understand the aggregate

00:02:02.376 --> 00:02:04.176 A:middle
behavior, the communication

00:02:04.366 --> 00:02:05.806 A:middle
among all those users back at

00:02:05.806 --> 00:02:06.646 A:middle
the CloudKit server.

00:02:08.765 --> 00:02:10.616 A:middle
Now, before I jump into a live

00:02:10.616 --> 00:02:11.776 A:middle
demo of the Dashboard, I want to

00:02:11.776 --> 00:02:12.536 A:middle
do two things.

00:02:12.976 --> 00:02:14.236 A:middle
First, let's do a quick

00:02:14.236 --> 00:02:15.646 A:middle
refresher of some CloudKit

00:02:15.646 --> 00:02:16.316 A:middle
concepts.

00:02:16.706 --> 00:02:17.716 A:middle
If you've used CloudKit before,

00:02:17.716 --> 00:02:18.786 A:middle
you'll be familiar with some of

00:02:18.786 --> 00:02:19.566 A:middle
this, but it's a good

00:02:19.566 --> 00:02:20.736 A:middle
foundation, if you haven't used

00:02:20.736 --> 00:02:22.016 A:middle
it, because I'll be using these

00:02:22.016 --> 00:02:23.136 A:middle
concepts throughout the session.

00:02:23.136 --> 00:02:25.636 A:middle
And then after that, second, I

00:02:25.766 --> 00:02:27.936 A:middle
want to show you and talk about

00:02:27.936 --> 00:02:29.956 A:middle
an example iOS application that

00:02:29.956 --> 00:02:31.866 A:middle
we built on top of CloudKit that

00:02:31.866 --> 00:02:33.506 A:middle
I'll be demoing today alongside

00:02:33.506 --> 00:02:35.036 A:middle
the Dashboard to show you how

00:02:35.036 --> 00:02:36.446 A:middle
the Dashboard can help you when

00:02:36.446 --> 00:02:37.396 A:middle
you're testing and building your

00:02:37.396 --> 00:02:37.946 A:middle
application.

00:02:38.656 --> 00:02:39.776 A:middle
Alright. So, first, some

00:02:39.776 --> 00:02:40.776 A:middle
CloudKit concepts.

00:02:41.486 --> 00:02:43.396 A:middle
At the end of the day, you're

00:02:43.396 --> 00:02:45.476 A:middle
using the API to store records

00:02:45.596 --> 00:02:46.676 A:middle
back to the CloudKit server.

00:02:47.436 --> 00:02:48.626 A:middle
This is your structured data,

00:02:48.716 --> 00:02:50.516 A:middle
your keys and values, and as a

00:02:50.516 --> 00:02:51.686 A:middle
reminder, the values can be

00:02:51.686 --> 00:02:53.306 A:middle
different types, strings, ints

00:02:53.306 --> 00:02:54.656 A:middle
[phonetic], doubles, an asset,

00:02:54.656 --> 00:02:55.576 A:middle
which is a binary file.

00:02:56.516 --> 00:02:57.926 A:middle
When you store a record, it

00:02:57.926 --> 00:02:59.446 A:middle
always exists inside of what we

00:02:59.446 --> 00:03:00.246 A:middle
call a zone.

00:02:59.446 --> 00:03:00.246 A:middle
call a zone.

00:03:00.866 --> 00:03:02.366 A:middle
A zone is basically a bucket of

00:03:02.366 --> 00:03:04.176 A:middle
records, and it's a foundational

00:03:04.176 --> 00:03:05.956 A:middle
piece of some of our APIs that

00:03:06.006 --> 00:03:06.956 A:middle
we'll talk about in a bit.

00:03:07.766 --> 00:03:09.216 A:middle
A zone always exists in a

00:03:09.216 --> 00:03:11.366 A:middle
database, and some databases

00:03:11.366 --> 00:03:12.466 A:middle
allow you to create different

00:03:12.466 --> 00:03:13.896 A:middle
zones, if you need to bucket

00:03:13.896 --> 00:03:15.026 A:middle
records in different ways.

00:03:16.086 --> 00:03:18.086 A:middle
All of your users have their own

00:03:18.086 --> 00:03:19.046 A:middle
private database.

00:03:19.166 --> 00:03:20.166 A:middle
This is where you store their

00:03:20.166 --> 00:03:21.736 A:middle
private data that only they can

00:03:21.736 --> 00:03:22.006 A:middle
see.

00:03:23.206 --> 00:03:25.146 A:middle
They also have their own shared

00:03:25.146 --> 00:03:26.806 A:middle
database, and this is because

00:03:26.806 --> 00:03:28.316 A:middle
last year, we launched CloudKit

00:03:28.316 --> 00:03:29.966 A:middle
Sharing, and if one of your

00:03:29.966 --> 00:03:31.596 A:middle
users shares data with another

00:03:31.596 --> 00:03:33.176 A:middle
one, that data shows up in their

00:03:33.176 --> 00:03:34.056 A:middle
shared database.

00:03:34.326 --> 00:03:35.706 A:middle
You can think of it as a proxy

00:03:35.986 --> 00:03:37.236 A:middle
back to the owner's private

00:03:37.236 --> 00:03:37.426 A:middle
data.

00:03:38.316 --> 00:03:39.296 A:middle
And then finally, there's a

00:03:39.296 --> 00:03:41.206 A:middle
public database which everyone

00:03:41.206 --> 00:03:42.336 A:middle
can read and write to, and

00:03:42.336 --> 00:03:43.256 A:middle
there's one of those.

00:03:44.496 --> 00:03:45.896 A:middle
All of this data, all of these

00:03:45.896 --> 00:03:47.426 A:middle
databases live in side of an

00:03:47.426 --> 00:03:48.056 A:middle
environment.

00:03:48.756 --> 00:03:49.436 A:middle
When you're building your

00:03:49.436 --> 00:03:50.536 A:middle
application, this is the

00:03:50.536 --> 00:03:52.446 A:middle
development environment, and at

00:03:52.446 --> 00:03:53.536 A:middle
the environment level, you

00:03:53.536 --> 00:03:55.176 A:middle
define your schema, your record

00:03:55.176 --> 00:03:56.446 A:middle
types, the type of data you'll

00:03:56.446 --> 00:03:58.036 A:middle
be storing, and potentially

00:03:58.036 --> 00:03:59.106 A:middle
indexes, if you're going to be

00:03:59.106 --> 00:03:59.656 A:middle
querying it.

00:04:00.746 --> 00:04:01.286 A:middle
Now, you're using the

00:04:01.286 --> 00:04:02.256 A:middle
development environment as

00:04:02.256 --> 00:04:03.366 A:middle
you're building your app, and

00:04:03.616 --> 00:04:04.606 A:middle
then once you put your app in a

00:04:04.606 --> 00:04:05.946 A:middle
store, it talks to the

00:04:05.946 --> 00:04:06.986 A:middle
production environment.

00:04:07.756 --> 00:04:09.066 A:middle
So, we give you a way to promote

00:04:09.066 --> 00:04:10.316 A:middle
your schema changes to the

00:04:10.316 --> 00:04:12.096 A:middle
production environment, and then

00:04:12.096 --> 00:04:13.946 A:middle
in production, all of your users

00:04:13.946 --> 00:04:15.566 A:middle
have their own private, shared,

00:04:15.606 --> 00:04:16.906 A:middle
and one public database there,

00:04:17.096 --> 00:04:18.096 A:middle
separate from the development

00:04:18.096 --> 00:04:18.536 A:middle
environment.

00:04:18.776 --> 00:04:20.555 A:middle
And then, all of this lives in

00:04:20.555 --> 00:04:22.186 A:middle
the highest-level concept, which

00:04:22.186 --> 00:04:22.766 A:middle
is a container.

00:04:23.506 --> 00:04:24.336 A:middle
Container has a unique

00:04:24.336 --> 00:04:26.256 A:middle
identifier, and it usually maps

00:04:26.256 --> 00:04:26.956 A:middle
one to one with your

00:04:26.956 --> 00:04:27.536 A:middle
application.

00:04:28.516 --> 00:04:30.016 A:middle
Okay, so that was the CloudKit

00:04:30.046 --> 00:04:30.646 A:middle
concepts.

00:04:31.066 --> 00:04:32.496 A:middle
So, I mentioned that we built an

00:04:32.496 --> 00:04:34.086 A:middle
example application on top of

00:04:34.086 --> 00:04:35.336 A:middle
CloudKit that I want to use

00:04:35.336 --> 00:04:36.236 A:middle
today during the demo.

00:04:36.706 --> 00:04:37.806 A:middle
So, let's talk about it.

00:04:38.396 --> 00:04:39.846 A:middle
It's a to-do list app, the

00:04:39.846 --> 00:04:40.606 A:middle
age-old example.

00:04:40.696 --> 00:04:41.596 A:middle
It's relatively simple.

00:04:42.056 --> 00:04:43.666 A:middle
The idea is, users can create

00:04:43.666 --> 00:04:44.936 A:middle
to-do lists, and they can have

00:04:44.936 --> 00:04:45.976 A:middle
items inside of there.

00:04:46.536 --> 00:04:47.626 A:middle
So, let's talk about the data

00:04:47.626 --> 00:04:49.096 A:middle
model that we'll be using, since

00:04:49.096 --> 00:04:50.396 A:middle
we'll be storing this data back

00:04:50.506 --> 00:04:51.096 A:middle
to CloudKit.

00:04:52.256 --> 00:04:53.616 A:middle
So, every time your user creates

00:04:53.616 --> 00:04:55.926 A:middle
a to-do list in the app, we'll

00:04:55.926 --> 00:04:57.156 A:middle
create a List record on the

00:04:57.156 --> 00:04:57.466 A:middle
server.

00:04:58.626 --> 00:04:59.646 A:middle
Whenever they create items

00:04:59.646 --> 00:05:00.946 A:middle
within the list, we'll have an

00:04:59.646 --> 00:05:00.946 A:middle
within the list, we'll have an

00:05:00.946 --> 00:05:02.776 A:middle
item record for each, and we

00:05:02.776 --> 00:05:05.136 A:middle
need a way to point the item

00:05:05.136 --> 00:05:06.186 A:middle
back to the list to which it

00:05:06.186 --> 00:05:07.936 A:middle
belongs, and in CloudKit, you do

00:05:07.936 --> 00:05:09.556 A:middle
that with a reference, which is

00:05:09.556 --> 00:05:10.736 A:middle
basically a pointer back to

00:05:10.736 --> 00:05:11.826 A:middle
another record via its

00:05:11.826 --> 00:05:12.426 A:middle
identifier.

00:05:12.966 --> 00:05:14.416 A:middle
And, in this case, we're going

00:05:14.416 --> 00:05:15.746 A:middle
to use what's called the parent

00:05:15.746 --> 00:05:16.386 A:middle
reference.

00:05:16.966 --> 00:05:18.496 A:middle
The parent reference is a system

00:05:18.496 --> 00:05:19.836 A:middle
field that exists on every

00:05:19.836 --> 00:05:20.226 A:middle
record.

00:05:20.506 --> 00:05:21.596 A:middle
It's there for you by default,

00:05:21.596 --> 00:05:23.516 A:middle
and it's the way in CloudKit

00:05:23.516 --> 00:05:24.976 A:middle
that you logically tell the

00:05:24.976 --> 00:05:26.836 A:middle
server when something has a

00:05:26.836 --> 00:05:27.166 A:middle
parent.

00:05:27.356 --> 00:05:28.606 A:middle
So, in this case, we'll point

00:05:28.606 --> 00:05:30.186 A:middle
the item back to the List record

00:05:30.296 --> 00:05:31.476 A:middle
using this parent reference.

00:05:32.426 --> 00:05:33.956 A:middle
Now, we also, in this example

00:05:33.956 --> 00:05:35.926 A:middle
app, wanted to allow our users

00:05:36.216 --> 00:05:38.216 A:middle
to securely share to-do lists

00:05:38.216 --> 00:05:39.726 A:middle
with other users using CloudKit

00:05:39.726 --> 00:05:40.076 A:middle
Sharing.

00:05:40.976 --> 00:05:41.926 A:middle
So, here's how that will work in

00:05:41.926 --> 00:05:42.546 A:middle
the data model.

00:05:43.566 --> 00:05:45.346 A:middle
Our List record will be what we

00:05:45.346 --> 00:05:47.176 A:middle
call a Root record, and it will

00:05:47.176 --> 00:05:48.326 A:middle
point to a Share record.

00:05:48.786 --> 00:05:50.066 A:middle
A share is where you define the

00:05:50.066 --> 00:05:51.196 A:middle
set of participants and their

00:05:51.196 --> 00:05:53.416 A:middle
permissions, and because we use

00:05:53.416 --> 00:05:54.866 A:middle
the parent reference to point

00:05:54.866 --> 00:05:56.676 A:middle
items back to a list, they

00:05:56.706 --> 00:05:57.956 A:middle
automatically get included in

00:05:57.956 --> 00:05:58.866 A:middle
the share for us.

00:05:59.016 --> 00:05:59.876 A:middle
You don't have to go and share

00:05:59.876 --> 00:06:00.486 A:middle
them separately.

00:05:59.876 --> 00:06:00.486 A:middle
them separately.

00:06:01.196 --> 00:06:03.546 A:middle
To learn more about sharing,

00:06:04.076 --> 00:06:05.116 A:middle
make sure to go back and check

00:06:05.116 --> 00:06:06.356 A:middle
out last year's session, What's

00:06:06.356 --> 00:06:07.106 A:middle
New with CloudKit.

00:06:08.216 --> 00:06:09.526 A:middle
Okay, so that's how we're going

00:06:09.526 --> 00:06:10.426 A:middle
to be storing the data.

00:06:10.946 --> 00:06:12.246 A:middle
Now, let's talk about the APIs

00:06:12.246 --> 00:06:13.956 A:middle
we're going to be using, how

00:06:13.956 --> 00:06:15.316 A:middle
we'll communicate back to the

00:06:15.316 --> 00:06:15.726 A:middle
server.

00:06:16.606 --> 00:06:17.416 A:middle
So, the way we wanted this

00:06:17.416 --> 00:06:19.206 A:middle
application to work is that if

00:06:19.206 --> 00:06:21.136 A:middle
the user opens it up and creates

00:06:21.136 --> 00:06:22.806 A:middle
to-do lists with items on their

00:06:22.806 --> 00:06:24.286 A:middle
iPhone, but they also have an

00:06:24.346 --> 00:06:25.606 A:middle
iPad, and they run the app

00:06:25.606 --> 00:06:26.996 A:middle
there, we want that data to be

00:06:26.996 --> 00:06:27.766 A:middle
synchronized.

00:06:28.276 --> 00:06:29.186 A:middle
And, because we're using

00:06:29.186 --> 00:06:31.146 A:middle
sharing, if I share a list with

00:06:31.146 --> 00:06:32.516 A:middle
someone else, and either of us

00:06:32.586 --> 00:06:34.176 A:middle
edits it, we want the other to

00:06:34.176 --> 00:06:35.176 A:middle
see those edits.

00:06:36.186 --> 00:06:37.796 A:middle
So, we have a core data, we're

00:06:37.796 --> 00:06:39.046 A:middle
locally storing all of our data

00:06:39.046 --> 00:06:40.716 A:middle
locally in core data, and we do

00:06:40.716 --> 00:06:42.176 A:middle
this for quick reads and writes,

00:06:42.216 --> 00:06:43.406 A:middle
and for offline access.

00:06:44.426 --> 00:06:45.366 A:middle
But, every time there's a

00:06:45.366 --> 00:06:46.726 A:middle
modification, when there's

00:06:46.726 --> 00:06:48.326 A:middle
network availability, we want to

00:06:48.326 --> 00:06:49.476 A:middle
send that back to the server.

00:06:49.976 --> 00:06:51.246 A:middle
The server holds the truth.

00:06:51.856 --> 00:06:54.046 A:middle
And, if we use in CloudKit

00:06:54.046 --> 00:06:55.866 A:middle
what's called subscriptions, we

00:06:55.866 --> 00:06:57.186 A:middle
can have the server send push

00:06:57.186 --> 00:06:59.006 A:middle
notifications to my other

00:06:59.006 --> 00:07:00.486 A:middle
devices or to other users'

00:06:59.006 --> 00:07:00.486 A:middle
devices or to other users'

00:07:00.486 --> 00:07:02.526 A:middle
devices whenever data they care

00:07:02.526 --> 00:07:03.396 A:middle
about changes.

00:07:03.866 --> 00:07:04.566 A:middle
So, here's how we're going to

00:07:04.566 --> 00:07:05.546 A:middle
make that work in the example

00:07:05.546 --> 00:07:05.666 A:middle
app.

00:07:06.396 --> 00:07:08.026 A:middle
The first time it runs, we're

00:07:08.026 --> 00:07:08.646 A:middle
going to create a

00:07:08.646 --> 00:07:10.516 A:middle
CKDatabaseSubscription on the

00:07:10.516 --> 00:07:12.466 A:middle
server for that user's private

00:07:12.466 --> 00:07:13.026 A:middle
database.

00:07:13.386 --> 00:07:14.836 A:middle
That tells the server to send

00:07:14.836 --> 00:07:16.106 A:middle
push notifications to this

00:07:16.106 --> 00:07:17.816 A:middle
user's devices whenever their

00:07:17.816 --> 00:07:19.396 A:middle
private data changes, anything

00:07:19.396 --> 00:07:20.576 A:middle
inside their private database.

00:07:21.446 --> 00:07:22.426 A:middle
We also, because we're using

00:07:22.426 --> 00:07:24.736 A:middle
sharing, have a subscription in

00:07:24.736 --> 00:07:25.776 A:middle
their shared database.

00:07:26.096 --> 00:07:27.926 A:middle
So, CloudKit will now send push

00:07:27.926 --> 00:07:29.276 A:middle
notifications to this user's

00:07:29.276 --> 00:07:30.926 A:middle
devices when data changes in

00:07:30.956 --> 00:07:32.016 A:middle
either of those places.

00:07:33.316 --> 00:07:34.376 A:middle
Now, once we receive one of

00:07:34.376 --> 00:07:35.606 A:middle
those push notifications in our

00:07:35.606 --> 00:07:37.776 A:middle
app, or when it launches, we

00:07:37.776 --> 00:07:39.206 A:middle
need a way to ask the server for

00:07:39.296 --> 00:07:40.556 A:middle
the changes that exist that we

00:07:40.556 --> 00:07:42.006 A:middle
don't have yet, and we're going

00:07:42.006 --> 00:07:43.256 A:middle
to do that with

00:07:43.336 --> 00:07:46.686 A:middle
CKFetchDatabaseChangesOperation.

00:07:47.226 --> 00:07:48.786 A:middle
This asks the server, "Please

00:07:48.786 --> 00:07:49.846 A:middle
tell me what zones have

00:07:49.846 --> 00:07:51.006 A:middle
changed," remember, we mentioned

00:07:51.006 --> 00:07:52.766 A:middle
zones earlier, "inside of this

00:07:52.766 --> 00:07:53.326 A:middle
database."

00:07:53.756 --> 00:07:55.496 A:middle
And, if any of them did, we can

00:07:55.496 --> 00:07:56.516 A:middle
then turn around and ask the

00:07:56.516 --> 00:07:58.316 A:middle
server what records changed

00:07:58.316 --> 00:07:59.846 A:middle
inside of that zone, or those

00:07:59.846 --> 00:08:02.246 A:middle
zones, with CKFetchRecordZone

00:07:59.846 --> 00:08:02.246 A:middle
zones, with CKFetchRecordZone

00:08:02.246 --> 00:08:03.256 A:middle
ChangesOperation.

00:08:04.956 --> 00:08:06.656 A:middle
To learn more about this, check

00:08:06.656 --> 00:08:07.686 A:middle
our last year's session,

00:08:07.686 --> 00:08:09.716 A:middle
CloudKit Best Practices, and

00:08:09.716 --> 00:08:10.956 A:middle
because it is such a commonly

00:08:10.956 --> 00:08:12.636 A:middle
used workflow, we've added new

00:08:12.636 --> 00:08:13.766 A:middle
documentation called

00:08:13.766 --> 00:08:15.216 A:middle
"Maintaining a Local Cache of

00:08:15.216 --> 00:08:16.906 A:middle
CloudKit Records," that walks

00:08:16.906 --> 00:08:18.216 A:middle
you through this workflow and

00:08:18.216 --> 00:08:19.546 A:middle
gives you a bunch of Swift code

00:08:19.546 --> 00:08:20.506 A:middle
so that you can build it into

00:08:20.506 --> 00:08:21.286 A:middle
your application.

00:08:23.106 --> 00:08:25.766 A:middle
Now, because fetching changes is

00:08:25.766 --> 00:08:27.616 A:middle
such a common thing, we've built

00:08:27.616 --> 00:08:28.556 A:middle
the ability to play and

00:08:28.556 --> 00:08:29.966 A:middle
experiment with it right inside

00:08:29.966 --> 00:08:30.696 A:middle
the Dashboard.

00:08:31.356 --> 00:08:32.256 A:middle
So, let's go take a look.

00:08:34.216 --> 00:08:35.476 A:middle
Alright. So, up on the screen,

00:08:35.736 --> 00:08:37.626 A:middle
on the left side, you can see

00:08:37.626 --> 00:08:39.155 A:middle
the new CloudKit Dashboard, and

00:08:39.155 --> 00:08:40.905 A:middle
on the right side, I'm sharing

00:08:40.905 --> 00:08:42.056 A:middle
the screen of this iPhone

00:08:42.366 --> 00:08:43.796 A:middle
running that example to-do list

00:08:43.796 --> 00:08:44.816 A:middle
application that I mentioned

00:08:44.816 --> 00:08:45.136 A:middle
before.

00:08:46.736 --> 00:08:47.396 A:middle
Now, if you look in the

00:08:47.396 --> 00:08:49.356 A:middle
Dashboard, we're on the home

00:08:49.356 --> 00:08:49.776 A:middle
page.

00:08:50.156 --> 00:08:51.546 A:middle
I'm signed in with my developer

00:08:51.546 --> 00:08:53.266 A:middle
account, and the first thing you

00:08:53.266 --> 00:08:54.456 A:middle
can see are all of your

00:08:54.456 --> 00:08:56.026 A:middle
developer teams, all of the

00:08:56.026 --> 00:08:56.966 A:middle
teams that you're a part of,

00:08:56.966 --> 00:08:57.816 A:middle
because you may be a part of

00:08:57.816 --> 00:08:58.526 A:middle
more than one team.

00:08:58.986 --> 00:09:01.186 A:middle
For each team, you can see the

00:08:58.986 --> 00:09:01.186 A:middle
For each team, you can see the

00:09:01.186 --> 00:09:02.646 A:middle
CloudKit containers that that

00:09:02.646 --> 00:09:04.676 A:middle
teams owns, and you can quickly

00:09:04.676 --> 00:09:05.596 A:middle
see which ones have been

00:09:05.596 --> 00:09:06.966 A:middle
deployed to production and which

00:09:06.966 --> 00:09:08.046 A:middle
ones are still in development.

00:09:09.056 --> 00:09:10.176 A:middle
If you have a bunch of teams, or

00:09:10.176 --> 00:09:11.376 A:middle
a bunch of containers, you can

00:09:11.376 --> 00:09:12.486 A:middle
always filter down the list up

00:09:12.486 --> 00:09:12.896 A:middle
at the top.

00:09:14.086 --> 00:09:15.136 A:middle
Now, in this case, this is the

00:09:15.136 --> 00:09:16.266 A:middle
container I'm using for this

00:09:16.266 --> 00:09:17.986 A:middle
example app that I'm demoing, so

00:09:17.986 --> 00:09:18.566 A:middle
let's click in.

00:09:19.236 --> 00:09:21.466 A:middle
When you click into a container,

00:09:21.846 --> 00:09:22.996 A:middle
you see the development and

00:09:22.996 --> 00:09:24.216 A:middle
production environments that I

00:09:24.216 --> 00:09:25.866 A:middle
mentioned earlier, side by side.

00:09:25.936 --> 00:09:27.606 A:middle
And, in this case, we're using

00:09:27.606 --> 00:09:28.646 A:middle
the development environment,

00:09:28.646 --> 00:09:29.596 A:middle
because I'm still building this

00:09:29.596 --> 00:09:30.196 A:middle
example app.

00:09:30.806 --> 00:09:31.886 A:middle
So, let's click into the data

00:09:31.886 --> 00:09:33.776 A:middle
section, and into a tab called

00:09:33.776 --> 00:09:34.386 A:middle
Zones.

00:09:35.606 --> 00:09:37.296 A:middle
This lets you play with the zone

00:09:37.296 --> 00:09:38.956 A:middle
API in CloudKit.

00:09:39.276 --> 00:09:41.416 A:middle
You can ask the server for zone

00:09:41.416 --> 00:09:42.896 A:middle
information inside of a specific

00:09:42.896 --> 00:09:43.506 A:middle
database.

00:09:44.226 --> 00:09:45.496 A:middle
Now, in this case, I want to

00:09:45.496 --> 00:09:47.226 A:middle
show you, I'm logged into the

00:09:47.226 --> 00:09:49.046 A:middle
Dashboard with my developer

00:09:49.046 --> 00:09:51.296 A:middle
account, and that Apple ID is

00:09:51.296 --> 00:09:54.206 A:middle
the same one on my device.

00:09:54.206 --> 00:09:55.666 A:middle
It's my personal iCloud account,

00:09:55.736 --> 00:09:56.916 A:middle
and my developer account.

00:09:57.716 --> 00:09:59.186 A:middle
So, because it is my personal

00:09:59.186 --> 00:10:01.036 A:middle
iCloud account, I can see my

00:09:59.186 --> 00:10:01.036 A:middle
iCloud account, I can see my

00:10:01.036 --> 00:10:02.976 A:middle
private and shared databases.

00:10:03.776 --> 00:10:05.486 A:middle
&gt;&gt; So here, the Dashboard asks

00:10:05.486 --> 00:10:06.606 A:middle
you, "Would you like to load

00:10:06.606 --> 00:10:08.186 A:middle
zones from a private database

00:10:08.186 --> 00:10:09.316 A:middle
for this account, a shared

00:10:09.316 --> 00:10:10.326 A:middle
database, or the public

00:10:10.326 --> 00:10:10.786 A:middle
database?"

00:10:11.076 --> 00:10:12.196 A:middle
And, let's do the private

00:10:12.196 --> 00:10:12.716 A:middle
database.

00:10:13.766 --> 00:10:14.846 A:middle
Because we want to use the fetch

00:10:14.846 --> 00:10:16.336 A:middle
changes APIs, we're going to

00:10:16.336 --> 00:10:17.806 A:middle
check this box to fetch the

00:10:17.806 --> 00:10:19.466 A:middle
zones that have changed inside

00:10:19.466 --> 00:10:21.346 A:middle
of this database since a certain

00:10:21.346 --> 00:10:21.916 A:middle
point in time.

00:10:21.916 --> 00:10:24.356 A:middle
Now, the way this API works is,

00:10:24.356 --> 00:10:25.546 A:middle
it allows you to specify a

00:10:25.546 --> 00:10:27.376 A:middle
change token which marks where

00:10:27.376 --> 00:10:28.566 A:middle
in history you have synchronized

00:10:28.566 --> 00:10:28.926 A:middle
up to.

00:10:29.806 --> 00:10:31.336 A:middle
You can apply that here, and

00:10:31.336 --> 00:10:32.356 A:middle
we're going to leave it blank,

00:10:32.496 --> 00:10:33.606 A:middle
which tells the server we want

00:10:33.636 --> 00:10:35.086 A:middle
all changes inside of this

00:10:35.086 --> 00:10:36.456 A:middle
database since the beginning of

00:10:36.456 --> 00:10:38.926 A:middle
time, and if I fetch the

00:10:38.926 --> 00:10:39.846 A:middle
changes, you see we get a

00:10:39.846 --> 00:10:40.396 A:middle
result.

00:10:41.006 --> 00:10:43.336 A:middle
This To-dos zone is the zone

00:10:43.336 --> 00:10:44.776 A:middle
that my application created the

00:10:44.776 --> 00:10:46.466 A:middle
first time it ran on this

00:10:46.466 --> 00:10:48.206 A:middle
device, and it gives us a place

00:10:48.206 --> 00:10:49.476 A:middle
to store the future records that

00:10:49.476 --> 00:10:50.956 A:middle
we'll be saving as the user

00:10:50.956 --> 00:10:52.576 A:middle
creates to-do lists and items.

00:10:53.586 --> 00:10:55.166 A:middle
Notice that the server returned

00:10:55.166 --> 00:10:56.566 A:middle
a change token which, it's

00:10:56.736 --> 00:10:58.036 A:middle
populated automatically in this

00:10:58.036 --> 00:10:59.546 A:middle
field, marking that we've moved

00:10:59.546 --> 00:11:00.506 A:middle
forward in time.

00:10:59.546 --> 00:11:00.506 A:middle
forward in time.

00:11:01.176 --> 00:11:02.596 A:middle
So, if I fetch changes again

00:11:02.596 --> 00:11:04.516 A:middle
with this token now, the server

00:11:04.516 --> 00:11:06.296 A:middle
says, "No zones have changed

00:11:06.296 --> 00:11:07.736 A:middle
since then," so we're up to

00:11:08.396 --> 00:11:08.486 A:middle
date.

00:11:09.196 --> 00:11:10.406 A:middle
Now, if I clear that token and

00:11:10.616 --> 00:11:11.666 A:middle
we go back since the beginning

00:11:11.666 --> 00:11:13.066 A:middle
of time, we'll see my To-dos

00:11:13.066 --> 00:11:13.416 A:middle
zone.

00:11:14.276 --> 00:11:15.906 A:middle
If I hover this row, the

00:11:15.906 --> 00:11:17.076 A:middle
Dashboard gives us a handy

00:11:17.076 --> 00:11:18.946 A:middle
little link to then go and fetch

00:11:18.946 --> 00:11:20.766 A:middle
the record changes inside of

00:11:20.766 --> 00:11:21.226 A:middle
this zone.

00:11:21.706 --> 00:11:22.466 A:middle
So, let's do that.

00:11:23.356 --> 00:11:24.976 A:middle
Notice it's taken us over to the

00:11:24.976 --> 00:11:25.726 A:middle
Records tab.

00:11:26.356 --> 00:11:27.876 A:middle
It's chosen my private database,

00:11:28.456 --> 00:11:29.856 A:middle
the To-dos zone that I clicked

00:11:29.856 --> 00:11:31.656 A:middle
on, and it said we want to load

00:11:31.656 --> 00:11:33.216 A:middle
record using the fetch changes

00:11:33.216 --> 00:11:33.676 A:middle
APIs.

00:11:34.116 --> 00:11:35.406 A:middle
And, we see two results over on

00:11:35.406 --> 00:11:35.726 A:middle
the right.

00:11:36.466 --> 00:11:38.576 A:middle
The first is a List record, and

00:11:38.576 --> 00:11:39.546 A:middle
if you look on the right side of

00:11:39.546 --> 00:11:40.866 A:middle
the screen, you'll see that's

00:11:40.866 --> 00:11:42.196 A:middle
because I've already created a

00:11:42.196 --> 00:11:43.666 A:middle
to-do list in my application,

00:11:43.796 --> 00:11:45.916 A:middle
Vacation Ideas, and it's stored

00:11:45.916 --> 00:11:47.446 A:middle
that back to the server, and so

00:11:47.446 --> 00:11:48.516 A:middle
the server is telling us about

00:11:48.516 --> 00:11:49.136 A:middle
that change.

00:11:50.296 --> 00:11:51.486 A:middle
We also see a shared record, but

00:11:51.486 --> 00:11:52.366 A:middle
we'll get back to that in just a

00:11:52.366 --> 00:11:52.726 A:middle
second.

00:11:53.696 --> 00:11:55.086 A:middle
So, much like the fetch database

00:11:55.086 --> 00:11:56.646 A:middle
changes, when you fetch zone

00:11:56.646 --> 00:11:58.096 A:middle
changes, the server returned to

00:11:58.096 --> 00:12:00.656 A:middle
us the change token where we are

00:11:58.096 --> 00:12:00.656 A:middle
us the change token where we are

00:12:00.656 --> 00:12:02.536 A:middle
now in history, so if I fetch

00:12:02.536 --> 00:12:04.466 A:middle
changes again, it says there are

00:12:04.466 --> 00:12:06.416 A:middle
no new record changes inside of

00:12:06.416 --> 00:12:08.046 A:middle
this zone since that point of

00:12:08.436 --> 00:12:08.526 A:middle
time.

00:12:09.466 --> 00:12:11.036 A:middle
Alright. Now, let's take the iOS

00:12:11.036 --> 00:12:13.146 A:middle
application and create a new

00:12:13.146 --> 00:12:13.746 A:middle
to-do list.

00:12:14.496 --> 00:12:15.126 A:middle
Or, maybe not.

00:12:18.066 --> 00:12:23.206 A:middle
Well, the good news is, oh,

00:12:24.336 --> 00:12:25.026 A:middle
there it goes.

00:12:25.226 --> 00:12:25.916 A:middle
It caught up.

00:12:26.436 --> 00:12:28.356 A:middle
Alright. And, let's name this

00:12:28.356 --> 00:12:30.376 A:middle
one Chores, because

00:12:30.376 --> 00:12:31.326 A:middle
unfortunately I'll have to do

00:12:31.326 --> 00:12:31.586 A:middle
those.

00:12:32.936 --> 00:12:34.316 A:middle
Alright. So, that technically

00:12:34.316 --> 00:12:35.636 A:middle
saved back two lists to the

00:12:35.636 --> 00:12:37.006 A:middle
server, so we have three here in

00:12:37.006 --> 00:12:38.026 A:middle
our iOS application.

00:12:38.626 --> 00:12:39.456 A:middle
Now, let's jump back to the

00:12:39.456 --> 00:12:41.166 A:middle
Dashboard and fetch those

00:12:41.266 --> 00:12:42.906 A:middle
changes inside of this zone

00:12:43.256 --> 00:12:44.386 A:middle
since the last time, when it

00:12:44.386 --> 00:12:46.146 A:middle
said there weren't any.

00:12:47.196 --> 00:12:48.746 A:middle
So now, when I fetch changes, we

00:12:48.746 --> 00:12:50.086 A:middle
see those two List records that

00:12:50.086 --> 00:12:52.406 A:middle
I just created in the app.

00:12:52.406 --> 00:12:54.076 A:middle
And, if I tap on the record name

00:12:54.076 --> 00:12:56.036 A:middle
for that second one, it opens up

00:12:56.036 --> 00:12:57.636 A:middle
what we call the Record Editor.

00:12:58.296 --> 00:12:59.796 A:middle
This shows you information about

00:12:59.796 --> 00:13:01.436 A:middle
that specific record, and in

00:12:59.796 --> 00:13:01.436 A:middle
that specific record, and in

00:13:01.436 --> 00:13:02.636 A:middle
this case, we can see its unique

00:13:02.636 --> 00:13:03.246 A:middle
record name.

00:13:03.946 --> 00:13:05.846 A:middle
We can see the record type, and

00:13:05.846 --> 00:13:07.256 A:middle
in this case, it's a List record

00:13:07.256 --> 00:13:08.376 A:middle
type, like I mentioned before,

00:13:08.376 --> 00:13:09.296 A:middle
when we were talking about the

00:13:09.296 --> 00:13:09.896 A:middle
data model.

00:13:10.856 --> 00:13:12.596 A:middle
It's in my private database in

00:13:12.596 --> 00:13:14.266 A:middle
the To-dos zone, and it was

00:13:14.266 --> 00:13:15.626 A:middle
created and modified by me just

00:13:15.626 --> 00:13:16.186 A:middle
a second ago.

00:13:17.466 --> 00:13:18.546 A:middle
Down below, you can see the

00:13:18.546 --> 00:13:20.506 A:middle
fields that we stored for this

00:13:20.506 --> 00:13:21.726 A:middle
record, and in this case, we're

00:13:21.726 --> 00:13:23.496 A:middle
using a Name field to store the

00:13:23.496 --> 00:13:24.746 A:middle
name that the user provided in

00:13:24.746 --> 00:13:25.436 A:middle
the application.

00:13:26.256 --> 00:13:28.086 A:middle
So, I've decided, chores don't

00:13:28.086 --> 00:13:30.076 A:middle
sound very exciting, so let's

00:13:30.076 --> 00:13:31.656 A:middle
rename this to Movies to Watch,

00:13:31.656 --> 00:13:32.756 A:middle
and change the to-do list.

00:13:33.296 --> 00:13:34.506 A:middle
Now, I'm going to save this back

00:13:34.506 --> 00:13:35.206 A:middle
to the Server view of the

00:13:35.206 --> 00:13:36.466 A:middle
Dashboard, and I want you to

00:13:36.466 --> 00:13:37.906 A:middle
watch the iOS application on the

00:13:37.906 --> 00:13:38.486 A:middle
right side.

00:13:39.906 --> 00:13:42.186 A:middle
So, the Dashboard changed, saved

00:13:42.186 --> 00:13:43.366 A:middle
that record change back to the

00:13:43.366 --> 00:13:43.736 A:middle
server.

00:13:44.436 --> 00:13:45.706 A:middle
The server saw that I had a

00:13:45.706 --> 00:13:47.046 A:middle
subscription for my private

00:13:47.046 --> 00:13:48.506 A:middle
database, sent a push

00:13:48.506 --> 00:13:49.876 A:middle
notification to my device.

00:13:50.496 --> 00:13:52.066 A:middle
My application saw that push,

00:13:52.466 --> 00:13:53.746 A:middle
turned around, fetched the new

00:13:53.746 --> 00:13:55.936 A:middle
changes, updated its local core

00:13:55.936 --> 00:13:57.566 A:middle
data cache, and now you can see

00:13:57.566 --> 00:13:59.226 A:middle
the UI reflects the fact that

00:13:59.226 --> 00:14:00.596 A:middle
we've changed that list to

00:13:59.226 --> 00:14:00.596 A:middle
we've changed that list to

00:14:00.596 --> 00:14:01.486 A:middle
Movies to Watch.

00:14:02.396 --> 00:14:04.066 A:middle
So, hopefully that walks you

00:14:04.066 --> 00:14:05.296 A:middle
through some of the things that

00:14:05.296 --> 00:14:06.546 A:middle
you can do now with the fetch

00:14:06.546 --> 00:14:07.176 A:middle
changes API.

00:14:08.376 --> 00:14:10.386 A:middle
Let's jump back to slides and

00:14:10.386 --> 00:14:11.616 A:middle
recap what we just talked about.

00:14:12.986 --> 00:14:15.496 A:middle
So, in the Dashboard, when we

00:14:15.496 --> 00:14:17.346 A:middle
use the Record Editor to modify

00:14:17.346 --> 00:14:18.596 A:middle
that record to update it on the

00:14:18.596 --> 00:14:21.236 A:middle
server, it used the publicly

00:14:21.236 --> 00:14:23.156 A:middle
available CloudKit Web Service

00:14:23.156 --> 00:14:24.686 A:middle
APIs that all of you can use.

00:14:25.266 --> 00:14:26.936 A:middle
It sent an HTTP post to the

00:14:26.936 --> 00:14:28.846 A:middle
records modify end point, and it

00:14:28.846 --> 00:14:30.626 A:middle
sent a JSON body saying, "I

00:14:30.626 --> 00:14:31.606 A:middle
would like to update this

00:14:31.606 --> 00:14:33.556 A:middle
record," and set its name field

00:14:33.556 --> 00:14:34.506 A:middle
to Movies to Watch.

00:14:35.576 --> 00:14:37.186 A:middle
That corresponds to the

00:14:37.186 --> 00:14:39.516 A:middle
CKModifyRecordsOperation in the

00:14:39.516 --> 00:14:41.466 A:middle
iOS, the native API, which we're

00:14:41.466 --> 00:14:42.756 A:middle
using in the example iOS

00:14:42.756 --> 00:14:43.596 A:middle
application up here.

00:14:45.306 --> 00:14:47.076 A:middle
When we fetched zone changes

00:14:47.126 --> 00:14:49.366 A:middle
inside of our To-dos zone, that

00:14:49.366 --> 00:14:50.676 A:middle
used the publicly available

00:14:50.676 --> 00:14:52.396 A:middle
records changes end point, and

00:14:52.396 --> 00:14:53.706 A:middle
it said, "Server, please tell me

00:14:53.936 --> 00:14:54.826 A:middle
the set of records that have

00:14:54.826 --> 00:14:56.376 A:middle
changed in the To-dos zone for

00:14:56.376 --> 00:14:58.176 A:middle
days of count since this change

00:14:58.176 --> 00:14:58.476 A:middle
token."

00:14:58.866 --> 00:15:00.876 A:middle
And, that corresponds to the

00:14:58.866 --> 00:15:00.876 A:middle
And, that corresponds to the

00:15:00.876 --> 00:15:01.866 A:middle
CKFetchRecordZone

00:15:01.866 --> 00:15:03.666 A:middle
ChangesOperation in the native

00:15:03.666 --> 00:15:05.206 A:middle
API, which we're using in our

00:15:05.206 --> 00:15:05.406 A:middle
app.

00:15:06.206 --> 00:15:07.226 A:middle
So, the point here is that the

00:15:07.226 --> 00:15:08.516 A:middle
Dashboard now lets you play with

00:15:08.516 --> 00:15:10.606 A:middle
the exact same APIs that you're

00:15:10.606 --> 00:15:11.676 A:middle
using in your native and web

00:15:11.676 --> 00:15:13.746 A:middle
applications, hopefully allowing

00:15:13.746 --> 00:15:14.936 A:middle
you to understand and debug

00:15:14.936 --> 00:15:16.226 A:middle
functionality as you're building

00:15:16.226 --> 00:15:17.236 A:middle
it into your application.

00:15:18.576 --> 00:15:21.396 A:middle
Now, I mentioned that part of

00:15:21.396 --> 00:15:22.206 A:middle
getting all of this data

00:15:22.206 --> 00:15:23.826 A:middle
synchronization to work is

00:15:23.826 --> 00:15:25.066 A:middle
subscriptions and push

00:15:25.066 --> 00:15:27.456 A:middle
notifications, so let's jump

00:15:27.456 --> 00:15:29.106 A:middle
back into the Dashboard and see

00:15:29.306 --> 00:15:30.756 A:middle
how it's given us the ability to

00:15:30.756 --> 00:15:32.366 A:middle
experiment and understand more

00:15:32.366 --> 00:15:33.056 A:middle
of this behavior.

00:15:34.006 --> 00:15:34.856 A:middle
So, I'm going to close out the

00:15:34.856 --> 00:15:36.146 A:middle
Record Editor, and as a

00:15:36.146 --> 00:15:36.836 A:middle
reminder, we're in the

00:15:36.836 --> 00:15:38.166 A:middle
development environment data

00:15:38.166 --> 00:15:38.646 A:middle
section.

00:15:39.046 --> 00:15:40.246 A:middle
There's a new tab here for

00:15:40.246 --> 00:15:41.026 A:middle
Subscriptions.

00:15:41.996 --> 00:15:43.626 A:middle
If I click it, this lets me use

00:15:43.666 --> 00:15:44.926 A:middle
the subscriptions API in

00:15:44.926 --> 00:15:46.506 A:middle
CloudKit to fetch down

00:15:46.506 --> 00:15:48.246 A:middle
subscriptions that exist inside

00:15:48.246 --> 00:15:49.406 A:middle
of a specific database.

00:15:49.576 --> 00:15:51.486 A:middle
So, I'm going to ask what

00:15:51.486 --> 00:15:52.626 A:middle
subscriptions exist in my

00:15:52.626 --> 00:15:54.466 A:middle
private database, and we see

00:15:54.466 --> 00:15:55.866 A:middle
that our server returned a

00:15:55.866 --> 00:15:56.256 A:middle
result.

00:15:56.726 --> 00:15:57.916 A:middle
It's a database subscription,

00:15:58.166 --> 00:15:59.686 A:middle
and I've given it the ID of

00:15:59.686 --> 00:16:00.916 A:middle
private changes, which is

00:15:59.686 --> 00:16:00.916 A:middle
private changes, which is

00:16:00.916 --> 00:16:02.076 A:middle
something I chose in my code.

00:16:02.616 --> 00:16:03.656 A:middle
So, that's a subscription that

00:16:03.656 --> 00:16:05.476 A:middle
exists that will tell the server

00:16:05.476 --> 00:16:06.916 A:middle
to send push notifications

00:16:07.246 --> 00:16:08.236 A:middle
whenever my private data

00:16:08.236 --> 00:16:08.786 A:middle
changes.

00:16:09.286 --> 00:16:11.176 A:middle
If we look in the shared

00:16:11.176 --> 00:16:13.216 A:middle
database, we also see a database

00:16:13.216 --> 00:16:14.516 A:middle
subscription there, like I

00:16:14.516 --> 00:16:16.116 A:middle
mentioned, with the ID, shared

00:16:16.116 --> 00:16:16.696 A:middle
changes.

00:16:18.246 --> 00:16:20.316 A:middle
Now, there are subscriptions and

00:16:20.316 --> 00:16:21.506 A:middle
push notifications and you're

00:16:21.506 --> 00:16:22.896 A:middle
fetching changes, potentially

00:16:22.896 --> 00:16:24.356 A:middle
across multiple devices.

00:16:24.706 --> 00:16:25.996 A:middle
There's a lot going on here.

00:16:26.186 --> 00:16:28.066 A:middle
Wouldn't it be awesome to see a

00:16:28.066 --> 00:16:30.216 A:middle
log of all of these events as

00:16:30.216 --> 00:16:31.476 A:middle
they're happening on the server?

00:16:32.006 --> 00:16:32.756 A:middle
Well, now there is.

00:16:33.696 --> 00:16:34.736 A:middle
If I click back up to the

00:16:34.736 --> 00:16:38.026 A:middle
container, thanks, there's a new

00:16:38.026 --> 00:16:39.726 A:middle
section called Logs that I'm

00:16:39.726 --> 00:16:40.546 A:middle
going to click into for the

00:16:40.546 --> 00:16:41.566 A:middle
development environment.

00:16:42.516 --> 00:16:44.016 A:middle
This starts on a feature we call

00:16:44.076 --> 00:16:44.796 A:middle
Live Log.

00:16:45.446 --> 00:16:46.896 A:middle
It opens up a real-time

00:16:46.896 --> 00:16:48.526 A:middle
connection back to the CloudKit

00:16:48.526 --> 00:16:50.526 A:middle
server, and the server will push

00:16:50.526 --> 00:16:52.406 A:middle
events as they happen right to

00:16:52.406 --> 00:16:52.996 A:middle
your browser.

00:16:53.776 --> 00:16:55.466 A:middle
It loads a bit of history, so

00:16:55.466 --> 00:16:56.556 A:middle
here we can see some requests we

00:16:56.556 --> 00:16:58.326 A:middle
were doing from iOS, from the

00:16:58.326 --> 00:17:00.116 A:middle
app up here, as well as from the

00:16:58.326 --> 00:17:00.116 A:middle
app up here, as well as from the

00:17:00.116 --> 00:17:01.626 A:middle
Web Service API, because that's

00:17:01.626 --> 00:17:02.766 A:middle
what the CloudKit Dashboard was

00:17:02.766 --> 00:17:03.126 A:middle
using.

00:17:03.666 --> 00:17:04.826 A:middle
We can see we were doing some

00:17:04.826 --> 00:17:06.276 A:middle
record modifies, some zone

00:17:06.276 --> 00:17:08.576 A:middle
fetches, etc. Now, let me clear

00:17:08.576 --> 00:17:10.076 A:middle
this out, and let's create a new

00:17:10.076 --> 00:17:11.646 A:middle
list, and watch what happens in

00:17:11.646 --> 00:17:12.106 A:middle
the log.

00:17:12.106 --> 00:17:14.106 A:middle
So, I'm going to create a list,

00:17:14.306 --> 00:17:16.195 A:middle
then we see the event pop in, or

00:17:16.195 --> 00:17:16.556 A:middle
boom.

00:17:17.046 --> 00:17:18.435 A:middle
So, here we can see some

00:17:18.435 --> 00:17:19.715 A:middle
information about the specific

00:17:19.715 --> 00:17:21.715 A:middle
event, but let's jump back into

00:17:21.715 --> 00:17:23.316 A:middle
slides and talk about all of the

00:17:23.316 --> 00:17:24.836 A:middle
things you might see show up in

00:17:24.836 --> 00:17:26.066 A:middle
your log.

00:17:27.616 --> 00:17:30.076 A:middle
So, here's an example row, like

00:17:30.076 --> 00:17:31.006 A:middle
we just saw in the user

00:17:31.006 --> 00:17:31.546 A:middle
interface.

00:17:31.766 --> 00:17:33.156 A:middle
Let's walk through each column

00:17:33.266 --> 00:17:34.396 A:middle
and see what shows up.

00:17:35.346 --> 00:17:36.746 A:middle
The first one is the time.

00:17:37.086 --> 00:17:38.066 A:middle
This is the time at which the

00:17:38.066 --> 00:17:39.176 A:middle
event happened on the server.

00:17:40.226 --> 00:17:41.676 A:middle
The next column is the platform.

00:17:42.176 --> 00:17:43.696 A:middle
This tells you which platform

00:17:43.696 --> 00:17:44.776 A:middle
the request came from.

00:17:45.276 --> 00:17:46.716 A:middle
Because CloudKit is available

00:17:46.716 --> 00:17:49.876 A:middle
iOS macOS, tvOS, and watchOS,

00:17:49.876 --> 00:17:51.096 A:middle
you may see all of those show up

00:17:51.096 --> 00:17:52.376 A:middle
here, if you're building apps on

00:17:52.376 --> 00:17:53.146 A:middle
those platforms.

00:17:53.826 --> 00:17:55.236 A:middle
You also see the version of the

00:17:55.236 --> 00:17:56.906 A:middle
platform, and if you're using

00:17:56.906 --> 00:17:58.716 A:middle
the Web Service API to build a

00:17:58.716 --> 00:18:00.266 A:middle
web application or to extend

00:17:58.716 --> 00:18:00.266 A:middle
web application or to extend

00:18:00.266 --> 00:18:01.536 A:middle
your app to another platform,

00:18:01.966 --> 00:18:02.866 A:middle
then you'll see it show up here

00:18:02.866 --> 00:18:03.236 A:middle
as web.

00:18:04.726 --> 00:18:06.876 A:middle
The next column is the user.

00:18:07.466 --> 00:18:08.716 A:middle
This will show you the CloudKit

00:18:08.716 --> 00:18:09.766 A:middle
user record ID.

00:18:10.586 --> 00:18:13.206 A:middle
Now, in this case, if the person

00:18:13.426 --> 00:18:15.256 A:middle
that sent this event is on your

00:18:15.256 --> 00:18:16.806 A:middle
developer team, we know their

00:18:16.806 --> 00:18:17.846 A:middle
name, and we'll show it.

00:18:18.396 --> 00:18:19.866 A:middle
So, we knew my name, because I'm

00:18:19.866 --> 00:18:21.176 A:middle
logged into Dashboard on my

00:18:21.176 --> 00:18:22.626 A:middle
team, and this is handy as

00:18:22.626 --> 00:18:23.656 A:middle
you're testing things out with

00:18:23.656 --> 00:18:24.776 A:middle
people on your team in

00:18:24.776 --> 00:18:25.266 A:middle
development.

00:18:25.836 --> 00:18:26.916 A:middle
But, for everyone else, for all

00:18:26.916 --> 00:18:28.006 A:middle
of your normal users, it will

00:18:28.006 --> 00:18:29.116 A:middle
show you the CloudKit user

00:18:29.116 --> 00:18:30.836 A:middle
record ID.

00:18:31.286 --> 00:18:32.656 A:middle
The next column is the type of

00:18:32.656 --> 00:18:33.166 A:middle
the event.

00:18:33.806 --> 00:18:35.486 A:middle
This is most commonly database,

00:18:35.486 --> 00:18:36.376 A:middle
as you're interacting with the

00:18:36.376 --> 00:18:38.676 A:middle
database API, but if you have

00:18:38.676 --> 00:18:40.506 A:middle
subscriptions and CloudKit is

00:18:40.506 --> 00:18:41.816 A:middle
sending push notifications on

00:18:41.816 --> 00:18:43.516 A:middle
your behalf, you will see pushes

00:18:43.516 --> 00:18:44.926 A:middle
show up right here in this log

00:18:44.926 --> 00:18:45.596 A:middle
as they happen.

00:18:46.496 --> 00:18:47.806 A:middle
You will also see sharing events

00:18:47.836 --> 00:18:48.646 A:middle
called out separately.

00:18:50.146 --> 00:18:52.076 A:middle
The next column is the operation

00:18:52.076 --> 00:18:52.246 A:middle
ID.

00:18:52.916 --> 00:18:54.826 A:middle
So, as of iOS 10.3, and the

00:18:54.826 --> 00:18:56.396 A:middle
newest version of macOS Sierra,

00:18:57.166 --> 00:18:58.266 A:middle
CloudKit will automatically

00:18:58.266 --> 00:18:59.966 A:middle
create unique IDs for every

00:18:59.966 --> 00:19:01.456 A:middle
operation that you're issuing in

00:18:59.966 --> 00:19:01.456 A:middle
operation that you're issuing in

00:19:01.456 --> 00:19:03.036 A:middle
the native API, and you will see

00:19:03.036 --> 00:19:03.636 A:middle
them show up here.

00:19:05.156 --> 00:19:06.666 A:middle
The next column is operation

00:19:06.666 --> 00:19:08.266 A:middle
group name, which we'll get back

00:19:08.266 --> 00:19:10.316 A:middle
to in just a second, and the

00:19:10.316 --> 00:19:11.866 A:middle
final column are the set of

00:19:11.866 --> 00:19:13.846 A:middle
details specific to this type of

00:19:13.846 --> 00:19:14.196 A:middle
event.

00:19:14.866 --> 00:19:15.696 A:middle
Now, in this case, it was a

00:19:15.696 --> 00:19:17.516 A:middle
database event, and so we can

00:19:17.516 --> 00:19:18.606 A:middle
see the type of database

00:19:18.606 --> 00:19:20.126 A:middle
operation that we issued back to

00:19:20.126 --> 00:19:20.616 A:middle
the server.

00:19:21.116 --> 00:19:22.756 A:middle
This one was a zone fetch, but

00:19:22.756 --> 00:19:23.726 A:middle
you'll see things like record

00:19:23.726 --> 00:19:25.256 A:middle
modify, database changes,

00:19:25.476 --> 00:19:26.336 A:middle
depending on the type of

00:19:26.336 --> 00:19:27.456 A:middle
operations you're submitting.

00:19:29.256 --> 00:19:30.156 A:middle
In this case, because it's a

00:19:30.156 --> 00:19:31.526 A:middle
database operation, we could see

00:19:31.526 --> 00:19:32.806 A:middle
it was in the private database,

00:19:33.036 --> 00:19:36.316 A:middle
and in the To-dos zone.

00:19:36.446 --> 00:19:38.006 A:middle
We also see the server latency.

00:19:38.356 --> 00:19:39.546 A:middle
Now, this is how much time it

00:19:39.546 --> 00:19:40.516 A:middle
took the CloudKit server to

00:19:40.516 --> 00:19:42.376 A:middle
process this, but note that it

00:19:42.376 --> 00:19:44.136 A:middle
doesn't include internet latency

00:19:44.206 --> 00:19:45.886 A:middle
or the time spent getting from

00:19:45.886 --> 00:19:47.086 A:middle
the client to the server and

00:19:48.716 --> 00:19:48.866 A:middle
back.

00:19:49.076 --> 00:19:50.666 A:middle
You can see the request size,

00:19:50.876 --> 00:19:51.986 A:middle
and the response size.

00:19:53.076 --> 00:19:54.156 A:middle
You can also see the hardware

00:19:54.156 --> 00:19:55.896 A:middle
identifier, and no, this is not

00:19:55.896 --> 00:19:56.536 A:middle
a new iPhone.

00:19:57.136 --> 00:19:58.376 A:middle
This is actually the identifier

00:19:58.376 --> 00:20:00.256 A:middle
for an iPhone 6s Plus, like I'm

00:19:58.376 --> 00:20:00.256 A:middle
for an iPhone 6s Plus, like I'm

00:20:00.256 --> 00:20:00.826 A:middle
running up here.

00:20:02.706 --> 00:20:03.786 A:middle
&gt;&gt; Some more information about

00:20:03.786 --> 00:20:04.906 A:middle
operation groups, which we'll

00:20:04.906 --> 00:20:06.866 A:middle
talk about in just a second, and

00:20:06.866 --> 00:20:08.026 A:middle
finally, the request ID.

00:20:08.746 --> 00:20:10.616 A:middle
This is interesting, because

00:20:10.766 --> 00:20:12.406 A:middle
when you issue an operation via

00:20:12.466 --> 00:20:14.986 A:middle
the API, that usually maps to a

00:20:14.986 --> 00:20:17.346 A:middle
one-to-one request, but in some

00:20:17.346 --> 00:20:18.746 A:middle
cases, the client may need to

00:20:18.746 --> 00:20:20.466 A:middle
issue multiple network requests

00:20:20.466 --> 00:20:22.166 A:middle
to carry out your operation, and

00:20:22.166 --> 00:20:23.676 A:middle
if it does, you will see

00:20:23.676 --> 00:20:25.496 A:middle
multiple rows show up in the log

00:20:25.496 --> 00:20:27.306 A:middle
with the same operation ID but

00:20:27.306 --> 00:20:28.856 A:middle
different request IDs, allowing

00:20:28.856 --> 00:20:29.666 A:middle
you to differentiate.

00:20:30.806 --> 00:20:33.266 A:middle
If an event leads to an error,

00:20:33.506 --> 00:20:34.466 A:middle
you will see it called out in

00:20:34.466 --> 00:20:35.806 A:middle
red, and it will tell you the

00:20:35.806 --> 00:20:36.826 A:middle
specific type of error.

00:20:37.456 --> 00:20:38.846 A:middle
In this case, I tried to fetch a

00:20:38.846 --> 00:20:40.676 A:middle
zone that didn't exist, and so

00:20:40.676 --> 00:20:41.876 A:middle
the server said this was a zone

00:20:41.876 --> 00:20:44.556 A:middle
not found.

00:20:44.556 --> 00:20:45.306 A:middle
Alright. So, I mentioned

00:20:45.306 --> 00:20:46.836 A:middle
operation groups a couple times,

00:20:46.956 --> 00:20:47.806 A:middle
so what's that about?

00:20:48.506 --> 00:20:50.536 A:middle
Well, new in iOS 11 and all of

00:20:50.536 --> 00:20:51.896 A:middle
the other matching platforms,

00:20:52.176 --> 00:20:53.836 A:middle
we've provided, as you probably

00:20:53.836 --> 00:20:56.166 A:middle
guessed, the ability to group

00:20:56.166 --> 00:20:59.036 A:middle
operations based on application

00:20:59.036 --> 00:20:59.466 A:middle
logic.

00:20:59.936 --> 00:21:01.056 A:middle
So, let me give you an example.

00:20:59.936 --> 00:21:01.056 A:middle
So, let me give you an example.

00:21:01.986 --> 00:21:03.456 A:middle
In this example to-do list app,

00:21:03.666 --> 00:21:04.766 A:middle
there are a number of things

00:21:04.766 --> 00:21:06.266 A:middle
that it needs to do when it

00:21:06.266 --> 00:21:07.596 A:middle
first launches, in the

00:21:07.596 --> 00:21:08.866 A:middle
initialization logic.

00:21:09.716 --> 00:21:11.046 A:middle
It needed to create a zone on

00:21:11.046 --> 00:21:12.706 A:middle
the server within which to store

00:21:12.706 --> 00:21:13.346 A:middle
our records.

00:21:13.976 --> 00:21:15.176 A:middle
It needs to create two

00:21:15.176 --> 00:21:15.866 A:middle
subscriptions.

00:21:15.866 --> 00:21:16.556 A:middle
Remember, I mentioned the

00:21:16.556 --> 00:21:17.666 A:middle
database subscription in the

00:21:17.666 --> 00:21:18.926 A:middle
private and shared database.

00:21:20.266 --> 00:21:21.656 A:middle
And, it needs to fetch down any

00:21:21.656 --> 00:21:23.416 A:middle
existing changes in the private

00:21:23.416 --> 00:21:24.826 A:middle
and shared database, and then

00:21:24.826 --> 00:21:26.316 A:middle
potentially fetch zone changes.

00:21:26.586 --> 00:21:27.336 A:middle
So, there's a number of

00:21:27.336 --> 00:21:29.286 A:middle
operations, all of which

00:21:29.286 --> 00:21:30.846 A:middle
encompass the initialization

00:21:30.846 --> 00:21:32.386 A:middle
logic, and so we now have a way

00:21:32.386 --> 00:21:33.486 A:middle
to group all of that logic

00:21:33.616 --> 00:21:34.036 A:middle
together.

00:21:34.086 --> 00:21:36.876 A:middle
Now, as you probably know, there

00:21:36.876 --> 00:21:37.976 A:middle
are a number of Apple

00:21:37.976 --> 00:21:39.336 A:middle
applications built on top of

00:21:39.336 --> 00:21:40.806 A:middle
CloudKit, and I'd like to give

00:21:40.806 --> 00:21:43.206 A:middle
you some examples of how we use

00:21:43.206 --> 00:21:44.506 A:middle
operation group names in our

00:21:44.506 --> 00:21:44.926 A:middle
apps.

00:21:45.866 --> 00:21:47.776 A:middle
So, iCloud Backup is built on

00:21:47.776 --> 00:21:48.536 A:middle
top of CloudKit.

00:21:48.736 --> 00:21:50.516 A:middle
So, every night when your iPhone

00:21:50.516 --> 00:21:52.026 A:middle
or iPad is plugged in and on

00:21:52.026 --> 00:21:53.576 A:middle
Wi-Fi, it'll automatically back

00:21:53.576 --> 00:21:54.286 A:middle
itself up.

00:21:54.736 --> 00:21:56.116 A:middle
That may take a number of

00:21:56.116 --> 00:21:58.006 A:middle
CloudKit operations to do, and

00:21:58.006 --> 00:21:59.746 A:middle
so we can group those up inside

00:21:59.746 --> 00:22:01.046 A:middle
of an operation group named

00:21:59.746 --> 00:22:01.046 A:middle
of an operation group named

00:22:01.046 --> 00:22:01.816 A:middle
Automated Backup.

00:22:02.656 --> 00:22:03.546 A:middle
If the user triggers one

00:22:03.546 --> 00:22:05.086 A:middle
manually, we can call that out

00:22:05.086 --> 00:22:06.456 A:middle
separately as a Manual Backup.

00:22:07.026 --> 00:22:08.366 A:middle
And, when they go to restore the

00:22:08.366 --> 00:22:09.896 A:middle
data on a new device, we can

00:22:09.896 --> 00:22:11.076 A:middle
have an operation group that

00:22:11.076 --> 00:22:12.216 A:middle
encompasses all of the

00:22:12.216 --> 00:22:13.116 A:middle
operations within.

00:22:14.166 --> 00:22:15.936 A:middle
iCloud Photo Library is built on

00:22:15.936 --> 00:22:17.556 A:middle
top of CloudKit, and they use

00:22:17.556 --> 00:22:19.086 A:middle
operation groups to designate

00:22:19.086 --> 00:22:19.906 A:middle
when they're setting up your

00:22:19.906 --> 00:22:21.776 A:middle
library, downloading thumbnails,

00:22:22.046 --> 00:22:22.926 A:middle
or fetching a movie that you

00:22:22.926 --> 00:22:23.486 A:middle
tapped on.

00:22:24.576 --> 00:22:25.796 A:middle
iCloud Drive is built on

00:22:25.796 --> 00:22:27.196 A:middle
CloudKit, and so they have

00:22:27.196 --> 00:22:29.096 A:middle
operation groups to call out

00:22:29.096 --> 00:22:30.146 A:middle
when they're initially pulling

00:22:30.146 --> 00:22:31.686 A:middle
down any changes from a server,

00:22:32.036 --> 00:22:33.506 A:middle
when they do so after a push

00:22:33.576 --> 00:22:35.446 A:middle
because of a subscription, or

00:22:35.446 --> 00:22:36.526 A:middle
when you tap into a file to

00:22:36.526 --> 00:22:37.646 A:middle
download it.

00:22:38.236 --> 00:22:39.906 A:middle
So, let's look at the API.

00:22:40.856 --> 00:22:42.156 A:middle
So, there's a new class,

00:22:42.156 --> 00:22:43.266 A:middle
CKOperationGroup.

00:22:44.326 --> 00:22:45.586 A:middle
It provides you an operation

00:22:45.586 --> 00:22:47.166 A:middle
group ID set for you by the

00:22:47.166 --> 00:22:47.596 A:middle
system.

00:22:48.096 --> 00:22:50.106 A:middle
It allows you to specify a

00:22:50.286 --> 00:22:52.466 A:middle
CKOperationConfiguration, which

00:22:52.466 --> 00:22:53.286 A:middle
we'll talk about in just a

00:22:53.286 --> 00:22:53.636 A:middle
second.

00:22:54.136 --> 00:22:56.726 A:middle
It allows you to provide a name.

00:22:57.016 --> 00:22:58.246 A:middle
This is any string that makes

00:22:58.246 --> 00:22:59.956 A:middle
sense in your application, and

00:22:59.956 --> 00:23:01.126 A:middle
the names on the previous slide

00:22:59.956 --> 00:23:01.126 A:middle
the names on the previous slide

00:23:01.126 --> 00:23:02.906 A:middle
were ones that we use, and you

00:23:02.906 --> 00:23:04.246 A:middle
want to be careful not to put

00:23:04.246 --> 00:23:05.456 A:middle
personally identifiable

00:23:05.456 --> 00:23:06.476 A:middle
information into this.

00:23:06.756 --> 00:23:08.076 A:middle
This is your app logic, what

00:23:08.076 --> 00:23:08.556 A:middle
it's doing.

00:23:10.426 --> 00:23:11.996 A:middle
The next property is quantity.

00:23:12.696 --> 00:23:13.926 A:middle
This is an integer that you can

00:23:13.926 --> 00:23:15.656 A:middle
set, and it's completely up to

00:23:15.656 --> 00:23:16.376 A:middle
your application.

00:23:17.066 --> 00:23:18.836 A:middle
So, some examples from our apps

00:23:18.836 --> 00:23:20.696 A:middle
might be when we're backing

00:23:20.696 --> 00:23:22.326 A:middle
something up in iCloud Backup,

00:23:22.526 --> 00:23:23.696 A:middle
we might designate how many

00:23:23.696 --> 00:23:24.776 A:middle
files we're backing up.

00:23:25.766 --> 00:23:27.156 A:middle
Or, in iCloud Photo Library,

00:23:27.156 --> 00:23:27.676 A:middle
when they're downloading

00:23:27.676 --> 00:23:28.856 A:middle
thumbnails, we could use it to

00:23:28.856 --> 00:23:30.306 A:middle
say how many thumbnails are

00:23:30.306 --> 00:23:31.486 A:middle
being downloaded in this group.

00:23:31.866 --> 00:23:32.576 A:middle
But, the point is, it's

00:23:32.576 --> 00:23:33.256 A:middle
completely up to your

00:23:33.256 --> 00:23:33.786 A:middle
application.

00:23:36.206 --> 00:23:37.746 A:middle
You could also set the expected

00:23:37.746 --> 00:23:40.596 A:middle
send and receive sizes, and this

00:23:40.596 --> 00:23:41.736 A:middle
tells the server, I'm sorry,

00:23:41.736 --> 00:23:43.366 A:middle
tells the client how much data

00:23:43.666 --> 00:23:44.966 A:middle
you think you're estimating will

00:23:44.966 --> 00:23:46.736 A:middle
be sent back and forth between

00:23:46.736 --> 00:23:47.366 A:middle
you and the server.

00:23:47.656 --> 00:23:49.306 A:middle
And, notice the type is

00:23:49.306 --> 00:23:51.416 A:middle
CKOperationGroupTransferSize,

00:23:51.566 --> 00:23:54.016 A:middle
and this is an enum which allows

00:23:54.016 --> 00:23:55.726 A:middle
you to specify an order of

00:23:55.726 --> 00:23:56.396 A:middle
magnitude.

00:23:56.806 --> 00:23:57.706 A:middle
So, the point is, is that it's

00:23:57.706 --> 00:23:59.016 A:middle
an order-of-magnitude estimate.

00:23:59.146 --> 00:24:00.176 A:middle
It doesn't have to be perfect

00:23:59.146 --> 00:24:00.176 A:middle
It doesn't have to be perfect

00:24:00.176 --> 00:24:01.316 A:middle
exact byte counts.

00:24:01.566 --> 00:24:03.106 A:middle
And, by setting things like

00:24:03.106 --> 00:24:04.676 A:middle
these properties, as well as

00:24:04.676 --> 00:24:05.696 A:middle
properties like quality of

00:24:05.696 --> 00:24:07.906 A:middle
service, this allows the system

00:24:07.906 --> 00:24:09.806 A:middle
to optimize when network calls

00:24:09.806 --> 00:24:10.866 A:middle
are sent back to the server

00:24:11.356 --> 00:24:12.826 A:middle
based on the network conditions

00:24:12.876 --> 00:24:14.546 A:middle
of your user's device.

00:24:15.456 --> 00:24:17.726 A:middle
Finally, once you've configured

00:24:17.726 --> 00:24:19.776 A:middle
an operation group, you can add

00:24:19.776 --> 00:24:21.866 A:middle
an operation to it by applying

00:24:21.866 --> 00:24:23.026 A:middle
it to its group property.

00:24:24.006 --> 00:24:24.746 A:middle
Now, I mentioned

00:24:24.746 --> 00:24:26.876 A:middle
CKOperationConfiguration, so

00:24:26.876 --> 00:24:27.736 A:middle
let's talk about that for a

00:24:27.736 --> 00:24:28.096 A:middle
second.

00:24:29.246 --> 00:24:31.066 A:middle
In the past, you used to define

00:24:31.066 --> 00:24:31.696 A:middle
properties like

00:24:31.696 --> 00:24:32.706 A:middle
qualityOfService,

00:24:32.736 --> 00:24:34.026 A:middle
allowsCellularAccess,

00:24:34.246 --> 00:24:36.446 A:middle
isLongLived on an operation.

00:24:37.166 --> 00:24:38.746 A:middle
That is now deprecated, and

00:24:38.746 --> 00:24:40.576 A:middle
instead, you apply it to a

00:24:40.576 --> 00:24:43.246 A:middle
CKOperationConfiguration, and

00:24:43.246 --> 00:24:44.686 A:middle
the reason for that is because

00:24:44.686 --> 00:24:45.876 A:middle
we found that it was very easy

00:24:45.876 --> 00:24:47.736 A:middle
to forget to apply these to all

00:24:47.736 --> 00:24:48.776 A:middle
of the operations that you're

00:24:48.776 --> 00:24:49.646 A:middle
issuing in your client.

00:24:50.346 --> 00:24:52.086 A:middle
So now, you can set it up maybe

00:24:52.086 --> 00:24:53.356 A:middle
once or a few times.

00:24:54.076 --> 00:24:55.726 A:middle
You can apply it specifically to

00:24:55.726 --> 00:24:56.846 A:middle
an operation, if that makes

00:24:56.846 --> 00:24:59.516 A:middle
sense, or hopefully more likely,

00:24:59.736 --> 00:25:01.096 A:middle
to an entire operation group,

00:24:59.736 --> 00:25:01.096 A:middle
to an entire operation group,

00:25:01.506 --> 00:25:02.836 A:middle
which applies it to all of the

00:25:02.836 --> 00:25:04.586 A:middle
operations within, and that was

00:25:04.586 --> 00:25:05.596 A:middle
that default configuration

00:25:05.596 --> 00:25:07.106 A:middle
property on operation group that

00:25:07.106 --> 00:25:07.716 A:middle
we saw before.

00:25:09.676 --> 00:25:11.786 A:middle
OK. So, if you look back at that

00:25:11.786 --> 00:25:13.316 A:middle
example log event from before,

00:25:13.626 --> 00:25:14.576 A:middle
let's call out some of the

00:25:14.576 --> 00:25:15.786 A:middle
things that we saw around

00:25:15.786 --> 00:25:16.836 A:middle
operation groups.

00:25:17.436 --> 00:25:18.906 A:middle
So here, you can see in the log

00:25:18.906 --> 00:25:20.996 A:middle
the operation group name, so I

00:25:20.996 --> 00:25:22.256 A:middle
can see this event happened

00:25:22.256 --> 00:25:23.706 A:middle
because of my applications

00:25:23.816 --> 00:25:25.036 A:middle
initialization logic.

00:25:25.796 --> 00:25:26.846 A:middle
You can also see its unique

00:25:26.846 --> 00:25:28.636 A:middle
operation group ID and a

00:25:28.636 --> 00:25:30.036 A:middle
quantity property, if you set

00:25:30.036 --> 00:25:30.186 A:middle
it.

00:25:31.386 --> 00:25:32.816 A:middle
Now, at every event, you can see

00:25:32.816 --> 00:25:34.376 A:middle
the operation group that it

00:25:34.376 --> 00:25:34.956 A:middle
applied to.

00:25:35.486 --> 00:25:36.736 A:middle
You can then see the specific

00:25:36.736 --> 00:25:39.036 A:middle
operation that applies, based on

00:25:39.036 --> 00:25:40.736 A:middle
the operation ID, and if it

00:25:40.736 --> 00:25:42.296 A:middle
leads to multiple requests, you

00:25:42.296 --> 00:25:44.086 A:middle
can always see the specific

00:25:45.146 --> 00:25:46.406 A:middle
request ID.

00:25:47.526 --> 00:25:48.846 A:middle
Alright. So, with this new log

00:25:48.846 --> 00:25:50.146 A:middle
feature and the things being

00:25:50.146 --> 00:25:51.716 A:middle
exposed, let's take a minute to

00:25:51.716 --> 00:25:52.666 A:middle
talk about privacy.

00:25:53.566 --> 00:25:55.296 A:middle
As you know, Apple cares very

00:25:55.296 --> 00:25:56.746 A:middle
deeply about our users' privacy,

00:25:57.546 --> 00:25:58.956 A:middle
but with CloudKit, we also

00:25:58.956 --> 00:26:00.456 A:middle
understand that you're working

00:25:58.956 --> 00:26:00.456 A:middle
understand that you're working

00:26:00.456 --> 00:26:01.846 A:middle
with a system that you don't own

00:26:01.896 --> 00:26:03.856 A:middle
or have full control over, yet

00:26:03.856 --> 00:26:05.406 A:middle
you still need to debug customer

00:26:05.406 --> 00:26:06.236 A:middle
problems.

00:26:06.906 --> 00:26:07.996 A:middle
So, with both of those things in

00:26:07.996 --> 00:26:09.326 A:middle
mind, here's how it works.

00:26:09.686 --> 00:26:11.986 A:middle
As a reminder, when you log into

00:26:11.986 --> 00:26:13.466 A:middle
the CloudKit Dashboard with your

00:26:13.466 --> 00:26:15.556 A:middle
iCloud account, you can see your

00:26:15.556 --> 00:26:17.106 A:middle
private and shared data in your

00:26:17.106 --> 00:26:18.486 A:middle
private and shared databases,

00:26:18.606 --> 00:26:19.366 A:middle
just like I showed.

00:26:19.936 --> 00:26:21.166 A:middle
But, you cannot see the private

00:26:21.166 --> 00:26:22.856 A:middle
and shared data of other users.

00:26:23.956 --> 00:26:25.456 A:middle
You can see the public data in

00:26:25.456 --> 00:26:26.726 A:middle
the public database, because

00:26:26.726 --> 00:26:28.986 A:middle
it's meant to be public, and you

00:26:28.986 --> 00:26:31.056 A:middle
can now see log events for you

00:26:31.056 --> 00:26:32.206 A:middle
and every other user.

00:26:32.626 --> 00:26:34.746 A:middle
However, log events do not

00:26:34.746 --> 00:26:35.806 A:middle
include the data.

00:26:36.696 --> 00:26:38.346 A:middle
So, for example, some of the

00:26:38.346 --> 00:26:39.696 A:middle
events we would see in the case

00:26:39.696 --> 00:26:41.256 A:middle
of this to-do list app, you

00:26:41.256 --> 00:26:42.546 A:middle
could see that my account was

00:26:42.546 --> 00:26:45.066 A:middle
issuing record modifies, but you

00:26:45.066 --> 00:26:46.246 A:middle
couldn't see that I was creating

00:26:46.246 --> 00:26:48.656 A:middle
a list named Vacation Ideas, or

00:26:48.656 --> 00:26:50.266 A:middle
Chores, or Movies to Watch.

00:26:51.116 --> 00:26:52.176 A:middle
So, we hope that this balance

00:26:52.176 --> 00:26:53.386 A:middle
really allows you to debug

00:26:53.386 --> 00:26:54.976 A:middle
problems as they happen, while

00:26:54.976 --> 00:26:56.176 A:middle
still keeping your customers'

00:26:56.176 --> 00:26:58.466 A:middle
data safe and private.

00:26:59.156 --> 00:27:00.726 A:middle
OK, so I mentioned earlier that

00:26:59.156 --> 00:27:00.726 A:middle
OK, so I mentioned earlier that

00:27:00.726 --> 00:27:02.736 A:middle
we wanted to add the ability to

00:27:02.736 --> 00:27:04.206 A:middle
share in this example

00:27:04.206 --> 00:27:04.716 A:middle
application.

00:27:04.716 --> 00:27:06.566 A:middle
We want to let our users

00:27:06.706 --> 00:27:08.476 A:middle
securely share a to-do list with

00:27:08.516 --> 00:27:09.826 A:middle
other users so that they can

00:27:09.826 --> 00:27:10.426 A:middle
collaborate.

00:27:11.376 --> 00:27:12.656 A:middle
As a reminder, this was our data

00:27:12.656 --> 00:27:13.006 A:middle
model.

00:27:13.636 --> 00:27:14.986 A:middle
We point items back to a list

00:27:14.986 --> 00:27:16.866 A:middle
via the parent reference, and we

00:27:16.866 --> 00:27:18.036 A:middle
have the list as the root record

00:27:18.036 --> 00:27:18.526 A:middle
in a share.

00:27:19.996 --> 00:27:21.076 A:middle
Now, we've added some of the

00:27:21.076 --> 00:27:23.526 A:middle
ability to debug and explore

00:27:23.526 --> 00:27:24.566 A:middle
more of this in CloudKit

00:27:24.566 --> 00:27:28.026 A:middle
Dashboard, so let's go take a

00:27:28.276 --> 00:27:28.406 A:middle
look.

00:27:29.326 --> 00:27:30.206 A:middle
Now, on the right side of the

00:27:30.206 --> 00:27:31.316 A:middle
screen, I want you to look at

00:27:31.316 --> 00:27:32.086 A:middle
the iOS app.

00:27:32.086 --> 00:27:33.576 A:middle
I'm going to tap into that top

00:27:33.576 --> 00:27:35.956 A:middle
Vacation Ideas List record, and

00:27:35.956 --> 00:27:36.956 A:middle
you'll notice that it shows us

00:27:36.956 --> 00:27:38.346 A:middle
some information saying that

00:27:38.346 --> 00:27:39.306 A:middle
this is already shared.

00:27:40.036 --> 00:27:41.516 A:middle
So, what happened was, I created

00:27:41.516 --> 00:27:43.356 A:middle
this to-do list on my phone,

00:27:43.706 --> 00:27:44.686 A:middle
which means it's in my private

00:27:44.686 --> 00:27:47.046 A:middle
database, so I'm the owner, but

00:27:47.046 --> 00:27:48.216 A:middle
I invited my friend, Emily

00:27:48.216 --> 00:27:50.356 A:middle
Parker, to share this, because

00:27:50.356 --> 00:27:51.626 A:middle
she's a travel expert, and I

00:27:51.626 --> 00:27:52.876 A:middle
wanted her to give me some ideas

00:27:52.876 --> 00:27:53.956 A:middle
on where to go on vacation.

00:27:54.546 --> 00:27:58.406 A:middle
So, in the Dashboard, if we go

00:27:58.406 --> 00:27:59.876 A:middle
back to the data section,

00:28:00.506 --> 00:28:01.566 A:middle
remember, the last time we were

00:28:01.566 --> 00:28:03.356 A:middle
looking at the records in my

00:28:03.356 --> 00:28:05.006 A:middle
private database in the To-dos

00:28:05.006 --> 00:28:08.706 A:middle
zone, and if we fetch changes

00:28:08.876 --> 00:28:09.846 A:middle
until we get to a point where

00:28:09.846 --> 00:28:10.846 A:middle
nothing has changed, so the

00:28:10.846 --> 00:28:12.616 A:middle
Dashboard is up to date, let's

00:28:12.616 --> 00:28:14.656 A:middle
add an item in the iOS

00:28:14.656 --> 00:28:15.216 A:middle
application.

00:28:16.196 --> 00:28:17.906 A:middle
So, let's say I would love to go

00:28:17.906 --> 00:28:18.706 A:middle
to Paris.

00:28:20.016 --> 00:28:21.556 A:middle
So, my iOS app has stored that

00:28:21.556 --> 00:28:23.166 A:middle
record as an Item record back to

00:28:23.166 --> 00:28:24.856 A:middle
the server, and if I fetch

00:28:24.856 --> 00:28:26.126 A:middle
changes in the Dashboard again,

00:28:26.426 --> 00:28:27.386 A:middle
we see it show up.

00:28:27.936 --> 00:28:29.366 A:middle
I'm going to tap on the record

00:28:29.366 --> 00:28:30.866 A:middle
name and open up the Record

00:28:30.866 --> 00:28:31.206 A:middle
Editor.

00:28:31.786 --> 00:28:33.106 A:middle
Again, we can see this is of the

00:28:33.106 --> 00:28:33.966 A:middle
Item record type.

00:28:34.426 --> 00:28:36.056 A:middle
It's in my private database in

00:28:36.056 --> 00:28:38.286 A:middle
the To-dos zone, and down under

00:28:38.286 --> 00:28:39.516 A:middle
the Field section, we can see

00:28:39.516 --> 00:28:41.086 A:middle
Paris, the name that I provided

00:28:41.086 --> 00:28:41.806 A:middle
in the iOS app.

00:28:41.856 --> 00:28:44.036 A:middle
Now, if I zoom in a bit, you'll

00:28:44.036 --> 00:28:45.076 A:middle
notice there's a section here

00:28:45.076 --> 00:28:47.146 A:middle
labeled Sharing, and it tells us

00:28:47.146 --> 00:28:47.956 A:middle
that this record is a

00:28:47.956 --> 00:28:48.596 A:middle
descendant.

00:28:49.206 --> 00:28:50.596 A:middle
That means that it points to a

00:28:50.646 --> 00:28:52.626 A:middle
parent via its parent reference.

00:28:53.436 --> 00:28:54.556 A:middle
The Dashboard tells us the

00:28:54.556 --> 00:28:56.346 A:middle
record name for that parent, and

00:28:56.346 --> 00:28:57.966 A:middle
provides us a little jump icon

00:28:58.166 --> 00:28:59.816 A:middle
to load that parent up inside

00:28:59.816 --> 00:29:00.526 A:middle
the Record Editor.

00:28:59.816 --> 00:29:00.526 A:middle
the Record Editor.

00:29:01.066 --> 00:29:02.086 A:middle
So, let's do that.

00:29:02.616 --> 00:29:04.126 A:middle
So now, we're looking at a List

00:29:04.126 --> 00:29:06.366 A:middle
record, and this is the Vacation

00:29:06.406 --> 00:29:08.306 A:middle
Ideas List record within which

00:29:08.306 --> 00:29:09.506 A:middle
we created the Paris item.

00:29:10.736 --> 00:29:11.946 A:middle
In the Sharing section, we can

00:29:11.946 --> 00:29:13.396 A:middle
see that this is a Root record

00:29:13.396 --> 00:29:13.936 A:middle
in a share.

00:29:14.896 --> 00:29:16.476 A:middle
It points to a specific share.

00:29:16.906 --> 00:29:18.126 A:middle
It tells us what that name is,

00:29:18.336 --> 00:29:19.536 A:middle
and we can open up that share.

00:29:20.936 --> 00:29:22.236 A:middle
So now, we're looking at a

00:29:22.236 --> 00:29:25.606 A:middle
CloudKit.share record, and down

00:29:25.916 --> 00:29:27.656 A:middle
below, you'll see on the share,

00:29:27.656 --> 00:29:28.826 A:middle
you can actually see information

00:29:28.826 --> 00:29:30.246 A:middle
about the sharing participants.

00:29:30.626 --> 00:29:31.866 A:middle
So, in this case, you can see me

00:29:31.866 --> 00:29:33.886 A:middle
as the owner, and Emily, having

00:29:33.886 --> 00:29:34.336 A:middle
accepted.

00:29:35.156 --> 00:29:35.986 A:middle
You can add and remove

00:29:35.986 --> 00:29:37.916 A:middle
participants right here to test

00:29:37.916 --> 00:29:39.686 A:middle
out how your app behaves when

00:29:39.686 --> 00:29:40.966 A:middle
that data is modified on the

00:29:40.966 --> 00:29:41.356 A:middle
server.

00:29:41.726 --> 00:29:42.806 A:middle
This allows you to browse

00:29:42.806 --> 00:29:44.386 A:middle
relationships, and if the Record

00:29:44.386 --> 00:29:45.576 A:middle
Editor detects that there are

00:29:45.576 --> 00:29:47.386 A:middle
any other types of references in

00:29:47.386 --> 00:29:48.766 A:middle
your record, it will also let

00:29:48.766 --> 00:29:50.236 A:middle
you jump to them, and we have a

00:29:50.236 --> 00:29:51.436 A:middle
bit of back and forward History

00:29:51.436 --> 00:29:53.766 A:middle
buttons up here in the top left.

00:29:53.766 --> 00:29:55.046 A:middle
So, that shows you a bit of how

00:29:55.046 --> 00:29:57.016 A:middle
you can view and navigate the

00:29:57.016 --> 00:29:58.966 A:middle
data relationships going on with

00:29:58.966 --> 00:29:59.436 A:middle
sharing.

00:30:00.666 --> 00:30:02.506 A:middle
&gt;&gt; Let's take a look at how logs

00:30:02.506 --> 00:30:04.036 A:middle
can help you out when you're

00:30:04.036 --> 00:30:05.296 A:middle
doing sharing functionality in

00:30:05.296 --> 00:30:05.616 A:middle
your app.

00:30:06.126 --> 00:30:07.246 A:middle
So, I'm going to load up the

00:30:07.246 --> 00:30:07.776 A:middle
logs.

00:30:08.056 --> 00:30:08.836 A:middle
Let's clear it out.

00:30:09.406 --> 00:30:11.266 A:middle
Let's create another item in my

00:30:11.266 --> 00:30:12.106 A:middle
iOS application.

00:30:13.306 --> 00:30:14.726 A:middle
So, let's say I'd also really

00:30:14.726 --> 00:30:16.156 A:middle
like to go to Vienna, Austria.

00:30:16.526 --> 00:30:17.866 A:middle
Now, I'm going to hit Return.

00:30:17.906 --> 00:30:19.026 A:middle
I want you to watch the

00:30:19.026 --> 00:30:19.766 A:middle
Dashboard log.

00:30:20.746 --> 00:30:22.716 A:middle
So first, we see a request come

00:30:22.716 --> 00:30:24.306 A:middle
in for the record modify.

00:30:25.416 --> 00:30:27.166 A:middle
We can see, notice my operation

00:30:27.166 --> 00:30:27.726 A:middle
group name.

00:30:28.166 --> 00:30:29.706 A:middle
I'm using one saying, "Oh, this

00:30:29.706 --> 00:30:31.656 A:middle
is logic for creating an item in

00:30:31.656 --> 00:30:32.276 A:middle
the application.

00:30:32.866 --> 00:30:34.796 A:middle
It was a record modify in Dave's

00:30:34.796 --> 00:30:35.636 A:middle
private database."

00:30:36.556 --> 00:30:38.136 A:middle
After that, we can subsequently

00:30:38.136 --> 00:30:39.746 A:middle
see that CloudKit sent a push

00:30:39.746 --> 00:30:41.276 A:middle
notification to Emily.

00:30:42.326 --> 00:30:43.866 A:middle
It was in her shared database

00:30:43.996 --> 00:30:45.596 A:middle
because of a subscription called

00:30:45.596 --> 00:30:47.206 A:middle
Shared Changes that we set up on

00:30:47.206 --> 00:30:48.476 A:middle
her device when she first ran

00:30:48.476 --> 00:30:48.786 A:middle
the app.

00:30:50.266 --> 00:30:51.726 A:middle
The push notification made it to

00:30:51.726 --> 00:30:54.036 A:middle
Emily's device, and then her app

00:30:54.036 --> 00:30:55.426 A:middle
turned around and fetched

00:30:55.546 --> 00:30:57.216 A:middle
database changes, and then zone

00:30:57.216 --> 00:30:58.666 A:middle
changes, and notice the

00:30:58.666 --> 00:31:00.266 A:middle
operation group name, fetching

00:30:58.666 --> 00:31:00.266 A:middle
operation group name, fetching

00:31:00.266 --> 00:31:01.766 A:middle
changes after notification.

00:31:02.376 --> 00:31:04.016 A:middle
So, we really hope that this

00:31:04.016 --> 00:31:05.026 A:middle
will help you as you're

00:31:05.026 --> 00:31:06.076 A:middle
debugging and trying to

00:31:06.076 --> 00:31:07.066 A:middle
understand what's happening

00:31:07.066 --> 00:31:08.486 A:middle
across multiple devices and

00:31:08.486 --> 00:31:10.116 A:middle
potentially, multiple users in

00:31:10.116 --> 00:31:10.956 A:middle
sharing cases.

00:31:11.986 --> 00:31:12.846 A:middle
Now, in this case, we were in

00:31:12.846 --> 00:31:15.226 A:middle
the Live Log, but we also have a

00:31:15.226 --> 00:31:16.446 A:middle
feature called Historical Log.

00:31:16.966 --> 00:31:18.116 A:middle
This allows you to go back and

00:31:18.116 --> 00:31:19.236 A:middle
view events that happened in the

00:31:19.236 --> 00:31:19.696 A:middle
past.

00:31:20.276 --> 00:31:21.586 A:middle
We store events for up to seven

00:31:21.586 --> 00:31:23.166 A:middle
days, and you can do things

00:31:23.166 --> 00:31:25.846 A:middle
like, show me all the events

00:31:25.846 --> 00:31:27.686 A:middle
that happened yesterday, let's

00:31:27.686 --> 00:31:29.996 A:middle
say, between 9 and 10, and you

00:31:29.996 --> 00:31:30.816 A:middle
can provide a bunch more

00:31:30.816 --> 00:31:32.516 A:middle
filters, and this will return to

00:31:32.516 --> 00:31:33.746 A:middle
you all the events matching

00:31:33.746 --> 00:31:34.486 A:middle
those filters.

00:31:36.286 --> 00:31:37.576 A:middle
Alright. The last thing that I

00:31:37.576 --> 00:31:38.896 A:middle
would like to talk about is

00:31:38.896 --> 00:31:39.456 A:middle
telemetry.

00:31:40.276 --> 00:31:41.446 A:middle
So, last year we offered

00:31:41.446 --> 00:31:42.936 A:middle
CloudKit Telemetry, and this

00:31:42.936 --> 00:31:43.726 A:middle
year we've expanded the

00:31:43.726 --> 00:31:44.156 A:middle
offering.

00:31:45.076 --> 00:31:46.926 A:middle
As a reminder, telemetry is your

00:31:46.926 --> 00:31:48.756 A:middle
way to understand aggregate

00:31:48.756 --> 00:31:50.876 A:middle
behavior happening across all of

00:31:50.876 --> 00:31:52.206 A:middle
your users' devices coming into

00:31:52.206 --> 00:31:52.866 A:middle
your container.

00:31:53.826 --> 00:31:54.676 A:middle
In this case, we're looking at

00:31:54.676 --> 00:31:56.386 A:middle
the development environment, so

00:31:56.386 --> 00:31:57.776 A:middle
we're seeing information that

00:31:57.776 --> 00:31:58.906 A:middle
I've been playing with from this

00:31:58.906 --> 00:32:00.156 A:middle
app onstage.

00:31:58.906 --> 00:32:00.156 A:middle
app onstage.

00:32:01.626 --> 00:32:03.446 A:middle
You can choose a time filter, so

00:32:03.446 --> 00:32:04.706 A:middle
you can choose the last year,

00:32:04.876 --> 00:32:06.956 A:middle
the last 30 days, the last day,

00:32:06.956 --> 00:32:08.706 A:middle
or the last hour, and let's look

00:32:08.706 --> 00:32:09.956 A:middle
at the last hour, since that's

00:32:09.956 --> 00:32:11.226 A:middle
when we've been onstage playing

00:32:11.226 --> 00:32:12.986 A:middle
with this app.

00:32:13.516 --> 00:32:14.626 A:middle
You can ask for telemetry

00:32:14.626 --> 00:32:15.816 A:middle
information that applies to

00:32:15.816 --> 00:32:17.236 A:middle
everyone's private database,

00:32:17.586 --> 00:32:19.486 A:middle
everyone's shared database, or

00:32:19.486 --> 00:32:20.906 A:middle
just the public database, and

00:32:20.906 --> 00:32:21.746 A:middle
let's leave it on private.

00:32:22.976 --> 00:32:24.056 A:middle
You can also view telemetry

00:32:24.056 --> 00:32:25.566 A:middle
information around all

00:32:25.566 --> 00:32:27.576 A:middle
operations within that time

00:32:27.576 --> 00:32:28.536 A:middle
window for the private

00:32:28.536 --> 00:32:30.386 A:middle
databases, and we'll tell you

00:32:30.386 --> 00:32:31.436 A:middle
the specific types of

00:32:31.436 --> 00:32:33.106 A:middle
operations, and how many of each

00:32:33.106 --> 00:32:34.456 A:middle
came in during that time window.

00:32:34.776 --> 00:32:36.266 A:middle
So, you could say, "I would like

00:32:36.266 --> 00:32:37.546 A:middle
to see telemetry information

00:32:37.596 --> 00:32:38.836 A:middle
only for record modify

00:32:38.836 --> 00:32:39.606 A:middle
operations."

00:32:40.246 --> 00:32:41.276 A:middle
But, in this case, let's look at

00:32:41.276 --> 00:32:42.396 A:middle
it for all operations.

00:32:43.696 --> 00:32:44.636 A:middle
The first graph you see at the

00:32:44.636 --> 00:32:46.156 A:middle
top is called Requests.

00:32:46.916 --> 00:32:48.456 A:middle
This shows you all of the

00:32:48.456 --> 00:32:49.916 A:middle
requests coming into the server,

00:32:49.996 --> 00:32:51.506 A:middle
again, during this specific time

00:32:51.506 --> 00:32:52.606 A:middle
window, and for the private

00:32:52.606 --> 00:32:55.096 A:middle
databases, and how many requests

00:32:55.096 --> 00:32:56.626 A:middle
for each type came in at a time

00:32:56.626 --> 00:32:57.376 A:middle
slice.

00:32:58.356 --> 00:32:59.796 A:middle
Notice it's called requests, and

00:32:59.796 --> 00:33:01.396 A:middle
not operations, and that's

00:32:59.796 --> 00:33:01.396 A:middle
not operations, and that's

00:33:01.396 --> 00:33:03.116 A:middle
because, as I said before, as

00:33:03.116 --> 00:33:04.486 A:middle
you're issuing operations from

00:33:04.486 --> 00:33:06.266 A:middle
the API, in some cases, that

00:33:06.266 --> 00:33:08.136 A:middle
leads to multiple requests, and

00:33:08.136 --> 00:33:09.236 A:middle
we want to give you visibility

00:33:09.236 --> 00:33:10.546 A:middle
into all of the requests.

00:33:11.476 --> 00:33:12.726 A:middle
So, here we can see that I was

00:33:12.726 --> 00:33:14.626 A:middle
doing record modifies, database

00:33:14.626 --> 00:33:16.296 A:middle
changes, subscription modifies,

00:33:16.526 --> 00:33:17.476 A:middle
and how many of each.

00:33:18.336 --> 00:33:19.346 A:middle
We hope that this helps you,

00:33:19.496 --> 00:33:21.496 A:middle
during development, understand

00:33:21.496 --> 00:33:22.746 A:middle
how many types of requests

00:33:22.746 --> 00:33:23.916 A:middle
you're sending in, as you start

00:33:23.916 --> 00:33:24.896 A:middle
to test and build your app.

00:33:26.186 --> 00:33:27.766 A:middle
And then, in production, and

00:33:27.766 --> 00:33:28.696 A:middle
we'll see some examples in a

00:33:28.696 --> 00:33:30.436 A:middle
second, we really hope it lets

00:33:30.436 --> 00:33:32.456 A:middle
you monitor the types of request

00:33:32.456 --> 00:33:33.546 A:middle
coming in across all of your

00:33:33.546 --> 00:33:35.596 A:middle
users, to check for things like

00:33:35.596 --> 00:33:37.566 A:middle
drops or spikes that may mean

00:33:37.566 --> 00:33:39.076 A:middle
there's a bug as you release new

00:33:39.076 --> 00:33:39.896 A:middle
app versions.

00:33:42.186 --> 00:33:43.726 A:middle
If I scroll down a bit, the next

00:33:43.726 --> 00:33:45.536 A:middle
graph is called Server Latency.

00:33:46.266 --> 00:33:47.386 A:middle
Here, we're exposing to you

00:33:47.386 --> 00:33:48.856 A:middle
exactly how long, again, it took

00:33:48.856 --> 00:33:50.066 A:middle
the server to process these

00:33:50.066 --> 00:33:50.556 A:middle
events.

00:33:51.376 --> 00:33:52.446 A:middle
We show you the 50th and the

00:33:52.446 --> 00:33:54.676 A:middle
95th percentile, and as a

00:33:54.676 --> 00:33:55.896 A:middle
reminder, you can jump in and

00:33:55.896 --> 00:33:57.476 A:middle
see how long it takes for

00:33:57.476 --> 00:33:59.016 A:middle
certain types of operations.

00:33:59.646 --> 00:34:00.646 A:middle
And, the reason we want to give

00:33:59.646 --> 00:34:00.646 A:middle
And, the reason we want to give

00:34:00.646 --> 00:34:02.006 A:middle
you this information is so that

00:34:02.006 --> 00:34:04.036 A:middle
it helps you understand how long

00:34:04.036 --> 00:34:05.846 A:middle
it takes to process the type of

00:34:05.846 --> 00:34:07.206 A:middle
operation that you're adding to

00:34:07.206 --> 00:34:08.795 A:middle
your application, so that you

00:34:08.795 --> 00:34:09.856 A:middle
can choose the right one,

00:34:09.856 --> 00:34:10.996 A:middle
depending on the experience that

00:34:10.996 --> 00:34:11.706 A:middle
you're trying to build.

00:34:12.856 --> 00:34:15.735 A:middle
The next graph is Error Counts.

00:34:16.186 --> 00:34:17.585 A:middle
This used to be called Error

00:34:17.585 --> 00:34:19.106 A:middle
Rate, so we used to show you

00:34:19.196 --> 00:34:20.746 A:middle
what percentage of requests

00:34:20.746 --> 00:34:21.065 A:middle
failed.

00:34:21.536 --> 00:34:23.585 A:middle
Now we show you how many exact

00:34:23.585 --> 00:34:25.646 A:middle
ones failed, and how many users

00:34:25.646 --> 00:34:27.326 A:middle
it affected, and the specific

00:34:27.326 --> 00:34:28.065 A:middle
types of errors.

00:34:28.065 --> 00:34:29.565 A:middle
So, in this case, you can see at

00:34:29.565 --> 00:34:31.186 A:middle
this time slice, there was one

00:34:31.186 --> 00:34:31.516 A:middle
error.

00:34:31.676 --> 00:34:33.126 A:middle
It was a conflict, which meant I

00:34:33.126 --> 00:34:34.335 A:middle
tried to update something that

00:34:34.335 --> 00:34:35.266 A:middle
was already updated on the

00:34:35.266 --> 00:34:36.886 A:middle
server, and it affected one

00:34:36.886 --> 00:34:37.226 A:middle
user.

00:34:38.235 --> 00:34:39.356 A:middle
So, we hope that this

00:34:39.356 --> 00:34:40.726 A:middle
information will allow you to

00:34:40.726 --> 00:34:42.036 A:middle
detect when you might have

00:34:42.036 --> 00:34:43.926 A:middle
problems in your app causing

00:34:43.926 --> 00:34:45.616 A:middle
more errors, and to understand

00:34:45.616 --> 00:34:46.746 A:middle
what percentage of your user

00:34:46.746 --> 00:34:47.866 A:middle
base it might be affecting.

00:34:49.505 --> 00:34:50.726 A:middle
And finally, you still have

00:34:50.726 --> 00:34:52.076 A:middle
access to your average request

00:34:52.076 --> 00:34:53.926 A:middle
size, which shows you how much

00:34:53.926 --> 00:34:55.136 A:middle
data is coming in to the server.

00:34:56.156 --> 00:34:57.085 A:middle
Now again, this was my

00:34:57.085 --> 00:34:58.316 A:middle
development environment.

00:34:58.996 --> 00:35:00.456 A:middle
Let's jump back to slides and

00:34:58.996 --> 00:35:00.456 A:middle
Let's jump back to slides and

00:35:00.456 --> 00:35:01.856 A:middle
take a look at some example

00:35:02.086 --> 00:35:03.586 A:middle
screenshots of these graphs in

00:35:03.586 --> 00:35:04.056 A:middle
the wild.

00:35:05.316 --> 00:35:07.696 A:middle
So, here's a Request graph from

00:35:07.696 --> 00:35:08.726 A:middle
one of your containers in the

00:35:08.726 --> 00:35:10.366 A:middle
wild, and you can see, on any

00:35:10.366 --> 00:35:12.316 A:middle
one day, they do about 2.3

00:35:12.316 --> 00:35:14.086 A:middle
million record fetch operations

00:35:14.326 --> 00:35:16.656 A:middle
across all of their users in the

00:35:16.656 --> 00:35:17.526 A:middle
private database.

00:35:18.296 --> 00:35:19.646 A:middle
And, what's interesting is if

00:35:19.646 --> 00:35:20.836 A:middle
you look at this scale, you can

00:35:20.836 --> 00:35:22.286 A:middle
actually start to see trends

00:35:22.816 --> 00:35:24.646 A:middle
across weekday and weekends.

00:35:25.486 --> 00:35:26.586 A:middle
And so, these developers can

00:35:26.586 --> 00:35:27.936 A:middle
hopefully use this to, like I

00:35:27.936 --> 00:35:30.206 A:middle
said, monitor for spikes or

00:35:30.206 --> 00:35:32.126 A:middle
drops, changes in this behavior,

00:35:32.446 --> 00:35:33.896 A:middle
as they release new versions.

00:35:34.256 --> 00:35:35.516 A:middle
And, of course, if you change

00:35:35.516 --> 00:35:36.766 A:middle
how you interact with CloudKit,

00:35:37.036 --> 00:35:38.396 A:middle
then maybe you expect a change.

00:35:40.336 --> 00:35:42.266 A:middle
Here's an example of an Errors

00:35:42.266 --> 00:35:43.166 A:middle
graph in the wild.

00:35:44.136 --> 00:35:45.316 A:middle
Notice that they have about, oh,

00:35:45.316 --> 00:35:47.006 A:middle
on any one day, 1500

00:35:47.006 --> 00:35:48.896 A:middle
zone-not-found errors, but it's

00:35:48.896 --> 00:35:50.806 A:middle
only affecting about 55 users,

00:35:50.806 --> 00:35:51.546 A:middle
which could be a small

00:35:51.546 --> 00:35:52.676 A:middle
percentage of their total user

00:35:52.676 --> 00:35:53.396 A:middle
base.

00:35:53.666 --> 00:35:55.216 A:middle
So, it might mean that there's

00:35:55.216 --> 00:35:56.056 A:middle
an edge case in their

00:35:56.056 --> 00:35:57.496 A:middle
application where it gets into a

00:35:57.496 --> 00:35:58.606 A:middle
weird state where it thinks a

00:35:58.606 --> 00:35:59.736 A:middle
zone exists that doesn't

00:35:59.736 --> 00:36:00.826 A:middle
actually exist in the server.

00:35:59.736 --> 00:36:00.826 A:middle
actually exist in the server.

00:36:02.506 --> 00:36:04.196 A:middle
We have CKError documentation

00:36:04.326 --> 00:36:05.436 A:middle
that used to tell you all the

00:36:05.436 --> 00:36:06.776 A:middle
types of errors you might see.

00:36:07.136 --> 00:36:08.826 A:middle
We've updated that to explain

00:36:08.826 --> 00:36:10.856 A:middle
what each error means, and how

00:36:10.856 --> 00:36:11.956 A:middle
you might handle that in your

00:36:11.956 --> 00:36:12.586 A:middle
application.

00:36:13.156 --> 00:36:14.306 A:middle
So, the errors you'll see show

00:36:14.306 --> 00:36:15.706 A:middle
up in this graph map back to

00:36:15.706 --> 00:36:16.506 A:middle
that documentation.

00:36:18.676 --> 00:36:19.996 A:middle
We also give you some telemetry

00:36:19.996 --> 00:36:21.336 A:middle
around the push notifications

00:36:21.336 --> 00:36:22.516 A:middle
that CloudKit is sending for

00:36:22.516 --> 00:36:23.886 A:middle
your application in the wild.

00:36:24.426 --> 00:36:25.896 A:middle
It's separated based on the

00:36:25.896 --> 00:36:27.396 A:middle
subscriptions in the private,

00:36:27.396 --> 00:36:29.556 A:middle
public, and shared database, and

00:36:29.556 --> 00:36:30.976 A:middle
this is sort of a sanity check.

00:36:30.976 --> 00:36:32.116 A:middle
If a customer complains that

00:36:32.116 --> 00:36:33.526 A:middle
data is not synchronizing, you

00:36:33.526 --> 00:36:34.746 A:middle
can go here and feel good that

00:36:34.746 --> 00:36:35.986 A:middle
CloudKit is still sending push

00:36:35.986 --> 00:36:37.156 A:middle
notifications, that

00:36:37.156 --> 00:36:37.966 A:middle
subscriptions are still

00:36:37.966 --> 00:36:38.926 A:middle
configured right in your

00:36:38.926 --> 00:36:39.456 A:middle
application.

00:36:39.936 --> 00:36:43.236 A:middle
OK. So, what did we cover today?

00:36:43.816 --> 00:36:45.606 A:middle
Well, we've launched a brand-new

00:36:45.606 --> 00:36:46.546 A:middle
CloudKit Dashboard.

00:36:46.876 --> 00:36:48.166 A:middle
We hope you check it out, try it

00:36:48.166 --> 00:36:48.656 A:middle
out.

00:36:48.656 --> 00:36:49.916 A:middle
Please give us your feedback,

00:36:49.916 --> 00:36:50.826 A:middle
let us know what works, what

00:36:50.826 --> 00:36:51.826 A:middle
doesn't work, what else you'd

00:36:51.826 --> 00:36:52.456 A:middle
like to see there.

00:36:53.926 --> 00:36:54.656 A:middle
We've launched a new

00:36:54.656 --> 00:36:56.156 A:middle
CKOperationGroup API.

00:36:57.216 --> 00:36:59.196 A:middle
We hope you've started to see

00:36:59.196 --> 00:37:00.846 A:middle
the help it can provide you,

00:36:59.196 --> 00:37:00.846 A:middle
the help it can provide you,

00:37:00.846 --> 00:37:02.176 A:middle
especially when looking in the

00:37:02.176 --> 00:37:03.996 A:middle
Dashboard Log, to understand

00:37:04.186 --> 00:37:06.396 A:middle
exactly what code led to what

00:37:06.396 --> 00:37:07.886 A:middle
network request being sent back

00:37:07.886 --> 00:37:08.416 A:middle
to the server.

00:37:10.246 --> 00:37:11.256 A:middle
Like I said, we want all of your

00:37:11.256 --> 00:37:11.756 A:middle
feedback.

00:37:11.756 --> 00:37:13.236 A:middle
It really does guide what we do,

00:37:13.236 --> 00:37:14.736 A:middle
so follow Radars, post on the

00:37:14.736 --> 00:37:15.736 A:middle
forums, let us know.

00:37:17.296 --> 00:37:18.606 A:middle
For more information, here's a

00:37:18.606 --> 00:37:19.736 A:middle
link back to this specific

00:37:19.736 --> 00:37:21.336 A:middle
session, and we also have an

00:37:21.336 --> 00:37:22.696 A:middle
email address, cloudkit@apple.

00:37:22.896 --> 00:37:24.156 A:middle
You're always welcome to reach

00:37:24.156 --> 00:37:25.496 A:middle
out and ask us any questions you

00:37:25.496 --> 00:37:25.786 A:middle
have.

00:37:26.846 --> 00:37:27.986 A:middle
And with that, thank you very

00:37:27.986 --> 00:37:28.316 A:middle
much.

00:37:28.316 --> 00:37:30.406 A:middle
Have a wonderful conference.
