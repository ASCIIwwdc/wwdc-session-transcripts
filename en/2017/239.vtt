WEBVTT

00:00:06.516 --> 00:00:15.500 A:middle
[ Cheering ]

00:00:19.516 --> 00:00:21.816 A:middle
[ Applause ]

00:00:22.316 --> 00:00:22.726 A:middle
&gt;&gt; All right.

00:00:22.726 --> 00:00:23.636 A:middle
Welcome everyone.

00:00:25.986 --> 00:00:27.026 A:middle
Welcome to our session

00:00:27.026 --> 00:00:28.696 A:middle
connecting CareKit to the Cloud.

00:00:29.176 --> 00:00:30.086 A:middle
I'm Kelsey Dedoshka.

00:00:30.086 --> 00:00:31.246 A:middle
And I'm our software engineer

00:00:31.246 --> 00:00:32.966 A:middle
here on the CareKit team.

00:00:35.206 --> 00:00:36.546 A:middle
And so we'll start our session

00:00:36.546 --> 00:00:38.326 A:middle
off today with a brief CareKit

00:00:38.326 --> 00:00:38.856 A:middle
overview.

00:00:39.396 --> 00:00:40.426 A:middle
And then we'll introduce our

00:00:40.426 --> 00:00:42.956 A:middle
brand-new Bridge API where we'll

00:00:42.956 --> 00:00:44.176 A:middle
discuss in depth how to

00:00:44.176 --> 00:00:45.766 A:middle
integrate that API into a cloud

00:00:45.766 --> 00:00:46.306 A:middle
backend.

00:00:46.796 --> 00:00:48.406 A:middle
And in the process, we'll even

00:00:48.406 --> 00:00:49.926 A:middle
dive a little bit deeper and

00:00:49.926 --> 00:00:51.256 A:middle
walk-through understanding some

00:00:51.256 --> 00:00:51.676 A:middle
of the code.

00:00:52.806 --> 00:00:54.266 A:middle
Then I'll invite Akshay up to

00:00:54.266 --> 00:00:55.396 A:middle
the stage here to give you guys

00:00:55.396 --> 00:00:56.086 A:middle
a quick demo.

00:00:56.086 --> 00:00:58.266 A:middle
And we'll finish up by seeing

00:00:58.266 --> 00:00:59.526 A:middle
what you can all do with this

00:00:59.526 --> 00:01:00.056 A:middle
new feature.

00:00:59.526 --> 00:01:00.056 A:middle
new feature.

00:01:00.886 --> 00:01:01.586 A:middle
So let's get started.

00:01:02.756 --> 00:01:04.156 A:middle
If you're interested in learning

00:01:04.156 --> 00:01:05.836 A:middle
what's new in the framework, you

00:01:05.836 --> 00:01:06.776 A:middle
can reference the earlier

00:01:06.776 --> 00:01:08.376 A:middle
session What's New in CareKit

00:01:08.376 --> 00:01:10.126 A:middle
and ResearchKit hosted by Sam

00:01:10.126 --> 00:01:10.576 A:middle
Ravka [phonetic].

00:01:11.696 --> 00:01:13.406 A:middle
Or to learn how CareKit came to

00:01:13.406 --> 00:01:14.726 A:middle
be and its underlying

00:01:14.726 --> 00:01:16.626 A:middle
architecture, I highly recommend

00:01:16.626 --> 00:01:17.836 A:middle
checking out last year's session

00:01:17.836 --> 00:01:19.216 A:middle
talk Getting Started with

00:01:19.216 --> 00:01:21.676 A:middle
CareKit hosted by Omar Kahn

00:01:21.676 --> 00:01:23.336 A:middle
[phonetic].

00:01:23.336 --> 00:01:25.126 A:middle
Now since its introduction last

00:01:25.126 --> 00:01:27.316 A:middle
year, CareKit has helped medical

00:01:27.316 --> 00:01:28.826 A:middle
groups improve the overall

00:01:28.826 --> 00:01:30.866 A:middle
quality of patient care by

00:01:30.866 --> 00:01:32.826 A:middle
providing at-home solutions for

00:01:32.826 --> 00:01:34.116 A:middle
tracking care activities and

00:01:34.116 --> 00:01:34.866 A:middle
assessments.

00:01:36.226 --> 00:01:37.786 A:middle
And allowing patients to take

00:01:37.786 --> 00:01:39.196 A:middle
more control over their care

00:01:39.456 --> 00:01:41.356 A:middle
through CareKit apps has

00:01:41.356 --> 00:01:42.616 A:middle
presented new insights and

00:01:42.616 --> 00:01:44.416 A:middle
opportunities to take that care

00:01:44.416 --> 00:01:46.366 A:middle
and technology one step further.

00:01:46.826 --> 00:01:49.866 A:middle
And so this year we're

00:01:49.866 --> 00:01:51.896 A:middle
introducing a new card for

00:01:51.956 --> 00:01:53.596 A:middle
patients to track care to-dos,

00:01:54.046 --> 00:01:55.426 A:middle
like these stretches post knee

00:01:55.426 --> 00:01:57.796 A:middle
surgery, alongside some

00:01:57.796 --> 00:01:58.866 A:middle
assessments they may need to

00:01:58.866 --> 00:02:00.916 A:middle
complete to track their progress

00:01:58.866 --> 00:02:00.916 A:middle
complete to track their progress

00:02:00.916 --> 00:02:02.256 A:middle
along their care journeys.

00:02:02.966 --> 00:02:06.236 A:middle
Now these adherence, symptoms,

00:02:06.236 --> 00:02:08.455 A:middle
and outcomes are key data points

00:02:08.675 --> 00:02:10.356 A:middle
in understanding not only how a

00:02:10.356 --> 00:02:12.076 A:middle
patient is feeling but how

00:02:12.076 --> 00:02:13.206 A:middle
engaged they are in their own

00:02:13.206 --> 00:02:13.996 A:middle
personal care.

00:02:15.516 --> 00:02:17.066 A:middle
And data from this card is also

00:02:17.066 --> 00:02:18.906 A:middle
crucial for care teams to

00:02:18.976 --> 00:02:20.406 A:middle
understand whether their

00:02:20.406 --> 00:02:21.496 A:middle
treatments are having their

00:02:21.496 --> 00:02:22.986 A:middle
intended effects or not.

00:02:25.376 --> 00:02:27.596 A:middle
Our CareKit Insights tab now

00:02:27.596 --> 00:02:29.666 A:middle
features threshold alerts, which

00:02:29.666 --> 00:02:31.196 A:middle
provides users with a nice

00:02:31.196 --> 00:02:34.666 A:middle
visual indication via widgets or

00:02:34.706 --> 00:02:37.886 A:middle
even text that really bring data

00:02:37.886 --> 00:02:38.886 A:middle
to the forefront of their

00:02:38.886 --> 00:02:40.396 A:middle
attention they may need to be

00:02:40.396 --> 00:02:41.626 A:middle
concerned about.

00:02:43.876 --> 00:02:46.436 A:middle
And last CareKit apps today

00:02:46.806 --> 00:02:48.096 A:middle
allow patients to share their

00:02:48.096 --> 00:02:50.376 A:middle
data in PDF form via our Share

00:02:50.376 --> 00:02:51.676 A:middle
Reports option on the Connect

00:02:51.676 --> 00:02:51.876 A:middle
View.

00:02:52.916 --> 00:02:54.726 A:middle
And we found that it was time to

00:02:54.816 --> 00:02:56.646 A:middle
upgrade this share experience.

00:03:00.376 --> 00:03:01.746 A:middle
And so after the launch of

00:03:01.746 --> 00:03:03.566 A:middle
CareKit, we were excited to hear

00:03:03.566 --> 00:03:05.466 A:middle
how valuable the data collected

00:03:05.466 --> 00:03:08.046 A:middle
via CareKit apps were, not only

00:03:08.046 --> 00:03:09.416 A:middle
to patients but to their care

00:03:09.416 --> 00:03:10.076 A:middle
team members.

00:03:11.236 --> 00:03:12.556 A:middle
However, providing that data

00:03:12.556 --> 00:03:14.316 A:middle
back to care teams is a manual

00:03:14.316 --> 00:03:14.956 A:middle
process.

00:03:15.626 --> 00:03:17.076 A:middle
And this can make it challenging

00:03:17.116 --> 00:03:19.156 A:middle
for care teams to update their

00:03:19.156 --> 00:03:20.586 A:middle
patient's care cards remotely

00:03:20.826 --> 00:03:22.426 A:middle
and even get a good sense of how

00:03:22.426 --> 00:03:23.206 A:middle
they're progressing through

00:03:23.206 --> 00:03:23.636 A:middle
their care.

00:03:25.176 --> 00:03:26.436 A:middle
And so these patient and care

00:03:26.436 --> 00:03:28.676 A:middle
team apps really have to work to

00:03:28.676 --> 00:03:30.156 A:middle
break down this data barrier

00:03:30.156 --> 00:03:31.656 A:middle
that exists between them.

00:03:34.346 --> 00:03:36.296 A:middle
And so we've seen some apps

00:03:36.386 --> 00:03:37.916 A:middle
create their very own backend

00:03:37.916 --> 00:03:39.956 A:middle
cloud solutions to help them

00:03:40.026 --> 00:03:41.366 A:middle
sync data between their patient

00:03:41.366 --> 00:03:42.406 A:middle
and their care team apps.

00:03:43.316 --> 00:03:44.696 A:middle
However, this isn't an easy

00:03:44.696 --> 00:03:44.866 A:middle
task.

00:03:45.666 --> 00:03:46.686 A:middle
And it really requires the

00:03:46.686 --> 00:03:48.076 A:middle
developers to handle doing a

00:03:48.076 --> 00:03:49.036 A:middle
majority of the work.

00:03:50.086 --> 00:03:51.486 A:middle
They have to handle interfacing

00:03:51.486 --> 00:03:53.006 A:middle
directly with the apps data

00:03:53.006 --> 00:03:54.636 A:middle
store as well as with the

00:03:54.636 --> 00:03:55.766 A:middle
backend cloud system.

00:03:56.296 --> 00:03:59.806 A:middle
And so we saw this growing need

00:03:59.986 --> 00:04:01.466 A:middle
to help break down this data

00:03:59.986 --> 00:04:01.466 A:middle
to help break down this data

00:04:01.466 --> 00:04:03.666 A:middle
barrier and help patient and

00:04:03.726 --> 00:04:05.666 A:middle
care team apps securely sync

00:04:05.666 --> 00:04:06.926 A:middle
data between them if they

00:04:06.926 --> 00:04:07.336 A:middle
desire.

00:04:07.886 --> 00:04:10.996 A:middle
And so this presented us with

00:04:10.996 --> 00:04:12.876 A:middle
the opportunity to improve the

00:04:12.876 --> 00:04:15.316 A:middle
CareKit framework by building

00:04:15.316 --> 00:04:16.956 A:middle
hooks directly in the framework

00:04:16.956 --> 00:04:19.366 A:middle
architecture so that current and

00:04:19.366 --> 00:04:21.276 A:middle
new applications can accomplish

00:04:21.326 --> 00:04:22.896 A:middle
their data syncing needs in a

00:04:22.896 --> 00:04:24.306 A:middle
much easier and cleaner way.

00:04:26.746 --> 00:04:28.786 A:middle
And moving forward, we hope to

00:04:28.786 --> 00:04:30.536 A:middle
improve the data pipeline with

00:04:30.536 --> 00:04:31.796 A:middle
the creation of this new feature

00:04:32.326 --> 00:04:34.046 A:middle
and, in turn, reducing the

00:04:34.046 --> 00:04:35.156 A:middle
required effort by the

00:04:35.156 --> 00:04:35.836 A:middle
development team.

00:04:36.306 --> 00:04:39.426 A:middle
Now this cloud-based data

00:04:39.426 --> 00:04:41.146 A:middle
sharing means patients who use

00:04:41.146 --> 00:04:42.536 A:middle
CareKit apps at home to track

00:04:42.616 --> 00:04:44.586 A:middle
their care can now share that

00:04:44.586 --> 00:04:45.516 A:middle
care data in real time.

00:04:45.516 --> 00:04:47.976 A:middle
And this is great because it

00:04:47.976 --> 00:04:49.756 A:middle
allows their care teams to see

00:04:49.756 --> 00:04:51.006 A:middle
their patient's results as

00:04:51.006 --> 00:04:52.876 A:middle
they're being recorded and gives

00:04:52.876 --> 00:04:54.356 A:middle
them the opportunity to make

00:04:54.356 --> 00:04:55.956 A:middle
adjustments in their care plan

00:04:56.406 --> 00:04:58.166 A:middle
or even to reach out directly if

00:04:58.166 --> 00:04:58.646 A:middle
they desire.

00:05:01.396 --> 00:05:03.016 A:middle
And so throughout this process,

00:05:03.196 --> 00:05:04.546 A:middle
we've been really inspired by

00:05:04.546 --> 00:05:06.886 A:middle
many CareKit apps, especially

00:05:06.886 --> 00:05:08.376 A:middle
the work being done at Sharp

00:05:08.376 --> 00:05:09.246 A:middle
Healthcare in Southern

00:05:09.246 --> 00:05:09.756 A:middle
California.

00:05:11.056 --> 00:05:12.516 A:middle
And so let's create our own use

00:05:12.516 --> 00:05:14.366 A:middle
case inspired by their users,

00:05:14.586 --> 00:05:16.046 A:middle
for patients undergoing eye

00:05:16.046 --> 00:05:18.156 A:middle
surgery that takes advantage of

00:05:18.156 --> 00:05:19.446 A:middle
our new CareKit features and the

00:05:19.446 --> 00:05:19.976 A:middle
Bridge API.

00:05:19.976 --> 00:05:21.976 A:middle
And it really showcases this

00:05:21.976 --> 00:05:23.296 A:middle
importance of data syncing.

00:05:23.796 --> 00:05:27.406 A:middle
And so, in this case, the two

00:05:27.406 --> 00:05:29.236 A:middle
weeks post surgery are crucial

00:05:29.236 --> 00:05:30.176 A:middle
to a healthy recovery.

00:05:31.266 --> 00:05:32.786 A:middle
And patients must religiously

00:05:32.786 --> 00:05:34.556 A:middle
take antibiotic eye drops to

00:05:34.556 --> 00:05:35.906 A:middle
prevent infections that could

00:05:35.976 --> 00:05:37.796 A:middle
ultimately lead to blindness if

00:05:37.796 --> 00:05:38.936 A:middle
they're not treated early.

00:05:39.466 --> 00:05:42.016 A:middle
And then in our scenario here,

00:05:42.366 --> 00:05:43.606 A:middle
care teams can monitor their

00:05:43.606 --> 00:05:44.936 A:middle
patient's results as they're

00:05:44.936 --> 00:05:45.806 A:middle
being recorded.

00:05:46.476 --> 00:05:47.706 A:middle
And if they aren't progressing

00:05:47.706 --> 00:05:49.186 A:middle
through their care, they can

00:05:49.186 --> 00:05:50.406 A:middle
make adjustments in their care

00:05:50.406 --> 00:05:51.246 A:middle
plan if they need to.

00:05:51.766 --> 00:05:54.866 A:middle
And patients can also see their

00:05:54.866 --> 00:05:56.516 A:middle
eye drop adherence and their

00:05:56.516 --> 00:05:59.246 A:middle
results via the Insights tab

00:05:59.246 --> 00:06:01.026 A:middle
and, again, so can their care

00:05:59.246 --> 00:06:01.026 A:middle
and, again, so can their care

00:06:01.026 --> 00:06:01.526 A:middle
teams.

00:06:02.846 --> 00:06:04.276 A:middle
Care teams can monitor their

00:06:04.276 --> 00:06:05.046 A:middle
patient's results.

00:06:05.286 --> 00:06:06.586 A:middle
And if they aren't progressing,

00:06:06.736 --> 00:06:08.006 A:middle
they can make adjustments in

00:06:08.006 --> 00:06:09.256 A:middle
their care plan if they need to

00:06:09.526 --> 00:06:10.916 A:middle
or even reach out directly if

00:06:10.916 --> 00:06:11.416 A:middle
they desire.

00:06:11.886 --> 00:06:15.266 A:middle
And so this use case really

00:06:15.266 --> 00:06:16.786 A:middle
showcases this importance of

00:06:16.786 --> 00:06:18.866 A:middle
data syncing and why we, as a

00:06:18.866 --> 00:06:20.716 A:middle
team, found it so crucial to

00:06:20.716 --> 00:06:22.276 A:middle
begin integrating a solution.

00:06:23.436 --> 00:06:24.586 A:middle
And so with that, I'd like to

00:06:24.586 --> 00:06:26.786 A:middle
introduce our brand-new Bridge

00:06:26.786 --> 00:06:27.096 A:middle
API.

00:06:30.556 --> 00:06:32.586 A:middle
The Bridge API is an abstract

00:06:32.586 --> 00:06:35.046 A:middle
cloud API that conforms to the

00:06:35.046 --> 00:06:36.906 A:middle
CareKit schema and enables data

00:06:36.906 --> 00:06:38.466 A:middle
syncing without any additional

00:06:38.466 --> 00:06:39.176 A:middle
configuration.

00:06:39.696 --> 00:06:42.866 A:middle
It's designed to allow CareKit

00:06:43.176 --> 00:06:44.646 A:middle
apps to seamlessly integrate

00:06:44.646 --> 00:06:46.006 A:middle
with backend cloud solutions.

00:06:46.706 --> 00:06:49.406 A:middle
And it's built upon our current

00:06:49.406 --> 00:06:51.046 A:middle
CareKit data model and

00:06:51.046 --> 00:06:51.586 A:middle
architecture.

00:06:55.006 --> 00:06:56.736 A:middle
The Bridge API provides all of

00:06:56.736 --> 00:06:58.746 A:middle
the necessary hooks for cloud

00:06:58.746 --> 00:07:00.166 A:middle
solutions to seamlessly hook

00:06:58.746 --> 00:07:00.166 A:middle
solutions to seamlessly hook

00:07:00.166 --> 00:07:01.136 A:middle
into the CareKit framework.

00:07:01.636 --> 00:07:04.176 A:middle
And this removes the need for

00:07:04.276 --> 00:07:06.156 A:middle
third-party developers to dive

00:07:06.156 --> 00:07:08.246 A:middle
deep into the code and extend

00:07:08.246 --> 00:07:09.196 A:middle
the CareKit framework to their

00:07:09.196 --> 00:07:09.976 A:middle
specific needs.

00:07:10.656 --> 00:07:14.686 A:middle
The API abstracts that away and

00:07:14.686 --> 00:07:16.216 A:middle
provides delegate functions for

00:07:16.216 --> 00:07:17.576 A:middle
cloud solutions to utilize

00:07:17.576 --> 00:07:18.036 A:middle
instead.

00:07:21.306 --> 00:07:22.666 A:middle
And along with the Bridge, we've

00:07:22.666 --> 00:07:24.426 A:middle
added some additional UI modules

00:07:24.726 --> 00:07:25.996 A:middle
to make it even easier for

00:07:25.996 --> 00:07:29.286 A:middle
developers to integrate and use.

00:07:30.496 --> 00:07:32.106 A:middle
So let's take a look at how it

00:07:32.106 --> 00:07:32.556 A:middle
works.

00:07:33.136 --> 00:07:36.436 A:middle
Care plan activities are created

00:07:36.626 --> 00:07:38.286 A:middle
using the OCKCarePlanActivity

00:07:38.286 --> 00:07:40.696 A:middle
object as either an assessment,

00:07:41.006 --> 00:07:42.886 A:middle
an intervention, or even a

00:07:42.886 --> 00:07:44.136 A:middle
custom type created by the

00:07:44.136 --> 00:07:44.566 A:middle
developer.

00:07:46.856 --> 00:07:48.656 A:middle
These activities are then added

00:07:48.656 --> 00:07:50.846 A:middle
to the OCKCarePlanStore via our

00:07:50.846 --> 00:07:51.906 A:middle
current CareKit framework

00:07:51.906 --> 00:07:52.356 A:middle
functions.

00:07:54.756 --> 00:07:56.426 A:middle
Now this is where a Bridge API

00:07:56.426 --> 00:07:57.256 A:middle
really comes into play.

00:07:58.066 --> 00:07:59.336 A:middle
It sits between the care plan

00:07:59.336 --> 00:08:02.806 A:middle
store and the cloud backend and

00:07:59.336 --> 00:08:02.806 A:middle
store and the cloud backend and

00:08:02.806 --> 00:08:04.326 A:middle
it listens to changes in state

00:08:04.326 --> 00:08:04.836 A:middle
in the store.

00:08:06.036 --> 00:08:07.496 A:middle
And when a change is detected,

00:08:07.696 --> 00:08:09.816 A:middle
the API reacts accordingly and

00:08:09.816 --> 00:08:11.576 A:middle
allows cloud solutions to pick

00:08:11.576 --> 00:08:13.386 A:middle
up those changes and sync the

00:08:13.386 --> 00:08:15.696 A:middle
necessary data differentials to

00:08:15.696 --> 00:08:17.026 A:middle
and from the cloud.

00:08:19.586 --> 00:08:21.266 A:middle
It interfaces with both the

00:08:21.266 --> 00:08:23.876 A:middle
local care plan store and the

00:08:23.876 --> 00:08:26.496 A:middle
remote cloud store to ensure

00:08:26.496 --> 00:08:27.906 A:middle
that any changes in state are

00:08:27.906 --> 00:08:28.696 A:middle
handled accordingly.

00:08:30.056 --> 00:08:32.106 A:middle
Activities can be added,

00:08:32.546 --> 00:08:34.206 A:middle
removed, and updated.

00:08:35.155 --> 00:08:37.256 A:middle
And the Bridge API hooks allow

00:08:37.256 --> 00:08:38.846 A:middle
cloud solutions to pick up those

00:08:38.846 --> 00:08:40.446 A:middle
changes and perform the

00:08:40.446 --> 00:08:41.785 A:middle
necessary data syncing.

00:08:42.376 --> 00:08:45.826 A:middle
And as data is changed, updates

00:08:45.826 --> 00:08:47.406 A:middle
to the store pull down and

00:08:47.406 --> 00:08:48.676 A:middle
stored in our local care plan

00:08:48.676 --> 00:08:51.156 A:middle
store to ensure the last data

00:08:51.156 --> 00:08:52.796 A:middle
sync is still available to the

00:08:52.796 --> 00:08:54.736 A:middle
user even if their device can't

00:08:54.736 --> 00:08:55.776 A:middle
connect to the cloud at that

00:08:55.776 --> 00:08:55.966 A:middle
time.

00:08:58.456 --> 00:08:59.806 A:middle
So let's take a look at how this

00:08:59.806 --> 00:09:00.466 A:middle
is accomplished.

00:08:59.806 --> 00:09:00.466 A:middle
is accomplished.

00:09:00.956 --> 00:09:03.736 A:middle
You can continue adding and

00:09:03.736 --> 00:09:05.946 A:middle
removing OCKCarePlanActivities

00:09:06.186 --> 00:09:07.256 A:middle
just as you always have.

00:09:07.956 --> 00:09:10.176 A:middle
And this means that no

00:09:10.176 --> 00:09:11.896 A:middle
additional configuration needs

00:09:11.896 --> 00:09:13.526 A:middle
to be made to your existing

00:09:13.526 --> 00:09:15.826 A:middle
CareKit app activities to

00:09:15.826 --> 00:09:17.756 A:middle
utilize the functionality of the

00:09:17.756 --> 00:09:19.126 A:middle
API and actively sync data.

00:09:20.536 --> 00:09:22.546 A:middle
But how does that actually work?

00:09:23.396 --> 00:09:25.296 A:middle
The API handles changes in the

00:09:25.296 --> 00:09:26.966 A:middle
care plan store by both

00:09:26.966 --> 00:09:28.576 A:middle
notifying the delegate when the

00:09:28.576 --> 00:09:31.386 A:middle
activity list has changed as

00:09:31.386 --> 00:09:32.536 A:middle
well is when it receives an

00:09:32.536 --> 00:09:33.286 A:middle
event update.

00:09:33.796 --> 00:09:36.656 A:middle
And these Bridge API hooks and

00:09:36.656 --> 00:09:38.026 A:middle
these methods that you see here

00:09:38.416 --> 00:09:40.136 A:middle
allow our cloud solutions to

00:09:40.136 --> 00:09:41.746 A:middle
hook into this framework and

00:09:41.746 --> 00:09:43.076 A:middle
handle care plan store state

00:09:43.076 --> 00:09:43.466 A:middle
changes.

00:09:45.036 --> 00:09:46.936 A:middle
And all of this happens behind

00:09:46.936 --> 00:09:49.136 A:middle
the scenes to allow your CareKit

00:09:49.946 --> 00:09:51.746 A:middle
apps to access live updates in

00:09:51.746 --> 00:09:52.536 A:middle
the care plan store.

00:09:55.366 --> 00:09:57.196 A:middle
And so these methods allow

00:09:57.196 --> 00:09:59.106 A:middle
developers, like all of you, to

00:09:59.106 --> 00:10:00.836 A:middle
build out your very own backend

00:09:59.106 --> 00:10:00.836 A:middle
build out your very own backend

00:10:00.836 --> 00:10:02.486 A:middle
cloud solutions that hook

00:10:02.586 --> 00:10:04.536 A:middle
directly into our Bridge API and

00:10:04.846 --> 00:10:06.416 A:middle
that allow you to handle care

00:10:06.416 --> 00:10:08.276 A:middle
plan store state changes that

00:10:08.276 --> 00:10:09.626 A:middle
fit your desired use case.

00:10:11.166 --> 00:10:12.866 A:middle
However, if you're interested in

00:10:12.866 --> 00:10:14.416 A:middle
using a third-party solution,

00:10:14.976 --> 00:10:15.936 A:middle
you can utilize one of the

00:10:15.936 --> 00:10:17.616 A:middle
existing solutions that have

00:10:17.616 --> 00:10:18.936 A:middle
already taken advantage of the

00:10:18.936 --> 00:10:21.006 A:middle
Bridge API and have available

00:10:21.006 --> 00:10:23.096 A:middle
CareKit implementations ready to

00:10:23.096 --> 00:10:24.246 A:middle
use off the shelf.

00:10:24.596 --> 00:10:27.406 A:middle
And so we've worked with both

00:10:27.406 --> 00:10:31.386 A:middle
Medable and CloudMine to help

00:10:31.386 --> 00:10:33.366 A:middle
them design and create HIPPA

00:10:33.366 --> 00:10:34.596 A:middle
compliant backend cloud

00:10:34.596 --> 00:10:36.216 A:middle
solutions that use their

00:10:36.216 --> 00:10:37.756 A:middle
existing HIPPA compliant backend

00:10:37.756 --> 00:10:38.516 A:middle
cloud systems.

00:10:39.086 --> 00:10:41.646 A:middle
And utilizing one of these

00:10:41.686 --> 00:10:43.826 A:middle
solutions can help expedite the

00:10:43.826 --> 00:10:45.736 A:middle
process of getting your CareKit

00:10:46.246 --> 00:10:47.086 A:middle
app up and running with the

00:10:47.086 --> 00:10:49.386 A:middle
Bridge API and actively syncing

00:10:49.386 --> 00:10:55.026 A:middle
data to the cloud.

00:10:55.026 --> 00:10:56.196 A:middle
So let's take a look at one of

00:10:56.196 --> 00:10:57.906 A:middle
the existing solutions developed

00:10:57.906 --> 00:11:00.496 A:middle
by Medable and demonstrate how

00:10:57.906 --> 00:11:00.496 A:middle
by Medable and demonstrate how

00:11:00.496 --> 00:11:02.216 A:middle
to utilize the Bridge API hooks

00:11:02.696 --> 00:11:03.916 A:middle
to sync data with their cloud

00:11:03.916 --> 00:11:04.346 A:middle
solution.

00:11:07.336 --> 00:11:09.166 A:middle
And so here you can see how to

00:11:09.166 --> 00:11:09.936 A:middle
start the client.

00:11:09.936 --> 00:11:12.346 A:middle
And this is going to reference a

00:11:12.346 --> 00:11:13.786 A:middle
few necessary keys in your

00:11:13.786 --> 00:11:16.096 A:middle
project's plist to ensure that a

00:11:16.096 --> 00:11:17.466 A:middle
connection can be established

00:11:17.656 --> 00:11:19.086 A:middle
and data can be in syncing with

00:11:19.086 --> 00:11:20.646 A:middle
your provisioned account.

00:11:22.616 --> 00:11:24.626 A:middle
From there, you can login with

00:11:24.626 --> 00:11:25.626 A:middle
your configured username and

00:11:25.626 --> 00:11:28.206 A:middle
password and proceed by either

00:11:28.206 --> 00:11:29.606 A:middle
handling the fault if there is

00:11:29.606 --> 00:11:31.496 A:middle
one or retrieving the return to

00:11:31.496 --> 00:11:32.826 A:middle
Bridge reference for that user,

00:11:33.706 --> 00:11:34.626 A:middle
which you can use to be in

00:11:34.626 --> 00:11:35.666 A:middle
establishing connections.

00:11:37.326 --> 00:11:38.776 A:middle
And once login has been

00:11:38.776 --> 00:11:40.406 A:middle
successfully established, the

00:11:40.406 --> 00:11:42.186 A:middle
cloud Bridge knows to utilize

00:11:42.186 --> 00:11:43.566 A:middle
that account for subsequent

00:11:43.566 --> 00:11:44.106 A:middle
transactions.

00:11:47.536 --> 00:11:48.876 A:middle
And so once you've successfully

00:11:48.876 --> 00:11:50.566 A:middle
logged in, you can list Medable

00:11:50.566 --> 00:11:51.436 A:middle
store connections.

00:11:52.226 --> 00:11:53.236 A:middle
And this will return the

00:11:53.236 --> 00:11:54.546 A:middle
available connections for that

00:11:54.546 --> 00:11:54.876 A:middle
user.

00:11:55.376 --> 00:11:57.706 A:middle
And these connections can be in

00:11:57.706 --> 00:11:59.876 A:middle
a variety of states: accepted,

00:12:00.196 --> 00:12:01.316 A:middle
denied, or pending.

00:12:01.836 --> 00:12:05.046 A:middle
And so from there you want to

00:12:05.046 --> 00:12:06.326 A:middle
handle connections accordingly

00:12:06.806 --> 00:12:08.116 A:middle
by either accepting pending

00:12:08.116 --> 00:12:09.906 A:middle
connections or even grabbing the

00:12:09.906 --> 00:12:11.346 A:middle
active connections for that user

00:12:11.946 --> 00:12:12.986 A:middle
which you can use to begin

00:12:12.986 --> 00:12:13.576 A:middle
syncing data.

00:12:15.296 --> 00:12:16.416 A:middle
Now it's really important to

00:12:16.416 --> 00:12:18.096 A:middle
note here that data will not

00:12:18.096 --> 00:12:19.546 A:middle
successfully sync to the cloud

00:12:19.936 --> 00:12:21.116 A:middle
unless you have an active

00:12:21.116 --> 00:12:21.656 A:middle
connection.

00:12:22.656 --> 00:12:24.106 A:middle
And this is going to ensure that

00:12:24.106 --> 00:12:26.306 A:middle
users only have access to data

00:12:26.716 --> 00:12:27.796 A:middle
to and from those that they have

00:12:27.796 --> 00:12:28.356 A:middle
authorized.

00:12:29.846 --> 00:12:31.596 A:middle
And so denied connections will

00:12:31.596 --> 00:12:33.036 A:middle
prevent any data from syncing

00:12:33.036 --> 00:12:34.776 A:middle
with the cloud and being shared

00:12:34.776 --> 00:12:35.516 A:middle
with the initiator.

00:12:39.216 --> 00:12:40.756 A:middle
And so now that we've looked at

00:12:40.756 --> 00:12:41.606 A:middle
creating connections and

00:12:41.606 --> 00:12:43.006 A:middle
establishing them via Medable

00:12:43.006 --> 00:12:45.496 A:middle
solution, let's take a look at

00:12:45.496 --> 00:12:47.346 A:middle
another new CareKit feature that

00:12:47.346 --> 00:12:49.166 A:middle
utilizes these connections and

00:12:49.166 --> 00:12:49.766 A:middle
our Bridge API.

00:12:53.256 --> 00:12:56.046 A:middle
This new API opens the door for

00:12:56.046 --> 00:12:57.546 A:middle
not only syncing CareKit data

00:12:57.546 --> 00:12:59.376 A:middle
such as activities and events,

00:13:00.076 --> 00:13:01.516 A:middle
but it can be used to sync data

00:13:01.516 --> 00:13:02.656 A:middle
of other types as well.

00:13:03.876 --> 00:13:05.126 A:middle
And so a really great example of

00:13:05.126 --> 00:13:06.326 A:middle
this is secure messaging.

00:13:06.786 --> 00:13:09.706 A:middle
Secure messaging can be seen via

00:13:09.706 --> 00:13:11.656 A:middle
our Connect tab and showcased

00:13:11.656 --> 00:13:12.966 A:middle
using the new UI modules

00:13:13.196 --> 00:13:14.946 A:middle
developed in our latest CareKit

00:13:15.386 --> 00:13:15.546 A:middle
update.

00:13:16.596 --> 00:13:18.036 A:middle
If you attended the previous

00:13:18.036 --> 00:13:19.586 A:middle
session, What's New in CareKit

00:13:19.586 --> 00:13:21.256 A:middle
and ReserachKit, you will be

00:13:21.256 --> 00:13:22.746 A:middle
familiar with the added inbox

00:13:22.746 --> 00:13:23.896 A:middle
feature via the Connect tab.

00:13:28.956 --> 00:13:31.146 A:middle
Inbox provides developers with

00:13:31.146 --> 00:13:32.716 A:middle
the ability to easily display

00:13:32.716 --> 00:13:33.816 A:middle
messages in a nice

00:13:33.846 --> 00:13:34.986 A:middle
conversation-like format.

00:13:35.516 --> 00:13:38.556 A:middle
And that messaging feature can

00:13:38.556 --> 00:13:40.366 A:middle
be tied directly into the Bridge

00:13:40.366 --> 00:13:42.846 A:middle
API and cloud backend solutions

00:13:43.446 --> 00:13:45.136 A:middle
to allow patients and care teams

00:13:45.396 --> 00:13:47.286 A:middle
to securely message directly in

00:13:47.286 --> 00:13:48.176 A:middle
their CareKit apps.

00:13:49.316 --> 00:13:50.376 A:middle
And so let's take a look at how

00:13:50.376 --> 00:13:54.606 A:middle
to accomplish this in the code.

00:13:54.816 --> 00:13:56.856 A:middle
Use the OCKConnectViewController

00:13:57.716 --> 00:13:58.246 A:middle
delegate the

00:13:58.246 --> 00:13:59.676 A:middle
OCKConnectViewController data

00:13:59.676 --> 00:14:01.296 A:middle
source methods to set up your

00:13:59.676 --> 00:14:01.296 A:middle
source methods to set up your

00:14:01.296 --> 00:14:01.916 A:middle
messaging UI.

00:14:03.556 --> 00:14:05.246 A:middle
And please note that not all the

00:14:05.246 --> 00:14:06.746 A:middle
necessary delegate functions are

00:14:06.746 --> 00:14:08.896 A:middle
showcased here, but we've chosen

00:14:08.896 --> 00:14:10.106 A:middle
to highlight some of the more

00:14:10.106 --> 00:14:11.066 A:middle
specific methods.

00:14:11.816 --> 00:14:15.176 A:middle
And so this first method is

00:14:15.176 --> 00:14:16.996 A:middle
necessary to tell the delegate

00:14:17.196 --> 00:14:19.056 A:middle
how many message items exist for

00:14:19.056 --> 00:14:20.206 A:middle
the corresponding care team

00:14:20.206 --> 00:14:20.646 A:middle
contact.

00:14:21.856 --> 00:14:23.586 A:middle
Patients and care teams could

00:14:23.586 --> 00:14:25.486 A:middle
have multiple conversations, so

00:14:25.486 --> 00:14:26.996 A:middle
knowing which messages go with

00:14:26.996 --> 00:14:28.286 A:middle
which conversation will be

00:14:28.286 --> 00:14:28.856 A:middle
crucial here.

00:14:29.356 --> 00:14:33.326 A:middle
And next you can implement the

00:14:33.326 --> 00:14:34.706 A:middle
connectMessageItemAtIndex

00:14:34.736 --> 00:14:36.456 A:middle
function and return the

00:14:36.456 --> 00:14:37.666 A:middle
appropriate message at that

00:14:37.666 --> 00:14:38.066 A:middle
index.

00:14:39.576 --> 00:14:40.366 A:middle
An array of

00:14:40.366 --> 00:14:42.226 A:middle
OCKConnectMessageItems can be

00:14:42.226 --> 00:14:44.066 A:middle
stored as you send and receive

00:14:44.066 --> 00:14:44.636 A:middle
messages.

00:14:45.266 --> 00:14:46.276 A:middle
And you can use the index

00:14:46.276 --> 00:14:48.216 A:middle
property of this method to index

00:14:48.216 --> 00:14:49.536 A:middle
into that array and return the

00:14:49.536 --> 00:14:50.516 A:middle
appropriate message.

00:14:51.056 --> 00:14:53.156 A:middle
And what this is going to do is

00:14:53.156 --> 00:14:54.596 A:middle
it's going to allow your UI to

00:14:54.596 --> 00:14:56.056 A:middle
display these messages in the

00:14:56.056 --> 00:14:56.736 A:middle
appropriate order.

00:14:59.456 --> 00:15:01.346 A:middle
And last you can implement the

00:14:59.456 --> 00:15:01.346 A:middle
And last you can implement the

00:15:01.346 --> 00:15:02.866 A:middle
didSendConnectMessage function

00:15:03.356 --> 00:15:04.996 A:middle
to securely send a message over

00:15:04.996 --> 00:15:06.486 A:middle
to your care team or over to

00:15:06.486 --> 00:15:06.996 A:middle
your patient.

00:15:07.476 --> 00:15:09.936 A:middle
And so this is where our Bridge

00:15:09.936 --> 00:15:11.736 A:middle
API and these backend cloud

00:15:11.736 --> 00:15:13.406 A:middle
solutions really come into play.

00:15:14.096 --> 00:15:16.456 A:middle
You can utilize those Bridge

00:15:16.456 --> 00:15:18.446 A:middle
methods to either create a new

00:15:18.446 --> 00:15:20.586 A:middle
conversation or to even append a

00:15:20.586 --> 00:15:21.656 A:middle
new message to the existing

00:15:21.656 --> 00:15:22.546 A:middle
conversation thread.

00:15:23.056 --> 00:15:25.536 A:middle
And so let's see how that might

00:15:25.536 --> 00:15:26.906 A:middle
look using Medable solution.

00:15:31.316 --> 00:15:32.866 A:middle
So here you can see how to

00:15:32.866 --> 00:15:33.846 A:middle
create the conversation.

00:15:34.486 --> 00:15:35.496 A:middle
And this takes the message

00:15:35.536 --> 00:15:37.036 A:middle
object which can be created from

00:15:37.036 --> 00:15:38.956 A:middle
your delegate properties and an

00:15:38.956 --> 00:15:40.896 A:middle
array of targets indicating who

00:15:40.896 --> 00:15:41.896 A:middle
those messages should be sent

00:15:41.896 --> 00:15:41.963 A:middle
to.

00:15:43.496 --> 00:15:45.326 A:middle
Now in this target ID property

00:15:45.326 --> 00:15:46.326 A:middle
you see of the target's

00:15:46.326 --> 00:15:48.166 A:middle
parameter will be the unique

00:15:48.166 --> 00:15:49.546 A:middle
identifier of the connection and

00:15:49.546 --> 00:15:50.706 A:middle
whom that message should be

00:15:51.306 --> 00:15:51.426 A:middle
sent.

00:15:52.196 --> 00:15:53.906 A:middle
And success of this function

00:15:54.046 --> 00:15:55.016 A:middle
will not only create the

00:15:55.016 --> 00:15:56.636 A:middle
conversation but it will append

00:15:56.636 --> 00:15:57.746 A:middle
the attached message.

00:15:58.276 --> 00:16:00.546 A:middle
It's really important to note

00:15:58.276 --> 00:16:00.546 A:middle
It's really important to note

00:16:00.546 --> 00:16:02.566 A:middle
here that we recommend not

00:16:02.616 --> 00:16:04.326 A:middle
creating multiple conversations

00:16:04.566 --> 00:16:05.786 A:middle
with the same connection via

00:16:05.846 --> 00:16:07.006 A:middle
this createConversation

00:16:07.006 --> 00:16:07.386 A:middle
function.

00:16:09.126 --> 00:16:10.606 A:middle
Although it can be done, it's

00:16:10.606 --> 00:16:12.126 A:middle
really best practice to create

00:16:12.126 --> 00:16:13.336 A:middle
the conversation once.

00:16:13.876 --> 00:16:15.366 A:middle
And subsequent messages should

00:16:15.366 --> 00:16:16.576 A:middle
be appended using the

00:16:16.576 --> 00:16:17.506 A:middle
sendMessage function.

00:16:20.176 --> 00:16:21.866 A:middle
And so this sendMessage function

00:16:22.106 --> 00:16:23.306 A:middle
is very similar to the one

00:16:23.306 --> 00:16:23.546 A:middle
above.

00:16:24.146 --> 00:16:25.206 A:middle
However, it takes the message

00:16:25.206 --> 00:16:27.276 A:middle
object and now a conversation

00:16:27.276 --> 00:16:27.536 A:middle
ID.

00:16:29.516 --> 00:16:31.096 A:middle
When you create the conversation

00:16:31.096 --> 00:16:32.856 A:middle
above, it's important to keep a

00:16:32.856 --> 00:16:34.356 A:middle
reference of that returned ID

00:16:34.876 --> 00:16:36.366 A:middle
which you should be using as the

00:16:36.366 --> 00:16:37.626 A:middle
conversation ID parameter of

00:16:37.626 --> 00:16:38.286 A:middle
this function.

00:16:38.976 --> 00:16:40.136 A:middle
And this is going to ensure that

00:16:40.136 --> 00:16:41.676 A:middle
when you send a new message, it

00:16:41.676 --> 00:16:42.536 A:middle
gets appended to your

00:16:42.536 --> 00:16:43.946 A:middle
appropriate conversation thread.

00:16:44.536 --> 00:16:47.236 A:middle
And for good user experience,

00:16:47.416 --> 00:16:49.366 A:middle
it's also important to perform

00:16:49.366 --> 00:16:51.566 A:middle
any necessary UI updates upon

00:16:51.636 --> 00:16:53.176 A:middle
creating a new conversation or

00:16:53.176 --> 00:16:54.376 A:middle
even appending a new message to

00:16:54.376 --> 00:16:55.696 A:middle
an existing conversation thread

00:16:56.346 --> 00:16:57.626 A:middle
to ensure that your users are

00:16:57.626 --> 00:16:59.166 A:middle
going to get instant feedback if

00:16:59.166 --> 00:17:00.486 A:middle
their messages were successfully

00:16:59.166 --> 00:17:00.486 A:middle
their messages were successfully

00:17:00.486 --> 00:17:01.016 A:middle
sent or not.

00:17:01.536 --> 00:17:04.626 A:middle
And so this messaging feature is

00:17:04.626 --> 00:17:06.086 A:middle
another great example of how our

00:17:06.086 --> 00:17:07.996 A:middle
Bridge API and these cloud

00:17:07.996 --> 00:17:10.205 A:middle
solutions are helping to improve

00:17:10.336 --> 00:17:11.536 A:middle
the at-home patient care

00:17:11.536 --> 00:17:12.185 A:middle
experience.

00:17:15.306 --> 00:17:16.726 A:middle
And so now that we've seen the

00:17:16.726 --> 00:17:17.836 A:middle
architecture of the bridge API

00:17:18.486 --> 00:17:19.726 A:middle
and how to utilize it along with

00:17:19.726 --> 00:17:21.175 A:middle
the corresponding cloud backend,

00:17:21.616 --> 00:17:22.826 A:middle
I'd like to invite Akshay to the

00:17:22.826 --> 00:17:24.106 A:middle
stage to give you guys a quick

00:17:24.106 --> 00:17:24.356 A:middle
demo.

00:17:25.516 --> 00:17:29.316 A:middle
[ Applause ]

00:17:29.816 --> 00:17:30.196 A:middle
&gt;&gt; All right.

00:17:30.956 --> 00:17:32.336 A:middle
Hello everyone and welcome to

00:17:32.336 --> 00:17:33.556 A:middle
the CareKit Cloud Bridge Sync

00:17:33.556 --> 00:17:33.806 A:middle
Demo.

00:17:34.586 --> 00:17:36.276 A:middle
In this demo, we'll see how easy

00:17:36.276 --> 00:17:37.986 A:middle
it is to share data between a

00:17:37.986 --> 00:17:39.616 A:middle
patient app and a care team app

00:17:39.616 --> 00:17:40.866 A:middle
using a HIPPA compliant secure

00:17:40.866 --> 00:17:41.416 A:middle
cloud bridge.

00:17:42.416 --> 00:17:43.796 A:middle
For this demo, we'll be using

00:17:43.796 --> 00:17:45.036 A:middle
the OCKSample app which is

00:17:45.036 --> 00:17:46.636 A:middle
available Open Source on GitHub.

00:17:47.396 --> 00:17:49.076 A:middle
The OCKSample app is developed

00:17:49.076 --> 00:17:50.826 A:middle
by our [inaudible] team with all

00:17:50.826 --> 00:17:51.976 A:middle
the best practices in place.

00:17:52.536 --> 00:17:53.946 A:middle
So we believe, for this demo,

00:17:53.946 --> 00:17:55.086 A:middle
the Sample app would be a good

00:17:55.086 --> 00:17:56.796 A:middle
starting point because anyone

00:17:56.796 --> 00:17:57.976 A:middle
who's familiar with CareKit is

00:17:57.976 --> 00:17:59.116 A:middle
also very likely familiar with

00:17:59.116 --> 00:17:59.656 A:middle
the Sample app.

00:18:00.196 --> 00:18:01.896 A:middle
For more reference on the Sample

00:18:01.896 --> 00:18:03.356 A:middle
app, please refer to last year's

00:18:03.356 --> 00:18:04.966 A:middle
WWDC session Getting Started

00:18:05.036 --> 00:18:05.646 A:middle
with CareKit.

00:18:06.786 --> 00:18:07.856 A:middle
So let's see what the Sample app

00:18:07.856 --> 00:18:08.596 A:middle
looks like right now.

00:18:09.156 --> 00:18:12.636 A:middle
On my computer here, I have two

00:18:12.636 --> 00:18:13.166 A:middle
simulators.

00:18:13.776 --> 00:18:15.456 A:middle
In my iPhone simulator, we have

00:18:15.456 --> 00:18:16.226 A:middle
the Sample app.

00:18:17.376 --> 00:18:18.596 A:middle
And currently for the Sample

00:18:18.596 --> 00:18:20.606 A:middle
app, we have created and stored

00:18:20.606 --> 00:18:22.406 A:middle
a care plan store object locally

00:18:23.306 --> 00:18:24.956 A:middle
and an OCKCarePatientObject

00:18:25.086 --> 00:18:26.276 A:middle
which is associated with this

00:18:26.276 --> 00:18:26.876 A:middle
care plan store.

00:18:28.056 --> 00:18:29.316 A:middle
There are three tabs: the Care

00:18:29.316 --> 00:18:31.186 A:middle
Contents tab which shows all the

00:18:31.186 --> 00:18:32.496 A:middle
activities that belong to this

00:18:32.716 --> 00:18:35.116 A:middle
care plan store, an Insights tab

00:18:35.426 --> 00:18:36.906 A:middle
which shows [inaudible] insight

00:18:36.906 --> 00:18:39.406 A:middle
items, and a Connect tab which

00:18:39.406 --> 00:18:41.096 A:middle
shows OCKContacts that are

00:18:41.096 --> 00:18:42.826 A:middle
associated with this OCKPatient.

00:18:44.086 --> 00:18:45.736 A:middle
Explicitly for this demo, we

00:18:45.736 --> 00:18:47.176 A:middle
have also created a Care Team

00:18:47.176 --> 00:18:47.346 A:middle
app.

00:18:48.086 --> 00:18:49.686 A:middle
On my iPad simulator, we have

00:18:49.686 --> 00:18:51.516 A:middle
the Care Team app which shows

00:18:51.516 --> 00:18:53.196 A:middle
the care team member and a list

00:18:53.196 --> 00:18:54.486 A:middle
of patients that belong to this

00:18:54.486 --> 00:18:55.096 A:middle
care team member.

00:18:56.096 --> 00:18:57.516 A:middle
Clicking on a patient will take

00:18:57.516 --> 00:18:58.986 A:middle
us to their profile where we can

00:18:58.986 --> 00:18:59.946 A:middle
see their activities.

00:19:00.426 --> 00:19:01.386 A:middle
And for this demo, we're going

00:19:01.386 --> 00:19:02.586 A:middle
to show one of the patient's

00:19:02.586 --> 00:19:04.296 A:middle
activities to show the data

00:19:04.296 --> 00:19:04.676 A:middle
syncing.

00:19:06.026 --> 00:19:07.286 A:middle
Currently, both the apps have

00:19:07.286 --> 00:19:09.056 A:middle
local care plan stores, so we

00:19:09.056 --> 00:19:10.376 A:middle
won't be able to sync the data

00:19:10.376 --> 00:19:11.216 A:middle
between the two apps.

00:19:11.736 --> 00:19:12.896 A:middle
Let's go ahead and bridge this

00:19:12.896 --> 00:19:16.126 A:middle
gap using the cloud bridge.

00:19:16.296 --> 00:19:17.496 A:middle
Here's my Xcode workspace.

00:19:17.666 --> 00:19:18.696 A:middle
And here are my two projects:

00:19:18.806 --> 00:19:23.356 A:middle
the Care Team project and the

00:19:23.596 --> 00:19:25.286 A:middle
OCKSample project.

00:19:28.756 --> 00:19:30.446 A:middle
Let's go ahead and first add our

00:19:30.446 --> 00:19:31.806 A:middle
cloud bridge to our Care Team

00:19:31.806 --> 00:19:32.276 A:middle
app first.

00:19:33.516 --> 00:19:34.786 A:middle
And as Kelsey mentioned earlier,

00:19:34.786 --> 00:19:36.196 A:middle
we will be using Medable as our

00:19:36.196 --> 00:19:37.276 A:middle
cloud bridge solution for this

00:19:37.276 --> 00:19:37.516 A:middle
demo.

00:19:38.876 --> 00:19:39.826 A:middle
So the first thing that you need

00:19:39.826 --> 00:19:42.616 A:middle
to do is go to Medable's GitHub

00:19:42.676 --> 00:19:44.816 A:middle
and download or clone their API

00:19:44.816 --> 00:19:46.856 A:middle
into our project and then

00:19:46.856 --> 00:19:48.216 A:middle
integrate the framework into our

00:19:48.216 --> 00:19:48.636 A:middle
project.

00:19:49.606 --> 00:19:50.596 A:middle
I've already downloaded

00:19:50.596 --> 00:19:52.666 A:middle
Medable's API and added the

00:19:52.666 --> 00:19:54.076 A:middle
Medable's framework into my

00:19:54.076 --> 00:19:55.776 A:middle
project right here with all my

00:19:55.776 --> 00:19:58.026 A:middle
other like CareKit and

00:19:58.026 --> 00:19:58.876 A:middle
ResearchKit and all of the

00:19:58.876 --> 00:19:59.336 A:middle
frameworks.

00:20:01.676 --> 00:20:03.656 A:middle
To use Medable's API, we have to

00:20:03.656 --> 00:20:04.716 A:middle
add some of their files.

00:20:05.526 --> 00:20:07.346 A:middle
We can do this by going to their

00:20:07.346 --> 00:20:09.106 A:middle
CareKit Bridge API folder and

00:20:09.336 --> 00:20:11.196 A:middle
dragging and dropping it into

00:20:11.196 --> 00:20:12.786 A:middle
our project right here.

00:20:13.306 --> 00:20:16.636 A:middle
Let's see what this directory

00:20:16.636 --> 00:20:16.896 A:middle
has.

00:20:17.416 --> 00:20:19.286 A:middle
It has three types of files.

00:20:19.446 --> 00:20:20.996 A:middle
First, all the helper files that

00:20:20.996 --> 00:20:23.426 A:middle
we need which are Medable object

00:20:23.546 --> 00:20:24.686 A:middle
counterparts of the CareKit

00:20:24.686 --> 00:20:26.046 A:middle
objects, for example

00:20:26.046 --> 00:20:26.976 A:middle
MDCarePlanStore,

00:20:27.416 --> 00:20:29.146 A:middle
MDCarePlanPatient, etcetera.

00:20:30.446 --> 00:20:32.076 A:middle
The second is the Medable

00:20:32.306 --> 00:20:32.846 A:middle
[inaudible] Bridging Header.

00:20:33.826 --> 00:20:34.836 A:middle
Let's go ahead and add this

00:20:34.836 --> 00:20:35.926 A:middle
bridging header to our project.

00:20:36.786 --> 00:20:38.786 A:middle
I'll go to my project and in my

00:20:38.786 --> 00:20:39.396 A:middle
build settings.

00:20:39.396 --> 00:20:41.376 A:middle
I look for the bridging header.

00:20:41.376 --> 00:20:45.036 A:middle
And add the bridging header

00:20:45.036 --> 00:20:45.346 A:middle
right here.

00:20:48.516 --> 00:20:51.856 A:middle
Perfect. Now we have added all

00:20:51.856 --> 00:20:53.176 A:middle
the files that we needed from

00:20:53.176 --> 00:20:54.306 A:middle
Medable into our project.

00:20:56.436 --> 00:20:57.666 A:middle
The next thing that we have in

00:20:57.666 --> 00:20:59.236 A:middle
this directory is the care plan

00:20:59.236 --> 00:20:59.936 A:middle
store category.

00:21:00.846 --> 00:21:02.106 A:middle
This category has all the

00:21:02.106 --> 00:21:03.726 A:middle
methods that we need to create

00:21:03.726 --> 00:21:05.126 A:middle
the Medable counterpart objects

00:21:05.126 --> 00:21:06.416 A:middle
from our CareKit object.

00:21:08.556 --> 00:21:10.696 A:middle
To use Medable's API, we also

00:21:10.696 --> 00:21:12.386 A:middle
need to add a few necessary

00:21:12.386 --> 00:21:13.616 A:middle
methods into our project.

00:21:14.316 --> 00:21:15.416 A:middle
We'll be adding those into our

00:21:15.416 --> 00:21:16.986 A:middle
LocalCarePlanStore.m files.

00:21:18.026 --> 00:21:19.696 A:middle
Let's first add those methods in

00:21:19.696 --> 00:21:20.846 A:middle
and then I'll talk about what

00:21:20.846 --> 00:21:22.156 A:middle
those methods do.

00:21:23.816 --> 00:21:25.696 A:middle
In my CarePlanStore.m file, I'm

00:21:26.406 --> 00:21:27.586 A:middle
going to add those methods.

00:21:28.466 --> 00:21:30.516 A:middle
And these methods will mimic

00:21:30.516 --> 00:21:31.846 A:middle
whatever the local care plan

00:21:31.846 --> 00:21:32.626 A:middle
store methods do.

00:21:32.956 --> 00:21:33.626 A:middle
For example, in our

00:21:33.626 --> 00:21:34.646 A:middle
CarePlanStore we have an

00:21:34.646 --> 00:21:36.746 A:middle
activity method and the methods

00:21:36.746 --> 00:21:38.096 A:middle
that we just added will do

00:21:38.176 --> 00:21:39.306 A:middle
exactly the same but on the

00:21:39.306 --> 00:21:42.426 A:middle
Medable side so all of these

00:21:42.426 --> 00:21:43.946 A:middle
methods are adding activity,

00:21:44.116 --> 00:21:45.736 A:middle
removing an activity, updating

00:21:45.736 --> 00:21:46.716 A:middle
an event, etcetera.

00:21:47.286 --> 00:21:49.986 A:middle
With this, we have added

00:21:49.986 --> 00:21:51.756 A:middle
everything that we need as files

00:21:51.756 --> 00:21:53.086 A:middle
and code into our project.

00:21:54.456 --> 00:21:56.696 A:middle
To use Medable's API, you need

00:21:56.696 --> 00:21:57.736 A:middle
to create an account with them.

00:21:58.576 --> 00:21:59.866 A:middle
When you create an account, you

00:21:59.866 --> 00:22:00.996 A:middle
get three types of credentials:

00:21:59.866 --> 00:22:00.996 A:middle
get three types of credentials:

00:22:01.246 --> 00:22:04.586 A:middle
a client key, a base URL, and an

00:22:04.586 --> 00:22:05.396 A:middle
organization name.

00:22:06.226 --> 00:22:07.376 A:middle
We have to add these three

00:22:07.376 --> 00:22:09.356 A:middle
credentials into our project to

00:22:09.356 --> 00:22:10.826 A:middle
hook up our project to our

00:22:10.826 --> 00:22:11.686 A:middle
account on Medable.

00:22:11.996 --> 00:22:13.376 A:middle
Let's go ahead and see how to do

00:22:13.376 --> 00:22:13.546 A:middle
that.

00:22:14.726 --> 00:22:16.276 A:middle
Go to your projects info.plist

00:22:16.276 --> 00:22:18.336 A:middle
file and create a dictionary.

00:22:19.726 --> 00:22:22.186 A:middle
And we'll call it Medable, and

00:22:25.536 --> 00:22:27.176 A:middle
set it as a dictionary.

00:22:30.186 --> 00:22:31.286 A:middle
Now in this dictionary, we'll

00:22:31.286 --> 00:22:32.436 A:middle
have to add three key value

00:22:32.436 --> 00:22:32.766 A:middle
pairs.

00:22:32.766 --> 00:22:35.706 A:middle
The first is the ClientKey.

00:22:37.136 --> 00:22:38.836 A:middle
Second one is the BaseURL.

00:22:39.366 --> 00:22:42.646 A:middle
And third is the Organization

00:22:42.646 --> 00:22:42.856 A:middle
name.

00:22:47.856 --> 00:22:50.216 A:middle
Perfect. When we add these three

00:22:50.216 --> 00:22:51.746 A:middle
credentials, we should be able

00:22:51.746 --> 00:22:53.626 A:middle
to link our project to our

00:22:53.626 --> 00:22:54.556 A:middle
account at Medable.

00:22:54.616 --> 00:22:57.556 A:middle
We have to perform all of these

00:22:57.556 --> 00:22:58.946 A:middle
steps for our Sample app as

00:22:58.946 --> 00:22:59.156 A:middle
well.

00:22:59.956 --> 00:23:01.226 A:middle
And for this demo, I've already

00:22:59.956 --> 00:23:01.226 A:middle
And for this demo, I've already

00:23:01.226 --> 00:23:02.486 A:middle
added all of these steps into

00:23:02.486 --> 00:23:03.436 A:middle
our Sample app already.

00:23:04.796 --> 00:23:07.396 A:middle
So now both of our apps are

00:23:07.516 --> 00:23:08.756 A:middle
having [inaudible] Medable and

00:23:09.276 --> 00:23:10.146 A:middle
configured with the cloud

00:23:10.146 --> 00:23:10.396 A:middle
bridge.

00:23:11.326 --> 00:23:13.726 A:middle
Let's go ahead and use those.

00:23:13.936 --> 00:23:15.036 A:middle
When we create an account with

00:23:15.036 --> 00:23:16.856 A:middle
Medable, with their dashboard,

00:23:17.146 --> 00:23:18.586 A:middle
we should be able to create a

00:23:18.586 --> 00:23:19.656 A:middle
care team member account.

00:23:20.686 --> 00:23:22.086 A:middle
And we can do that by providing

00:23:22.086 --> 00:23:24.156 A:middle
an e-mail, a password, and a

00:23:24.156 --> 00:23:24.676 A:middle
phone number.

00:23:25.496 --> 00:23:26.576 A:middle
So when we create the care team

00:23:26.576 --> 00:23:30.076 A:middle
member account, in return we get

00:23:30.076 --> 00:23:31.096 A:middle
a verification token.

00:23:31.616 --> 00:23:33.786 A:middle
That verification token is

00:23:33.786 --> 00:23:35.086 A:middle
needed by the care team member

00:23:35.086 --> 00:23:37.476 A:middle
to log themselves in.

00:23:37.696 --> 00:23:39.926 A:middle
And these properties can be

00:23:39.926 --> 00:23:41.586 A:middle
provided through the UI,

00:23:41.786 --> 00:23:43.326 A:middle
preferably using the ResearchKit

00:23:43.326 --> 00:23:43.956 A:middle
login step.

00:23:43.956 --> 00:23:46.146 A:middle
So let's go ahead and add those

00:23:46.146 --> 00:23:46.266 A:middle
in.

00:23:46.816 --> 00:23:49.586 A:middle
I'll go into my projects app

00:23:49.586 --> 00:23:50.126 A:middle
delegate file.

00:23:50.636 --> 00:23:52.126 A:middle
And first I will add all the

00:23:52.126 --> 00:23:54.696 A:middle
necessary properties that I

00:23:54.696 --> 00:23:55.206 A:middle
would be needing.

00:23:57.376 --> 00:23:59.126 A:middle
Here I have a cloud bridge.

00:23:59.126 --> 00:24:01.306 A:middle
I'll talk a little bit in more

00:23:59.126 --> 00:24:01.306 A:middle
I'll talk a little bit in more

00:24:01.306 --> 00:24:02.456 A:middle
detail about this in a minute.

00:24:03.206 --> 00:24:04.756 A:middle
The e-mail, the password, and a

00:24:04.756 --> 00:24:06.156 A:middle
verification token of the care

00:24:06.156 --> 00:24:06.666 A:middle
team member.

00:24:07.236 --> 00:24:09.276 A:middle
And then I'll get back to these

00:24:09.276 --> 00:24:09.966 A:middle
properties in a minute.

00:24:11.406 --> 00:24:13.096 A:middle
Let's go ahead and add Medable's

00:24:13.096 --> 00:24:13.876 A:middle
login method.

00:24:16.276 --> 00:24:18.166 A:middle
Here's the [inaudible] .login

00:24:18.166 --> 00:24:19.856 A:middle
method which takes an e-mail, a

00:24:19.856 --> 00:24:21.386 A:middle
password, and a verification

00:24:21.386 --> 00:24:21.726 A:middle
token.

00:24:22.286 --> 00:24:24.736 A:middle
If the person is successfully

00:24:24.736 --> 00:24:27.566 A:middle
logged in, we should be able to

00:24:27.566 --> 00:24:28.306 A:middle
create a patient.

00:24:28.466 --> 00:24:29.796 A:middle
Otherwise, this method returns a

00:24:29.796 --> 00:24:30.116 A:middle
fault.

00:24:30.606 --> 00:24:34.196 A:middle
Let's say the care team member

00:24:34.196 --> 00:24:34.806 A:middle
is logged in.

00:24:35.316 --> 00:24:36.756 A:middle
Now we should be able to create

00:24:36.756 --> 00:24:37.956 A:middle
a patient from here.

00:24:38.946 --> 00:24:39.676 A:middle
And that's where these

00:24:39.676 --> 00:24:40.406 A:middle
properties come in.

00:24:40.406 --> 00:24:43.056 A:middle
To create a patient, we need the

00:24:43.056 --> 00:24:44.686 A:middle
patient's first name, their last

00:24:44.686 --> 00:24:46.456 A:middle
name, and all of their details

00:24:46.726 --> 00:24:47.616 A:middle
and their e-mail ID.

00:24:48.146 --> 00:24:51.306 A:middle
Let's go ahead and create a

00:24:51.306 --> 00:24:52.466 A:middle
patient using these properties

00:24:53.146 --> 00:24:54.516 A:middle
adding the first name, the last

00:24:54.516 --> 00:24:56.006 A:middle
name, all of the properties of

00:24:56.006 --> 00:24:56.496 A:middle
the patient.

00:24:58.466 --> 00:25:00.096 A:middle
And this method does two things.

00:24:58.466 --> 00:25:00.096 A:middle
And this method does two things.

00:25:01.136 --> 00:25:03.436 A:middle
In its callback, if we were not

00:25:03.436 --> 00:25:05.676 A:middle
able to create a patient, it

00:25:05.676 --> 00:25:06.326 A:middle
returns a fault.

00:25:06.956 --> 00:25:08.226 A:middle
But if you were successfully

00:25:08.226 --> 00:25:09.986 A:middle
able to create a patient, then

00:25:09.986 --> 00:25:11.196 A:middle
the callback returns a bridge.

00:25:12.336 --> 00:25:13.446 A:middle
Now this is the place where you

00:25:13.446 --> 00:25:14.946 A:middle
can access the care plan store.

00:25:15.686 --> 00:25:16.846 A:middle
So by doing [inaudible] cloud

00:25:16.846 --> 00:25:18.566 A:middle
bridge is setting up a local

00:25:18.566 --> 00:25:19.836 A:middle
variable, the cloud bridge, to

00:25:20.086 --> 00:25:21.026 A:middle
the cloud bridge that we

00:25:21.026 --> 00:25:22.816 A:middle
received from callback, we have

00:25:22.816 --> 00:25:24.256 A:middle
access to the cloud bridge from

00:25:24.706 --> 00:25:25.566 A:middle
anywhere in our app.

00:25:26.546 --> 00:25:27.706 A:middle
And that's what we can do

00:25:27.706 --> 00:25:29.356 A:middle
cloudbridge.careplanstore.

00:25:29.386 --> 00:25:30.606 A:middle
It will give us access to the

00:25:30.606 --> 00:25:31.726 A:middle
care plan store that we need.

00:25:32.146 --> 00:25:33.486 A:middle
We will replace our care plans

00:25:33.486 --> 00:25:34.796 A:middle
store and make the

00:25:34.796 --> 00:25:36.486 A:middle
cloudbridge.careplanstore as our

00:25:36.486 --> 00:25:37.446 A:middle
default care plan store

00:25:37.446 --> 00:25:40.046 A:middle
throughout the app.

00:25:40.306 --> 00:25:41.286 A:middle
The second thing that this

00:25:41.396 --> 00:25:43.336 A:middle
method does is sends an

00:25:43.336 --> 00:25:44.766 A:middle
invitation token to the patient

00:25:44.926 --> 00:25:45.916 A:middle
in their e-mail which we

00:25:45.916 --> 00:25:48.646 A:middle
provided right here.

00:25:48.876 --> 00:25:50.036 A:middle
When the patient receives this

00:25:50.036 --> 00:25:53.016 A:middle
e-mail, they should be able to

00:25:53.016 --> 00:25:54.276 A:middle
register themselves through the

00:25:54.276 --> 00:25:56.266 A:middle
patient app.

00:25:56.266 --> 00:25:57.336 A:middle
And they would need this

00:25:57.506 --> 00:25:59.076 A:middle
verification token which is sent

00:25:59.076 --> 00:26:00.406 A:middle
-- the invitation token that is

00:25:59.076 --> 00:26:00.406 A:middle
-- the invitation token that is

00:26:00.406 --> 00:26:02.316 A:middle
sent to their e-mail to register

00:26:02.316 --> 00:26:02.816 A:middle
themselves.

00:26:03.706 --> 00:26:04.886 A:middle
Let's go ahead and register the

00:26:04.886 --> 00:26:06.586 A:middle
patient in the patient app.

00:26:07.136 --> 00:26:08.936 A:middle
In my patient app, I'll go to

00:26:08.936 --> 00:26:11.056 A:middle
the app delegate and add all the

00:26:11.056 --> 00:26:12.786 A:middle
variables that we need for a

00:26:12.786 --> 00:26:13.596 A:middle
patient to register.

00:26:13.986 --> 00:26:15.166 A:middle
This includes the first name,

00:26:15.216 --> 00:26:17.206 A:middle
last name, e-mail, their mobile

00:26:17.206 --> 00:26:18.636 A:middle
number, a password, and an

00:26:18.636 --> 00:26:19.406 A:middle
invitation token.

00:26:20.176 --> 00:26:21.416 A:middle
And all of these properties can

00:26:21.416 --> 00:26:22.476 A:middle
be provided through the UI.

00:26:23.206 --> 00:26:25.476 A:middle
Let's go ahead and add the

00:26:25.476 --> 00:26:26.946 A:middle
method to register the patient.

00:26:30.476 --> 00:26:32.056 A:middle
The register account method

00:26:32.056 --> 00:26:33.096 A:middle
takes in the first name, the

00:26:33.096 --> 00:26:34.856 A:middle
last name, the e-mail, the

00:26:34.856 --> 00:26:36.716 A:middle
mobile number, the password, and

00:26:36.716 --> 00:26:37.576 A:middle
the invitation token.

00:26:37.976 --> 00:26:39.536 A:middle
And, again, in the callback,

00:26:39.636 --> 00:26:40.616 A:middle
returns the cloud bridge.

00:26:41.336 --> 00:26:42.686 A:middle
This is, again, the same cloud

00:26:42.686 --> 00:26:44.036 A:middle
bridge that the care team

00:26:44.036 --> 00:26:44.786 A:middle
members are accessing.

00:26:45.116 --> 00:26:45.946 A:middle
So if you do the

00:26:45.946 --> 00:26:48.466 A:middle
cloudbridge.careplanstore, both

00:26:48.466 --> 00:26:49.626 A:middle
the care team member and the

00:26:49.626 --> 00:26:51.026 A:middle
patient should be able to access

00:26:51.026 --> 00:26:52.046 A:middle
the same care plan store.

00:26:53.146 --> 00:26:54.276 A:middle
Make sure you save this cloud

00:26:54.276 --> 00:26:55.336 A:middle
bridge in one of your variables

00:26:55.336 --> 00:26:56.846 A:middle
in your file and make the

00:26:56.846 --> 00:26:58.246 A:middle
cloudbridge.careplanstore as

00:26:58.246 --> 00:26:59.696 A:middle
your default care plan store

00:26:59.696 --> 00:27:02.026 A:middle
throughout the app.

00:26:59.696 --> 00:27:02.026 A:middle
throughout the app.

00:27:02.296 --> 00:27:03.736 A:middle
When we do this, we have

00:27:03.736 --> 00:27:06.256 A:middle
successfully made care team app

00:27:06.256 --> 00:27:07.986 A:middle
and the patient app access a

00:27:08.086 --> 00:27:08.976 A:middle
common care plan store.

00:27:10.006 --> 00:27:12.346 A:middle
Now any activity or an update in

00:27:12.346 --> 00:27:13.776 A:middle
an activity which is done on

00:27:13.776 --> 00:27:14.696 A:middle
either of the apps should

00:27:14.696 --> 00:27:15.786 A:middle
reflect on the other app as

00:27:15.786 --> 00:27:15.976 A:middle
well.

00:27:17.136 --> 00:27:18.186 A:middle
Let's go ahead and test this

00:27:18.186 --> 00:27:18.376 A:middle
out.

00:27:19.756 --> 00:27:21.796 A:middle
For this demo, we have already

00:27:21.796 --> 00:27:23.826 A:middle
created a different version of

00:27:23.826 --> 00:27:25.906 A:middle
the app which has all the same

00:27:25.906 --> 00:27:27.146 A:middle
information but we have added

00:27:27.146 --> 00:27:28.356 A:middle
the login credentials and the

00:27:28.356 --> 00:27:30.026 A:middle
organization name also to these

00:27:30.026 --> 00:27:30.276 A:middle
apps.

00:27:31.286 --> 00:27:32.596 A:middle
In my iPhone simulator, I have

00:27:32.596 --> 00:27:33.346 A:middle
the Sample app.

00:27:33.896 --> 00:27:35.546 A:middle
And in my iPad simulator, we

00:27:35.546 --> 00:27:36.886 A:middle
have the Care Team app.

00:27:37.556 --> 00:27:39.556 A:middle
The Sample app is just the same

00:27:39.556 --> 00:27:40.876 A:middle
app with all the login

00:27:40.876 --> 00:27:41.606 A:middle
credentials needed.

00:27:41.606 --> 00:27:43.266 A:middle
And the Care Team app is also

00:27:43.266 --> 00:27:44.506 A:middle
just the same app with all the

00:27:44.506 --> 00:27:45.256 A:middle
login credentials.

00:27:45.986 --> 00:27:47.826 A:middle
Let's go ahead and complete the

00:27:47.826 --> 00:27:48.916 A:middle
pain activity for today.

00:27:49.516 --> 00:27:52.936 A:middle
In my pain activity, I'm feeling

00:27:52.936 --> 00:27:53.956 A:middle
somewhere around, let's say

00:27:53.956 --> 00:27:55.736 A:middle
seven and I hit Done.

00:27:55.736 --> 00:27:58.566 A:middle
And in no matter of time, this

00:27:58.566 --> 00:28:00.116 A:middle
activity should sync over the

00:27:58.566 --> 00:28:00.116 A:middle
activity should sync over the

00:28:00.116 --> 00:28:01.976 A:middle
data to the care plan activity

00:28:02.156 --> 00:28:02.976 A:middle
on the care team side.

00:28:03.516 --> 00:28:07.946 A:middle
[ Applause ]

00:28:08.446 --> 00:28:09.776 A:middle
Now during the day, whenever

00:28:09.776 --> 00:28:11.806 A:middle
patients feel like their

00:28:11.806 --> 00:28:13.316 A:middle
activity has changed, they can

00:28:13.316 --> 00:28:14.476 A:middle
-- whenever they update an

00:28:14.476 --> 00:28:16.196 A:middle
activity, it should also reflect

00:28:16.196 --> 00:28:17.016 A:middle
on the care team side.

00:28:17.356 --> 00:28:19.206 A:middle
And the time that this is taking

00:28:19.856 --> 00:28:21.266 A:middle
is variable, which you can set

00:28:21.266 --> 00:28:21.786 A:middle
through the API.

00:28:22.126 --> 00:28:23.536 A:middle
If you wanted to, based on your

00:28:23.536 --> 00:28:24.716 A:middle
use case, if you think the

00:28:24.716 --> 00:28:27.166 A:middle
frequency of your updates, you

00:28:27.166 --> 00:28:29.316 A:middle
can change this lapse and either

00:28:29.316 --> 00:28:31.286 A:middle
increase it or decrease it.

00:28:32.896 --> 00:28:34.566 A:middle
With this data syncing, we have

00:28:34.566 --> 00:28:37.546 A:middle
seen in this demo, we took two

00:28:37.546 --> 00:28:38.866 A:middle
applications with local care

00:28:38.866 --> 00:28:41.086 A:middle
plan stores and created a common

00:28:41.086 --> 00:28:43.086 A:middle
cloud bridge and made both the

00:28:43.086 --> 00:28:44.456 A:middle
apps access the common care

00:28:44.456 --> 00:28:47.256 A:middle
plans store and share the data

00:28:47.256 --> 00:28:47.636 A:middle
across.

00:28:48.196 --> 00:28:50.256 A:middle
We believe there was a very

00:28:50.256 --> 00:28:53.006 A:middle
urgent need for functionality

00:28:53.006 --> 00:28:53.436 A:middle
like this.

00:28:54.836 --> 00:28:56.526 A:middle
And with all of these resources

00:28:56.526 --> 00:28:59.126 A:middle
being public, we cannot wait to

00:28:59.126 --> 00:29:00.726 A:middle
collectively help thousands of

00:28:59.126 --> 00:29:00.726 A:middle
collectively help thousands of

00:29:00.726 --> 00:29:02.696 A:middle
people every day.

00:29:02.936 --> 00:29:04.246 A:middle
With this, I would like to call

00:29:04.246 --> 00:29:05.346 A:middle
back Kelsey up on stage and

00:29:05.346 --> 00:29:06.286 A:middle
continue with the session.

00:29:06.546 --> 00:29:06.836 A:middle
Thank you.

00:29:08.516 --> 00:29:12.356 A:middle
[ Applause ]

00:29:12.856 --> 00:29:14.026 A:middle
&gt;&gt; So thank you to Akshay for

00:29:14.026 --> 00:29:15.156 A:middle
that awesome demo.

00:29:16.286 --> 00:29:17.876 A:middle
And so as you guys just saw, the

00:29:18.036 --> 00:29:19.626 A:middle
process of getting a CareKit app

00:29:19.986 --> 00:29:21.086 A:middle
up and running with the Bridge

00:29:21.086 --> 00:29:22.886 A:middle
API is fairly straightforward.

00:29:24.126 --> 00:29:25.976 A:middle
You saw firsthand how the apps

00:29:26.056 --> 00:29:27.956 A:middle
sync data to and from the cloud

00:29:28.696 --> 00:29:30.046 A:middle
and how to utilize those bridge

00:29:30.046 --> 00:29:31.716 A:middle
methods in these cloud solutions

00:29:32.056 --> 00:29:33.246 A:middle
directly in your Xcode

00:29:33.246 --> 00:29:33.906 A:middle
application.

00:29:34.406 --> 00:29:37.726 A:middle
And so throughout the session,

00:29:37.896 --> 00:29:39.326 A:middle
we introduced the addition of

00:29:39.326 --> 00:29:41.046 A:middle
the Bridge API to the CareKit

00:29:41.046 --> 00:29:41.506 A:middle
framework.

00:29:42.716 --> 00:29:43.966 A:middle
We discussed the architecture of

00:29:43.966 --> 00:29:44.566 A:middle
how it works.

00:29:45.716 --> 00:29:47.306 A:middle
And you saw how to utilize it in

00:29:47.306 --> 00:29:48.916 A:middle
the code along with viewing a

00:29:48.916 --> 00:29:49.526 A:middle
live demo.

00:29:50.846 --> 00:29:51.976 A:middle
So what can you do with this new

00:29:51.976 --> 00:29:52.376 A:middle
feature?

00:29:54.876 --> 00:29:56.576 A:middle
The Bridge API not only

00:29:56.576 --> 00:29:57.736 A:middle
integrates with each of the

00:29:57.736 --> 00:29:59.806 A:middle
existing CareKit modules but is

00:29:59.806 --> 00:30:01.976 A:middle
modular and easily extendable to

00:29:59.806 --> 00:30:01.976 A:middle
modular and easily extendable to

00:30:01.976 --> 00:30:03.456 A:middle
be used with new ideas and

00:30:03.456 --> 00:30:05.086 A:middle
contributions from the developer

00:30:05.086 --> 00:30:05.976 A:middle
community like all of you.

00:30:06.566 --> 00:30:08.606 A:middle
And now that we all have a

00:30:08.606 --> 00:30:10.076 A:middle
better understanding of what the

00:30:10.076 --> 00:30:12.676 A:middle
Bridge API is, it's important to

00:30:12.676 --> 00:30:14.286 A:middle
point out and recognize how

00:30:14.286 --> 00:30:16.946 A:middle
powerful this tool can be.

00:30:17.196 --> 00:30:18.796 A:middle
It opens the door and provides

00:30:18.836 --> 00:30:21.076 A:middle
developers, care teams, and

00:30:21.076 --> 00:30:22.936 A:middle
medical institutions with the

00:30:22.936 --> 00:30:24.376 A:middle
technology that allow them to

00:30:24.376 --> 00:30:25.836 A:middle
care for their patients in a

00:30:25.836 --> 00:30:27.376 A:middle
more personal and engaged way.

00:30:28.756 --> 00:30:29.646 A:middle
But what do I mean by that?

00:30:31.146 --> 00:30:32.776 A:middle
It's great to see how CareKit

00:30:32.776 --> 00:30:34.286 A:middle
and each of its existing modules

00:30:34.546 --> 00:30:35.676 A:middle
is helping to improve the

00:30:35.676 --> 00:30:37.026 A:middle
at-home patient care experience,

00:30:37.476 --> 00:30:39.246 A:middle
but it's even better if we can

00:30:39.246 --> 00:30:40.586 A:middle
involve their care teams.

00:30:42.136 --> 00:30:43.876 A:middle
To improve the patient care

00:30:43.876 --> 00:30:45.736 A:middle
process, we looked at this API

00:30:46.356 --> 00:30:48.136 A:middle
to help care teams get a better

00:30:48.136 --> 00:30:49.486 A:middle
understanding of their patient's

00:30:49.486 --> 00:30:51.616 A:middle
needs and to get one step ahead

00:30:51.616 --> 00:30:52.216 A:middle
of their care.

00:30:52.746 --> 00:30:55.066 A:middle
And this can help provide

00:30:55.066 --> 00:30:56.006 A:middle
patients with a sense of

00:30:56.006 --> 00:30:58.116 A:middle
reassurance and encourage them

00:30:58.256 --> 00:30:59.656 A:middle
to become more engaged in their

00:30:59.656 --> 00:31:00.476 A:middle
own personal care.

00:30:59.656 --> 00:31:00.476 A:middle
own personal care.

00:31:01.006 --> 00:31:03.746 A:middle
And these are all powerful tools

00:31:03.746 --> 00:31:04.666 A:middle
that now exist at your

00:31:04.666 --> 00:31:05.336 A:middle
fingertips.

00:31:05.816 --> 00:31:07.626 A:middle
And what comes next is up to

00:31:07.626 --> 00:31:07.866 A:middle
you.

00:31:09.786 --> 00:31:10.836 A:middle
Whether it's extending your

00:31:10.836 --> 00:31:12.746 A:middle
existing applications or

00:31:12.746 --> 00:31:14.726 A:middle
starting from scratch, we

00:31:14.726 --> 00:31:16.416 A:middle
believe that CareKit along with

00:31:16.416 --> 00:31:18.516 A:middle
the Bridge API and developers

00:31:18.516 --> 00:31:20.606 A:middle
like all of you have the power

00:31:20.606 --> 00:31:22.126 A:middle
to improve the at-home patient

00:31:22.126 --> 00:31:24.306 A:middle
care experience and decrease the

00:31:24.306 --> 00:31:25.736 A:middle
patient care gap that exists

00:31:26.496 --> 00:31:26.616 A:middle
today.

00:31:27.806 --> 00:31:29.056 A:middle
And so with this new

00:31:29.056 --> 00:31:30.816 A:middle
functionality, we look out to

00:31:30.816 --> 00:31:32.816 A:middle
all of you to take advantage of

00:31:32.816 --> 00:31:34.476 A:middle
existing third-party backend

00:31:34.476 --> 00:31:37.556 A:middle
cloud solutions or to build your

00:31:37.556 --> 00:31:37.816 A:middle
own.

00:31:38.976 --> 00:31:40.856 A:middle
And in the process, consider who

00:31:40.856 --> 00:31:42.026 A:middle
that data will be syncing with

00:31:42.756 --> 00:31:44.236 A:middle
and how that corresponding care

00:31:44.236 --> 00:31:45.506 A:middle
team app may look.

00:31:47.336 --> 00:31:49.756 A:middle
The Bridge API is only as

00:31:49.756 --> 00:31:51.336 A:middle
powerful as the care team app on

00:31:51.336 --> 00:31:51.926 A:middle
the other side.

00:31:52.246 --> 00:31:53.836 A:middle
And so we look to all of you to

00:31:53.836 --> 00:31:55.446 A:middle
help build out these care team

00:31:55.686 --> 00:31:58.806 A:middle
solutions via care team apps and

00:32:00.576 --> 00:32:00.876 A:middle
dashboards.

00:32:01.176 --> 00:32:03.186 A:middle
And CareKit is Open Source so as

00:32:03.186 --> 00:32:04.806 A:middle
you build out these solutions

00:32:04.956 --> 00:32:06.106 A:middle
and improve your existing

00:32:06.106 --> 00:32:08.276 A:middle
applications, please contribute

00:32:08.276 --> 00:32:10.526 A:middle
that work back so as a team we

00:32:10.526 --> 00:32:11.986 A:middle
can continue to evolve and grow

00:32:11.986 --> 00:32:12.776 A:middle
the CareKit framework.

00:32:13.766 --> 00:32:15.126 A:middle
And so more information about

00:32:15.126 --> 00:32:17.106 A:middle
CareKit and both the Bridge API

00:32:17.346 --> 00:32:19.106 A:middle
solutions from Medable and

00:32:19.106 --> 00:32:21.056 A:middle
CloudMine can be found at the

00:32:21.056 --> 00:32:21.746 A:middle
provided link.

00:32:24.316 --> 00:32:25.416 A:middle
And if you're interested in

00:32:25.416 --> 00:32:26.846 A:middle
learning more about CareKit or

00:32:26.846 --> 00:32:28.166 A:middle
its relating technologies,

00:32:28.426 --> 00:32:29.476 A:middle
please take a look at one of the

00:32:29.476 --> 00:32:30.246 A:middle
following sessions.

00:32:31.646 --> 00:32:32.826 A:middle
So thank you all for coming to

00:32:32.826 --> 00:32:34.016 A:middle
the session on the CareKit

00:32:34.016 --> 00:32:34.566 A:middle
Bridge API.

00:32:34.656 --> 00:32:36.286 A:middle
And we really look forward to

00:32:36.286 --> 00:32:38.186 A:middle
seeing what you all do with this

00:32:38.186 --> 00:32:38.906 A:middle
new technology.

00:32:39.516 --> 00:32:42.500 A:middle
[ Applause ]
