WEBVTT

00:00:06.516 --> 00:00:15.500 A:middle
[ Music ]

00:00:20.516 --> 00:00:25.176 A:middle
[ Applause ]

00:00:25.676 --> 00:00:26.356 A:middle
&gt;&gt; Hi everyone.

00:00:27.316 --> 00:00:29.336 A:middle
Welcome to session 221, TextKit

00:00:29.336 --> 00:00:29.906 A:middle
Best Practices.

00:00:29.906 --> 00:00:31.086 A:middle
I'm Donna Tom.

00:00:31.086 --> 00:00:32.826 A:middle
And I'm the TextKit engineer.

00:00:32.826 --> 00:00:35.076 A:middle
And my colleague Emily Van Haren

00:00:35.076 --> 00:00:36.116 A:middle
from authoring tools will be

00:00:36.116 --> 00:00:36.806 A:middle
joining me today.

00:00:37.036 --> 00:00:38.796 A:middle
And we're both really excited to

00:00:38.796 --> 00:00:39.756 A:middle
share with you some best

00:00:39.756 --> 00:00:40.866 A:middle
practices for working with

00:00:40.866 --> 00:00:41.286 A:middle
TextKit.

00:00:41.676 --> 00:00:42.746 A:middle
So let's get started.

00:00:43.416 --> 00:00:45.786 A:middle
First, we're going to review

00:00:45.786 --> 00:00:47.086 A:middle
some key concepts for working

00:00:47.086 --> 00:00:47.616 A:middle
with TextKit.

00:00:48.466 --> 00:00:49.916 A:middle
Then, we'll dive into some

00:00:49.916 --> 00:00:51.316 A:middle
examples to illustrate how to

00:00:51.316 --> 00:00:52.596 A:middle
apply the key concepts in your

00:00:52.596 --> 00:00:52.663 A:middle
app.

00:00:53.916 --> 00:00:55.316 A:middle
And finally, we'll wrap up with

00:00:55.316 --> 00:00:56.716 A:middle
some best practices in the areas

00:00:56.716 --> 00:00:58.706 A:middle
of correctness, performance, and

00:00:58.706 --> 00:00:59.116 A:middle
security.


00:01:00.496 --> 00:01:02.476 A:middle
So let's start with the key

00:01:03.136 --> 00:01:03.496 A:middle
concepts.

00:01:03.496 --> 00:01:04.346 A:middle
Now to make sure we're on the

00:01:04.385 --> 00:01:05.726 A:middle
same page, we're going to start

00:01:05.726 --> 00:01:06.496 A:middle
at the very beginning.

00:01:07.526 --> 00:01:08.616 A:middle
What is TextKit?

00:01:09.126 --> 00:01:12.016 A:middle
And your first instinct might be

00:01:12.296 --> 00:01:13.626 A:middle
to open a shiny new playground

00:01:13.626 --> 00:01:15.276 A:middle
in Xcode and type import

00:01:15.426 --> 00:01:17.716 A:middle
TextKit, except if you've ever

00:01:17.716 --> 00:01:19.116 A:middle
actually tried this, you found

00:01:19.116 --> 00:01:19.796 A:middle
that it doesn't work.

00:01:20.216 --> 00:01:23.236 A:middle
And that's because TextKit is a

00:01:23.236 --> 00:01:24.456 A:middle
little different than other

00:01:24.456 --> 00:01:25.406 A:middle
frameworks you might have used.

00:01:26.306 --> 00:01:27.116 A:middle
You don't have to import

00:01:27.116 --> 00:01:28.336 A:middle
anything special to use it.

00:01:29.376 --> 00:01:30.776 A:middle
The text controls in UIKit and

00:01:30.776 --> 00:01:32.866 A:middle
AppKit are built on top of

00:01:32.866 --> 00:01:33.246 A:middle
TextKit.

00:01:33.806 --> 00:01:34.946 A:middle
And so if you've ever used a

00:01:34.946 --> 00:01:37.026 A:middle
label, the text field, or a text

00:01:37.066 --> 00:01:38.426 A:middle
view, you've actually used

00:01:38.426 --> 00:01:38.846 A:middle
TextKit.

00:01:39.846 --> 00:01:40.796 A:middle
And TextKit pulls together

00:01:40.796 --> 00:01:42.386 A:middle
powerful underlying technologies

00:01:42.596 --> 00:01:44.146 A:middle
such as Core Text, Core Graphics

00:01:44.296 --> 00:01:46.036 A:middle
and Foundation to make it simple

00:01:46.036 --> 00:01:47.306 A:middle
and seamless for your apps to

00:01:47.306 --> 00:01:47.756 A:middle
show text.

00:01:49.176 --> 00:01:50.396 A:middle
And every time you use one of

00:01:50.396 --> 00:01:51.806 A:middle
these built-in controls, you're

00:01:51.806 --> 00:01:53.416 A:middle
using the power of TextKit to

00:01:53.416 --> 00:01:55.156 A:middle
show or edit text in a fully,

00:01:55.156 --> 00:01:56.826 A:middle
internationalized, localizable

00:01:56.826 --> 00:01:58.186 A:middle
manner without having to

00:01:58.186 --> 00:01:59.426 A:middle
directly use these underlying

00:01:59.426 --> 00:02:01.086 A:middle
technologies or understand the


00:01:59.426 --> 00:02:01.086 A:middle
technologies or understand the

00:02:01.086 --> 00:02:02.566 A:middle
intricacies of complex scripts.

00:02:02.626 --> 00:02:04.356 A:middle
And there are a lot of things

00:02:04.356 --> 00:02:05.706 A:middle
you get for free too like all of

00:02:05.706 --> 00:02:06.736 A:middle
these display features that you

00:02:06.736 --> 00:02:07.146 A:middle
see here.

00:02:07.796 --> 00:02:10.346 A:middle
And for editing, you'll also get

00:02:10.346 --> 00:02:11.636 A:middle
access to all the tech services

00:02:11.636 --> 00:02:12.646 A:middle
that are supported by the OS

00:02:12.766 --> 00:02:14.466 A:middle
like accessibility, spell

00:02:14.466 --> 00:02:15.186 A:middle
checking and more.

00:02:15.886 --> 00:02:16.946 A:middle
And you can take advantage of

00:02:16.946 --> 00:02:18.276 A:middle
all of these great features

00:02:18.406 --> 00:02:19.566 A:middle
without having to write a single

00:02:19.566 --> 00:02:21.086 A:middle
line of code and that's pretty

00:02:21.086 --> 00:02:21.486 A:middle
awesome.

00:02:22.486 --> 00:02:23.716 A:middle
And so with all of this

00:02:23.716 --> 00:02:24.406 A:middle
functionality at your

00:02:24.406 --> 00:02:25.986 A:middle
fingertips, how do you decide

00:02:25.986 --> 00:02:27.646 A:middle
which control to use?

00:02:28.196 --> 00:02:29.246 A:middle
So let's talk about that,

00:02:29.756 --> 00:02:30.796 A:middle
choosing the right control for

00:02:30.796 --> 00:02:31.636 A:middle
your situation.

00:02:31.946 --> 00:02:32.956 A:middle
And the options are going to be

00:02:32.956 --> 00:02:33.926 A:middle
a little bit different depending

00:02:33.926 --> 00:02:35.676 A:middle
on whether you're using UIKit or

00:02:35.676 --> 00:02:36.046 A:middle
AppKit.

00:02:36.436 --> 00:02:37.506 A:middle
So let's review them separately.

00:02:37.506 --> 00:02:38.166 A:middle
All right.

00:02:38.696 --> 00:02:40.466 A:middle
Let's start with UIKit.

00:02:41.006 --> 00:02:43.296 A:middle
And first you're going to

00:02:43.296 --> 00:02:44.456 A:middle
consider whether you need text

00:02:44.456 --> 00:02:44.846 A:middle
input.

00:02:45.346 --> 00:02:47.476 A:middle
And if you don't need text

00:02:47.476 --> 00:02:49.006 A:middle
input, then consider whether you

00:02:49.006 --> 00:02:50.406 A:middle
need selection or scrolling.

00:02:50.976 --> 00:02:53.376 A:middle
And if you don't need these,

00:02:53.676 --> 00:02:54.916 A:middle
then you should use UILabel.

00:02:55.666 --> 00:02:57.276 A:middle
UILabels are intended for small

00:02:57.276 --> 00:02:58.936 A:middle
amounts of text like a few words

00:02:58.936 --> 00:02:59.656 A:middle
or a few lines.


00:03:01.136 --> 00:03:02.096 A:middle
And so if you have more text

00:03:02.136 --> 00:03:03.696 A:middle
than that or if you need these

00:03:03.826 --> 00:03:04.546 A:middle
selection or scrolling

00:03:04.546 --> 00:03:05.966 A:middle
capabilities then you should use

00:03:05.966 --> 00:03:07.676 A:middle
a UITextView with editing

00:03:07.676 --> 00:03:08.116 A:middle
disabled.

00:03:08.116 --> 00:03:10.286 A:middle
Now going back to the top.

00:03:10.286 --> 00:03:12.456 A:middle
If you do need text input, then

00:03:12.456 --> 00:03:13.626 A:middle
consider whether you need secure

00:03:13.626 --> 00:03:14.186 A:middle
text entry.

00:03:14.186 --> 00:03:15.336 A:middle
And this would be like a

00:03:15.336 --> 00:03:16.936 A:middle
password field where the text is

00:03:16.936 --> 00:03:18.206 A:middle
obscured and copying is

00:03:18.206 --> 00:03:18.666 A:middle
disabled.

00:03:19.236 --> 00:03:21.806 A:middle
And so if you need that, then

00:03:21.806 --> 00:03:23.726 A:middle
use UITextField because this is

00:03:23.726 --> 00:03:25.076 A:middle
the only control that supports

00:03:25.246 --> 00:03:26.026 A:middle
secure text entry.

00:03:26.476 --> 00:03:29.346 A:middle
Otherwise, think about how much

00:03:29.456 --> 00:03:30.886 A:middle
text you expect to be entered.

00:03:32.076 --> 00:03:33.016 A:middle
And if you want something that's

00:03:33.016 --> 00:03:34.466 A:middle
like a form field input that

00:03:34.466 --> 00:03:36.076 A:middle
only needs a line, then use

00:03:36.076 --> 00:03:36.836 A:middle
UITextField.

00:03:37.126 --> 00:03:38.686 A:middle
And UITextField only supports

00:03:38.766 --> 00:03:41.716 A:middle
one line of text entry.

00:03:41.936 --> 00:03:42.996 A:middle
Otherwise, if you need more than

00:03:43.176 --> 00:03:44.556 A:middle
that, you can use UITextView.

00:03:45.106 --> 00:03:47.976 A:middle
And so now here's that same

00:03:47.976 --> 00:03:49.206 A:middle
decision process for AppKit.

00:03:49.206 --> 00:03:51.006 A:middle
And it's similar to the UIKit

00:03:51.006 --> 00:03:52.286 A:middle
process but there's a few small

00:03:52.286 --> 00:03:52.656 A:middle
differences.

00:03:53.406 --> 00:03:55.496 A:middle
So, again, you're going to start

00:03:55.496 --> 00:03:56.456 A:middle
by considering whether you need

00:03:56.456 --> 00:03:57.036 A:middle
text input.

00:03:57.596 --> 00:04:00.196 A:middle
And AppKit doesn't have a label


00:03:57.596 --> 00:04:00.196 A:middle
And AppKit doesn't have a label

00:04:00.196 --> 00:04:00.526 A:middle
control.

00:04:00.716 --> 00:04:02.106 A:middle
So if you need to display text,

00:04:03.116 --> 00:04:04.546 A:middle
use an NSTextField and you can

00:04:04.546 --> 00:04:05.546 A:middle
disable both editing and

00:04:05.546 --> 00:04:06.616 A:middle
selection to get that label

00:04:06.616 --> 00:04:07.036 A:middle
behavior.

00:04:07.036 --> 00:04:10.566 A:middle
Now going back to the top here.

00:04:10.566 --> 00:04:12.286 A:middle
If you do need text input, again

00:04:12.456 --> 00:04:13.526 A:middle
ask if you need secure text

00:04:13.526 --> 00:04:13.806 A:middle
entry.

00:04:13.806 --> 00:04:15.856 A:middle
And if so, you can use

00:04:15.986 --> 00:04:16.766 A:middle
NSSecureTextField.

00:04:17.176 --> 00:04:19.296 A:middle
Otherwise, we're going to ask

00:04:19.296 --> 00:04:20.596 A:middle
our favorite question, how much

00:04:20.596 --> 00:04:22.346 A:middle
text do you expect?

00:04:23.176 --> 00:04:25.116 A:middle
So NSTextView is optimized for

00:04:25.116 --> 00:04:26.286 A:middle
performance with large amounts

00:04:26.286 --> 00:04:26.556 A:middle
of text.

00:04:26.946 --> 00:04:28.416 A:middle
And so if you're expecting a lot

00:04:28.416 --> 00:04:30.506 A:middle
of text, you should use

00:04:31.126 --> 00:04:32.556 A:middle
NSTextView otherwise you can use

00:04:32.556 --> 00:04:33.216 A:middle
NSTextField.

00:04:33.946 --> 00:04:34.986 A:middle
Now, unlike its UIKit

00:04:34.986 --> 00:04:36.926 A:middle
counterpart, NSTextField does

00:04:36.976 --> 00:04:38.136 A:middle
support multiple lines of text,

00:04:39.056 --> 00:04:40.086 A:middle
but it's still optimized for

00:04:40.086 --> 00:04:41.556 A:middle
shorter strings and so you

00:04:41.556 --> 00:04:43.076 A:middle
should still use NSTextView if

00:04:43.076 --> 00:04:45.766 A:middle
you have a lot of text.

00:04:45.896 --> 00:04:46.636 A:middle
Now those of you who have been

00:04:46.636 --> 00:04:47.616 A:middle
around the block a few times

00:04:47.616 --> 00:04:49.336 A:middle
with TextKit might notice that

00:04:49.336 --> 00:04:50.266 A:middle
the flow charts are missing an

00:04:50.266 --> 00:04:51.616 A:middle
option and that's string

00:04:51.616 --> 00:04:51.896 A:middle
drawing.

00:04:53.096 --> 00:04:54.416 A:middle
And you use string drawing by

00:04:54.416 --> 00:04:56.016 A:middle
directly calling draw in point

00:04:56.296 --> 00:04:58.396 A:middle
or draw in rect methods under

00:04:58.466 --> 00:04:59.296 A:middle
NSString or your

00:04:59.296 --> 00:05:00.236 A:middle
NSAttributedString.


00:04:59.296 --> 00:05:00.236 A:middle
NSAttributedString.

00:05:01.146 --> 00:05:02.366 A:middle
And many of you may be using

00:05:02.366 --> 00:05:03.696 A:middle
this for the performance benefit

00:05:03.846 --> 00:05:05.236 A:middle
to avoid the overhead of view

00:05:05.236 --> 00:05:06.276 A:middle
objects at the kit level.

00:05:07.606 --> 00:05:08.446 A:middle
And so if you're going to go

00:05:08.446 --> 00:05:09.836 A:middle
this route, please keep the

00:05:09.836 --> 00:05:10.826 A:middle
following tips in mind.

00:05:11.696 --> 00:05:12.686 A:middle
You want to use it for small

00:05:12.686 --> 00:05:13.676 A:middle
amounts of static text.

00:05:14.166 --> 00:05:14.926 A:middle
And you want to limit how

00:05:14.926 --> 00:05:16.066 A:middle
frequently you call the draw

00:05:16.066 --> 00:05:16.396 A:middle
methods.

00:05:17.236 --> 00:05:18.186 A:middle
Now if you're calling the string

00:05:18.186 --> 00:05:20.296 A:middle
drawing methods a lot, you might

00:05:20.296 --> 00:05:21.626 A:middle
actually get better performance

00:05:21.896 --> 00:05:23.706 A:middle
out of a label or a text field

00:05:23.846 --> 00:05:25.006 A:middle
because these controls provide

00:05:25.006 --> 00:05:26.516 A:middle
better caching, especially if

00:05:26.516 --> 00:05:27.306 A:middle
you're using auto layout.

00:05:27.306 --> 00:05:29.216 A:middle
And if you're drawing an

00:05:29.216 --> 00:05:31.056 A:middle
attributed string with a lot of

00:05:31.056 --> 00:05:33.176 A:middle
custom attributes, this could

00:05:33.176 --> 00:05:34.366 A:middle
also be slowing down your string

00:05:34.366 --> 00:05:35.756 A:middle
drawing because the text system

00:05:35.756 --> 00:05:36.936 A:middle
needs to validate all of the

00:05:36.936 --> 00:05:38.966 A:middle
attributes before rendering and

00:05:38.966 --> 00:05:40.386 A:middle
so for best performance, you

00:05:40.386 --> 00:05:41.326 A:middle
should strip out extra

00:05:41.326 --> 00:05:42.906 A:middle
attributes before drawing and

00:05:42.906 --> 00:05:44.776 A:middle
only pass in the ones that are

00:05:44.776 --> 00:05:46.706 A:middle
needed to determine the visual

00:05:46.706 --> 00:05:48.236 A:middle
appearance like font or like

00:05:48.236 --> 00:05:48.506 A:middle
color.

00:05:49.076 --> 00:05:51.996 A:middle
And finally, remember that by

00:05:51.996 --> 00:05:53.146 A:middle
using string drawing, you'll

00:05:53.146 --> 00:05:54.546 A:middle
miss out on all of this free

00:05:54.546 --> 00:05:55.746 A:middle
functionality that's offered by

00:05:55.746 --> 00:05:57.286 A:middle
the text controls, so you should

00:05:57.286 --> 00:05:58.746 A:middle
use the text controls whenever

00:05:58.746 --> 00:05:59.166 A:middle
possible.

00:05:59.726 --> 00:06:02.706 A:middle
So now you know what you can do


00:05:59.726 --> 00:06:02.706 A:middle
So now you know what you can do

00:06:02.706 --> 00:06:03.966 A:middle
with TextKit just by using the

00:06:03.966 --> 00:06:04.796 A:middle
built-in controls.

00:06:05.596 --> 00:06:06.686 A:middle
But if you want to go beyond

00:06:06.766 --> 00:06:07.716 A:middle
what these controls provide,

00:06:08.206 --> 00:06:08.986 A:middle
you'll need to find the right

00:06:08.986 --> 00:06:10.336 A:middle
customization point within the

00:06:10.336 --> 00:06:11.276 A:middle
text stack.

00:06:12.376 --> 00:06:14.036 A:middle
And like much of Cocoa, TextKit

00:06:14.036 --> 00:06:15.496 A:middle
is based on the model view

00:06:15.496 --> 00:06:16.766 A:middle
controller design pattern.

00:06:17.316 --> 00:06:19.356 A:middle
And the text system can be

00:06:19.356 --> 00:06:20.946 A:middle
divided into three phases that

00:06:20.946 --> 00:06:22.256 A:middle
correspond it directly to NBC

00:06:22.386 --> 00:06:24.676 A:middle
and that's storage, display, and

00:06:24.866 --> 00:06:25.236 A:middle
layout.

00:06:25.996 --> 00:06:27.446 A:middle
And so now let's take a closer

00:06:27.446 --> 00:06:28.916 A:middle
look at the TextKit objects that

00:06:28.916 --> 00:06:29.946 A:middle
make up each of these phases.

00:06:30.346 --> 00:06:32.176 A:middle
And we'll start with the storage

00:06:32.466 --> 00:06:35.746 A:middle
which corresponds to the model.

00:06:35.746 --> 00:06:36.866 A:middle
Now NSTextStorage holds your

00:06:36.866 --> 00:06:38.026 A:middle
string data and your attributes.

00:06:38.746 --> 00:06:40.166 A:middle
It's a subclass of mutable

00:06:40.166 --> 00:06:41.806 A:middle
attributed string and so you can

00:06:41.806 --> 00:06:43.146 A:middle
work with it in the same way

00:06:43.146 --> 00:06:44.046 A:middle
that you already know how to

00:06:44.046 --> 00:06:45.046 A:middle
work with attributed strings.

00:06:46.036 --> 00:06:47.256 A:middle
And my colleague Emily will show

00:06:47.256 --> 00:06:48.666 A:middle
you some really powerful ways to

00:06:48.666 --> 00:06:49.896 A:middle
customize the text storage a

00:06:49.896 --> 00:06:51.246 A:middle
little bit later so stay tuned

00:06:51.246 --> 00:06:52.146 A:middle
for that.

00:06:53.706 --> 00:06:55.716 A:middle
Now NSTextContainer models the

00:06:55.716 --> 00:06:56.906 A:middle
geometry of the area where your

00:06:56.906 --> 00:06:57.866 A:middle
text will be laid out.

00:06:58.586 --> 00:07:00.006 A:middle
And by default, it's a rectangle


00:06:58.586 --> 00:07:00.006 A:middle
And by default, it's a rectangle

00:07:00.306 --> 00:07:01.596 A:middle
but you can customize the flow

00:07:01.596 --> 00:07:02.746 A:middle
or the shape of the text layout

00:07:02.876 --> 00:07:03.486 A:middle
as shown here.

00:07:04.096 --> 00:07:06.186 A:middle
And for more detailed

00:07:06.186 --> 00:07:07.216 A:middle
information on working with the

00:07:07.266 --> 00:07:08.806 A:middle
storage objects, check out these

00:07:08.806 --> 00:07:10.606 A:middle
great past WWDC sessions and

00:07:10.606 --> 00:07:11.246 A:middle
documentation.

00:07:11.246 --> 00:07:12.656 A:middle
And they'll be available from

00:07:12.656 --> 00:07:13.896 A:middle
the more information link at the

00:07:13.896 --> 00:07:16.596 A:middle
end of the session.

00:07:17.396 --> 00:07:18.676 A:middle
And next up is the display phase

00:07:18.966 --> 00:07:21.156 A:middle
and that corresponds to the

00:07:21.156 --> 00:07:21.276 A:middle
view.

00:07:21.276 --> 00:07:22.626 A:middle
And we've already talked about

00:07:22.626 --> 00:07:23.746 A:middle
the display phase quite a bit

00:07:23.746 --> 00:07:24.736 A:middle
when we talked about choosing

00:07:24.736 --> 00:07:25.396 A:middle
the right control.

00:07:25.766 --> 00:07:26.436 A:middle
And so for additional

00:07:26.436 --> 00:07:27.876 A:middle
information, you can again check

00:07:27.876 --> 00:07:28.816 A:middle
out these documentation

00:07:28.816 --> 00:07:29.186 A:middle
resources.

00:07:29.186 --> 00:07:30.796 A:middle
And they'll also be accessible

00:07:30.796 --> 00:07:31.986 A:middle
from that more information link

00:07:31.986 --> 00:07:35.166 A:middle
at the end of the session.

00:07:35.426 --> 00:07:36.586 A:middle
And finally, we have the layout

00:07:36.586 --> 00:07:37.956 A:middle
phase which corresponds to the

00:07:37.956 --> 00:07:38.446 A:middle
controller.

00:07:39.026 --> 00:07:41.836 A:middle
And NSLayoutManager is the only

00:07:41.836 --> 00:07:42.656 A:middle
component in this phase.

00:07:42.656 --> 00:07:44.396 A:middle
And let me tell you it is a

00:07:44.546 --> 00:07:44.806 A:middle
beast.

00:07:46.036 --> 00:07:47.386 A:middle
And I mean that in a good way

00:07:47.726 --> 00:07:49.256 A:middle
because it's so awesome at what

00:07:49.256 --> 00:07:49.656 A:middle
it does.

00:07:50.146 --> 00:07:51.316 A:middle
So it's the brains of the whole

00:07:51.316 --> 00:07:52.056 A:middle
operation.

00:07:52.056 --> 00:07:53.296 A:middle
It coordinates changes between

00:07:53.296 --> 00:07:54.616 A:middle
all of the phases, and it

00:07:54.616 --> 00:07:55.776 A:middle
controls the layout process

00:07:55.776 --> 00:07:55.996 A:middle
itself.

00:07:56.066 --> 00:07:59.296 A:middle
So here's a quick overview of

00:07:59.296 --> 00:08:00.546 A:middle
how that layout process works.


00:07:59.296 --> 00:08:00.546 A:middle
how that layout process works.

00:08:01.426 --> 00:08:03.166 A:middle
So text layout happens after the

00:08:03.216 --> 00:08:04.596 A:middle
system fixes attributes in the

00:08:04.596 --> 00:08:06.006 A:middle
text storage to remove

00:08:06.006 --> 00:08:08.206 A:middle
inconsistencies like making sure

00:08:08.206 --> 00:08:09.626 A:middle
that all the characters in the

00:08:09.626 --> 00:08:11.206 A:middle
string are covered by fonts that

00:08:11.246 --> 00:08:12.156 A:middle
support displaying those

00:08:12.186 --> 00:08:12.626 A:middle
characters.

00:08:13.086 --> 00:08:14.906 A:middle
And so in this example, the

00:08:14.906 --> 00:08:15.996 A:middle
Times New Roman font is

00:08:16.056 --> 00:08:17.566 A:middle
specified for the entire string,

00:08:18.096 --> 00:08:19.486 A:middle
but this font doesn't support

00:08:19.936 --> 00:08:21.486 A:middle
displaying Japanese kanji or

00:08:21.486 --> 00:08:21.906 A:middle
emoji.

00:08:23.136 --> 00:08:24.536 A:middle
And so after attribute fixing,

00:08:24.536 --> 00:08:25.446 A:middle
your text storage will look

00:08:25.476 --> 00:08:26.876 A:middle
something like this with an

00:08:26.876 --> 00:08:28.146 A:middle
appropriate Japanese font

00:08:28.376 --> 00:08:29.346 A:middle
assigned to the Japanese

00:08:29.346 --> 00:08:31.186 A:middle
characters and the emoji font

00:08:31.186 --> 00:08:32.476 A:middle
assigned to the emoji character.

00:08:32.476 --> 00:08:33.145 A:middle
All right.

00:08:33.856 --> 00:08:36.006 A:middle
So once the attributes are

00:08:36.006 --> 00:08:37.405 A:middle
fixed, the layout process can

00:08:37.405 --> 00:08:37.666 A:middle
begin.

00:08:37.666 --> 00:08:39.606 A:middle
And we can think of layout in

00:08:39.666 --> 00:08:41.806 A:middle
two steps: glyph generation

00:08:41.956 --> 00:08:42.866 A:middle
followed by glyph layout.

00:08:44.256 --> 00:08:45.366 A:middle
And once they're laid out,

00:08:45.646 --> 00:08:46.456 A:middle
they're ready for display.

00:08:47.086 --> 00:08:48.606 A:middle
But wait a minute.

00:08:48.946 --> 00:08:49.356 A:middle
What's a glyph?

00:08:50.206 --> 00:08:51.226 A:middle
Let's back up and review that.

00:08:52.146 --> 00:08:53.296 A:middle
A glyph is a visual

00:08:53.296 --> 00:08:54.536 A:middle
representation of one or more

00:08:54.536 --> 00:08:55.046 A:middle
characters.

00:08:55.536 --> 00:08:56.916 A:middle
And as you can see here, the

00:08:56.916 --> 00:08:58.056 A:middle
mapping between characters and

00:08:58.056 --> 00:09:00.066 A:middle
glyphs is not always one-to-one.


00:08:58.056 --> 00:09:00.066 A:middle
glyphs is not always one-to-one.

00:09:01.476 --> 00:09:03.286 A:middle
So here this string ffi has

00:09:03.386 --> 00:09:04.996 A:middle
three characters, but it could

00:09:04.996 --> 00:09:06.476 A:middle
be represented by a single glyph

00:09:06.556 --> 00:09:07.096 A:middle
for the ligature.

00:09:07.096 --> 00:09:09.176 A:middle
And you can go in the other

00:09:09.176 --> 00:09:09.726 A:middle
direction too.

00:09:10.456 --> 00:09:11.626 A:middle
Here we have n [inaudible] which

00:09:11.846 --> 00:09:13.436 A:middle
is a single character that can

00:09:13.436 --> 00:09:14.436 A:middle
be represented by multiple

00:09:14.436 --> 00:09:16.786 A:middle
glyphs: one for the n and one

00:09:16.786 --> 00:09:17.226 A:middle
for the tilde.

00:09:18.836 --> 00:09:20.416 A:middle
And so going back to our diagram

00:09:20.416 --> 00:09:22.456 A:middle
here, we have NSLayoutManager

00:09:22.456 --> 00:09:24.206 A:middle
performing glyph generation and

00:09:24.206 --> 00:09:24.726 A:middle
glyph layout.

00:09:25.486 --> 00:09:27.036 A:middle
And glyph generation is where

00:09:27.036 --> 00:09:28.096 A:middle
the layout manager takes the

00:09:28.096 --> 00:09:29.446 A:middle
characters and figures out what

00:09:29.476 --> 00:09:30.396 A:middle
glyphs need to be drawn.

00:09:31.276 --> 00:09:32.716 A:middle
And glyph layout is where the

00:09:32.716 --> 00:09:34.056 A:middle
layout manager positions those

00:09:34.056 --> 00:09:35.646 A:middle
glyphs for display in your view.

00:09:36.116 --> 00:09:38.416 A:middle
And there's a lot more to learn

00:09:38.416 --> 00:09:39.876 A:middle
about the layout manager from

00:09:39.876 --> 00:09:41.536 A:middle
these past WWDC sessions and

00:09:41.536 --> 00:09:42.216 A:middle
documentation.

00:09:42.596 --> 00:09:43.916 A:middle
And you can access them from,

00:09:44.356 --> 00:09:45.596 A:middle
you guessed it, the more

00:09:45.596 --> 00:09:46.936 A:middle
information link at the end of

00:09:47.596 --> 00:09:49.416 A:middle
the session.

00:09:49.576 --> 00:09:51.976 A:middle
Okay. So now you understand the

00:09:51.976 --> 00:09:53.096 A:middle
phases of the text system.

00:09:53.466 --> 00:09:54.296 A:middle
And you know the TextKit

00:09:54.296 --> 00:09:55.366 A:middle
components that make up each

00:09:55.366 --> 00:09:55.666 A:middle
phase.

00:09:57.276 --> 00:09:58.796 A:middle
So now let's explore choosing

00:09:58.796 --> 00:10:00.336 A:middle
the right configuration of these


00:09:58.796 --> 00:10:00.336 A:middle
the right configuration of these

00:10:00.336 --> 00:10:01.826 A:middle
components to create different

00:10:02.686 --> 00:10:02.876 A:middle
effects.

00:10:03.376 --> 00:10:04.806 A:middle
So this is your standard

00:10:04.806 --> 00:10:05.466 A:middle
configuration.

00:10:05.466 --> 00:10:07.666 A:middle
And when you drag and drop a

00:10:07.746 --> 00:10:08.816 A:middle
text view from Interface

00:10:08.816 --> 00:10:10.116 A:middle
Builder, you'll automatically

00:10:10.116 --> 00:10:11.896 A:middle
get one of each component as

00:10:11.896 --> 00:10:12.306 A:middle
shown here.

00:10:13.216 --> 00:10:14.416 A:middle
And most the time this is all

00:10:14.416 --> 00:10:17.286 A:middle
you're going to need.

00:10:17.566 --> 00:10:19.046 A:middle
If you want a multiple page or a

00:10:19.046 --> 00:10:20.776 A:middle
multiple column layout, you can

00:10:20.776 --> 00:10:22.426 A:middle
use pairs of text containers and

00:10:22.426 --> 00:10:24.076 A:middle
text views, one pair for each

00:10:24.076 --> 00:10:24.756 A:middle
page or column.

00:10:25.656 --> 00:10:26.856 A:middle
And you can hook all of these up

00:10:26.916 --> 00:10:28.166 A:middle
to the same layout manager in

00:10:28.166 --> 00:10:29.526 A:middle
the same text storage so that

00:10:29.526 --> 00:10:30.866 A:middle
they share the layout

00:10:30.866 --> 00:10:31.856 A:middle
information in the backing

00:10:31.936 --> 00:10:32.166 A:middle
store.

00:10:32.746 --> 00:10:35.016 A:middle
And if you want different

00:10:35.016 --> 00:10:36.156 A:middle
layouts in each of you, you can

00:10:36.156 --> 00:10:37.906 A:middle
do that too, just use multiple

00:10:37.906 --> 00:10:38.576 A:middle
layout managers.

00:10:39.006 --> 00:10:40.416 A:middle
And, again, since the text

00:10:40.416 --> 00:10:41.726 A:middle
shares the same backing store,

00:10:42.246 --> 00:10:43.626 A:middle
updating that text will update

00:10:43.626 --> 00:10:44.186 A:middle
all of the views.

00:10:44.886 --> 00:10:47.796 A:middle
Now we didn't go into too much

00:10:47.796 --> 00:10:48.636 A:middle
detail about these

00:10:48.636 --> 00:10:49.986 A:middle
configurations because there's a

00:10:49.986 --> 00:10:50.926 A:middle
great past session that's

00:10:50.926 --> 00:10:52.496 A:middle
already done that so check out

00:10:52.546 --> 00:10:54.686 A:middle
WWDC 2010 session Advanced Cocoa

00:10:54.686 --> 00:10:55.996 A:middle
Text Tips and Tricks.

00:10:55.996 --> 00:10:57.836 A:middle
And this will be accessible from

00:10:57.836 --> 00:10:59.006 A:middle
that more information link at

00:10:59.006 --> 00:11:02.476 A:middle
the end of the session.


00:10:59.006 --> 00:11:02.476 A:middle
the end of the session.

00:11:02.626 --> 00:11:02.946 A:middle
All right.

00:11:04.036 --> 00:11:04.946 A:middle
So we've looked at the built-in

00:11:04.946 --> 00:11:05.576 A:middle
text controls.

00:11:06.296 --> 00:11:07.236 A:middle
We've looked at the components

00:11:07.236 --> 00:11:07.766 A:middle
in TextKit.

00:11:07.976 --> 00:11:09.016 A:middle
And we've look at how to

00:11:09.016 --> 00:11:10.336 A:middle
configure those components to

00:11:10.336 --> 00:11:11.066 A:middle
achieve different effects.

00:11:11.066 --> 00:11:12.956 A:middle
And there's a lot that you can

00:11:12.956 --> 00:11:14.406 A:middle
do with that knowledge already,

00:11:14.636 --> 00:11:15.586 A:middle
but if you need even more,

00:11:16.196 --> 00:11:17.056 A:middle
you'll need to extend and

00:11:17.056 --> 00:11:18.216 A:middle
customize parts of TextKit

00:11:18.216 --> 00:11:18.596 A:middle
yourself.

00:11:19.766 --> 00:11:21.076 A:middle
And so now we'll talk a little

00:11:21.076 --> 00:11:22.166 A:middle
bit about choosing the right

00:11:22.166 --> 00:11:23.766 A:middle
approach for doing that.

00:11:24.826 --> 00:11:26.516 A:middle
And choosing the right approach

00:11:26.556 --> 00:11:27.686 A:middle
is like building up your text

00:11:27.686 --> 00:11:28.036 A:middle
toolbox.

00:11:28.616 --> 00:11:29.806 A:middle
It's like going to the store

00:11:29.806 --> 00:11:30.606 A:middle
because you need a hammer.

00:11:30.606 --> 00:11:32.056 A:middle
And then when you get there, you

00:11:32.056 --> 00:11:33.246 A:middle
encounter this giant wall of

00:11:33.246 --> 00:11:34.216 A:middle
hammers to choose from.

00:11:34.966 --> 00:11:36.086 A:middle
And you want to pick your hammer

00:11:36.216 --> 00:11:38.206 A:middle
that can do the job and ideally

00:11:38.286 --> 00:11:39.526 A:middle
the least expensive one that

00:11:39.526 --> 00:11:40.346 A:middle
will do what you need.

00:11:40.896 --> 00:11:43.416 A:middle
And so these are the hammers

00:11:43.566 --> 00:11:44.456 A:middle
that are available to us.

00:11:45.396 --> 00:11:46.836 A:middle
Delegation is like your standard

00:11:46.836 --> 00:11:48.046 A:middle
hammer with the claw on the end,

00:11:48.176 --> 00:11:48.866 A:middle
and it's used to perform

00:11:48.866 --> 00:11:49.626 A:middle
multiple tasks.

00:11:50.316 --> 00:11:51.466 A:middle
So the delegates have a lot of

00:11:51.466 --> 00:11:52.566 A:middle
different customization hooks

00:11:52.706 --> 00:11:53.766 A:middle
and most of the time they'll get

00:11:53.766 --> 00:11:56.206 A:middle
the job done for you.

00:11:56.426 --> 00:11:57.686 A:middle
Notifications is like a

00:11:57.686 --> 00:11:58.446 A:middle
ball-peen hammer.

00:11:58.596 --> 00:11:59.666 A:middle
And this has a ball on the end

00:11:59.666 --> 00:12:01.786 A:middle
instead of a claw so it's more


00:11:59.666 --> 00:12:01.786 A:middle
instead of a claw so it's more

00:12:01.786 --> 00:12:03.196 A:middle
specialized and it's better

00:12:03.296 --> 00:12:04.866 A:middle
suited for certain tasks, but

00:12:04.866 --> 00:12:06.466 A:middle
it's not as versatile as the

00:12:06.466 --> 00:12:07.956 A:middle
standard hammer of delegation.

00:12:08.506 --> 00:12:11.546 A:middle
And finally, subclassing is your

00:12:11.546 --> 00:12:12.106 A:middle
sledgehammer.

00:12:13.496 --> 00:12:14.596 A:middle
The sledgehammer is very

00:12:14.596 --> 00:12:16.096 A:middle
powerful, and you can use it for

00:12:16.096 --> 00:12:17.596 A:middle
just about anything that you

00:12:17.596 --> 00:12:19.136 A:middle
would need a hammer for but it's

00:12:19.136 --> 00:12:20.466 A:middle
probably overkill for a lot of

00:12:20.466 --> 00:12:20.756 A:middle
things.

00:12:21.386 --> 00:12:23.396 A:middle
And with that, I'd like to

00:12:23.396 --> 00:12:24.606 A:middle
invite Emily up to show us how

00:12:24.606 --> 00:12:25.596 A:middle
to use these different kinds of

00:12:25.596 --> 00:12:25.936 A:middle
hammers.

00:12:26.326 --> 00:12:26.656 A:middle
Emily.

00:12:27.516 --> 00:12:32.166 A:middle
[ Applause ]

00:12:32.666 --> 00:12:33.216 A:middle
&gt;&gt; Thank you, Donna.

00:12:34.396 --> 00:12:36.106 A:middle
So, as developers, we have a

00:12:36.106 --> 00:12:37.506 A:middle
collection of controls to choose

00:12:37.566 --> 00:12:39.676 A:middle
from, various configurations,

00:12:40.106 --> 00:12:41.036 A:middle
and a wide range of

00:12:41.036 --> 00:12:42.786 A:middle
customization options to achieve

00:12:42.786 --> 00:12:43.266 A:middle
what we need.

00:12:44.156 --> 00:12:45.406 A:middle
So our tool chest is stocked

00:12:45.496 --> 00:12:47.656 A:middle
full, but how do we know what

00:12:47.656 --> 00:12:48.346 A:middle
tools to choose?

00:12:49.066 --> 00:12:51.696 A:middle
So we're going to take a look at

00:12:51.696 --> 00:12:52.886 A:middle
some examples of apps that

00:12:52.886 --> 00:12:54.326 A:middle
harness the power of TextKit.

00:12:55.326 --> 00:12:56.326 A:middle
And we don't have to look very

00:12:56.326 --> 00:12:58.436 A:middle
far because almost every app

00:12:58.496 --> 00:13:00.536 A:middle
that we use displays or edits


00:12:58.496 --> 00:13:00.536 A:middle
that we use displays or edits

00:13:01.436 --> 00:13:01.586 A:middle
text.

00:13:03.336 --> 00:13:04.666 A:middle
We're going to start by looking

00:13:04.666 --> 00:13:05.776 A:middle
at two apps that we're all

00:13:05.826 --> 00:13:07.826 A:middle
familiar with and then go

00:13:07.826 --> 00:13:08.846 A:middle
through the steps of building

00:13:08.846 --> 00:13:09.136 A:middle
our own.

00:13:09.706 --> 00:13:12.086 A:middle
So the first app we're going to

00:13:12.086 --> 00:13:13.816 A:middle
look at is Apple News on iOS,

00:13:14.576 --> 00:13:15.906 A:middle
which is a beautiful app that

00:13:15.906 --> 00:13:18.926 A:middle
displays text in a personalized

00:13:18.926 --> 00:13:19.936 A:middle
and curated articles.

00:13:20.646 --> 00:13:23.586 A:middle
So here's an example of an

00:13:23.586 --> 00:13:25.326 A:middle
article that is featured in the

00:13:25.366 --> 00:13:26.106 A:middle
spotlight tab.

00:13:27.186 --> 00:13:29.616 A:middle
Now the top of the app shows

00:13:29.616 --> 00:13:31.016 A:middle
some details about this article.

00:13:32.046 --> 00:13:33.846 A:middle
Now how could we use TextKit to

00:13:33.846 --> 00:13:34.976 A:middle
re-create this look and feel?

00:13:38.176 --> 00:13:39.356 A:middle
So let's consider the flow chart

00:13:39.356 --> 00:13:41.156 A:middle
that Donna showed us earlier to

00:13:41.156 --> 00:13:42.386 A:middle
pick the control that's best

00:13:42.386 --> 00:13:43.416 A:middle
suited for this example.

00:13:43.986 --> 00:13:47.186 A:middle
So we have a handful of text

00:13:47.186 --> 00:13:49.506 A:middle
controls to choose from, but

00:13:49.596 --> 00:13:50.946 A:middle
since we want to display small

00:13:50.946 --> 00:13:52.776 A:middle
amounts of text, each on a

00:13:52.876 --> 00:13:54.946 A:middle
single line, we'll use a label.

00:13:54.946 --> 00:13:58.806 A:middle
Now we can see that there is a

00:13:58.806 --> 00:14:00.446 A:middle
ton of customization options in


00:13:58.806 --> 00:14:00.446 A:middle
ton of customization options in

00:14:00.446 --> 00:14:01.256 A:middle
the inspector panel.

00:14:01.846 --> 00:14:03.756 A:middle
So we're going to go ahead and

00:14:03.756 --> 00:14:05.076 A:middle
change the text to spotlight.

00:14:05.716 --> 00:14:07.776 A:middle
We're going to change the font

00:14:08.226 --> 00:14:09.336 A:middle
to use the body style.

00:14:09.926 --> 00:14:12.616 A:middle
And we're going to enable

00:14:12.616 --> 00:14:14.546 A:middle
dynamic type, which allows those

00:14:14.546 --> 00:14:15.866 A:middle
with accessibility settings

00:14:15.866 --> 00:14:17.956 A:middle
enabled to see text in a font

00:14:18.026 --> 00:14:19.236 A:middle
size and style that is

00:14:19.236 --> 00:14:20.306 A:middle
appropriate for their needs.

00:14:21.026 --> 00:14:23.266 A:middle
Now it's great that we can

00:14:23.266 --> 00:14:24.216 A:middle
customize this label in

00:14:24.216 --> 00:14:25.966 A:middle
Interface Builder, but we can

00:14:25.966 --> 00:14:27.196 A:middle
also see all these properties in

00:14:27.276 --> 00:14:27.596 A:middle
Swift.

00:14:28.826 --> 00:14:30.616 A:middle
So we can set the text and the

00:14:30.616 --> 00:14:31.626 A:middle
formatting properties

00:14:31.846 --> 00:14:33.036 A:middle
dynamically at runtime.

00:14:33.036 --> 00:14:36.266 A:middle
Now back in Interface Builder,

00:14:36.866 --> 00:14:38.276 A:middle
we'll go ahead and add two more

00:14:38.276 --> 00:14:38.646 A:middle
labels.

00:14:40.206 --> 00:14:41.536 A:middle
Now everything fits pretty well,

00:14:42.146 --> 00:14:44.146 A:middle
but we have one more thing we

00:14:44.146 --> 00:14:44.786 A:middle
need to do here.

00:14:46.286 --> 00:14:47.586 A:middle
So looking back at Apple News,

00:14:47.716 --> 00:14:48.876 A:middle
we can see that the text on the

00:14:48.876 --> 00:14:50.246 A:middle
right is actually displayed with

00:14:50.246 --> 00:14:51.416 A:middle
two different colors.

00:14:51.516 --> 00:14:53.226 A:middle
Part of it's black and part of

00:14:53.226 --> 00:14:53.676 A:middle
it's white.

00:14:55.006 --> 00:14:56.016 A:middle
Now we could achieve this with

00:14:56.016 --> 00:14:57.876 A:middle
two separate labels, but if we

00:14:57.876 --> 00:15:00.066 A:middle
wanted to use just one label, we


00:14:57.876 --> 00:15:00.066 A:middle
wanted to use just one label, we

00:15:00.066 --> 00:15:01.486 A:middle
wouldn't be able to do this in

00:15:01.486 --> 00:15:02.356 A:middle
Interface Builder.

00:15:02.836 --> 00:15:06.156 A:middle
So how could we do this?

00:15:06.546 --> 00:15:07.646 A:middle
Well, we can take advantage of

00:15:07.646 --> 00:15:09.216 A:middle
the power and flexibility of

00:15:09.216 --> 00:15:10.056 A:middle
attributed strings.

00:15:11.856 --> 00:15:13.556 A:middle
Now an attributed string is a

00:15:13.556 --> 00:15:15.026 A:middle
run of characters that can have

00:15:15.026 --> 00:15:16.796 A:middle
attributes applied to ranges of

00:15:16.796 --> 00:15:17.236 A:middle
characters.

00:15:18.076 --> 00:15:19.246 A:middle
Now some attributes you get for

00:15:19.246 --> 00:15:21.506 A:middle
free like the default font and

00:15:21.506 --> 00:15:23.766 A:middle
text color, but we can override

00:15:23.766 --> 00:15:24.796 A:middle
these attributes with our own

00:15:24.796 --> 00:15:25.156 A:middle
values.

00:15:25.956 --> 00:15:27.216 A:middle
In this case, we're going to set

00:15:27.216 --> 00:15:28.426 A:middle
part of our string's text color

00:15:28.426 --> 00:15:28.756 A:middle
to white.

00:15:28.756 --> 00:15:32.796 A:middle
Now to see attributed string in

00:15:32.926 --> 00:15:34.386 A:middle
action, we'll use the add

00:15:34.556 --> 00:15:35.646 A:middle
attribute method on

00:15:35.706 --> 00:15:37.606 A:middle
NSMutableAttributedString to set

00:15:37.606 --> 00:15:39.376 A:middle
the text color to white just for

00:15:39.376 --> 00:15:40.266 A:middle
the range that we want.

00:15:41.506 --> 00:15:42.816 A:middle
And this time we'll set the

00:15:42.816 --> 00:15:44.476 A:middle
attributed text property on our

00:15:44.476 --> 00:15:44.796 A:middle
label.

00:15:45.256 --> 00:15:49.586 A:middle
At runtime, this looks pretty

00:15:50.066 --> 00:15:50.246 A:middle
spiffy.

00:15:51.336 --> 00:15:53.516 A:middle
Now UILabels were a great choice

00:15:53.516 --> 00:15:55.846 A:middle
for this sort of text.

00:15:55.846 --> 00:15:56.876 A:middle
Now if we look at the bottom of

00:15:56.876 --> 00:15:57.846 A:middle
the screen, we'll see a

00:15:57.966 --> 00:15:58.366 A:middle
headline.

00:15:58.546 --> 00:15:59.666 A:middle
Now this is also text, but it's

00:15:59.666 --> 00:16:01.516 A:middle
a little bit bigger and it spans


00:15:59.666 --> 00:16:01.516 A:middle
a little bit bigger and it spans

00:16:01.516 --> 00:16:02.216 A:middle
multiple lines.

00:16:02.826 --> 00:16:05.956 A:middle
Another thing that makes this

00:16:05.956 --> 00:16:06.976 A:middle
text different is that it's

00:16:06.976 --> 00:16:07.616 A:middle
selectable.

00:16:08.206 --> 00:16:10.676 A:middle
So which control should we use

00:16:10.676 --> 00:16:11.166 A:middle
this time?

00:16:12.376 --> 00:16:14.076 A:middle
Now both text field and text

00:16:14.076 --> 00:16:16.246 A:middle
view support selection but text

00:16:16.246 --> 00:16:18.206 A:middle
field is meant for usually just

00:16:18.206 --> 00:16:18.706 A:middle
one line.

00:16:19.306 --> 00:16:21.596 A:middle
So in this case, since our

00:16:21.596 --> 00:16:22.716 A:middle
headline can span multiple

00:16:22.716 --> 00:16:25.206 A:middle
lines, we're going to use a text

00:16:26.386 --> 00:16:26.496 A:middle
view.

00:16:26.716 --> 00:16:28.126 A:middle
Now when we put a text view onto

00:16:28.126 --> 00:16:29.596 A:middle
our storyboard, we can see that

00:16:29.596 --> 00:16:31.046 A:middle
we get a lot of lorem ipsum text

00:16:31.236 --> 00:16:31.706 A:middle
by default.

00:16:32.606 --> 00:16:33.456 A:middle
So we're going to go ahead and

00:16:33.456 --> 00:16:35.286 A:middle
change the text in the inspector

00:16:35.366 --> 00:16:35.626 A:middle
panel.

00:16:37.236 --> 00:16:38.096 A:middle
We're also going to change the

00:16:38.166 --> 00:16:39.396 A:middle
font to look a little bit more

00:16:39.396 --> 00:16:40.166 A:middle
like Apple News.

00:16:40.806 --> 00:16:43.276 A:middle
And we want to disable the

00:16:43.276 --> 00:16:44.316 A:middle
editing feature because the

00:16:44.316 --> 00:16:45.646 A:middle
headline isn't really editable.

00:16:46.246 --> 00:16:49.386 A:middle
Now UITextView scroll by default

00:16:49.426 --> 00:16:51.336 A:middle
because they are a subclass of

00:16:51.336 --> 00:16:52.136 A:middle
UIScrollView.

00:16:53.156 --> 00:16:54.746 A:middle
But if we want our text view to

00:16:54.746 --> 00:16:57.046 A:middle
play well with auto layout, we

00:16:57.046 --> 00:16:58.126 A:middle
want to disable scrolling.

00:16:59.066 --> 00:17:00.456 A:middle
So this will allow the bounds of


00:16:59.066 --> 00:17:00.456 A:middle
So this will allow the bounds of

00:17:00.456 --> 00:17:02.466 A:middle
our text view to resize to fit

00:17:03.256 --> 00:17:05.296 A:middle
the text.

00:17:05.455 --> 00:17:07.465 A:middle
Last but not least, this white

00:17:07.496 --> 00:17:09.056 A:middle
background really needs to go,

00:17:09.906 --> 00:17:10.826 A:middle
so we're going to set it to

00:17:10.826 --> 00:17:11.506 A:middle
transparent.

00:17:12.675 --> 00:17:13.886 A:middle
Now Interface Builder made it

00:17:13.886 --> 00:17:15.205 A:middle
really easy to customize this

00:17:15.246 --> 00:17:16.695 A:middle
text view but just like our

00:17:16.695 --> 00:17:18.596 A:middle
labels before, we can set all

00:17:18.596 --> 00:17:19.076 A:middle
this in code.

00:17:20.026 --> 00:17:21.586 A:middle
So here in Swift, we can set the

00:17:21.586 --> 00:17:23.036 A:middle
text and the formatting

00:17:23.036 --> 00:17:24.606 A:middle
properties dynamically at

00:17:24.606 --> 00:17:24.906 A:middle
runtime.

00:17:26.386 --> 00:17:27.506 A:middle
So we looked at Apple News to

00:17:27.506 --> 00:17:28.546 A:middle
pick the right control, but now

00:17:29.396 --> 00:17:30.196 A:middle
we're going to look at a

00:17:30.196 --> 00:17:32.096 A:middle
different app that we're all

00:17:32.096 --> 00:17:33.216 A:middle
familiar with to choose the

00:17:33.216 --> 00:17:36.036 A:middle
right configuration and that's

00:17:36.336 --> 00:17:36.786 A:middle
TextEdit.

00:17:37.516 --> 00:17:39.476 A:middle
Now TextEdit is an app on macOS

00:17:40.286 --> 00:17:42.136 A:middle
that handles display and editing

00:17:42.196 --> 00:17:43.406 A:middle
of rich text content.

00:17:44.946 --> 00:17:46.156 A:middle
Now what most people don't know

00:17:46.346 --> 00:17:48.396 A:middle
is that TextEdit is actually a

00:17:48.396 --> 00:17:49.656 A:middle
really thin wrapper around

00:17:49.876 --> 00:17:50.526 A:middle
NSTextView.

00:17:51.826 --> 00:17:52.906 A:middle
So I want to take a moment to

00:17:52.906 --> 00:17:54.646 A:middle
marvel at just how much we get

00:17:54.646 --> 00:17:56.436 A:middle
for free with TextKit.

00:17:57.006 --> 00:17:59.156 A:middle
So this is the inspector bar,

00:17:59.526 --> 00:18:00.956 A:middle
and we get this for free just by


00:17:59.526 --> 00:18:00.956 A:middle
and we get this for free just by

00:18:00.986 --> 00:18:02.456 A:middle
checking a checkbox in Interface

00:18:02.456 --> 00:18:02.796 A:middle
Builder.

00:18:03.396 --> 00:18:04.716 A:middle
And right below it is a ruler

00:18:04.716 --> 00:18:06.456 A:middle
view which we also get for free

00:18:06.696 --> 00:18:09.006 A:middle
just by enabling it.

00:18:09.006 --> 00:18:10.116 A:middle
And everything below that is

00:18:10.206 --> 00:18:12.996 A:middle
just a text view.

00:18:13.206 --> 00:18:15.296 A:middle
Actually, it's a text view, text

00:18:15.296 --> 00:18:17.346 A:middle
container, layout manager, and

00:18:17.346 --> 00:18:18.066 A:middle
text storage.

00:18:18.866 --> 00:18:19.756 A:middle
Now this is the standard

00:18:19.756 --> 00:18:21.216 A:middle
configuration for both

00:18:21.216 --> 00:18:24.966 A:middle
NSTextView and UITextView, but

00:18:24.966 --> 00:18:26.746 A:middle
the similarities mostly stop

00:18:26.826 --> 00:18:27.056 A:middle
there.

00:18:27.646 --> 00:18:30.556 A:middle
So, for example, tables are only

00:18:30.556 --> 00:18:31.896 A:middle
supported in NSTextView.

00:18:32.696 --> 00:18:34.386 A:middle
And marveling again at the power

00:18:34.636 --> 00:18:36.336 A:middle
that we get for free, TextKit

00:18:36.336 --> 00:18:37.576 A:middle
provides a table editor that

00:18:37.576 --> 00:18:38.746 A:middle
does all the heavy lifting for

00:18:39.556 --> 00:18:39.646 A:middle
us.

00:18:42.476 --> 00:18:44.026 A:middle
Now when we use TextEdit, we're

00:18:44.026 --> 00:18:45.336 A:middle
often editing large amounts of

00:18:45.336 --> 00:18:45.596 A:middle
text.

00:18:46.686 --> 00:18:48.026 A:middle
Sometimes we paste in a lot of

00:18:48.026 --> 00:18:49.446 A:middle
lorem ipsum to see that we also

00:18:49.446 --> 00:18:50.666 A:middle
get a spell-checker for free.

00:18:51.396 --> 00:18:52.776 A:middle
But really what we want to see

00:18:52.936 --> 00:18:54.126 A:middle
is that when we use the format

00:18:54.126 --> 00:18:55.976 A:middle
menu to choose wrap to page, we

00:18:56.466 --> 00:18:58.706 A:middle
end up with it looking a little

00:18:58.706 --> 00:18:59.626 A:middle
bit more like a page.

00:18:59.926 --> 00:19:00.716 A:middle
We can see that the text


00:18:59.926 --> 00:19:00.716 A:middle
We can see that the text

00:19:00.756 --> 00:19:02.956 A:middle
container has been resized to

00:19:02.956 --> 00:19:04.386 A:middle
match the dimensions of a piece

00:19:04.976 --> 00:19:06.056 A:middle
of paper.

00:19:06.176 --> 00:19:07.696 A:middle
Now if we scroll down, we can

00:19:07.696 --> 00:19:08.866 A:middle
see that the text jumps from the

00:19:08.866 --> 00:19:09.946 A:middle
first page to the second.

00:19:10.886 --> 00:19:12.116 A:middle
Now the standard configuration

00:19:12.116 --> 00:19:13.266 A:middle
doesn't really support layout

00:19:13.266 --> 00:19:13.636 A:middle
like this.

00:19:15.066 --> 00:19:16.626 A:middle
Sure enough, this layout uses

00:19:16.626 --> 00:19:17.856 A:middle
two text views and text

00:19:17.856 --> 00:19:18.326 A:middle
containers.

00:19:19.076 --> 00:19:20.006 A:middle
Now they're still managed by the

00:19:20.106 --> 00:19:21.276 A:middle
same layout manager and text

00:19:21.276 --> 00:19:22.626 A:middle
storage, which allows the text

00:19:22.626 --> 00:19:24.176 A:middle
to freely jump from one page to

00:19:25.016 --> 00:19:26.566 A:middle
the next.

00:19:26.776 --> 00:19:27.926 A:middle
Now if you'd like to see more

00:19:27.926 --> 00:19:29.276 A:middle
about how TextEdit works, you

00:19:29.276 --> 00:19:31.136 A:middle
can actually find its source in

00:19:31.136 --> 00:19:32.116 A:middle
the guides and sample codes

00:19:32.116 --> 00:19:32.546 A:middle
library.

00:19:32.546 --> 00:19:36.046 A:middle
So we've picked the right

00:19:36.046 --> 00:19:37.666 A:middle
controls, we've picked the right

00:19:37.666 --> 00:19:39.716 A:middle
configuration, but sometimes we

00:19:39.716 --> 00:19:41.016 A:middle
actually need to hammer on these

00:19:41.096 --> 00:19:42.126 A:middle
to achieve what we want.

00:19:43.346 --> 00:19:44.386 A:middle
But how do we decide which

00:19:44.386 --> 00:19:45.076 A:middle
hammer to use?

00:19:45.806 --> 00:19:49.006 A:middle
So we're going to try and pick

00:19:49.006 --> 00:19:50.166 A:middle
the right hammer for the job

00:19:50.306 --> 00:19:51.526 A:middle
when we go through the steps of

00:19:51.526 --> 00:19:53.146 A:middle
building a journal app together.

00:19:54.516 --> 00:19:55.876 A:middle
We'll start by putting today's

00:19:55.946 --> 00:19:57.056 A:middle
date on to the window.

00:19:58.316 --> 00:19:59.546 A:middle
Now we don't have UILabels in

00:19:59.546 --> 00:20:01.226 A:middle
AppKit, but we can make a text


00:19:59.546 --> 00:20:01.226 A:middle
AppKit, but we can make a text

00:20:01.226 --> 00:20:02.476 A:middle
field behave like a label.

00:20:03.716 --> 00:20:05.396 A:middle
All we need to do is disable

00:20:05.396 --> 00:20:05.766 A:middle
editing.

00:20:06.366 --> 00:20:09.116 A:middle
Now for the journal entry part

00:20:09.116 --> 00:20:10.246 A:middle
of the window, we're going to

00:20:10.246 --> 00:20:10.976 A:middle
use a text view.

00:20:12.206 --> 00:20:13.676 A:middle
So in the inspector, we can make

00:20:13.676 --> 00:20:14.706 A:middle
sure that the text view is

00:20:14.706 --> 00:20:16.916 A:middle
editable and selectable and

00:20:16.916 --> 00:20:18.596 A:middle
supports rich text and undo.

00:20:18.596 --> 00:20:21.916 A:middle
We're going to add a couple of

00:20:21.916 --> 00:20:23.006 A:middle
text fields to the bottom of the

00:20:23.006 --> 00:20:24.056 A:middle
window as well so that we can

00:20:24.056 --> 00:20:25.266 A:middle
show how many words have been

00:20:25.266 --> 00:20:25.566 A:middle
written.

00:20:26.166 --> 00:20:29.746 A:middle
Now when we run our app, we want

00:20:29.746 --> 00:20:30.766 A:middle
the word count at the bottom to

00:20:30.766 --> 00:20:32.836 A:middle
change, so let's find the right

00:20:32.886 --> 00:20:33.676 A:middle
hammer for this job.

00:20:33.676 --> 00:20:36.446 A:middle
Now we can either conform to a

00:20:36.446 --> 00:20:38.416 A:middle
delegate, handle a notification

00:20:38.836 --> 00:20:39.266 A:middle
or subclass.

00:20:39.266 --> 00:20:41.796 A:middle
But in this case, we're going to

00:20:41.796 --> 00:20:42.636 A:middle
use a small hammer.

00:20:42.916 --> 00:20:43.756 A:middle
And we're going to listen for a

00:20:43.756 --> 00:20:45.226 A:middle
notification from text storage.

00:20:46.726 --> 00:20:47.886 A:middle
Now we can get the number of

00:20:47.886 --> 00:20:49.496 A:middle
words from the text storage.

00:20:50.686 --> 00:20:51.246 A:middle
And when we hear the

00:20:51.246 --> 00:20:52.886 A:middle
notification, we can update the

00:20:52.886 --> 00:20:54.556 A:middle
string value property of our

00:20:54.556 --> 00:20:55.026 A:middle
text field.

00:20:55.586 --> 00:20:58.726 A:middle
And when we start typing, we can

00:20:58.756 --> 00:20:59.726 A:middle
see the word count change.


00:21:00.326 --> 00:21:03.446 A:middle
Now if we want to emphasize part

00:21:03.446 --> 00:21:05.806 A:middle
of our text, we can use keyboard

00:21:05.806 --> 00:21:07.586 A:middle
shortcuts or the menu to apply

00:21:07.586 --> 00:21:08.616 A:middle
formatting like bold.

00:21:09.166 --> 00:21:11.846 A:middle
But it would be great if we

00:21:11.846 --> 00:21:13.946 A:middle
could support modern text

00:21:13.946 --> 00:21:15.746 A:middle
formatting like Markdown, which

00:21:15.746 --> 00:21:17.346 A:middle
uses control characters to

00:21:17.406 --> 00:21:18.406 A:middle
specify formatting.

00:21:19.206 --> 00:21:20.566 A:middle
So if we start inserting

00:21:20.786 --> 00:21:22.536 A:middle
asterisks before and after, we

00:21:22.536 --> 00:21:23.366 A:middle
want it to be bold.

00:21:24.216 --> 00:21:26.426 A:middle
But which hammer should we use

00:21:27.816 --> 00:21:28.216 A:middle
for this?

00:21:28.336 --> 00:21:29.276 A:middle
Well, we want to know when a

00:21:29.276 --> 00:21:31.396 A:middle
change happens, and we want to

00:21:31.396 --> 00:21:32.586 A:middle
know where a change happens.

00:21:32.616 --> 00:21:33.846 A:middle
But notifications don't really

00:21:33.846 --> 00:21:35.286 A:middle
give us much information about

00:21:35.286 --> 00:21:35.896 A:middle
this change.

00:21:37.416 --> 00:21:38.456 A:middle
So we're going to use a bigger

00:21:38.456 --> 00:21:40.076 A:middle
hammer and implement the text

00:21:40.076 --> 00:21:42.686 A:middle
storage delegate, specifically

00:21:42.686 --> 00:21:44.286 A:middle
the didProcessEditing method.

00:21:45.226 --> 00:21:46.786 A:middle
Now we can make a new bold font

00:21:47.016 --> 00:21:47.946 A:middle
from our existing one.

00:21:48.646 --> 00:21:50.026 A:middle
And we can add that font

00:21:50.026 --> 00:21:51.426 A:middle
directly to our text storage for

00:21:51.426 --> 00:21:52.336 A:middle
the range that we want to be

00:21:52.336 --> 00:21:52.646 A:middle
bold.

00:21:53.176 --> 00:21:55.586 A:middle
And now when we insert that last

00:21:55.586 --> 00:21:57.696 A:middle
asterisk, we can make it bold.

00:21:58.346 --> 00:22:01.126 A:middle
Now we're feeling pretty good


00:21:58.346 --> 00:22:01.126 A:middle
Now we're feeling pretty good

00:22:01.126 --> 00:22:02.426 A:middle
about this whole Markdown thing

00:22:02.586 --> 00:22:04.856 A:middle
so what if we try inserting a

00:22:04.856 --> 00:22:05.476 A:middle
code snippet?

00:22:06.756 --> 00:22:07.836 A:middle
Now in Markdown it looks like

00:22:07.906 --> 00:22:07.996 A:middle
this.

00:22:09.256 --> 00:22:10.516 A:middle
And if we add this last

00:22:10.636 --> 00:22:12.116 A:middle
back-tick, we want it to look

00:22:12.116 --> 00:22:12.766 A:middle
like a code block.

00:22:14.136 --> 00:22:15.156 A:middle
It should have a background and

00:22:15.156 --> 00:22:16.346 A:middle
a header that says Swift Code.

00:22:17.716 --> 00:22:18.906 A:middle
Now this is actually a complex

00:22:18.906 --> 00:22:21.216 A:middle
task, so we're going to need two

00:22:21.306 --> 00:22:22.006 A:middle
sledgehammers.

00:22:23.386 --> 00:22:24.716 A:middle
And the first is a subclass

00:22:24.886 --> 00:22:25.526 A:middle
NSTextStorage.

00:22:26.556 --> 00:22:27.946 A:middle
Now when we subclass

00:22:27.946 --> 00:22:28.916 A:middle
NSTextStorage, we need to

00:22:28.916 --> 00:22:30.706 A:middle
implement four required methods.

00:22:31.236 --> 00:22:32.806 A:middle
And we can do this by operating

00:22:32.856 --> 00:22:34.336 A:middle
on a private instance of a

00:22:34.336 --> 00:22:34.946 A:middle
mutable string.

00:22:34.946 --> 00:22:37.996 A:middle
Now let's pay attention to the

00:22:37.996 --> 00:22:39.056 A:middle
replaceCharacters method.

00:22:39.836 --> 00:22:42.066 A:middle
Now we can add an NSTextBlock to

00:22:42.066 --> 00:22:42.876 A:middle
our paragraph style.

00:22:43.406 --> 00:22:46.046 A:middle
And then we can add that

00:22:46.046 --> 00:22:47.546 A:middle
paragraph style to our text

00:22:47.546 --> 00:22:49.116 A:middle
storage over the range of that

00:22:49.116 --> 00:22:49.496 A:middle
code block.

00:22:50.256 --> 00:22:51.746 A:middle
Now NSTextBlock by itself

00:22:51.746 --> 00:22:53.526 A:middle
doesn't do any custom drawing by

00:22:53.526 --> 00:22:53.906 A:middle
itself.

00:22:54.596 --> 00:22:56.766 A:middle
So we'll need to subclass that

00:22:57.916 --> 00:22:57.996 A:middle
too.

00:22:58.226 --> 00:23:00.846 A:middle
Our NSTextBlock subclass needs


00:22:58.226 --> 00:23:00.846 A:middle
Our NSTextBlock subclass needs

00:23:00.846 --> 00:23:02.756 A:middle
to have some padding with some

00:23:02.756 --> 00:23:04.626 A:middle
extra padding on the top and a

00:23:04.626 --> 00:23:07.346 A:middle
light gray background.

00:23:07.546 --> 00:23:08.906 A:middle
We'll override drawBackground

00:23:09.566 --> 00:23:11.346 A:middle
and use string drawing to draw

00:23:11.346 --> 00:23:12.666 A:middle
the header Swift Code.

00:23:13.606 --> 00:23:14.836 A:middle
Now this is actually all we need

00:23:14.836 --> 00:23:16.386 A:middle
to do to make a text block look

00:23:16.386 --> 00:23:18.886 A:middle
like a code snippet.

00:23:18.986 --> 00:23:20.216 A:middle
Now back in our custom text

00:23:20.216 --> 00:23:21.866 A:middle
storage, we can create an

00:23:21.866 --> 00:23:23.076 A:middle
instance of our new code block

00:23:24.256 --> 00:23:25.856 A:middle
instead of using a plain text

00:23:27.156 --> 00:23:27.286 A:middle
block.

00:23:27.856 --> 00:23:31.476 A:middle
Now, last but not least, we need

00:23:31.476 --> 00:23:32.896 A:middle
to tell our text view to use one

00:23:32.896 --> 00:23:34.606 A:middle
of our custom text storages, so

00:23:34.606 --> 00:23:36.076 A:middle
we'll replace the text storage

00:23:36.116 --> 00:23:37.096 A:middle
on the layout manager.

00:23:37.706 --> 00:23:41.076 A:middle
Now this is turning into a real

00:23:41.076 --> 00:23:42.266 A:middle
WYSIWYG Markdown editor.

00:23:43.126 --> 00:23:44.366 A:middle
Now a popular feature of most

00:23:44.366 --> 00:23:45.556 A:middle
Markdown editor's is a

00:23:45.666 --> 00:23:47.726 A:middle
side-by-side view with an

00:23:47.726 --> 00:23:49.046 A:middle
editing version on the left and

00:23:49.046 --> 00:23:50.016 A:middle
a rendering on the right.

00:23:51.516 --> 00:23:52.996 A:middle
Now we can do this with two text

00:23:52.996 --> 00:23:54.426 A:middle
views side-by-side.

00:23:55.936 --> 00:23:57.406 A:middle
We'll disable editing for the

00:23:57.406 --> 00:23:57.946 A:middle
one on the right.

00:23:58.866 --> 00:24:00.376 A:middle
And now we have two text views


00:23:58.866 --> 00:24:00.376 A:middle
And now we have two text views

00:24:00.376 --> 00:24:01.596 A:middle
but we want them to display the

00:24:01.696 --> 00:24:03.546 A:middle
same content but look a little

00:24:03.546 --> 00:24:04.286 A:middle
different on the right.

00:24:05.916 --> 00:24:07.176 A:middle
So we want a configuration like

00:24:07.176 --> 00:24:08.806 A:middle
this where we have one text

00:24:08.806 --> 00:24:10.716 A:middle
storage but two of everything

00:24:11.546 --> 00:24:11.666 A:middle
else.

00:24:14.096 --> 00:24:16.506 A:middle
To do this, we will replace the

00:24:16.506 --> 00:24:17.996 A:middle
text storage on the right with

00:24:18.066 --> 00:24:19.106 A:middle
that from the left.

00:24:20.616 --> 00:24:21.506 A:middle
Now let's see what this looks

00:24:21.536 --> 00:24:21.766 A:middle
like.

00:24:22.286 --> 00:24:25.186 A:middle
Now this is actually really

00:24:25.186 --> 00:24:25.326 A:middle
cool.

00:24:25.526 --> 00:24:26.626 A:middle
If we add any characters to the

00:24:26.626 --> 00:24:27.636 A:middle
left, they'll show up

00:24:27.636 --> 00:24:28.556 A:middle
immediately on the right-hand

00:24:28.556 --> 00:24:28.826 A:middle
side.

00:24:29.726 --> 00:24:31.056 A:middle
Now usually the right-hand side

00:24:31.906 --> 00:24:33.166 A:middle
doesn't really show the Markdown

00:24:33.166 --> 00:24:35.406 A:middle
characters but since this is a

00:24:35.406 --> 00:24:38.036 A:middle
shared text storage, it means we

00:24:38.036 --> 00:24:39.196 A:middle
have to hide the characters

00:24:39.406 --> 00:24:40.486 A:middle
during the layout process.

00:24:40.486 --> 00:24:44.236 A:middle
Now since we need to do it this

00:24:44.236 --> 00:24:45.846 A:middle
way, we really only have one

00:24:45.916 --> 00:24:48.486 A:middle
option and that's to implement

00:24:49.016 --> 00:24:50.746 A:middle
the shouldGenerateGlyphs method

00:24:51.176 --> 00:24:52.746 A:middle
on the NSLayoutManager delegate.

00:24:53.796 --> 00:24:55.196 A:middle
This will allow us to intervene

00:24:55.316 --> 00:24:57.446 A:middle
in the glyph generation process.

00:24:58.036 --> 00:24:59.776 A:middle
So we can take the glyphs that

00:24:59.776 --> 00:25:01.986 A:middle
are about to be laid out and if


00:24:59.776 --> 00:25:01.986 A:middle
are about to be laid out and if

00:25:01.986 --> 00:25:03.446 A:middle
they represent a Markdown

00:25:03.446 --> 00:25:05.446 A:middle
control character, we can apply

00:25:05.446 --> 00:25:07.356 A:middle
the null property to that glyph.

00:25:08.096 --> 00:25:09.216 A:middle
Now this will eliminate the

00:25:09.216 --> 00:25:10.516 A:middle
glyph altogether during the

00:25:10.516 --> 00:25:12.526 A:middle
layout process without changing

00:25:12.526 --> 00:25:13.756 A:middle
the underlying text storage.

00:25:14.306 --> 00:25:19.096 A:middle
Then, we will use the new glyphs

00:25:19.096 --> 00:25:20.686 A:middle
and tell the layout manager that

00:25:20.686 --> 00:25:22.046 A:middle
we want to present these glyphs

00:25:22.106 --> 00:25:23.116 A:middle
with our new properties.

00:25:27.096 --> 00:25:28.766 A:middle
Now this is actually really

00:25:28.766 --> 00:25:29.106 A:middle
cool.

00:25:29.106 --> 00:25:30.416 A:middle
So the left-hand side shows an

00:25:30.416 --> 00:25:31.436 A:middle
editable version with all the

00:25:31.436 --> 00:25:32.626 A:middle
Markdown characters included.

00:25:32.956 --> 00:25:34.576 A:middle
And the right-hand side shows no

00:25:34.576 --> 00:25:36.306 A:middle
Markdown characters all, all

00:25:36.306 --> 00:25:37.686 A:middle
using the same text storage.

00:25:38.286 --> 00:25:40.836 A:middle
Now building a side-by-side

00:25:40.836 --> 00:25:42.046 A:middle
Markdown editor is not something

00:25:42.096 --> 00:25:44.256 A:middle
all of us do every day, but it

00:25:44.256 --> 00:25:45.536 A:middle
was really good to see how

00:25:45.536 --> 00:25:47.856 A:middle
customizable TextKit is with

00:25:47.856 --> 00:25:48.816 A:middle
real world examples.

00:25:49.536 --> 00:25:51.626 A:middle
If you'd like to learn more

00:25:51.626 --> 00:25:53.026 A:middle
about how to use and customize

00:25:53.066 --> 00:25:54.816 A:middle
TextKit, check out our amazing

00:25:54.816 --> 00:25:55.576 A:middle
programming guides.

00:25:56.286 --> 00:25:57.646 A:middle
And with that, I will hand it

00:25:57.646 --> 00:25:58.186 A:middle
back to Donna.

00:25:59.516 --> 00:26:06.066 A:middle
[ Applause ]


00:25:59.516 --> 00:26:06.066 A:middle
[ Applause ]

00:26:06.566 --> 00:26:07.236 A:middle
&gt;&gt; Thanks, Emily.

00:26:08.056 --> 00:26:09.056 A:middle
Those are some really cool

00:26:09.056 --> 00:26:09.536 A:middle
examples.

00:26:09.666 --> 00:26:10.786 A:middle
And I really hope you'll be able

00:26:10.786 --> 00:26:11.706 A:middle
to take some of the techniques

00:26:11.706 --> 00:26:13.056 A:middle
that she showed off and use them

00:26:13.056 --> 00:26:13.876 A:middle
in your own apps.

00:26:14.596 --> 00:26:16.086 A:middle
But now let's shift gears a bit

00:26:16.416 --> 00:26:17.226 A:middle
and talk about some best

00:26:17.266 --> 00:26:19.766 A:middle
practices for working with text.

00:26:21.756 --> 00:26:23.196 A:middle
So on the topic of correctness,

00:26:23.796 --> 00:26:24.996 A:middle
if your text doesn't render the

00:26:24.996 --> 00:26:26.716 A:middle
way you expect, it could be

00:26:26.716 --> 00:26:28.596 A:middle
related to incomplete or

00:26:28.596 --> 00:26:29.806 A:middle
incorrect attributes on your

00:26:29.806 --> 00:26:30.556 A:middle
attributed string.

00:26:31.946 --> 00:26:33.636 A:middle
And so let's take a look at an

00:26:33.636 --> 00:26:35.066 A:middle
example to see this in practice.

00:26:36.116 --> 00:26:37.466 A:middle
Let's say we have a UITextView

00:26:37.666 --> 00:26:39.536 A:middle
with some attributed text that

00:26:39.536 --> 00:26:40.846 A:middle
says don't hate.

00:26:40.846 --> 00:26:42.636 A:middle
And it says this in the font

00:26:42.706 --> 00:26:44.266 A:middle
Comic Sans 24 point.

00:26:44.766 --> 00:26:46.746 A:middle
And we want to programmatically

00:26:46.746 --> 00:26:48.946 A:middle
apply a bold typeface to the

00:26:48.946 --> 00:26:50.736 A:middle
word don't because if there's

00:26:50.736 --> 00:26:52.396 A:middle
any font more universally hated

00:26:52.396 --> 00:26:54.116 A:middle
than Comic Sans, it's Comic Sans

00:26:54.116 --> 00:26:54.396 A:middle
bold.

00:26:54.776 --> 00:26:58.316 A:middle
And so at first blush, it might

00:26:58.316 --> 00:26:59.366 A:middle
seem reasonable to write code

00:26:59.366 --> 00:26:59.696 A:middle
like this.


00:27:00.716 --> 00:27:02.366 A:middle
Now here we have our original

00:27:02.366 --> 00:27:02.746 A:middle
font.

00:27:03.386 --> 00:27:05.326 A:middle
And we're going to use a font

00:27:05.326 --> 00:27:06.796 A:middle
descriptor to create a bold

00:27:06.796 --> 00:27:08.376 A:middle
version of this original font.

00:27:09.936 --> 00:27:11.796 A:middle
Then, we're going to initialize

00:27:11.796 --> 00:27:13.196 A:middle
our mutable attributed string

00:27:13.526 --> 00:27:14.526 A:middle
using the original text.

00:27:14.526 --> 00:27:16.866 A:middle
We're going to apply our new

00:27:16.866 --> 00:27:18.876 A:middle
font or new bold font to the

00:27:18.876 --> 00:27:20.586 A:middle
word don't and that's going to

00:27:20.586 --> 00:27:21.496 A:middle
be the first five characters.

00:27:21.496 --> 00:27:22.986 A:middle
And then we're going to set the

00:27:22.986 --> 00:27:24.386 A:middle
attributed text property of our

00:27:24.386 --> 00:27:25.996 A:middle
UITextView to use this new

00:27:25.996 --> 00:27:28.566 A:middle
attributed string except when we

00:27:28.606 --> 00:27:30.096 A:middle
do that we'll see that our new

00:27:30.096 --> 00:27:32.186 A:middle
bold font applied to the word

00:27:32.186 --> 00:27:34.416 A:middle
don't just as we expected but

00:27:34.416 --> 00:27:35.676 A:middle
the rest of the string somehow

00:27:35.676 --> 00:27:36.986 A:middle
lost the original font.

00:27:37.506 --> 00:27:39.696 A:middle
And now those of you who despise

00:27:39.696 --> 00:27:40.966 A:middle
Comic Sans might be happy about

00:27:40.966 --> 00:27:43.676 A:middle
that, but the result is wrong

00:27:43.806 --> 00:27:45.296 A:middle
and so that warrants a sad face.

00:27:46.456 --> 00:27:47.926 A:middle
So why did this happen?

00:27:48.506 --> 00:27:51.046 A:middle
And to answer that, let's take a

00:27:51.046 --> 00:27:52.196 A:middle
closer look at how we're

00:27:52.196 --> 00:27:53.476 A:middle
initializing our attributed

00:27:53.546 --> 00:27:53.856 A:middle
string.

00:27:55.226 --> 00:27:56.806 A:middle
So notice that we're using a

00:27:56.966 --> 00:27:58.526 A:middle
plain text string to initialize

00:27:58.526 --> 00:27:59.616 A:middle
it, and we're using the

00:27:59.616 --> 00:28:01.006 A:middle
initializer with no attribute


00:27:59.616 --> 00:28:01.006 A:middle
initializer with no attribute

00:28:01.006 --> 00:28:01.516 A:middle
information.

00:28:01.516 --> 00:28:04.046 A:middle
And when you create a new

00:28:04.046 --> 00:28:05.646 A:middle
attributed string and you don't

00:28:05.646 --> 00:28:06.526 A:middle
provide any attribute

00:28:06.526 --> 00:28:08.626 A:middle
information, that new attributed

00:28:08.626 --> 00:28:09.826 A:middle
string, we use the default

00:28:09.826 --> 00:28:10.226 A:middle
attributes.

00:28:11.026 --> 00:28:11.926 A:middle
And the default font is

00:28:11.926 --> 00:28:13.136 A:middle
Helvetica 12 point.

00:28:13.686 --> 00:28:15.876 A:middle
And so to recap what happened,

00:28:16.166 --> 00:28:17.366 A:middle
we started with this original

00:28:17.366 --> 00:28:19.036 A:middle
attributed string with the font

00:28:19.036 --> 00:28:20.566 A:middle
Comic Sans 24 applied to the

00:28:20.566 --> 00:28:21.356 A:middle
entire range.

00:28:21.866 --> 00:28:24.986 A:middle
And then we created this new

00:28:24.986 --> 00:28:26.416 A:middle
attributed string, and it got

00:28:26.416 --> 00:28:27.506 A:middle
initialized with the default

00:28:27.506 --> 00:28:27.966 A:middle
attributes.

00:28:28.856 --> 00:28:30.156 A:middle
And we applied our bold font to

00:28:30.156 --> 00:28:31.226 A:middle
the word don't on this new

00:28:31.276 --> 00:28:33.016 A:middle
string, and we ended up with

00:28:33.016 --> 00:28:34.896 A:middle
this incorrect result here where

00:28:34.896 --> 00:28:36.296 A:middle
the word don't is in Comic Sans

00:28:36.296 --> 00:28:37.886 A:middle
bold 24, and the rest of the

00:28:37.886 --> 00:28:39.366 A:middle
string is in the default font of

00:28:39.366 --> 00:28:40.146 A:middle
Helvetica 12.

00:28:40.726 --> 00:28:43.916 A:middle
And so there are two different

00:28:43.916 --> 00:28:44.776 A:middle
ways that we could do this

00:28:44.776 --> 00:28:46.826 A:middle
correctly and one way is to

00:28:46.826 --> 00:28:47.916 A:middle
avoid mixing the plain and

00:28:47.916 --> 00:28:49.086 A:middle
attributed text altogether.

00:28:50.146 --> 00:28:51.416 A:middle
So by initializing our new

00:28:51.416 --> 00:28:52.446 A:middle
attributed string using the

00:28:52.446 --> 00:28:53.676 A:middle
original one, we're going to

00:28:53.676 --> 00:28:54.816 A:middle
keep those original attributes.

00:28:55.296 --> 00:28:56.326 A:middle
And then we can apply our new

00:28:56.326 --> 00:28:57.606 A:middle
attributes without getting this

00:28:57.606 --> 00:28:58.976 A:middle
reset effect with the default

00:28:58.976 --> 00:28:59.176 A:middle
ones.

00:28:59.696 --> 00:29:02.466 A:middle
But it's not always feasible to


00:28:59.696 --> 00:29:02.466 A:middle
But it's not always feasible to

00:29:02.466 --> 00:29:03.746 A:middle
just avoid mixing plain and

00:29:03.746 --> 00:29:04.256 A:middle
attributed text.

00:29:04.576 --> 00:29:06.156 A:middle
So if you've got to mix it up,

00:29:06.736 --> 00:29:08.096 A:middle
you can explicitly supply the

00:29:08.096 --> 00:29:09.876 A:middle
attributes when creating that

00:29:09.876 --> 00:29:11.216 A:middle
new attributed string from the

00:29:11.216 --> 00:29:11.846 A:middle
plain text string.

00:29:11.846 --> 00:29:13.596 A:middle
And if we make sure to apply the

00:29:13.656 --> 00:29:14.526 A:middle
same attributes from the

00:29:14.526 --> 00:29:15.716 A:middle
original text, we'll get the

00:29:15.716 --> 00:29:16.356 A:middle
correct result.

00:29:16.886 --> 00:29:19.816 A:middle
But you should be aware that

00:29:19.816 --> 00:29:20.896 A:middle
this reset effect can happen

00:29:20.896 --> 00:29:22.126 A:middle
with any attributes that have

00:29:22.126 --> 00:29:23.456 A:middle
default values and not just

00:29:23.456 --> 00:29:23.736 A:middle
fonts.

00:29:24.816 --> 00:29:26.106 A:middle
And as you can see, there are a

00:29:26.106 --> 00:29:27.326 A:middle
lot of attributes with default

00:29:27.326 --> 00:29:27.676 A:middle
values.

00:29:27.676 --> 00:29:30.746 A:middle
So I'd like to call out the

00:29:30.746 --> 00:29:31.986 A:middle
paragraph style here in

00:29:31.986 --> 00:29:33.506 A:middle
particular as being a sneaky

00:29:33.506 --> 00:29:34.096 A:middle
reset point.

00:29:35.056 --> 00:29:36.466 A:middle
And to see why, we'll revisit

00:29:36.466 --> 00:29:37.256 A:middle
our earlier example.

00:29:37.406 --> 00:29:38.496 A:middle
But instead of changing the

00:29:38.496 --> 00:29:39.826 A:middle
font, we're going to change the

00:29:39.826 --> 00:29:41.576 A:middle
paragraph style to truncate the

00:29:41.576 --> 00:29:43.136 A:middle
word hate because nobody likes

00:29:43.646 --> 00:29:43.746 A:middle
hate.

00:29:44.376 --> 00:29:45.786 A:middle
So we want our text to look like

00:29:45.856 --> 00:29:47.886 A:middle
this, but when we run this code,

00:29:48.716 --> 00:29:49.836 A:middle
we'll get a result like this

00:29:50.686 --> 00:29:51.696 A:middle
with all of the text in

00:29:51.696 --> 00:29:53.526 A:middle
Helvetica 12 and using the

00:29:53.526 --> 00:29:55.136 A:middle
default paragraph style with the

00:29:55.136 --> 00:29:56.526 A:middle
default line break mode of word

00:29:56.526 --> 00:29:56.866 A:middle
wrapping.

00:29:57.566 --> 00:29:59.016 A:middle
And, again, this is really great

00:29:59.016 --> 00:29:59.956 A:middle
for those of you who loathe

00:29:59.956 --> 00:30:01.056 A:middle
Comic Sans because it's been


00:29:59.956 --> 00:30:01.056 A:middle
Comic Sans because it's been

00:30:01.056 --> 00:30:02.136 A:middle
totally eliminated from the

00:30:02.226 --> 00:30:03.976 A:middle
string but it's wrong.

00:30:04.086 --> 00:30:05.446 A:middle
And it's wrong in a different

00:30:05.446 --> 00:30:06.276 A:middle
way from last time.

00:30:06.826 --> 00:30:08.586 A:middle
And to understand the

00:30:08.586 --> 00:30:09.796 A:middle
difference, let's recall that

00:30:09.796 --> 00:30:11.686 A:middle
attribute fixing happens before

00:30:11.686 --> 00:30:13.296 A:middle
layout and this is where the

00:30:13.296 --> 00:30:14.736 A:middle
system repairs the inconsistent

00:30:14.736 --> 00:30:15.236 A:middle
attributes.

00:30:16.216 --> 00:30:17.196 A:middle
And so here in our attributed

00:30:17.286 --> 00:30:18.546 A:middle
string we have a single

00:30:18.546 --> 00:30:19.906 A:middle
paragraph with multiple

00:30:19.906 --> 00:30:21.736 A:middle
paragraph styles and that's

00:30:21.776 --> 00:30:22.646 A:middle
pretty inconsistent.

00:30:23.496 --> 00:30:24.996 A:middle
So when the system fixes the

00:30:24.996 --> 00:30:26.426 A:middle
attributes of this string, it's

00:30:26.426 --> 00:30:27.086 A:middle
going to take the first

00:30:27.086 --> 00:30:28.976 A:middle
paragraph style it finds and

00:30:28.976 --> 00:30:29.706 A:middle
apply it to the entire

00:30:29.706 --> 00:30:30.206 A:middle
paragraph.

00:30:31.236 --> 00:30:32.296 A:middle
And that's how we ended up with

00:30:32.296 --> 00:30:34.096 A:middle
our attributed string displaying

00:30:34.096 --> 00:30:35.046 A:middle
with the default paragraph

00:30:35.046 --> 00:30:35.386 A:middle
style.

00:30:35.946 --> 00:30:38.486 A:middle
And the key take away here is to

00:30:38.486 --> 00:30:39.906 A:middle
be explicit with your

00:30:39.906 --> 00:30:41.416 A:middle
attributes, especially when

00:30:41.416 --> 00:30:42.216 A:middle
you're mixing plain and

00:30:42.216 --> 00:30:42.926 A:middle
attributed text.

00:30:43.836 --> 00:30:44.916 A:middle
So by doing this, you're going

00:30:44.916 --> 00:30:46.346 A:middle
to avoid this reset effect with

00:30:46.346 --> 00:30:47.216 A:middle
the default attributes.

00:30:47.826 --> 00:30:49.406 A:middle
And for AppKit developers, this

00:30:49.406 --> 00:30:51.126 A:middle
is actually super important if

00:30:51.126 --> 00:30:52.176 A:middle
you're updating your app for

00:30:52.176 --> 00:30:52.696 A:middle
dark mode.

00:30:53.286 --> 00:30:54.526 A:middle
So by using the explicit

00:30:54.526 --> 00:30:56.056 A:middle
attributes with the dynamic

00:30:56.056 --> 00:30:57.886 A:middle
colors like NSColor.textColor,

00:30:57.946 --> 00:30:59.216 A:middle
you'll ensure that your text is

00:30:59.216 --> 00:31:00.146 A:middle
drawn with the correct colors


00:30:59.216 --> 00:31:00.146 A:middle
drawn with the correct colors

00:31:00.316 --> 00:31:03.116 A:middle
for the context.

00:31:03.216 --> 00:31:03.786 A:middle
So moving on.

00:31:04.316 --> 00:31:05.416 A:middle
The next topic is performance.

00:31:06.306 --> 00:31:07.116 A:middle
If you're working with large

00:31:07.116 --> 00:31:08.656 A:middle
amounts of text, a good way to

00:31:08.656 --> 00:31:10.046 A:middle
improve your apps performance is

00:31:10.046 --> 00:31:11.636 A:middle
to use noncontinuous layout.

00:31:11.636 --> 00:31:14.076 A:middle
And to understand what that

00:31:14.076 --> 00:31:15.276 A:middle
means, let's revisit our old

00:31:15.336 --> 00:31:16.766 A:middle
friend the layout process.

00:31:17.826 --> 00:31:18.856 A:middle
We said that the layout process

00:31:18.896 --> 00:31:20.436 A:middle
consists of glyph generation

00:31:20.526 --> 00:31:21.386 A:middle
followed by glyph layout.

00:31:22.806 --> 00:31:24.046 A:middle
And so with continuous layout,

00:31:24.266 --> 00:31:25.416 A:middle
the layout manager is going to

00:31:25.416 --> 00:31:26.716 A:middle
perform glyph generation and

00:31:26.716 --> 00:31:27.946 A:middle
glyph layout starting at the

00:31:27.986 --> 00:31:29.496 A:middle
beginning of the text storage.

00:31:30.286 --> 00:31:31.546 A:middle
And it goes in order from the

00:31:31.546 --> 00:31:32.426 A:middle
beginning to the end.

00:31:33.786 --> 00:31:34.986 A:middle
And so if someone using your app

00:31:35.026 --> 00:31:36.066 A:middle
scrolls to some point in the

00:31:36.066 --> 00:31:37.556 A:middle
middle of your text view, the

00:31:37.556 --> 00:31:38.966 A:middle
layout manager has to generate

00:31:38.966 --> 00:31:41.056 A:middle
and layout the glyphs for all

00:31:41.056 --> 00:31:42.316 A:middle
the glyphs that come before that

00:31:42.316 --> 00:31:44.106 A:middle
point as indicated by the red

00:31:44.106 --> 00:31:44.596 A:middle
rectangle.

00:31:45.166 --> 00:31:46.726 A:middle
And note that this also includes

00:31:46.726 --> 00:31:47.846 A:middle
the text that you can't see

00:31:47.846 --> 00:31:49.016 A:middle
that's been scrolled off the top

00:31:49.016 --> 00:31:50.116 A:middle
of the screen all the way back

00:31:50.176 --> 00:31:51.196 A:middle
to the beginning of the text

00:31:51.196 --> 00:31:51.596 A:middle
storage.

00:31:52.696 --> 00:31:54.186 A:middle
And so if you have a lot of

00:31:54.236 --> 00:31:56.406 A:middle
text, that poor person might

00:31:56.406 --> 00:31:57.756 A:middle
have to wait a while for your

00:31:57.756 --> 00:31:59.946 A:middle
app to finish layout but

00:31:59.946 --> 00:32:01.626 A:middle
luckily, we can avoid this


00:31:59.946 --> 00:32:01.626 A:middle
luckily, we can avoid this

00:32:01.626 --> 00:32:03.616 A:middle
situation by using noncontinuous

00:32:03.616 --> 00:32:03.916 A:middle
layout.

00:32:04.966 --> 00:32:06.896 A:middle
And so as the name implies, with

00:32:06.896 --> 00:32:08.286 A:middle
noncontinuous layout, the layout

00:32:08.286 --> 00:32:10.216 A:middle
manager doesn't have to do glyph

00:32:10.216 --> 00:32:11.656 A:middle
generation and layout in order

00:32:11.716 --> 00:32:12.896 A:middle
from the beginning of the text

00:32:12.896 --> 00:32:13.296 A:middle
storage.

00:32:14.166 --> 00:32:15.626 A:middle
So now when that person, using

00:32:15.626 --> 00:32:16.756 A:middle
your app, scrolls to the middle

00:32:17.026 --> 00:32:18.956 A:middle
of your text view, the layout

00:32:18.956 --> 00:32:20.016 A:middle
manager can perform glyph

00:32:20.016 --> 00:32:21.106 A:middle
generation and layout for that

00:32:21.106 --> 00:32:22.696 A:middle
middle section right away.

00:32:23.346 --> 00:32:25.696 A:middle
So if your text storage has a

00:32:25.696 --> 00:32:26.886 A:middle
lot of text in it, using

00:32:26.886 --> 00:32:28.376 A:middle
noncontinuous layout is a huge

00:32:28.376 --> 00:32:29.276 A:middle
performance win.

00:32:29.776 --> 00:32:32.476 A:middle
Great. So how do you turn this

00:32:33.266 --> 00:32:33.366 A:middle
on?

00:32:33.836 --> 00:32:35.946 A:middle
Well, noncontinuous layout is a

00:32:35.946 --> 00:32:37.366 A:middle
property of NSLayoutManager.

00:32:37.366 --> 00:32:39.346 A:middle
And so for NSTextView, you can

00:32:39.346 --> 00:32:41.346 A:middle
access the text to use layout

00:32:41.346 --> 00:32:42.486 A:middle
manager and then you can set

00:32:42.486 --> 00:32:43.436 A:middle
that property there.

00:32:44.006 --> 00:32:46.896 A:middle
For UITextView, you usually

00:32:46.896 --> 00:32:47.786 A:middle
don't have to do anything

00:32:47.786 --> 00:32:48.756 A:middle
because this is turned on by

00:32:48.756 --> 00:32:50.846 A:middle
default, but there's just one

00:32:50.846 --> 00:32:51.946 A:middle
important thing to remember.

00:32:53.006 --> 00:32:54.926 A:middle
Since UITextView is a subclass

00:32:55.416 --> 00:32:57.806 A:middle
of UIScrollView, noncontinuous

00:32:57.846 --> 00:32:59.586 A:middle
layout will require scrolling to

00:32:59.586 --> 00:33:00.106 A:middle
be enabled.


00:32:59.586 --> 00:33:00.106 A:middle
be enabled.

00:33:01.266 --> 00:33:02.776 A:middle
And this is because when you

00:33:02.776 --> 00:33:04.366 A:middle
disable scrolling, asking for

00:33:04.366 --> 00:33:06.086 A:middle
the intrinsic content size of

00:33:06.086 --> 00:33:07.116 A:middle
your text view is going to

00:33:07.116 --> 00:33:08.376 A:middle
require laying out all the text

00:33:08.906 --> 00:33:09.776 A:middle
and then you wouldn't get the

00:33:09.776 --> 00:33:10.716 A:middle
performance benefits of

00:33:10.716 --> 00:33:11.726 A:middle
noncontinuous layout in the

00:33:11.726 --> 00:33:12.156 A:middle
first place.

00:33:12.816 --> 00:33:15.636 A:middle
And that brings me to a really

00:33:15.636 --> 00:33:16.376 A:middle
important point.

00:33:17.186 --> 00:33:18.236 A:middle
You should avoid requesting

00:33:18.236 --> 00:33:19.696 A:middle
layout for all or most of the

00:33:19.696 --> 00:33:20.916 A:middle
text at once when you're using

00:33:20.916 --> 00:33:23.136 A:middle
noncontinuous layout since that

00:33:23.136 --> 00:33:24.116 A:middle
kind of defeats the purpose of

00:33:24.116 --> 00:33:25.026 A:middle
using it in the first place.

00:33:25.086 --> 00:33:27.516 A:middle
So if you have only one text

00:33:27.516 --> 00:33:28.926 A:middle
container, don't ask for the

00:33:28.926 --> 00:33:29.956 A:middle
layout of the entire thing.

00:33:30.796 --> 00:33:31.866 A:middle
And don't ask for layout for

00:33:31.866 --> 00:33:33.196 A:middle
large ranges of characters or

00:33:33.196 --> 00:33:34.256 A:middle
glyphs that include the end of

00:33:35.116 --> 00:33:37.106 A:middle
the text.

00:33:37.366 --> 00:33:38.526 A:middle
And we didn't dig too deeply

00:33:38.526 --> 00:33:39.406 A:middle
into the topic of text

00:33:39.406 --> 00:33:40.806 A:middle
performance here because I gave

00:33:40.806 --> 00:33:42.076 A:middle
a great talk on this last year

00:33:42.386 --> 00:33:44.826 A:middle
at WWDC 2017, Efficient

00:33:44.826 --> 00:33:45.766 A:middle
unteractions with Frameworks.

00:33:46.186 --> 00:33:47.226 A:middle
And you can access the video

00:33:47.226 --> 00:33:48.576 A:middle
from that more information link

00:33:48.576 --> 00:33:49.306 A:middle
at the end of the session.

00:33:49.306 --> 00:33:50.026 A:middle
All right.

00:33:51.396 --> 00:33:53.876 A:middle
Now it's time to talk about

00:33:53.876 --> 00:33:55.006 A:middle
everyone's favorite topic,

00:33:55.206 --> 00:33:55.666 A:middle
security.

00:33:56.406 --> 00:33:59.486 A:middle
So you may have noticed that

00:33:59.486 --> 00:34:00.526 A:middle
there have been incidents in the


00:33:59.486 --> 00:34:00.526 A:middle
there have been incidents in the

00:34:00.526 --> 00:34:02.456 A:middle
recent past where some people on

00:34:02.456 --> 00:34:04.446 A:middle
the Internet have exploited bugs

00:34:04.446 --> 00:34:05.746 A:middle
in our software to cause

00:34:05.816 --> 00:34:06.976 A:middle
problems for people who use our

00:34:07.016 --> 00:34:07.346 A:middle
products.

00:34:08.896 --> 00:34:10.016 A:middle
And in response, we're

00:34:10.016 --> 00:34:11.416 A:middle
continuing to devise techniques

00:34:11.606 --> 00:34:12.956 A:middle
for mitigating these kinds of

00:34:12.956 --> 00:34:16.036 A:middle
attacks, but today I'd like to

00:34:16.036 --> 00:34:17.326 A:middle
talk about how we can work

00:34:17.326 --> 00:34:18.755 A:middle
together to provide a stronger

00:34:18.755 --> 00:34:20.025 A:middle
defense against these attacks.

00:34:20.815 --> 00:34:21.626 A:middle
So you may have heard of the

00:34:21.626 --> 00:34:24.126 A:middle
concept defense in depth.

00:34:24.706 --> 00:34:26.056 A:middle
And in case you're not familiar

00:34:26.056 --> 00:34:27.856 A:middle
with the terms, defense in depth

00:34:27.856 --> 00:34:29.085 A:middle
refers to creating multiple

00:34:29.085 --> 00:34:30.706 A:middle
layers of protection to defend

00:34:30.706 --> 00:34:31.226 A:middle
against threats.

00:34:31.226 --> 00:34:33.315 A:middle
And this concept has been around

00:34:33.315 --> 00:34:33.926 A:middle
for centuries.

00:34:34.096 --> 00:34:35.556 A:middle
You can see it in the design of

00:34:35.556 --> 00:34:36.275 A:middle
medieval castles.

00:34:36.826 --> 00:34:38.056 A:middle
The land around the outside is

00:34:38.085 --> 00:34:39.266 A:middle
clear of trees so you can see

00:34:39.266 --> 00:34:39.906 A:middle
attackers coming.

00:34:39.906 --> 00:34:41.656 A:middle
And there's a moat to make

00:34:41.656 --> 00:34:42.525 A:middle
approaching the castle more

00:34:42.525 --> 00:34:43.545 A:middle
difficult and to prevent

00:34:43.545 --> 00:34:44.306 A:middle
tunneling underneath it.

00:34:44.306 --> 00:34:46.505 A:middle
And the walls are another

00:34:46.505 --> 00:34:46.876 A:middle
defense.

00:34:47.076 --> 00:34:48.166 A:middle
They're built tall so that

00:34:48.166 --> 00:34:49.096 A:middle
they're difficult to climb.

00:34:49.956 --> 00:34:50.926 A:middle
And there are arrow slits in the

00:34:50.926 --> 00:34:52.456 A:middle
walls and crenellations at the

00:34:52.456 --> 00:34:54.255 A:middle
top to allow defenders to fire

00:34:54.255 --> 00:34:55.406 A:middle
on attackers from protected

00:34:55.406 --> 00:34:55.886 A:middle
locations.

00:34:57.096 --> 00:34:58.796 A:middle
Now any one of these individual

00:34:58.796 --> 00:35:00.176 A:middle
protections might not be enough


00:34:58.796 --> 00:35:00.176 A:middle
protections might not be enough

00:35:00.296 --> 00:35:01.836 A:middle
to fend off an attack but

00:35:01.836 --> 00:35:03.556 A:middle
collectively they provide a

00:35:03.676 --> 00:35:04.356 A:middle
strong defense.

00:35:05.066 --> 00:35:07.796 A:middle
And like the castle, we here at

00:35:07.796 --> 00:35:09.246 A:middle
Apple provide multiple layers of

00:35:09.246 --> 00:35:11.126 A:middle
defense against attacks, but

00:35:11.126 --> 00:35:12.246 A:middle
there's nothing stopping you

00:35:12.316 --> 00:35:13.376 A:middle
from also taking your own

00:35:13.376 --> 00:35:14.636 A:middle
defensive measures in your app

00:35:14.636 --> 00:35:15.106 A:middle
or framework.

00:35:15.776 --> 00:35:17.266 A:middle
And by doing this, you're adding

00:35:17.266 --> 00:35:18.596 A:middle
another layer of protection and

00:35:18.596 --> 00:35:19.936 A:middle
improving your product security.

00:35:20.406 --> 00:35:21.066 A:middle
Everyone wins.

00:35:21.646 --> 00:35:23.216 A:middle
So let's talk about what you can

00:35:23.866 --> 00:35:25.466 A:middle
do here.

00:35:25.676 --> 00:35:26.556 A:middle
And something I'd like you to

00:35:26.556 --> 00:35:28.626 A:middle
consider is setting limits on

00:35:28.626 --> 00:35:30.106 A:middle
text input in your app or

00:35:30.106 --> 00:35:30.506 A:middle
framework.

00:35:31.426 --> 00:35:32.766 A:middle
And now I'd like to emphasize

00:35:32.766 --> 00:35:33.766 A:middle
that this might not always make

00:35:33.816 --> 00:35:34.456 A:middle
sense to do.

00:35:34.756 --> 00:35:36.106 A:middle
So, for example, if your app is

00:35:36.106 --> 00:35:37.606 A:middle
an authoring tool like that

00:35:37.606 --> 00:35:38.736 A:middle
journal app that Emily showed

00:35:38.736 --> 00:35:40.336 A:middle
earlier, it wouldn't really make

00:35:40.336 --> 00:35:42.066 A:middle
any sense to set a limit on the

00:35:42.066 --> 00:35:42.986 A:middle
length of the text there.

00:35:43.296 --> 00:35:44.276 A:middle
So if it doesn't make sense, you

00:35:44.516 --> 00:35:45.626 A:middle
shouldn't do it.

00:35:46.416 --> 00:35:47.996 A:middle
But in contrast, if your phone

00:35:47.996 --> 00:35:49.436 A:middle
app has a text field for

00:35:49.436 --> 00:35:50.886 A:middle
assigning a nickname to an

00:35:50.886 --> 00:35:52.676 A:middle
account, you probably have some

00:35:52.676 --> 00:35:53.816 A:middle
idea what a reasonable limit

00:35:53.816 --> 00:35:54.266 A:middle
would be there.

00:35:54.846 --> 00:35:57.456 A:middle
And it's a good idea to set

00:35:57.456 --> 00:35:58.926 A:middle
these limits because all text

00:35:58.926 --> 00:36:00.916 A:middle
input is potentially untrusted.


00:35:58.926 --> 00:36:00.916 A:middle
input is potentially untrusted.

00:36:02.086 --> 00:36:03.926 A:middle
When you allow text input, you

00:36:03.926 --> 00:36:05.906 A:middle
allow copy and paste.

00:36:05.906 --> 00:36:08.206 A:middle
You don't know what kind of text

00:36:08.206 --> 00:36:08.986 A:middle
can be pasted in there.

00:36:10.126 --> 00:36:10.926 A:middle
It could be anything.

00:36:10.926 --> 00:36:12.016 A:middle
It could be a string with

00:36:12.016 --> 00:36:12.766 A:middle
malicious character

00:36:12.766 --> 00:36:14.436 A:middle
combinations, or it could just

00:36:14.436 --> 00:36:15.816 A:middle
be a string that's really,

00:36:16.126 --> 00:36:19.236 A:middle
really, really long.

00:36:20.566 --> 00:36:21.796 A:middle
And even though long strings

00:36:21.796 --> 00:36:23.116 A:middle
like that may not be malicious

00:36:23.116 --> 00:36:24.336 A:middle
in themselves, it could cause

00:36:24.336 --> 00:36:25.526 A:middle
your app to freeze or hang.

00:36:26.296 --> 00:36:27.386 A:middle
So if you have a text field

00:36:27.676 --> 00:36:29.276 A:middle
that's intended for one line of

00:36:29.276 --> 00:36:30.816 A:middle
input and someone pastes the

00:36:30.816 --> 00:36:32.126 A:middle
entire contents of "War and

00:36:32.126 --> 00:36:33.536 A:middle
Peace" into it, which is about

00:36:33.856 --> 00:36:35.106 A:middle
3.1 million characters in

00:36:35.106 --> 00:36:37.576 A:middle
English, is that reasonable?

00:36:39.636 --> 00:36:41.226 A:middle
Probably not.

00:36:42.316 --> 00:36:43.916 A:middle
So this is a great example of a

00:36:43.916 --> 00:36:45.106 A:middle
case where it makes sense to

00:36:45.106 --> 00:36:46.656 A:middle
impose your own limits.

00:36:47.926 --> 00:36:49.376 A:middle
And here are the recommended

00:36:49.376 --> 00:36:50.316 A:middle
approaches for setting these

00:36:50.316 --> 00:36:50.926 A:middle
kinds of limits.

00:36:51.766 --> 00:36:52.856 A:middle
You want to validate the input

00:36:52.926 --> 00:36:54.236 A:middle
string before it's set on the

00:36:54.236 --> 00:36:54.756 A:middle
text field.

00:36:55.186 --> 00:36:56.846 A:middle
And so for UITextFields, you can

00:36:56.846 --> 00:36:57.706 A:middle
do this by using

00:36:57.986 --> 00:36:59.066 A:middle
UITextFieldDelegate.

00:36:59.936 --> 00:37:01.356 A:middle
And for NSTextFields, you should


00:36:59.936 --> 00:37:01.356 A:middle
And for NSTextFields, you should

00:37:01.356 --> 00:37:03.126 A:middle
use a custom NSFormatter to

00:37:03.126 --> 00:37:04.426 A:middle
implement your validation logic.

00:37:04.426 --> 00:37:07.656 A:middle
Oh, and we've also got some

00:37:07.796 --> 00:37:09.146 A:middle
additional security enhancements

00:37:09.146 --> 00:37:09.706 A:middle
coming your way.

00:37:10.386 --> 00:37:11.396 A:middle
So keep an eye out for them in

00:37:11.396 --> 00:37:12.816 A:middle
the release notes and come see

00:37:12.816 --> 00:37:13.856 A:middle
us at the labs this week if you

00:37:13.856 --> 00:37:14.526 A:middle
have any questions.

00:37:15.176 --> 00:37:16.666 A:middle
All right.

00:37:16.876 --> 00:37:18.886 A:middle
We're just about out of time so

00:37:18.886 --> 00:37:19.456 A:middle
let's recap.

00:37:20.436 --> 00:37:21.516 A:middle
You know how to choose the right

00:37:21.516 --> 00:37:23.286 A:middle
control, customization point,

00:37:23.786 --> 00:37:25.466 A:middle
and customization approach and

00:37:25.466 --> 00:37:26.626 A:middle
you know the best practices to

00:37:26.626 --> 00:37:27.646 A:middle
follow in the areas of

00:37:27.646 --> 00:37:29.326 A:middle
correctness, performance, and

00:37:29.326 --> 00:37:29.876 A:middle
security.

00:37:30.626 --> 00:37:32.066 A:middle
So use this knowledge to go

00:37:32.066 --> 00:37:33.476 A:middle
forth and create great things

00:37:33.706 --> 00:37:34.216 A:middle
with TextKit.

00:37:35.636 --> 00:37:36.946 A:middle
Oh, and before you go, here's

00:37:36.946 --> 00:37:38.066 A:middle
that super important more

00:37:38.066 --> 00:37:39.346 A:middle
information link where you can

00:37:39.346 --> 00:37:40.506 A:middle
find all of the great past

00:37:40.506 --> 00:37:41.766 A:middle
sessions and documentation that

00:37:41.766 --> 00:37:42.596 A:middle
we've referenced today.

00:37:43.096 --> 00:37:44.326 A:middle
And come visit us at the labs on

00:37:44.326 --> 00:37:45.036 A:middle
Thursday and Friday.

00:37:45.596 --> 00:37:47.396 A:middle
Thank you and enjoy the rest of

00:37:47.396 --> 00:37:47.976 A:middle
the conference.

00:37:48.016 --> 00:37:50.000 A:middle
[ Applause ]
