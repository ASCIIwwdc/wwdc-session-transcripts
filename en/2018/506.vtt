WEBVTT

00:00:07.516 --> 00:00:15.500 A:middle
[ Music ]

00:00:17.516 --> 00:00:20.976 A:middle
[ Applause ]

00:00:21.476 --> 00:00:24.166 A:middle
&gt;&gt; Hello, everyone, and welcome.

00:00:25.086 --> 00:00:26.766 A:middle
My name is Betim Deva, and I'm

00:00:26.766 --> 00:00:28.216 A:middle
an engineer on the Apple Music

00:00:28.256 --> 00:00:30.336 A:middle
team, and I'm excited to share

00:00:30.336 --> 00:00:32.266 A:middle
with you some updates that we

00:00:32.266 --> 00:00:33.296 A:middle
have made to MusicKit.

00:00:35.106 --> 00:00:36.566 A:middle
MusicKit was announced last

00:00:36.566 --> 00:00:38.626 A:middle
year, and it enabled developers

00:00:38.626 --> 00:00:41.366 A:middle
like yourselves bring customized

00:00:41.366 --> 00:00:43.136 A:middle
music experiences within their

00:00:43.136 --> 00:00:43.556 A:middle
apps.

00:00:44.476 --> 00:00:46.476 A:middle
This year, we are announcing

00:00:46.476 --> 00:00:48.796 A:middle
Apple Music on the web, which

00:00:48.796 --> 00:00:50.486 A:middle
will allow you to bring the same

00:00:50.486 --> 00:00:52.616 A:middle
kind of music experiences for

00:00:52.616 --> 00:00:53.586 A:middle
your websites.

00:00:54.766 --> 00:00:56.856 A:middle
We have a great web player ready

00:00:56.856 --> 00:00:58.916 A:middle
for you to embed, and we are

00:00:58.916 --> 00:01:00.796 A:middle
introducing MusicKit for the


00:00:58.916 --> 00:01:00.796 A:middle
introducing MusicKit for the

00:01:00.796 --> 00:01:02.976 A:middle
web, which will allow you to

00:01:03.046 --> 00:01:05.656 A:middle
integrate Apple Music into your

00:01:05.656 --> 00:01:06.456 A:middle
websites.

00:01:07.066 --> 00:01:09.006 A:middle
We will talk more about Apple

00:01:09.006 --> 00:01:10.546 A:middle
Music on the web in a little

00:01:10.546 --> 00:01:12.566 A:middle
bit, but first, let's take a

00:01:12.566 --> 00:01:14.196 A:middle
look at some exciting updates on

00:01:14.196 --> 00:01:14.736 A:middle
MusicKit.

00:01:15.256 --> 00:01:18.906 A:middle
It's been great to see how app

00:01:18.906 --> 00:01:20.816 A:middle
developers have incorporated

00:01:21.196 --> 00:01:23.466 A:middle
Apple Music into their apps.

00:01:24.026 --> 00:01:27.026 A:middle
For instance, we all know and

00:01:27.026 --> 00:01:28.906 A:middle
love making music videos with

00:01:28.906 --> 00:01:29.986 A:middle
musical.ly.

00:01:30.636 --> 00:01:32.086 A:middle
When you find new music in this

00:01:32.086 --> 00:01:34.036 A:middle
app, you can easily add it to a

00:01:34.036 --> 00:01:34.586 A:middle
playlist.

00:01:36.216 --> 00:01:38.726 A:middle
Houdini makes joining Apple

00:01:38.726 --> 00:01:39.716 A:middle
Music simple.

00:01:40.306 --> 00:01:42.366 A:middle
It allows you to transfer your

00:01:42.366 --> 00:01:44.336 A:middle
playlists to Apple Music.

00:01:45.716 --> 00:01:48.166 A:middle
And Stationhead turns your

00:01:48.166 --> 00:01:50.596 A:middle
playlists to radio stations.

00:01:50.976 --> 00:01:53.126 A:middle
It allows you to broadcast your

00:01:53.126 --> 00:01:55.406 A:middle
music and your voice to the

00:01:55.406 --> 00:01:56.046 A:middle
world.

00:01:57.556 --> 00:02:00.536 A:middle
And lastly, Ola is the biggest


00:01:57.556 --> 00:02:00.536 A:middle
And lastly, Ola is the biggest

00:02:00.536 --> 00:02:02.286 A:middle
ride-hailing service in India.

00:02:03.106 --> 00:02:04.296 A:middle
We have been partnering with

00:02:04.296 --> 00:02:06.466 A:middle
them to bring the Apple Music

00:02:06.466 --> 00:02:08.705 A:middle
experience within their fleet of

00:02:08.746 --> 00:02:09.256 A:middle
cars.

00:02:10.876 --> 00:02:13.406 A:middle
Since MusicKit was announced

00:02:13.406 --> 00:02:15.466 A:middle
last year, we got a lot of

00:02:15.466 --> 00:02:18.276 A:middle
feedback for providing a way to

00:02:18.276 --> 00:02:20.406 A:middle
look up content using the

00:02:20.406 --> 00:02:22.926 A:middle
International Standard Recording

00:02:22.926 --> 00:02:24.796 A:middle
Code known as ISRC.

00:02:24.846 --> 00:02:28.336 A:middle
I am happy to report that this

00:02:28.336 --> 00:02:30.156 A:middle
has been added, and it will

00:02:30.156 --> 00:02:31.986 A:middle
enable you to precisely match

00:02:32.246 --> 00:02:35.296 A:middle
songs and music videos in the

00:02:35.296 --> 00:02:37.066 A:middle
Apple Music catalog from

00:02:37.066 --> 00:02:38.916 A:middle
virtually any other source.

00:02:40.596 --> 00:02:43.036 A:middle
Another enhancement to MusicKit

00:02:43.626 --> 00:02:45.526 A:middle
is the addition of iCloud Music

00:02:45.526 --> 00:02:46.686 A:middle
Library APIs.

00:02:48.096 --> 00:02:50.026 A:middle
Once the user has given

00:02:50.026 --> 00:02:52.736 A:middle
authorization to your app, you

00:02:52.736 --> 00:02:54.396 A:middle
can now provide them with ways

00:02:54.756 --> 00:02:56.486 A:middle
to interact with their music

00:02:56.486 --> 00:02:59.206 A:middle
library from within your app.


00:03:00.676 --> 00:03:03.966 A:middle
These APIs enable your users to

00:03:03.966 --> 00:03:08.176 A:middle
browse, search, and add content

00:03:08.176 --> 00:03:09.506 A:middle
to their music library.

00:03:10.816 --> 00:03:12.246 A:middle
You can also provide a way for

00:03:12.246 --> 00:03:14.506 A:middle
your user to create playlists

00:03:14.976 --> 00:03:16.736 A:middle
and add songs to an existing

00:03:16.776 --> 00:03:18.846 A:middle
playlist, all from within your

00:03:19.946 --> 00:03:20.000 A:middle
app.

00:03:24.256 --> 00:03:26.146 A:middle
Last year, we gave you Apple

00:03:26.146 --> 00:03:28.366 A:middle
Music APIs for our catalog.

00:03:29.576 --> 00:03:32.366 A:middle
This year, we added the iCloud

00:03:32.366 --> 00:03:33.876 A:middle
Music Library APIs.

00:03:34.476 --> 00:03:35.906 A:middle
We think this is a great set of

00:03:35.906 --> 00:03:37.276 A:middle
music APIs.

00:03:38.266 --> 00:03:40.196 A:middle
If you have been using our

00:03:40.196 --> 00:03:42.576 A:middle
existing iTunes Search API, we

00:03:42.616 --> 00:03:44.916 A:middle
encourage you to migrate over to

00:03:44.916 --> 00:03:48.126 A:middle
Apple Music APIs now.

00:03:48.356 --> 00:03:50.246 A:middle
Now, I would like to invite my

00:03:50.246 --> 00:03:52.466 A:middle
colleague DJ to the stage to

00:03:52.466 --> 00:03:53.916 A:middle
talk about Apple Music on the

00:03:53.916 --> 00:03:54.216 A:middle
web.

00:03:54.716 --> 00:03:55.126 A:middle
Thank you.

00:03:56.516 --> 00:04:00.836 A:middle
[ Applause ]


00:03:56.516 --> 00:04:00.836 A:middle
[ Applause ]

00:04:01.336 --> 00:04:01.846 A:middle
&gt;&gt; Thank you, Betim.

00:04:03.256 --> 00:04:04.396 A:middle
This year, we're excited to be

00:04:04.396 --> 00:04:05.676 A:middle
announcing MusicKit on the web.

00:04:06.476 --> 00:04:08.306 A:middle
Last year, we talked all about

00:04:08.346 --> 00:04:09.686 A:middle
the great ways for you to add

00:04:09.686 --> 00:04:11.236 A:middle
Apple Music to your iOS apps.

00:04:12.166 --> 00:04:13.186 A:middle
This year, we're bringing all of

00:04:13.186 --> 00:04:14.396 A:middle
that same great functionality to

00:04:14.396 --> 00:04:14.786 A:middle
the web.

00:04:16.456 --> 00:04:17.435 A:middle
So let's talk about the

00:04:17.435 --> 00:04:18.896 A:middle
components that make up MusicKit

00:04:18.896 --> 00:04:21.906 A:middle
on the web.

00:04:22.106 --> 00:04:23.416 A:middle
Last year, we added access to

00:04:23.416 --> 00:04:24.906 A:middle
the entire Apple Music catalog

00:04:24.906 --> 00:04:26.496 A:middle
with a REST API.

00:04:27.056 --> 00:04:28.646 A:middle
This year, as Betim mentioned,

00:04:29.286 --> 00:04:30.526 A:middle
we're launching new additions to

00:04:30.526 --> 00:04:32.006 A:middle
that REST API that'll let you

00:04:32.006 --> 00:04:33.786 A:middle
access the iCloud Music Library

00:04:33.786 --> 00:04:34.766 A:middle
for the logged-in user.

00:04:36.276 --> 00:04:37.386 A:middle
We're also launching the

00:04:37.386 --> 00:04:38.936 A:middle
MusicKit JS library.

00:04:39.606 --> 00:04:41.766 A:middle
Makes it really easy to use both

00:04:41.766 --> 00:04:42.816 A:middle
of those REST APIs in the

00:04:42.816 --> 00:04:46.296 A:middle
browser, and it gives your users

00:04:46.296 --> 00:04:47.486 A:middle
the ability to play back full

00:04:47.486 --> 00:04:49.266 A:middle
songs from the Apple Music

00:04:49.266 --> 00:04:51.026 A:middle
catalog and from the iCloud

00:04:51.026 --> 00:04:52.356 A:middle
Music Library right in their

00:04:52.356 --> 00:04:52.756 A:middle
browser.

00:04:56.616 --> 00:04:58.206 A:middle
Before we dig into MusicKit JS,

00:04:58.206 --> 00:04:59.906 A:middle
I want to show you the Apple

00:04:59.906 --> 00:05:00.876 A:middle
Music web player.


00:04:59.906 --> 00:05:00.876 A:middle
Music web player.

00:05:02.836 --> 00:05:04.646 A:middle
A few weeks ago, we launched a

00:05:04.646 --> 00:05:05.616 A:middle
new embeddable player.

00:05:06.586 --> 00:05:08.306 A:middle
It works great both on the

00:05:08.306 --> 00:05:10.176 A:middle
desktop and on mobile browsers.

00:05:11.996 --> 00:05:13.496 A:middle
These embeddable players are a

00:05:13.496 --> 00:05:15.016 A:middle
simple way for you to add full

00:05:15.016 --> 00:05:16.186 A:middle
song playback from the Apple

00:05:16.186 --> 00:05:17.626 A:middle
Music catalog right to your

00:05:17.626 --> 00:05:18.246 A:middle
website.

00:05:18.506 --> 00:05:20.986 A:middle
We have players for a single

00:05:20.986 --> 00:05:22.696 A:middle
song, an album, or a whole

00:05:22.696 --> 00:05:23.176 A:middle
playlist.

00:05:24.496 --> 00:05:26.346 A:middle
You can find the embed code on

00:05:26.346 --> 00:05:28.636 A:middle
the Apple Music preview pages or

00:05:28.636 --> 00:05:29.496 A:middle
right within the embeddable

00:05:29.496 --> 00:05:30.236 A:middle
player itself.

00:05:31.316 --> 00:05:32.816 A:middle
All you have to do is copy and

00:05:32.816 --> 00:05:34.156 A:middle
paste into your own website.

00:05:34.156 --> 00:05:36.116 A:middle
These embeddable players are

00:05:36.116 --> 00:05:38.526 A:middle
great for full song playback on

00:05:38.526 --> 00:05:40.036 A:middle
third-party websites, and we've

00:05:40.036 --> 00:05:41.466 A:middle
also enabled that functionality

00:05:41.466 --> 00:05:42.646 A:middle
on the Apple Music preview

00:05:42.646 --> 00:05:43.026 A:middle
pages.

00:05:43.596 --> 00:05:47.366 A:middle
So the embeds are powered by

00:05:47.506 --> 00:05:49.706 A:middle
MusicKit JS, which we're also

00:05:49.706 --> 00:05:50.766 A:middle
releasing so you can build your

00:05:50.766 --> 00:05:52.086 A:middle
own great music experiences.

00:05:53.636 --> 00:05:54.696 A:middle
So let's talk about the

00:05:54.696 --> 00:05:55.916 A:middle
functionality.

00:05:58.256 --> 00:05:59.936 A:middle
First and most importantly,

00:05:59.936 --> 00:06:01.046 A:middle
you'll be able to play back full


00:05:59.936 --> 00:06:01.046 A:middle
you'll be able to play back full

00:06:01.046 --> 00:06:02.856 A:middle
songs from Apple Music in the

00:06:02.856 --> 00:06:03.246 A:middle
browser.

00:06:04.076 --> 00:06:05.536 A:middle
It works on all modern browsers

00:06:05.536 --> 00:06:06.746 A:middle
without the need for any plug

00:06:06.746 --> 00:06:08.646 A:middle
ins or external dependencies.

00:06:09.436 --> 00:06:11.156 A:middle
You can use it on its own or

00:06:11.216 --> 00:06:12.626 A:middle
with any JavaScript framework of

00:06:12.626 --> 00:06:13.066 A:middle
your choice.

00:06:14.796 --> 00:06:15.976 A:middle
So for playback, we need to

00:06:15.976 --> 00:06:16.856 A:middle
authorize the user.

00:06:18.046 --> 00:06:19.426 A:middle
We'll handle that for you to

00:06:19.426 --> 00:06:20.606 A:middle
ensure that the user is an Apple

00:06:20.606 --> 00:06:21.376 A:middle
Music subscriber.

00:06:21.916 --> 00:06:24.066 A:middle
The JavaScript library is going

00:06:24.066 --> 00:06:25.326 A:middle
to keep a queue of songs so you

00:06:25.326 --> 00:06:26.756 A:middle
can play back a full album or a

00:06:26.756 --> 00:06:27.336 A:middle
whole playlist.

00:06:27.446 --> 00:06:31.536 A:middle
Once you have that queue of

00:06:31.536 --> 00:06:32.486 A:middle
songs, you'll be able to

00:06:32.486 --> 00:06:32.866 A:middle
control.

00:06:33.006 --> 00:06:34.466 A:middle
You'll be able to play, pause,

00:06:34.466 --> 00:06:36.256 A:middle
and skip to the previous or skip

00:06:36.256 --> 00:06:37.466 A:middle
to the next track.

00:06:38.676 --> 00:06:39.736 A:middle
And we're also going to keep

00:06:39.736 --> 00:06:40.786 A:middle
track of the Now Playing

00:06:40.786 --> 00:06:42.606 A:middle
metadata for the song that's

00:06:42.606 --> 00:06:43.916 A:middle
currently playing or currently

00:06:43.916 --> 00:06:45.446 A:middle
loading so you can render your

00:06:45.446 --> 00:06:47.126 A:middle
UI off of it.

00:06:48.596 --> 00:06:49.836 A:middle
So let's talk about how we would

00:06:49.836 --> 00:06:50.896 A:middle
build a simple player for the

00:06:50.896 --> 00:06:51.146 A:middle
web.

00:06:51.576 --> 00:06:53.066 A:middle
We're going to include the

00:06:53.066 --> 00:06:54.566 A:middle
JavaScript library.

00:06:56.676 --> 00:06:57.876 A:middle
Then, you need to provide your

00:06:57.876 --> 00:06:58.686 A:middle
developer token.

00:06:58.936 --> 00:07:00.296 A:middle
You can generate this using your


00:06:58.936 --> 00:07:00.296 A:middle
You can generate this using your

00:07:00.296 --> 00:07:00.976 A:middle
private key.

00:07:01.506 --> 00:07:05.466 A:middle
We have a really great way to

00:07:05.466 --> 00:07:07.606 A:middle
use declarative HTML markup.

00:07:07.796 --> 00:07:08.696 A:middle
You can add some markup to your

00:07:08.696 --> 00:07:09.156 A:middle
page.

00:07:09.196 --> 00:07:10.636 A:middle
For example, buttons for sign

00:07:10.636 --> 00:07:11.906 A:middle
in, sign out, or playback

00:07:11.906 --> 00:07:12.376 A:middle
controls.

00:07:13.776 --> 00:07:15.236 A:middle
We'll handle wiring up those

00:07:15.236 --> 00:07:16.866 A:middle
elements to the appropriate

00:07:16.866 --> 00:07:17.856 A:middle
functions in MusicKit.

00:07:18.346 --> 00:07:20.366 A:middle
Then, we're going to add some

00:07:20.366 --> 00:07:21.026 A:middle
play buttons.

00:07:21.026 --> 00:07:22.596 A:middle
We'll use some content IDs or

00:07:22.596 --> 00:07:24.456 A:middle
some URLs from the Apple Music

00:07:24.456 --> 00:07:26.236 A:middle
catalog that'll let the users

00:07:26.236 --> 00:07:26.876 A:middle
start playback.

00:07:27.236 --> 00:07:31.446 A:middle
So let's take a look at the code

00:07:31.446 --> 00:07:31.716 A:middle
for this.

00:07:31.716 --> 00:07:33.476 A:middle
You're going to include the

00:07:33.476 --> 00:07:34.926 A:middle
JavaScript library, and we're

00:07:34.926 --> 00:07:36.176 A:middle
going to host this on our CDN

00:07:36.176 --> 00:07:36.566 A:middle
for you.

00:07:37.086 --> 00:07:39.016 A:middle
We're going to add some buttons

00:07:39.256 --> 00:07:41.286 A:middle
for signing in and signing out.

00:07:42.496 --> 00:07:43.656 A:middle
Some buttons to control

00:07:43.656 --> 00:07:44.156 A:middle
playback.

00:07:44.366 --> 00:07:45.386 A:middle
Here we have a play button, a

00:07:45.386 --> 00:07:46.766 A:middle
pause button, and a next track

00:07:46.766 --> 00:07:46.936 A:middle
button.

00:07:46.936 --> 00:07:50.836 A:middle
We'll add some elements that we

00:07:50.836 --> 00:07:52.286 A:middle
will render in metadata about

00:07:52.286 --> 00:07:53.126 A:middle
what's currently playing.

00:07:53.546 --> 00:07:54.636 A:middle
Here we can get the playlist

00:07:54.636 --> 00:07:56.336 A:middle
name, the title, and the artist

00:07:56.336 --> 00:07:57.046 A:middle
name, for example.

00:07:57.476 --> 00:07:59.746 A:middle
And then, we have some elements

00:07:59.746 --> 00:08:01.736 A:middle
that let you show the progress


00:07:59.746 --> 00:08:01.736 A:middle
that let you show the progress

00:08:01.736 --> 00:08:02.746 A:middle
through the track that's

00:08:02.746 --> 00:08:04.566 A:middle
currently playing -- the

00:08:04.566 --> 00:08:05.926 A:middle
playback duration, the playback

00:08:05.926 --> 00:08:07.166 A:middle
time, and the playback progress.

00:08:07.656 --> 00:08:10.376 A:middle
So I'd like to bring up Jae Hess

00:08:10.376 --> 00:08:12.166 A:middle
to the stage to show you how to

00:08:12.166 --> 00:08:13.866 A:middle
use the MusicKit JS to build

00:08:13.866 --> 00:08:15.196 A:middle
that simple player that we just

00:08:15.796 --> 00:08:16.856 A:middle
talked about.

00:08:17.516 --> 00:08:20.016 A:middle
[ Applause ]

00:08:20.516 --> 00:08:21.056 A:middle
&gt;&gt; Thanks, DJ.

00:08:22.806 --> 00:08:24.556 A:middle
So we're going to get started

00:08:24.556 --> 00:08:27.586 A:middle
here, and I have a basic HTML

00:08:27.586 --> 00:08:29.106 A:middle
template on the right side in

00:08:29.156 --> 00:08:30.746 A:middle
Xcode that's already linked to

00:08:30.746 --> 00:08:32.196 A:middle
the MusicKit JS library.

00:08:32.466 --> 00:08:34.586 A:middle
And on the left side, I have a

00:08:34.586 --> 00:08:35.966 A:middle
Safari window open that's

00:08:35.966 --> 00:08:37.405 A:middle
running a live reload server.

00:08:37.616 --> 00:08:38.956 A:middle
This way, any changes I make to

00:08:38.956 --> 00:08:40.486 A:middle
my markup will be reflected

00:08:40.486 --> 00:08:42.196 A:middle
directly on the left-hand side.

00:08:42.756 --> 00:08:45.996 A:middle
To get started with MusicKit JS,

00:08:45.996 --> 00:08:47.626 A:middle
the first thing we need to do is

00:08:47.626 --> 00:08:49.046 A:middle
configure it for our use.

00:08:49.426 --> 00:08:51.076 A:middle
And with declarative markup, we

00:08:51.076 --> 00:08:52.026 A:middle
have a very simple way to do

00:08:52.026 --> 00:08:53.296 A:middle
that using meta tags.

00:08:53.816 --> 00:08:58.266 A:middle
We can specify our application

00:08:58.266 --> 00:09:00.136 A:middle
name as well as provide our


00:08:58.266 --> 00:09:00.136 A:middle
name as well as provide our

00:09:00.136 --> 00:09:01.096 A:middle
developer token.

00:09:01.096 --> 00:09:05.936 A:middle
Next, to get the functionality

00:09:05.936 --> 00:09:08.396 A:middle
we want, we're going to put a

00:09:08.396 --> 00:09:09.776 A:middle
button on the page for the user

00:09:09.776 --> 00:09:10.176 A:middle
to click.

00:09:10.276 --> 00:09:11.356 A:middle
And when this button is clicked,

00:09:11.356 --> 00:09:13.516 A:middle
it's going to take a playlist

00:09:13.516 --> 00:09:14.676 A:middle
from the Apple Music catalog,

00:09:15.306 --> 00:09:17.036 A:middle
set a playback queue, and start

00:09:17.036 --> 00:09:18.026 A:middle
playback in the browser.

00:09:18.506 --> 00:09:20.746 A:middle
Here I'm feeding a content URL

00:09:20.886 --> 00:09:22.256 A:middle
that I got from iTunes on the

00:09:22.256 --> 00:09:24.166 A:middle
desktop for a specific playlist

00:09:24.166 --> 00:09:25.166 A:middle
I'd like to embed.

00:09:26.426 --> 00:09:27.846 A:middle
This playlist is the "Today at

00:09:27.846 --> 00:09:29.000 A:middle
Apple Music" playlist.

00:09:34.516 --> 00:09:41.016 A:middle
[ Music ]

00:09:41.516 --> 00:09:42.836 A:middle
And so with that 1 simple line

00:09:42.836 --> 00:09:44.866 A:middle
of code, we have full playback

00:09:45.136 --> 00:09:47.936 A:middle
of the "Today at Apple" playlist

00:09:49.336 --> 00:09:51.776 A:middle
in the browser.

00:09:51.946 --> 00:09:53.436 A:middle
While this is great and it

00:09:53.436 --> 00:09:55.076 A:middle
offers a really good solution,

00:09:55.546 --> 00:09:56.876 A:middle
we probably want to add more

00:09:56.876 --> 00:09:58.146 A:middle
controls and more functionality

00:09:58.146 --> 00:09:59.176 A:middle
for the user to use.


00:10:00.146 --> 00:10:01.466 A:middle
The first thing we want to do is

00:10:01.466 --> 00:10:02.816 A:middle
allow the users of your

00:10:02.816 --> 00:10:03.926 A:middle
application, which are

00:10:03.926 --> 00:10:05.396 A:middle
subscribers of Apple Music, to

00:10:05.396 --> 00:10:06.336 A:middle
log in and log out.

00:10:06.806 --> 00:10:08.476 A:middle
And we'll do that by adding

00:10:08.536 --> 00:10:09.666 A:middle
Authorize and Unauthorize

00:10:09.696 --> 00:10:13.316 A:middle
buttons to the page.

00:10:13.376 --> 00:10:15.946 A:middle
We use the Apple Music Authorize

00:10:15.946 --> 00:10:19.706 A:middle
and Unauthorize attribute, and

00:10:19.706 --> 00:10:21.376 A:middle
MusicKit JS manages the state of

00:10:21.376 --> 00:10:22.816 A:middle
displaying those buttons for me.

00:10:22.946 --> 00:10:24.576 A:middle
I've logged in previously, so

00:10:24.576 --> 00:10:25.826 A:middle
you see that the state reflects,

00:10:25.826 --> 00:10:28.000 A:middle
"Sign out of Apple Music."

00:10:32.276 --> 00:10:33.776 A:middle
Next, we want to add some

00:10:33.776 --> 00:10:34.746 A:middle
playback controls.

00:10:35.346 --> 00:10:37.116 A:middle
And we can specify these using

00:10:37.116 --> 00:10:39.156 A:middle
the Apple Music attribute, and

00:10:39.156 --> 00:10:41.206 A:middle
we can specify things like skip

00:10:41.276 --> 00:10:47.656 A:middle
to previous item, pause, play,

00:10:48.156 --> 00:10:52.000 A:middle
skip to next item.

00:10:56.556 --> 00:10:58.276 A:middle
We can add Now Playing

00:10:58.276 --> 00:10:59.696 A:middle
information for the user to see

00:10:59.696 --> 00:11:00.756 A:middle
the current playing item in the


00:10:59.696 --> 00:11:00.756 A:middle
the current playing item in the

00:11:00.756 --> 00:11:01.086 A:middle
queue.

00:11:02.596 --> 00:11:03.596 A:middle
And here I've specified the

00:11:03.596 --> 00:11:05.316 A:middle
playlist artwork URL, and I can

00:11:05.316 --> 00:11:06.796 A:middle
specify the height and width I

00:11:06.796 --> 00:11:07.616 A:middle
would like that to render.

00:11:08.236 --> 00:11:09.706 A:middle
And I also have access to any

00:11:09.706 --> 00:11:11.196 A:middle
data attribute that's available

00:11:11.196 --> 00:11:11.996 A:middle
on the media item.

00:11:12.646 --> 00:11:14.176 A:middle
So I can specify things like

00:11:15.076 --> 00:11:18.636 A:middle
playlist name, the title of the

00:11:18.636 --> 00:11:20.276 A:middle
track, as well as the artist

00:11:20.276 --> 00:11:20.496 A:middle
name.

00:11:21.716 --> 00:11:22.996 A:middle
Underneath, I've specified that

00:11:22.996 --> 00:11:23.646 A:middle
I would like the current

00:11:23.646 --> 00:11:26.116 A:middle
playback time to be loaded into

00:11:26.116 --> 00:11:28.966 A:middle
the HTML time element.

00:11:29.036 --> 00:11:31.376 A:middle
So when the page reloaded,

00:11:31.686 --> 00:11:33.036 A:middle
nothing's there for Now Playing.

00:11:33.036 --> 00:11:33.916 A:middle
That's because we aren't playing

00:11:33.916 --> 00:11:35.856 A:middle
anything, so let's fix that by

00:11:35.856 --> 00:11:37.076 A:middle
adding buttons that would allow

00:11:37.076 --> 00:11:39.306 A:middle
the user to queue up playlists.

00:11:39.856 --> 00:11:44.206 A:middle
I'm going to paste in 16

00:11:44.456 --> 00:11:45.026 A:middle
playlists.

00:11:45.376 --> 00:11:48.826 A:middle
And when the user--

00:11:51.516 --> 00:11:58.036 A:middle
[ Music ]

00:11:58.536 --> 00:11:59.366 A:middle
Now, using the playback

00:11:59.366 --> 00:12:01.536 A:middle
controls, I can pause playback.


00:11:59.366 --> 00:12:01.536 A:middle
controls, I can pause playback.

00:12:01.886 --> 00:12:03.136 A:middle
I can skip to the next item.

00:12:05.516 --> 00:12:09.186 A:middle
[ Music ]

00:12:09.686 --> 00:12:16.606 A:middle
I could even go back to that.

00:12:18.166 --> 00:12:21.076 A:middle
Now, MusicKit JS offers great

00:12:21.076 --> 00:12:22.256 A:middle
solutions with a declarative

00:12:22.256 --> 00:12:24.086 A:middle
markup, but it also offers a

00:12:24.086 --> 00:12:26.306 A:middle
full JavaScript API, so I'd like

00:12:26.306 --> 00:12:28.406 A:middle
to bring DJ back up on stage to

00:12:29.046 --> 00:12:30.206 A:middle
go over the JavaScript API with

00:12:30.206 --> 00:12:30.306 A:middle
you.

00:12:30.736 --> 00:12:30.996 A:middle
Thank you.

00:12:32.516 --> 00:12:38.236 A:middle
[ Applause ]

00:12:38.736 --> 00:12:39.556 A:middle
&gt;&gt; Thank you, Jae.

00:12:40.156 --> 00:12:43.686 A:middle
The declarative markup is a very

00:12:43.686 --> 00:12:45.946 A:middle
straightforward way to add basic

00:12:45.946 --> 00:12:46.646 A:middle
functionality.

00:12:47.436 --> 00:12:48.326 A:middle
Let's talk about some more

00:12:48.326 --> 00:12:49.246 A:middle
advanced usage.

00:12:49.246 --> 00:12:50.836 A:middle
Here we're going to write some

00:12:50.836 --> 00:12:52.016 A:middle
JavaScript to interact with

00:12:52.016 --> 00:12:53.646 A:middle
MusicKit, and let's take a look

00:12:53.646 --> 00:12:54.496 A:middle
at a couple examples.

00:12:55.746 --> 00:12:57.516 A:middle
We can fetch metadata from the

00:12:57.516 --> 00:12:58.626 A:middle
catalog by ID.

00:12:59.156 --> 00:13:03.206 A:middle
We can search for content within


00:12:59.156 --> 00:13:03.206 A:middle
We can search for content within

00:13:03.206 --> 00:13:04.156 A:middle
the Apple Music catalog.

00:13:04.796 --> 00:13:08.276 A:middle
We can browse the iCloud Music

00:13:08.276 --> 00:13:09.876 A:middle
Library for the logged-in user,

00:13:10.306 --> 00:13:11.996 A:middle
and search also works within a

00:13:11.996 --> 00:13:12.856 A:middle
library scope.

00:13:13.286 --> 00:13:16.196 A:middle
We can set and control that

00:13:16.196 --> 00:13:17.206 A:middle
queue of songs directly.

00:13:17.266 --> 00:13:20.576 A:middle
And we can react to playback

00:13:20.576 --> 00:13:22.116 A:middle
events, and we drive our UI off

00:13:23.006 --> 00:13:25.936 A:middle
of this.

00:13:26.146 --> 00:13:28.676 A:middle
So we're going to look at some

00:13:28.786 --> 00:13:28.876 A:middle
code.

00:13:28.876 --> 00:13:29.836 A:middle
First, we're going to use the

00:13:29.836 --> 00:13:33.366 A:middle
MusicKit getInstant method.

00:13:33.506 --> 00:13:34.776 A:middle
MusicKit is a singleton because

00:13:34.776 --> 00:13:35.986 A:middle
you can only play back a single

00:13:35.986 --> 00:13:37.886 A:middle
song at a time, so we're going

00:13:37.886 --> 00:13:39.026 A:middle
to assign this to that music

00:13:39.026 --> 00:13:40.896 A:middle
variable, and we'll use that

00:13:40.896 --> 00:13:41.666 A:middle
throughout the rest of these

00:13:41.666 --> 00:13:42.246 A:middle
examples.

00:13:42.756 --> 00:13:46.486 A:middle
You can look up a song by ID.

00:13:47.376 --> 00:13:49.406 A:middle
The song method takes the ID,

00:13:49.406 --> 00:13:50.416 A:middle
and then you need to supply a

00:13:50.416 --> 00:13:50.866 A:middle
callback.

00:13:50.866 --> 00:13:52.006 A:middle
And this is a promise.

00:13:52.406 --> 00:13:53.516 A:middle
You'll see that promise model

00:13:53.516 --> 00:13:54.476 A:middle
used throughout MusicKit.

00:13:54.996 --> 00:13:58.086 A:middle
You then get a content object

00:13:58.086 --> 00:13:59.486 A:middle
back, and this content object

00:13:59.486 --> 00:14:00.756 A:middle
shows you the attributes of that


00:13:59.486 --> 00:14:00.756 A:middle
shows you the attributes of that

00:14:00.756 --> 00:14:02.906 A:middle
song and any relationships --

00:14:03.216 --> 00:14:05.496 A:middle
for example, the artist and the

00:14:05.496 --> 00:14:05.826 A:middle
album.

00:14:06.116 --> 00:14:10.806 A:middle
As Betim talked about earlier,

00:14:10.806 --> 00:14:11.806 A:middle
if you don't have a content ID,

00:14:11.806 --> 00:14:13.716 A:middle
you can do the exact same lookup

00:14:14.216 --> 00:14:16.246 A:middle
with a query filter for the

00:14:16.246 --> 00:14:16.936 A:middle
ISRC.

00:14:17.766 --> 00:14:19.056 A:middle
The objects that get returned

00:14:19.376 --> 00:14:20.566 A:middle
are the same as the previous

00:14:20.566 --> 00:14:20.926 A:middle
example.

00:14:24.596 --> 00:14:27.176 A:middle
We have a batch API if you want

00:14:27.586 --> 00:14:29.766 A:middle
to return a array of song

00:14:29.766 --> 00:14:30.896 A:middle
objects with a single network

00:14:30.896 --> 00:14:33.156 A:middle
call, and this also works for

00:14:33.156 --> 00:14:35.000 A:middle
albums and playlists.

00:14:39.756 --> 00:14:41.146 A:middle
We can let the user play back

00:14:41.146 --> 00:14:42.436 A:middle
content from within their iCloud

00:14:42.436 --> 00:14:43.156 A:middle
Music Library.

00:14:44.436 --> 00:14:46.246 A:middle
So these APIs live under the

00:14:46.246 --> 00:14:47.306 A:middle
library scope.

00:14:47.976 --> 00:14:49.506 A:middle
You can get a list of songs,

00:14:49.876 --> 00:14:51.166 A:middle
albums, and playlists.

00:14:52.356 --> 00:14:54.206 A:middle
These APIs are paginated, so you

00:14:54.206 --> 00:14:56.346 A:middle
can fetch just a subset

00:14:56.466 --> 00:14:57.846 A:middle
[inaudible] manner, and you can

00:14:57.846 --> 00:15:00.066 A:middle
unload more in as the user pages


00:14:57.846 --> 00:15:00.066 A:middle
unload more in as the user pages

00:15:00.066 --> 00:15:01.416 A:middle
through or scrolls through your

00:15:01.446 --> 00:15:02.296 A:middle
application.

00:15:02.816 --> 00:15:06.026 A:middle
You could search the Apple Music

00:15:06.026 --> 00:15:06.456 A:middle
catalog.

00:15:07.086 --> 00:15:09.306 A:middle
Here we're going to search for

00:15:09.686 --> 00:15:11.446 A:middle
just songs, and then the second

00:15:11.446 --> 00:15:12.486 A:middle
example, we'll search for both

00:15:12.486 --> 00:15:13.606 A:middle
songs and albums at the same

00:15:13.606 --> 00:15:13.926 A:middle
time.

00:15:14.086 --> 00:15:16.056 A:middle
You can also supply a limit to

00:15:16.156 --> 00:15:17.296 A:middle
limit the number of results

00:15:17.296 --> 00:15:17.666 A:middle
returned.

00:15:18.176 --> 00:15:22.626 A:middle
You can do the same query, but

00:15:22.626 --> 00:15:24.046 A:middle
scope it to within the user's

00:15:24.046 --> 00:15:25.286 A:middle
iCloud Music Library.

00:15:26.036 --> 00:15:27.576 A:middle
Here we're using the exact same

00:15:27.576 --> 00:15:28.736 A:middle
search method with the same

00:15:28.736 --> 00:15:30.796 A:middle
parameters, but we're doing it

00:15:30.796 --> 00:15:32.026 A:middle
under the library scope.

00:15:35.906 --> 00:15:37.466 A:middle
Next up, we have authorization.

00:15:38.596 --> 00:15:39.526 A:middle
We're always going to handle

00:15:39.526 --> 00:15:40.726 A:middle
authorization right before it's

00:15:40.726 --> 00:15:42.496 A:middle
needed -- when playback's

00:15:42.496 --> 00:15:44.096 A:middle
starting or when you're trying

00:15:44.096 --> 00:15:45.886 A:middle
to access the iCloud Music

00:15:45.886 --> 00:15:46.866 A:middle
Library for the current

00:15:46.866 --> 00:15:47.516 A:middle
logged-in user.

00:15:48.996 --> 00:15:49.646 A:middle
You could also trigger it

00:15:49.646 --> 00:15:50.486 A:middle
yourself if you'd like.

00:15:51.156 --> 00:15:52.386 A:middle
Perhaps you want to force that

00:15:52.386 --> 00:15:53.786 A:middle
at the beginning when someone

00:15:53.786 --> 00:15:54.586 A:middle
comes to your website.

00:15:58.256 --> 00:15:59.706 A:middle
When the user presses a button,


00:16:00.716 --> 00:16:01.476 A:middle
you can start playback.

00:16:01.766 --> 00:16:03.626 A:middle
You do this using the setQueue

00:16:03.626 --> 00:16:03.996 A:middle
method.

00:16:04.946 --> 00:16:06.576 A:middle
Here we're supplying the idea of

00:16:06.576 --> 00:16:07.926 A:middle
an album, and MusicKit will

00:16:07.926 --> 00:16:10.286 A:middle
handle fetching the metadata and

00:16:10.286 --> 00:16:11.206 A:middle
then setting that queue.

00:16:12.346 --> 00:16:13.496 A:middle
If you have a content object

00:16:13.496 --> 00:16:15.206 A:middle
that we saw previously, you can

00:16:15.206 --> 00:16:16.526 A:middle
pass that in directly, and it

00:16:16.526 --> 00:16:19.946 A:middle
will figure out what to do.

00:16:19.946 --> 00:16:21.176 A:middle
setQueue returns a promise.

00:16:22.166 --> 00:16:23.276 A:middle
When the queue is fully loaded,

00:16:23.276 --> 00:16:24.206 A:middle
you can start playback.

00:16:24.256 --> 00:16:24.966 A:middle
Here we're going to start

00:16:24.966 --> 00:16:26.556 A:middle
playback automatically with

00:16:26.556 --> 00:16:30.996 A:middle
music.play.

00:16:31.206 --> 00:16:32.176 A:middle
Once those songs are playing,

00:16:32.176 --> 00:16:33.246 A:middle
you might want to be able to

00:16:33.246 --> 00:16:34.616 A:middle
control that.

00:16:34.616 --> 00:16:36.356 A:middle
You can skip to the next or

00:16:36.356 --> 00:16:37.106 A:middle
previous item.

00:16:37.146 --> 00:16:38.000 A:middle
You can pause.

00:16:42.406 --> 00:16:44.056 A:middle
You can present actions in your

00:16:44.056 --> 00:16:46.016 A:middle
UI that will let a user quickly

00:16:46.016 --> 00:16:47.196 A:middle
add those songs, albums, or

00:16:47.196 --> 00:16:49.056 A:middle
playlists they're browsing to

00:16:49.056 --> 00:16:50.366 A:middle
their own iCloud Music Library.

00:16:51.236 --> 00:16:52.746 A:middle
We have an addToLibrary method

00:16:52.746 --> 00:16:52.986 A:middle
here.

00:16:52.986 --> 00:16:58.646 A:middle
You can do that same, you can do

00:16:58.646 --> 00:17:00.216 A:middle
those same 3 calls in batch.


00:16:58.646 --> 00:17:00.216 A:middle
those same 3 calls in batch.

00:17:00.706 --> 00:17:01.886 A:middle
Here we're adding those same 4

00:17:01.886 --> 00:17:03.546 A:middle
items as the top example, but

00:17:03.846 --> 00:17:04.646 A:middle
we're going to do it in a single

00:17:04.646 --> 00:17:05.146 A:middle
network call.

00:17:05.715 --> 00:17:11.476 A:middle
So let's look at events next.

00:17:11.636 --> 00:17:12.945 A:middle
MusicKit's going to fire events

00:17:13.256 --> 00:17:14.616 A:middle
that you use to drive your UI

00:17:14.616 --> 00:17:14.806 A:middle
from.

00:17:15.185 --> 00:17:16.846 A:middle
We do this because MusicKit

00:17:16.955 --> 00:17:18.445 A:middle
needs to own the audio element

00:17:18.636 --> 00:17:19.856 A:middle
in order to do that full song

00:17:19.856 --> 00:17:20.826 A:middle
playback.

00:17:21.376 --> 00:17:22.606 A:middle
Here we're going to use

00:17:22.766 --> 00:17:24.656 A:middle
addEventListener, which is going

00:17:24.656 --> 00:17:26.016 A:middle
to be a very familiar pattern if

00:17:26.016 --> 00:17:27.146 A:middle
you've done DOM scripting in the

00:17:27.146 --> 00:17:27.606 A:middle
past.

00:17:28.856 --> 00:17:30.096 A:middle
We're going to dive into just a

00:17:30.096 --> 00:17:31.256 A:middle
couple of the events to give you

00:17:31.256 --> 00:17:31.766 A:middle
an example.

00:17:34.756 --> 00:17:36.756 A:middle
The mediaItem WillChange and the

00:17:36.756 --> 00:17:38.536 A:middle
mediaItem DidChange events fire

00:17:38.536 --> 00:17:39.766 A:middle
when the Now Playing item in the

00:17:39.766 --> 00:17:41.386 A:middle
queue changes, when the first

00:17:41.386 --> 00:17:42.586 A:middle
song you're playing transitions

00:17:42.586 --> 00:17:43.326 A:middle
to the second song.

00:17:44.266 --> 00:17:45.646 A:middle
You can use this to trigger an

00:17:45.646 --> 00:17:47.726 A:middle
update to your UI that shows the

00:17:47.726 --> 00:17:48.696 A:middle
song that's currently playing.

00:17:49.186 --> 00:17:53.106 A:middle
When you actually begin

00:17:53.106 --> 00:17:54.616 A:middle
playback, the playbackState

00:17:54.686 --> 00:17:56.096 A:middle
changes events are fired.

00:17:56.266 --> 00:17:57.326 A:middle
Here we have a will and a did

00:17:57.326 --> 00:17:58.686 A:middle
change event again.

00:17:59.616 --> 00:18:01.586 A:middle
For example, you can know when a


00:17:59.616 --> 00:18:01.586 A:middle
For example, you can know when a

00:18:01.586 --> 00:18:03.596 A:middle
song is loading, when it's

00:18:03.596 --> 00:18:04.906 A:middle
playing, or when it's paused,

00:18:05.026 --> 00:18:06.766 A:middle
and then you would update your

00:18:06.766 --> 00:18:07.416 A:middle
UI appropriately.

00:18:08.406 --> 00:18:09.646 A:middle
This event is going to give you

00:18:09.646 --> 00:18:11.076 A:middle
the old state and then the new

00:18:11.076 --> 00:18:11.826 A:middle
state that it's being

00:18:11.826 --> 00:18:12.586 A:middle
transitioned to.

00:18:16.676 --> 00:18:18.486 A:middle
As the song is playing, you'll

00:18:18.486 --> 00:18:20.296 A:middle
get playback progress change

00:18:20.296 --> 00:18:23.786 A:middle
events, and this event has the

00:18:23.786 --> 00:18:25.366 A:middle
current playback progress as a

00:18:25.366 --> 00:18:25.896 A:middle
percentage.

00:18:26.426 --> 00:18:27.476 A:middle
You can use this to update a

00:18:27.476 --> 00:18:28.166 A:middle
progress UI.

00:18:31.576 --> 00:18:32.766 A:middle
And you're also going to listen

00:18:32.766 --> 00:18:34.326 A:middle
for any media playback errors.

00:18:35.206 --> 00:18:37.196 A:middle
The mediaPlaybackError event

00:18:37.196 --> 00:18:37.806 A:middle
will fire.

00:18:39.016 --> 00:18:40.276 A:middle
You can catch that and then

00:18:40.276 --> 00:18:41.496 A:middle
present the appropriate error

00:18:41.496 --> 00:18:42.466 A:middle
messaging to the user.

00:18:42.726 --> 00:18:46.846 A:middle
So I'd like to bring up Jae back

00:18:46.846 --> 00:18:47.396 A:middle
to the stage.

00:18:47.706 --> 00:18:48.676 A:middle
He's going to take the player we

00:18:48.676 --> 00:18:50.616 A:middle
just built, and we're going to

00:18:50.616 --> 00:18:51.466 A:middle
show you how to use some of

00:18:51.466 --> 00:18:53.336 A:middle
those JavaScript APIs to add

00:18:53.726 --> 00:18:55.046 A:middle
search for the Apple Music

00:18:55.046 --> 00:18:56.866 A:middle
catalog, search within the

00:18:56.866 --> 00:18:58.936 A:middle
iCloud Music Library, and we're

00:18:58.936 --> 00:19:00.556 A:middle
also going to use events to


00:18:58.936 --> 00:19:00.556 A:middle
also going to use events to

00:19:00.556 --> 00:19:02.356 A:middle
build a simple progress bar.

00:19:03.536 --> 00:19:03.716 A:middle
Jae?

00:19:04.526 --> 00:19:05.516 A:middle
&gt;&gt; Thanks, DJ.

00:19:06.516 --> 00:19:11.686 A:middle
[ Applause ]

00:19:12.186 --> 00:19:13.996 A:middle
As DJ mentioned, we're going to

00:19:13.996 --> 00:19:15.786 A:middle
take the previous example and

00:19:15.786 --> 00:19:17.186 A:middle
we're going to extend it to add

00:19:17.556 --> 00:19:18.446 A:middle
playlist search.

00:19:19.026 --> 00:19:22.116 A:middle
Now, I've taken the, off stage,

00:19:22.116 --> 00:19:23.736 A:middle
I've removed a lot of the stuff

00:19:23.736 --> 00:19:24.716 A:middle
that we did from the previous

00:19:24.716 --> 00:19:26.046 A:middle
example, but I've left some

00:19:26.046 --> 00:19:27.046 A:middle
things in the page.

00:19:27.336 --> 00:19:29.846 A:middle
I've also included an

00:19:29.846 --> 00:19:31.276 A:middle
application JavaScript file that

00:19:31.276 --> 00:19:32.476 A:middle
we'll be adding our JavaScript

00:19:32.476 --> 00:19:33.806 A:middle
to in a moment, but I wanted to

00:19:33.806 --> 00:19:35.296 A:middle
walk through quickly the HTML

00:19:35.296 --> 00:19:35.556 A:middle
again.

00:19:36.976 --> 00:19:38.966 A:middle
The major change we've done is

00:19:38.966 --> 00:19:40.406 A:middle
we've added an input element for

00:19:40.406 --> 00:19:42.896 A:middle
the user to search as well as 2

00:19:43.226 --> 00:19:45.096 A:middle
DOM containers that we can put

00:19:45.096 --> 00:19:46.546 A:middle
those search results into.

00:19:47.176 --> 00:19:48.656 A:middle
MusicKit JS doesn't offer an

00:19:48.656 --> 00:19:50.336 A:middle
opinion on a library or a

00:19:50.336 --> 00:19:51.476 A:middle
framework that you would be

00:19:51.476 --> 00:19:53.336 A:middle
using with your application, so

00:19:53.336 --> 00:19:55.256 A:middle
for this example, our CSS has

00:19:55.256 --> 00:19:56.566 A:middle
been prebuilt off screen.

00:19:56.896 --> 00:19:58.046 A:middle
We have some template helpers

00:19:58.046 --> 00:19:59.036 A:middle
that we've built in a separate

00:19:59.036 --> 00:19:59.786 A:middle
file as well.


00:20:00.706 --> 00:20:02.846 A:middle
And we'll notice that our markup

00:20:02.846 --> 00:20:04.446 A:middle
looks a little weird on the

00:20:04.446 --> 00:20:05.346 A:middle
left-hand side.

00:20:05.856 --> 00:20:06.926 A:middle
We got a couple of buttons that

00:20:06.926 --> 00:20:09.486 A:middle
are magically floating, and the

00:20:09.486 --> 00:20:10.826 A:middle
artwork is obviously empty.

00:20:11.396 --> 00:20:15.106 A:middle
And this is because MusicKit JS

00:20:15.176 --> 00:20:16.756 A:middle
assumes that if you're

00:20:16.756 --> 00:20:18.456 A:middle
configuring it with the meta

00:20:18.456 --> 00:20:20.066 A:middle
tags, that you want declarative

00:20:20.066 --> 00:20:20.886 A:middle
markup enabled.

00:20:21.246 --> 00:20:22.256 A:middle
When you don't provide that

00:20:22.256 --> 00:20:24.156 A:middle
configuration, it assumes you're

00:20:24.156 --> 00:20:25.776 A:middle
running JavaScript and you don't

00:20:25.776 --> 00:20:26.756 A:middle
want declarative markup.

00:20:26.786 --> 00:20:28.856 A:middle
But we provide a hook for you to

00:20:28.856 --> 00:20:30.146 A:middle
re-enable that with JavaScript.

00:20:30.616 --> 00:20:35.486 A:middle
We can configure MusicKit JS by

00:20:35.486 --> 00:20:36.956 A:middle
listening to the MusicKit loaded

00:20:36.956 --> 00:20:37.946 A:middle
event that's fired on the

00:20:37.946 --> 00:20:38.456 A:middle
document.

00:20:38.976 --> 00:20:40.646 A:middle
This lets us know that MusicKit

00:20:40.646 --> 00:20:42.016 A:middle
JS is ready to be used and

00:20:42.016 --> 00:20:43.716 A:middle
configured and playback can

00:20:43.716 --> 00:20:44.076 A:middle
happen.

00:20:44.576 --> 00:20:46.926 A:middle
We can configure our application

00:20:46.926 --> 00:20:48.166 A:middle
name just like we did with the

00:20:48.166 --> 00:20:49.986 A:middle
meta tags, but we now have an

00:20:49.986 --> 00:20:50.806 A:middle
attribute that says

00:20:50.806 --> 00:20:52.226 A:middle
declarativeMarkup that we can

00:20:52.226 --> 00:20:54.756 A:middle
set to true, which lets MusicKit

00:20:54.756 --> 00:20:55.916 A:middle
JS know that we're running in a

00:20:55.916 --> 00:20:57.276 A:middle
mixed mode and we want those

00:20:57.276 --> 00:20:58.526 A:middle
declarative markup features to

00:20:58.526 --> 00:21:00.000 A:middle
be enabled.


00:21:05.636 --> 00:21:07.266 A:middle
Next, I'm going to add a search

00:21:07.266 --> 00:21:07.656 A:middle
handler.

00:21:07.906 --> 00:21:09.566 A:middle
This is straight JavaScript.

00:21:09.686 --> 00:21:10.966 A:middle
It's not specific to MusicKit

00:21:10.966 --> 00:21:12.056 A:middle
JS, but I did want to walk

00:21:12.056 --> 00:21:13.286 A:middle
through that when the user

00:21:13.286 --> 00:21:15.066 A:middle
presses Enter on the search box

00:21:15.366 --> 00:21:16.696 A:middle
is when we're going to fire our

00:21:17.086 --> 00:21:18.506 A:middle
callback to do the search.

00:21:19.046 --> 00:21:23.036 A:middle
And we can implement that by

00:21:23.036 --> 00:21:24.936 A:middle
using the search method off of

00:21:24.936 --> 00:21:26.496 A:middle
MusicKit's API property.

00:21:27.816 --> 00:21:29.286 A:middle
This will perform the search

00:21:29.286 --> 00:21:30.796 A:middle
against the Apple Music API, and

00:21:31.026 --> 00:21:32.976 A:middle
we can specify any query

00:21:32.976 --> 00:21:34.736 A:middle
parameters that the Apple Music

00:21:34.736 --> 00:21:38.186 A:middle
API accepts with a configuration

00:21:38.186 --> 00:21:38.516 A:middle
object.

00:21:39.286 --> 00:21:40.376 A:middle
So we can specify we want to

00:21:40.376 --> 00:21:41.436 A:middle
search, we want to limit the

00:21:41.436 --> 00:21:43.436 A:middle
search to playlists and that we

00:21:43.436 --> 00:21:44.796 A:middle
want our results to be limited

00:21:44.796 --> 00:21:45.786 A:middle
to 8.

00:21:46.856 --> 00:21:48.546 A:middle
We have our custom templating,

00:21:49.796 --> 00:21:51.356 A:middle
but I want to highlight these 3

00:21:51.356 --> 00:21:53.186 A:middle
lines, which is where we tell

00:21:53.186 --> 00:21:55.966 A:middle
our MusicKit instance to take

00:21:55.966 --> 00:21:57.256 A:middle
the artwork that the user has

00:21:57.256 --> 00:21:59.016 A:middle
clicked on, and we want to set

00:21:59.016 --> 00:22:00.286 A:middle
the playback queue to that


00:21:59.016 --> 00:22:00.286 A:middle
the playback queue to that

00:22:00.286 --> 00:22:01.016 A:middle
playlist ID.

00:22:01.816 --> 00:22:04.026 A:middle
That returns a promise where we

00:22:04.026 --> 00:22:05.636 A:middle
can call music.play, which will

00:22:05.636 --> 00:22:06.896 A:middle
start playback for the user.

00:22:07.066 --> 00:22:08.466 A:middle
And then, we have our custom

00:22:08.466 --> 00:22:09.256 A:middle
rendering as well.

00:22:13.496 --> 00:22:15.196 A:middle
I perform a search for "a list."

00:22:16.126 --> 00:22:18.346 A:middle
We'll see 8 catalog results from

00:22:18.346 --> 00:22:19.766 A:middle
the Apple Music catalog for A

00:22:19.766 --> 00:22:20.466 A:middle
list playlists.

00:22:20.996 --> 00:22:25.946 A:middle
It would be nice if the same

00:22:25.946 --> 00:22:27.586 A:middle
search could apply to my

00:22:27.586 --> 00:22:29.356 A:middle
personal iCloud library as well.

00:22:30.336 --> 00:22:31.936 A:middle
And we can do that in almost the

00:22:31.936 --> 00:22:34.996 A:middle
exact same manner, except the

00:22:34.996 --> 00:22:36.526 A:middle
search method is off of the

00:22:36.526 --> 00:22:38.196 A:middle
library property instead of the

00:22:38.196 --> 00:22:39.126 A:middle
API property.

00:22:39.756 --> 00:22:41.066 A:middle
This lets MusicKit JS know

00:22:41.066 --> 00:22:44.886 A:middle
you're looking for the cloud

00:22:44.966 --> 00:22:45.246 A:middle
library.

00:22:45.246 --> 00:22:47.316 A:middle
Set playlists and set the same

00:22:47.576 --> 00:22:47.926 A:middle
for 8.

00:22:47.956 --> 00:22:49.806 A:middle
And then, the code looks exactly

00:22:49.806 --> 00:22:52.086 A:middle
the same with setting the queue

00:22:52.256 --> 00:22:53.746 A:middle
and starting playback.

00:22:57.096 --> 00:22:58.956 A:middle
If I perform that same search,


00:23:00.496 --> 00:23:02.396 A:middle
we'll see my iCloud Music

00:23:02.396 --> 00:23:04.216 A:middle
Library results as well as the

00:23:04.216 --> 00:23:05.946 A:middle
catalog library results.

00:23:06.366 --> 00:23:10.866 A:middle
And I can click, and we get

00:23:10.866 --> 00:23:12.326 A:middle
playback of the cloud library

00:23:12.326 --> 00:23:12.896 A:middle
item as well.

00:23:14.516 --> 00:23:17.736 A:middle
[ Music ]

00:23:18.236 --> 00:23:19.706 A:middle
Looking at the Now Playing

00:23:19.706 --> 00:23:21.096 A:middle
screen, or the Now Playing

00:23:21.096 --> 00:23:22.616 A:middle
information at the bottom makes

00:23:22.616 --> 00:23:23.996 A:middle
me realize that it's missing a

00:23:23.996 --> 00:23:25.256 A:middle
progress indicator to let me

00:23:25.256 --> 00:23:26.856 A:middle
know how far through the current

00:23:26.856 --> 00:23:27.806 A:middle
playing track we are.

00:23:28.346 --> 00:23:30.576 A:middle
And we can add something like

00:23:30.576 --> 00:23:33.636 A:middle
that by simply listening for the

00:23:33.636 --> 00:23:35.206 A:middle
playbackProgress DidChange event

00:23:35.476 --> 00:23:38.000 A:middle
that MusicKit JS provides.

00:23:42.296 --> 00:23:43.696 A:middle
Here we add an event listener to

00:23:43.696 --> 00:23:45.686 A:middle
the MusicKit instance, listen

00:23:45.686 --> 00:23:47.136 A:middle
for playbackProgress DidChange,

00:23:47.356 --> 00:23:48.636 A:middle
and have a custom renderer to

00:23:48.636 --> 00:23:51.166 A:middle
render progress when we get that

00:23:54.336 --> 00:23:54.526 A:middle
event.

00:23:54.646 --> 00:23:56.186 A:middle
So we can look for A list again.

00:23:56.716 --> 00:23:59.226 A:middle
And this time, when I play that

00:23:59.226 --> 00:24:01.126 A:middle
song, we see our custom progress


00:23:59.226 --> 00:24:01.126 A:middle
song, we see our custom progress

00:24:01.126 --> 00:24:03.000 A:middle
bar rendering.

00:24:07.946 --> 00:24:09.076 A:middle
Now, there's a lot more we could

00:24:09.076 --> 00:24:10.996 A:middle
get into with MusicKit JS, but

00:24:10.996 --> 00:24:12.556 A:middle
I'd like to bring DJ back up to

00:24:12.556 --> 00:24:13.566 A:middle
kind of summarize what we've

00:24:13.566 --> 00:24:15.356 A:middle
gone over today.

00:24:16.516 --> 00:24:19.776 A:middle
[ Applause ]

00:24:20.276 --> 00:24:21.946 A:middle
&gt;&gt; You can now bring great music

00:24:21.946 --> 00:24:23.226 A:middle
experiences to your websites.

00:24:24.416 --> 00:24:25.386 A:middle
You can use the declarative

00:24:25.386 --> 00:24:27.896 A:middle
markup to quickly add simple

00:24:27.896 --> 00:24:30.736 A:middle
functionality or you can use the

00:24:30.736 --> 00:24:32.356 A:middle
JavaScript APIs directly to

00:24:32.356 --> 00:24:33.306 A:middle
build a more advanced

00:24:33.306 --> 00:24:33.856 A:middle
application.

00:24:34.466 --> 00:24:35.926 A:middle
We're looking forward to seeing

00:24:35.926 --> 00:24:36.786 A:middle
what you can build with it.

00:24:37.396 --> 00:24:38.426 A:middle
We have some great documentation

00:24:38.426 --> 00:24:40.936 A:middle
available, and we have a lab

00:24:41.416 --> 00:24:42.196 A:middle
coming up right after this

00:24:42.196 --> 00:24:43.986 A:middle
session in Technology Lab 3.

00:24:44.716 --> 00:24:45.766 A:middle
Happy to answer any questions

00:24:45.766 --> 00:24:46.666 A:middle
you have.

00:24:47.416 --> 00:24:48.006 A:middle
Thank you.

00:24:49.508 --> 00:24:51.508 A:middle
[ Applause ]
