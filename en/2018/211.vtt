WEBVTT

00:00:07.516 --> 00:00:16.500 A:middle
[ Music ]

00:00:20.516 --> 00:00:28.996 A:middle
[ Applause ]

00:00:29.496 --> 00:00:30.396 A:middle
&gt;&gt; Hi, everybody.

00:00:30.876 --> 00:00:32.566 A:middle
My name is Ari Weinstein, and

00:00:32.566 --> 00:00:34.326 A:middle
I'm really excited to be here

00:00:34.326 --> 00:00:35.766 A:middle
along with Willem Mattelaer to

00:00:35.766 --> 00:00:37.516 A:middle
tell you about Siri Shortcuts.

00:00:38.106 --> 00:00:41.496 A:middle
So, two years ago, we announced

00:00:41.496 --> 00:00:43.096 A:middle
the first version of SiriKit,

00:00:43.256 --> 00:00:44.966 A:middle
which enables your apps to work

00:00:44.966 --> 00:00:46.566 A:middle
with Siri, and it has great

00:00:46.566 --> 00:00:48.446 A:middle
domain-specific knowledge for

00:00:48.446 --> 00:00:50.046 A:middle
things like sending messages,

00:00:50.166 --> 00:00:51.586 A:middle
requesting rides, making

00:00:51.586 --> 00:00:52.356 A:middle
payments, and more.

00:00:53.026 --> 00:00:55.116 A:middle
But we know that you want to do

00:00:55.116 --> 00:00:57.096 A:middle
even more with SiriKit, and so

00:00:57.096 --> 00:00:58.656 A:middle
that's why, this year, we're so

00:00:58.656 --> 00:01:00.166 A:middle
excited to announce Shortcuts.

00:00:58.656 --> 00:01:00.166 A:middle
excited to announce Shortcuts.

00:01:01.506 --> 00:01:03.586 A:middle
This central idea behind

00:01:03.586 --> 00:01:05.066 A:middle
Shortcuts is that it lets you

00:01:05.066 --> 00:01:06.996 A:middle
expose the key capabilities of

00:01:06.996 --> 00:01:09.246 A:middle
your app to Siri, and this is

00:01:09.426 --> 00:01:11.226 A:middle
really great, because it enables

00:01:11.226 --> 00:01:12.606 A:middle
people to use the features of

00:01:12.606 --> 00:01:14.636 A:middle
your apps in new ways and in new

00:01:14.636 --> 00:01:15.136 A:middle
places.

00:01:15.596 --> 00:01:17.216 A:middle
And it's a really powerful way

00:01:17.376 --> 00:01:18.406 A:middle
to engage your users.

00:01:19.446 --> 00:01:22.246 A:middle
So, exposing a shortcut opens up

00:01:22.246 --> 00:01:24.266 A:middle
a ton of new possibilities for

00:01:24.266 --> 00:01:25.616 A:middle
how people can use your apps, so

00:01:25.616 --> 00:01:27.306 A:middle
let's explore all of the places

00:01:27.526 --> 00:01:30.436 A:middle
where Shortcuts can be used.

00:01:30.926 --> 00:01:32.216 A:middle
Shortcuts takes Siri's

00:01:32.216 --> 00:01:34.416 A:middle
suggestions to the next level by

00:01:34.416 --> 00:01:35.986 A:middle
surfacing what you want to do

00:01:35.986 --> 00:01:37.876 A:middle
next, not just with your apps,

00:01:37.876 --> 00:01:39.816 A:middle
but inside of your apps, and it

00:01:39.816 --> 00:01:41.766 A:middle
does it by surfacing them in

00:01:41.766 --> 00:01:43.906 A:middle
search at just the right time.

00:01:45.366 --> 00:01:47.286 A:middle
And Siri can suggest shortcuts

00:01:47.286 --> 00:01:48.836 A:middle
on the Watch, so you can use

00:01:48.836 --> 00:01:50.596 A:middle
them right from your wrist on

00:01:50.596 --> 00:01:51.496 A:middle
the Siri Watch Face.

00:01:53.556 --> 00:01:55.166 A:middle
When Siri is confident that it's

00:01:55.166 --> 00:01:56.516 A:middle
the exact right time for a

00:01:56.516 --> 00:01:58.286 A:middle
Shortcut, it will be surfaced on

00:01:58.286 --> 00:01:59.096 A:middle
the lock screen.

00:01:59.216 --> 00:02:01.026 A:middle
And, when you tap on a shortcut,

00:01:59.216 --> 00:02:01.026 A:middle
And, when you tap on a shortcut,

00:02:01.246 --> 00:02:02.776 A:middle
you can use it right in line

00:02:02.976 --> 00:02:05.226 A:middle
with a rich custom UI specific

00:02:05.226 --> 00:02:07.266 A:middle
to that app.

00:02:07.356 --> 00:02:08.586 A:middle
And you can also add shortcuts

00:02:08.626 --> 00:02:10.096 A:middle
to Siri, so you can use them

00:02:10.096 --> 00:02:11.876 A:middle
with your voice just by asking

00:02:11.876 --> 00:02:12.406 A:middle
Siri.

00:02:12.646 --> 00:02:14.316 A:middle
And in Siri you'll see the same

00:02:14.316 --> 00:02:16.536 A:middle
custom UI that you see in search

00:02:16.536 --> 00:02:17.496 A:middle
and on the lock screen.

00:02:18.966 --> 00:02:21.706 A:middle
And apps can provide a great

00:02:21.706 --> 00:02:23.566 A:middle
voice experience in Siri by

00:02:23.566 --> 00:02:26.086 A:middle
providing custom response dialog

00:02:26.296 --> 00:02:28.176 A:middle
that Siri will read out loud to

00:02:28.176 --> 00:02:30.976 A:middle
tell you things like how long it

00:02:31.146 --> 00:02:33.076 A:middle
will take for your coffee to be

00:02:33.596 --> 00:02:33.746 A:middle
ready.

00:02:34.476 --> 00:02:37.216 A:middle
So, when the user adds a

00:02:37.216 --> 00:02:39.036 A:middle
shortcut to Siri, they get to

00:02:39.036 --> 00:02:41.056 A:middle
pick a custom personal phrase,

00:02:41.396 --> 00:02:43.536 A:middle
so the user chooses what to say

00:02:43.536 --> 00:02:45.426 A:middle
to Siri to invoke your shortcut.

00:02:45.846 --> 00:02:47.326 A:middle
And, as a developer, you get to

00:02:47.326 --> 00:02:49.336 A:middle
suggest what phrase to use, so,

00:02:49.486 --> 00:02:51.086 A:middle
in this case, a suggestion is

00:02:51.086 --> 00:02:51.736 A:middle
"coffee time."

00:02:52.226 --> 00:02:53.876 A:middle
And, once a shortcut has been

00:02:53.946 --> 00:02:55.876 A:middle
added to Siri, it works across

00:02:55.876 --> 00:02:58.686 A:middle
all of your iOS devices, and on

00:02:58.686 --> 00:03:00.436 A:middle
Apple Watch, and even on

00:02:58.686 --> 00:03:00.436 A:middle
Apple Watch, and even on

00:03:00.436 --> 00:03:01.686 A:middle
HomePod.

00:03:02.376 --> 00:03:04.956 A:middle
So, we also have the new

00:03:04.956 --> 00:03:06.576 A:middle
Shortcuts app, and with the new

00:03:06.576 --> 00:03:08.146 A:middle
Shortcuts app, anyone can build

00:03:08.146 --> 00:03:10.176 A:middle
their own shortcuts, and you do

00:03:10.176 --> 00:03:12.086 A:middle
it just by dragging and dropping

00:03:12.086 --> 00:03:13.396 A:middle
a series of steps together.

00:03:13.896 --> 00:03:15.556 A:middle
And those steps can even include

00:03:15.706 --> 00:03:17.406 A:middle
the shortcuts exposed by your

00:03:18.966 --> 00:03:19.046 A:middle
app.

00:03:19.266 --> 00:03:21.476 A:middle
So, today, we're going to talk

00:03:21.476 --> 00:03:23.096 A:middle
about how to adopt shortcuts for

00:03:23.096 --> 00:03:24.606 A:middle
your apps, and then we'll talk

00:03:24.606 --> 00:03:25.676 A:middle
about how to optimize your

00:03:25.676 --> 00:03:27.346 A:middle
shortcuts for great suggestions.

00:03:27.806 --> 00:03:29.316 A:middle
And we'll also cover some

00:03:29.316 --> 00:03:30.926 A:middle
privacy considerations that are

00:03:30.926 --> 00:03:32.106 A:middle
important to keep in mind, and

00:03:32.106 --> 00:03:33.036 A:middle
we'll talk about how to make

00:03:33.036 --> 00:03:34.486 A:middle
great shortcuts for media

00:03:34.486 --> 00:03:34.906 A:middle
playback.

00:03:36.236 --> 00:03:38.156 A:middle
So, first, we'll talk about how

00:03:38.156 --> 00:03:39.656 A:middle
to adopt the new Shortcut's

00:03:39.656 --> 00:03:39.946 A:middle
APIs.

00:03:41.546 --> 00:03:43.236 A:middle
There were three steps for

00:03:43.236 --> 00:03:44.676 A:middle
creating a shortcut, and the

00:03:44.676 --> 00:03:46.286 A:middle
first step is to define your

00:03:46.286 --> 00:03:46.726 A:middle
shortcut.

00:03:46.996 --> 00:03:48.256 A:middle
That means you have to decide

00:03:48.396 --> 00:03:50.186 A:middle
what you want to expose as a

00:03:50.186 --> 00:03:52.336 A:middle
shortcut and define each one so

00:03:52.336 --> 00:03:53.576 A:middle
Siri knows everything that your

00:03:53.576 --> 00:03:54.136 A:middle
app can do.

00:03:55.406 --> 00:03:57.076 A:middle
Next, you'll need to donate your

00:03:57.076 --> 00:03:57.676 A:middle
new shortcut.

00:03:58.086 --> 00:03:59.436 A:middle
That means you need to tell the

00:03:59.436 --> 00:04:01.816 A:middle
system every time the user does

00:03:59.436 --> 00:04:01.816 A:middle
system every time the user does

00:04:01.816 --> 00:04:03.476 A:middle
something in your app that you

00:04:03.476 --> 00:04:05.046 A:middle
expose a shortcut for, which

00:04:05.086 --> 00:04:06.776 A:middle
will let Siri learn when and

00:04:06.776 --> 00:04:07.916 A:middle
where is the right time to

00:04:07.916 --> 00:04:08.826 A:middle
suggest your shortcut.

00:04:09.246 --> 00:04:12.026 A:middle
And the third step is to handle

00:04:12.026 --> 00:04:12.616 A:middle
your shortcut.

00:04:13.076 --> 00:04:14.936 A:middle
That means, when the user wants

00:04:14.936 --> 00:04:16.625 A:middle
to go and use your shortcut in

00:04:16.676 --> 00:04:18.106 A:middle
Siri, on the lock screen, in

00:04:18.106 --> 00:04:19.886 A:middle
search, you need to be ready for

00:04:19.886 --> 00:04:22.356 A:middle
your app or app extension to be

00:04:22.356 --> 00:04:23.596 A:middle
invoked and be handed the

00:04:23.596 --> 00:04:24.456 A:middle
shortcut to handle.

00:04:25.836 --> 00:04:29.236 A:middle
So, before you define shortcuts,

00:04:29.306 --> 00:04:30.496 A:middle
you'll need to decide what

00:04:30.496 --> 00:04:31.946 A:middle
exactly it is that you want to

00:04:31.946 --> 00:04:32.396 A:middle
expose.

00:04:33.056 --> 00:04:35.176 A:middle
And you should start by thinking

00:04:35.176 --> 00:04:36.256 A:middle
through what are the most

00:04:36.256 --> 00:04:37.316 A:middle
important things that people

00:04:37.316 --> 00:04:38.436 A:middle
like to do with your apps?

00:04:38.686 --> 00:04:39.716 A:middle
Because those are the things

00:04:39.716 --> 00:04:40.826 A:middle
that you might want to consider

00:04:40.826 --> 00:04:41.936 A:middle
exposing shortcuts for.

00:04:42.256 --> 00:04:44.796 A:middle
So, every shortcut that you

00:04:44.796 --> 00:04:46.776 A:middle
expose should accelerate the

00:04:46.776 --> 00:04:48.686 A:middle
user, to perform a key function

00:04:48.716 --> 00:04:49.246 A:middle
of your app.

00:04:50.056 --> 00:04:51.176 A:middle
That means it should take

00:04:51.176 --> 00:04:52.616 A:middle
something that the user already

00:04:52.616 --> 00:04:54.266 A:middle
wanted to do with your app and

00:04:54.266 --> 00:04:55.866 A:middle
help them do it even faster.

00:04:56.796 --> 00:04:58.616 A:middle
The acceleration that you offer

00:04:58.616 --> 00:05:00.376 A:middle
should be substantial, so you

00:04:58.616 --> 00:05:00.376 A:middle
should be substantial, so you

00:05:00.376 --> 00:05:01.836 A:middle
shouldn't just expose a shortcut

00:05:01.836 --> 00:05:03.346 A:middle
that does about the same thing

00:05:03.346 --> 00:05:04.676 A:middle
as opening your app normally.

00:05:05.316 --> 00:05:06.936 A:middle
If you expose a shortcut that

00:05:06.936 --> 00:05:08.096 A:middle
doesn't provide very much

00:05:08.096 --> 00:05:09.636 A:middle
acceleration to the user, it

00:05:10.186 --> 00:05:11.346 A:middle
won't be suggested as

00:05:11.346 --> 00:05:11.826 A:middle
frequently.

00:05:12.416 --> 00:05:15.446 A:middle
And, next, every shortcut that

00:05:15.446 --> 00:05:16.426 A:middle
you expose should be of

00:05:16.426 --> 00:05:18.056 A:middle
persistent interest to the user,

00:05:18.166 --> 00:05:19.286 A:middle
so that means it should be

00:05:19.346 --> 00:05:20.236 A:middle
something that the user might

00:05:20.236 --> 00:05:21.516 A:middle
want to do multiple times.

00:05:21.926 --> 00:05:23.696 A:middle
It's not a good idea to expose a

00:05:23.696 --> 00:05:24.966 A:middle
shortcut for something that the

00:05:24.966 --> 00:05:27.126 A:middle
user might only want to use once

00:05:27.256 --> 00:05:28.976 A:middle
or twice.

00:05:29.076 --> 00:05:30.906 A:middle
And you should also expose only

00:05:30.906 --> 00:05:32.706 A:middle
shortcuts that are executable at

00:05:32.706 --> 00:05:35.036 A:middle
any time, because you can't rely

00:05:35.036 --> 00:05:36.566 A:middle
on the user being in some

00:05:36.566 --> 00:05:38.076 A:middle
particular state before your

00:05:38.076 --> 00:05:39.596 A:middle
shortcut will be ready for use.

00:05:40.806 --> 00:05:43.246 A:middle
So, once you've decided what

00:05:43.246 --> 00:05:44.406 A:middle
shortcuts to expose, you're

00:05:44.406 --> 00:05:45.686 A:middle
ready to check out the

00:05:45.686 --> 00:05:47.386 A:middle
shortcuts' APIs.

00:05:48.396 --> 00:05:51.026 A:middle
There were two APIs that we

00:05:51.026 --> 00:05:52.766 A:middle
support for adopting shortcuts.

00:05:53.216 --> 00:05:55.316 A:middle
The first is NSUserActivity.

00:05:56.076 --> 00:05:58.086 A:middle
NSUserActivity is a lightweight

00:05:58.086 --> 00:05:59.596 A:middle
way to represent the state of

00:05:59.596 --> 00:06:01.426 A:middle
your app, and it integrates with

00:05:59.596 --> 00:06:01.426 A:middle
your app, and it integrates with

00:06:01.456 --> 00:06:02.776 A:middle
other Apple features like

00:06:02.806 --> 00:06:04.156 A:middle
Spotlight and Handoff.

00:06:05.046 --> 00:06:07.046 A:middle
And the second is intents.

00:06:07.626 --> 00:06:08.676 A:middle
Intents are a way of

00:06:08.676 --> 00:06:10.726 A:middle
representing, in detail, a type

00:06:10.726 --> 00:06:12.286 A:middle
of action that your app can

00:06:12.286 --> 00:06:14.726 A:middle
perform, and Siri includes a

00:06:14.726 --> 00:06:18.166 A:middle
bunch of great built-in intents

00:06:18.166 --> 00:06:19.106 A:middle
that support a range of

00:06:19.106 --> 00:06:20.786 A:middle
capabilities that apps can use

00:06:20.786 --> 00:06:21.716 A:middle
to integrate with Siri.

00:06:22.226 --> 00:06:22.916 A:middle
And, this year, we're

00:06:22.916 --> 00:06:23.896 A:middle
introducing something really

00:06:23.896 --> 00:06:25.176 A:middle
cool, which is the ability for

00:06:25.176 --> 00:06:26.556 A:middle
you to define your own custom

00:06:26.556 --> 00:06:27.886 A:middle
intents for use with Shortcuts.

00:06:29.006 --> 00:06:30.676 A:middle
So, for every shortcut you

00:06:30.676 --> 00:06:32.286 A:middle
expose, you'll need to decide

00:06:32.286 --> 00:06:33.126 A:middle
whether it should be an

00:06:33.126 --> 00:06:34.836 A:middle
NSUserActivity or an intent.

00:06:35.266 --> 00:06:36.836 A:middle
So, let's talk about how to make

00:06:37.466 --> 00:06:39.266 A:middle
that decision.

00:06:40.236 --> 00:06:42.426 A:middle
Now, NSUserActivity is a great

00:06:42.426 --> 00:06:43.606 A:middle
choice for building a shortcut.

00:06:43.866 --> 00:06:45.366 A:middle
If you're just building a simple

00:06:45.366 --> 00:06:46.746 A:middle
shortcut that opens something in

00:06:46.746 --> 00:06:49.186 A:middle
your app, or if you're exposing

00:06:49.186 --> 00:06:51.496 A:middle
a shortcut for something that

00:06:51.496 --> 00:06:53.216 A:middle
you already index in Spotlight

00:06:53.216 --> 00:06:55.386 A:middle
search, or that you already

00:06:55.426 --> 00:06:57.486 A:middle
offer in NSUserActivity for, for

00:06:57.486 --> 00:06:58.616 A:middle
example, for Handoff.

00:06:59.146 --> 00:07:02.436 A:middle
But for the best Shortcuts

00:06:59.146 --> 00:07:02.436 A:middle
But for the best Shortcuts

00:07:02.436 --> 00:07:03.936 A:middle
experience, you'll want to adopt

00:07:03.936 --> 00:07:05.746 A:middle
intents, and intents-based

00:07:05.746 --> 00:07:06.646 A:middle
shortcuts are really cool,

00:07:06.646 --> 00:07:08.596 A:middle
because they can run inline

00:07:08.596 --> 00:07:10.156 A:middle
without launching your app.

00:07:10.156 --> 00:07:11.656 A:middle
And they can include custom

00:07:11.656 --> 00:07:13.626 A:middle
voice responses and custom UIs

00:07:13.626 --> 00:07:14.726 A:middle
like we saw earlier.

00:07:14.726 --> 00:07:16.186 A:middle
And they can also include

00:07:16.336 --> 00:07:17.956 A:middle
granular parameter predictions,

00:07:18.266 --> 00:07:19.756 A:middle
which Willem tell you a little

00:07:19.756 --> 00:07:20.346 A:middle
bit about later.

00:07:21.516 --> 00:07:23.616 A:middle
So, once you've decided how to

00:07:23.616 --> 00:07:25.356 A:middle
adopt, you're ready to dive into

00:07:25.356 --> 00:07:28.116 A:middle
the implementation, so let's do

00:07:29.176 --> 00:07:29.996 A:middle
that now.

00:07:29.996 --> 00:07:30.976 A:middle
First, let's go over how to

00:07:30.976 --> 00:07:31.766 A:middle
adopt shortcuts with

00:07:31.766 --> 00:07:33.586 A:middle
NSUserActivity, and the first

00:07:33.586 --> 00:07:35.416 A:middle
step is to define your shortcut.

00:07:35.416 --> 00:07:37.376 A:middle
For NSUserActivity, that means

00:07:37.406 --> 00:07:38.806 A:middle
you need to declare a

00:07:38.806 --> 00:07:41.116 A:middle
UserActivityType in your app's

00:07:41.116 --> 00:07:43.466 A:middle
Info.plist file to register your

00:07:43.466 --> 00:07:44.596 A:middle
activity type with the system.

00:07:46.006 --> 00:07:47.896 A:middle
Next, you need to donate your

00:07:47.896 --> 00:07:48.326 A:middle
shortcut.

00:07:48.736 --> 00:07:50.836 A:middle
For NSUserActivity, that means

00:07:50.946 --> 00:07:52.186 A:middle
every time the user is looking

00:07:52.186 --> 00:07:53.596 A:middle
at the screen in your app that

00:07:53.596 --> 00:07:54.716 A:middle
you want to provide a shortcut

00:07:54.716 --> 00:07:56.076 A:middle
to, you should make an

00:07:56.076 --> 00:07:57.836 A:middle
NSUserActivity object available.

00:07:58.696 --> 00:08:01.106 A:middle
So, there's one key new thing

00:07:58.696 --> 00:08:01.106 A:middle
So, there's one key new thing

00:08:01.106 --> 00:08:02.066 A:middle
here, which is the

00:08:02.246 --> 00:08:04.056 A:middle
isEligibleForPrediction flag.

00:08:04.546 --> 00:08:06.206 A:middle
Setting this on any user

00:08:06.206 --> 00:08:07.386 A:middle
activity turns it into a

00:08:07.386 --> 00:08:09.236 A:middle
shortcut, and what's really cool

00:08:09.236 --> 00:08:10.716 A:middle
is if you have an existing user

00:08:10.716 --> 00:08:12.286 A:middle
activity in your app, you just

00:08:12.286 --> 00:08:14.796 A:middle
have to set this to true and

00:08:14.796 --> 00:08:16.416 A:middle
that user activity will become a

00:08:16.416 --> 00:08:17.606 A:middle
shortcut automatically.

00:08:18.616 --> 00:08:19.926 A:middle
Now, note that the

00:08:19.926 --> 00:08:21.826 A:middle
isEligibleForSearch flag has to

00:08:21.826 --> 00:08:22.906 A:middle
be true in order for

00:08:22.906 --> 00:08:24.956 A:middle
isEligibleForPrediction to have

00:08:24.956 --> 00:08:25.336 A:middle
an effect.

00:08:25.486 --> 00:08:27.746 A:middle
And, by the way, you might also

00:08:27.746 --> 00:08:28.746 A:middle
want to consider the

00:08:28.746 --> 00:08:30.806 A:middle
isEligibleForHandoff flag, which

00:08:30.876 --> 00:08:31.786 A:middle
defaults to true.

00:08:31.786 --> 00:08:34.196 A:middle
So, by default, all of your user

00:08:34.196 --> 00:08:35.885 A:middle
activities will be able to be

00:08:35.885 --> 00:08:38.846 A:middle
handed off between devices.

00:08:38.926 --> 00:08:40.066 A:middle
Now, when you're creating your

00:08:40.066 --> 00:08:41.166 A:middle
user activity, you want to make

00:08:41.166 --> 00:08:42.426 A:middle
sure to include all of the

00:08:42.426 --> 00:08:44.246 A:middle
information in your user info

00:08:44.246 --> 00:08:45.896 A:middle
dictionary that you'll need to

00:08:45.896 --> 00:08:47.326 A:middle
restore the activity later on.

00:08:48.886 --> 00:08:50.976 A:middle
And the last step is to mark

00:08:50.976 --> 00:08:52.306 A:middle
your activity current by

00:08:52.306 --> 00:08:54.186 A:middle
attaching it to a UI

00:08:54.186 --> 00:08:55.566 A:middle
viewController or a UI responder

00:08:55.566 --> 00:08:56.586 A:middle
object that's onscreen.

00:08:57.186 --> 00:09:00.476 A:middle
Now, the last step is to handle

00:08:57.186 --> 00:09:00.476 A:middle
Now, the last step is to handle

00:09:00.476 --> 00:09:01.316 A:middle
your shortcut, once you've

00:09:01.316 --> 00:09:02.526 A:middle
defined and donated it.

00:09:02.926 --> 00:09:05.186 A:middle
And every time the user uses an

00:09:05.186 --> 00:09:08.046 A:middle
NSUserActivity from your app, it

00:09:08.406 --> 00:09:09.406 A:middle
will be opened in your app.

00:09:09.806 --> 00:09:11.186 A:middle
And so you need to handle it by

00:09:11.186 --> 00:09:12.696 A:middle
implementing the app delegate

00:09:12.696 --> 00:09:13.916 A:middle
method for handling

00:09:13.916 --> 00:09:15.256 A:middle
NSUserActivity, which is called

00:09:15.256 --> 00:09:16.496 A:middle
continueUserActivity.

00:09:17.086 --> 00:09:18.036 A:middle
So, all you have to do is

00:09:18.036 --> 00:09:19.816 A:middle
implement this method, check if

00:09:19.816 --> 00:09:21.326 A:middle
the activity type matches the

00:09:21.326 --> 00:09:22.646 A:middle
one that you registered, and, if

00:09:22.646 --> 00:09:23.926 A:middle
it does, then you want to

00:09:23.926 --> 00:09:25.396 A:middle
restore the state of your app to

00:09:25.396 --> 00:09:26.326 A:middle
what it was when the user

00:09:26.326 --> 00:09:27.296 A:middle
activity was saved.

00:09:28.706 --> 00:09:30.366 A:middle
So, that's everything you need

00:09:30.366 --> 00:09:31.706 A:middle
to do to get Siri to start

00:09:31.706 --> 00:09:33.386 A:middle
suggesting shortcuts for your

00:09:33.386 --> 00:09:34.836 A:middle
apps with NSUserActivity.

00:09:37.166 --> 00:09:38.396 A:middle
Now, let's talk about how to

00:09:38.396 --> 00:09:39.356 A:middle
expose Shortcuts through

00:09:39.356 --> 00:09:39.806 A:middle
intents.

00:09:41.016 --> 00:09:42.376 A:middle
The first step, again, is to

00:09:42.376 --> 00:09:43.346 A:middle
define your shortcut.

00:09:43.526 --> 00:09:44.906 A:middle
And so with intents, you'll need

00:09:44.906 --> 00:09:47.116 A:middle
to start by deciding what type

00:09:47.116 --> 00:09:49.576 A:middle
of intent you'd like to adopt.

00:09:50.196 --> 00:09:51.936 A:middle
And, as you know, Siri includes

00:09:51.936 --> 00:09:53.396 A:middle
many great built-in intents,

00:09:53.616 --> 00:09:55.406 A:middle
like for messaging, workouts,

00:09:55.536 --> 00:09:56.626 A:middle
lists, and more.

00:09:57.456 --> 00:09:59.156 A:middle
And now we're introducing the

00:09:59.156 --> 00:10:00.936 A:middle
ability to define custom intents

00:09:59.156 --> 00:10:00.936 A:middle
ability to define custom intents

00:10:00.936 --> 00:10:01.916 A:middle
in Xcode for Shortcuts.

00:10:03.146 --> 00:10:05.346 A:middle
And so if the shortcut that you

00:10:05.346 --> 00:10:06.486 A:middle
want to build corresponds to one

00:10:06.486 --> 00:10:08.156 A:middle
of the default built-in SiriKit

00:10:08.156 --> 00:10:09.566 A:middle
intents, then you should adopt

00:10:09.566 --> 00:10:09.876 A:middle
that.

00:10:10.466 --> 00:10:11.726 A:middle
But, otherwise, you can define

00:10:11.726 --> 00:10:12.136 A:middle
your own.

00:10:12.616 --> 00:10:15.096 A:middle
And whether you want to define

00:10:15.096 --> 00:10:16.416 A:middle
your own or adopt an existing

00:10:16.416 --> 00:10:18.046 A:middle
one to customize it, you want to

00:10:18.046 --> 00:10:19.566 A:middle
get started by creating an

00:10:19.566 --> 00:10:21.356 A:middle
intent definition file in Xcode.

00:10:21.786 --> 00:10:24.746 A:middle
So, believe it or not, in my

00:10:24.746 --> 00:10:25.896 A:middle
spare time, I've been working

00:10:25.896 --> 00:10:26.956 A:middle
with a couple friends on a new

00:10:26.956 --> 00:10:29.156 A:middle
app, and it's a soup delivery

00:10:29.156 --> 00:10:31.026 A:middle
app, and it's called Soup Chef.

00:10:31.026 --> 00:10:32.666 A:middle
It's the easiest way to order

00:10:32.666 --> 00:10:34.646 A:middle
soup, and I'm really excited

00:10:34.676 --> 00:10:35.946 A:middle
about the potential of hooking

00:10:35.946 --> 00:10:36.586 A:middle
it up to Siri.

00:10:37.016 --> 00:10:38.586 A:middle
So, let's step through how to

00:10:38.586 --> 00:10:40.286 A:middle
use the new Intent Editor to

00:10:40.286 --> 00:10:42.066 A:middle
build an intent for Soup Chef.

00:10:42.126 --> 00:10:43.426 A:middle
I'm going to start by going to

00:10:43.426 --> 00:10:45.646 A:middle
File, New File in Xcode, and

00:10:45.646 --> 00:10:47.256 A:middle
I'll choose the SiriKit Intent

00:10:47.256 --> 00:10:48.196 A:middle
Definition File type.

00:10:48.196 --> 00:10:50.626 A:middle
And then I'll see the new Intent

00:10:50.626 --> 00:10:51.176 A:middle
Editor.

00:10:51.636 --> 00:10:52.986 A:middle
So, let's get started by

00:10:52.986 --> 00:10:54.346 A:middle
clicking the plus button in the

00:10:54.346 --> 00:10:54.866 A:middle
bottom left.

00:10:54.866 --> 00:10:58.146 A:middle
Next, I want to give my intent a

00:10:58.146 --> 00:10:58.486 A:middle
name.

00:10:58.756 --> 00:10:59.926 A:middle
And, so in this case, I'm making

00:10:59.926 --> 00:11:01.076 A:middle
an intent for ordering a soup,

00:10:59.926 --> 00:11:01.076 A:middle
an intent for ordering a soup,

00:11:01.076 --> 00:11:01.956 A:middle
so I'm going to call it

00:11:02.056 --> 00:11:02.576 A:middle
OrderSoup.

00:11:04.696 --> 00:11:06.266 A:middle
Then I want to fill out my

00:11:06.266 --> 00:11:07.326 A:middle
intent's metadata.

00:11:07.806 --> 00:11:09.056 A:middle
So, let's look at that one step

00:11:09.056 --> 00:11:09.526 A:middle
at a time.

00:11:10.456 --> 00:11:12.316 A:middle
The first piece of metadata is

00:11:12.346 --> 00:11:14.936 A:middle
category and defining a category

00:11:15.346 --> 00:11:17.536 A:middle
helps Siri know how to talk

00:11:17.536 --> 00:11:19.176 A:middle
about your intent and how to

00:11:19.176 --> 00:11:20.186 A:middle
display it in the UI.

00:11:20.666 --> 00:11:22.286 A:middle
So, for example, in this case,

00:11:22.286 --> 00:11:23.596 A:middle
I'm choosing the Order category,

00:11:23.596 --> 00:11:25.216 A:middle
and when I choose Order, Siri

00:11:25.216 --> 00:11:26.926 A:middle
will say something like, "Okay,

00:11:26.926 --> 00:11:28.126 A:middle
I ordered it," when I use it

00:11:28.126 --> 00:11:28.626 A:middle
with Siri.

00:11:28.766 --> 00:11:29.926 A:middle
And it'll display a button

00:11:29.926 --> 00:11:31.536 A:middle
confirmation title like Order.

00:11:32.326 --> 00:11:33.776 A:middle
So, we offer several different

00:11:33.776 --> 00:11:34.816 A:middle
categories, and you should

00:11:34.816 --> 00:11:36.516 A:middle
choose the one that matches your

00:11:36.516 --> 00:11:37.656 A:middle
intent's purpose the most

00:11:37.656 --> 00:11:38.006 A:middle
closely.

00:11:39.516 --> 00:11:40.956 A:middle
Next, you want to fill out your

00:11:40.956 --> 00:11:42.716 A:middle
intent's title and description,

00:11:43.056 --> 00:11:44.416 A:middle
and that will be used in all the

00:11:44.416 --> 00:11:46.196 A:middle
places where people can discover

00:11:46.196 --> 00:11:47.256 A:middle
which shortcuts your app

00:11:47.256 --> 00:11:47.726 A:middle
supports.

00:11:48.756 --> 00:11:49.876 A:middle
And then there's the User

00:11:49.876 --> 00:11:51.586 A:middle
confirmation required checkbox,

00:11:51.866 --> 00:11:53.666 A:middle
which determines whether or not

00:11:53.786 --> 00:11:55.046 A:middle
we'll ask the user for a

00:11:55.046 --> 00:11:56.906 A:middle
confirmation before using your

00:11:56.906 --> 00:11:57.346 A:middle
shortcut.

00:11:57.496 --> 00:11:58.686 A:middle
So, Siri might say something

00:11:58.686 --> 00:12:00.066 A:middle
like, "Are you ready to order

00:11:58.686 --> 00:12:00.066 A:middle
like, "Are you ready to order

00:12:00.066 --> 00:12:01.226 A:middle
with Soup Chef?"

00:12:01.226 --> 00:12:02.536 A:middle
That's really great for my app,

00:12:02.536 --> 00:12:03.566 A:middle
because I want to make sure that

00:12:03.566 --> 00:12:04.676 A:middle
people aren't accidentally

00:12:04.676 --> 00:12:05.296 A:middle
ordering soup [laughs].

00:12:07.756 --> 00:12:09.696 A:middle
So, then, you'll see the intense

00:12:09.816 --> 00:12:10.386 A:middle
parameters.

00:12:11.106 --> 00:12:12.856 A:middle
And these define all of the

00:12:12.856 --> 00:12:14.016 A:middle
parameters that are passed to

00:12:14.016 --> 00:12:14.716 A:middle
your shortcut.

00:12:14.716 --> 00:12:16.546 A:middle
For example, in my case, I have

00:12:16.546 --> 00:12:17.416 A:middle
two parameters.

00:12:17.636 --> 00:12:19.556 A:middle
They are the list of items being

00:12:19.556 --> 00:12:21.166 A:middle
ordered and the location to

00:12:21.166 --> 00:12:21.746 A:middle
deliver to.

00:12:22.246 --> 00:12:23.966 A:middle
Now, parameters support a short

00:12:23.966 --> 00:12:25.206 A:middle
list of types, and those types

00:12:25.206 --> 00:12:26.966 A:middle
include things like string,

00:12:27.256 --> 00:12:29.606 A:middle
number, person, and location.

00:12:30.046 --> 00:12:31.236 A:middle
But if you're building a

00:12:31.236 --> 00:12:33.746 A:middle
parameter that represents an

00:12:33.746 --> 00:12:35.346 A:middle
object that's in your app that's

00:12:35.346 --> 00:12:36.706 A:middle
not on the short list of types

00:12:36.906 --> 00:12:38.236 A:middle
then you can choose the custom

00:12:39.676 --> 00:12:39.786 A:middle
type.

00:12:40.386 --> 00:12:41.116 A:middle
Once you've defined your

00:12:41.116 --> 00:12:42.146 A:middle
parameters, you'll want to look

00:12:42.146 --> 00:12:43.186 A:middle
at shortcut types.

00:12:43.776 --> 00:12:46.016 A:middle
These define all of the types of

00:12:46.016 --> 00:12:47.266 A:middle
shortcuts that you'd like to be

00:12:47.266 --> 00:12:48.326 A:middle
suggested to the user.

00:12:49.616 --> 00:12:51.566 A:middle
Each type includes a particular

00:12:51.566 --> 00:12:53.436 A:middle
combination of parameters that

00:12:53.436 --> 00:12:55.836 A:middle
will be predicted, and formats

00:12:55.836 --> 00:12:57.336 A:middle
for how to display the title and

00:12:57.336 --> 00:12:59.476 A:middle
subtitle of each one, filling in

00:12:59.706 --> 00:13:01.336 A:middle
the values for your parameters.

00:12:59.706 --> 00:13:01.336 A:middle
the values for your parameters.

00:13:01.676 --> 00:13:04.246 A:middle
So, if your shortcut can't be

00:13:04.246 --> 00:13:05.526 A:middle
performed in the background

00:13:05.816 --> 00:13:06.916 A:middle
because it needs to launch your

00:13:06.916 --> 00:13:08.326 A:middle
app when you use it, you should

00:13:08.456 --> 00:13:10.446 A:middle
uncheck the Supports background

00:13:10.446 --> 00:13:11.766 A:middle
execution checkbox.

00:13:12.236 --> 00:13:14.566 A:middle
Now, in some cases, one intent

00:13:14.566 --> 00:13:15.786 A:middle
may have multiple shortcut

00:13:15.786 --> 00:13:17.166 A:middle
types, where some support

00:13:17.166 --> 00:13:18.786 A:middle
background execution and some

00:13:18.786 --> 00:13:19.026 A:middle
don't.

00:13:19.646 --> 00:13:21.666 A:middle
Now, in the case of Soup Chef,

00:13:21.826 --> 00:13:22.996 A:middle
that's especially relevant,

00:13:22.996 --> 00:13:24.276 A:middle
because we can support

00:13:24.276 --> 00:13:26.186 A:middle
background execution when both

00:13:26.186 --> 00:13:28.286 A:middle
the items and delivery location

00:13:28.286 --> 00:13:29.586 A:middle
are predicted, because we have

00:13:29.586 --> 00:13:30.926 A:middle
all we need to place an order.

00:13:31.346 --> 00:13:33.276 A:middle
But if we add a shortcut type

00:13:33.496 --> 00:13:37.106 A:middle
that only includes delivery

00:13:37.106 --> 00:13:39.186 A:middle
location, Siri may predict that,

00:13:39.226 --> 00:13:40.236 A:middle
and we won't actually have

00:13:40.236 --> 00:13:41.226 A:middle
enough information to place an

00:13:41.226 --> 00:13:41.446 A:middle
order.

00:13:41.446 --> 00:13:42.926 A:middle
So, we'll need our app to open

00:13:42.926 --> 00:13:44.806 A:middle
to ask the user what location to

00:13:44.806 --> 00:13:46.176 A:middle
deliver to, and, in that case,

00:13:46.176 --> 00:13:47.466 A:middle
we'll want to not support

00:13:47.556 --> 00:13:49.056 A:middle
background execution for that

00:13:49.056 --> 00:13:50.846 A:middle
shortcut type.

00:13:51.066 --> 00:13:52.736 A:middle
Now, you should specify shortcut

00:13:52.736 --> 00:13:54.676 A:middle
types for every variation of

00:13:54.676 --> 00:13:55.896 A:middle
your shortcut that you think

00:13:55.896 --> 00:13:57.366 A:middle
will be useful so that Siri can

00:13:57.366 --> 00:13:58.496 A:middle
make the best predictions.

00:13:58.946 --> 00:14:00.546 A:middle
And, for the best experience,

00:13:58.946 --> 00:14:00.546 A:middle
And, for the best experience,

00:14:00.776 --> 00:14:02.366 A:middle
you should-- on all the shortcut

00:14:02.366 --> 00:14:03.506 A:middle
types, you can-- support

00:14:03.506 --> 00:14:04.496 A:middle
background execution.

00:14:05.136 --> 00:14:06.686 A:middle
Shortcut types that support

00:14:06.686 --> 00:14:08.226 A:middle
background execution provide

00:14:08.226 --> 00:14:09.756 A:middle
more acceleration to the user,

00:14:09.756 --> 00:14:10.716 A:middle
and so they'll actually be

00:14:10.716 --> 00:14:12.056 A:middle
suggested more frequently.

00:14:13.726 --> 00:14:15.336 A:middle
You can provide up to 16

00:14:15.336 --> 00:14:16.826 A:middle
shortcut types for every intent

00:14:16.826 --> 00:14:17.446 A:middle
that you define.

00:14:18.766 --> 00:14:19.946 A:middle
Now, once your intent is

00:14:19.946 --> 00:14:21.696 A:middle
defined, Xcode will

00:14:21.696 --> 00:14:23.446 A:middle
automatically code generate an

00:14:24.016 --> 00:14:25.596 A:middle
intent class and an intent

00:14:25.596 --> 00:14:26.906 A:middle
handling protocol.

00:14:27.236 --> 00:14:29.176 A:middle
In my case, we've generated the

00:14:29.176 --> 00:14:31.666 A:middle
OrderSoupIntent class and an

00:14:31.746 --> 00:14:33.666 A:middle
OrderSoupIntentHandling protocol

00:14:33.806 --> 00:14:36.116 A:middle
with properties that correspond

00:14:36.266 --> 00:14:37.616 A:middle
to what I just defined in my

00:14:37.616 --> 00:14:39.146 A:middle
intent definition file.

00:14:39.816 --> 00:14:41.386 A:middle
Because Xcode is doing code

00:14:41.386 --> 00:14:42.396 A:middle
generation, it's really

00:14:42.396 --> 00:14:44.316 A:middle
important to consider in which

00:14:44.316 --> 00:14:45.886 A:middle
targets Xcode is doing this code

00:14:45.886 --> 00:14:47.486 A:middle
generation, because you don't

00:14:47.486 --> 00:14:48.796 A:middle
want to end up with duplicate

00:14:48.796 --> 00:14:50.586 A:middle
instances of the same classes

00:14:50.586 --> 00:14:51.576 A:middle
that conflict with each other.

00:14:52.606 --> 00:14:55.026 A:middle
So, let's look at the targets in

00:14:55.156 --> 00:14:56.706 A:middle
the target membership section of

00:14:56.736 --> 00:14:58.156 A:middle
the inspector on my intent

00:14:58.156 --> 00:14:58.876 A:middle
definition file.

00:15:01.046 --> 00:15:02.676 A:middle
Your intent definition file

00:15:02.676 --> 00:15:04.276 A:middle
should be included in every

00:15:04.276 --> 00:15:05.976 A:middle
target in which your intent is

00:15:05.976 --> 00:15:07.496 A:middle
used, so you should check the

00:15:07.496 --> 00:15:10.096 A:middle
box under Target Membership.

00:15:10.506 --> 00:15:11.806 A:middle
But you'll want to make sure

00:15:11.806 --> 00:15:13.066 A:middle
that if you have a framework,

00:15:13.316 --> 00:15:15.096 A:middle
you don't do code generation in

00:15:15.096 --> 00:15:16.086 A:middle
multiple targets that are

00:15:16.086 --> 00:15:16.986 A:middle
included from each other.

00:15:17.126 --> 00:15:19.546 A:middle
So, if you have a framework, set

00:15:19.546 --> 00:15:21.886 A:middle
the target membership to only

00:15:22.066 --> 00:15:23.516 A:middle
generate intent classes for that

00:15:23.586 --> 00:15:25.036 A:middle
framework by choosing intent

00:15:25.036 --> 00:15:26.866 A:middle
classes and choosing no

00:15:26.866 --> 00:15:28.426 A:middle
generated classes for every

00:15:28.426 --> 00:15:29.036 A:middle
other target.

00:15:29.636 --> 00:15:31.496 A:middle
But if you don't have any

00:15:31.576 --> 00:15:32.596 A:middle
frameworks in your app because

00:15:32.596 --> 00:15:33.896 A:middle
you haven't separated your app

00:15:33.896 --> 00:15:35.786 A:middle
into frameworks yet, you should

00:15:35.786 --> 00:15:37.326 A:middle
check the target for every

00:15:37.426 --> 00:15:38.486 A:middle
single target.

00:15:39.326 --> 00:15:41.796 A:middle
And that's how you define custom

00:15:41.796 --> 00:15:42.926 A:middle
intents in Xcode.

00:15:44.296 --> 00:15:45.436 A:middle
Once you've defined your custom

00:15:45.436 --> 00:15:46.776 A:middle
intent, it's really easy to

00:15:46.776 --> 00:15:47.296 A:middle
donate it.

00:15:47.906 --> 00:15:48.886 A:middle
All you have to do is

00:15:48.886 --> 00:15:50.646 A:middle
instantiate your intent object

00:15:51.166 --> 00:15:52.856 A:middle
and then populate its parameters

00:15:52.956 --> 00:15:54.606 A:middle
and create and donate an

00:15:54.766 --> 00:15:55.936 A:middle
INInteraction object.

00:15:56.816 --> 00:15:58.826 A:middle
Make sure to do this every time

00:15:58.866 --> 00:16:00.596 A:middle
the user performs the equivalent

00:15:58.866 --> 00:16:00.596 A:middle
the user performs the equivalent

00:16:00.596 --> 00:16:01.756 A:middle
of your shortcut in your app.

00:16:02.566 --> 00:16:05.246 A:middle
In this case, every time the

00:16:05.366 --> 00:16:07.926 A:middle
user orders soup, I want to

00:16:07.926 --> 00:16:09.396 A:middle
donate this intent, because

00:16:09.396 --> 00:16:10.666 A:middle
that's going to help Siri learn

00:16:10.836 --> 00:16:12.186 A:middle
when is the best time to predict

00:16:12.186 --> 00:16:12.336 A:middle
it?

00:16:13.766 --> 00:16:15.586 A:middle
So, all that's left, now that

00:16:15.586 --> 00:16:16.926 A:middle
we've defined our custom intent,

00:16:16.926 --> 00:16:17.956 A:middle
is to handle it.

00:16:18.216 --> 00:16:19.036 A:middle
And, just like with

00:16:19.036 --> 00:16:20.596 A:middle
NSUserActivity, you should

00:16:20.596 --> 00:16:21.236 A:middle
implement the

00:16:21.236 --> 00:16:23.036 A:middle
continueUserActivity method in

00:16:23.036 --> 00:16:24.576 A:middle
your app delegate in order to

00:16:24.576 --> 00:16:25.366 A:middle
handle your intent.

00:16:26.126 --> 00:16:28.056 A:middle
So, when an intent is opened in

00:16:28.056 --> 00:16:30.066 A:middle
your app, it's passed in as an

00:16:30.066 --> 00:16:32.076 A:middle
NSUserActivity object, whose

00:16:32.076 --> 00:16:34.436 A:middle
activity type is the name of the

00:16:34.436 --> 00:16:36.086 A:middle
intent class that you generated

00:16:36.086 --> 00:16:36.496 A:middle
earlier.

00:16:36.796 --> 00:16:37.686 A:middle
In this case, it's

00:16:37.796 --> 00:16:38.926 A:middle
OrderSoupIntent.

00:16:40.146 --> 00:16:41.666 A:middle
But if you only implement

00:16:41.666 --> 00:16:43.306 A:middle
continueUserActivity, your

00:16:43.306 --> 00:16:44.796 A:middle
shortcut will open your app

00:16:44.796 --> 00:16:45.446 A:middle
every time.

00:16:45.486 --> 00:16:47.036 A:middle
It won't run in the background,

00:16:47.036 --> 00:16:48.766 A:middle
or work inline in Siri, or

00:16:48.766 --> 00:16:50.156 A:middle
support things like custom voice

00:16:50.156 --> 00:16:50.676 A:middle
responses.

00:16:51.056 --> 00:16:52.706 A:middle
So, for the best experience, you

00:16:52.706 --> 00:16:54.486 A:middle
want to create an extension to

00:16:54.486 --> 00:16:55.676 A:middle
handle your shortcut in the

00:16:55.676 --> 00:16:56.176 A:middle
background.

00:16:57.116 --> 00:16:59.716 A:middle
And to do that, create a new

00:16:59.966 --> 00:17:01.736 A:middle
target in your Xcode project and

00:16:59.966 --> 00:17:01.736 A:middle
target in your Xcode project and

00:17:01.736 --> 00:17:03.366 A:middle
choose the Intents Extension

00:17:03.416 --> 00:17:03.806 A:middle
template.

00:17:04.326 --> 00:17:07.836 A:middle
Make your intent handler conform

00:17:07.925 --> 00:17:09.445 A:middle
to the intent handling protocol.

00:17:09.836 --> 00:17:10.636 A:middle
In this case, it's

00:17:10.876 --> 00:17:12.766 A:middle
OrderSoupIntent handling and

00:17:12.766 --> 00:17:14.076 A:middle
then implement these methods,

00:17:14.076 --> 00:17:15.876 A:middle
which are confirm and handle.

00:17:16.425 --> 00:17:17.566 A:middle
Now, note that unlike

00:17:17.566 --> 00:17:19.356 A:middle
traditional SiriKit, you don't

00:17:19.356 --> 00:17:20.846 A:middle
need to implement any resolve

00:17:20.846 --> 00:17:22.876 A:middle
methods, because your intent is

00:17:22.996 --> 00:17:24.346 A:middle
ready to go without any

00:17:24.486 --> 00:17:25.866 A:middle
customization needed or any

00:17:25.866 --> 00:17:26.965 A:middle
follow-ups from the user.

00:17:27.346 --> 00:17:29.676 A:middle
So, in confirm, you should check

00:17:29.676 --> 00:17:30.906 A:middle
all of the values of the

00:17:30.906 --> 00:17:32.126 A:middle
properties of your intent to

00:17:32.126 --> 00:17:33.056 A:middle
make sure that they're valid.

00:17:33.396 --> 00:17:34.596 A:middle
And, if they're not, you should

00:17:34.596 --> 00:17:36.066 A:middle
return an error code if you

00:17:36.066 --> 00:17:36.906 A:middle
don't think you'll be able to

00:17:36.906 --> 00:17:38.096 A:middle
handle that intent.

00:17:38.716 --> 00:17:40.866 A:middle
And then you should handle,

00:17:40.916 --> 00:17:42.726 A:middle
actually perform your shortcut.

00:17:43.086 --> 00:17:44.106 A:middle
So, in this case, that means

00:17:44.106 --> 00:17:45.416 A:middle
actually placing an order for

00:17:45.416 --> 00:17:45.786 A:middle
the soup.

00:17:46.136 --> 00:17:47.996 A:middle
And then you return a response

00:17:47.996 --> 00:17:49.756 A:middle
object that indicates the

00:17:49.756 --> 00:17:51.266 A:middle
outcome, such as success.

00:17:52.926 --> 00:17:54.596 A:middle
Again, you should implement an

00:17:54.596 --> 00:17:56.816 A:middle
intents extension for every

00:17:56.816 --> 00:17:58.476 A:middle
shortcut that can run in the

00:17:58.476 --> 00:18:00.046 A:middle
background, because then they'll

00:17:58.476 --> 00:18:00.046 A:middle
background, because then they'll

00:18:00.046 --> 00:18:01.526 A:middle
run right in line inside of

00:18:01.526 --> 00:18:03.046 A:middle
Siri, on the lock screen, in

00:18:03.046 --> 00:18:04.426 A:middle
search, in the Shortcuts app,

00:18:04.426 --> 00:18:05.796 A:middle
and on the Siri Watch Face,

00:18:05.796 --> 00:18:06.796 A:middle
without having to launch your

00:18:06.796 --> 00:18:07.026 A:middle
app.

00:18:07.726 --> 00:18:08.986 A:middle
The most valuable shortcuts are

00:18:08.986 --> 00:18:09.736 A:middle
the ones that run in the

00:18:09.736 --> 00:18:11.886 A:middle
background, but you can also

00:18:11.886 --> 00:18:12.996 A:middle
build a lot of great other

00:18:12.996 --> 00:18:13.486 A:middle
shortcuts.

00:18:13.736 --> 00:18:15.546 A:middle
And keep in mind that, even if

00:18:15.546 --> 00:18:16.696 A:middle
you implement an intents

00:18:16.696 --> 00:18:18.166 A:middle
extension, you should always

00:18:18.166 --> 00:18:19.816 A:middle
implement continueUserActivity,

00:18:20.126 --> 00:18:21.476 A:middle
because the user will have the

00:18:21.476 --> 00:18:23.076 A:middle
opportunity to open the shortcut

00:18:23.076 --> 00:18:24.816 A:middle
in your app from Siri, for

00:18:24.816 --> 00:18:26.906 A:middle
example, by tapping on the card

00:18:27.206 --> 00:18:29.126 A:middle
in Siri that shows your apps'

00:18:29.126 --> 00:18:31.226 A:middle
custom UI.

00:18:31.766 --> 00:18:33.206 A:middle
So, there's one more thing that

00:18:33.206 --> 00:18:34.506 A:middle
I want to tell you about, which

00:18:34.506 --> 00:18:35.946 A:middle
is INRelevantShortcut.

00:18:36.346 --> 00:18:37.896 A:middle
Now, INRelevantShortcut is the

00:18:37.896 --> 00:18:39.386 A:middle
way to expose shortcuts to the

00:18:39.386 --> 00:18:41.746 A:middle
Siri Watch Face, and you do it

00:18:41.746 --> 00:18:42.726 A:middle
just by providing

00:18:42.876 --> 00:18:44.756 A:middle
INRelevantShortcut objects that

00:18:44.756 --> 00:18:46.706 A:middle
include your intents or user

00:18:46.706 --> 00:18:47.176 A:middle
activities.

00:18:48.026 --> 00:18:49.266 A:middle
You can, optionally, include

00:18:49.266 --> 00:18:50.956 A:middle
relevance information in your

00:18:50.956 --> 00:18:52.316 A:middle
relevant shortcuts, which is a

00:18:52.316 --> 00:18:54.546 A:middle
hint to the Siri Watch Face as

00:18:54.546 --> 00:18:56.046 A:middle
to when your shortcuts will be

00:18:56.046 --> 00:18:57.326 A:middle
relevant and when's the best

00:18:57.326 --> 00:18:58.286 A:middle
time to show your shortcut?

00:18:59.376 --> 00:19:01.266 A:middle
Now, the really cool thing about

00:18:59.376 --> 00:19:01.266 A:middle
Now, the really cool thing about

00:19:01.386 --> 00:19:02.546 A:middle
INRelevantShortcut is that it

00:19:02.546 --> 00:19:03.926 A:middle
works even if you don't have a

00:19:03.926 --> 00:19:04.406 A:middle
Watch app.

00:19:04.806 --> 00:19:06.206 A:middle
So, you can actually expose

00:19:06.206 --> 00:19:07.896 A:middle
relevant shortcuts from your iOS

00:19:07.896 --> 00:19:09.126 A:middle
apps, and if they run in the

00:19:09.126 --> 00:19:10.666 A:middle
background, they'll appear right

00:19:10.666 --> 00:19:11.776 A:middle
on the Siri Watch Face.

00:19:12.276 --> 00:19:13.656 A:middle
Okay, now that we've explored

00:19:13.656 --> 00:19:14.946 A:middle
all the ways that Shortcuts can

00:19:14.946 --> 00:19:17.256 A:middle
be used and how to adopt the

00:19:17.256 --> 00:19:18.586 A:middle
APIs, I'm going to turn it over

00:19:18.586 --> 00:19:20.146 A:middle
to my colleague Willem who's

00:19:20.146 --> 00:19:21.326 A:middle
going to give you a great demo

00:19:21.326 --> 00:19:23.026 A:middle
of how to adopt shortcuts in

00:19:23.026 --> 00:19:23.486 A:middle
Xcode.

00:19:24.726 --> 00:19:24.976 A:middle
Willem?

00:19:25.516 --> 00:19:34.126 A:middle
[ Applause ]

00:19:34.626 --> 00:19:35.266 A:middle
&gt;&gt; Thanks, Ari.

00:19:36.486 --> 00:19:38.976 A:middle
I'm so excited to be the first

00:19:38.976 --> 00:19:42.056 A:middle
one to demo adopting Shortcuts.

00:19:42.756 --> 00:19:45.606 A:middle
Before I dive into Xcode, let me

00:19:45.606 --> 00:19:46.536 A:middle
show you the app we've been

00:19:46.536 --> 00:19:47.066 A:middle
working on.

00:19:47.486 --> 00:19:48.786 A:middle
As Ari mentioned, we've been

00:19:48.786 --> 00:19:50.516 A:middle
working on a soup-ordering app

00:19:50.516 --> 00:19:51.306 A:middle
called Soup Chef.

00:19:51.486 --> 00:19:52.916 A:middle
Let me show it to you.

00:19:59.356 --> 00:20:01.176 A:middle
So, this is Soup Chef.

00:19:59.356 --> 00:20:01.176 A:middle
So, this is Soup Chef.

00:20:01.676 --> 00:20:02.956 A:middle
When I launch the app, I'm

00:20:02.956 --> 00:20:04.646 A:middle
presented with my order history.

00:20:05.106 --> 00:20:06.216 A:middle
Since I haven't ordered anything

00:20:06.216 --> 00:20:07.536 A:middle
yet, this is still empty.

00:20:08.106 --> 00:20:09.516 A:middle
I can place a new order by

00:20:09.516 --> 00:20:10.506 A:middle
tapping the plus button.

00:20:11.346 --> 00:20:12.696 A:middle
This presents me with the soup

00:20:12.696 --> 00:20:13.726 A:middle
menu, where you can see the

00:20:13.726 --> 00:20:15.016 A:middle
available soups I can order.

00:20:15.516 --> 00:20:18.056 A:middle
Let's order a tomato soup.

00:20:18.436 --> 00:20:21.336 A:middle
Next, I can specify the quantity

00:20:21.336 --> 00:20:22.506 A:middle
and options for my soup.

00:20:22.866 --> 00:20:24.586 A:middle
I'll order a single tomato soup

00:20:24.886 --> 00:20:26.816 A:middle
with red pepper, and when I'm

00:20:26.816 --> 00:20:28.446 A:middle
ready to order, I tap the Place

00:20:28.496 --> 00:20:29.056 A:middle
Order button.

00:20:30.306 --> 00:20:31.666 A:middle
I'm brought back to the order

00:20:31.666 --> 00:20:32.586 A:middle
history where you can now see

00:20:32.586 --> 00:20:33.706 A:middle
the order that I just placed.

00:20:34.246 --> 00:20:36.316 A:middle
I can tap the order to see more

00:20:36.316 --> 00:20:37.846 A:middle
details about a specific order.

00:20:38.726 --> 00:20:40.236 A:middle
This view has an associated user

00:20:40.236 --> 00:20:40.776 A:middle
activity.

00:20:41.036 --> 00:20:43.576 A:middle
I think it would be pretty cool

00:20:43.876 --> 00:20:45.196 A:middle
to suggest this to our users,

00:20:45.496 --> 00:20:46.586 A:middle
since our users like to

00:20:46.586 --> 00:20:47.976 A:middle
reminisce about the good soups

00:20:47.976 --> 00:20:49.166 A:middle
they've ordered in the past

00:20:49.166 --> 00:20:50.066 A:middle
[laughter].

00:20:50.066 --> 00:20:52.206 A:middle
And it would be great if this

00:20:52.206 --> 00:20:53.206 A:middle
could be suggested to them.

00:20:53.726 --> 00:20:54.866 A:middle
So, let's go to Xcode and see

00:20:54.866 --> 00:20:57.346 A:middle
how we can do that.

00:20:58.276 --> 00:20:59.596 A:middle
Here, I'm looking at the

00:20:59.596 --> 00:21:01.016 A:middle
viewController for the order

00:20:59.596 --> 00:21:01.016 A:middle
viewController for the order

00:21:01.016 --> 00:21:01.626 A:middle
detail view.

00:21:02.776 --> 00:21:04.766 A:middle
I'm creating a user activity,

00:21:04.926 --> 00:21:06.026 A:middle
and I'm setting the

00:21:06.026 --> 00:21:07.306 A:middle
requiredUserInfoKeys.

00:21:07.896 --> 00:21:08.966 A:middle
I'm also making sure that it's

00:21:08.966 --> 00:21:09.986 A:middle
EligibleForSearch.

00:21:11.316 --> 00:21:14.996 A:middle
For it to be suggested, I also

00:21:14.996 --> 00:21:16.146 A:middle
need to make it eligible for

00:21:16.146 --> 00:21:16.726 A:middle
prediction.

00:21:22.216 --> 00:21:22.736 A:middle
And that's it.

00:21:23.326 --> 00:21:24.346 A:middle
Let's try it out.

00:21:34.226 --> 00:21:35.236 A:middle
First, I need to make sure that

00:21:35.236 --> 00:21:36.766 A:middle
I donate the user activity, so

00:21:36.766 --> 00:21:39.656 A:middle
I'll go back to the view.

00:21:39.656 --> 00:21:40.456 A:middle
That should be enough.

00:21:40.976 --> 00:21:42.366 A:middle
Now we want to make sure that

00:21:42.366 --> 00:21:43.696 A:middle
the donation actually happened,

00:21:43.836 --> 00:21:45.476 A:middle
and, to do that, we added two

00:21:45.476 --> 00:21:47.116 A:middle
new developer settings that make

00:21:47.116 --> 00:21:48.916 A:middle
it super easy to see a recent

00:21:48.916 --> 00:21:50.726 A:middle
donations in search and on the

00:21:50.726 --> 00:21:51.296 A:middle
lock screen.

00:21:51.826 --> 00:21:53.426 A:middle
To enable it, I go to Settings,

00:21:54.126 --> 00:21:55.216 A:middle
and I scroll down to the

00:21:55.216 --> 00:21:56.096 A:middle
developer section.

00:21:57.166 --> 00:21:59.136 A:middle
At the bottom, there are two new

00:21:59.136 --> 00:22:00.776 A:middle
toggles, Display Recent

00:21:59.136 --> 00:22:00.776 A:middle
toggles, Display Recent

00:22:00.776 --> 00:22:02.616 A:middle
Shortcuts and Display Donations

00:22:02.666 --> 00:22:03.386 A:middle
on Lock Screen.

00:22:03.656 --> 00:22:04.386 A:middle
Let's enable both.

00:22:06.166 --> 00:22:08.236 A:middle
I can now go back to the home

00:22:08.236 --> 00:22:09.906 A:middle
screen and pull down to go to

00:22:09.906 --> 00:22:11.416 A:middle
search, and I see the donation

00:22:11.416 --> 00:22:12.356 A:middle
that I just did.

00:22:13.356 --> 00:22:13.656 A:middle
Great.

00:22:14.516 --> 00:22:18.626 A:middle
[ Applause ]

00:22:19.126 --> 00:22:20.496 A:middle
I can tap it, and the app is

00:22:20.496 --> 00:22:21.556 A:middle
launched with that user

00:22:21.556 --> 00:22:23.046 A:middle
activity, and I'm back to the

00:22:23.046 --> 00:22:24.856 A:middle
order that I was just donated.

00:22:25.586 --> 00:22:28.846 A:middle
Great. So, this is pretty good,

00:22:29.216 --> 00:22:30.516 A:middle
but I think we can do a lot

00:22:30.516 --> 00:22:30.826 A:middle
more.

00:22:31.316 --> 00:22:33.326 A:middle
Since the main capability of our

00:22:33.326 --> 00:22:34.856 A:middle
app is ordering soup, it would

00:22:34.856 --> 00:22:35.846 A:middle
be great if this could be

00:22:35.846 --> 00:22:37.556 A:middle
suggested to our users.

00:22:38.016 --> 00:22:39.426 A:middle
And I want users to be able to

00:22:39.426 --> 00:22:40.776 A:middle
do that without having to launch

00:22:40.826 --> 00:22:41.086 A:middle
the app.

00:22:41.626 --> 00:22:43.156 A:middle
So, I'll implement it using an

00:22:43.316 --> 00:22:43.756 A:middle
intent.

00:22:44.506 --> 00:22:47.536 A:middle
There isn't a built-in soup

00:22:47.536 --> 00:22:51.196 A:middle
order intent, but now in iOS 12,

00:22:51.296 --> 00:22:53.116 A:middle
I can create a custom intent, so

00:22:53.116 --> 00:22:54.026 A:middle
I'll do that.

00:22:55.826 --> 00:22:58.076 A:middle
And to start by creating an

00:22:58.076 --> 00:22:59.896 A:middle
intent definition file, I'll go

00:22:59.896 --> 00:23:01.606 A:middle
to File, View.

00:22:59.896 --> 00:23:01.606 A:middle
to File, View.

00:23:02.396 --> 00:23:05.986 A:middle
File and select the SiriKit and

00:23:05.986 --> 00:23:06.946 A:middle
then definition file.

00:23:08.226 --> 00:23:08.826 A:middle
Click Next.

00:23:09.856 --> 00:23:10.806 A:middle
Now I can give it a name.

00:23:10.806 --> 00:23:12.106 A:middle
I'll keep it to Intents, and

00:23:12.356 --> 00:23:13.876 A:middle
I'll put it in the Resources

00:23:13.876 --> 00:23:14.116 A:middle
group.

00:23:14.166 --> 00:23:15.186 A:middle
All right, and I'm ready.

00:23:15.186 --> 00:23:15.806 A:middle
I click Create.

00:23:17.286 --> 00:23:19.026 A:middle
I'm presented with our intent

00:23:19.026 --> 00:23:20.206 A:middle
definition file and our new

00:23:20.206 --> 00:23:21.046 A:middle
Intent Editor.

00:23:21.886 --> 00:23:23.106 A:middle
Before I add the intent, I'll

00:23:23.106 --> 00:23:24.456 A:middle
make sure to include the intent

00:23:24.456 --> 00:23:25.526 A:middle
definition file in the right

00:23:25.526 --> 00:23:26.186 A:middle
targets.

00:23:26.526 --> 00:23:28.456 A:middle
As Ari said, we need to add it

00:23:28.456 --> 00:23:29.556 A:middle
to all the targets where the

00:23:29.556 --> 00:23:30.486 A:middle
intents are used.

00:23:31.096 --> 00:23:32.976 A:middle
So, I'll add it to our shared

00:23:32.976 --> 00:23:34.926 A:middle
framework, and, since we're

00:23:34.926 --> 00:23:35.896 A:middle
using a shared framework, I

00:23:35.896 --> 00:23:37.606 A:middle
don't want it to generate go for

00:23:37.606 --> 00:23:38.196 A:middle
app target.

00:23:38.756 --> 00:23:40.996 A:middle
So, in the dropdown, next to the

00:23:40.996 --> 00:23:42.476 A:middle
app target, I'll select No

00:23:42.476 --> 00:23:43.436 A:middle
generated classes.

00:23:45.016 --> 00:23:46.016 A:middle
Now that that's done, we're

00:23:46.016 --> 00:23:47.096 A:middle
ready to add our intent.

00:23:47.506 --> 00:23:49.766 A:middle
I'll click the plus button in

00:23:49.766 --> 00:23:52.186 A:middle
the lower left corner and select

00:23:52.186 --> 00:23:52.776 A:middle
New Intent.

00:23:53.646 --> 00:23:55.986 A:middle
I'll give it a name OrderSoup.

00:23:58.556 --> 00:24:00.726 A:middle
Next, I'll select the category.

00:23:58.556 --> 00:24:00.726 A:middle
Next, I'll select the category.

00:24:01.006 --> 00:24:02.376 A:middle
In this case, it's an order

00:24:02.426 --> 00:24:02.766 A:middle
intent.

00:24:03.266 --> 00:24:05.946 A:middle
Fill out the title, OrderSoup,

00:24:06.486 --> 00:24:08.606 A:middle
and the description, Order a

00:24:08.786 --> 00:24:10.966 A:middle
soup from Soup Chef.

00:24:12.236 --> 00:24:13.966 A:middle
Since this involves a real-world

00:24:13.966 --> 00:24:15.746 A:middle
transaction, I want to use it to

00:24:15.746 --> 00:24:17.086 A:middle
confirm this order before

00:24:17.086 --> 00:24:18.906 A:middle
placing it, so I'll select User

00:24:18.906 --> 00:24:20.056 A:middle
confirmation required.

00:24:21.546 --> 00:24:22.816 A:middle
Next, let's define the

00:24:22.816 --> 00:24:23.366 A:middle
parameters.

00:24:23.776 --> 00:24:25.256 A:middle
I'm going to define three

00:24:25.256 --> 00:24:27.576 A:middle
parameters, one for the soup,

00:24:28.266 --> 00:24:30.016 A:middle
one for the quantity, and one

00:24:30.016 --> 00:24:31.036 A:middle
for the options that the user

00:24:31.036 --> 00:24:31.566 A:middle
selects.

00:24:32.056 --> 00:24:32.886 A:middle
I'll start with soup.

00:24:33.526 --> 00:24:35.106 A:middle
I click the plus button in the

00:24:35.106 --> 00:24:37.066 A:middle
parameter section and fill out

00:24:37.296 --> 00:24:38.396 A:middle
the name, soup.

00:24:39.186 --> 00:24:41.246 A:middle
Since soup is a custom object of

00:24:41.246 --> 00:24:43.406 A:middle
our app, I'm going to select the

00:24:44.046 --> 00:24:45.176 A:middle
custom type.

00:24:45.726 --> 00:24:47.666 A:middle
Next, I'll add quantity.

00:24:47.966 --> 00:24:49.566 A:middle
I click plus again, fill out the

00:24:49.566 --> 00:24:51.696 A:middle
name, and this is going to be an

00:24:51.746 --> 00:24:52.256 A:middle
integer.

00:24:54.346 --> 00:24:56.486 A:middle
Next, options.

00:24:57.646 --> 00:24:58.756 A:middle
Again, options is a custom

00:24:58.756 --> 00:25:00.186 A:middle
object of our app, so I'll use

00:24:58.756 --> 00:25:00.186 A:middle
object of our app, so I'll use

00:25:00.186 --> 00:25:00.836 A:middle
the custom type.

00:25:01.846 --> 00:25:03.306 A:middle
And since the user can select

00:25:03.306 --> 00:25:04.866 A:middle
multiple options, I'll also

00:25:04.906 --> 00:25:06.676 A:middle
check the array checkbox.

00:25:07.876 --> 00:25:11.076 A:middle
Finally, we need to define the

00:25:11.076 --> 00:25:11.856 A:middle
shortcut types.

00:25:11.856 --> 00:25:13.736 A:middle
At this point, I'm just going to

00:25:13.736 --> 00:25:15.186 A:middle
define a single shortcut type

00:25:15.186 --> 00:25:17.106 A:middle
that contains all the

00:25:17.106 --> 00:25:17.646 A:middle
parameters.

00:25:18.516 --> 00:25:19.816 A:middle
I'll click the plus button in

00:25:19.816 --> 00:25:22.226 A:middle
the shortcut type section and

00:25:22.456 --> 00:25:23.506 A:middle
select the parameters I want to

00:25:23.506 --> 00:25:25.236 A:middle
include in the shortcut type, so

00:25:25.236 --> 00:25:26.996 A:middle
I'll select soup, quantity and

00:25:26.996 --> 00:25:27.456 A:middle
options.

00:25:27.816 --> 00:25:29.076 A:middle
When I'm ready, I click the Add

00:25:29.076 --> 00:25:30.136 A:middle
Shortcut Type button.

00:25:31.176 --> 00:25:33.586 A:middle
I fill out the title Order, and

00:25:33.586 --> 00:25:35.486 A:middle
then I'm going to insert the

00:25:35.576 --> 00:25:39.506 A:middle
quantity and the soup with

00:25:39.846 --> 00:25:42.496 A:middle
options, and I'll leave the

00:25:42.496 --> 00:25:44.186 A:middle
subtitle empty, because I've

00:25:44.186 --> 00:25:45.116 A:middle
already conveyed all the

00:25:45.116 --> 00:25:46.356 A:middle
information I need to in the

00:25:46.356 --> 00:25:46.726 A:middle
title.

00:25:46.896 --> 00:25:49.116 A:middle
I'll also leave Support

00:25:49.116 --> 00:25:50.396 A:middle
background execution checked,

00:25:51.266 --> 00:25:52.416 A:middle
because I want the user to run

00:25:52.416 --> 00:25:56.606 A:middle
this intent in the background.

00:25:56.606 --> 00:25:58.276 A:middle
So, we just defined our first

00:25:58.276 --> 00:25:58.736 A:middle
intent.

00:25:59.286 --> 00:26:00.116 A:middle
Let's start using it.

00:25:59.286 --> 00:26:00.116 A:middle
Let's start using it.

00:26:00.676 --> 00:26:03.016 A:middle
I'll start by adding two helper

00:26:03.016 --> 00:26:05.426 A:middle
methods to our order object to

00:26:05.556 --> 00:26:06.596 A:middle
make it easier to convert

00:26:06.596 --> 00:26:08.016 A:middle
between it and the intent.

00:26:08.916 --> 00:26:11.566 A:middle
I'll go to the order class and,

00:26:11.606 --> 00:26:15.016 A:middle
at the bottom, I'll add an order

00:26:15.016 --> 00:26:15.536 A:middle
extension.

00:26:16.026 --> 00:26:20.146 A:middle
It contains a computer variable

00:26:20.146 --> 00:26:22.196 A:middle
that returns an intent.

00:26:22.196 --> 00:26:23.546 A:middle
In it, I create the intent.

00:26:23.886 --> 00:26:26.266 A:middle
I set the soup quantity and

00:26:26.266 --> 00:26:27.556 A:middle
options, and I return the

00:26:27.556 --> 00:26:27.926 A:middle
intent.

00:26:28.966 --> 00:26:30.316 A:middle
Extension also defines a new

00:26:30.316 --> 00:26:31.466 A:middle
initializer that dates an

00:26:31.466 --> 00:26:31.846 A:middle
intent.

00:26:32.556 --> 00:26:34.316 A:middle
In it, I extract the soup,

00:26:34.636 --> 00:26:36.996 A:middle
quantity, and options, and then

00:26:37.046 --> 00:26:38.786 A:middle
I initialize the order with

00:26:38.956 --> 00:26:40.096 A:middle
those values.

00:26:41.056 --> 00:26:42.216 A:middle
Great, this will be very

00:26:42.216 --> 00:26:42.556 A:middle
helpful.

00:26:43.926 --> 00:26:45.256 A:middle
Next, we need to make sure that

00:26:45.256 --> 00:26:46.996 A:middle
we donate the intent every time

00:26:46.996 --> 00:26:48.156 A:middle
the user places an order.

00:26:48.726 --> 00:26:50.296 A:middle
So, I'll go to the soup order

00:26:50.296 --> 00:26:53.026 A:middle
data manager, and, in the

00:26:53.026 --> 00:26:54.656 A:middle
placeOrder method, I'll add our

00:26:54.656 --> 00:26:55.436 A:middle
donation logic.

00:26:57.486 --> 00:26:59.716 A:middle
I create an INInteraction that

00:26:59.716 --> 00:27:01.266 A:middle
contains the intent of the

00:26:59.716 --> 00:27:01.266 A:middle
contains the intent of the

00:27:01.266 --> 00:27:03.126 A:middle
order, and then I just donate

00:27:03.126 --> 00:27:06.066 A:middle
that interaction, and that's it.

00:27:07.336 --> 00:27:08.606 A:middle
Finally, we need to handle the

00:27:08.606 --> 00:27:09.036 A:middle
intent.

00:27:09.366 --> 00:27:11.056 A:middle
I'll start by adding support in

00:27:11.056 --> 00:27:13.196 A:middle
the app itself, so I'll go to

00:27:13.196 --> 00:27:15.196 A:middle
the AppDelegate, and, in the

00:27:15.196 --> 00:27:17.086 A:middle
continueUserActivity, I'll add

00:27:17.086 --> 00:27:17.686 A:middle
support for it.

00:27:18.236 --> 00:27:22.086 A:middle
I check if the activityType of

00:27:22.616 --> 00:27:24.396 A:middle
the userActivity is equal to the

00:27:24.396 --> 00:27:26.096 A:middle
class name of the intent that I

00:27:26.096 --> 00:27:26.786 A:middle
want to handle.

00:27:27.216 --> 00:27:29.196 A:middle
If that's the case, I extract

00:27:29.196 --> 00:27:30.196 A:middle
the intent from the

00:27:30.196 --> 00:27:32.226 A:middle
userActivity, and I generate an

00:27:32.226 --> 00:27:32.886 A:middle
order with it.

00:27:33.346 --> 00:27:34.966 A:middle
Finally, I present the order

00:27:34.966 --> 00:27:35.276 A:middle
view.

00:27:35.686 --> 00:27:37.426 A:middle
So, since we're launching the

00:27:37.426 --> 00:27:38.966 A:middle
app, I'm assuming that the user

00:27:38.966 --> 00:27:39.776 A:middle
doesn't want to immediately

00:27:39.776 --> 00:27:41.096 A:middle
place the order but wants to

00:27:41.096 --> 00:27:42.746 A:middle
make some customizations before

00:27:42.746 --> 00:27:44.566 A:middle
placing it, so that's why I'm

00:27:44.566 --> 00:27:45.596 A:middle
presenting the order view

00:27:45.596 --> 00:27:46.036 A:middle
instead.

00:27:46.846 --> 00:27:50.276 A:middle
And, finally, let's add support

00:27:50.456 --> 00:27:52.556 A:middle
with an intents extension so the

00:27:52.556 --> 00:27:54.106 A:middle
user can run this intent in the

00:27:54.106 --> 00:27:54.646 A:middle
background.

00:27:55.506 --> 00:27:56.776 A:middle
I'll need to add an intents

00:27:56.776 --> 00:27:58.216 A:middle
extension first, so I'll go to

00:27:58.216 --> 00:28:02.966 A:middle
File, View, Target and select

00:27:58.216 --> 00:28:02.966 A:middle
File, View, Target and select

00:28:02.966 --> 00:28:04.446 A:middle
the Intents Extension target.

00:28:05.676 --> 00:28:06.496 A:middle
I'll give it a name,

00:28:06.656 --> 00:28:09.826 A:middle
SoupChefIntents, and I click

00:28:09.826 --> 00:28:10.286 A:middle
Finish.

00:28:11.256 --> 00:28:14.956 A:middle
Since I've added a new target

00:28:14.956 --> 00:28:17.316 A:middle
where I'll use the intents, I

00:28:17.316 --> 00:28:18.166 A:middle
need to make sure that the

00:28:18.166 --> 00:28:19.316 A:middle
intent definition file is

00:28:19.316 --> 00:28:20.386 A:middle
included in that target.

00:28:20.746 --> 00:28:21.906 A:middle
So, I go back to the intent

00:28:21.906 --> 00:28:23.956 A:middle
definition file and add it to

00:28:24.036 --> 00:28:25.156 A:middle
that target.

00:28:25.716 --> 00:28:27.196 A:middle
Again, I don't want to generate

00:28:27.196 --> 00:28:28.226 A:middle
code in that target, so, in the

00:28:28.226 --> 00:28:29.656 A:middle
dropdown, I'll select No

00:28:29.656 --> 00:28:33.726 A:middle
generated classes.

00:28:34.616 --> 00:28:36.976 A:middle
I also want the extension to

00:28:36.976 --> 00:28:38.406 A:middle
have access to the same data as

00:28:38.406 --> 00:28:40.066 A:middle
the app, so I'll add it to the

00:28:40.066 --> 00:28:40.766 A:middle
same app group.

00:28:41.646 --> 00:28:43.316 A:middle
In the Project Settings, I

00:28:43.316 --> 00:28:47.276 A:middle
select the intents target and in

00:28:47.546 --> 00:28:49.146 A:middle
the capability step, I'll add it

00:28:49.316 --> 00:28:52.286 A:middle
to the same app group.

00:28:52.486 --> 00:28:53.886 A:middle
Great. Now, we're ready to

00:28:53.886 --> 00:28:55.226 A:middle
implement the intent handler

00:28:55.346 --> 00:28:56.556 A:middle
that was created with this

00:28:56.556 --> 00:28:56.916 A:middle
target.

00:28:59.886 --> 00:29:01.626 A:middle
First, I'll import our shared

00:28:59.886 --> 00:29:01.626 A:middle
First, I'll import our shared

00:29:01.626 --> 00:29:02.866 A:middle
framework, SoupKit [laughs].

00:29:03.956 --> 00:29:08.316 A:middle
Since we're going to handle the

00:29:08.316 --> 00:29:10.086 A:middle
OrderSoupIntent, this intent

00:29:10.086 --> 00:29:11.766 A:middle
handler needs to conform to the

00:29:11.766 --> 00:29:12.996 A:middle
OrderSoupIntentHandling

00:29:12.996 --> 00:29:13.606 A:middle
protocol.

00:29:15.136 --> 00:29:17.756 A:middle
This was generated as part of

00:29:18.406 --> 00:29:19.356 A:middle
our intent.

00:29:21.276 --> 00:29:23.466 A:middle
This protocol has one required

00:29:23.466 --> 00:29:25.826 A:middle
method, the handle method.

00:29:25.826 --> 00:29:28.226 A:middle
Let's implement it.

00:29:28.876 --> 00:29:31.456 A:middle
In the handle method, I get an

00:29:31.456 --> 00:29:31.926 A:middle
intent.

00:29:32.746 --> 00:29:33.926 A:middle
I create an order from that

00:29:33.926 --> 00:29:36.186 A:middle
intent, and, if that succeeds, I

00:29:36.186 --> 00:29:38.226 A:middle
place the order, and I call the

00:29:38.226 --> 00:29:39.416 A:middle
completion with an intent

00:29:39.416 --> 00:29:40.916 A:middle
response with a success code.

00:29:41.706 --> 00:29:43.186 A:middle
If I'm unable to create an order

00:29:43.416 --> 00:29:45.016 A:middle
from the intent, I call

00:29:45.016 --> 00:29:46.096 A:middle
completion with an intent

00:29:46.096 --> 00:29:47.326 A:middle
response with a failure code.

00:29:47.816 --> 00:29:49.566 A:middle
And that's it.

00:29:49.566 --> 00:29:50.946 A:middle
I've just added support for a

00:29:50.946 --> 00:29:53.016 A:middle
new intent in my app.

00:29:53.016 --> 00:29:53.686 A:middle
Let's try it out.

00:30:04.736 --> 00:30:06.366 A:middle
First, I'll need to donate the

00:30:06.366 --> 00:30:06.786 A:middle
intent.

00:30:06.856 --> 00:30:08.006 A:middle
So, I'll place another order.

00:30:08.566 --> 00:30:10.276 A:middle
Click the plus button and this

00:30:10.276 --> 00:30:11.726 A:middle
time I'm going to order a clam

00:30:11.726 --> 00:30:16.356 A:middle
chowder with croutons, and I'll

00:30:16.356 --> 00:30:16.896 A:middle
place the order.

00:30:17.996 --> 00:30:19.136 A:middle
Now, if we go back to the home

00:30:19.136 --> 00:30:21.316 A:middle
screen and pull down, I see my

00:30:21.546 --> 00:30:22.346 A:middle
donated intent.

00:30:22.486 --> 00:30:22.786 A:middle
Great.

00:30:23.516 --> 00:30:28.196 A:middle
[ Applause ]

00:30:28.696 --> 00:30:30.826 A:middle
I can tap it, and I'm presented

00:30:30.826 --> 00:30:32.216 A:middle
with a shortcut view and the

00:30:32.246 --> 00:30:32.886 A:middle
order button.

00:30:33.266 --> 00:30:34.606 A:middle
If I tap the order button, the

00:30:34.606 --> 00:30:35.646 A:middle
order will be placed in the

00:30:35.646 --> 00:30:38.096 A:middle
background, and it's ordered.

00:30:38.926 --> 00:30:40.346 A:middle
I can go back to the app and see

00:30:40.346 --> 00:30:42.106 A:middle
if it was actually ordered, and,

00:30:42.106 --> 00:30:43.556 A:middle
yeah, there is a new order in my

00:30:43.556 --> 00:30:43.796 A:middle
app.

00:30:44.086 --> 00:30:44.976 A:middle
Great, so easy.

00:30:45.516 --> 00:30:53.686 A:middle
[ Applause ]

00:30:54.186 --> 00:30:55.726 A:middle
I can also, instead of tapping

00:30:55.726 --> 00:30:57.156 A:middle
the order button, tap the

00:30:57.156 --> 00:30:58.856 A:middle
shortcut view, itself, which

00:30:58.856 --> 00:31:00.646 A:middle
will launch the app with the

00:30:58.856 --> 00:31:00.646 A:middle
will launch the app with the

00:31:00.646 --> 00:31:02.586 A:middle
shortcut, and, as I implemented

00:31:02.586 --> 00:31:03.686 A:middle
it, it shows the order view,

00:31:03.896 --> 00:31:05.176 A:middle
where I can customize the order.

00:31:05.266 --> 00:31:07.026 A:middle
So, I'll add cheese, too.

00:31:07.206 --> 00:31:07.576 A:middle
Who knows?

00:31:08.236 --> 00:31:09.496 A:middle
And I'll place the order.

00:31:11.126 --> 00:31:14.396 A:middle
Great. Finally, let's add the

00:31:14.396 --> 00:31:15.516 A:middle
shortcut to Siri.

00:31:16.996 --> 00:31:19.156 A:middle
I'll go to Settings, and I

00:31:19.156 --> 00:31:20.896 A:middle
scroll up to the Siri and

00:31:20.896 --> 00:31:21.316 A:middle
search.

00:31:22.206 --> 00:31:23.496 A:middle
Here I can select the shortcut

00:31:23.496 --> 00:31:24.796 A:middle
that I want to add to Siri.

00:31:25.366 --> 00:31:26.856 A:middle
In this case, I'll add the order

00:31:26.856 --> 00:31:28.636 A:middle
one clam chowder with croutons.

00:31:30.206 --> 00:31:31.456 A:middle
When I tap the record button, I

00:31:31.456 --> 00:31:32.626 A:middle
can say the phrase I want to

00:31:32.626 --> 00:31:35.026 A:middle
associate with the shortcut.

00:31:35.456 --> 00:31:36.286 A:middle
Soup time.

00:31:37.446 --> 00:31:38.876 A:middle
Now, they got it.

00:31:39.516 --> 00:31:45.500 A:middle
[ Applause ]

00:31:48.636 --> 00:31:50.296 A:middle
Let's take a step back and look

00:31:50.296 --> 00:31:51.516 A:middle
at what we just did.

00:31:51.946 --> 00:31:53.126 A:middle
We started by making an

00:31:53.126 --> 00:31:54.856 A:middle
NSUserActivity that was already

00:31:54.856 --> 00:31:56.536 A:middle
implemented in our app eligible

00:31:56.536 --> 00:31:57.226 A:middle
for prediction.

00:31:57.886 --> 00:31:59.256 A:middle
This allowed it to be suggested

00:31:59.376 --> 00:32:00.706 A:middle
and is a really easy way to

00:31:59.376 --> 00:32:00.706 A:middle
and is a really easy way to

00:32:00.706 --> 00:32:03.076 A:middle
expose the content of your app.

00:32:04.306 --> 00:32:06.046 A:middle
Next, we defined a custom

00:32:06.046 --> 00:32:06.396 A:middle
intent.

00:32:07.026 --> 00:32:08.806 A:middle
This is really the best way to

00:32:08.806 --> 00:32:09.786 A:middle
represent a piece of key

00:32:09.786 --> 00:32:11.236 A:middle
functionality of your app.

00:32:11.866 --> 00:32:13.256 A:middle
In our case, that was ordering a

00:32:13.256 --> 00:32:13.536 A:middle
soup.

00:32:13.986 --> 00:32:16.046 A:middle
After defining the intent, we

00:32:16.046 --> 00:32:17.136 A:middle
made sure that we donate the

00:32:17.136 --> 00:32:18.626 A:middle
intent every time the user

00:32:18.716 --> 00:32:20.006 A:middle
placed an order inside of the

00:32:20.006 --> 00:32:20.196 A:middle
app.

00:32:20.196 --> 00:32:23.176 A:middle
And, finally, we handled the

00:32:23.176 --> 00:32:25.196 A:middle
intent, both in an extension to

00:32:25.196 --> 00:32:27.266 A:middle
support background execution and

00:32:27.266 --> 00:32:29.156 A:middle
in the app itself so the user

00:32:29.156 --> 00:32:31.426 A:middle
can launch the app with the

00:32:32.176 --> 00:32:32.426 A:middle
shortcut.

00:32:34.066 --> 00:32:35.766 A:middle
So, now that we've seen how you

00:32:35.766 --> 00:32:37.786 A:middle
can adopt shortcuts, let's take

00:32:37.786 --> 00:32:39.666 A:middle
a look at how those shortcuts

00:32:39.666 --> 00:32:41.176 A:middle
are suggested and what you can

00:32:41.176 --> 00:32:42.866 A:middle
do to make sure your users see

00:32:42.866 --> 00:32:44.506 A:middle
the best possible suggestions.

00:32:45.096 --> 00:32:48.366 A:middle
Every time a user performs an

00:32:48.366 --> 00:32:50.526 A:middle
action in your app and your app

00:32:50.526 --> 00:32:53.036 A:middle
donates this, the system will

00:32:53.036 --> 00:32:56.086 A:middle
look at the time, location, and

00:32:56.086 --> 00:32:56.726 A:middle
other signals.

00:32:58.106 --> 00:32:59.906 A:middle
For a time, we consider, among

00:32:59.906 --> 00:33:01.396 A:middle
other things, the time of day

00:32:59.906 --> 00:33:01.396 A:middle
other things, the time of day

00:33:01.736 --> 00:33:02.656 A:middle
and the day of the week.

00:33:03.256 --> 00:33:04.946 A:middle
Well, for the location, we look

00:33:04.946 --> 00:33:06.216 A:middle
at the overall location of the

00:33:06.216 --> 00:33:07.286 A:middle
user and see if it's a

00:33:07.286 --> 00:33:08.736 A:middle
significant location for that

00:33:08.736 --> 00:33:09.046 A:middle
user.

00:33:09.646 --> 00:33:12.776 A:middle
Let's see how the system now

00:33:12.776 --> 00:33:14.566 A:middle
uses these to make a suggestion.

00:33:16.016 --> 00:33:17.736 A:middle
Here, we'll just consider the

00:33:18.436 --> 00:33:18.526 A:middle
time.

00:33:19.216 --> 00:33:20.786 A:middle
Monday, at lunch, I order a

00:33:20.786 --> 00:33:22.506 A:middle
tomato soup with croutons.

00:33:23.766 --> 00:33:25.106 A:middle
That evening, I don't feel like

00:33:25.106 --> 00:33:26.516 A:middle
croutons, so I order a tomato

00:33:26.566 --> 00:33:27.516 A:middle
with red pepper instead.

00:33:27.516 --> 00:33:30.866 A:middle
Next day at lunch, I, again,

00:33:30.866 --> 00:33:32.016 A:middle
order a tomato soup with

00:33:32.016 --> 00:33:32.466 A:middle
croutons.

00:33:33.326 --> 00:33:34.686 A:middle
I keep doing this throughout the

00:33:34.686 --> 00:33:36.966 A:middle
week, and, on Friday, at lunch,

00:33:37.246 --> 00:33:38.156 A:middle
Siri might try to find a

00:33:38.156 --> 00:33:38.926 A:middle
suggestion for me.

00:33:39.806 --> 00:33:41.926 A:middle
It will look at my past behavior

00:33:41.926 --> 00:33:43.286 A:middle
and try to find a pattern in it.

00:33:43.806 --> 00:33:45.286 A:middle
And since it's lunchtime, and I

00:33:45.286 --> 00:33:46.546 A:middle
usually order a tomato soup with

00:33:46.666 --> 00:33:48.486 A:middle
croutons at lunchtime, Siri

00:33:48.566 --> 00:33:50.486 A:middle
might notice this and suggest

00:33:50.486 --> 00:33:51.986 A:middle
this to me, which is great.

00:33:51.986 --> 00:33:53.096 A:middle
It's exactly what I wanted.

00:33:54.546 --> 00:33:56.196 A:middle
So, this is all pretty high

00:33:56.196 --> 00:33:57.546 A:middle
level, so let's take a look at

00:33:57.546 --> 00:33:59.526 A:middle
how it actually works, starting

00:33:59.706 --> 00:34:00.886 A:middle
with NSUserActivity.

00:33:59.706 --> 00:34:00.886 A:middle
with NSUserActivity.

00:34:01.196 --> 00:34:04.586 A:middle
Imagine a user activity for the

00:34:04.586 --> 00:34:06.346 A:middle
place order screen in Soup Chef.

00:34:06.676 --> 00:34:08.166 A:middle
The user info dictionary could

00:34:08.166 --> 00:34:09.926 A:middle
contain three keys, soup,

00:34:10.255 --> 00:34:11.985 A:middle
quantity, and scroll position.

00:34:12.485 --> 00:34:13.835 A:middle
The last one is there, so, in

00:34:13.835 --> 00:34:15.036 A:middle
Handoff, you can bring the user

00:34:15.036 --> 00:34:16.346 A:middle
back to the exact position they

00:34:16.346 --> 00:34:17.146 A:middle
were last in.

00:34:18.286 --> 00:34:20.246 A:middle
Let's take a look at how this

00:34:20.366 --> 00:34:22.156 A:middle
can be suggested to the user.

00:34:22.815 --> 00:34:25.916 A:middle
We start by donating a user

00:34:25.916 --> 00:34:27.596 A:middle
activity where the soup is

00:34:27.596 --> 00:34:29.716 A:middle
tomato, the quantity is 1, and

00:34:29.716 --> 00:34:30.926 A:middle
the scroll position is 79

00:34:30.926 --> 00:34:31.366 A:middle
points.

00:34:32.005 --> 00:34:34.076 A:middle
Next, we donate a similar user

00:34:34.076 --> 00:34:35.196 A:middle
activity, but now scroll

00:34:35.196 --> 00:34:36.686 A:middle
position is changed to 110

00:34:36.686 --> 00:34:37.005 A:middle
points.

00:34:38.176 --> 00:34:40.335 A:middle
We keep doing this, and, at some

00:34:40.335 --> 00:34:41.536 A:middle
point, Siri will try to find a

00:34:41.536 --> 00:34:42.376 A:middle
suggestion again.

00:34:42.976 --> 00:34:46.206 A:middle
It will look at past behavior

00:34:46.206 --> 00:34:47.315 A:middle
and try to find a pattern of

00:34:47.406 --> 00:34:48.556 A:middle
equal user activities.

00:34:49.295 --> 00:34:51.126 A:middle
But since the scroll position is

00:34:51.176 --> 00:34:52.985 A:middle
so inconsistent over time, it

00:34:52.985 --> 00:34:54.196 A:middle
might not be able to find a

00:34:54.196 --> 00:34:54.806 A:middle
suggestion.

00:34:56.346 --> 00:34:58.326 A:middle
So, how can we fix this?

00:34:59.856 --> 00:35:00.966 A:middle
We can use the

00:34:59.856 --> 00:35:00.966 A:middle
We can use the

00:35:00.966 --> 00:35:02.366 A:middle
requiredUserInfoKeys.

00:35:03.486 --> 00:35:05.046 A:middle
RequiredUserInfoKeys is an

00:35:05.046 --> 00:35:06.706 A:middle
existing property of a user

00:35:06.706 --> 00:35:07.236 A:middle
activity.

00:35:07.876 --> 00:35:09.406 A:middle
It represents the minimal amount

00:35:09.406 --> 00:35:11.066 A:middle
of information that is necessary

00:35:11.066 --> 00:35:12.866 A:middle
to restore the app to the state

00:35:12.866 --> 00:35:13.806 A:middle
that the user activity

00:35:13.806 --> 00:35:14.336 A:middle
represents.

00:35:14.336 --> 00:35:17.366 A:middle
And for suggestions it will be

00:35:17.366 --> 00:35:19.216 A:middle
used to determine which keys of

00:35:19.216 --> 00:35:21.026 A:middle
the user info dictionary will be

00:35:21.026 --> 00:35:22.986 A:middle
used to compare when looking for

00:35:22.986 --> 00:35:23.466 A:middle
patterns.

00:35:24.476 --> 00:35:25.856 A:middle
Let's apply this to a previous

00:35:25.856 --> 00:35:26.326 A:middle
example.

00:35:27.916 --> 00:35:29.166 A:middle
Now we specify that

00:35:29.166 --> 00:35:31.246 A:middle
requiredUserInfoKeys are soup

00:35:31.436 --> 00:35:32.176 A:middle
and quantity.

00:35:32.726 --> 00:35:34.076 A:middle
Again, we donate the user

00:35:34.076 --> 00:35:36.026 A:middle
activity where the soup is

00:35:36.026 --> 00:35:38.066 A:middle
tomato, the quantity is 1, and

00:35:38.066 --> 00:35:39.226 A:middle
the scroll position is 79

00:35:39.226 --> 00:35:39.606 A:middle
points.

00:35:39.856 --> 00:35:41.246 A:middle
But now the scroll position will

00:35:41.246 --> 00:35:41.816 A:middle
be ignored.

00:35:42.986 --> 00:35:43.946 A:middle
Next, we donate something

00:35:43.946 --> 00:35:45.556 A:middle
similar, and, again, the scroll

00:35:45.556 --> 00:35:46.326 A:middle
position is ignored.

00:35:47.166 --> 00:35:49.546 A:middle
We keep doing this, and, at some

00:35:49.546 --> 00:35:51.426 A:middle
point, Siri will try suggestion

00:35:51.426 --> 00:35:51.656 A:middle
again.

00:35:53.046 --> 00:35:54.546 A:middle
Now, I will look back and try to

00:35:54.546 --> 00:35:55.666 A:middle
find a pattern of equal user

00:35:55.666 --> 00:35:56.196 A:middle
activities.

00:35:56.196 --> 00:35:57.226 A:middle
And since it's no longer

00:35:57.226 --> 00:35:59.166 A:middle
considering the scroll position,

00:35:59.306 --> 00:36:01.616 A:middle
it might be able to say, "An

00:35:59.306 --> 00:36:01.616 A:middle
it might be able to say, "An

00:36:01.616 --> 00:36:03.736 A:middle
NSUserActivity with soup tomato

00:36:03.986 --> 00:36:05.546 A:middle
and quantity 1 is a good

00:36:05.546 --> 00:36:07.056 A:middle
suggestion for this user."

00:36:08.096 --> 00:36:10.456 A:middle
So, as you just saw, it's really

00:36:10.456 --> 00:36:11.796 A:middle
important to specify the right

00:36:11.846 --> 00:36:13.606 A:middle
set of keys as being required.

00:36:13.606 --> 00:36:14.946 A:middle
Otherwise, your users might not

00:36:14.946 --> 00:36:16.306 A:middle
get any suggestions at all.

00:36:17.076 --> 00:36:18.696 A:middle
So, that's how it worked for

00:36:18.696 --> 00:36:19.476 A:middle
user activity.

00:36:20.826 --> 00:36:23.006 A:middle
Intents work similarly but offer

00:36:23.006 --> 00:36:24.416 A:middle
you a lot more flexibility.

00:36:25.386 --> 00:36:29.086 A:middle
The main signal for intents are

00:36:29.086 --> 00:36:30.046 A:middle
the shortcut types that you

00:36:30.046 --> 00:36:30.456 A:middle
define.

00:36:31.866 --> 00:36:33.766 A:middle
Each shortcut type defines a

00:36:33.766 --> 00:36:35.166 A:middle
combination of parameters that

00:36:35.166 --> 00:36:36.306 A:middle
is valid for suggestion.

00:36:36.966 --> 00:36:39.036 A:middle
It's similar to the

00:36:39.276 --> 00:36:40.556 A:middle
requiredUserInfoKeys, but

00:36:40.556 --> 00:36:41.896 A:middle
instead of having just one set,

00:36:42.076 --> 00:36:43.056 A:middle
you can define multiple.

00:36:43.666 --> 00:36:46.286 A:middle
Let's apply this to our Soup

00:36:46.286 --> 00:36:48.466 A:middle
Chef app.

00:36:48.466 --> 00:36:49.526 A:middle
Earlier, I defined an

00:36:49.526 --> 00:36:51.046 A:middle
OrderSoupIntent with three

00:36:51.046 --> 00:36:53.246 A:middle
parameters, soup, quantity, and

00:36:53.246 --> 00:36:53.676 A:middle
options.

00:36:54.026 --> 00:36:55.566 A:middle
At the time, I only defined a

00:36:55.566 --> 00:36:56.606 A:middle
single shortcut type that

00:36:56.606 --> 00:36:57.426 A:middle
combined all of these

00:36:57.466 --> 00:36:59.536 A:middle
parameters, but, ideally, you

00:36:59.536 --> 00:37:00.906 A:middle
would define more shortcut

00:36:59.536 --> 00:37:00.906 A:middle
would define more shortcut

00:37:00.906 --> 00:37:01.876 A:middle
types, since that gives more

00:37:01.876 --> 00:37:03.356 A:middle
options to the system to find

00:37:03.356 --> 00:37:04.326 A:middle
patterns in your user's

00:37:04.366 --> 00:37:04.776 A:middle
behavior.

00:37:05.596 --> 00:37:07.066 A:middle
So, now I'll define three.

00:37:08.136 --> 00:37:09.456 A:middle
One shortcut type that combines

00:37:09.456 --> 00:37:10.966 A:middle
soup and quantity, one that

00:37:10.966 --> 00:37:12.666 A:middle
combines soup and options, and

00:37:12.666 --> 00:37:14.056 A:middle
one that combines all three

00:37:14.126 --> 00:37:14.596 A:middle
parameters.

00:37:15.786 --> 00:37:17.326 A:middle
Let's apply this to another

00:37:17.326 --> 00:37:17.806 A:middle
example.

00:37:19.426 --> 00:37:21.586 A:middle
Again, I start on Monday, at

00:37:21.586 --> 00:37:23.136 A:middle
lunch, by ordering a tomato soup

00:37:23.326 --> 00:37:23.926 A:middle
with croutons.

00:37:24.846 --> 00:37:26.796 A:middle
The Soup Chef app donates this

00:37:26.846 --> 00:37:28.836 A:middle
to the system, and the system

00:37:28.836 --> 00:37:29.966 A:middle
will split us up into all the

00:37:29.966 --> 00:37:31.556 A:middle
possible combinations based on

00:37:31.556 --> 00:37:33.806 A:middle
the shortcut types that I just

00:37:34.576 --> 00:37:35.396 A:middle
defined.

00:37:35.396 --> 00:37:36.926 A:middle
That evening, I order a tomato

00:37:36.926 --> 00:37:37.866 A:middle
soup with red pepper.

00:37:38.636 --> 00:37:40.696 A:middle
Again, it gets donated, and it

00:37:40.696 --> 00:37:41.866 A:middle
will be split up in all the

00:37:41.866 --> 00:37:42.746 A:middle
possible combinations.

00:37:44.166 --> 00:37:45.376 A:middle
Next day, at lunch, I order a

00:37:45.376 --> 00:37:46.786 A:middle
tomato soup with croutons.

00:37:46.786 --> 00:37:48.456 A:middle
It gets donated and split up.

00:37:48.456 --> 00:37:50.876 A:middle
I keep doing this throughout the

00:37:50.876 --> 00:37:52.406 A:middle
week, and, on Friday, at lunch,

00:37:52.626 --> 00:37:53.476 A:middle
Siri might try to find a

00:37:53.476 --> 00:37:53.996 A:middle
suggestion.

00:37:55.076 --> 00:37:56.616 A:middle
It might see that I often order

00:37:56.616 --> 00:37:57.876 A:middle
a single tomato soup.

00:37:59.106 --> 00:38:04.476 A:middle
But since it's lunchtime, it

00:37:59.106 --> 00:38:04.476 A:middle
But since it's lunchtime, it

00:38:04.476 --> 00:38:06.556 A:middle
also can see that, at lunchtime,

00:38:06.556 --> 00:38:08.206 A:middle
usually order a tomato soup with

00:38:08.206 --> 00:38:08.666 A:middle
croutons.

00:38:09.726 --> 00:38:11.516 A:middle
Since that is a more specific

00:38:11.516 --> 00:38:12.856 A:middle
shortcut, it will end up

00:38:12.856 --> 00:38:14.746 A:middle
preferring to suggest that.

00:38:14.746 --> 00:38:16.236 A:middle
So, I might get a suggestion to

00:38:16.236 --> 00:38:17.686 A:middle
order a tomato soup with

00:38:17.686 --> 00:38:18.166 A:middle
croutons.

00:38:18.466 --> 00:38:21.516 A:middle
Great. So, that's how

00:38:21.516 --> 00:38:22.456 A:middle
suggestions are made.

00:38:23.296 --> 00:38:24.716 A:middle
Let's now take a look at how to

00:38:24.826 --> 00:38:27.716 A:middle
make sure those suggestions are

00:38:27.716 --> 00:38:29.266 A:middle
good, and it all starts from

00:38:29.266 --> 00:38:30.836 A:middle
making good donations.

00:38:31.546 --> 00:38:34.656 A:middle
A good donation should be

00:38:34.656 --> 00:38:36.096 A:middle
something that is likely to be

00:38:36.096 --> 00:38:36.606 A:middle
repeated.

00:38:37.576 --> 00:38:39.276 A:middle
For user activity, there could

00:38:39.276 --> 00:38:40.686 A:middle
be some content they might look

00:38:40.686 --> 00:38:41.186 A:middle
at often.

00:38:41.856 --> 00:38:43.156 A:middle
Or, for an intent, there could

00:38:43.206 --> 00:38:44.796 A:middle
be an action the user would take

00:38:44.796 --> 00:38:45.316 A:middle
regularly.

00:38:45.316 --> 00:38:48.936 A:middle
You should make sure that the

00:38:48.936 --> 00:38:50.436 A:middle
payload of what you're donating

00:38:50.636 --> 00:38:51.966 A:middle
is consistent across all your

00:38:51.966 --> 00:38:53.536 A:middle
donations, since that is what

00:38:53.536 --> 00:38:55.506 A:middle
will be compared when looking

00:38:56.246 --> 00:38:58.196 A:middle
for patterns.

00:38:58.196 --> 00:38:59.906 A:middle
A good donation should also not

00:38:59.906 --> 00:39:01.946 A:middle
include a timestamp, since that

00:38:59.906 --> 00:39:01.946 A:middle
include a timestamp, since that

00:39:01.946 --> 00:39:03.726 A:middle
might not longer be relevant by

00:39:03.726 --> 00:39:04.846 A:middle
the time this donation would be

00:39:04.846 --> 00:39:05.426 A:middle
suggested.

00:39:06.576 --> 00:39:08.976 A:middle
For instance, a shortcut that

00:39:08.976 --> 00:39:09.766 A:middle
shows appointments for a

00:39:09.766 --> 00:39:11.396 A:middle
specific day is probably not

00:39:11.396 --> 00:39:12.926 A:middle
that useful, since, if you see

00:39:12.926 --> 00:39:14.586 A:middle
that the next day or later,

00:39:14.586 --> 00:39:15.756 A:middle
you're probably no longer

00:39:15.756 --> 00:39:16.976 A:middle
interested in the meetings of

00:39:16.976 --> 00:39:18.026 A:middle
that specific day.

00:39:19.156 --> 00:39:20.716 A:middle
A shortcut with a relative time,

00:39:20.716 --> 00:39:22.626 A:middle
however, is a lot more useful.

00:39:23.236 --> 00:39:27.646 A:middle
You should also make sure that

00:39:27.646 --> 00:39:29.636 A:middle
you donate exactly once for each

00:39:29.636 --> 00:39:31.416 A:middle
user action, even if that user

00:39:31.416 --> 00:39:33.036 A:middle
action involves multiple actions

00:39:33.036 --> 00:39:34.606 A:middle
inside your app.

00:39:35.236 --> 00:39:37.116 A:middle
Finally, selecting the correct

00:39:37.116 --> 00:39:38.536 A:middle
parameters of your intent is

00:39:38.536 --> 00:39:39.216 A:middle
also important.

00:39:39.646 --> 00:39:40.616 A:middle
So, let's take a look at two

00:39:40.616 --> 00:39:42.376 A:middle
possible types, starting with

00:39:42.376 --> 00:39:42.836 A:middle
enums.

00:39:43.556 --> 00:39:46.026 A:middle
You can define enums in your

00:39:46.026 --> 00:39:47.696 A:middle
intent definition file next to

00:39:47.696 --> 00:39:49.566 A:middle
your intents, and use it as the

00:39:49.566 --> 00:39:53.106 A:middle
types of your parameters.

00:39:53.596 --> 00:39:55.486 A:middle
We recommend that you use enums

00:39:55.546 --> 00:39:56.596 A:middle
whenever the values for a

00:39:56.596 --> 00:39:57.666 A:middle
parameter are bounded.

00:39:58.296 --> 00:39:59.776 A:middle
For instance, if you would add a

00:39:59.776 --> 00:40:01.476 A:middle
size parameter to a order soup

00:39:59.776 --> 00:40:01.476 A:middle
size parameter to a order soup

00:40:01.476 --> 00:40:03.206 A:middle
intent, it might make sense to

00:40:03.206 --> 00:40:04.546 A:middle
make that an enum, since the

00:40:04.546 --> 00:40:06.036 A:middle
possible sizes are probably just

00:40:06.036 --> 00:40:07.986 A:middle
small, medium, and large.

00:40:09.916 --> 00:40:11.016 A:middle
Using an enum will lead to

00:40:11.016 --> 00:40:12.956 A:middle
better suggestions and clearer

00:40:12.956 --> 00:40:14.286 A:middle
titles and subtitles for your

00:40:14.286 --> 00:40:14.806 A:middle
users.

00:40:15.646 --> 00:40:17.176 A:middle
To learn more about how enums

00:40:17.176 --> 00:40:18.716 A:middle
are used to generate titles and

00:40:18.716 --> 00:40:20.296 A:middle
subtitles, I recommend that you

00:40:20.296 --> 00:40:21.706 A:middle
watch the localization session.

00:40:22.206 --> 00:40:25.076 A:middle
Another type you can use is the

00:40:25.076 --> 00:40:25.736 A:middle
custom type.

00:40:27.116 --> 00:40:28.556 A:middle
Using a custom type will result

00:40:28.556 --> 00:40:29.836 A:middle
in an INObject and your

00:40:29.836 --> 00:40:31.116 A:middle
generated intent code.

00:40:32.156 --> 00:40:33.426 A:middle
An INObject combines an

00:40:33.426 --> 00:40:35.206 A:middle
identifier with a display

00:40:35.206 --> 00:40:35.516 A:middle
string.

00:40:36.336 --> 00:40:38.566 A:middle
The identifier can be used to

00:40:38.566 --> 00:40:40.086 A:middle
refer to an object internal to

00:40:40.086 --> 00:40:42.066 A:middle
your app, while the display

00:40:42.066 --> 00:40:43.126 A:middle
string contains the user

00:40:43.126 --> 00:40:44.626 A:middle
readable representation of that

00:40:44.626 --> 00:40:45.066 A:middle
object.

00:40:45.946 --> 00:40:47.516 A:middle
That way both your users and

00:40:47.516 --> 00:40:49.306 A:middle
your app always understands what

00:40:49.496 --> 00:40:50.856 A:middle
the value of this parameter is.

00:40:52.196 --> 00:40:54.666 A:middle
Finally, using an INObject also

00:40:54.666 --> 00:40:56.096 A:middle
prevents the possible dependency

00:40:56.096 --> 00:40:56.966 A:middle
between parameters.

00:40:57.676 --> 00:40:59.866 A:middle
Let me illustrate that.

00:41:00.206 --> 00:41:02.606 A:middle
There are two ways to represent

00:41:02.606 --> 00:41:04.296 A:middle
the combination of an identifier

00:41:04.296 --> 00:41:06.306 A:middle
with a display string.

00:41:06.346 --> 00:41:07.966 A:middle
You could add two parameters to

00:41:07.966 --> 00:41:09.156 A:middle
your intent, one for the

00:41:09.156 --> 00:41:10.516 A:middle
identifier, one for the display

00:41:10.516 --> 00:41:12.726 A:middle
string, or you could add a

00:41:12.726 --> 00:41:15.686 A:middle
single parameter using the

00:41:15.906 --> 00:41:16.536 A:middle
INObject.

00:41:16.536 --> 00:41:17.586 A:middle
With the first approach, you

00:41:17.586 --> 00:41:18.366 A:middle
have a dependency.

00:41:18.366 --> 00:41:19.716 A:middle
Since the display string depends

00:41:20.196 --> 00:41:21.936 A:middle
on the object as referenced by

00:41:21.936 --> 00:41:24.456 A:middle
the identifier, we discourage

00:41:24.456 --> 00:41:25.696 A:middle
having these dependencies as

00:41:25.696 --> 00:41:27.246 A:middle
they could cause issues when we

00:41:27.246 --> 00:41:28.486 A:middle
suggest this intent later.

00:41:29.186 --> 00:41:34.106 A:middle
A good shortcut should also have

00:41:34.106 --> 00:41:35.676 A:middle
an understandable title,

00:41:35.926 --> 00:41:37.376 A:middle
subtitle, and image.

00:41:38.056 --> 00:41:39.116 A:middle
It should represent what will

00:41:39.116 --> 00:41:40.306 A:middle
happen when the user taps the

00:41:40.306 --> 00:41:42.236 A:middle
shortcut, since it will be the

00:41:42.236 --> 00:41:43.376 A:middle
only thing the user will see

00:41:43.616 --> 00:41:44.666 A:middle
before interacting with it.

00:41:44.916 --> 00:41:46.716 A:middle
And, of course, you want to test

00:41:46.716 --> 00:41:47.926 A:middle
your shortcuts to make sure that

00:41:47.926 --> 00:41:49.066 A:middle
they look right and that they

00:41:49.066 --> 00:41:50.266 A:middle
behave as expected.

00:41:51.056 --> 00:41:52.106 A:middle
There are a couple of ways to do

00:41:52.106 --> 00:41:52.316 A:middle
that.

00:41:52.426 --> 00:41:55.096 A:middle
As I showed you earlier, we

00:41:55.096 --> 00:41:56.396 A:middle
added two new developer settings

00:41:56.526 --> 00:41:57.716 A:middle
that allow you to see your

00:41:57.716 --> 00:41:59.406 A:middle
recent donations on search and

00:41:59.406 --> 00:42:00.746 A:middle
on the lock screen, instead of

00:41:59.406 --> 00:42:00.746 A:middle
on the lock screen, instead of

00:42:00.746 --> 00:42:02.116 A:middle
your regular Siri suggestions.

00:42:03.306 --> 00:42:04.636 A:middle
By enabling these, you can see

00:42:04.636 --> 00:42:05.946 A:middle
what your users will see when

00:42:05.946 --> 00:42:06.796 A:middle
those donations would be

00:42:06.796 --> 00:42:08.536 A:middle
suggested, and you can try

00:42:08.536 --> 00:42:09.676 A:middle
interacting with them to make

00:42:09.676 --> 00:42:10.666 A:middle
sure that they behave as

00:42:10.666 --> 00:42:11.076 A:middle
expected.

00:42:11.076 --> 00:42:13.856 A:middle
Another way to test your

00:42:14.306 --> 00:42:15.846 A:middle
shortcuts is by adding them to

00:42:15.846 --> 00:42:16.316 A:middle
Siri.

00:42:17.116 --> 00:42:18.556 A:middle
An easy way to test them then is

00:42:18.596 --> 00:42:20.406 A:middle
by editing the Xcode scheme to

00:42:20.406 --> 00:42:21.726 A:middle
automatically invoke Siri

00:42:21.726 --> 00:42:23.356 A:middle
without constantly having to say

00:42:23.356 --> 00:42:23.796 A:middle
the phrase.

00:42:25.796 --> 00:42:27.626 A:middle
In the scheme editor of an

00:42:27.626 --> 00:42:28.976 A:middle
intents extension there is the

00:42:28.976 --> 00:42:30.676 A:middle
Siri Intent Query field that you

00:42:30.676 --> 00:42:31.956 A:middle
can use to provide the utterance

00:42:31.956 --> 00:42:32.856 A:middle
to invoke Siri with.

00:42:33.166 --> 00:42:36.416 A:middle
And, finally, you can create a

00:42:36.416 --> 00:42:38.206 A:middle
custom shortcut in the Shortcuts

00:42:38.206 --> 00:42:39.546 A:middle
app that uses your shortcut.

00:42:41.306 --> 00:42:42.736 A:middle
This allows you to test the

00:42:42.736 --> 00:42:44.116 A:middle
behavior of your shortcut when

00:42:44.116 --> 00:42:45.186 A:middle
it's chained together with other

00:42:45.186 --> 00:42:46.906 A:middle
shortcuts or steps from the

00:42:46.906 --> 00:42:48.306 A:middle
Shortcuts app.

00:42:49.296 --> 00:42:52.616 A:middle
So, now that we've seen what a

00:42:52.616 --> 00:42:54.796 A:middle
good shortcut donation is and

00:42:54.896 --> 00:42:56.636 A:middle
how does donation get suggested

00:42:57.356 --> 00:42:59.086 A:middle
to your users, let's take a look

00:42:59.086 --> 00:43:00.086 A:middle
at a couple of privacy

00:42:59.086 --> 00:43:00.086 A:middle
at a couple of privacy

00:43:00.086 --> 00:43:01.776 A:middle
considerations and how you can

00:43:01.776 --> 00:43:03.236 A:middle
make sure your user are never

00:43:03.236 --> 00:43:04.816 A:middle
upset by what is suggested to

00:43:04.816 --> 00:43:04.966 A:middle
them.

00:43:08.046 --> 00:43:09.426 A:middle
Your users expect that when they

00:43:09.426 --> 00:43:10.626 A:middle
delete something from within

00:43:10.626 --> 00:43:12.046 A:middle
your app that it's deleted for

00:43:12.046 --> 00:43:12.286 A:middle
good.

00:43:12.946 --> 00:43:15.706 A:middle
It's important to honor this so

00:43:15.706 --> 00:43:17.066 A:middle
you maintain your users' trust

00:43:17.146 --> 00:43:18.626 A:middle
and your so users aren't

00:43:18.626 --> 00:43:20.176 A:middle
presented with suggestions for

00:43:20.176 --> 00:43:21.296 A:middle
things that are not relevant to

00:43:21.296 --> 00:43:21.946 A:middle
them anymore.

00:43:22.986 --> 00:43:25.076 A:middle
So, if you donate shortcuts that

00:43:25.076 --> 00:43:26.606 A:middle
contain information that the

00:43:26.606 --> 00:43:28.106 A:middle
user can delete, you should make

00:43:28.106 --> 00:43:29.596 A:middle
sure to delete those donations

00:43:29.716 --> 00:43:31.506 A:middle
at the appropriate time.

00:43:32.176 --> 00:43:33.246 A:middle
Let's take a look at how to

00:43:33.246 --> 00:43:35.226 A:middle
delete donations, starting with

00:43:35.226 --> 00:43:36.016 A:middle
NSUserActivity.

00:43:39.376 --> 00:43:41.506 A:middle
There are two ways to delete a

00:43:41.506 --> 00:43:42.696 A:middle
donated user activity.

00:43:43.766 --> 00:43:45.276 A:middle
If you use Spotlight indexing

00:43:45.396 --> 00:43:46.286 A:middle
and you set the

00:43:46.286 --> 00:43:48.206 A:middle
relatedUniqueIdentifier, then

00:43:48.206 --> 00:43:49.256 A:middle
deleting the content from

00:43:49.256 --> 00:43:50.616 A:middle
Spotlight will automatically

00:43:50.616 --> 00:43:51.786 A:middle
delete the donated user

00:43:51.786 --> 00:43:52.346 A:middle
activity.

00:43:53.966 --> 00:43:54.436 A:middle
Just set the

00:43:54.436 --> 00:43:56.056 A:middle
relatedUniqueIdentifier on the

00:43:56.056 --> 00:43:57.706 A:middle
contentAttributeSet to the

00:43:57.706 --> 00:43:59.056 A:middle
identifier of the searchable

00:43:59.056 --> 00:44:00.476 A:middle
item that it matches with.

00:43:59.056 --> 00:44:00.476 A:middle
item that it matches with.

00:44:01.316 --> 00:44:03.306 A:middle
Then, when that searchable item

00:44:03.366 --> 00:44:04.576 A:middle
would be deleted, it would

00:44:04.576 --> 00:44:05.976 A:middle
automatically delete the user

00:44:05.976 --> 00:44:06.516 A:middle
activity.

00:44:07.146 --> 00:44:10.746 A:middle
If you don't use Spotlight

00:44:10.746 --> 00:44:12.266 A:middle
indexing, you can use the

00:44:12.266 --> 00:44:13.926 A:middle
persistent identifier property

00:44:14.196 --> 00:44:15.366 A:middle
on NSUserActivity.

00:44:15.996 --> 00:44:17.746 A:middle
This is a new property that you

00:44:17.746 --> 00:44:19.276 A:middle
can set so you can keep track of

00:44:19.276 --> 00:44:21.446 A:middle
your user activities and delete

00:44:21.446 --> 00:44:23.506 A:middle
them at the appropriate time.

00:44:24.476 --> 00:44:27.406 A:middle
To use it, just set the

00:44:27.406 --> 00:44:28.886 A:middle
persistentIdentifier property

00:44:29.026 --> 00:44:30.646 A:middle
before donating user activity.

00:44:31.536 --> 00:44:32.536 A:middle
Then, when you want to delete

00:44:32.536 --> 00:44:33.526 A:middle
it, you call

00:44:33.526 --> 00:44:35.316 A:middle
deleteSavedUserActivities with

00:44:35.316 --> 00:44:36.766 A:middle
the identifiers that you want to

00:44:36.766 --> 00:44:37.056 A:middle
delete.

00:44:37.826 --> 00:44:39.166 A:middle
You can also delete all your

00:44:39.166 --> 00:44:40.306 A:middle
donated user activities.

00:44:41.386 --> 00:44:42.746 A:middle
For instance, when your user

00:44:42.746 --> 00:44:44.376 A:middle
logs out, you can do that by

00:44:44.376 --> 00:44:44.756 A:middle
calling

00:44:45.006 --> 00:44:46.916 A:middle
deleteAllSavedUserActivities.

00:44:48.576 --> 00:44:50.256 A:middle
Intents have an existing API,

00:44:50.256 --> 00:44:51.536 A:middle
which is similar to this new

00:44:51.536 --> 00:44:53.436 A:middle
user activity API.

00:44:54.336 --> 00:44:56.476 A:middle
Since you donate intents through

00:44:56.636 --> 00:44:58.166 A:middle
INInteraction the leading and

00:44:58.166 --> 00:44:59.656 A:middle
donated intent also happens

00:44:59.656 --> 00:45:00.586 A:middle
through INInteraction.

00:44:59.656 --> 00:45:00.586 A:middle
through INInteraction.

00:45:01.496 --> 00:45:03.816 A:middle
An INInteraction has an

00:45:03.856 --> 00:45:04.916 A:middle
identifier and a group

00:45:04.916 --> 00:45:06.386 A:middle
identifier property that you can

00:45:06.386 --> 00:45:08.086 A:middle
set and then later use to delete

00:45:08.086 --> 00:45:09.366 A:middle
one or more donated

00:45:09.366 --> 00:45:10.086 A:middle
interactions.

00:45:10.556 --> 00:45:13.986 A:middle
Just set the identifier and or

00:45:13.986 --> 00:45:15.806 A:middle
group identifier before donating

00:45:15.806 --> 00:45:16.546 A:middle
the interaction.

00:45:17.586 --> 00:45:18.676 A:middle
Then, when you want to delete

00:45:18.676 --> 00:45:20.616 A:middle
it, you call delete with an

00:45:20.616 --> 00:45:22.286 A:middle
array of the identifiers that

00:45:22.286 --> 00:45:22.866 A:middle
you want to delete.

00:45:23.706 --> 00:45:25.426 A:middle
You can also delete all donated

00:45:25.426 --> 00:45:27.076 A:middle
intents with a shared group

00:45:27.076 --> 00:45:28.836 A:middle
identifier by calling delete

00:45:29.066 --> 00:45:30.176 A:middle
with the group identifier.

00:45:30.266 --> 00:45:33.386 A:middle
And, finally, just like

00:45:33.386 --> 00:45:34.796 A:middle
NSUserActivity, there is a way

00:45:34.796 --> 00:45:36.146 A:middle
to delete all your donated

00:45:36.146 --> 00:45:38.746 A:middle
intents by calling deleteAll on

00:45:38.746 --> 00:45:39.426 A:middle
INInteraction.

00:45:40.796 --> 00:45:42.766 A:middle
Please make sure to delete your

00:45:42.766 --> 00:45:44.136 A:middle
donations at the appropriate

00:45:44.136 --> 00:45:44.456 A:middle
time.

00:45:45.046 --> 00:45:46.016 A:middle
This will give your users the

00:45:46.016 --> 00:45:47.736 A:middle
best possible suggestions and

00:45:47.736 --> 00:45:48.976 A:middle
never make them wonder why

00:45:48.976 --> 00:45:49.986 A:middle
they're seeing suggestions for

00:45:49.986 --> 00:45:51.196 A:middle
things that are no longer

00:45:51.196 --> 00:45:53.976 A:middle
relevant to them.

00:45:55.326 --> 00:45:56.206 A:middle
So, now that we've looked at

00:45:56.206 --> 00:45:57.386 A:middle
different things to consider

00:45:57.546 --> 00:45:59.836 A:middle
when creating and donating

00:45:59.836 --> 00:46:02.386 A:middle
shortcuts, let's end by briefly

00:45:59.836 --> 00:46:02.386 A:middle
shortcuts, let's end by briefly

00:46:02.386 --> 00:46:04.336 A:middle
looking at what you can use to

00:46:04.336 --> 00:46:06.206 A:middle
create the best possible media

00:46:06.206 --> 00:46:06.756 A:middle
shortcuts.

00:46:07.376 --> 00:46:10.486 A:middle
We created a new intent that

00:46:10.486 --> 00:46:11.936 A:middle
works great with Shortcuts.

00:46:12.426 --> 00:46:13.426 A:middle
This intent is called

00:46:13.506 --> 00:46:15.396 A:middle
INPlayMediaIntent and allows you

00:46:15.396 --> 00:46:17.326 A:middle
to create and donate shortcuts

00:46:17.646 --> 00:46:19.256 A:middle
to play audio or video content.

00:46:20.616 --> 00:46:23.056 A:middle
When handling this intent in

00:46:23.056 --> 00:46:24.406 A:middle
your extension, you can choose

00:46:24.406 --> 00:46:25.596 A:middle
to have it handled by your app

00:46:25.646 --> 00:46:26.346 A:middle
in the background [inaudible].

00:46:26.496 --> 00:46:28.896 A:middle
This allows you to start audio

00:46:28.896 --> 00:46:30.946 A:middle
playback straight from your app.

00:46:35.546 --> 00:46:36.646 A:middle
Besides being suggested in

00:46:36.646 --> 00:46:38.026 A:middle
search and on the lock screen,

00:46:38.686 --> 00:46:39.936 A:middle
shortcuts with this intent will

00:46:39.936 --> 00:46:41.186 A:middle
also be suggested in the

00:46:41.186 --> 00:46:42.736 A:middle
playback controls on the lock

00:46:42.736 --> 00:46:43.966 A:middle
screen when the user connects

00:46:43.966 --> 00:46:46.056 A:middle
their headphones, making it even

00:46:46.056 --> 00:46:47.126 A:middle
easier for them to start

00:46:47.126 --> 00:46:48.456 A:middle
listening to your content.

00:46:49.736 --> 00:46:52.556 A:middle
And, finally, shortcuts with

00:46:52.556 --> 00:46:54.226 A:middle
this intent work great on the

00:46:54.226 --> 00:46:54.746 A:middle
HomePod.

00:46:55.916 --> 00:46:58.236 A:middle
Just add a play media shortcut

00:46:58.356 --> 00:47:01.016 A:middle
to Siri on your iPhone and

00:46:58.356 --> 00:47:01.016 A:middle
to Siri on your iPhone and

00:47:01.016 --> 00:47:02.216 A:middle
invoke it on your HomePod.

00:47:02.216 --> 00:47:03.866 A:middle
The audio will start playing

00:47:04.056 --> 00:47:06.746 A:middle
from your phone through HomePod.

00:47:08.296 --> 00:47:11.636 A:middle
We also created a new API that

00:47:11.636 --> 00:47:14.366 A:middle
allows you tell the system about

00:47:14.366 --> 00:47:15.476 A:middle
new content they might be

00:47:15.476 --> 00:47:16.146 A:middle
interested in.

00:47:18.646 --> 00:47:20.086 A:middle
This is great for periodical

00:47:20.086 --> 00:47:21.216 A:middle
content, where the content that

00:47:21.216 --> 00:47:22.496 A:middle
you would want to be suggested

00:47:22.496 --> 00:47:23.876 A:middle
to your users isn't something

00:47:23.876 --> 00:47:24.676 A:middle
they've listened to or watched

00:47:24.676 --> 00:47:24.976 A:middle
before.

00:47:28.206 --> 00:47:29.966 A:middle
So, those are a couple of things

00:47:30.026 --> 00:47:31.576 A:middle
that we have added to make great

00:47:31.576 --> 00:47:32.526 A:middle
media shortcuts.

00:47:33.476 --> 00:47:34.886 A:middle
Now, let's summarize what we

00:47:34.886 --> 00:47:35.616 A:middle
just talked about.

00:47:39.086 --> 00:47:41.156 A:middle
Shortcuts enable powerful, new

00:47:41.156 --> 00:47:44.116 A:middle
experiences with your apps.

00:47:44.116 --> 00:47:46.546 A:middle
It provides new ways to engage

00:47:46.546 --> 00:47:48.316 A:middle
your users by exposing your app

00:47:48.446 --> 00:47:49.846 A:middle
throughout the system in a

00:47:49.846 --> 00:47:50.896 A:middle
variety of places.

00:47:51.226 --> 00:47:53.126 A:middle
So, just search the lock screen,

00:47:53.746 --> 00:47:55.046 A:middle
the Siri Watch Face on your

00:47:55.046 --> 00:47:57.106 A:middle
Apple Watch, and in Siri itself.

00:47:57.616 --> 00:47:58.836 A:middle
You can also use it in the new

00:47:58.836 --> 00:48:00.616 A:middle
shortcuts app.

00:47:58.836 --> 00:48:00.616 A:middle
shortcuts app.

00:48:01.486 --> 00:48:03.316 A:middle
You can adopt shortcuts by using

00:48:03.316 --> 00:48:04.766 A:middle
NSUserActivity, which is a

00:48:04.766 --> 00:48:06.326 A:middle
really easy way to expose the

00:48:06.326 --> 00:48:07.346 A:middle
content of your app.

00:48:08.246 --> 00:48:11.526 A:middle
Or you can use intents which

00:48:11.526 --> 00:48:12.556 A:middle
provides you with a deeper

00:48:12.556 --> 00:48:14.296 A:middle
integration in the system and

00:48:14.296 --> 00:48:15.416 A:middle
can unlock entirely new

00:48:15.416 --> 00:48:16.976 A:middle
experiences for your users.

00:48:17.516 --> 00:48:22.546 A:middle
[ Applause ]

00:48:23.046 --> 00:48:24.706 A:middle
For more information, our

00:48:24.706 --> 00:48:26.386 A:middle
session is 211, and you can find

00:48:26.386 --> 00:48:28.176 A:middle
our page on developer.apple.com.

00:48:28.686 --> 00:48:29.986 A:middle
You can also find us in the labs

00:48:29.986 --> 00:48:30.526 A:middle
throughout the week.

00:48:31.116 --> 00:48:32.776 A:middle
Thank you so much for coming.

00:48:32.846 --> 00:48:34.276 A:middle
And we can't wait to see what

00:48:34.276 --> 00:48:35.266 A:middle
shortcuts you'll create.

00:48:35.806 --> 00:48:36.606 A:middle
Enjoy the rest of your

00:48:36.606 --> 00:48:36.976 A:middle
conference.

00:48:37.516 --> 00:48:40.500 A:middle
[ Applause ]
