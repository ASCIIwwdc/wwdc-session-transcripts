WEBVTT

00:00:06.516 --> 00:00:13.500 A:middle
[ Music ]

00:00:27.516 --> 00:00:34.236 A:middle
[ Applause ]

00:00:34.736 --> 00:00:35.746 A:middle
&gt;&gt; Good afternoon.

00:00:35.746 --> 00:00:36.576 A:middle
I'm Geoff Coffey.

00:00:36.756 --> 00:00:38.076 A:middle
I'm an engineer on App Store

00:00:38.076 --> 00:00:39.826 A:middle
Connect and I'm here to talk to

00:00:39.826 --> 00:00:41.226 A:middle
about automating App Store

00:00:41.226 --> 00:00:41.556 A:middle
Connect.

00:00:42.226 --> 00:00:43.286 A:middle
And I got to be honest with you,

00:00:43.286 --> 00:00:44.496 A:middle
I'm really excited about what

00:00:44.496 --> 00:00:45.446 A:middle
we're going to talk about today.

00:00:47.006 --> 00:00:48.356 A:middle
So let's start by talking about

00:00:48.426 --> 00:00:49.716 A:middle
where we are with automation in

00:00:49.716 --> 00:00:51.056 A:middle
App Store Connect today.

00:00:51.726 --> 00:00:52.946 A:middle
As I'm sure you all know, you

00:00:52.946 --> 00:00:54.666 A:middle
can use Xcode to upload your

00:00:54.666 --> 00:00:56.676 A:middle
builds to App Store Connect and

00:00:56.676 --> 00:00:58.056 A:middle
to download your crash reports

00:00:58.686 --> 00:01:00.096 A:middle
and we have the Transporter tool

00:00:58.686 --> 00:01:00.096 A:middle
and we have the Transporter tool

00:01:00.176 --> 00:01:01.816 A:middle
that lets you automate uploading

00:01:01.816 --> 00:01:04.146 A:middle
the metadata.xml and also

00:01:04.146 --> 00:01:05.385 A:middle
automate your build uploads.

00:01:05.796 --> 00:01:07.406 A:middle
And then we have Reporter, the

00:01:07.406 --> 00:01:08.336 A:middle
command line tool for

00:01:08.336 --> 00:01:09.756 A:middle
downloading your sales and

00:01:09.756 --> 00:01:10.746 A:middle
financial reports.

00:01:11.596 --> 00:01:12.566 A:middle
And these tools are great.

00:01:12.976 --> 00:01:14.506 A:middle
A lot of you use them but we've

00:01:14.506 --> 00:01:15.536 A:middle
heard from you that you want

00:01:15.536 --> 00:01:16.156 A:middle
even more.

00:01:16.406 --> 00:01:18.506 A:middle
You want access to more areas in

00:01:18.506 --> 00:01:20.146 A:middle
App Store Connect and you want

00:01:20.146 --> 00:01:21.436 A:middle
to integrate with more diverse

00:01:21.436 --> 00:01:22.116 A:middle
workflows.

00:01:22.866 --> 00:01:23.976 A:middle
And so we're really happy to

00:01:23.976 --> 00:01:25.536 A:middle
introduce the new App Store

00:01:25.536 --> 00:01:25.966 A:middle
Connect API.

00:01:26.516 --> 00:01:33.606 A:middle
[ Applause ]

00:01:34.106 --> 00:01:34.846 A:middle
We're excited too.

00:01:35.236 --> 00:01:37.656 A:middle
So this is a standards-based

00:01:37.656 --> 00:01:39.546 A:middle
REST API for App Store Connect.

00:01:40.326 --> 00:01:41.796 A:middle
And if you ask me, that's the

00:01:41.796 --> 00:01:43.216 A:middle
best part about it, it's a stock

00:01:43.286 --> 00:01:45.356 A:middle
standard REST API with JSON

00:01:45.356 --> 00:01:46.896 A:middle
responses, so it's going to feel

00:01:46.896 --> 00:01:48.146 A:middle
familiar to a lot of you right

00:01:48.146 --> 00:01:48.826 A:middle
out of the box.

00:01:49.506 --> 00:01:50.726 A:middle
That also means you can use this

00:01:50.726 --> 00:01:52.906 A:middle
API from any platform, almost

00:01:52.906 --> 00:01:54.396 A:middle
any programming language, and

00:01:54.396 --> 00:01:55.406 A:middle
using the tools that you're

00:01:55.406 --> 00:01:57.046 A:middle
probably already using today.

00:01:57.046 --> 00:01:59.656 A:middle
And of course, the API needs to

00:01:59.656 --> 00:02:00.346 A:middle
be secure.

00:01:59.656 --> 00:02:00.346 A:middle
be secure.

00:02:00.346 --> 00:02:02.376 A:middle
So we use industry-standard JSON

00:02:02.376 --> 00:02:04.686 A:middle
web tokens for authentication.

00:02:04.746 --> 00:02:06.006 A:middle
And that just means you don't

00:02:06.006 --> 00:02:07.136 A:middle
have to pass usernames and

00:02:07.136 --> 00:02:09.205 A:middle
passwords around, and you don't

00:02:09.205 --> 00:02:10.395 A:middle
have to have your code tied to

00:02:10.395 --> 00:02:12.506 A:middle
any specific person on your team

00:02:12.916 --> 00:02:14.206 A:middle
but you still maintain control

00:02:14.206 --> 00:02:15.796 A:middle
of who can access your data and

00:02:15.796 --> 00:02:16.506 A:middle
what they can do.

00:02:17.036 --> 00:02:19.866 A:middle
From an ease-of-use standpoint,

00:02:19.866 --> 00:02:21.256 A:middle
we focus really closely on

00:02:21.256 --> 00:02:22.606 A:middle
consistency with this API.

00:02:23.276 --> 00:02:25.096 A:middle
We have a single unified REST

00:02:25.096 --> 00:02:27.006 A:middle
resource model, which just means

00:02:27.256 --> 00:02:28.416 A:middle
that you can take what you learn

00:02:28.416 --> 00:02:29.996 A:middle
in any one part of the API and

00:02:30.226 --> 00:02:31.716 A:middle
apply it to every other part.

00:02:32.266 --> 00:02:33.136 A:middle
And we've also built

00:02:33.136 --> 00:02:34.736 A:middle
discoverability into the API

00:02:34.876 --> 00:02:37.066 A:middle
itself, in simple ways like when

00:02:37.066 --> 00:02:38.956 A:middle
we return JSON data to you, it's

00:02:38.956 --> 00:02:40.826 A:middle
nicely formatted and indented so

00:02:40.826 --> 00:02:42.066 A:middle
if you need to, you can dump it

00:02:42.066 --> 00:02:43.516 A:middle
out to the console and read it

00:02:43.516 --> 00:02:45.076 A:middle
right on the screen and we

00:02:45.076 --> 00:02:46.046 A:middle
include links and those

00:02:46.046 --> 00:02:48.046 A:middle
responses to related information

00:02:48.046 --> 00:02:49.166 A:middle
to help you figure out how the

00:02:49.166 --> 00:02:50.296 A:middle
parts fit together.

00:02:50.296 --> 00:02:53.286 A:middle
And, of course, the API will be

00:02:53.286 --> 00:02:54.256 A:middle
fully documented.

00:02:54.556 --> 00:02:55.266 A:middle
If you haven't seen this

00:02:55.266 --> 00:02:56.546 A:middle
already, the documentation

00:02:56.546 --> 00:02:58.186 A:middle
platform that you already use at

00:02:58.186 --> 00:03:00.706 A:middle
developer.apple.com and in Xcode

00:02:58.186 --> 00:03:00.706 A:middle
developer.apple.com and in Xcode

00:03:00.846 --> 00:03:02.796 A:middle
was extended this year to also

00:03:02.796 --> 00:03:04.226 A:middle
include Apple's REST APIs.

00:03:04.546 --> 00:03:05.926 A:middle
So the same format you're

00:03:05.926 --> 00:03:07.166 A:middle
familiar with your framework

00:03:07.166 --> 00:03:08.946 A:middle
docs will apply to the App Store

00:03:08.946 --> 00:03:10.226 A:middle
Connect API as well.

00:03:12.056 --> 00:03:14.466 A:middle
Now we started with a focus on

00:03:14.466 --> 00:03:15.716 A:middle
the areas of App Store Connect

00:03:16.146 --> 00:03:18.166 A:middle
that don't already have an

00:03:18.166 --> 00:03:19.606 A:middle
automation story and that you

00:03:19.606 --> 00:03:20.796 A:middle
have to visit over and over

00:03:20.796 --> 00:03:21.986 A:middle
again and in particular we're

00:03:21.986 --> 00:03:23.656 A:middle
starting with these four areas

00:03:23.986 --> 00:03:24.566 A:middle
you see here.

00:03:24.566 --> 00:03:25.866 A:middle
So let's look at what all is

00:03:25.866 --> 00:03:26.416 A:middle
included.

00:03:26.826 --> 00:03:28.326 A:middle
First, we have comprehensive

00:03:28.356 --> 00:03:29.286 A:middle
coverage of TestFlight.

00:03:29.646 --> 00:03:30.896 A:middle
You can manage your testers and

00:03:30.896 --> 00:03:31.296 A:middle
groups.

00:03:31.436 --> 00:03:32.676 A:middle
You can submit your builds for

00:03:32.676 --> 00:03:33.176 A:middle
review.

00:03:33.606 --> 00:03:34.586 A:middle
And if you saw the session

00:03:34.586 --> 00:03:35.726 A:middle
yesterday, the What's New in App

00:03:35.726 --> 00:03:36.946 A:middle
Store Connect Session, you know

00:03:36.946 --> 00:03:38.166 A:middle
we just announced a new public

00:03:38.166 --> 00:03:39.706 A:middle
links feature for tester

00:03:39.706 --> 00:03:40.376 A:middle
acquisition.

00:03:40.856 --> 00:03:42.176 A:middle
And this works hand-in-hand with

00:03:42.226 --> 00:03:42.526 A:middle
the API.

00:03:42.526 --> 00:03:44.946 A:middle
You can use the API to manage

00:03:44.946 --> 00:03:46.466 A:middle
your public links and you can

00:03:46.466 --> 00:03:47.716 A:middle
use the two of them together to

00:03:47.716 --> 00:03:49.286 A:middle
run your beta test program in

00:03:49.286 --> 00:03:51.096 A:middle
whatever way works best for you.

00:03:51.716 --> 00:03:54.206 A:middle
On the Users and Roles side, you

00:03:54.206 --> 00:03:55.836 A:middle
can add and remove users and

00:03:55.836 --> 00:03:56.876 A:middle
keep the permissions on your

00:03:56.876 --> 00:03:58.676 A:middle
users in sync with your actual

00:03:58.676 --> 00:03:59.446 A:middle
organization.

00:04:00.116 --> 00:04:01.436 A:middle
And as we announced yesterday,

00:04:01.436 --> 00:04:02.516 A:middle
this includes your complete

00:04:02.656 --> 00:04:04.426 A:middle
unified user base across

00:04:04.616 --> 00:04:06.606 A:middle
developer website and App Store

00:04:06.606 --> 00:04:06.976 A:middle
Connect.

00:04:06.976 --> 00:04:08.736 A:middle
So you have one set of users and

00:04:08.736 --> 00:04:09.696 A:middle
one set of roles.

00:04:10.516 --> 00:04:15.576 A:middle
[ Applause ]

00:04:16.076 --> 00:04:17.596 A:middle
We have provisioning APIs that

00:04:17.596 --> 00:04:19.226 A:middle
let you add development devices

00:04:19.226 --> 00:04:20.866 A:middle
and register bundle IDs and

00:04:20.866 --> 00:04:22.065 A:middle
manage your certificates and

00:04:22.065 --> 00:04:24.196 A:middle
profiles, and then we have

00:04:24.196 --> 00:04:25.536 A:middle
reports APIs that let you

00:04:25.536 --> 00:04:27.136 A:middle
download the sales and financial

00:04:27.136 --> 00:04:27.786 A:middle
report files.

00:04:28.256 --> 00:04:29.576 A:middle
And if you use the Reporter tool

00:04:29.576 --> 00:04:30.896 A:middle
today, this will feel really

00:04:30.896 --> 00:04:31.806 A:middle
familiar to you because the

00:04:31.806 --> 00:04:33.236 A:middle
parameters you send to Reporter

00:04:33.396 --> 00:04:34.626 A:middle
are very similar to the ones you

00:04:34.626 --> 00:04:35.376 A:middle
send to the API.

00:04:35.836 --> 00:04:36.966 A:middle
So it's really easy to make the

00:04:36.966 --> 00:04:37.456 A:middle
switch.

00:04:38.906 --> 00:04:39.776 A:middle
And I said there were four

00:04:39.776 --> 00:04:41.366 A:middle
things and this last part isn't

00:04:41.366 --> 00:04:42.856 A:middle
really part of the API itself

00:04:42.856 --> 00:04:43.836 A:middle
but I wanted to bring it up

00:04:43.836 --> 00:04:44.906 A:middle
because it's an important part

00:04:44.906 --> 00:04:46.116 A:middle
of our automation story.

00:04:46.636 --> 00:04:47.756 A:middle
We've made a couple of important

00:04:47.756 --> 00:04:49.006 A:middle
changes the Transporter to help

00:04:49.006 --> 00:04:50.326 A:middle
smooth all of this out for you.

00:04:50.806 --> 00:04:52.186 A:middle
First of all, Transporter will

00:04:52.186 --> 00:04:53.256 A:middle
officially be supported on

00:04:53.256 --> 00:04:53.706 A:middle
Linux.

00:04:54.436 --> 00:04:56.126 A:middle
And also, you can take the API

00:04:56.126 --> 00:04:58.116 A:middle
tokens that you use for the new

00:04:58.116 --> 00:04:59.296 A:middle
API and send those through to

00:04:59.296 --> 00:05:00.076 A:middle
Transporter and it can use those

00:04:59.296 --> 00:05:00.076 A:middle
Transporter and it can use those

00:05:00.076 --> 00:05:00.976 A:middle
for authentication as well.

00:05:01.066 --> 00:05:04.206 A:middle
It just makes the process easier

00:05:04.206 --> 00:05:04.956 A:middle
to manage for you.

00:05:05.456 --> 00:05:08.066 A:middle
Okay, we have a whole bunch to

00:05:08.066 --> 00:05:08.466 A:middle
get through.

00:05:08.466 --> 00:05:09.536 A:middle
We're going to go kind of fast

00:05:09.536 --> 00:05:09.826 A:middle
today.

00:05:10.136 --> 00:05:11.276 A:middle
I apologize for that but we have

00:05:11.276 --> 00:05:11.936 A:middle
a lot to cover.

00:05:12.086 --> 00:05:12.746 A:middle
We're going to talk about

00:05:12.796 --> 00:05:14.286 A:middle
getting data and changing data

00:05:14.286 --> 00:05:14.856 A:middle
with the API.

00:05:15.326 --> 00:05:16.596 A:middle
We'll talk about relationships

00:05:16.596 --> 00:05:17.686 A:middle
which is how the different parts

00:05:17.686 --> 00:05:19.386 A:middle
of the API fit together and how

00:05:19.386 --> 00:05:20.296 A:middle
you work with those.

00:05:20.726 --> 00:05:21.626 A:middle
We'll talk about how to handle

00:05:21.626 --> 00:05:23.256 A:middle
errors, how to get access to the

00:05:23.256 --> 00:05:24.436 A:middle
API and authenticate your

00:05:24.436 --> 00:05:26.046 A:middle
request, then we'll wrap up with

00:05:26.046 --> 00:05:27.066 A:middle
some best practices.

00:05:28.676 --> 00:05:29.446 A:middle
So, you ready to get started?

00:05:30.516 --> 00:05:33.586 A:middle
[ Applause ]

00:05:34.086 --> 00:05:35.646 A:middle
So like I said, we're going to

00:05:35.646 --> 00:05:36.766 A:middle
start with getting data and that

00:05:36.766 --> 00:05:37.906 A:middle
means we start right here,

00:05:38.206 --> 00:05:40.996 A:middle
api.appstoreconnect.apple.com.

00:05:41.296 --> 00:05:42.966 A:middle
This is the home base of the API

00:05:43.426 --> 00:05:44.336 A:middle
and from here we want to

00:05:44.336 --> 00:05:45.586 A:middle
construct a URL.

00:05:46.286 --> 00:05:48.126 A:middle
First we will add a version.

00:05:48.836 --> 00:05:50.356 A:middle
Now all API endpoints have a

00:05:50.356 --> 00:05:51.566 A:middle
version and right now that's

00:05:51.566 --> 00:05:51.976 A:middle
always v1.

00:05:51.976 --> 00:05:54.216 A:middle
But inevitably as App Store

00:05:54.216 --> 00:05:55.936 A:middle
Connect grows and changes over

00:05:55.936 --> 00:05:57.536 A:middle
time, we'll have to make changes

00:05:57.536 --> 00:05:59.056 A:middle
to the API that might cause your

00:05:59.056 --> 00:06:00.116 A:middle
code to stop working.

00:05:59.056 --> 00:06:00.116 A:middle
code to stop working.

00:06:00.596 --> 00:06:01.986 A:middle
So when that ever happens, we'll

00:06:01.986 --> 00:06:03.496 A:middle
change this version number and

00:06:03.496 --> 00:06:04.466 A:middle
the old version will keep

00:06:04.466 --> 00:06:06.046 A:middle
working for a period of time so

00:06:06.046 --> 00:06:07.366 A:middle
you have time to adjust to our

00:06:07.366 --> 00:06:07.856 A:middle
changes.

00:06:08.746 --> 00:06:10.716 A:middle
Now after the version, we have

00:06:10.716 --> 00:06:11.506 A:middle
to add something called the

00:06:11.506 --> 00:06:12.906 A:middle
resource type name.

00:06:13.356 --> 00:06:14.376 A:middle
This is a really important

00:06:14.376 --> 00:06:15.306 A:middle
concept in the API.

00:06:15.806 --> 00:06:17.216 A:middle
The resource is like the

00:06:17.216 --> 00:06:19.106 A:middle
fundamental unit of the API.

00:06:19.816 --> 00:06:20.876 A:middle
Conceptually, you can almost

00:06:20.876 --> 00:06:22.176 A:middle
think of the API as a big

00:06:22.176 --> 00:06:24.096 A:middle
collection of resources that you

00:06:24.096 --> 00:06:24.796 A:middle
operate on.

00:06:25.546 --> 00:06:26.446 A:middle
We have a whole bunch of

00:06:26.446 --> 00:06:27.586 A:middle
resources in the API.

00:06:28.336 --> 00:06:29.366 A:middle
Most of them map to things

00:06:29.366 --> 00:06:30.306 A:middle
you're familiar with in App

00:06:30.306 --> 00:06:31.156 A:middle
Store Connect and we're not

00:06:31.156 --> 00:06:32.266 A:middle
going to talk about all of those

00:06:32.266 --> 00:06:32.616 A:middle
today.

00:06:32.956 --> 00:06:34.566 A:middle
We'll focus on just a few and

00:06:34.566 --> 00:06:36.346 A:middle
we'll start with Users.

00:06:36.996 --> 00:06:38.916 A:middle
And so here we have a complete

00:06:38.916 --> 00:06:41.216 A:middle
API URL: api.appstoreconnect

00:06:41.396 --> 00:06:44.876 A:middle
.apple.com/v1/users.

00:06:45.296 --> 00:06:46.556 A:middle
This URL represents all the

00:06:46.556 --> 00:06:47.866 A:middle
users on your team.

00:06:48.566 --> 00:06:49.536 A:middle
And, of course, you can go get

00:06:49.536 --> 00:06:51.766 A:middle
this URL and you'll get back a

00:06:51.766 --> 00:06:52.696 A:middle
JSON object.

00:06:53.526 --> 00:06:54.186 A:middle
And the first thing you'll

00:06:54.186 --> 00:06:55.546 A:middle
notice about this subject is it

00:06:55.546 --> 00:06:57.176 A:middle
has a data property.

00:06:57.826 --> 00:06:59.316 A:middle
Anytime we send you a successful

00:06:59.316 --> 00:07:01.136 A:middle
response with data in it, we

00:06:59.316 --> 00:07:01.136 A:middle
response with data in it, we

00:07:01.136 --> 00:07:02.336 A:middle
include this data property.

00:07:02.906 --> 00:07:04.666 A:middle
In this case, it's an array of

00:07:04.736 --> 00:07:06.036 A:middle
user resources.

00:07:06.736 --> 00:07:08.136 A:middle
Now, you can only see one user

00:07:08.136 --> 00:07:09.136 A:middle
on the screen right now but if

00:07:09.136 --> 00:07:10.106 A:middle
the screen were much, much

00:07:10.176 --> 00:07:11.576 A:middle
taller, you'd see that all the

00:07:11.576 --> 00:07:13.116 A:middle
users in your team are in this

00:07:13.116 --> 00:07:13.406 A:middle
array.

00:07:13.406 --> 00:07:15.726 A:middle
Now I want to focus in on some

00:07:15.726 --> 00:07:17.366 A:middle
of the data we return to you

00:07:17.426 --> 00:07:18.776 A:middle
with each of these resource

00:07:18.776 --> 00:07:19.406 A:middle
responses.

00:07:20.086 --> 00:07:21.856 A:middle
Every resource has a type just

00:07:21.856 --> 00:07:23.536 A:middle
telling you what it is and an ID

00:07:23.536 --> 00:07:25.476 A:middle
that uniquely identifies this

00:07:25.476 --> 00:07:27.446 A:middle
resource across all of App Store

00:07:27.446 --> 00:07:27.796 A:middle
Connect.

00:07:28.846 --> 00:07:30.046 A:middle
Then we have the attributes.

00:07:30.506 --> 00:07:31.666 A:middle
This is probably the stuff that

00:07:31.666 --> 00:07:32.596 A:middle
you're most interested in.

00:07:32.756 --> 00:07:33.996 A:middle
For users, it's things like

00:07:34.026 --> 00:07:36.026 A:middle
their first name, last name, and

00:07:36.026 --> 00:07:36.826 A:middle
email address.

00:07:37.596 --> 00:07:38.906 A:middle
The values of these attributes

00:07:38.906 --> 00:07:40.086 A:middle
are usually simple types like

00:07:40.126 --> 00:07:42.286 A:middle
this, strings, numbers, dates

00:07:42.286 --> 00:07:44.066 A:middle
and times or Booleans but they

00:07:44.066 --> 00:07:45.246 A:middle
can also be complex types

00:07:45.246 --> 00:07:46.346 A:middle
sometimes, like arrays and

00:07:46.346 --> 00:07:46.876 A:middle
objects.

00:07:48.076 --> 00:07:49.326 A:middle
After the attributes, we have

00:07:49.326 --> 00:07:50.156 A:middle
relationships.

00:07:50.686 --> 00:07:51.606 A:middle
We're going to skip those for

00:07:51.606 --> 00:07:51.826 A:middle
now.

00:07:51.826 --> 00:07:52.756 A:middle
We'll come back and look at them

00:07:52.756 --> 00:07:52.996 A:middle
later.

00:07:53.656 --> 00:07:54.896 A:middle
And then we have links and in

00:07:54.896 --> 00:07:55.976 A:middle
particular what we call the

00:07:55.976 --> 00:07:57.766 A:middle
resource self link.

00:07:58.286 --> 00:08:00.016 A:middle
Now this is a URL that uniquely

00:07:58.286 --> 00:08:00.016 A:middle
Now this is a URL that uniquely

00:08:00.016 --> 00:08:01.336 A:middle
identifies this particular

00:08:01.336 --> 00:08:03.226 A:middle
resource, in this case the first

00:08:03.226 --> 00:08:04.736 A:middle
user in the result here.

00:08:04.896 --> 00:08:06.246 A:middle
Every resource we send back to

00:08:06.246 --> 00:08:08.066 A:middle
you includes this resource self

00:08:08.066 --> 00:08:08.306 A:middle
link.

00:08:09.736 --> 00:08:10.846 A:middle
It always looks like this:

00:08:11.066 --> 00:08:13.476 A:middle
api.appstoreconnect.apple.com

00:08:13.726 --> 00:08:15.206 A:middle
and then the version, v1, and

00:08:15.576 --> 00:08:17.316 A:middle
then the resource type, users,

00:08:17.686 --> 00:08:19.246 A:middle
and then the identifier of that

00:08:19.246 --> 00:08:19.746 A:middle
resource.

00:08:20.216 --> 00:08:22.006 A:middle
And you can go get it and you

00:08:22.006 --> 00:08:23.236 A:middle
get back data that looks almost

00:08:23.236 --> 00:08:24.636 A:middle
exactly like what we just saw.

00:08:25.076 --> 00:08:26.306 A:middle
The only difference here is

00:08:26.306 --> 00:08:27.796 A:middle
we're seeing just this one user

00:08:27.796 --> 00:08:29.726 A:middle
now instead of all the users on

00:08:29.726 --> 00:08:30.256 A:middle
your team.

00:08:30.826 --> 00:08:34.145 A:middle
So that's two ways to get data.

00:08:34.756 --> 00:08:36.405 A:middle
You get a list of resources or

00:08:36.405 --> 00:08:37.916 A:middle
an individual resource, but of

00:08:37.916 --> 00:08:38.696 A:middle
course you're going to want to

00:08:38.696 --> 00:08:40.186 A:middle
change data as well.

00:08:40.186 --> 00:08:42.216 A:middle
And to do that, we lean on

00:08:42.306 --> 00:08:44.246 A:middle
common REST conventions, so this

00:08:44.246 --> 00:08:45.826 A:middle
will also feel familiar to a lot

00:08:45.826 --> 00:08:46.136 A:middle
of you.

00:08:46.916 --> 00:08:47.976 A:middle
You've already seen how to get

00:08:47.976 --> 00:08:48.556 A:middle
resources.

00:08:49.046 --> 00:08:50.846 A:middle
To create a new resource, you'll

00:08:50.846 --> 00:08:52.726 A:middle
use the http POST method.

00:08:53.296 --> 00:08:54.826 A:middle
To change a resource, you'll use

00:08:54.876 --> 00:08:57.036 A:middle
PATCH, and to delete a resource,

00:08:57.266 --> 00:08:58.536 A:middle
you'll use the DELETE method.

00:08:59.366 --> 00:09:00.336 A:middle
So let's try this.

00:08:59.366 --> 00:09:00.336 A:middle
So let's try this.

00:09:00.466 --> 00:09:01.626 A:middle
Let's say we want to add a new

00:09:01.626 --> 00:09:03.086 A:middle
user to your team.

00:09:03.836 --> 00:09:04.656 A:middle
Now a quick aside.

00:09:04.786 --> 00:09:06.466 A:middle
We can't add the user directly.

00:09:06.806 --> 00:09:08.156 A:middle
Just like in App Store Connect

00:09:08.156 --> 00:09:09.706 A:middle
itself, you have to invite the

00:09:09.706 --> 00:09:11.476 A:middle
user to your team and then they

00:09:11.476 --> 00:09:12.986 A:middle
can accept that invitation.

00:09:13.246 --> 00:09:15.596 A:middle
So we're going to create a user

00:09:15.596 --> 00:09:17.066 A:middle
invitation resource.

00:09:17.696 --> 00:09:18.546 A:middle
It looks like this.

00:09:18.796 --> 00:09:20.016 A:middle
We do a POST because we're

00:09:20.016 --> 00:09:20.546 A:middle
creating.

00:09:21.236 --> 00:09:22.726 A:middle
And the URL is the user

00:09:22.726 --> 00:09:24.296 A:middle
Invitations resource URL.

00:09:24.296 --> 00:09:26.046 A:middle
And then we have to send in the

00:09:26.046 --> 00:09:27.846 A:middle
data for this user.

00:09:28.246 --> 00:09:29.796 A:middle
Now this data looks a lot like

00:09:29.796 --> 00:09:31.396 A:middle
what you've seen when we fetched

00:09:31.396 --> 00:09:32.606 A:middle
users before.

00:09:32.736 --> 00:09:33.686 A:middle
But there's one important

00:09:33.686 --> 00:09:34.666 A:middle
difference I want to point out.

00:09:35.296 --> 00:09:37.546 A:middle
We have a type user Invitations

00:09:38.016 --> 00:09:38.846 A:middle
but we don't have an ID.

00:09:39.946 --> 00:09:41.316 A:middle
Now Apple will assign an ID to

00:09:41.386 --> 00:09:42.946 A:middle
every resource you create for

00:09:42.946 --> 00:09:43.176 A:middle
you.

00:09:43.176 --> 00:09:44.806 A:middle
So you don't include that in the

00:09:44.806 --> 00:09:45.256 A:middle
POST.

00:09:45.876 --> 00:09:47.066 A:middle
We've also left off links

00:09:47.196 --> 00:09:48.246 A:middle
because they're not required for

00:09:48.246 --> 00:09:48.736 A:middle
creation.

00:09:48.736 --> 00:09:50.336 A:middle
And we've left off relationships

00:09:50.376 --> 00:09:51.606 A:middle
because they're not relevant in

00:09:51.606 --> 00:09:52.516 A:middle
this particular case.

00:09:53.216 --> 00:09:54.856 A:middle
If we run this request, we get a

00:09:54.856 --> 00:09:55.476 A:middle
response.

00:09:56.116 --> 00:09:58.346 A:middle
In particular, this is a 201

00:09:58.566 --> 00:09:59.756 A:middle
CREATED response.

00:10:00.066 --> 00:10:01.226 A:middle
That's just standard REST

00:10:01.286 --> 00:10:02.316 A:middle
behavior to tell you that the

00:10:02.316 --> 00:10:03.506 A:middle
resource was successfully

00:10:03.506 --> 00:10:03.976 A:middle
created.

00:10:05.266 --> 00:10:06.976 A:middle
And we also include the full

00:10:06.976 --> 00:10:08.446 A:middle
resource information in the

00:10:08.446 --> 00:10:10.086 A:middle
response data and this is

00:10:10.086 --> 00:10:11.336 A:middle
important for two reasons.

00:10:11.606 --> 00:10:13.656 A:middle
First, it gives you the ID and

00:10:14.046 --> 00:10:15.736 A:middle
the resource self link of the

00:10:15.736 --> 00:10:17.396 A:middle
resource that was created, which

00:10:17.396 --> 00:10:18.426 A:middle
is stuff you're probably going

00:10:18.426 --> 00:10:19.676 A:middle
to need later so you can come

00:10:19.676 --> 00:10:21.136 A:middle
back and operate on this

00:10:21.136 --> 00:10:21.676 A:middle
resource.

00:10:22.226 --> 00:10:23.816 A:middle
And also if you look at the

00:10:23.816 --> 00:10:25.286 A:middle
attributes, you may see

00:10:25.286 --> 00:10:27.076 A:middle
attributes in this response that

00:10:27.076 --> 00:10:28.686 A:middle
you didn't include in the POST.

00:10:29.626 --> 00:10:30.636 A:middle
For example with user

00:10:30.636 --> 00:10:32.036 A:middle
invitations, Apple will assign

00:10:32.036 --> 00:10:34.056 A:middle
an expiration Date to every user

00:10:34.056 --> 00:10:35.166 A:middle
invitation you create.

00:10:35.476 --> 00:10:37.106 A:middle
Now you don't set that, so you

00:10:37.106 --> 00:10:38.416 A:middle
don't include it in the POST.

00:10:38.656 --> 00:10:39.746 A:middle
And that's why this response

00:10:39.796 --> 00:10:41.296 A:middle
data is really important to you.

00:10:41.296 --> 00:10:42.346 A:middle
It shows you the complete

00:10:42.346 --> 00:10:44.376 A:middle
picture of this resource after

00:10:44.376 --> 00:10:46.166 A:middle
it's been created and all of our

00:10:46.166 --> 00:10:48.966 A:middle
rules have been applied to it.

00:10:49.226 --> 00:10:50.496 A:middle
Now if this user accepts,

00:10:50.496 --> 00:10:51.746 A:middle
they'll become a user on our

00:10:51.836 --> 00:10:52.126 A:middle
team.

00:10:52.526 --> 00:10:53.846 A:middle
And suppose we want to come back

00:10:53.846 --> 00:10:55.656 A:middle
later and modify them in some

00:10:55.656 --> 00:10:57.116 A:middle
way, like for instance you can

00:10:57.116 --> 00:10:58.356 A:middle
see from the attributes here

00:10:58.356 --> 00:10:59.726 A:middle
this user has the developer

00:10:59.726 --> 00:11:00.066 A:middle
role.

00:10:59.726 --> 00:11:00.066 A:middle
role.

00:11:00.696 --> 00:11:01.846 A:middle
So let's change that so they

00:11:01.846 --> 00:11:02.896 A:middle
have the developer and the

00:11:02.896 --> 00:11:03.556 A:middle
marketing role.

00:11:04.676 --> 00:11:05.706 A:middle
We're changing an existing

00:11:05.706 --> 00:11:06.236 A:middle
resource.

00:11:06.336 --> 00:11:07.656 A:middle
So we do a PATCH request.

00:11:08.386 --> 00:11:09.766 A:middle
The URL this time is the

00:11:09.766 --> 00:11:12.256 A:middle
resource self link of the user

00:11:12.256 --> 00:11:13.046 A:middle
we're changing.

00:11:13.746 --> 00:11:14.396 A:middle
And if you look at the

00:11:14.396 --> 00:11:16.326 A:middle
attributes, we're only including

00:11:16.776 --> 00:11:17.676 A:middle
the roles attribute.

00:11:17.846 --> 00:11:19.236 A:middle
This request says change this

00:11:19.236 --> 00:11:21.016 A:middle
user so that they have the roles

00:11:21.016 --> 00:11:22.776 A:middle
of DEVELOPER and MARKETING.

00:11:23.066 --> 00:11:23.796 A:middle
We didn't want to change

00:11:23.796 --> 00:11:25.066 A:middle
anything else about the user, so

00:11:25.066 --> 00:11:26.546 A:middle
we specifically didn't include

00:11:26.856 --> 00:11:27.836 A:middle
the other attributes.

00:11:28.836 --> 00:11:30.336 A:middle
If we run this request, again we

00:11:30.336 --> 00:11:32.656 A:middle
get a successful response and we

00:11:32.656 --> 00:11:33.646 A:middle
get the full resource

00:11:33.646 --> 00:11:35.646 A:middle
representation of the resource

00:11:35.766 --> 00:11:36.956 A:middle
with our changes applied.

00:11:37.586 --> 00:11:39.776 A:middle
Now the last thing you probably

00:11:39.776 --> 00:11:40.746 A:middle
want to do with the resource is

00:11:40.746 --> 00:11:41.776 A:middle
delete it and this is the

00:11:41.776 --> 00:11:43.176 A:middle
simplest operation of them all.

00:11:43.396 --> 00:11:45.326 A:middle
We just do a DELETE request to

00:11:45.326 --> 00:11:47.056 A:middle
the resource self link and we

00:11:47.056 --> 00:11:49.536 A:middle
get a 204 NO CONTENT response.

00:11:49.856 --> 00:11:51.046 A:middle
If you're familiar with REST,

00:11:51.046 --> 00:11:52.336 A:middle
you know that any status code in

00:11:52.336 --> 00:11:54.376 A:middle
the 200s means success.

00:11:54.886 --> 00:11:56.316 A:middle
So this is the API telling you

00:11:56.316 --> 00:11:57.806 A:middle
that the user has successfully

00:11:57.806 --> 00:11:58.556 A:middle
been deleted.

00:11:58.956 --> 00:12:00.156 A:middle
And we didn't need to include

00:11:58.956 --> 00:12:00.156 A:middle
And we didn't need to include

00:12:00.156 --> 00:12:01.436 A:middle
any additional data this time,

00:12:01.706 --> 00:12:03.286 A:middle
so we use the NO CONTENT version

00:12:03.446 --> 00:12:04.606 A:middle
of a success response.

00:12:05.156 --> 00:12:07.886 A:middle
Now before we move on to the

00:12:07.886 --> 00:12:09.056 A:middle
next segment, I'd like to invite

00:12:09.056 --> 00:12:10.656 A:middle
my colleague Sehoon Shon up to

00:12:10.656 --> 00:12:12.126 A:middle
show you some examples of how to

00:12:12.126 --> 00:12:13.406 A:middle
use these resources in

00:12:13.406 --> 00:12:14.356 A:middle
real-world scenarios.

00:12:14.596 --> 00:12:14.956 A:middle
Sehoon.

00:12:15.516 --> 00:12:21.436 A:middle
[ Applause ]

00:12:21.936 --> 00:12:22.626 A:middle
&gt;&gt; Thanks, Geoff.

00:12:23.996 --> 00:12:24.846 A:middle
Hi, everyone.

00:12:24.906 --> 00:12:26.356 A:middle
My name is Sehoon Shon and I'm a

00:12:26.356 --> 00:12:27.626 A:middle
software engineer in TestFlight

00:12:27.626 --> 00:12:29.476 A:middle
team and I'm here today to show

00:12:29.476 --> 00:12:31.196 A:middle
you the live demo on App Store

00:12:31.196 --> 00:12:31.776 A:middle
Connect API.

00:12:33.306 --> 00:12:34.726 A:middle
We'll look at one use case and

00:12:34.726 --> 00:12:36.446 A:middle
see how we can apply the API on

00:12:36.446 --> 00:12:37.246 A:middle
users resource.

00:12:38.316 --> 00:12:39.496 A:middle
Let's say someone in our team

00:12:39.496 --> 00:12:41.166 A:middle
has left our company and we'd

00:12:41.166 --> 00:12:42.716 A:middle
like to find this user and

00:12:42.716 --> 00:12:43.986 A:middle
remove this user from the team

00:12:44.086 --> 00:12:44.876 A:middle
in App Store Connect.

00:12:44.946 --> 00:12:45.976 A:middle
So let's go see a demo.

00:13:01.856 --> 00:13:04.036 A:middle
We'll begin by getting the list

00:13:04.036 --> 00:13:05.556 A:middle
of all the users in our team by

00:13:05.556 --> 00:13:07.596 A:middle
sending GET request to the users

00:13:07.596 --> 00:13:10.156 A:middle
resource, which is GET v1/users.

00:13:10.986 --> 00:13:12.346 A:middle
And this returns all the users

00:13:12.346 --> 00:13:14.046 A:middle
we have access to in our team.

00:13:15.196 --> 00:13:16.416 A:middle
Now let's try to find the user

00:13:16.416 --> 00:13:17.796 A:middle
we're looking for and we can

00:13:17.796 --> 00:13:19.176 A:middle
search by the email of the user

00:13:19.176 --> 00:13:20.356 A:middle
by applying the filter

00:13:20.356 --> 00:13:20.896 A:middle
parameter.

00:13:21.206 --> 00:13:22.606 A:middle
So this filter parameter of

00:13:22.606 --> 00:13:24.246 A:middle
email specified that we would

00:13:24.246 --> 00:13:25.536 A:middle
like to find the users that

00:13:25.536 --> 00:13:28.116 A:middle
matches JohnAppleseed@mac.com.

00:13:28.366 --> 00:13:29.526 A:middle
So let's send this request.

00:13:30.976 --> 00:13:32.126 A:middle
And we get a response with a

00:13:32.126 --> 00:13:33.686 A:middle
user that contains the email of

00:13:33.686 --> 00:13:34.496 A:middle
John Appleseed.

00:13:35.836 --> 00:13:39.166 A:middle
Now let's use the ID of this

00:13:39.166 --> 00:13:41.126 A:middle
user to get the instance of this

00:13:41.126 --> 00:13:46.766 A:middle
user, which is users/ID and this

00:13:46.766 --> 00:13:48.176 A:middle
should return the instance of

00:13:48.176 --> 00:13:49.746 A:middle
the user with a matching ID.

00:13:50.346 --> 00:13:53.106 A:middle
And we get a response with the

00:13:53.106 --> 00:13:54.526 A:middle
username John Appleseed.

00:13:55.516 --> 00:13:56.596 A:middle
So we found the user that we're

00:13:56.596 --> 00:13:57.236 A:middle
looking for.

00:13:57.666 --> 00:13:59.376 A:middle
Let's try to remove this user by

00:13:59.376 --> 00:14:01.376 A:middle
sending DELETE request to self

00:13:59.376 --> 00:14:01.376 A:middle
sending DELETE request to self

00:14:01.376 --> 00:14:02.276 A:middle
link of this user.

00:14:03.416 --> 00:14:05.496 A:middle
So we'll replace GET with

00:14:05.496 --> 00:14:05.886 A:middle
DELETE.

00:14:07.116 --> 00:14:08.526 A:middle
And this should remove the user

00:14:08.526 --> 00:14:09.386 A:middle
with the matching ID.

00:14:09.996 --> 00:14:14.816 A:middle
And we get a 204, which means

00:14:14.816 --> 00:14:16.326 A:middle
the deletion was successful and

00:14:16.356 --> 00:14:18.056 A:middle
NO CONTENT since the content of

00:14:18.056 --> 00:14:19.636 A:middle
user is no longer available.

00:14:20.276 --> 00:14:21.786 A:middle
Finally, let's confirm that the

00:14:21.786 --> 00:14:23.376 A:middle
user is indeed removed by

00:14:23.376 --> 00:14:24.756 A:middle
sending GET request to the self

00:14:24.756 --> 00:14:25.536 A:middle
link once again.

00:14:25.536 --> 00:14:29.306 A:middle
And now we get 404 NOT FOUND and

00:14:29.306 --> 00:14:30.926 A:middle
it looks like the user is indeed

00:14:30.926 --> 00:14:31.286 A:middle
removed.

00:14:31.826 --> 00:14:35.926 A:middle
So in this demo, we saw how to

00:14:35.926 --> 00:14:37.616 A:middle
get collections of user, how to

00:14:37.616 --> 00:14:40.116 A:middle
find instance of user, how to

00:14:40.116 --> 00:14:41.936 A:middle
search user by applying filter,

00:14:42.416 --> 00:14:43.886 A:middle
and how to remove user by

00:14:44.096 --> 00:14:44.956 A:middle
sending DELETE request.

00:14:45.796 --> 00:14:47.136 A:middle
And this concludes the demo on

00:14:47.136 --> 00:14:48.226 A:middle
how to use App Source Connect

00:14:48.226 --> 00:14:49.986 A:middle
API with the users resource.

00:14:50.456 --> 00:14:51.626 A:middle
And I'll give the stage back to

00:14:51.626 --> 00:14:51.796 A:middle
Geoff.

00:14:51.796 --> 00:14:51.976 A:middle
Thank you.

00:14:52.516 --> 00:14:58.746 A:middle
[ Applause ]

00:14:59.246 --> 00:15:02.296 A:middle
&gt;&gt; Thanks, Sehoon.

00:14:59.246 --> 00:15:02.296 A:middle
&gt;&gt; Thanks, Sehoon.

00:15:02.446 --> 00:15:04.456 A:middle
So now you know how to create,

00:15:04.666 --> 00:15:07.086 A:middle
read, update, and delete all

00:15:07.086 --> 00:15:08.326 A:middle
these various resources and it

00:15:08.326 --> 00:15:09.326 A:middle
and might feel like that's

00:15:09.576 --> 00:15:10.666 A:middle
basically it, that's all you

00:15:10.666 --> 00:15:12.426 A:middle
need to be able to do but isn't

00:15:12.426 --> 00:15:14.086 A:middle
the whole story and that brings

00:15:14.086 --> 00:15:15.566 A:middle
us to relationships.

00:15:16.046 --> 00:15:16.966 A:middle
Sometimes it's not the

00:15:16.966 --> 00:15:18.406 A:middle
individual resources that you're

00:15:18.406 --> 00:15:19.776 A:middle
most interested in but the

00:15:19.776 --> 00:15:21.246 A:middle
connections between them.

00:15:21.576 --> 00:15:22.816 A:middle
It helps if I give you an

00:15:22.816 --> 00:15:23.296 A:middle
example.

00:15:23.846 --> 00:15:25.066 A:middle
We have a resource called Beta

00:15:25.066 --> 00:15:25.606 A:middle
Groups.

00:15:25.756 --> 00:15:27.116 A:middle
These represent all your groups

00:15:27.206 --> 00:15:27.876 A:middle
in TestFlight.

00:15:28.426 --> 00:15:29.556 A:middle
We have another one called Beta

00:15:29.636 --> 00:15:31.256 A:middle
Testers that represent all of

00:15:31.256 --> 00:15:32.636 A:middle
the people who can test your

00:15:32.636 --> 00:15:33.436 A:middle
applications.

00:15:33.916 --> 00:15:35.106 A:middle
And as you know, you can put

00:15:35.106 --> 00:15:36.946 A:middle
those testers into groups.

00:15:37.696 --> 00:15:38.726 A:middle
So how do we model something

00:15:38.726 --> 00:15:40.336 A:middle
like this in the API?

00:15:41.316 --> 00:15:42.536 A:middle
Let's start by getting Beta

00:15:42.536 --> 00:15:42.956 A:middle
Groups.

00:15:43.426 --> 00:15:46.026 A:middle
We go a GET v1/beta Groups and

00:15:46.026 --> 00:15:47.536 A:middle
we get back an array of Groups.

00:15:47.986 --> 00:15:48.886 A:middle
And if we look at the first

00:15:48.886 --> 00:15:50.576 A:middle
group and in particular the

00:15:50.576 --> 00:15:52.616 A:middle
relationship section, we see

00:15:52.616 --> 00:15:53.616 A:middle
that this group has three

00:15:53.616 --> 00:15:55.796 A:middle
relationships: app, beta

00:15:55.796 --> 00:15:57.016 A:middle
testers, and builds.

00:15:57.286 --> 00:15:58.416 A:middle
We're only going to talk about

00:15:58.416 --> 00:15:59.426 A:middle
Beta Testers today.

00:15:59.756 --> 00:16:00.856 A:middle
So we'll pop that one open.

00:15:59.756 --> 00:16:00.856 A:middle
So we'll pop that one open.

00:16:01.246 --> 00:16:03.226 A:middle
And again, we see another links

00:16:03.386 --> 00:16:03.886 A:middle
section.

00:16:04.566 --> 00:16:05.886 A:middle
These are links associated with

00:16:05.886 --> 00:16:07.576 A:middle
this beta testers relationship

00:16:07.876 --> 00:16:09.796 A:middle
on this first group in the list.

00:16:09.996 --> 00:16:11.036 A:middle
You'd have a section like this

00:16:11.136 --> 00:16:12.486 A:middle
in each of the groups in the

00:16:12.486 --> 00:16:12.746 A:middle
array.

00:16:13.216 --> 00:16:15.016 A:middle
There're two links here, the

00:16:15.016 --> 00:16:16.026 A:middle
first one we call the

00:16:16.026 --> 00:16:17.756 A:middle
relationship self link.

00:16:18.046 --> 00:16:19.776 A:middle
And it's a URL that represents

00:16:19.946 --> 00:16:21.616 A:middle
the relationship itself.

00:16:22.616 --> 00:16:25.116 A:middle
And we use this URL to operate

00:16:25.386 --> 00:16:26.846 A:middle
on this relationship.

00:16:27.796 --> 00:16:28.686 A:middle
Now let me explain that.

00:16:29.126 --> 00:16:30.376 A:middle
We said we want to add testers

00:16:30.416 --> 00:16:32.436 A:middle
to this group, right, but I want

00:16:32.436 --> 00:16:32.826 A:middle
to be clear.

00:16:32.826 --> 00:16:33.966 A:middle
The testers are already in

00:16:33.966 --> 00:16:35.536 A:middle
TestFlight and the group is

00:16:35.536 --> 00:16:36.556 A:middle
already in TestFlight.

00:16:36.866 --> 00:16:37.796 A:middle
So we want to take these

00:16:37.796 --> 00:16:39.646 A:middle
existing testers and put them

00:16:39.646 --> 00:16:41.646 A:middle
into this existing group and

00:16:41.646 --> 00:16:43.456 A:middle
that's a operation that doesn't

00:16:43.456 --> 00:16:44.546 A:middle
fit with any of the things we've

00:16:44.546 --> 00:16:45.516 A:middle
learned about already, if you

00:16:45.516 --> 00:16:46.516 A:middle
think about it, right, like

00:16:46.516 --> 00:16:48.006 A:middle
we're not creating or editing or

00:16:48.006 --> 00:16:49.426 A:middle
deleting testers and we're not

00:16:49.426 --> 00:16:51.226 A:middle
really editing the group either,

00:16:51.616 --> 00:16:53.036 A:middle
at least not the attributes of

00:16:53.036 --> 00:16:53.396 A:middle
the group.

00:16:53.996 --> 00:16:55.366 A:middle
So conceptually, you might say

00:16:55.366 --> 00:16:56.366 A:middle
that we're creating new

00:16:56.366 --> 00:16:58.166 A:middle
connections between this group

00:16:58.526 --> 00:17:00.036 A:middle
and its related beta testers.

00:16:58.526 --> 00:17:00.036 A:middle
and its related beta testers.

00:17:00.306 --> 00:17:00.966 A:middle
And this is where the

00:17:00.966 --> 00:17:02.766 A:middle
relationship self link comes in.

00:17:03.486 --> 00:17:04.296 A:middle
It looks like this.

00:17:04.415 --> 00:17:05.976 A:middle
We do a POST request to the

00:17:05.976 --> 00:17:07.236 A:middle
relationship self link.

00:17:07.465 --> 00:17:09.016 A:middle
And if you look at the data

00:17:09.016 --> 00:17:10.326 A:middle
we're sending, it's these type

00:17:10.326 --> 00:17:12.556 A:middle
and id pairs of the two testers

00:17:12.556 --> 00:17:13.705 A:middle
in this case that we want to add

00:17:13.705 --> 00:17:14.356 A:middle
to this group.

00:17:14.796 --> 00:17:16.236 A:middle
So this request says take these

00:17:16.236 --> 00:17:17.756 A:middle
two testers and put them into

00:17:17.756 --> 00:17:18.286 A:middle
this group.

00:17:18.376 --> 00:17:19.296 A:middle
We don't have to include more

00:17:19.296 --> 00:17:20.415 A:middle
tester information because the

00:17:20.415 --> 00:17:21.406 A:middle
testers are already in

00:17:21.406 --> 00:17:21.896 A:middle
TestFlight.

00:17:22.496 --> 00:17:25.096 A:middle
If we run it, we get a 204 NO

00:17:25.096 --> 00:17:26.236 A:middle
CONTENT response again.

00:17:26.496 --> 00:17:27.685 A:middle
That's the API telling you that

00:17:27.685 --> 00:17:28.786 A:middle
the testers have been added to

00:17:28.786 --> 00:17:29.186 A:middle
the group.

00:17:30.266 --> 00:17:31.106 A:middle
I'm sure some of you are

00:17:31.106 --> 00:17:32.036 A:middle
wondering "What if I want to

00:17:32.036 --> 00:17:33.266 A:middle
take testers out of the group

00:17:33.266 --> 00:17:33.726 A:middle
instead?"

00:17:33.726 --> 00:17:34.986 A:middle
And the answer is you do it in

00:17:34.986 --> 00:17:35.916 A:middle
exactly the same way.

00:17:35.916 --> 00:17:36.926 A:middle
It's the same URL.

00:17:37.296 --> 00:17:38.486 A:middle
It's the same data format.

00:17:38.786 --> 00:17:39.716 A:middle
You'll just use the DELETE

00:17:39.716 --> 00:17:41.126 A:middle
method instead of the POST

00:17:41.126 --> 00:17:41.496 A:middle
method.

00:17:41.496 --> 00:17:44.486 A:middle
Now let's take a look at Beta

00:17:44.486 --> 00:17:46.256 A:middle
Groups again and look at that

00:17:46.336 --> 00:17:46.926 A:middle
second link.

00:17:47.896 --> 00:17:50.716 A:middle
This is what we call the related

00:17:50.716 --> 00:17:50.956 A:middle
link.

00:17:51.546 --> 00:17:53.186 A:middle
This URL represents the actual

00:17:53.186 --> 00:17:54.836 A:middle
related data, in this case the

00:17:54.836 --> 00:17:56.076 A:middle
testers in this group.

00:17:56.076 --> 00:17:58.246 A:middle
If we go and get this data, we

00:17:58.246 --> 00:17:59.266 A:middle
get back an array of beta

00:17:59.266 --> 00:17:59.816 A:middle
testers.

00:18:00.206 --> 00:18:01.576 A:middle
The format here looks exactly

00:18:01.576 --> 00:18:03.646 A:middle
like what you'd get if you did a

00:18:03.796 --> 00:18:05.666 A:middle
Get of v1/beta testers.

00:18:05.926 --> 00:18:06.776 A:middle
The only difference is we're

00:18:06.776 --> 00:18:07.866 A:middle
getting the testers in this

00:18:07.866 --> 00:18:09.386 A:middle
group rather than all the

00:18:09.386 --> 00:18:10.406 A:middle
testers in your TestFlight

00:18:10.406 --> 00:18:10.866 A:middle
program.

00:18:11.366 --> 00:18:13.766 A:middle
And I want to pause there and

00:18:13.766 --> 00:18:14.776 A:middle
make sure I'm being clear.

00:18:15.276 --> 00:18:16.216 A:middle
We're getting the testers in

00:18:16.216 --> 00:18:17.586 A:middle
this group and when I say "this

00:18:17.586 --> 00:18:18.566 A:middle
group," I mean the group whose

00:18:18.566 --> 00:18:20.506 A:middle
identifier is in that URL.

00:18:20.506 --> 00:18:22.756 A:middle
So this URL get the testers in

00:18:22.756 --> 00:18:23.246 A:middle
one group.

00:18:23.606 --> 00:18:24.576 A:middle
If I want to get the testers in

00:18:24.576 --> 00:18:25.696 A:middle
a bunch of different groups

00:18:26.056 --> 00:18:27.456 A:middle
using this mechanism, I'd have

00:18:27.486 --> 00:18:28.476 A:middle
to make a bunch of different

00:18:28.476 --> 00:18:30.356 A:middle
requests, which can sometimes be

00:18:30.356 --> 00:18:30.956 A:middle
inconvenient.

00:18:31.476 --> 00:18:32.636 A:middle
So we do have one more way to

00:18:32.636 --> 00:18:33.456 A:middle
get related data.

00:18:33.676 --> 00:18:34.496 A:middle
It's called the include

00:18:34.496 --> 00:18:34.966 A:middle
parameter.

00:18:35.606 --> 00:18:36.406 A:middle
It looks like this.

00:18:36.546 --> 00:18:39.106 A:middle
We do a GET of v1/beta Groups

00:18:39.506 --> 00:18:40.496 A:middle
and then we add this query

00:18:40.566 --> 00:18:42.866 A:middle
parameter: include = beta

00:18:42.866 --> 00:18:43.386 A:middle
testers.

00:18:43.716 --> 00:18:45.316 A:middle
And this tells the API while

00:18:45.316 --> 00:18:46.596 A:middle
you're bringing me back the beta

00:18:46.596 --> 00:18:48.426 A:middle
groups, also include information

00:18:48.426 --> 00:18:49.766 A:middle
about the related testers in

00:18:49.986 --> 00:18:50.936 A:middle
each group.

00:18:51.296 --> 00:18:54.096 A:middle
Here's what it looks like.

00:18:54.726 --> 00:18:55.706 A:middle
We get our array of beta

00:18:55.706 --> 00:18:57.616 A:middle
testers, of beta Groups, excuse

00:18:57.616 --> 00:18:59.006 A:middle
me, and if you look at the beta

00:18:59.006 --> 00:19:00.616 A:middle
testers relationship in the

00:18:59.006 --> 00:19:00.616 A:middle
testers relationship in the

00:19:00.616 --> 00:19:02.316 A:middle
first group, you see this new

00:19:02.316 --> 00:19:03.376 A:middle
section called data.

00:19:03.376 --> 00:19:06.046 A:middle
And this has the type and id

00:19:06.086 --> 00:19:07.966 A:middle
pairs of the testers in this

00:19:07.966 --> 00:19:08.246 A:middle
group.

00:19:08.786 --> 00:19:09.736 A:middle
Now if you could see the whole

00:19:09.736 --> 00:19:11.006 A:middle
response here, you'd see a data

00:19:11.006 --> 00:19:12.706 A:middle
section like this inside each

00:19:12.706 --> 00:19:14.856 A:middle
beta testers relationship inside

00:19:14.856 --> 00:19:16.736 A:middle
each group that's in this array,

00:19:17.376 --> 00:19:17.586 A:middle
right.

00:19:18.216 --> 00:19:19.616 A:middle
But this is just the type and

00:19:19.616 --> 00:19:19.806 A:middle
IDs.

00:19:19.846 --> 00:19:20.606 A:middle
I'm sure you're wondering where

00:19:20.606 --> 00:19:21.876 A:middle
the actual tester information

00:19:21.876 --> 00:19:22.066 A:middle
is.

00:19:22.316 --> 00:19:23.426 A:middle
And if we scroll all the way

00:19:23.426 --> 00:19:24.646 A:middle
down to the end of this

00:19:24.646 --> 00:19:26.236 A:middle
response, we also have a new

00:19:26.236 --> 00:19:27.466 A:middle
section called include.

00:19:28.156 --> 00:19:29.506 A:middle
And this is an array of beta

00:19:29.506 --> 00:19:30.986 A:middle
testers with the full tester

00:19:30.986 --> 00:19:31.646 A:middle
information.

00:19:32.096 --> 00:19:33.396 A:middle
More generally the include

00:19:33.536 --> 00:19:35.696 A:middle
section has a full resource

00:19:35.696 --> 00:19:37.606 A:middle
representation of every resource

00:19:37.646 --> 00:19:39.636 A:middle
that you have included by way of

00:19:39.636 --> 00:19:40.456 A:middle
relationships.

00:19:40.796 --> 00:19:42.616 A:middle
And then we can match by type

00:19:42.616 --> 00:19:44.706 A:middle
and id, figure out which testers

00:19:45.006 --> 00:19:46.056 A:middle
belong to which group.

00:19:46.516 --> 00:19:48.936 A:middle
Now you might be wondering why

00:19:48.936 --> 00:19:49.586 A:middle
we do this.

00:19:49.586 --> 00:19:50.876 A:middle
We have the data section with

00:19:50.876 --> 00:19:52.276 A:middle
all of our groups and then we

00:19:52.276 --> 00:19:53.436 A:middle
have the include section with

00:19:53.436 --> 00:19:54.816 A:middle
all of our included testers.

00:19:55.146 --> 00:19:56.096 A:middle
And we do this for an important

00:19:56.096 --> 00:19:56.406 A:middle
reason.

00:19:56.406 --> 00:19:57.576 A:middle
We have this test on the screen

00:19:57.576 --> 00:19:59.476 A:middle
John Appleseed and that tester

00:19:59.476 --> 00:20:00.756 A:middle
might be in multiple groups,

00:19:59.476 --> 00:20:00.756 A:middle
might be in multiple groups,

00:20:00.876 --> 00:20:01.086 A:middle
right.

00:20:01.416 --> 00:20:02.546 A:middle
The way we have this structured,

00:20:03.046 --> 00:20:04.316 A:middle
the data for John Appleseed is

00:20:04.316 --> 00:20:05.796 A:middle
only in the response one time,

00:20:05.956 --> 00:20:07.286 A:middle
no matter how many groups they

00:20:07.286 --> 00:20:08.786 A:middle
appear in, in the response.

00:20:08.906 --> 00:20:09.286 A:middle
Make sense?

00:20:09.916 --> 00:20:12.896 A:middle
Okay. Sehoon is going to come

00:20:12.896 --> 00:20:14.256 A:middle
back up now and show us some

00:20:14.256 --> 00:20:16.086 A:middle
more real-world examples with

00:20:16.086 --> 00:20:16.746 A:middle
relationships.

00:20:16.836 --> 00:20:17.196 A:middle
Sehoon.

00:20:18.516 --> 00:20:22.976 A:middle
[ Applause ]

00:20:23.476 --> 00:20:24.046 A:middle
&gt;&gt; Thanks, Geoff.

00:20:26.336 --> 00:20:28.176 A:middle
So for this part of the demo

00:20:28.256 --> 00:20:29.666 A:middle
we'll look at TestFlight and see

00:20:29.666 --> 00:20:30.746 A:middle
how we can create new beta

00:20:30.746 --> 00:20:32.276 A:middle
groups and add some external

00:20:32.276 --> 00:20:33.566 A:middle
testers and we'll see some

00:20:33.566 --> 00:20:35.216 A:middle
relationship between testers and

00:20:35.216 --> 00:20:35.636 A:middle
groups.

00:20:35.916 --> 00:20:36.976 A:middle
So let's go see the demo.

00:20:46.176 --> 00:20:48.116 A:middle
We'll start by creating a new

00:20:48.116 --> 00:20:49.746 A:middle
beta group by posting to the

00:20:49.746 --> 00:20:51.296 A:middle
beta groups endpoint which is

00:20:51.416 --> 00:20:52.806 A:middle
v1/beta Groups.

00:20:52.916 --> 00:20:55.546 A:middle
When we're creating a resource,

00:20:55.546 --> 00:20:56.696 A:middle
we also need to provide the

00:20:56.696 --> 00:20:57.926 A:middle
payload that looks like this.

00:20:57.986 --> 00:20:59.476 A:middle
We have the data with the type

00:20:59.476 --> 00:21:00.816 A:middle
of beta Groups and a set of

00:20:59.476 --> 00:21:00.816 A:middle
of beta Groups and a set of

00:21:00.816 --> 00:21:01.366 A:middle
attributes.

00:21:01.366 --> 00:21:03.296 A:middle
And since the name is the only

00:21:03.296 --> 00:21:04.696 A:middle
required field when we're

00:21:04.696 --> 00:21:06.516 A:middle
creating a group, let's give it

00:21:06.516 --> 00:21:08.776 A:middle
a name and we'll simply call it

00:21:09.116 --> 00:21:09.606 A:middle
Test Group.

00:21:10.606 --> 00:21:11.866 A:middle
And I'll send the request now

00:21:12.566 --> 00:21:15.136 A:middle
and we get a 409 CONFLICT

00:21:15.136 --> 00:21:15.636 A:middle
response.

00:21:15.936 --> 00:21:18.316 A:middle
So let's look at the details.

00:21:18.606 --> 00:21:19.686 A:middle
It says, "You must provide a

00:21:19.686 --> 00:21:21.106 A:middle
value for the relationship app

00:21:21.386 --> 00:21:22.106 A:middle
with this request."

00:21:22.886 --> 00:21:24.266 A:middle
So in TestFlight, you cannot

00:21:24.266 --> 00:21:25.746 A:middle
create a beta Group that does

00:21:25.746 --> 00:21:27.486 A:middle
not belong to any app and, thus,

00:21:27.486 --> 00:21:28.916 A:middle
we must create a relationship to

00:21:28.916 --> 00:21:30.366 A:middle
an app while we're creating beta

00:21:30.366 --> 00:21:30.726 A:middle
Group.

00:21:31.106 --> 00:21:31.946 A:middle
And how do we do this?

00:21:32.296 --> 00:21:33.666 A:middle
We can include the relationship

00:21:33.666 --> 00:21:37.496 A:middle
in the payload like this.

00:21:37.676 --> 00:21:38.836 A:middle
So now we have the relationship

00:21:38.836 --> 00:21:40.936 A:middle
in the payload of an app with a

00:21:40.936 --> 00:21:42.926 A:middle
data type of apps and the id

00:21:43.006 --> 00:21:44.776 A:middle
specifies which apps the beta

00:21:44.776 --> 00:21:46.396 A:middle
Groups should be linked to.

00:21:46.676 --> 00:21:48.006 A:middle
So this will create beta Groups

00:21:48.006 --> 00:21:49.546 A:middle
with the name of Test Group and

00:21:49.546 --> 00:21:52.436 A:middle
link to an app with the id.

00:21:52.546 --> 00:21:53.936 A:middle
So let's resend this request.

00:21:54.936 --> 00:21:56.506 A:middle
And now we get a 201 CREATED

00:21:56.506 --> 00:21:56.876 A:middle
response.

00:21:57.356 --> 00:21:58.796 A:middle
In the response, we have the id

00:21:58.946 --> 00:21:59.846 A:middle
that is generated.

00:21:59.846 --> 00:22:04.006 A:middle
So let's copy this id.

00:21:59.846 --> 00:22:04.006 A:middle
So let's copy this id.

00:22:04.136 --> 00:22:05.156 A:middle
So we just created a group

00:22:05.156 --> 00:22:05.986 A:middle
called Test Group.

00:22:06.066 --> 00:22:07.236 A:middle
But what if you don't like the

00:22:07.236 --> 00:22:08.136 A:middle
name of the group we just

00:22:08.136 --> 00:22:08.736 A:middle
created?

00:22:09.446 --> 00:22:10.936 A:middle
We can modify the existing group

00:22:11.046 --> 00:22:12.836 A:middle
by sending PATCH request to the

00:22:12.836 --> 00:22:13.786 A:middle
self link of this group.

00:22:15.156 --> 00:22:18.066 A:middle
We'll send PATCH and then beta

00:22:18.496 --> 00:22:22.646 A:middle
Groups/the id and we'll also

00:22:22.646 --> 00:22:24.306 A:middle
need to provide the payload that

00:22:24.306 --> 00:22:25.236 A:middle
looks like this.

00:22:25.816 --> 00:22:27.806 A:middle
This looks a lot like payload

00:22:27.806 --> 00:22:29.336 A:middle
for posting but we also need to

00:22:29.336 --> 00:22:31.296 A:middle
provide the id to make sure that

00:22:31.296 --> 00:22:32.286 A:middle
we're modifying the correct

00:22:32.286 --> 00:22:32.576 A:middle
data.

00:22:32.656 --> 00:22:35.736 A:middle
And let's paste the id of the

00:22:35.736 --> 00:22:36.476 A:middle
beta Group.

00:22:36.476 --> 00:22:38.096 A:middle
And the only information we'd

00:22:38.096 --> 00:22:39.586 A:middle
like to change is the name.

00:22:39.986 --> 00:22:42.746 A:middle
So let's rename it to WWDC

00:22:44.216 --> 00:22:44.346 A:middle
Group.

00:22:44.516 --> 00:22:46.546 A:middle
And I'm sending the request and

00:22:46.546 --> 00:22:47.926 A:middle
now we get a 200 response and it

00:22:47.926 --> 00:22:48.926 A:middle
looks like the name has been

00:22:48.926 --> 00:22:49.666 A:middle
updated.

00:22:50.686 --> 00:22:51.896 A:middle
So now we have the group that we

00:22:51.896 --> 00:22:52.376 A:middle
wanted.

00:22:52.486 --> 00:22:53.996 A:middle
Let's start adding some external

00:22:53.996 --> 00:22:54.506 A:middle
testers.

00:22:55.186 --> 00:22:57.146 A:middle
To create tester, we send POST

00:22:57.146 --> 00:22:58.676 A:middle
request to the beta testers

00:22:58.676 --> 00:23:02.736 A:middle
endpoint, which is v1/beta

00:22:58.676 --> 00:23:02.736 A:middle
endpoint, which is v1/beta

00:23:02.936 --> 00:23:03.616 A:middle
testers.

00:23:04.976 --> 00:23:06.746 A:middle
And we'll also need to provide

00:23:06.746 --> 00:23:08.086 A:middle
the payload that looks like

00:23:08.086 --> 00:23:08.286 A:middle
this.

00:23:08.286 --> 00:23:10.996 A:middle
It has a type of beta testers

00:23:11.126 --> 00:23:12.136 A:middle
and a set of attribute.

00:23:12.326 --> 00:23:13.906 A:middle
So we'll create tester that's

00:23:13.906 --> 00:23:16.396 A:middle
called Kate Bell and this also

00:23:16.396 --> 00:23:18.736 A:middle
has a relationship to the beta

00:23:18.736 --> 00:23:20.266 A:middle
Groups and this will create Beta

00:23:20.266 --> 00:23:22.046 A:middle
Tester and also assign to the

00:23:22.046 --> 00:23:23.226 A:middle
beta Group at the same time.

00:23:24.086 --> 00:23:25.246 A:middle
So if you paste the id of the

00:23:25.246 --> 00:23:27.396 A:middle
beta Group we just created, this

00:23:27.396 --> 00:23:29.396 A:middle
will assign the tester to the

00:23:29.396 --> 00:23:30.056 A:middle
WWDC Group.

00:23:30.056 --> 00:23:33.666 A:middle
And we get a 201 CREATED

00:23:33.666 --> 00:23:35.076 A:middle
response and it looks like the

00:23:35.076 --> 00:23:36.746 A:middle
tester is created and also

00:23:36.746 --> 00:23:37.586 A:middle
assigned to the group at the

00:23:37.586 --> 00:23:38.156 A:middle
same time.

00:23:39.086 --> 00:23:40.526 A:middle
While we're here, let's add one

00:23:40.526 --> 00:23:42.366 A:middle
more tester and all we need to

00:23:42.366 --> 00:23:43.786 A:middle
do is simply replace this

00:23:43.786 --> 00:23:45.646 A:middle
attribute portion with a

00:23:45.646 --> 00:23:48.436 A:middle
different person's name and this

00:23:48.436 --> 00:23:50.216 A:middle
will create John Appleseed to

00:23:50.416 --> 00:23:52.926 A:middle
the same group.

00:23:54.626 --> 00:23:56.916 A:middle
And again, we get a 201 CREATED

00:23:56.916 --> 00:23:57.456 A:middle
response.

00:23:58.196 --> 00:23:59.766 A:middle
So we just added two testers to

00:23:59.766 --> 00:24:01.796 A:middle
the group and now let's confirm

00:23:59.766 --> 00:24:01.796 A:middle
the group and now let's confirm

00:24:01.796 --> 00:24:03.476 A:middle
that these two testers are

00:24:03.476 --> 00:24:04.636 A:middle
indeed inside the group by

00:24:04.736 --> 00:24:07.246 A:middle
sending GET request to the

00:24:07.246 --> 00:24:09.576 A:middle
related link between beta Groups

00:24:09.636 --> 00:24:10.546 A:middle
and beta testers.

00:24:11.856 --> 00:24:14.536 A:middle
So this link, /the id of the

00:24:14.536 --> 00:24:17.966 A:middle
group/betaTesters, this will

00:24:18.006 --> 00:24:19.916 A:middle
return all the beta Tester that

00:24:19.916 --> 00:24:21.206 A:middle
are assigned to the beta Groups

00:24:21.336 --> 00:24:23.516 A:middle
with the specified id.

00:24:24.576 --> 00:24:26.166 A:middle
And as you can see, we have John

00:24:26.166 --> 00:24:28.076 A:middle
Appleseed that's added earlier.

00:24:29.256 --> 00:24:30.756 A:middle
And this response we have a lot

00:24:30.756 --> 00:24:32.926 A:middle
of information including list of

00:24:32.926 --> 00:24:33.886 A:middle
attribute as well as

00:24:33.886 --> 00:24:34.756 A:middle
relationship.

00:24:34.886 --> 00:24:36.556 A:middle
But what if you only care about

00:24:36.556 --> 00:24:37.856 A:middle
maybe the email of the tester?

00:24:38.896 --> 00:24:40.446 A:middle
We can trim down the response by

00:24:40.446 --> 00:24:41.786 A:middle
applying the special parameter

00:24:41.786 --> 00:24:43.516 A:middle
called fields and this will

00:24:43.516 --> 00:24:45.046 A:middle
allow us to trim down the body

00:24:45.186 --> 00:24:46.796 A:middle
and only look at what we would

00:24:46.796 --> 00:24:48.316 A:middle
like to see.

00:24:48.416 --> 00:24:51.046 A:middle
If you do fields of beta testers

00:24:52.316 --> 00:24:56.196 A:middle
equals email, as you can see now

00:24:56.196 --> 00:24:57.606 A:middle
the response only contains the

00:24:57.606 --> 00:24:59.086 A:middle
email of the user and nothing

00:24:59.086 --> 00:24:59.326 A:middle
else.

00:25:00.326 --> 00:25:01.926 A:middle
And we have the two testers that

00:25:01.926 --> 00:25:03.426 A:middle
are added to this beta Groups.

00:25:09.656 --> 00:25:12.086 A:middle
So in this demo, we saw how to

00:25:12.086 --> 00:25:13.506 A:middle
create beta Groups and beta

00:25:13.506 --> 00:25:15.286 A:middle
testers and so some relationship

00:25:15.286 --> 00:25:16.486 A:middle
between testers and groups.

00:25:17.376 --> 00:25:18.696 A:middle
And this concludes the demo on

00:25:18.746 --> 00:25:20.086 A:middle
How to Use App Store Connect API

00:25:20.306 --> 00:25:20.946 A:middle
with TestFlight.

00:25:20.946 --> 00:25:22.316 A:middle
And I'll give the stage back to

00:25:22.316 --> 00:25:22.566 A:middle
Geoff.

00:25:22.616 --> 00:25:22.976 A:middle
Thank you.

00:25:23.516 --> 00:25:29.386 A:middle
[ Applause ]

00:25:29.886 --> 00:25:30.706 A:middle
&gt;&gt; Thanks again, Sehoon.

00:25:30.706 --> 00:25:31.476 A:middle
That was awesome.

00:25:32.706 --> 00:25:36.746 A:middle
So that's getting data, changing

00:25:36.746 --> 00:25:37.996 A:middle
data, and relationships.

00:25:37.996 --> 00:25:38.986 A:middle
It kind of covers the basic

00:25:38.986 --> 00:25:39.976 A:middle
features of the API.

00:25:40.566 --> 00:25:41.736 A:middle
But as you saw a glimpse in

00:25:41.736 --> 00:25:43.446 A:middle
Sehoon's demo, sometimes you

00:25:43.446 --> 00:25:44.806 A:middle
make mistakes and we can't

00:25:44.806 --> 00:25:45.916 A:middle
process your request.

00:25:46.236 --> 00:25:47.166 A:middle
So we're going to shift gears

00:25:47.166 --> 00:25:48.616 A:middle
now and talk about how the API

00:25:48.836 --> 00:25:50.576 A:middle
communicates these errors back

00:25:50.666 --> 00:25:51.036 A:middle
to you.

00:25:52.186 --> 00:25:53.636 A:middle
Anytime a request fails, you'll

00:25:53.636 --> 00:25:54.736 A:middle
get a response that looks like

00:25:54.736 --> 00:25:55.076 A:middle
this.

00:25:56.536 --> 00:25:58.546 A:middle
Now the first thing to notice is

00:25:58.546 --> 00:25:59.286 A:middle
that we'll send back an

00:25:59.286 --> 00:26:01.416 A:middle
appropriate HTTP response status

00:25:59.286 --> 00:26:01.416 A:middle
appropriate HTTP response status

00:26:01.976 --> 00:26:03.256 A:middle
indicating what went wrong,

00:26:03.356 --> 00:26:04.866 A:middle
usually something in the 400s.

00:26:05.166 --> 00:26:06.286 A:middle
And this is often all you really

00:26:06.286 --> 00:26:06.596 A:middle
need.

00:26:06.596 --> 00:26:08.256 A:middle
Most REST client libraries have

00:26:08.256 --> 00:26:10.136 A:middle
a Did Succeed or it Is Success

00:26:10.136 --> 00:26:11.716 A:middle
function and you can call that

00:26:11.716 --> 00:26:13.096 A:middle
and it will correctly tell you

00:26:13.096 --> 00:26:14.806 A:middle
if the request was successful or

00:26:14.806 --> 00:26:15.016 A:middle
not.

00:26:15.516 --> 00:26:16.656 A:middle
But if you want to know more

00:26:16.656 --> 00:26:18.036 A:middle
about what went wrong, you can

00:26:18.036 --> 00:26:19.416 A:middle
look down into the response.

00:26:19.956 --> 00:26:21.416 A:middle
When a request fails, instead of

00:26:21.416 --> 00:26:22.756 A:middle
that data property we've been

00:26:22.756 --> 00:26:24.246 A:middle
seeing all along, we'll give you

00:26:24.246 --> 00:26:25.316 A:middle
an error's property.

00:26:25.546 --> 00:26:26.856 A:middle
This is an array of error

00:26:26.856 --> 00:26:27.376 A:middle
objects.

00:26:27.746 --> 00:26:28.876 A:middle
But there can be multiple of

00:26:28.876 --> 00:26:30.706 A:middle
them, each one representing some

00:26:30.706 --> 00:26:31.986 A:middle
problem with the request you

00:26:31.986 --> 00:26:32.326 A:middle
sent.

00:26:33.456 --> 00:26:35.206 A:middle
They have an id that uniquely

00:26:35.206 --> 00:26:36.786 A:middle
identifies this particular error

00:26:37.246 --> 00:26:38.456 A:middle
of this particular response.

00:26:38.726 --> 00:26:40.586 A:middle
You might log this away and if

00:26:40.586 --> 00:26:41.416 A:middle
you think there's a problem on

00:26:41.416 --> 00:26:42.446 A:middle
our end, send it to us.

00:26:42.446 --> 00:26:43.706 A:middle
It'll help us track it down.

00:26:44.486 --> 00:26:46.336 A:middle
More useful for you is the title

00:26:46.336 --> 00:26:46.986 A:middle
and detail.

00:26:47.496 --> 00:26:48.606 A:middle
These together give you an

00:26:48.606 --> 00:26:50.556 A:middle
English language explanation of

00:26:50.556 --> 00:26:51.266 A:middle
what went wrong.

00:26:51.536 --> 00:26:52.716 A:middle
From the title here, I can see

00:26:52.716 --> 00:26:53.596 A:middle
that I have something wrong with

00:26:53.596 --> 00:26:54.366 A:middle
my parameters.

00:26:54.916 --> 00:26:56.766 A:middle
And from the detail, it tells me

00:26:56.766 --> 00:26:58.106 A:middle
that I'm filtering by email and

00:26:58.106 --> 00:26:59.556 A:middle
right away I see that I spelled

00:26:59.556 --> 00:27:00.716 A:middle
email incorrectly.

00:26:59.556 --> 00:27:00.716 A:middle
email incorrectly.

00:27:01.296 --> 00:27:03.056 A:middle
So these are great values to log

00:27:03.056 --> 00:27:04.546 A:middle
and use in your troubleshooting

00:27:04.786 --> 00:27:07.246 A:middle
and learning the API, but you

00:27:07.246 --> 00:27:08.566 A:middle
don't want to use these in your

00:27:08.566 --> 00:27:08.886 A:middle
code.

00:27:08.886 --> 00:27:09.506 A:middle
You don't want to try and

00:27:09.506 --> 00:27:10.856 A:middle
interpret these with your code.

00:27:10.856 --> 00:27:12.296 A:middle
I don't make any promises that

00:27:12.296 --> 00:27:13.436 A:middle
we won't change the wording on

00:27:13.436 --> 00:27:15.326 A:middle
these messages over time without

00:27:15.326 --> 00:27:15.716 A:middle
warning.

00:27:17.056 --> 00:27:18.646 A:middle
For programmatic error handling,

00:27:19.056 --> 00:27:19.926 A:middle
you want to use the code

00:27:19.926 --> 00:27:20.846 A:middle
property instead.

00:27:21.366 --> 00:27:22.216 A:middle
This is a stable

00:27:22.216 --> 00:27:23.466 A:middle
machine-readable string that

00:27:23.466 --> 00:27:24.906 A:middle
represents what went wrong.

00:27:25.376 --> 00:27:27.186 A:middle
It's a hierarchical value with

00:27:27.186 --> 00:27:28.506 A:middle
dots between levels of

00:27:28.506 --> 00:27:29.296 A:middle
specificity.

00:27:29.626 --> 00:27:30.786 A:middle
So in this example, I can see

00:27:30.786 --> 00:27:32.086 A:middle
that I have a parameter error,

00:27:32.086 --> 00:27:33.926 A:middle
generally, and more specifically

00:27:34.086 --> 00:27:35.146 A:middle
one of those parameters is

00:27:35.206 --> 00:27:35.786 A:middle
invalid.

00:27:36.196 --> 00:27:37.686 A:middle
Now these codes can get very

00:27:37.686 --> 00:27:39.756 A:middle
long and very specific and

00:27:39.756 --> 00:27:40.786 A:middle
sometimes you don't care about

00:27:40.786 --> 00:27:41.986 A:middle
all that specificity.

00:27:41.986 --> 00:27:43.046 A:middle
In fact, usually you don't.

00:27:43.046 --> 00:27:44.796 A:middle
So we structure them this way so

00:27:44.796 --> 00:27:46.036 A:middle
that you can do a prefix match

00:27:46.036 --> 00:27:47.906 A:middle
on the code and be as generic or

00:27:47.906 --> 00:27:49.866 A:middle
a specific as you need to be for

00:27:49.866 --> 00:27:51.156 A:middle
your particular use case.

00:27:51.816 --> 00:27:53.086 A:middle
But if you need to be specific,

00:27:53.186 --> 00:27:54.466 A:middle
say so you can report back to

00:27:54.466 --> 00:27:56.076 A:middle
your own users with clarity

00:27:56.076 --> 00:27:57.556 A:middle
about what went wrong, we try to

00:27:57.556 --> 00:27:58.746 A:middle
give you enough information to

00:27:58.746 --> 00:27:59.206 A:middle
do that.

00:28:00.046 --> 00:28:02.006 A:middle
And we help with that also with

00:28:02.006 --> 00:28:02.896 A:middle
the source parameter.

00:28:03.246 --> 00:28:05.166 A:middle
And whenever possible, we track

00:28:05.206 --> 00:28:06.666 A:middle
this error back to the place in

00:28:06.666 --> 00:28:07.776 A:middle
the request that caused the

00:28:07.776 --> 00:28:08.326 A:middle
problem.

00:28:08.656 --> 00:28:09.656 A:middle
Here I can see that it's the

00:28:09.656 --> 00:28:11.406 A:middle
filter bracket email parameter,

00:28:11.406 --> 00:28:12.906 A:middle
specifically, that produced this

00:28:12.906 --> 00:28:13.306 A:middle
error.

00:28:14.006 --> 00:28:15.106 A:middle
The source can be a parameter

00:28:15.106 --> 00:28:16.946 A:middle
like this or it could be a JSON

00:28:16.996 --> 00:28:18.546 A:middle
pointer pinpointing the spot in

00:28:18.546 --> 00:28:20.486 A:middle
the JSON data you sent us where

00:28:20.486 --> 00:28:21.596 A:middle
the problem originates.

00:28:22.246 --> 00:28:24.846 A:middle
And that's basically everything

00:28:24.846 --> 00:28:25.776 A:middle
there is to know about the App

00:28:25.776 --> 00:28:27.666 A:middle
Store Connect API except how to

00:28:27.746 --> 00:28:29.046 A:middle
get to the App Store Connect API

00:28:29.046 --> 00:28:30.816 A:middle
and successfully send requests.

00:28:30.846 --> 00:28:32.716 A:middle
So Julie Richards is going to

00:28:32.716 --> 00:28:34.216 A:middle
come up on stage now and help

00:28:34.216 --> 00:28:34.656 A:middle
you with that.

00:28:34.656 --> 00:28:34.776 A:middle
Julie.

00:28:35.516 --> 00:28:38.500 A:middle
[ Applause ]

00:28:45.116 --> 00:28:46.226 A:middle
&gt;&gt; Hi, everyone.

00:28:46.336 --> 00:28:48.246 A:middle
I'm Julie and I'm an engineer on

00:28:48.246 --> 00:28:49.566 A:middle
the App Store Connect team.

00:28:49.796 --> 00:28:51.506 A:middle
I'm here today to talk to you

00:28:51.506 --> 00:28:53.496 A:middle
about access and authentication.

00:28:54.526 --> 00:28:56.806 A:middle
So at this point you've seen a

00:28:56.806 --> 00:28:58.356 A:middle
bunch of different examples of

00:28:58.356 --> 00:28:59.476 A:middle
endpoints that will be

00:28:59.476 --> 00:29:00.106 A:middle
available.

00:28:59.476 --> 00:29:00.106 A:middle
available.

00:29:00.706 --> 00:29:01.976 A:middle
And when you're ready to start

00:29:01.976 --> 00:29:03.226 A:middle
testing out some of these new

00:29:03.226 --> 00:29:05.326 A:middle
features, you might start by

00:29:05.326 --> 00:29:07.316 A:middle
sending a simple GET request

00:29:07.316 --> 00:29:10.286 A:middle
like this; however, if you were

00:29:10.286 --> 00:29:12.556 A:middle
to simply curl this endpoint or

00:29:12.726 --> 00:29:13.956 A:middle
type it into your browser,

00:29:14.406 --> 00:29:15.816 A:middle
you'll end up with a response

00:29:16.066 --> 00:29:17.196 A:middle
that looks like this.

00:29:18.436 --> 00:29:20.476 A:middle
So as Geoff mentioned, we're

00:29:20.476 --> 00:29:22.456 A:middle
still missing one very important

00:29:22.456 --> 00:29:24.076 A:middle
step stat and that is

00:29:24.406 --> 00:29:25.746 A:middle
authentication credentials.

00:29:26.306 --> 00:29:29.616 A:middle
Now this step is necessary for

00:29:29.616 --> 00:29:30.586 A:middle
two reasons.

00:29:31.506 --> 00:29:33.776 A:middle
First, authentication

00:29:33.776 --> 00:29:35.526 A:middle
credentials give context to your

00:29:35.526 --> 00:29:35.776 A:middle
request.

00:29:36.086 --> 00:29:38.126 A:middle
After all, you don't want all

00:29:38.296 --> 00:29:38.436 A:middle
apps.

00:29:38.646 --> 00:29:40.606 A:middle
You want your app.

00:29:40.606 --> 00:29:42.876 A:middle
And most importantly, these

00:29:42.876 --> 00:29:45.286 A:middle
credentials secure the API and

00:29:45.286 --> 00:29:47.406 A:middle
ensure that no one but you will

00:29:47.406 --> 00:29:48.656 A:middle
have access to your data.

00:29:49.336 --> 00:29:53.026 A:middle
So to add these credentials to

00:29:53.026 --> 00:29:54.966 A:middle
your request, you'll need to

00:29:54.966 --> 00:29:57.196 A:middle
first create an API Key.

00:29:57.776 --> 00:30:00.136 A:middle
You'll then use that key to

00:29:57.776 --> 00:30:00.136 A:middle
You'll then use that key to

00:30:00.136 --> 00:30:02.806 A:middle
generate tokens and those tokens

00:30:02.806 --> 00:30:04.326 A:middle
will need to be sent with every

00:30:04.376 --> 00:30:04.626 A:middle
request.

00:30:05.856 --> 00:30:06.936 A:middle
So let's start with API Key.

00:30:07.156 --> 00:30:12.136 A:middle
Each key is actually a public

00:30:12.136 --> 00:30:13.456 A:middle
key, private key pair.

00:30:14.716 --> 00:30:16.946 A:middle
The private key belongs to you

00:30:17.086 --> 00:30:18.886 A:middle
and will be used to add a unique

00:30:18.886 --> 00:30:20.296 A:middle
signature to your token.

00:30:20.836 --> 00:30:23.886 A:middle
The public key will be used by

00:30:24.036 --> 00:30:26.596 A:middle
Apple to verify that signature

00:30:26.596 --> 00:30:28.426 A:middle
and ensure that it was in fact

00:30:28.576 --> 00:30:30.486 A:middle
signed by the associated private

00:30:30.586 --> 00:30:30.826 A:middle
key.

00:30:31.376 --> 00:30:34.606 A:middle
To create one of the keys,

00:30:34.746 --> 00:30:36.876 A:middle
you'll need to log in to App

00:30:37.086 --> 00:30:39.626 A:middle
Store Connect and navigate to a

00:30:39.626 --> 00:30:41.456 A:middle
new API Keys tab.

00:30:42.756 --> 00:30:45.396 A:middle
Your admin users will be able to

00:30:45.396 --> 00:30:47.216 A:middle
manage your team's API Keys.

00:30:47.926 --> 00:30:50.056 A:middle
You can create new Keys and

00:30:50.056 --> 00:30:51.106 A:middle
revoke them when they're no

00:30:51.106 --> 00:30:51.816 A:middle
longer needed.

00:30:52.386 --> 00:30:54.996 A:middle
Each key will need to be

00:30:54.996 --> 00:30:56.576 A:middle
assigned a level of access and

00:30:57.326 --> 00:30:59.886 A:middle
this will determine what API

00:30:59.936 --> 00:31:01.446 A:middle
services the key can be used

00:30:59.936 --> 00:31:01.446 A:middle
services the key can be used

00:31:01.446 --> 00:31:01.726 A:middle
for.

00:31:03.406 --> 00:31:05.466 A:middle
Once created, new keys will

00:31:05.466 --> 00:31:07.366 A:middle
appear in this list and the

00:31:07.366 --> 00:31:09.186 A:middle
private key file, that's the

00:31:09.186 --> 00:31:10.976 A:middle
part that belongs to you, will

00:31:10.976 --> 00:31:12.396 A:middle
be available to download.

00:31:13.726 --> 00:31:15.796 A:middle
Now it's important to note that

00:31:16.066 --> 00:31:17.936 A:middle
each private key can only be

00:31:17.936 --> 00:31:18.886 A:middle
downloaded once.

00:31:19.846 --> 00:31:21.436 A:middle
That is because these keys are

00:31:21.436 --> 00:31:22.766 A:middle
not stored by Apple.

00:31:23.296 --> 00:31:25.676 A:middle
In fact, your key is not even

00:31:25.676 --> 00:31:27.926 A:middle
generated until the moment you

00:31:27.926 --> 00:31:29.026 A:middle
decide to download it.

00:31:30.206 --> 00:31:31.836 A:middle
So you can think of these keys

00:31:31.836 --> 00:31:32.826 A:middle
like real keys.

00:31:33.486 --> 00:31:35.306 A:middle
They belong to you and they must

00:31:35.346 --> 00:31:39.176 A:middle
be managed and protected by you.

00:31:39.386 --> 00:31:42.766 A:middle
Also much like real keys, these

00:31:42.766 --> 00:31:45.386 A:middle
keys do not expire, so if the

00:31:45.386 --> 00:31:47.486 A:middle
key is lost or stolen it will

00:31:47.486 --> 00:31:49.456 A:middle
continue to have access to your

00:31:50.096 --> 00:31:51.706 A:middle
data until it is revoked through

00:31:51.706 --> 00:31:52.506 A:middle
App Store Connect.

00:31:53.516 --> 00:31:55.106 A:middle
So for this reason, it is very

00:31:55.106 --> 00:31:57.066 A:middle
important to keep your keys safe

00:31:57.066 --> 00:31:57.716 A:middle
and secure.

00:31:59.196 --> 00:32:00.956 A:middle
Once you have your private key

00:31:59.196 --> 00:32:00.956 A:middle
Once you have your private key

00:32:00.956 --> 00:32:03.026 A:middle
file, you'll be ready to start

00:32:03.026 --> 00:32:04.836 A:middle
generating JSON web tokens.

00:32:05.896 --> 00:32:07.166 A:middle
Now each of these tokens will

00:32:07.166 --> 00:32:08.916 A:middle
need to contain a few pieces of

00:32:08.916 --> 00:32:09.676 A:middle
information.

00:32:10.906 --> 00:32:12.246 A:middle
First, you'll need to add your

00:32:12.246 --> 00:32:14.246 A:middle
Issuer ID, that's your account

00:32:14.326 --> 00:32:17.156 A:middle
identifier, and this ID can be

00:32:17.156 --> 00:32:18.896 A:middle
found at the top of that new

00:32:18.946 --> 00:32:19.416 A:middle
page.

00:32:20.946 --> 00:32:22.726 A:middle
You'll also need to find or

00:32:22.726 --> 00:32:24.176 A:middle
you'll also need to add the ID

00:32:24.176 --> 00:32:25.086 A:middle
of your key.

00:32:25.786 --> 00:32:28.596 A:middle
This ID can also be found on

00:32:28.596 --> 00:32:31.526 A:middle
this new page and it is specific

00:32:31.526 --> 00:32:33.246 A:middle
to the key that you'll be using.

00:32:33.786 --> 00:32:37.836 A:middle
Now each token will also need an

00:32:37.836 --> 00:32:39.126 A:middle
expiration timestamp.

00:32:39.466 --> 00:32:41.886 A:middle
As I mentioned before, your keys

00:32:41.886 --> 00:32:44.236 A:middle
do not expire but these tokens

00:32:44.236 --> 00:32:45.816 A:middle
can only be used for up to 20

00:32:45.816 --> 00:32:46.036 A:middle
minutes.

00:32:46.036 --> 00:32:49.056 A:middle
And the last two pieces of

00:32:49.056 --> 00:32:51.166 A:middle
information are simply constant.

00:32:51.846 --> 00:32:54.106 A:middle
By that, I mean they will remain

00:32:54.106 --> 00:32:56.576 A:middle
the same across all tokens and

00:32:56.696 --> 00:32:58.706 A:middle
for all App Store Connect APIs,

00:32:59.186 --> 00:33:00.906 A:middle
the first is the Audience for

00:32:59.186 --> 00:33:00.906 A:middle
the first is the Audience for

00:33:00.906 --> 00:33:02.466 A:middle
the token and that will always

00:33:02.526 --> 00:33:03.736 A:middle
be App Store Connect.

00:33:04.206 --> 00:33:07.036 A:middle
And finally, you'll need to

00:33:07.036 --> 00:33:09.976 A:middle
assign or you'll need to add the

00:33:09.976 --> 00:33:12.076 A:middle
algorithm that was used to sign

00:33:12.076 --> 00:33:12.666 A:middle
the token.

00:33:13.096 --> 00:33:15.976 A:middle
And for this, we have chosen to

00:33:15.976 --> 00:33:16.686 A:middle
use ES256.

00:33:17.406 --> 00:33:19.006 A:middle
Now this algorithm corresponds

00:33:19.096 --> 00:33:21.256 A:middle
to a JWT-supported algorithm

00:33:21.626 --> 00:33:23.346 A:middle
that we have chosen to have you

00:33:23.346 --> 00:33:25.256 A:middle
use but don't worry, you don't

00:33:25.256 --> 00:33:26.826 A:middle
need to implement this

00:33:26.826 --> 00:33:27.596 A:middle
algorithm.

00:33:28.216 --> 00:33:30.326 A:middle
Fortunately, JWT provides

00:33:30.786 --> 00:33:32.486 A:middle
multiple libraries across

00:33:32.546 --> 00:33:34.556 A:middle
virtually any language that

00:33:34.556 --> 00:33:36.056 A:middle
makes creating and signing these

00:33:36.136 --> 00:33:37.866 A:middle
tokens as easy as possible.

00:33:39.066 --> 00:33:40.816 A:middle
This example behind me is

00:33:40.816 --> 00:33:42.676 A:middle
written in Ruby and, as you can

00:33:42.736 --> 00:33:45.026 A:middle
see, all I need to do is pass in

00:33:45.026 --> 00:33:46.686 A:middle
these few pieces of information

00:33:47.046 --> 00:33:48.726 A:middle
along with my private key and

00:33:48.726 --> 00:33:50.856 A:middle
this encode method returns to me

00:33:50.856 --> 00:33:52.376 A:middle
a complete and signed token.

00:33:53.696 --> 00:33:56.706 A:middle
That token can then be added to

00:33:56.706 --> 00:33:59.586 A:middle
my request by simply placing it

00:33:59.586 --> 00:34:00.806 A:middle
inside of an authorization

00:33:59.586 --> 00:34:00.806 A:middle
inside of an authorization

00:34:00.806 --> 00:34:01.086 A:middle
header.

00:34:03.626 --> 00:34:06.006 A:middle
So now that we know how to

00:34:06.006 --> 00:34:08.606 A:middle
create these keys and how to use

00:34:08.606 --> 00:34:10.406 A:middle
these keys to add tokens to our

00:34:10.406 --> 00:34:12.576 A:middle
requests, let's go ahead and

00:34:12.576 --> 00:34:12.976 A:middle
give it a try.

00:34:22.856 --> 00:34:25.025 A:middle
Okay, so here's that new API

00:34:25.025 --> 00:34:27.356 A:middle
Keys page and I don't have any

00:34:27.426 --> 00:34:27.906 A:middle
keys yet.

00:34:28.545 --> 00:34:30.056 A:middle
So I'll go ahead and create one.

00:34:30.735 --> 00:34:33.466 A:middle
I'll call it demo and I'll have

00:34:33.466 --> 00:34:35.735 A:middle
to assign a level of access.

00:34:35.735 --> 00:34:36.835 A:middle
So here, if I were to choose

00:34:36.835 --> 00:34:39.076 A:middle
something like finance, I'd get

00:34:39.076 --> 00:34:40.735 A:middle
a key that has access to things

00:34:40.735 --> 00:34:42.585 A:middle
like financial reports or sales

00:34:42.585 --> 00:34:44.295 A:middle
reports but it won't have access

00:34:44.295 --> 00:34:47.116 A:middle
to things like beta testers or

00:34:47.116 --> 00:34:47.626 A:middle
builds.

00:34:48.106 --> 00:34:50.766 A:middle
I can add on levels of access or

00:34:50.856 --> 00:34:52.916 A:middle
I can choose admin and I'll have

00:34:52.916 --> 00:34:54.646 A:middle
a key that has access to all

00:34:54.646 --> 00:34:54.835 A:middle
APIs.

00:34:54.835 --> 00:34:56.366 A:middle
So I'm going to stick with

00:34:56.366 --> 00:34:57.056 A:middle
admin.

00:34:57.056 --> 00:34:59.226 A:middle
And when I generate my key, I

00:34:59.576 --> 00:35:00.986 A:middle
can see that my private key is

00:34:59.576 --> 00:35:00.986 A:middle
can see that my private key is

00:35:00.986 --> 00:35:01.976 A:middle
available to download.

00:35:02.086 --> 00:35:06.386 A:middle
As I mentioned earlier, my

00:35:06.386 --> 00:35:07.466 A:middle
private key can only be

00:35:07.466 --> 00:35:08.356 A:middle
downloaded once.

00:35:08.806 --> 00:35:10.706 A:middle
If I lose my key or accidentally

00:35:10.706 --> 00:35:12.276 A:middle
delete it, I can't come back

00:35:12.336 --> 00:35:13.386 A:middle
here to re-download it.

00:35:13.946 --> 00:35:16.026 A:middle
So for that reason, I'm prompted

00:35:16.026 --> 00:35:17.186 A:middle
to make sure that I'm ready to

00:35:17.186 --> 00:35:18.186 A:middle
download this now.

00:35:19.256 --> 00:35:20.796 A:middle
And I am, so let's go ahead and

00:35:20.796 --> 00:35:21.366 A:middle
download.

00:35:21.886 --> 00:35:24.816 A:middle
Now that I have my private key

00:35:24.816 --> 00:35:26.806 A:middle
in my Downloads folder, I can

00:35:26.806 --> 00:35:28.586 A:middle
pull up that script we saw

00:35:28.586 --> 00:35:29.046 A:middle
earlier.

00:35:29.046 --> 00:35:31.796 A:middle
And I'll need to copy over my

00:35:31.796 --> 00:35:31.976 A:middle
ISSUER ID.

00:35:37.616 --> 00:35:39.126 A:middle
That's the one that's shared

00:35:39.126 --> 00:35:40.416 A:middle
across your API Keys.

00:35:41.026 --> 00:35:43.426 A:middle
And I'll also need to copy that

00:35:43.426 --> 00:35:44.576 A:middle
ID of the private key I just

00:35:44.576 --> 00:35:44.976 A:middle
downloaded.

00:35:49.516 --> 00:35:51.326 A:middle
And once I have those IDs in

00:35:51.326 --> 00:35:53.136 A:middle
place, my private key will be

00:35:53.136 --> 00:35:54.676 A:middle
loaded in from my Downloads

00:35:54.726 --> 00:35:55.136 A:middle
folder.

00:35:55.136 --> 00:35:57.106 A:middle
And I'll generate a new token.

00:35:58.426 --> 00:36:02.456 A:middle
So if we pull up the terminal, I

00:35:58.426 --> 00:36:02.456 A:middle
So if we pull up the terminal, I

00:36:02.456 --> 00:36:06.226 A:middle
can curl that apps endpoint.

00:36:06.226 --> 00:36:08.566 A:middle
And as we expected, we get that

00:36:08.566 --> 00:36:09.576 A:middle
401 response.

00:36:09.576 --> 00:36:10.976 A:middle
So let's call my script.

00:36:17.816 --> 00:36:19.536 A:middle
And I get a new token.

00:36:20.126 --> 00:36:22.496 A:middle
So I can take that token and add

00:36:22.496 --> 00:36:23.966 A:middle
it to my request

00:36:28.996 --> 00:36:30.366 A:middle
by putting it in an

00:36:30.926 --> 00:36:31.876 A:middle
authorization header.

00:36:31.876 --> 00:36:32.976 A:middle
Make sure I spelled that right.

00:36:38.036 --> 00:36:39.626 A:middle
And I get back the list of my

00:36:39.876 --> 00:36:39.976 A:middle
apps.

00:36:40.516 --> 00:36:45.316 A:middle
[ Applause ]

00:36:45.816 --> 00:36:47.896 A:middle
So as you can see, with just a

00:36:47.896 --> 00:36:50.646 A:middle
few easy steps I was able to get

00:36:50.646 --> 00:36:52.366 A:middle
access to the API and start

00:36:52.366 --> 00:36:53.376 A:middle
getting back real data.

00:36:53.376 --> 00:36:54.466 A:middle
Thank you.

00:36:54.466 --> 00:36:54.966 A:middle
Back to Geoff.

00:36:55.516 --> 00:37:01.796 A:middle
[ Applause ]

00:36:55.516 --> 00:37:01.796 A:middle
[ Applause ]

00:37:02.296 --> 00:37:02.896 A:middle
&gt;&gt; Alright.

00:37:02.896 --> 00:37:03.476 A:middle
Thanks, Julie.

00:37:04.626 --> 00:37:05.976 A:middle
Pretty cool, huh?

00:37:06.466 --> 00:37:07.856 A:middle
So that's access and

00:37:07.856 --> 00:37:08.666 A:middle
authentication.

00:37:08.976 --> 00:37:09.976 A:middle
And now in the few minutes that

00:37:09.976 --> 00:37:11.046 A:middle
we have remaining, I want to

00:37:11.046 --> 00:37:12.446 A:middle
talk about some best practices

00:37:12.446 --> 00:37:13.346 A:middle
when using the API.

00:37:14.396 --> 00:37:15.576 A:middle
We're going to start with those

00:37:15.576 --> 00:37:15.956 A:middle
keys.

00:37:16.146 --> 00:37:17.716 A:middle
Now as Julie said, those keys

00:37:17.716 --> 00:37:19.496 A:middle
belong to you and it's your job

00:37:19.496 --> 00:37:20.266 A:middle
to protect them.

00:37:20.536 --> 00:37:22.176 A:middle
Anybody who has the keys can

00:37:22.176 --> 00:37:23.066 A:middle
access your data.

00:37:23.496 --> 00:37:24.806 A:middle
So ideally, you're going to put

00:37:24.806 --> 00:37:26.116 A:middle
those keys in some kind of a

00:37:26.116 --> 00:37:27.966 A:middle
secure key store and your code

00:37:27.966 --> 00:37:29.676 A:middle
will check them out, use them in

00:37:29.676 --> 00:37:31.126 A:middle
memory, and never store them

00:37:31.126 --> 00:37:32.696 A:middle
anywhere, like in a database or

00:37:32.696 --> 00:37:33.306 A:middle
on disc.

00:37:33.656 --> 00:37:34.946 A:middle
If you do have to store the keys

00:37:34.946 --> 00:37:36.536 A:middle
on disc, make sure you check

00:37:36.576 --> 00:37:37.706 A:middle
your file system permissions

00:37:37.706 --> 00:37:38.536 A:middle
very carefully.

00:37:39.006 --> 00:37:40.156 A:middle
And, of course, if you have any

00:37:40.156 --> 00:37:41.506 A:middle
reason to think a key has been

00:37:41.506 --> 00:37:42.626 A:middle
compromised in some way,

00:37:42.936 --> 00:37:44.336 A:middle
immediately log in to App Store

00:37:44.336 --> 00:37:47.256 A:middle
Connect and revoke that key.

00:37:47.436 --> 00:37:48.306 A:middle
I also want to talk about the

00:37:48.386 --> 00:37:50.586 A:middle
tokens that you create from your

00:37:50.586 --> 00:37:51.006 A:middle
keys.

00:37:51.006 --> 00:37:51.986 A:middle
Now there's no reason that you

00:37:51.986 --> 00:37:53.186 A:middle
have to send a different token

00:37:53.186 --> 00:37:54.206 A:middle
with every request.

00:37:54.426 --> 00:37:55.186 A:middle
In fact, you'll get better

00:37:55.186 --> 00:37:56.956 A:middle
performance in your code and on

00:37:56.956 --> 00:37:58.676 A:middle
our end if you reuse those

00:37:58.676 --> 00:38:00.136 A:middle
tokens over and over again.

00:37:58.676 --> 00:38:00.136 A:middle
tokens over and over again.

00:38:00.516 --> 00:38:01.966 A:middle
And usually this is really easy,

00:38:02.016 --> 00:38:02.236 A:middle
right.

00:38:02.296 --> 00:38:03.566 A:middle
You just generate a token at the

00:38:03.566 --> 00:38:05.266 A:middle
top of the script, send it with

00:38:05.266 --> 00:38:06.226 A:middle
every request until you're

00:38:06.226 --> 00:38:06.686 A:middle
finished.

00:38:07.266 --> 00:38:08.356 A:middle
And we let you control the

00:38:08.356 --> 00:38:09.776 A:middle
expiration time because you're

00:38:09.776 --> 00:38:11.776 A:middle
the best person to know how long

00:38:11.776 --> 00:38:13.176 A:middle
it should last, long enough to

00:38:13.176 --> 00:38:14.666 A:middle
complete that process and not

00:38:14.716 --> 00:38:16.176 A:middle
significantly longer than it

00:38:16.176 --> 00:38:17.666 A:middle
needs to be.

00:38:17.906 --> 00:38:18.716 A:middle
Of course, you might have

00:38:18.786 --> 00:38:20.096 A:middle
processes that run for longer

00:38:20.096 --> 00:38:21.066 A:middle
than 20 minutes or run

00:38:21.066 --> 00:38:22.516 A:middle
continuously and when that's the

00:38:22.516 --> 00:38:23.506 A:middle
case you'll want to structure

00:38:23.506 --> 00:38:24.586 A:middle
your code a little differently.

00:38:25.236 --> 00:38:26.096 A:middle
Maybe you'll generate a

00:38:26.096 --> 00:38:28.046 A:middle
20-minute token and use it as

00:38:28.086 --> 00:38:29.776 A:middle
needed and then throw it away

00:38:29.776 --> 00:38:31.096 A:middle
and issue a new one before the

00:38:31.096 --> 00:38:32.816 A:middle
old one expires, say every 18

00:38:32.816 --> 00:38:33.216 A:middle
minutes.

00:38:33.576 --> 00:38:34.646 A:middle
That way, you're getting maximum

00:38:34.646 --> 00:38:35.876 A:middle
token reuse for the best

00:38:35.876 --> 00:38:37.166 A:middle
performance and you're never

00:38:37.166 --> 00:38:38.556 A:middle
sending expired tokens.

00:38:38.556 --> 00:38:41.446 A:middle
The next think I want to talk

00:38:41.446 --> 00:38:42.416 A:middle
about is the links that we

00:38:42.416 --> 00:38:43.646 A:middle
include in the responses.

00:38:44.206 --> 00:38:45.316 A:middle
Now we've talked about these

00:38:45.356 --> 00:38:47.056 A:middle
today as a sort of nice form of

00:38:47.056 --> 00:38:48.566 A:middle
self-documentation, a way for

00:38:48.566 --> 00:38:50.126 A:middle
you to look at the data and see

00:38:50.126 --> 00:38:51.366 A:middle
what else is available, but

00:38:51.366 --> 00:38:52.306 A:middle
that's not the only reason

00:38:52.306 --> 00:38:52.746 A:middle
they're there.

00:38:52.976 --> 00:38:54.076 A:middle
They're actually intended to be

00:38:54.076 --> 00:38:55.676 A:middle
used by your code.

00:38:56.346 --> 00:38:57.486 A:middle
When you're doing a multistep

00:38:57.536 --> 00:38:59.856 A:middle
process, whenever possible take

00:38:59.856 --> 00:39:01.196 A:middle
the link we gave you out of the

00:38:59.856 --> 00:39:01.196 A:middle
the link we gave you out of the

00:39:01.196 --> 00:39:03.076 A:middle
response and use it for the next

00:39:03.076 --> 00:39:03.886 A:middle
part of the process.

00:39:04.286 --> 00:39:05.546 A:middle
This will help you in two ways.

00:39:05.686 --> 00:39:07.336 A:middle
One, it makes your code more

00:39:07.336 --> 00:39:08.726 A:middle
generically applicable to

00:39:08.726 --> 00:39:09.856 A:middle
different parts of the API.

00:39:09.856 --> 00:39:11.946 A:middle
And two, when that inevitable v2

00:39:11.946 --> 00:39:13.816 A:middle
API comes along, this will

00:39:13.816 --> 00:39:14.966 A:middle
reduce the amount of work you

00:39:14.966 --> 00:39:16.516 A:middle
have to do to adjust to the

00:39:16.516 --> 00:39:17.036 A:middle
changes.

00:39:18.406 --> 00:39:19.516 A:middle
And finally, I want to talk

00:39:19.516 --> 00:39:20.606 A:middle
about the documentation.

00:39:22.046 --> 00:39:23.096 A:middle
We've talked about the

00:39:23.096 --> 00:39:24.786 A:middle
consistency of this API today

00:39:24.786 --> 00:39:26.016 A:middle
and we really focused on that.

00:39:26.016 --> 00:39:27.486 A:middle
And so any time a resource can

00:39:27.486 --> 00:39:28.966 A:middle
do something, it will do it in

00:39:28.966 --> 00:39:30.426 A:middle
the same way as all the other

00:39:30.426 --> 00:39:32.216 A:middle
resources but of course not

00:39:32.216 --> 00:39:33.436 A:middle
every resource can do

00:39:33.436 --> 00:39:34.226 A:middle
everything.

00:39:34.596 --> 00:39:35.566 A:middle
You already saw an example of

00:39:35.566 --> 00:39:36.396 A:middle
this with users.

00:39:36.396 --> 00:39:37.716 A:middle
We had to create an invitation.

00:39:37.806 --> 00:39:39.426 A:middle
There's no API to create a user.

00:39:39.856 --> 00:39:41.066 A:middle
So the documentation is how you

00:39:41.066 --> 00:39:41.736 A:middle
figure this out.

00:39:41.906 --> 00:39:43.496 A:middle
It tells you what the resource

00:39:43.496 --> 00:39:45.046 A:middle
can do, what operations are

00:39:45.046 --> 00:39:46.346 A:middle
available, what parameters it

00:39:46.346 --> 00:39:47.636 A:middle
supports, and so forth.

00:39:48.176 --> 00:39:50.376 A:middle
And that's the App Store Connect

00:39:50.376 --> 00:39:50.686 A:middle
API.

00:39:51.326 --> 00:39:52.116 A:middle
It's a consistent

00:39:52.176 --> 00:39:53.536 A:middle
standards-based REST API.

00:39:54.056 --> 00:39:55.146 A:middle
We're really excited about it.

00:39:55.146 --> 00:39:57.256 A:middle
And one thing that we love about

00:39:57.256 --> 00:39:59.146 A:middle
this API is that we designed it

00:39:59.336 --> 00:40:00.616 A:middle
to be really flexible so that

00:39:59.336 --> 00:40:00.616 A:middle
to be really flexible so that

00:40:00.616 --> 00:40:01.946 A:middle
you can take App Store Connect

00:40:02.376 --> 00:40:03.456 A:middle
and you can put it into your

00:40:03.456 --> 00:40:05.096 A:middle
workflow into the way that you

00:40:05.096 --> 00:40:06.736 A:middle
work and using the tools that

00:40:06.736 --> 00:40:07.346 A:middle
you like best.

00:40:07.916 --> 00:40:08.986 A:middle
We're really excited for you to

00:40:08.986 --> 00:40:09.706 A:middle
start doing that.

00:40:10.156 --> 00:40:11.376 A:middle
It'll be available to all app

00:40:11.376 --> 00:40:12.496 A:middle
developers this summer.

00:40:13.716 --> 00:40:14.456 A:middle
And I know you guys have

00:40:14.456 --> 00:40:15.916 A:middle
questions, so come and see us in

00:40:15.916 --> 00:40:16.846 A:middle
the App Store Connect Lab.

00:40:16.846 --> 00:40:17.776 A:middle
It's actually happening right

00:40:17.776 --> 00:40:18.046 A:middle
now.

00:40:18.376 --> 00:40:19.296 A:middle
So we'll head down there as soon

00:40:19.296 --> 00:40:20.676 A:middle
as I stop talking and we can

00:40:20.676 --> 00:40:21.596 A:middle
answer those questions.

00:40:21.636 --> 00:40:23.066 A:middle
We have a lab tomorrow as well

00:40:23.066 --> 00:40:25.026 A:middle
at 1:00 p.m. and also check out

00:40:25.056 --> 00:40:26.056 A:middle
the What's New in App Store

00:40:26.056 --> 00:40:27.146 A:middle
Connect Session if you missed it

00:40:27.146 --> 00:40:27.606 A:middle
yesterday.

00:40:27.606 --> 00:40:29.336 A:middle
It had some more about the API

00:40:29.336 --> 00:40:30.926 A:middle
and about App Store Connect

00:40:30.926 --> 00:40:31.386 A:middle
itself.

00:40:31.916 --> 00:40:33.086 A:middle
And bookmark this link because

00:40:33.086 --> 00:40:34.266 A:middle
we'll post the documentation

00:40:34.266 --> 00:40:35.356 A:middle
there just as soon as it's

00:40:35.356 --> 00:40:35.826 A:middle
available.

00:40:35.826 --> 00:40:36.386 A:middle
Thank you so much.

00:40:36.386 --> 00:40:36.926 A:middle
We'll see you in the labs.

00:40:37.516 --> 00:40:40.500 A:middle
[ Applause ]
