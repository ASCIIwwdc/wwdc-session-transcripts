WEBVTT

00:00:07.516 --> 00:00:15.500 A:middle
[ Music ]

00:00:19.516 --> 00:00:25.176 A:middle
[ Applause ]

00:00:25.676 --> 00:00:26.186 A:middle
&gt;&gt; Good afternoon.

00:00:27.166 --> 00:00:28.956 A:middle
Welcome. My name is Ken Ferry.

00:00:29.246 --> 00:00:30.736 A:middle
Today Kasia Wawer and I are

00:00:30.736 --> 00:00:31.536 A:middle
going to talk to you about

00:00:31.536 --> 00:00:32.686 A:middle
performance in Auto Layout.

00:00:33.666 --> 00:00:35.466 A:middle
Last time I was up here talking

00:00:35.466 --> 00:00:37.446 A:middle
about Auto Layout was in 2011

00:00:38.056 --> 00:00:39.356 A:middle
when we first introduced it.

00:00:39.726 --> 00:00:42.216 A:middle
So it's really great to be back

00:00:42.316 --> 00:00:43.206 A:middle
up here chatting with you all

00:00:43.206 --> 00:00:43.446 A:middle
today.

00:00:44.956 --> 00:00:48.896 A:middle
OK, so Auto Layout.

00:00:49.796 --> 00:00:51.366 A:middle
This is how we position content

00:00:51.576 --> 00:00:52.916 A:middle
on iOS on the Mac.

00:00:53.486 --> 00:00:55.096 A:middle
The main object involved as we

00:00:55.096 --> 00:00:57.456 A:middle
know are views and constraints,

00:00:58.246 --> 00:00:59.096 A:middle
constraints giving the

00:00:59.096 --> 00:01:00.406 A:middle
relationships between views.

00:00:59.096 --> 00:01:00.406 A:middle
relationships between views.

00:01:01.206 --> 00:01:02.826 A:middle
When it comes to performance, I

00:01:03.126 --> 00:01:04.756 A:middle
think the challenge here is that

00:01:04.756 --> 00:01:06.146 A:middle
if all you've said is the

00:01:06.146 --> 00:01:07.276 A:middle
distance between these two

00:01:07.416 --> 00:01:09.286 A:middle
buttons should be 20, it can be

00:01:09.286 --> 00:01:10.446 A:middle
hard to understand the

00:01:10.446 --> 00:01:12.606 A:middle
step-by-step process that the

00:01:12.606 --> 00:01:13.936 A:middle
machine goes through to do that

00:01:14.226 --> 00:01:15.466 A:middle
and that means it can be hard to

00:01:15.466 --> 00:01:17.726 A:middle
understand the expectations

00:01:17.726 --> 00:01:18.736 A:middle
around performance and

00:01:18.736 --> 00:01:19.826 A:middle
understand what's fast and

00:01:19.826 --> 00:01:21.296 A:middle
what's not and generally how

00:01:21.296 --> 00:01:22.006 A:middle
things are working.

00:01:22.986 --> 00:01:24.886 A:middle
So that's our goal for this

00:01:24.886 --> 00:01:25.156 A:middle
talk.

00:01:25.456 --> 00:01:27.386 A:middle
It's to really understand that,

00:01:27.386 --> 00:01:28.926 A:middle
to have a good feel for how

00:01:28.926 --> 00:01:29.556 A:middle
things are going to work.

00:01:29.896 --> 00:01:31.146 A:middle
So we're going to start things

00:01:31.146 --> 00:01:32.696 A:middle
off by first showing some of the

00:01:32.696 --> 00:01:33.826 A:middle
work that we've been doing in

00:01:33.826 --> 00:01:35.556 A:middle
this release for iOS 12 around

00:01:35.556 --> 00:01:36.096 A:middle
performance.

00:01:36.436 --> 00:01:37.256 A:middle
We've been doing a lot of work,

00:01:37.706 --> 00:01:40.286 A:middle
that's we get to give this talk.

00:01:41.206 --> 00:01:44.646 A:middle
When that's done we're going to

00:01:44.646 --> 00:01:46.166 A:middle
move on to trying to build that

00:01:46.166 --> 00:01:47.636 A:middle
step-by-step understanding that

00:01:47.636 --> 00:01:48.376 A:middle
I was talking about.

00:01:48.686 --> 00:01:50.506 A:middle
So we have good intuition and

00:01:50.506 --> 00:01:51.576 A:middle
good expectations around

00:01:51.576 --> 00:01:52.006 A:middle
performance.

00:01:52.456 --> 00:01:53.626 A:middle
To do that we're going to do

00:01:53.626 --> 00:01:55.496 A:middle
something very unusual for us,

00:01:55.786 --> 00:01:57.076 A:middle
which is to go into internals.

00:01:57.746 --> 00:01:58.756 A:middle
So enjoy that please.

00:02:02.546 --> 00:02:04.756 A:middle
Last, if you only ever rely on

00:02:04.756 --> 00:02:06.316 A:middle
our intuition for performance,

00:02:06.546 --> 00:02:07.706 A:middle
it's not going to work out very

00:02:07.706 --> 00:02:07.896 A:middle
well.

00:02:08.286 --> 00:02:10.776 A:middle
So we will then look -- Kasia

00:02:10.776 --> 00:02:12.376 A:middle
will take over and we'll analyze

00:02:12.506 --> 00:02:14.686 A:middle
code and we'll sort of show how

00:02:14.686 --> 00:02:16.696 A:middle
to merge your intuition with,

00:02:16.916 --> 00:02:17.736 A:middle
you know, practice.

00:02:18.846 --> 00:02:20.126 A:middle
But let's get to it.

00:02:20.436 --> 00:02:22.226 A:middle
So first as is traditional for

00:02:22.226 --> 00:02:23.326 A:middle
an Apple presentation, we're

00:02:23.326 --> 00:02:23.916 A:middle
going to look at a bunch of

00:02:23.916 --> 00:02:24.676 A:middle
numbers and brag.

00:02:25.516 --> 00:02:28.796 A:middle
[ Laughter ]

00:02:29.296 --> 00:02:31.116 A:middle
Here we have, what we're looking

00:02:31.116 --> 00:02:32.806 A:middle
at here is a benchmark.

00:02:33.416 --> 00:02:35.456 A:middle
So the way we approached this

00:02:35.456 --> 00:02:37.536 A:middle
work is we went out and looked a

00:02:37.536 --> 00:02:38.816 A:middle
bunch of third party apps as

00:02:38.816 --> 00:02:40.406 A:middle
well as our own apps and we

00:02:40.406 --> 00:02:41.906 A:middle
tried to isolate what we saw

00:02:41.906 --> 00:02:44.646 A:middle
happening into test cases that

00:02:44.646 --> 00:02:45.476 A:middle
we could then benchmark.

00:02:45.996 --> 00:02:47.056 A:middle
So this one here, what we're

00:02:47.056 --> 00:02:49.006 A:middle
looking at, is UICollectionView

00:02:49.006 --> 00:02:51.486 A:middle
with self-sizing cells and on

00:02:51.706 --> 00:02:53.236 A:middle
the whichever side looks bad is

00:02:53.436 --> 00:02:59.136 A:middle
iOS 11, which hopefully looked

00:02:59.306 --> 00:03:00.086 A:middle
janky and bad.

00:02:59.306 --> 00:03:00.086 A:middle
janky and bad.

00:03:00.266 --> 00:03:02.946 A:middle
And on iOS 12 it's perfect.

00:03:03.216 --> 00:03:04.116 A:middle
It's hitting full frame rate.

00:03:05.096 --> 00:03:07.086 A:middle
So that's just one of the cases

00:03:07.086 --> 00:03:07.586 A:middle
we looked at.

00:03:07.896 --> 00:03:10.296 A:middle
Here are some more, just another

00:03:10.296 --> 00:03:10.846 A:middle
sampling.

00:03:10.846 --> 00:03:11.806 A:middle
We have a lot.

00:03:12.526 --> 00:03:14.186 A:middle
These ones are all time.

00:03:14.766 --> 00:03:16.446 A:middle
So what you're looking at is

00:03:16.446 --> 00:03:18.176 A:middle
that the gray bars are iOS 11.

00:03:18.346 --> 00:03:19.666 A:middle
How much time it took on iOS 11

00:03:20.016 --> 00:03:21.506 A:middle
and the blue are iOS12.

00:03:22.936 --> 00:03:24.236 A:middle
So what you take from this is

00:03:24.236 --> 00:03:25.516 A:middle
that we found a lot of places

00:03:25.516 --> 00:03:26.496 A:middle
where we could make things

00:03:26.706 --> 00:03:27.476 A:middle
really a lot better.

00:03:28.076 --> 00:03:31.306 A:middle
And that will only improve your

00:03:31.306 --> 00:03:31.546 A:middle
apps.

00:03:31.676 --> 00:03:32.646 A:middle
That will make things quite a

00:03:32.856 --> 00:03:35.616 A:middle
bit better for you I hope.

00:03:35.616 --> 00:03:36.896 A:middle
This is going all the way up and

00:03:36.896 --> 00:03:37.466 A:middle
down the stack.

00:03:37.766 --> 00:03:39.336 A:middle
So some of it is in the real

00:03:39.336 --> 00:03:41.156 A:middle
guts that affect just absolutely

00:03:41.156 --> 00:03:41.676 A:middle
everything.

00:03:42.166 --> 00:03:44.106 A:middle
Some of it's moving into UI

00:03:44.106 --> 00:03:44.366 A:middle
kits.

00:03:44.366 --> 00:03:45.486 A:middle
Some of it's up in the client

00:03:45.486 --> 00:03:47.846 A:middle
layer so for in how people use

00:03:47.846 --> 00:03:48.326 A:middle
Auto Layout.

00:03:48.716 --> 00:03:49.766 A:middle
So if you look at for example

00:03:49.766 --> 00:03:51.246 A:middle
that UICollectionView benchmark

00:03:51.606 --> 00:03:52.776 A:middle
that we were looking at that's

00:03:52.776 --> 00:03:53.536 A:middle
all of those.

00:03:54.016 --> 00:03:55.846 A:middle
It does include stuff that's in

00:03:55.846 --> 00:03:57.386 A:middle
the real guts but it also

00:03:57.446 --> 00:03:58.856 A:middle
includes a lot of really

00:03:58.856 --> 00:04:00.236 A:middle
important changes in just how

00:03:58.856 --> 00:04:00.236 A:middle
important changes in just how

00:04:00.236 --> 00:04:01.876 A:middle
UICollectionView uses Auto

00:04:01.876 --> 00:04:03.576 A:middle
Layout and is more performance

00:04:04.296 --> 00:04:04.866 A:middle
due to it.

00:04:05.376 --> 00:04:07.186 A:middle
Which is a good segue to the

00:04:07.186 --> 00:04:09.186 A:middle
rest of the talk, which is how

00:04:09.256 --> 00:04:10.116 A:middle
you can do that too.

00:04:10.676 --> 00:04:11.786 A:middle
So how to use it properly.

00:04:12.606 --> 00:04:14.286 A:middle
When we were going through these

00:04:15.026 --> 00:04:16.505 A:middle
I think a lot of the time the

00:04:16.505 --> 00:04:17.956 A:middle
reason why we were able to make

00:04:17.956 --> 00:04:19.375 A:middle
all these improvements is that

00:04:19.375 --> 00:04:21.786 A:middle
we have a good mental model for

00:04:21.786 --> 00:04:24.336 A:middle
how things are put together and

00:04:24.366 --> 00:04:26.226 A:middle
how it performs, how it works.

00:04:27.366 --> 00:04:29.156 A:middle
We want to help you develop that

00:04:29.156 --> 00:04:29.756 A:middle
model as well.

00:04:30.286 --> 00:04:31.876 A:middle
So to frame this we're going to

00:04:31.876 --> 00:04:34.126 A:middle
go through an example case, some

00:04:34.126 --> 00:04:36.726 A:middle
client code, that is not -- that

00:04:36.726 --> 00:04:38.036 A:middle
has some issues and we're going

00:04:38.036 --> 00:04:38.676 A:middle
to discuss why.

00:04:39.266 --> 00:04:40.796 A:middle
So your code may or may not have

00:04:40.796 --> 00:04:42.166 A:middle
this particular issue, but we

00:04:42.166 --> 00:04:43.226 A:middle
did choose what we thought was

00:04:43.226 --> 00:04:44.636 A:middle
the most common thing that we

00:04:44.636 --> 00:04:45.816 A:middle
saw when we went through all

00:04:46.056 --> 00:04:47.496 A:middle
these client apps.

00:04:48.096 --> 00:04:49.146 A:middle
But even if you don't have this

00:04:49.146 --> 00:04:50.876 A:middle
particular issue, the work we do

00:04:50.876 --> 00:04:52.476 A:middle
to go through what's happening

00:04:52.706 --> 00:04:53.596 A:middle
should be meaningful to

00:04:53.596 --> 00:04:55.326 A:middle
everybody and probably new to

00:04:55.326 --> 00:04:56.026 A:middle
almost everybody.

00:04:56.876 --> 00:04:58.426 A:middle
So let's do it.

00:04:59.656 --> 00:05:00.756 A:middle
This is the case we're going to

00:04:59.656 --> 00:05:00.756 A:middle
This is the case we're going to

00:05:00.756 --> 00:05:01.436 A:middle
go through so we're going to

00:05:01.436 --> 00:05:04.006 A:middle
produce this layout, obviously

00:05:04.006 --> 00:05:04.516 A:middle
very simple.

00:05:05.106 --> 00:05:06.976 A:middle
Oftentimes I think you would

00:05:06.976 --> 00:05:08.046 A:middle
build this in interface builder.

00:05:08.806 --> 00:05:09.756 A:middle
That's a great idea.

00:05:09.876 --> 00:05:11.716 A:middle
It is such a good idea that it

00:05:11.716 --> 00:05:12.786 A:middle
would completely prevent the

00:05:12.786 --> 00:05:13.896 A:middle
performance issues that we'd

00:05:13.896 --> 00:05:15.796 A:middle
like to go through.

00:05:16.076 --> 00:05:18.976 A:middle
So let's say we didn't do that.

00:05:19.406 --> 00:05:21.006 A:middle
Let's say that we built it like

00:05:21.766 --> 00:05:21.886 A:middle
this.

00:05:24.066 --> 00:05:25.216 A:middle
First let's just walk through --

00:05:25.216 --> 00:05:26.406 A:middle
before we try to analyze it,

00:05:26.406 --> 00:05:27.236 A:middle
let's walk through what this

00:05:27.236 --> 00:05:27.796 A:middle
code is doing.

00:05:28.826 --> 00:05:31.316 A:middle
First, we are overriding the

00:05:31.316 --> 00:05:33.226 A:middle
UIView method updateConstraints,

00:05:33.866 --> 00:05:34.976 A:middle
whatever that does.

00:05:35.366 --> 00:05:37.426 A:middle
So we'll talk about it.

00:05:37.916 --> 00:05:41.736 A:middle
Next, we have an Ivar called

00:05:41.736 --> 00:05:42.476 A:middle
myConstraints.

00:05:42.716 --> 00:05:45.446 A:middle
And we are taking everything in

00:05:45.446 --> 00:05:46.436 A:middle
that variable and we are

00:05:46.436 --> 00:05:47.336 A:middle
deactivating all those

00:05:47.336 --> 00:05:47.836 A:middle
constraints.

00:05:48.586 --> 00:05:49.516 A:middle
We are then creating

00:05:49.516 --> 00:05:51.176 A:middle
constraints, which implement the

00:05:51.176 --> 00:05:52.216 A:middle
layout that we were just looking

00:05:52.216 --> 00:05:52.416 A:middle
at.

00:05:53.006 --> 00:05:54.106 A:middle
That's fairly straightforward.

00:05:54.106 --> 00:05:55.066 A:middle
It's using visual format

00:05:55.066 --> 00:05:55.546 A:middle
language here.

00:05:56.276 --> 00:05:57.276 A:middle
We're then activating those

00:05:57.276 --> 00:05:58.776 A:middle
constraints, installing them,

00:05:59.236 --> 00:06:00.296 A:middle
and last we're calling

00:05:59.236 --> 00:06:00.296 A:middle
and last we're calling

00:06:00.296 --> 00:06:02.356 A:middle
super.updateConstraints was an

00:06:02.356 --> 00:06:04.256 A:middle
important thing to do because

00:06:04.586 --> 00:06:06.556 A:middle
the UIView level implementation

00:06:06.556 --> 00:06:08.976 A:middle
that this method does do work.

00:06:09.166 --> 00:06:10.966 A:middle
OK, that's the basic structure

00:06:11.436 --> 00:06:14.256 A:middle
of what it's doing and it does

00:06:14.256 --> 00:06:15.306 A:middle
work, it's functions.

00:06:15.906 --> 00:06:18.676 A:middle
But let's talk about what it's

00:06:18.676 --> 00:06:20.136 A:middle
doing more concretely now so

00:06:20.136 --> 00:06:20.806 A:middle
that we can understand the

00:06:20.806 --> 00:06:21.276 A:middle
performance.

00:06:22.016 --> 00:06:23.116 A:middle
So the first thing to understand

00:06:23.116 --> 00:06:24.736 A:middle
is what exactly is

00:06:24.856 --> 00:06:26.336 A:middle
updateConstraints, this method

00:06:26.336 --> 00:06:26.906 A:middle
we're overriding.

00:06:28.316 --> 00:06:30.166 A:middle
Well, it's one component of the

00:06:30.166 --> 00:06:30.646 A:middle
Render Loop.

00:06:31.636 --> 00:06:33.266 A:middle
The Render Loop is the process

00:06:33.506 --> 00:06:35.446 A:middle
that runs potentially at 120

00:06:35.446 --> 00:06:36.476 A:middle
times every second.

00:06:37.216 --> 00:06:38.976 A:middle
That makes sure that all the

00:06:38.976 --> 00:06:40.346 A:middle
content is ready to go for each

00:06:40.346 --> 00:06:40.656 A:middle
frame.

00:06:41.656 --> 00:06:43.786 A:middle
OK, so it consists of three

00:06:43.786 --> 00:06:45.066 A:middle
phases -- Update Constraints,

00:06:45.066 --> 00:06:46.386 A:middle
Layout, and Display.

00:06:47.096 --> 00:06:49.246 A:middle
First every view that needs it

00:06:49.246 --> 00:06:50.916 A:middle
will receive updateConstraints.

00:06:51.306 --> 00:06:53.306 A:middle
And that runs from the leaf most

00:06:53.306 --> 00:06:55.096 A:middle
views up to the view hierarchy

00:06:55.096 --> 00:06:55.786 A:middle
towards the window.

00:06:56.656 --> 00:06:58.676 A:middle
Next, every view receives layout

00:06:58.676 --> 00:06:59.086 A:middle
sub views.

00:06:59.366 --> 00:07:00.616 A:middle
This runs the opposite direction

00:06:59.366 --> 00:07:00.616 A:middle
This runs the opposite direction

00:07:00.616 --> 00:07:01.686 A:middle
starting from the window going

00:07:01.686 --> 00:07:02.516 A:middle
down towards the leaves.

00:07:03.176 --> 00:07:05.886 A:middle
Last, every view gets draw if it

00:07:05.886 --> 00:07:07.856 A:middle
needs it, that kind of thing.

00:07:08.636 --> 00:07:11.166 A:middle
OK, what are these for?

00:07:11.166 --> 00:07:12.156 A:middle
Why do they exist?

00:07:13.306 --> 00:07:14.736 A:middle
Well, they all have the exact

00:07:14.736 --> 00:07:17.016 A:middle
same purpose and they have exact

00:07:17.056 --> 00:07:18.226 A:middle
parallel sets of methods.

00:07:18.646 --> 00:07:20.586 A:middle
And that purpose is to avoid

00:07:20.846 --> 00:07:23.416 A:middle
wasted work, which I can explain

00:07:23.416 --> 00:07:23.966 A:middle
by example.

00:07:24.856 --> 00:07:28.516 A:middle
So a label, a UI label needs to

00:07:28.516 --> 00:07:30.346 A:middle
have constraints that describe

00:07:30.576 --> 00:07:33.466 A:middle
the size of its text, OK?

00:07:34.056 --> 00:07:34.986 A:middle
But there are many properties

00:07:34.986 --> 00:07:36.126 A:middle
that contribute to that size.

00:07:36.406 --> 00:07:37.426 A:middle
There's the text property

00:07:37.426 --> 00:07:39.936 A:middle
itself, there's the font, and

00:07:39.936 --> 00:07:41.356 A:middle
the text size, etcetera.

00:07:41.936 --> 00:07:44.196 A:middle
One way to do this would be that

00:07:44.196 --> 00:07:44.946 A:middle
every time one of those

00:07:44.946 --> 00:07:47.076 A:middle
properties changes go re-measure

00:07:47.076 --> 00:07:47.576 A:middle
your text.

00:07:48.556 --> 00:07:51.006 A:middle
However, that would often be

00:07:51.006 --> 00:07:52.096 A:middle
pretty inefficient because you

00:07:52.096 --> 00:07:53.206 A:middle
usually change a bunch of these

00:07:53.206 --> 00:07:53.766 A:middle
right in a row.

00:07:54.206 --> 00:07:55.076 A:middle
When you're first setting up a

00:07:55.076 --> 00:07:56.176 A:middle
label, you're probably going to

00:07:56.176 --> 00:07:57.306 A:middle
call a bunch of these property

00:07:57.306 --> 00:07:58.506 A:middle
setters and if you're

00:07:58.506 --> 00:07:59.976 A:middle
re-measuring text on each one,

00:08:00.506 --> 00:08:01.536 A:middle
all the intermediate ones are

00:08:01.536 --> 00:08:02.856 A:middle
wasted, you really just want to

00:08:02.856 --> 00:08:03.516 A:middle
measure at the end.

00:08:03.816 --> 00:08:04.896 A:middle
And that's what the Render Loop

00:08:04.896 --> 00:08:05.316 A:middle
gives you.

00:08:05.876 --> 00:08:07.656 A:middle
Because what you can do instead

00:08:08.086 --> 00:08:10.066 A:middle
is that inside a set font you

00:08:10.066 --> 00:08:10.646 A:middle
can just call

00:08:10.646 --> 00:08:13.206 A:middle
setNeedsUpdateConstraints and

00:08:13.336 --> 00:08:14.986 A:middle
then you're guaranteed to get

00:08:15.176 --> 00:08:17.366 A:middle
update constraints at the end

00:08:17.436 --> 00:08:18.466 A:middle
before the frame goes to the

00:08:18.466 --> 00:08:18.826 A:middle
screen.

00:08:19.816 --> 00:08:20.456 A:middle
And that's what it's for.

00:08:21.486 --> 00:08:22.876 A:middle
So the couple things to

00:08:22.876 --> 00:08:24.386 A:middle
understand from this before we

00:08:24.386 --> 00:08:26.176 A:middle
move on is number one it runs a

00:08:26.176 --> 00:08:27.626 A:middle
lot, 120 frames a second.

00:08:28.406 --> 00:08:30.346 A:middle
Number two they're parallel.

00:08:30.686 --> 00:08:31.906 A:middle
So you can use that for

00:08:31.906 --> 00:08:32.696 A:middle
intuition as well.

00:08:32.726 --> 00:08:33.866 A:middle
If you feel like you understand

00:08:33.866 --> 00:08:35.035 A:middle
the layout pass or have some

00:08:35.035 --> 00:08:36.956 A:middle
feel for that, same deal when

00:08:36.956 --> 00:08:37.506 A:middle
you're thinking about

00:08:37.506 --> 00:08:38.525 A:middle
UpdateConstraints or you're

00:08:38.525 --> 00:08:39.256 A:middle
thinking about display.

00:08:40.155 --> 00:08:41.746 A:middle
And then the last thing being

00:08:41.746 --> 00:08:43.756 A:middle
that the whole reason it's there

00:08:43.756 --> 00:08:45.886 A:middle
is to avoid wasted work, to

00:08:45.886 --> 00:08:47.656 A:middle
defer work and possibly skip it

00:08:47.656 --> 00:08:48.036 A:middle
entirely.

00:08:49.006 --> 00:08:53.316 A:middle
All right, so having looked at

00:08:53.316 --> 00:08:54.876 A:middle
that we are now in position to

00:08:54.876 --> 00:08:56.156 A:middle
analyze the rest of this method.

00:08:56.896 --> 00:08:59.476 A:middle
See how we are -- every time

00:08:59.476 --> 00:09:01.076 A:middle
it's called we're deactivating

00:08:59.476 --> 00:09:01.076 A:middle
it's called we're deactivating

00:09:01.276 --> 00:09:03.196 A:middle
constraints and then activating

00:09:03.196 --> 00:09:03.996 A:middle
them again new ones.

00:09:05.406 --> 00:09:06.546 A:middle
We are saying this is analogous

00:09:06.546 --> 00:09:07.326 A:middle
to layoutSubviews.

00:09:07.706 --> 00:09:09.616 A:middle
So if we wrote the exact same

00:09:09.616 --> 00:09:11.966 A:middle
code in layout Subviews that is

00:09:11.966 --> 00:09:14.076 A:middle
the analog, that would be as if

00:09:14.476 --> 00:09:16.996 A:middle
you -- every time layoutSubviews

00:09:16.996 --> 00:09:18.436 A:middle
was called you destroyed all

00:09:18.436 --> 00:09:20.236 A:middle
your Subviews, created them from

00:09:20.236 --> 00:09:22.076 A:middle
scratch and then added them

00:09:22.076 --> 00:09:22.346 A:middle
again.

00:09:23.436 --> 00:09:25.596 A:middle
And I think a lot of people have

00:09:25.596 --> 00:09:26.836 A:middle
the completely accurate

00:09:26.836 --> 00:09:27.946 A:middle
intuition that that's not going

00:09:27.946 --> 00:09:28.726 A:middle
to perform very well.

00:09:29.306 --> 00:09:31.916 A:middle
So the thing to really get is

00:09:31.916 --> 00:09:33.266 A:middle
that it's the same.

00:09:33.586 --> 00:09:34.976 A:middle
Whatever intuition you take from

00:09:34.976 --> 00:09:36.436 A:middle
that apply it to

00:09:36.436 --> 00:09:37.756 A:middle
updateConstraints as well.

00:09:38.046 --> 00:09:39.216 A:middle
When you are ripping down

00:09:39.216 --> 00:09:40.336 A:middle
constraints like that you're

00:09:40.336 --> 00:09:42.376 A:middle
doing a lot of extra work.

00:09:42.466 --> 00:09:43.156 A:middle
So how do you fix it?

00:09:43.766 --> 00:09:46.076 A:middle
Well, you need to use -- as we

00:09:46.076 --> 00:09:47.116 A:middle
were saying, you need to make

00:09:47.116 --> 00:09:48.536 A:middle
sure that you're not doing it

00:09:48.536 --> 00:09:49.286 A:middle
more than once.

00:09:49.506 --> 00:09:50.606 A:middle
It's for deferring work.

00:09:51.566 --> 00:09:53.076 A:middle
So it should be something like

00:09:53.076 --> 00:09:54.576 A:middle
this, we say did we already do

00:09:54.576 --> 00:09:55.056 A:middle
this work?

00:09:55.636 --> 00:09:57.326 A:middle
If we did then just don't do

00:09:57.326 --> 00:09:57.856 A:middle
anything at all.

00:09:57.856 --> 00:09:58.886 A:middle
If we haven't done it yet, then

00:09:58.886 --> 00:09:59.816 A:middle
sure set up those constraints

00:09:59.816 --> 00:09:59.976 A:middle
once.

00:10:00.046 --> 00:10:03.816 A:middle
And that will perform well, OK?

00:10:04.176 --> 00:10:05.956 A:middle
So this is again, this is

00:10:05.956 --> 00:10:07.916 A:middle
actually the most common error

00:10:07.916 --> 00:10:09.636 A:middle
that we see in client code,

00:10:09.866 --> 00:10:11.606 A:middle
which is we call it churning the

00:10:11.606 --> 00:10:12.146 A:middle
constraints.

00:10:12.846 --> 00:10:14.116 A:middle
Unnecessarily ripping them down

00:10:14.116 --> 00:10:16.036 A:middle
and putting them back up.

00:10:16.036 --> 00:10:17.326 A:middle
OK, great.

00:10:17.886 --> 00:10:19.396 A:middle
We are going to do more but

00:10:19.766 --> 00:10:21.196 A:middle
stepping back for a second now

00:10:21.386 --> 00:10:22.676 A:middle
to think about the Render Loop

00:10:22.676 --> 00:10:23.626 A:middle
for a little bit.

00:10:24.296 --> 00:10:26.576 A:middle
The Render Loop is great if you

00:10:26.576 --> 00:10:27.696 A:middle
actually need it.

00:10:27.926 --> 00:10:29.066 A:middle
The purpose again, it's really

00:10:29.066 --> 00:10:30.486 A:middle
useful for avoiding that

00:10:30.486 --> 00:10:31.236 A:middle
redundant work.

00:10:32.106 --> 00:10:34.386 A:middle
But it's also dangerous because

00:10:34.616 --> 00:10:35.506 A:middle
it runs to often.

00:10:35.826 --> 00:10:38.036 A:middle
It's very sensitive code.

00:10:38.356 --> 00:10:40.586 A:middle
So in a case like this usually

00:10:40.586 --> 00:10:41.236 A:middle
what you want to do about

00:10:41.236 --> 00:10:43.486 A:middle
sensitive code is not -- like,

00:10:43.486 --> 00:10:44.336 A:middle
you should take care if you're

00:10:44.336 --> 00:10:45.196 A:middle
writing it but you should also

00:10:45.196 --> 00:10:46.956 A:middle
try to minimize how often you

00:10:46.956 --> 00:10:48.216 A:middle
write sensitive code because,

00:10:48.616 --> 00:10:50.636 A:middle
you know, you're probably going

00:10:50.636 --> 00:10:51.846 A:middle
to screw it up.

00:10:52.166 --> 00:10:53.426 A:middle
We all do.

00:10:53.426 --> 00:10:55.096 A:middle
So in this case, in fact you

00:10:55.096 --> 00:10:55.986 A:middle
might be, you should really

00:10:55.986 --> 00:10:57.716 A:middle
think again like could I just do

00:10:57.716 --> 00:10:59.956 A:middle
it once and not put it in

00:11:00.346 --> 00:11:01.256 A:middle
updateConstraints?

00:11:01.326 --> 00:11:03.396 A:middle
And a good way to do that is use

00:11:03.396 --> 00:11:03.936 A:middle
Interface Builder.

00:11:04.286 --> 00:11:05.796 A:middle
If you can use Interface Builder

00:11:06.026 --> 00:11:06.506 A:middle
you should.

00:11:07.496 --> 00:11:08.606 A:middle
It's great for all sorts of

00:11:08.606 --> 00:11:08.946 A:middle
reasons.

00:11:08.946 --> 00:11:11.276 A:middle
It puts you on a good path.

00:11:11.466 --> 00:11:13.206 A:middle
OK, so that's great.

00:11:13.346 --> 00:11:14.876 A:middle
We've now talked about that.

00:11:14.876 --> 00:11:15.856 A:middle
I think we have a better

00:11:15.856 --> 00:11:17.286 A:middle
understanding for why that's

00:11:17.286 --> 00:11:18.746 A:middle
problematic, at least somewhat

00:11:18.966 --> 00:11:20.266 A:middle
by analogy sub use.

00:11:21.336 --> 00:11:22.486 A:middle
But for the purposes of this

00:11:22.486 --> 00:11:23.606 A:middle
talk we want to do better than

00:11:23.606 --> 00:11:23.846 A:middle
that.

00:11:23.846 --> 00:11:25.706 A:middle
We don't just want to say this

00:11:25.706 --> 00:11:26.336 A:middle
is bad.

00:11:26.536 --> 00:11:28.376 A:middle
We want to really understand it

00:11:28.376 --> 00:11:29.666 A:middle
and understand the process.

00:11:30.366 --> 00:11:32.956 A:middle
So to do that we're now going to

00:11:33.016 --> 00:11:34.816 A:middle
peel back the covers and start

00:11:34.816 --> 00:11:36.596 A:middle
to really see what really

00:11:36.596 --> 00:11:36.976 A:middle
happens.

00:11:37.546 --> 00:11:42.156 A:middle
So when we activate these

00:11:42.156 --> 00:11:43.096 A:middle
constraints, when we add the

00:11:43.096 --> 00:11:45.246 A:middle
constraints, what is the process

00:11:45.246 --> 00:11:45.626 A:middle
that occurs?

00:11:46.916 --> 00:11:48.016 A:middle
Let's diagram it out at a high

00:11:48.016 --> 00:11:48.276 A:middle
level.

00:11:48.626 --> 00:11:50.856 A:middle
So if this is the view that

00:11:50.856 --> 00:11:51.946 A:middle
we're adding the constraints to,

00:11:53.056 --> 00:11:55.596 A:middle
this view is in a window.

00:11:55.726 --> 00:11:57.406 A:middle
Hanging off the window is an

00:11:57.406 --> 00:11:59.426 A:middle
internal object called the

00:11:59.426 --> 00:12:00.086 A:middle
engine.

00:11:59.426 --> 00:12:00.086 A:middle
engine.

00:12:00.516 --> 00:12:01.626 A:middle
And the engine is the

00:12:01.626 --> 00:12:03.066 A:middle
computational core of Auto

00:12:03.066 --> 00:12:03.296 A:middle
Layout.

00:12:03.816 --> 00:12:06.246 A:middle
When the constraint is added

00:12:06.576 --> 00:12:10.336 A:middle
what will happen is that we make

00:12:10.336 --> 00:12:12.146 A:middle
an equation, which corresponds

00:12:12.146 --> 00:12:13.616 A:middle
to the constraints, and we add

00:12:13.616 --> 00:12:15.846 A:middle
that equation to the engine.

00:12:16.516 --> 00:12:18.306 A:middle
The last object to understand in

00:12:18.306 --> 00:12:19.906 A:middle
the diagram is that the equation

00:12:20.186 --> 00:12:22.996 A:middle
is in terms of variables where a

00:12:22.996 --> 00:12:24.526 A:middle
variable is like, you know, if I

00:12:24.526 --> 00:12:25.936 A:middle
hand you an equation and I say

00:12:25.936 --> 00:12:28.336 A:middle
solve for X, X is a variable.

00:12:29.396 --> 00:12:30.666 A:middle
The things that we need to solve

00:12:30.666 --> 00:12:33.326 A:middle
for in this case is the frame

00:12:33.326 --> 00:12:34.746 A:middle
data of a view.

00:12:35.166 --> 00:12:36.356 A:middle
So there will be four variables

00:12:36.356 --> 00:12:37.916 A:middle
for every view, which is the min

00:12:37.916 --> 00:12:40.246 A:middle
X, the min Y, the width, and the

00:12:40.796 --> 00:12:40.906 A:middle
height.

00:12:41.126 --> 00:12:43.536 A:middle
OK, so let's go into this

00:12:43.536 --> 00:12:43.956 A:middle
process.

00:12:44.276 --> 00:12:45.436 A:middle
So this was the layout we were

00:12:45.436 --> 00:12:45.906 A:middle
going to do.

00:12:45.906 --> 00:12:46.976 A:middle
We're going to focus just on the

00:12:46.976 --> 00:12:48.166 A:middle
horizontal constraints for

00:12:48.166 --> 00:12:49.386 A:middle
simplicity, but we're going to

00:12:49.386 --> 00:12:50.486 A:middle
follow through the process.

00:12:51.356 --> 00:12:52.496 A:middle
So the first thing that happens,

00:12:52.636 --> 00:12:53.996 A:middle
as we said, is we make these

00:12:53.996 --> 00:12:55.536 A:middle
equations, which look like this.

00:12:57.156 --> 00:12:57.986 A:middle
These are pretty straight

00:12:57.986 --> 00:12:58.366 A:middle
forward.

00:12:58.676 --> 00:13:00.656 A:middle
The most interesting one is I

00:12:58.676 --> 00:13:00.656 A:middle
The most interesting one is I

00:13:00.656 --> 00:13:01.936 A:middle
think the space between the two

00:13:01.936 --> 00:13:03.896 A:middle
text fields, which looks like

00:13:03.896 --> 00:13:05.366 A:middle
we're saying it looks very, very

00:13:05.366 --> 00:13:07.656 A:middle
similar to what you say with the

00:13:07.656 --> 00:13:08.896 A:middle
constraint but it's somewhat

00:13:08.896 --> 00:13:10.416 A:middle
lower level because it's in

00:13:10.416 --> 00:13:11.756 A:middle
terms of these variables.

00:13:13.376 --> 00:13:16.806 A:middle
OK, then each of those equations

00:13:16.806 --> 00:13:17.986 A:middle
needs to get added to the

00:13:17.986 --> 00:13:18.336 A:middle
engine.

00:13:18.336 --> 00:13:20.546 A:middle
And we're actually going to

00:13:20.546 --> 00:13:22.596 A:middle
follow along that process again

00:13:22.596 --> 00:13:24.006 A:middle
with the goal being to have a

00:13:24.006 --> 00:13:26.816 A:middle
good feel for the performance

00:13:26.816 --> 00:13:27.386 A:middle
characteristics.

00:13:27.746 --> 00:13:28.696 A:middle
What is happening when we do

00:13:28.696 --> 00:13:28.846 A:middle
this?

00:13:29.856 --> 00:13:31.856 A:middle
So the engine is trying to solve

00:13:31.856 --> 00:13:33.806 A:middle
for these variables, which is

00:13:33.806 --> 00:13:36.086 A:middle
something you may have done in

00:13:36.086 --> 00:13:37.726 A:middle
algebra and it actually looks

00:13:37.726 --> 00:13:38.936 A:middle
exactly the same.

00:13:38.936 --> 00:13:40.106 A:middle
So let's follow it.

00:13:40.386 --> 00:13:42.166 A:middle
So first equation comes in, says

00:13:42.166 --> 00:13:44.146 A:middle
the first fields minX is 8.

00:13:44.486 --> 00:13:47.846 A:middle
Cool. Its width is 100, fine.

00:13:48.436 --> 00:13:50.696 A:middle
OK, when this one comes in we

00:13:50.696 --> 00:13:52.106 A:middle
say the second field's minX is

00:13:52.106 --> 00:13:53.556 A:middle
equal to the first minX plus the

00:13:53.556 --> 00:13:54.406 A:middle
width plus 20.

00:13:54.406 --> 00:13:57.096 A:middle
What would you do in algebra if

00:13:57.096 --> 00:13:59.046 A:middle
somebody asked you to solve for

00:13:59.046 --> 00:13:59.666 A:middle
these variables?

00:14:00.956 --> 00:14:02.836 A:middle
You would substitute out for the

00:14:02.836 --> 00:14:03.826 A:middle
ones that you already had in

00:14:03.826 --> 00:14:03.996 A:middle
there.

00:14:04.146 --> 00:14:05.286 A:middle
And that's exactly what's going

00:14:05.286 --> 00:14:05.646 A:middle
to happen.

00:14:06.636 --> 00:14:08.486 A:middle
If you are profiling, you'll see

00:14:08.486 --> 00:14:10.356 A:middle
there is a genuine method in the

00:14:10.356 --> 00:14:12.186 A:middle
engine that contains the word

00:14:12.186 --> 00:14:13.986 A:middle
substitute as well as another

00:14:13.986 --> 00:14:16.956 A:middle
140 characters because we are

00:14:16.956 --> 00:14:18.776 A:middle
Cocoa Code Programmers.

00:14:18.776 --> 00:14:21.716 A:middle
But and that's what it will do.

00:14:22.266 --> 00:14:23.726 A:middle
And then, you know, and the last

00:14:23.726 --> 00:14:26.306 A:middle
equation comes in and this looks

00:14:26.306 --> 00:14:26.726 A:middle
done.

00:14:27.126 --> 00:14:29.106 A:middle
it looks like that was all the

00:14:29.106 --> 00:14:30.636 A:middle
work that had to happen at least

00:14:30.636 --> 00:14:32.656 A:middle
in this case to solve for those

00:14:32.656 --> 00:14:34.466 A:middle
variables and that's true.

00:14:35.006 --> 00:14:36.646 A:middle
That's what I want to understand

00:14:36.646 --> 00:14:38.506 A:middle
at this point is that the work

00:14:38.506 --> 00:14:39.856 A:middle
that happens is both not very

00:14:39.856 --> 00:14:40.546 A:middle
complicated.

00:14:41.046 --> 00:14:42.856 A:middle
It corresponds very, very, very

00:14:42.856 --> 00:14:43.956 A:middle
closely to what you would do if

00:14:43.956 --> 00:14:46.566 A:middle
you were doing it by hand.

00:14:46.566 --> 00:14:47.476 A:middle
And it's also not very

00:14:47.476 --> 00:14:47.916 A:middle
expensive.

00:14:48.266 --> 00:14:49.826 A:middle
It's just sort of substituting

00:14:49.826 --> 00:14:50.296 A:middle
out like this.

00:14:50.536 --> 00:14:51.626 A:middle
That's the work it does.

00:14:52.626 --> 00:14:54.976 A:middle
OK, so now we have sort of

00:14:55.326 --> 00:14:56.686 A:middle
solved for these variables in

00:14:56.686 --> 00:14:57.616 A:middle
the engine but that's not

00:14:57.616 --> 00:14:57.936 A:middle
layout.

00:14:58.386 --> 00:15:00.716 A:middle
So let's finish the process.

00:14:58.386 --> 00:15:00.716 A:middle
So let's finish the process.

00:15:02.036 --> 00:15:03.106 A:middle
What happens for the rest of the

00:15:03.106 --> 00:15:04.516 A:middle
process is that whenever the

00:15:04.516 --> 00:15:06.506 A:middle
engine sort of assigns a value

00:15:06.506 --> 00:15:07.816 A:middle
to one of these variables, it's

00:15:07.816 --> 00:15:09.746 A:middle
going to inform the view that

00:15:09.746 --> 00:15:11.246 A:middle
the variable came from and say,

00:15:11.246 --> 00:15:12.036 A:middle
this thing changed.

00:15:12.496 --> 00:15:14.726 A:middle
What will the view do in

00:15:14.726 --> 00:15:15.406 A:middle
response to that?

00:15:16.526 --> 00:15:17.556 A:middle
Well, if you think about it for

00:15:17.556 --> 00:15:19.646 A:middle
a minute it will call it

00:15:19.646 --> 00:15:20.956 A:middle
Superview and say hey,

00:15:20.956 --> 00:15:23.536 A:middle
setNeedsLayout because it needs

00:15:23.536 --> 00:15:23.816 A:middle
to move.

00:15:25.226 --> 00:15:27.196 A:middle
OK, that was all happening as

00:15:27.226 --> 00:15:29.926 A:middle
part of the update constraints

00:15:29.926 --> 00:15:30.216 A:middle
phase.

00:15:31.136 --> 00:15:32.106 A:middle
We now just receive

00:15:32.106 --> 00:15:33.716 A:middle
setNeedsLayout, so at some point

00:15:33.716 --> 00:15:35.246 A:middle
it will move on to the layout

00:15:35.246 --> 00:15:35.536 A:middle
phase.

00:15:36.696 --> 00:15:39.846 A:middle
Then, OK, so the last piece of

00:15:39.846 --> 00:15:40.846 A:middle
the puzzle is that we'll

00:15:40.846 --> 00:15:42.236 A:middle
receive, UIView will receive

00:15:42.236 --> 00:15:45.776 A:middle
layout Subviews will do is it

00:15:45.776 --> 00:15:47.816 A:middle
will copy that data from the

00:15:47.816 --> 00:15:49.096 A:middle
engine into the frame.

00:15:50.336 --> 00:15:52.356 A:middle
So it will just say engine, what

00:15:52.356 --> 00:15:53.546 A:middle
are the values for those

00:15:53.546 --> 00:15:53.956 A:middle
variables?

00:15:54.446 --> 00:15:56.676 A:middle
Engine will tell it and it will

00:15:56.676 --> 00:15:58.746 A:middle
just call set Superview of that

00:15:58.746 --> 00:16:00.216 A:middle
view we'll call setBounds at

00:15:58.746 --> 00:16:00.216 A:middle
view we'll call setBounds at

00:16:00.216 --> 00:16:02.076 A:middle
setCenter on that Subview.

00:16:03.306 --> 00:16:04.606 A:middle
And that is the entire process.

00:16:06.146 --> 00:16:07.686 A:middle
So just step back and think for

00:16:07.686 --> 00:16:08.096 A:middle
a second.

00:16:08.096 --> 00:16:08.996 A:middle
Like, that is the step-by-step

00:16:08.996 --> 00:16:09.976 A:middle
process of Layout.

00:16:10.206 --> 00:16:12.716 A:middle
If you can try to internalize

00:16:12.716 --> 00:16:13.906 A:middle
that and get a feel for it,

00:16:14.166 --> 00:16:15.236 A:middle
you're going to have a much,

00:16:15.236 --> 00:16:17.066 A:middle
much, much better feel for

00:16:17.066 --> 00:16:19.166 A:middle
performance expectations around

00:16:19.166 --> 00:16:19.586 A:middle
this stuff.

00:16:20.486 --> 00:16:21.896 A:middle
In fact, let's see how that's

00:16:21.896 --> 00:16:23.676 A:middle
going right now, because now

00:16:24.196 --> 00:16:26.206 A:middle
when we look at this and we look

00:16:26.206 --> 00:16:26.886 A:middle
at this method that we were

00:16:26.886 --> 00:16:28.416 A:middle
looking at that where we're

00:16:28.416 --> 00:16:29.506 A:middle
deactivating constraints and

00:16:29.506 --> 00:16:30.736 A:middle
we're reactivating constraints,

00:16:31.106 --> 00:16:32.346 A:middle
think about what we just did and

00:16:32.346 --> 00:16:33.656 A:middle
think about what the engine is

00:16:33.656 --> 00:16:34.206 A:middle
going to be doing.

00:16:35.596 --> 00:16:36.626 A:middle
It's going to look like this.

00:16:40.426 --> 00:16:42.136 A:middle
Which we call churning [laughs].

00:16:42.556 --> 00:16:45.226 A:middle
So each operation it's doing is

00:16:45.226 --> 00:16:47.246 A:middle
not super expensive, but it's

00:16:47.246 --> 00:16:49.576 A:middle
doing a lot of them and it's

00:16:49.576 --> 00:16:51.086 A:middle
just completely unnecessary.

00:16:51.086 --> 00:16:52.196 A:middle
This work is wasted.

00:16:52.726 --> 00:16:54.456 A:middle
So if you can feel this in your

00:16:54.456 --> 00:16:56.336 A:middle
heart, if you can really feel

00:16:56.406 --> 00:16:57.636 A:middle
that this is what is happening

00:16:58.046 --> 00:16:59.236 A:middle
when you do this, then you're

00:16:59.236 --> 00:17:00.046 A:middle
going to be in good shape.

00:16:59.236 --> 00:17:00.046 A:middle
going to be in good shape.

00:17:00.356 --> 00:17:02.046 A:middle
Then that's -- you're going to

00:17:02.046 --> 00:17:03.036 A:middle
be in the same position we are

00:17:03.036 --> 00:17:05.056 A:middle
to go through and really get a

00:17:05.056 --> 00:17:05.715 A:middle
good feel for this.

00:17:06.636 --> 00:17:08.935 A:middle
OK, so I hope that's great.

00:17:08.935 --> 00:17:14.246 A:middle
There's one other big topic that

00:17:14.246 --> 00:17:15.236 A:middle
we want to cover though.

00:17:15.236 --> 00:17:16.256 A:middle
If we want to really have a good

00:17:16.256 --> 00:17:18.356 A:middle
performance model is this idea

00:17:18.356 --> 00:17:20.766 A:middle
that you only pay for what you

00:17:20.766 --> 00:17:21.965 A:middle
use with Auto Layout.

00:17:22.086 --> 00:17:23.056 A:middle
And having looked at this, I

00:17:23.056 --> 00:17:23.965 A:middle
think we're in a good position

00:17:23.965 --> 00:17:26.266 A:middle
to understand what that means,

00:17:26.266 --> 00:17:26.665 A:middle
OK?

00:17:26.665 --> 00:17:28.346 A:middle
To do this, let's say we double

00:17:28.346 --> 00:17:29.476 A:middle
the situation we had before.

00:17:29.476 --> 00:17:31.346 A:middle
So we have four text fields in

00:17:31.346 --> 00:17:32.526 A:middle
two sort of independent

00:17:32.526 --> 00:17:33.076 A:middle
hierarchies.

00:17:34.496 --> 00:17:36.886 A:middle
Now something you can do is you

00:17:36.886 --> 00:17:38.426 A:middle
can make a constraint that

00:17:38.426 --> 00:17:40.606 A:middle
crosses the hierarchy like this.

00:17:40.976 --> 00:17:42.866 A:middle
That goes -- that you can say,

00:17:42.866 --> 00:17:44.286 A:middle
well text field one should be

00:17:44.286 --> 00:17:45.316 A:middle
aligned with text field three

00:17:45.316 --> 00:17:46.016 A:middle
even though they don't have the

00:17:46.016 --> 00:17:46.656 A:middle
same Superview.

00:17:48.186 --> 00:17:50.956 A:middle
I think sometimes people have

00:17:50.956 --> 00:17:52.486 A:middle
the impression that because this

00:17:52.516 --> 00:17:54.526 A:middle
possible, it means that things

00:17:54.526 --> 00:17:56.606 A:middle
are going to be generally quite

00:17:56.606 --> 00:17:58.226 A:middle
slow because anything could

00:17:58.226 --> 00:17:59.646 A:middle
affect anything at any time and

00:17:59.646 --> 00:18:00.746 A:middle
so it's just sort of a giant

00:17:59.646 --> 00:18:00.746 A:middle
so it's just sort of a giant

00:18:00.746 --> 00:18:03.026 A:middle
ball of mud and performance

00:18:03.026 --> 00:18:04.296 A:middle
probably sucks.

00:18:05.056 --> 00:18:07.306 A:middle
OK, but having looked at what

00:18:07.306 --> 00:18:08.936 A:middle
we've looked at, let's see what

00:18:08.936 --> 00:18:11.086 A:middle
happens in the common case where

00:18:11.086 --> 00:18:13.136 A:middle
you don't have this because most

00:18:13.136 --> 00:18:14.006 A:middle
of the time you don't.

00:18:14.506 --> 00:18:16.476 A:middle
Most of the time views are only

00:18:16.476 --> 00:18:17.906 A:middle
constrained to their parent and

00:18:17.906 --> 00:18:18.916 A:middle
to their siblings.

00:18:19.736 --> 00:18:22.056 A:middle
What you'll see there is that

00:18:22.056 --> 00:18:23.026 A:middle
since we have these two

00:18:23.026 --> 00:18:25.586 A:middle
independent blocks, that will

00:18:25.586 --> 00:18:27.036 A:middle
give, if you look inside the

00:18:27.036 --> 00:18:28.366 A:middle
engine it will be two

00:18:28.366 --> 00:18:29.926 A:middle
independent blocks of equations

00:18:29.926 --> 00:18:31.206 A:middle
that completely don't interact

00:18:31.206 --> 00:18:32.366 A:middle
with each other, that don't have

00:18:32.366 --> 00:18:33.636 A:middle
any overlapping variables.

00:18:34.146 --> 00:18:36.776 A:middle
What that will do, is that

00:18:36.776 --> 00:18:38.186 A:middle
because they completely don' t

00:18:38.186 --> 00:18:39.266 A:middle
overlap, they just don't

00:18:39.266 --> 00:18:39.596 A:middle
interact.

00:18:39.996 --> 00:18:41.296 A:middle
And if we have one of these it

00:18:41.296 --> 00:18:43.586 A:middle
will take some amount of time to

00:18:43.586 --> 00:18:43.966 A:middle
deal with.

00:18:44.246 --> 00:18:45.536 A:middle
If we have two of them it will

00:18:45.536 --> 00:18:47.256 A:middle
just take twice the time because

00:18:47.556 --> 00:18:48.206 A:middle
they have nothing to do with

00:18:48.206 --> 00:18:48.486 A:middle
each other.

00:18:49.246 --> 00:18:50.316 A:middle
Three of them, three times,

00:18:50.546 --> 00:18:52.566 A:middle
etcetera, the point is you're

00:18:52.626 --> 00:18:54.366 A:middle
going to see a line.

00:18:54.366 --> 00:18:56.836 A:middle
You're going to see linear

00:18:56.836 --> 00:18:58.026 A:middle
performance, which is the best

00:18:58.026 --> 00:18:59.016 A:middle
you can get.

00:18:59.276 --> 00:19:00.706 A:middle
That's perfect marks for this

00:18:59.276 --> 00:19:00.706 A:middle
That's perfect marks for this

00:19:00.706 --> 00:19:01.106 A:middle
kind of thing.

00:19:01.246 --> 00:19:03.816 A:middle
So I want to stress this again,

00:19:03.816 --> 00:19:05.496 A:middle
the reason why it's linear is

00:19:05.496 --> 00:19:06.306 A:middle
because there aren't any

00:19:06.306 --> 00:19:07.546 A:middle
dependencies between these

00:19:07.546 --> 00:19:07.886 A:middle
pieces.

00:19:08.516 --> 00:19:09.596 A:middle
If you do have a dependency,

00:19:10.066 --> 00:19:11.846 A:middle
then it will tie those blocks of

00:19:11.846 --> 00:19:14.106 A:middle
equations together and that will

00:19:14.106 --> 00:19:15.996 A:middle
be somewhat more, you know, more

00:19:15.996 --> 00:19:18.096 A:middle
computation to deal with but

00:19:18.566 --> 00:19:19.876 A:middle
that's only if you use it.

00:19:20.396 --> 00:19:21.456 A:middle
And of course if you do have

00:19:21.456 --> 00:19:22.236 A:middle
something like that, you know,

00:19:22.236 --> 00:19:23.446 A:middle
if you're doing it by hand of

00:19:23.446 --> 00:19:24.246 A:middle
course it's going to be a little

00:19:24.246 --> 00:19:25.396 A:middle
bit more expensive that's what

00:19:25.396 --> 00:19:25.776 A:middle
you expect.

00:19:26.006 --> 00:19:26.986 A:middle
You're doing something more

00:19:26.986 --> 00:19:27.446 A:middle
complicated.

00:19:27.546 --> 00:19:29.626 A:middle
So it's kind of this usual thing

00:19:29.626 --> 00:19:31.456 A:middle
that we often aim for in Cocoa,

00:19:31.456 --> 00:19:32.626 A:middle
which is that the simple things

00:19:32.626 --> 00:19:34.286 A:middle
are simple and the complex

00:19:34.286 --> 00:19:34.976 A:middle
things are possible.

00:19:35.306 --> 00:19:36.476 A:middle
In this case it's more like they

00:19:36.476 --> 00:19:37.176 A:middle
cost a little more.

00:19:37.596 --> 00:19:38.986 A:middle
But you're not paying for it if

00:19:38.986 --> 00:19:41.296 A:middle
you're not using it, which is

00:19:41.296 --> 00:19:43.036 A:middle
actually the right way to think

00:19:43.036 --> 00:19:44.716 A:middle
of the whole engine in terms of

00:19:44.716 --> 00:19:46.726 A:middle
intuition again, you can think

00:19:46.726 --> 00:19:49.206 A:middle
of it as a cache for layout and

00:19:49.206 --> 00:19:50.446 A:middle
as a dependency tracker.

00:19:51.296 --> 00:19:52.736 A:middle
It's very, very targeted.

00:19:52.776 --> 00:19:54.396 A:middle
It understands which constraints

00:19:54.396 --> 00:19:55.896 A:middle
affect which views, and when you

00:19:55.896 --> 00:19:58.346 A:middle
change things it just updates

00:19:58.346 --> 00:19:59.526 A:middle
exactly the things that are

00:19:59.526 --> 00:19:59.866 A:middle
needed.

00:20:00.396 --> 00:20:02.616 A:middle
And this has implications on how

00:20:02.616 --> 00:20:02.976 A:middle
you write code too.

00:20:04.696 --> 00:20:07.306 A:middle
Sometimes we see -- one issue we

00:20:07.306 --> 00:20:08.886 A:middle
sometimes see is people taking

00:20:08.886 --> 00:20:11.236 A:middle
great pains to avoid making

00:20:11.236 --> 00:20:13.686 A:middle
constraints because they have

00:20:13.686 --> 00:20:15.116 A:middle
the impression it's going to be

00:20:15.116 --> 00:20:15.546 A:middle
expensive.

00:20:16.476 --> 00:20:17.706 A:middle
But actually, it's very, very

00:20:17.706 --> 00:20:18.296 A:middle
targeted.

00:20:18.526 --> 00:20:19.736 A:middle
As long as the constraints that

00:20:19.736 --> 00:20:21.866 A:middle
you're making correspond closely

00:20:21.866 --> 00:20:22.746 A:middle
to the problem that's being

00:20:22.746 --> 00:20:24.456 A:middle
solved, it's pretty unlikely

00:20:24.456 --> 00:20:25.556 A:middle
that whatever you do, if you

00:20:25.556 --> 00:20:26.646 A:middle
tried to dodge it, it's going to

00:20:26.646 --> 00:20:27.636 A:middle
be more performance.

00:20:28.126 --> 00:20:29.796 A:middle
Oftentimes we'll see people

00:20:29.796 --> 00:20:31.036 A:middle
doing very complicated

00:20:31.036 --> 00:20:33.006 A:middle
measurement and adding things up

00:20:33.006 --> 00:20:34.406 A:middle
and sort of trying to pull

00:20:34.406 --> 00:20:35.756 A:middle
information out and then push it

00:20:35.756 --> 00:20:37.496 A:middle
back in and that's almost always

00:20:37.496 --> 00:20:38.986 A:middle
more expensive than just

00:20:38.986 --> 00:20:40.126 A:middle
directly expressing as a

00:20:40.126 --> 00:20:41.296 A:middle
constraint what you're after.

00:20:42.606 --> 00:20:45.456 A:middle
Now the converse side of that is

00:20:45.456 --> 00:20:47.286 A:middle
that sometimes we see

00:20:47.716 --> 00:20:49.366 A:middle
hierarchies that look like

00:20:49.526 --> 00:20:51.006 A:middle
something like this where we see

00:20:51.006 --> 00:20:52.356 A:middle
lots and lots of constraints and

00:20:52.356 --> 00:20:54.456 A:middle
lots of priority and it's really

00:20:54.456 --> 00:20:56.176 A:middle
not clear what's happening and

00:20:56.176 --> 00:20:58.146 A:middle
this is a -- usually this is a

00:20:58.146 --> 00:21:00.466 A:middle
telltale sign of this being the

00:20:58.146 --> 00:21:00.466 A:middle
telltale sign of this being the

00:21:00.466 --> 00:21:01.816 A:middle
situation that there's actually

00:21:01.816 --> 00:21:03.426 A:middle
just two completely separate

00:21:03.426 --> 00:21:04.896 A:middle
layouts that someone has in mind

00:21:05.346 --> 00:21:07.406 A:middle
and we're trying to sort of pack

00:21:07.406 --> 00:21:09.196 A:middle
them together into one set of

00:21:09.196 --> 00:21:10.766 A:middle
constraints and do it all in

00:21:10.766 --> 00:21:11.286 A:middle
one.

00:21:11.836 --> 00:21:13.606 A:middle
And that's also not a real good

00:21:13.606 --> 00:21:13.906 A:middle
idea.

00:21:14.276 --> 00:21:17.056 A:middle
So that will -- that creates a

00:21:17.056 --> 00:21:18.316 A:middle
lot of false dependencies,

00:21:18.616 --> 00:21:19.776 A:middle
places where it seems like

00:21:19.776 --> 00:21:20.846 A:middle
things interact that they really

00:21:20.846 --> 00:21:21.196 A:middle
don't.

00:21:21.586 --> 00:21:22.786 A:middle
It's also nearly impossible to

00:21:22.786 --> 00:21:25.506 A:middle
Debug, if you haven't noticed.

00:21:26.186 --> 00:21:30.406 A:middle
So the overall advice is try to

00:21:30.406 --> 00:21:32.026 A:middle
model the problem as directly as

00:21:32.026 --> 00:21:32.516 A:middle
possible.

00:21:32.766 --> 00:21:33.826 A:middle
Kasia is going to walk through

00:21:33.826 --> 00:21:34.786 A:middle
this kind of case where you're

00:21:34.786 --> 00:21:35.736 A:middle
switching between different

00:21:35.736 --> 00:21:36.706 A:middle
layouts and show that a little

00:21:36.706 --> 00:21:37.396 A:middle
more explicitly.

00:21:38.186 --> 00:21:40.106 A:middle
But that's the general advice.

00:21:40.346 --> 00:21:41.886 A:middle
Just use it in a natural way.

00:21:42.036 --> 00:21:43.276 A:middle
It's better for both performance

00:21:43.606 --> 00:21:45.176 A:middle
and for understandability.

00:21:45.736 --> 00:21:50.596 A:middle
OK, so that most of what we have

00:21:50.596 --> 00:21:50.926 A:middle
to say.

00:21:51.186 --> 00:21:52.526 A:middle
But since we're trying to build

00:21:52.526 --> 00:21:54.276 A:middle
an overall mental model of the

00:21:54.276 --> 00:21:55.336 A:middle
performance characteristics of

00:21:55.336 --> 00:21:57.146 A:middle
Layout, I want to at least make

00:21:57.146 --> 00:21:58.836 A:middle
sure we touch on all of the

00:21:58.836 --> 00:21:59.636 A:middle
major features.

00:21:59.856 --> 00:22:01.186 A:middle
So there are some other things

00:21:59.856 --> 00:22:01.186 A:middle
So there are some other things

00:22:01.186 --> 00:22:01.546 A:middle
you can do.

00:22:02.676 --> 00:22:04.046 A:middle
And let's discuss.

00:22:04.626 --> 00:22:05.946 A:middle
So you can say that some

00:22:05.946 --> 00:22:07.186 A:middle
particular view should be at

00:22:07.186 --> 00:22:08.346 A:middle
least 100 points wide.

00:22:08.466 --> 00:22:09.366 A:middle
You can use inequalities.

00:22:10.106 --> 00:22:10.806 A:middle
What does that cost?

00:22:11.736 --> 00:22:12.816 A:middle
Very, very, very little.

00:22:13.006 --> 00:22:13.876 A:middle
Compared to just saying it's

00:22:13.876 --> 00:22:15.736 A:middle
equal to hundred points wide.

00:22:15.736 --> 00:22:17.346 A:middle
Since we went internals a little

00:22:17.656 --> 00:22:19.166 A:middle
bit, it's going to coast exactly

00:22:19.166 --> 00:22:19.966 A:middle
one more variable.

00:22:20.236 --> 00:22:20.636 A:middle
That's it.

00:22:21.156 --> 00:22:23.936 A:middle
You can also call set constant.

00:22:24.436 --> 00:22:26.066 A:middle
The example use case for this is

00:22:26.066 --> 00:22:27.926 A:middle
something like I have a gesture

00:22:27.926 --> 00:22:29.206 A:middle
recognizer and I'm kind of

00:22:29.266 --> 00:22:31.396 A:middle
trying to drag a view around and

00:22:31.396 --> 00:22:32.676 A:middle
what I'm going to do is every

00:22:32.676 --> 00:22:34.976 A:middle
time I receive a call from the

00:22:34.976 --> 00:22:36.196 A:middle
gesture recognizer I'm going to

00:22:36.196 --> 00:22:38.416 A:middle
take its translation and I'm

00:22:38.416 --> 00:22:39.296 A:middle
going to pump it into a

00:22:39.296 --> 00:22:41.006 A:middle
constraint by calling set

00:22:41.006 --> 00:22:43.866 A:middle
constant on that constraint with

00:22:44.626 --> 00:22:45.896 A:middle
that translation value.

00:22:46.616 --> 00:22:48.966 A:middle
OK, what that's going to do is

00:22:48.966 --> 00:22:50.616 A:middle
we talked about how the engine

00:22:50.616 --> 00:22:51.786 A:middle
is a dependency tracker.

00:22:52.346 --> 00:22:53.976 A:middle
This exploits that to the

00:22:53.976 --> 00:22:55.016 A:middle
maximal degree.

00:22:55.656 --> 00:22:58.016 A:middle
So that's sort of a very, very,

00:22:58.016 --> 00:23:00.266 A:middle
very fast one step update of

00:22:58.016 --> 00:23:00.266 A:middle
very fast one step update of

00:23:00.266 --> 00:23:02.426 A:middle
just exactly what has to change

00:23:02.696 --> 00:23:03.756 A:middle
due to this one constraint

00:23:03.756 --> 00:23:04.106 A:middle
changing.

00:23:04.916 --> 00:23:05.896 A:middle
So that's a performance

00:23:05.896 --> 00:23:06.606 A:middle
optimization.

00:23:06.606 --> 00:23:07.936 A:middle
That's why we even have this

00:23:07.936 --> 00:23:08.936 A:middle
method set constant.

00:23:09.476 --> 00:23:11.526 A:middle
Last to talk about it priority.

00:23:12.436 --> 00:23:14.536 A:middle
So here you can say, you know,

00:23:14.536 --> 00:23:16.266 A:middle
you can say this view should

00:23:16.266 --> 00:23:18.676 A:middle
ideally be 100 points wide, but

00:23:18.876 --> 00:23:20.046 A:middle
if something else prevents that

00:23:20.046 --> 00:23:21.766 A:middle
just please be as close as

00:23:21.766 --> 00:23:22.236 A:middle
possible.

00:23:22.956 --> 00:23:24.636 A:middle
This does incur some more work,

00:23:25.326 --> 00:23:26.196 A:middle
some amount of work.

00:23:26.196 --> 00:23:27.666 A:middle
So let's talk about that a

00:23:27.666 --> 00:23:28.306 A:middle
little bit more.

00:23:28.576 --> 00:23:29.866 A:middle
Another way to think about that

00:23:30.206 --> 00:23:31.626 A:middle
is to say that the width of that

00:23:31.626 --> 00:23:32.936 A:middle
field is going to be equal to

00:23:32.936 --> 00:23:35.666 A:middle
100 plus some error and please

00:23:35.666 --> 00:23:36.716 A:middle
minimize the error.

00:23:37.436 --> 00:23:38.496 A:middle
That's what you're asking for.

00:23:39.776 --> 00:23:41.266 A:middle
So there is an error

00:23:41.266 --> 00:23:42.536 A:middle
minimization phase I didn't

00:23:42.536 --> 00:23:43.156 A:middle
discuss before.

00:23:43.366 --> 00:23:46.816 A:middle
So when the view asks the engine

00:23:46.816 --> 00:23:48.086 A:middle
as part of layout subviews and

00:23:48.086 --> 00:23:49.896 A:middle
says, hey what's the value for

00:23:49.896 --> 00:23:50.446 A:middle
these variables?

00:23:50.686 --> 00:23:51.866 A:middle
The engine needs to make sure

00:23:51.866 --> 00:23:53.366 A:middle
that all of those error terms

00:23:53.366 --> 00:23:54.626 A:middle
have been minimized first.

00:23:55.386 --> 00:23:57.476 A:middle
And this is actually, this is --

00:23:57.476 --> 00:23:58.546 A:middle
I'm not going to go into how

00:23:58.546 --> 00:23:59.976 A:middle
this works but I am going to

00:23:59.976 --> 00:24:00.726 A:middle
talk a little bit about

00:23:59.976 --> 00:24:00.726 A:middle
talk a little bit about

00:24:00.726 --> 00:24:02.006 A:middle
performance characteristics and

00:24:02.056 --> 00:24:02.996 A:middle
I'm also going to say that's

00:24:02.996 --> 00:24:03.586 A:middle
super neat.

00:24:04.536 --> 00:24:06.746 A:middle
So you might want to look this

00:24:06.746 --> 00:24:07.196 A:middle
up.

00:24:07.196 --> 00:24:08.476 A:middle
This is the simple X algorithm.

00:24:08.476 --> 00:24:09.526 A:middle
This is what we're really doing.

00:24:09.866 --> 00:24:11.206 A:middle
It's super old.

00:24:11.676 --> 00:24:12.666 A:middle
It was developed during World

00:24:12.666 --> 00:24:13.186 A:middle
War II.

00:24:13.576 --> 00:24:16.606 A:middle
What you might note is before

00:24:16.806 --> 00:24:17.246 A:middle
computers.

00:24:17.416 --> 00:24:19.026 A:middle
In fact, the people who used to

00:24:19.026 --> 00:24:20.356 A:middle
be called computers, before

00:24:20.356 --> 00:24:21.156 A:middle
there were machines that were

00:24:21.156 --> 00:24:22.416 A:middle
called computers, this is kind

00:24:22.416 --> 00:24:23.016 A:middle
of what they're doing.

00:24:23.486 --> 00:24:25.706 A:middle
They're doing it by hand, which

00:24:25.856 --> 00:24:27.146 A:middle
does give you some feel for the

00:24:27.146 --> 00:24:28.076 A:middle
performance characteristics.

00:24:28.316 --> 00:24:29.566 A:middle
It must be pretty fast if you do

00:24:29.566 --> 00:24:30.096 A:middle
it by hand.

00:24:30.376 --> 00:24:30.816 A:middle
And it is.

00:24:31.126 --> 00:24:33.336 A:middle
It's pretty much the same stuff

00:24:33.336 --> 00:24:34.106 A:middle
we've been doing.

00:24:34.166 --> 00:24:35.326 A:middle
It's more substitutions.

00:24:35.726 --> 00:24:36.966 A:middle
That's how you should think of

00:24:36.966 --> 00:24:37.066 A:middle
it.

00:24:38.266 --> 00:24:39.676 A:middle
Anyway, but it does -- you know,

00:24:39.676 --> 00:24:40.986 A:middle
when you use priority it does

00:24:40.986 --> 00:24:42.116 A:middle
cost at this level so that's

00:24:42.256 --> 00:24:43.146 A:middle
just something to be aware of.

00:24:44.226 --> 00:24:45.526 A:middle
OK, and other than that it's

00:24:45.526 --> 00:24:46.216 A:middle
just same as before.

00:24:46.616 --> 00:24:50.276 A:middle
So that's what I wanted to talk

00:24:50.276 --> 00:24:50.546 A:middle
about.

00:24:50.756 --> 00:24:52.556 A:middle
So that is our attempt to build

00:24:52.556 --> 00:24:54.836 A:middle
this intuitive understanding of

00:24:54.836 --> 00:24:56.086 A:middle
the performance characteristics

00:24:56.086 --> 00:24:58.046 A:middle
around Auto Layout.

00:24:58.176 --> 00:24:59.296 A:middle
So quick review of what we

00:24:59.296 --> 00:24:59.746 A:middle
talked about.

00:25:00.226 --> 00:25:01.186 A:middle
Try not to churn your

00:25:01.186 --> 00:25:01.766 A:middle
constraints.

00:25:02.316 --> 00:25:03.036 A:middle
That's when you're doing all

00:25:03.036 --> 00:25:04.576 A:middle
this work that just doesn't

00:25:04.576 --> 00:25:04.826 A:middle
matter.

00:25:05.116 --> 00:25:05.686 A:middle
So don't do it.

00:25:06.326 --> 00:25:08.256 A:middle
When you do work with

00:25:08.256 --> 00:25:09.876 A:middle
constraints it's basic algebra

00:25:10.176 --> 00:25:11.566 A:middle
and that algebra is happening

00:25:11.566 --> 00:25:12.706 A:middle
when you add constraints, when

00:25:12.706 --> 00:25:14.586 A:middle
you remove constraints, when you

00:25:14.586 --> 00:25:16.706 A:middle
call set constant, that's the

00:25:16.706 --> 00:25:17.466 A:middle
primary times.

00:25:17.956 --> 00:25:20.956 A:middle
And then also, you know, when we

00:25:20.956 --> 00:25:22.196 A:middle
have this error minimization

00:25:22.746 --> 00:25:22.866 A:middle
phase.

00:25:23.436 --> 00:25:26.916 A:middle
The way to think about what Auto

00:25:26.916 --> 00:25:28.546 A:middle
Layout does is that it's a cash

00:25:28.546 --> 00:25:29.806 A:middle
for your layout, we saw the

00:25:29.806 --> 00:25:31.226 A:middle
engine sort of contains all

00:25:31.226 --> 00:25:33.016 A:middle
those solved values and it's a

00:25:33.016 --> 00:25:34.766 A:middle
dependency tracker so that when

00:25:34.766 --> 00:25:36.916 A:middle
things change we can update

00:25:37.066 --> 00:25:38.586 A:middle
those values in a super, super

00:25:38.586 --> 00:25:39.296 A:middle
targeted way.

00:25:39.896 --> 00:25:41.016 A:middle
Which leads to our last point,

00:25:41.186 --> 00:25:43.236 A:middle
which is that you only pay for

00:25:43.236 --> 00:25:44.216 A:middle
the features that you're using.

00:25:45.266 --> 00:25:46.916 A:middle
That's what we talked about.

00:25:47.276 --> 00:25:48.566 A:middle
You know, that's your intuition.

00:25:48.956 --> 00:25:51.186 A:middle
And for the rest of the talk I'm

00:25:51.186 --> 00:25:53.376 A:middle
going to turn it over to Kasia

00:25:53.376 --> 00:25:54.556 A:middle
because if you, again, if you

00:25:54.556 --> 00:25:55.916 A:middle
only rely on intuition, things

00:25:55.916 --> 00:25:56.586 A:middle
are not going to go well.

00:25:56.866 --> 00:25:58.336 A:middle
So she's now going to go into

00:25:58.336 --> 00:25:59.946 A:middle
some analysis, avoid we talked

00:25:59.946 --> 00:26:01.286 A:middle
about and putting that intuition

00:25:59.946 --> 00:26:01.286 A:middle
about and putting that intuition

00:26:01.286 --> 00:26:02.006 A:middle
into practice.

00:26:02.336 --> 00:26:03.926 A:middle
So please enjoy.

00:26:04.516 --> 00:26:11.546 A:middle
[ Applause ]

00:26:12.046 --> 00:26:12.846 A:middle
&gt;&gt; Ok let me get to my slide

00:26:12.846 --> 00:26:13.096 A:middle
here.

00:26:14.056 --> 00:26:14.586 A:middle
Thank you, Ken.

00:26:14.946 --> 00:26:15.696 A:middle
Hi everybody.

00:26:15.956 --> 00:26:17.246 A:middle
My name is Kasia Wawer.

00:26:17.796 --> 00:26:18.896 A:middle
I am a member of the iOS

00:26:18.896 --> 00:26:20.886 A:middle
Keyboards Team and we use Auto

00:26:20.886 --> 00:26:22.106 A:middle
Layout and we love it.

00:26:22.646 --> 00:26:24.006 A:middle
So I get to talk to all of you

00:26:24.006 --> 00:26:24.916 A:middle
about building efficient

00:26:24.916 --> 00:26:25.206 A:middle
layouts.

00:26:26.286 --> 00:26:27.056 A:middle
All right, let's go back to

00:26:27.056 --> 00:26:28.376 A:middle
Constraint Churn real quick

00:26:28.376 --> 00:26:28.586 A:middle
here.

00:26:29.116 --> 00:26:30.396 A:middle
Constraint churn as we heard

00:26:30.396 --> 00:26:31.876 A:middle
happens when you change your

00:26:31.876 --> 00:26:33.726 A:middle
constraints but the actual views

00:26:33.726 --> 00:26:35.396 A:middle
don't need to move so you're

00:26:35.396 --> 00:26:36.816 A:middle
sending extra work to the engine

00:26:37.276 --> 00:26:38.456 A:middle
and enough of that can affect

00:26:38.456 --> 00:26:39.106 A:middle
your performance.

00:26:39.106 --> 00:26:40.776 A:middle
So you tend to want to avoid it.

00:26:41.636 --> 00:26:43.646 A:middle
So let's talk about how you

00:26:43.646 --> 00:26:45.746 A:middle
might run into this problem and

00:26:45.746 --> 00:26:46.556 A:middle
how you might get out of it.

00:26:46.556 --> 00:26:48.386 A:middle
So we're going to work with a

00:26:48.386 --> 00:26:49.056 A:middle
spec here.

00:26:49.286 --> 00:26:50.586 A:middle
This is for a social media type

00:26:50.586 --> 00:26:50.866 A:middle
app.

00:26:51.586 --> 00:26:52.526 A:middle
There's an avatar view that

00:26:52.526 --> 00:26:53.566 A:middle
shows you who is sharing.

00:26:53.566 --> 00:26:56.336 A:middle
There's a title, a date, and a

00:26:56.336 --> 00:26:59.206 A:middle
log entry view and for that

00:26:59.206 --> 00:27:00.186 A:middle
you're going to need some

00:26:59.206 --> 00:27:00.186 A:middle
you're going to need some

00:27:00.186 --> 00:27:01.606 A:middle
spacing, you're going to need

00:27:01.606 --> 00:27:03.416 A:middle
some sizing and you're probably

00:27:03.416 --> 00:27:04.276 A:middle
going to need some alignment

00:27:04.366 --> 00:27:04.516 A:middle
too.

00:27:05.566 --> 00:27:08.036 A:middle
But this is actually not a pure

00:27:08.036 --> 00:27:08.946 A:middle
social media app.

00:27:09.266 --> 00:27:11.036 A:middle
It is a semi social media app,

00:27:11.476 --> 00:27:12.476 A:middle
where you can choose whether you

00:27:12.476 --> 00:27:13.276 A:middle
want to share things.

00:27:14.176 --> 00:27:15.986 A:middle
So there's also optionally a

00:27:15.986 --> 00:27:16.756 A:middle
view that says that you've

00:27:16.756 --> 00:27:17.846 A:middle
shared and who you've shared

00:27:17.846 --> 00:27:18.016 A:middle
with.

00:27:18.946 --> 00:27:20.376 A:middle
And no social media app would be

00:27:20.376 --> 00:27:22.166 A:middle
complete without the ability to

00:27:22.166 --> 00:27:23.036 A:middle
share cat pictures.

00:27:23.936 --> 00:27:24.896 A:middle
So that's another layout that

00:27:24.896 --> 00:27:25.846 A:middle
you might have to put in.

00:27:26.836 --> 00:27:28.326 A:middle
And maybe you don't even want to

00:27:28.326 --> 00:27:29.236 A:middle
share that cat picture because

00:27:29.236 --> 00:27:30.346 A:middle
it's just too good, you want to

00:27:30.346 --> 00:27:31.066 A:middle
keep it to yourself.

00:27:32.056 --> 00:27:33.586 A:middle
So we have four very similar

00:27:33.586 --> 00:27:33.976 A:middle
layouts.

00:27:34.626 --> 00:27:35.996 A:middle
They're not the same and there's

00:27:35.996 --> 00:27:36.776 A:middle
going to need to be some

00:27:36.776 --> 00:27:38.196 A:middle
adjustment when these table view

00:27:38.196 --> 00:27:39.306 A:middle
cells come on to the screen.

00:27:39.396 --> 00:27:40.396 A:middle
If I didn't mention it these are

00:27:40.396 --> 00:27:41.156 A:middle
in table view cells.

00:27:42.026 --> 00:27:43.406 A:middle
And let's say that you are

00:27:43.406 --> 00:27:45.236 A:middle
working on performance in this

00:27:45.236 --> 00:27:47.026 A:middle
app and you ran it for the first

00:27:47.026 --> 00:27:48.266 A:middle
time and this is the scrolling

00:27:48.266 --> 00:27:49.036 A:middle
performance you got.

00:27:49.386 --> 00:27:51.316 A:middle
And there are a lot of hiccups

00:27:51.316 --> 00:27:52.706 A:middle
there, especially on the scroll

00:27:52.706 --> 00:27:52.976 A:middle
back to top.

00:27:53.086 --> 00:27:55.666 A:middle
So you're like, OK, how do I

00:27:55.666 --> 00:27:57.026 A:middle
improve this app?

00:27:57.026 --> 00:27:57.716 A:middle
What's going on?

00:27:58.636 --> 00:28:00.986 A:middle
So I get to introduce something

00:27:58.636 --> 00:28:00.986 A:middle
So I get to introduce something

00:28:01.096 --> 00:28:02.406 A:middle
new today, a sneak peek into

00:28:02.406 --> 00:28:03.416 A:middle
something we're working on.

00:28:03.886 --> 00:28:05.096 A:middle
This is not actually available

00:28:05.096 --> 00:28:07.486 A:middle
in the beta but stay tuned

00:28:07.946 --> 00:28:08.886 A:middle
because we're going to be

00:28:08.886 --> 00:28:10.176 A:middle
introducing an instrument for

00:28:10.176 --> 00:28:10.386 A:middle
layout.

00:28:12.076 --> 00:28:12.796 A:middle
And, OK.

00:28:13.516 --> 00:28:18.716 A:middle
[ Applause ]

00:28:19.216 --> 00:28:20.086 A:middle
I'm glad you are excited.

00:28:20.606 --> 00:28:21.866 A:middle
That's good motivation.

00:28:22.576 --> 00:28:24.056 A:middle
Anyway, let's take a look at

00:28:24.106 --> 00:28:24.526 A:middle
what's here.

00:28:25.466 --> 00:28:27.186 A:middle
The top track is your standard

00:28:27.226 --> 00:28:28.856 A:middle
how much CPU is being used.

00:28:29.496 --> 00:28:30.646 A:middle
And this is sort of your canary

00:28:30.646 --> 00:28:31.556 A:middle
in the coalmine view.

00:28:31.756 --> 00:28:33.116 A:middle
If there are a lot of peaks here

00:28:33.446 --> 00:28:34.486 A:middle
you have an indication that you

00:28:34.486 --> 00:28:35.436 A:middle
might have something you need to

00:28:35.436 --> 00:28:36.846 A:middle
look at in your layout.

00:28:37.576 --> 00:28:38.686 A:middle
And if it's pretty flat,

00:28:39.166 --> 00:28:40.106 A:middle
probably your performance

00:28:40.106 --> 00:28:41.056 A:middle
problems are originating

00:28:41.056 --> 00:28:41.526 A:middle
somewhere else.

00:28:42.466 --> 00:28:43.906 A:middle
Below that we will be

00:28:43.906 --> 00:28:45.416 A:middle
specifically tracking constraint

00:28:45.416 --> 00:28:45.756 A:middle
churn.

00:28:46.446 --> 00:28:47.616 A:middle
The height of the bars in this

00:28:47.616 --> 00:28:49.846 A:middle
instance correspond to the

00:28:49.846 --> 00:28:51.196 A:middle
number of views that are

00:28:51.196 --> 00:28:52.596 A:middle
experiencing constraint churn.

00:28:53.506 --> 00:28:54.506 A:middle
So when you see a big piece

00:28:54.506 --> 00:28:55.736 A:middle
there you know a lot of views

00:28:55.736 --> 00:28:56.226 A:middle
are affected.

00:28:57.446 --> 00:28:59.456 A:middle
We're also going to show you how

00:28:59.456 --> 00:29:00.746 A:middle
to remove and change constraint

00:28:59.456 --> 00:29:00.746 A:middle
to remove and change constraint

00:29:01.776 --> 00:29:05.326 A:middle
instances and finally sizing for

00:29:05.326 --> 00:29:06.716 A:middle
UILabel and other text views.

00:29:06.906 --> 00:29:08.286 A:middle
This one says UILabel because

00:29:08.286 --> 00:29:09.156 A:middle
that's what's in this app.

00:29:09.956 --> 00:29:11.026 A:middle
It's also going to track other

00:29:11.026 --> 00:29:12.186 A:middle
types of text views as well.

00:29:13.786 --> 00:29:16.286 A:middle
So this was taken with that app

00:29:16.366 --> 00:29:18.556 A:middle
scrolling, so what do we look at

00:29:18.556 --> 00:29:18.816 A:middle
here?

00:29:19.206 --> 00:29:21.136 A:middle
There are several peaks in the

00:29:21.136 --> 00:29:24.236 A:middle
CPU view but let's zoom in on

00:29:24.236 --> 00:29:25.776 A:middle
this one because right below it

00:29:25.776 --> 00:29:27.106 A:middle
I see a big jump in constraint

00:29:27.106 --> 00:29:28.386 A:middle
churn and that's a little

00:29:28.386 --> 00:29:28.926 A:middle
concerning.

00:29:29.906 --> 00:29:31.396 A:middle
So if you highlight this view

00:29:31.526 --> 00:29:32.966 A:middle
and go down to the detailed view

00:29:33.666 --> 00:29:35.486 A:middle
in instruments, what you'll see

00:29:35.726 --> 00:29:36.846 A:middle
is a list of the views that are

00:29:36.846 --> 00:29:38.396 A:middle
affected by churn by view

00:29:38.396 --> 00:29:38.896 A:middle
description.

00:29:39.586 --> 00:29:40.556 A:middle
And we are grouping them by

00:29:40.556 --> 00:29:42.326 A:middle
Superview so that in an instance

00:29:42.326 --> 00:29:44.576 A:middle
of say Table View Cells, it's

00:29:44.576 --> 00:29:46.486 A:middle
easier to see that it's

00:29:46.486 --> 00:29:48.286 A:middle
happening over and over in a

00:29:48.286 --> 00:29:49.556 A:middle
specific context and not

00:29:49.556 --> 00:29:50.116 A:middle
different ones.

00:29:51.016 --> 00:29:52.536 A:middle
So in this instance we see that

00:29:52.536 --> 00:29:54.586 A:middle
the avatar view and three labels

00:29:54.966 --> 00:29:55.956 A:middle
are experiencing churn.

00:29:57.316 --> 00:29:59.646 A:middle
And since I am the one who ran

00:29:59.646 --> 00:30:01.696 A:middle
this through the instrument, I

00:29:59.646 --> 00:30:01.696 A:middle
this through the instrument, I

00:30:01.696 --> 00:30:02.386 A:middle
know that these labels

00:30:02.426 --> 00:30:03.876 A:middle
correspond to the Title Label,

00:30:03.876 --> 00:30:05.386 A:middle
Date Label, and our Log Entry

00:30:05.386 --> 00:30:05.686 A:middle
Label.

00:30:07.036 --> 00:30:08.516 A:middle
That's almost all of our views

00:30:08.516 --> 00:30:09.086 A:middle
in this cell.

00:30:09.086 --> 00:30:10.736 A:middle
That's a little concerning.

00:30:11.406 --> 00:30:12.136 A:middle
Let's see what happened.

00:30:13.766 --> 00:30:15.066 A:middle
All right, back to our spec

00:30:15.156 --> 00:30:15.376 A:middle
here.

00:30:16.326 --> 00:30:19.626 A:middle
So look into the code and find

00:30:19.666 --> 00:30:21.096 A:middle
that UpdateConstraints is being

00:30:21.096 --> 00:30:21.566 A:middle
overridden.

00:30:22.526 --> 00:30:24.876 A:middle
And in that method when anything

00:30:24.876 --> 00:30:25.956 A:middle
changes or when

00:30:25.956 --> 00:30:27.426 A:middle
UpdateConstraints runs at all,

00:30:27.896 --> 00:30:28.696 A:middle
we're removing all of the

00:30:28.696 --> 00:30:30.716 A:middle
constraints and then adding back

00:30:30.716 --> 00:30:32.056 A:middle
the ones that we think we still

00:30:32.056 --> 00:30:32.276 A:middle
need.

00:30:33.876 --> 00:30:35.956 A:middle
Well, everything landed back in

00:30:35.956 --> 00:30:37.206 A:middle
the same place where it started.

00:30:37.646 --> 00:30:39.436 A:middle
So that removal just is

00:30:39.436 --> 00:30:41.146 A:middle
contributing to performance

00:30:41.146 --> 00:30:41.516 A:middle
issues.

00:30:42.486 --> 00:30:44.986 A:middle
So in the instance of the social

00:30:44.986 --> 00:30:46.986 A:middle
label here, social avatar thing,

00:30:47.356 --> 00:30:49.176 A:middle
being added and removed, we

00:30:49.176 --> 00:30:50.076 A:middle
don't actually need to pull it

00:30:50.076 --> 00:30:50.626 A:middle
all the way out.

00:30:51.806 --> 00:30:52.856 A:middle
When you look at the constraints

00:30:52.856 --> 00:30:54.966 A:middle
around this view, you'll see

00:30:54.966 --> 00:30:56.036 A:middle
that they don't actually

00:30:56.036 --> 00:30:57.316 A:middle
interact with anything else,

00:30:57.876 --> 00:30:58.946 A:middle
just that particular view.

00:30:59.516 --> 00:31:01.156 A:middle
So here you can use, you know,

00:30:59.516 --> 00:31:01.156 A:middle
So here you can use, you know,

00:31:01.156 --> 00:31:03.366 A:middle
this neat little feature called

00:31:03.566 --> 00:31:04.816 A:middle
setHidden, maybe you've heard of

00:31:05.456 --> 00:31:05.536 A:middle
it.

00:31:05.656 --> 00:31:07.936 A:middle
And because it's not affecting

00:31:07.936 --> 00:31:09.686 A:middle
any of the views around it, it's

00:31:09.686 --> 00:31:10.626 A:middle
just going to disappear, it's

00:31:10.626 --> 00:31:11.866 A:middle
constraints stay in place and

00:31:11.866 --> 00:31:13.656 A:middle
this is a very, very, very cheap

00:31:14.136 --> 00:31:15.846 A:middle
way to hide and show views,

00:31:16.416 --> 00:31:17.476 A:middle
rather than removing them from

00:31:17.476 --> 00:31:18.036 A:middle
the hierarchy.

00:31:18.986 --> 00:31:19.736 A:middle
So that's fine.

00:31:20.246 --> 00:31:21.156 A:middle
But this is a really simple

00:31:21.156 --> 00:31:21.556 A:middle
example.

00:31:21.556 --> 00:31:22.546 A:middle
What about the image view?

00:31:23.016 --> 00:31:24.606 A:middle
All right, so for the image

00:31:24.606 --> 00:31:25.806 A:middle
view, again we might we might

00:31:25.806 --> 00:31:26.686 A:middle
want to try removing all

00:31:26.686 --> 00:31:28.176 A:middle
constraints and then adding back

00:31:28.626 --> 00:31:30.206 A:middle
the ones we already had plus the

00:31:30.206 --> 00:31:30.896 A:middle
image view ones.

00:31:31.816 --> 00:31:33.526 A:middle
And again, everything is landing

00:31:33.526 --> 00:31:34.446 A:middle
in the same place so we're

00:31:34.446 --> 00:31:35.356 A:middle
experiencing churn.

00:31:36.566 --> 00:31:37.776 A:middle
Well, in a situation like this

00:31:38.156 --> 00:31:39.326 A:middle
how I want you to think about it

00:31:39.326 --> 00:31:40.696 A:middle
is to look at groups of

00:31:40.696 --> 00:31:41.176 A:middle
constraints.

00:31:41.896 --> 00:31:43.446 A:middle
So let's start with this group

00:31:43.446 --> 00:31:44.366 A:middle
that I'm highlighting here in

00:31:44.366 --> 00:31:44.716 A:middle
green.

00:31:45.756 --> 00:31:48.256 A:middle
These constraints stay the same

00:31:48.446 --> 00:31:49.476 A:middle
in every one of our layouts.

00:31:50.466 --> 00:31:51.386 A:middle
Once we're doing the hide and

00:31:51.386 --> 00:31:53.286 A:middle
show on the sharing view that

00:31:53.286 --> 00:31:54.196 A:middle
doesn't need to change, the

00:31:54.196 --> 00:31:56.356 A:middle
avatar view never moves, and the

00:31:56.356 --> 00:31:59.006 A:middle
labels never move other than the

00:31:59.006 --> 00:32:00.346 A:middle
log entry label being able to

00:31:59.006 --> 00:32:00.346 A:middle
log entry label being able to

00:32:00.346 --> 00:32:00.806 A:middle
get longer.

00:32:01.616 --> 00:32:02.726 A:middle
So those green constraints

00:32:03.046 --> 00:32:04.866 A:middle
should be added when you create

00:32:04.866 --> 00:32:07.806 A:middle
the views and then left in

00:32:07.806 --> 00:32:08.206 A:middle
place.

00:32:08.566 --> 00:32:09.046 A:middle
Don't touch them.

00:32:09.276 --> 00:32:10.236 A:middle
They want to stay where they

00:32:10.236 --> 00:32:10.446 A:middle
are.

00:32:12.026 --> 00:32:13.646 A:middle
But now we have the four

00:32:13.646 --> 00:32:15.076 A:middle
constraints that are controlling

00:32:15.076 --> 00:32:15.586 A:middle
the image view.

00:32:15.846 --> 00:32:16.926 A:middle
So what do we do with those?

00:32:17.216 --> 00:32:17.916 A:middle
Well, let's stick them in an

00:32:17.916 --> 00:32:21.366 A:middle
array and let's also take the

00:32:21.366 --> 00:32:22.276 A:middle
constraints that are going to be

00:32:22.276 --> 00:32:23.746 A:middle
there when there's no image.

00:32:24.126 --> 00:32:25.246 A:middle
And I very creatively named

00:32:25.246 --> 00:32:26.416 A:middle
these imageConstraints and

00:32:26.416 --> 00:32:27.696 A:middle
noImageConstraints so you can

00:32:27.696 --> 00:32:28.526 A:middle
keep them apart.

00:32:29.216 --> 00:32:32.316 A:middle
And let's, when we're getting to

00:32:32.316 --> 00:32:33.456 A:middle
the point where we're going to

00:32:33.456 --> 00:32:34.526 A:middle
be putting in this image view or

00:32:34.526 --> 00:32:36.366 A:middle
taking it away, let's see what

00:32:36.366 --> 00:32:37.556 A:middle
layout we're currently in.

00:32:38.036 --> 00:32:38.666 A:middle
Deactivate the

00:32:38.666 --> 00:32:40.546 A:middle
noImageConstraints if we need to

00:32:41.086 --> 00:32:42.346 A:middle
and activate the ones for the

00:32:42.346 --> 00:32:42.776 A:middle
image.

00:32:43.786 --> 00:32:45.516 A:middle
If we don't have an image coming

00:32:45.516 --> 00:32:46.716 A:middle
in, you know, all of our other

00:32:46.716 --> 00:32:47.426 A:middle
constraints are already

00:32:47.426 --> 00:32:48.886 A:middle
activated, we just have the one

00:32:49.186 --> 00:32:49.846 A:middle
that we're adding.

00:32:50.176 --> 00:32:51.416 A:middle
Now I put these both in arrays

00:32:51.416 --> 00:32:52.456 A:middle
despite the fact that this is a

00:32:52.456 --> 00:32:53.936 A:middle
single constraint because it

00:32:53.936 --> 00:32:55.226 A:middle
simplifies things in my code.

00:32:55.756 --> 00:32:56.676 A:middle
I don't need to check and see

00:32:56.676 --> 00:32:57.486 A:middle
whether I'm dealing with an

00:32:57.486 --> 00:32:58.846 A:middle
array or a single constraint,

00:32:59.206 --> 00:33:00.226 A:middle
I'm always dealing with an array

00:32:59.206 --> 00:33:00.226 A:middle
I'm always dealing with an array

00:33:00.226 --> 00:33:00.846 A:middle
of constraints.

00:33:01.856 --> 00:33:02.666 A:middle
Your mileage may vary though.

00:33:03.526 --> 00:33:06.406 A:middle
So the nice thing about this is

00:33:06.406 --> 00:33:08.286 A:middle
that if you are tracking your

00:33:08.286 --> 00:33:09.766 A:middle
constraints properly like this

00:33:10.186 --> 00:33:11.716 A:middle
and you know that you want to

00:33:11.716 --> 00:33:13.276 A:middle
add this image view live in

00:33:13.276 --> 00:33:15.056 A:middle
front of the user, you can

00:33:15.056 --> 00:33:15.876 A:middle
deactivate these

00:33:15.876 --> 00:33:17.426 A:middle
noImageConstraints, activate the

00:33:17.426 --> 00:33:18.966 A:middle
ImageConstraints and call Layout

00:33:18.966 --> 00:33:20.326 A:middle
in needed inside a View

00:33:20.326 --> 00:33:22.026 A:middle
Animation block and it's going

00:33:22.026 --> 00:33:23.146 A:middle
to animate nicely into your

00:33:23.146 --> 00:33:23.416 A:middle
view.

00:33:24.126 --> 00:33:25.036 A:middle
If you tried to do this with

00:33:25.036 --> 00:33:25.996 A:middle
deactivating all of your

00:33:25.996 --> 00:33:26.886 A:middle
constraints and putting them

00:33:26.886 --> 00:33:29.236 A:middle
back in, it would look very

00:33:29.236 --> 00:33:29.796 A:middle
interesting.

00:33:29.986 --> 00:33:30.756 A:middle
Let's say it that way.

00:33:31.696 --> 00:33:33.006 A:middle
All right, so now that we've

00:33:33.006 --> 00:33:34.296 A:middle
debugged this and we're working

00:33:34.296 --> 00:33:35.266 A:middle
with groups of constraints

00:33:35.266 --> 00:33:36.536 A:middle
instead of throwing everything

00:33:36.536 --> 00:33:38.026 A:middle
at it, let's look at what it

00:33:38.026 --> 00:33:38.646 A:middle
will look like.

00:33:38.706 --> 00:33:39.376 A:middle
This is what it looked like

00:33:39.376 --> 00:33:40.566 A:middle
originally just to remind you.

00:33:41.706 --> 00:33:44.906 A:middle
Let's scroll to the top.

00:33:44.906 --> 00:33:45.216 A:middle
It's very bad.

00:33:45.216 --> 00:33:46.256 A:middle
And this is what it looks like

00:33:46.256 --> 00:33:48.876 A:middle
after we've debugged it.

00:33:48.966 --> 00:33:50.136 A:middle
And that is much smoother.

00:33:50.776 --> 00:33:51.676 A:middle
Thank you.

00:33:52.031 --> 00:33:54.031 A:middle
[ Applause ]

00:33:54.046 --> 00:33:54.986 A:middle
But wait there's more!

00:33:55.596 --> 00:33:57.206 A:middle
I actually took this video on

00:33:57.306 --> 00:33:57.936 A:middle
iOS 11.

00:33:57.936 --> 00:34:00.586 A:middle
This is not taking advantage of

00:33:57.936 --> 00:34:00.586 A:middle
This is not taking advantage of

00:34:00.586 --> 00:34:01.556 A:middle
any of our performance

00:34:01.556 --> 00:34:02.826 A:middle
improvements in iOS 12.

00:34:03.826 --> 00:34:05.376 A:middle
This is just the client code

00:34:06.366 --> 00:34:07.396 A:middle
doing things more efficiently.

00:34:07.396 --> 00:34:09.626 A:middle
In iOS12 it also looks great.

00:34:09.626 --> 00:34:13.416 A:middle
And of course fabulous

00:34:13.416 --> 00:34:14.016 A:middle
[laughing].

00:34:14.516 --> 00:34:16.556 A:middle
[ Applause ]

00:34:17.056 --> 00:34:17.446 A:middle
Yes, it's great.

00:34:20.396 --> 00:34:21.815 A:middle
So how do we avoid constraint

00:34:21.815 --> 00:34:22.106 A:middle
churn?

00:34:23.176 --> 00:34:24.545 A:middle
Well, avoid removing all of your

00:34:24.545 --> 00:34:25.106 A:middle
constraints.

00:34:25.106 --> 00:34:26.206 A:middle
That's usually going to put you

00:34:26.206 --> 00:34:27.406 A:middle
into a situation where you have

00:34:27.406 --> 00:34:29.036 A:middle
to put a bunch of them back and

00:34:29.036 --> 00:34:30.956 A:middle
that's going to land you in a

00:34:30.956 --> 00:34:32.596 A:middle
position where you're relaying

00:34:32.596 --> 00:34:33.626 A:middle
out frames that don't need to --

00:34:33.626 --> 00:34:34.795 A:middle
or relaying out views that don't

00:34:34.795 --> 00:34:35.636 A:middle
need to be laid out again.

00:34:36.866 --> 00:34:38.286 A:middle
If you have a set of constraints

00:34:38.315 --> 00:34:39.626 A:middle
that going to be common to all

00:34:39.626 --> 00:34:40.585 A:middle
of the potential layouts in your

00:34:40.585 --> 00:34:42.556 A:middle
app, add them one and then leave

00:34:42.556 --> 00:34:43.085 A:middle
them alone.

00:34:43.156 --> 00:34:44.295 A:middle
This is a good use for Interface

00:34:44.295 --> 00:34:45.326 A:middle
Builder and the initial layout

00:34:45.326 --> 00:34:46.916 A:middle
of your app.

00:34:46.916 --> 00:34:47.786 A:middle
Changes to the constraints that

00:34:47.786 --> 00:34:48.826 A:middle
need changing but don't change

00:34:48.826 --> 00:34:49.585 A:middle
the ones that don't need

00:34:49.585 --> 00:34:49.956 A:middle
changing.

00:34:50.886 --> 00:34:51.946 A:middle
Kind of tautological but it

00:34:52.295 --> 00:34:52.755 A:middle
seems good.

00:34:53.186 --> 00:34:54.606 A:middle
And then you have a neat trick

00:34:54.606 --> 00:34:56.786 A:middle
now for hiding views instead of

00:34:56.786 --> 00:34:58.086 A:middle
removing them when that makes

00:34:58.086 --> 00:34:58.436 A:middle
sense.

00:34:59.076 --> 00:35:00.096 A:middle
All right, so that was

00:34:59.076 --> 00:35:00.096 A:middle
All right, so that was

00:35:00.096 --> 00:35:01.026 A:middle
constraint churn in the

00:35:01.026 --> 00:35:01.546 A:middle
instrument.

00:35:01.626 --> 00:35:02.596 A:middle
We also have that view at the

00:35:02.596 --> 00:35:04.326 A:middle
bottom that said UILabel sizing.

00:35:05.236 --> 00:35:07.186 A:middle
UILabel sizing is tracking the

00:35:07.186 --> 00:35:08.246 A:middle
amount of time it takes for the

00:35:08.246 --> 00:35:09.926 A:middle
label to calculate its size.

00:35:10.226 --> 00:35:11.566 A:middle
So let's talk about intrinsic

00:35:11.566 --> 00:35:12.236 A:middle
content size.

00:35:12.566 --> 00:35:14.796 A:middle
I'm going to take a walk over

00:35:14.796 --> 00:35:15.036 A:middle
here.

00:35:15.886 --> 00:35:17.546 A:middle
OK, not all views actually need

00:35:17.896 --> 00:35:19.096 A:middle
intrinsic content size.

00:35:20.716 --> 00:35:21.426 A:middle
Some views do.

00:35:21.836 --> 00:35:24.076 A:middle
Views with non-view content like

00:35:24.076 --> 00:35:25.276 A:middle
to return a size for their

00:35:25.276 --> 00:35:26.936 A:middle
intrinsic content size based on

00:35:26.936 --> 00:35:28.086 A:middle
that non-view content.

00:35:28.486 --> 00:35:30.126 A:middle
Two examples of this are

00:35:30.126 --> 00:35:32.156 A:middle
UIImageView, which uses the size

00:35:32.156 --> 00:35:33.826 A:middle
of its image to calculate its

00:35:33.826 --> 00:35:36.036 A:middle
intrinsic content size and

00:35:36.036 --> 00:35:38.116 A:middle
UILabel, which measures its text

00:35:38.576 --> 00:35:39.976 A:middle
and uses that to return its

00:35:39.976 --> 00:35:41.056 A:middle
intrinsic content size.

00:35:41.636 --> 00:35:43.666 A:middle
There's nothing really magical

00:35:43.666 --> 00:35:45.076 A:middle
about intrinsic content size,

00:35:45.486 --> 00:35:47.286 A:middle
it's used to create constraints

00:35:47.286 --> 00:35:47.856 A:middle
by UIView.

00:35:48.486 --> 00:35:49.886 A:middle
It makes sizing constraints for

00:35:49.886 --> 00:35:50.886 A:middle
you and that's it.

00:35:51.596 --> 00:35:52.476 A:middle
You can define all of your

00:35:52.476 --> 00:35:54.106 A:middle
sizing in constraints yourself

00:35:54.576 --> 00:35:55.576 A:middle
and skip this whole thing.

00:35:56.436 --> 00:35:57.496 A:middle
There are a few circumstances

00:35:57.496 --> 00:35:58.646 A:middle
where it needs to be overridden,

00:35:58.646 --> 00:36:00.026 A:middle
that's what it's there, as we

00:35:58.646 --> 00:36:00.026 A:middle
that's what it's there, as we

00:36:00.026 --> 00:36:01.156 A:middle
saw there are these couple of

00:36:01.156 --> 00:36:02.586 A:middle
things plus some other examples

00:36:02.586 --> 00:36:03.776 A:middle
in UIView subclasses.

00:36:04.346 --> 00:36:05.786 A:middle
But a lot of the times it gets

00:36:05.786 --> 00:36:07.026 A:middle
overridden because the

00:36:07.026 --> 00:36:07.986 A:middle
assumption that it's either

00:36:07.986 --> 00:36:10.136 A:middle
faster or more exact and it is

00:36:10.136 --> 00:36:10.946 A:middle
neither of those things.

00:36:12.076 --> 00:36:14.546 A:middle
However, there is a circumstance

00:36:14.546 --> 00:36:15.846 A:middle
where overriding it might help

00:36:15.846 --> 00:36:16.506 A:middle
your performance.

00:36:18.206 --> 00:36:19.406 A:middle
Text measurement can be

00:36:19.406 --> 00:36:19.926 A:middle
expensive.

00:36:21.186 --> 00:36:24.106 A:middle
In our app here the UILabel

00:36:24.106 --> 00:36:25.626 A:middle
sizing did not take very long.

00:36:25.716 --> 00:36:27.386 A:middle
It was very short durations.

00:36:27.826 --> 00:36:28.986 A:middle
So messing around with that is

00:36:28.986 --> 00:36:29.766 A:middle
not going to improve the

00:36:29.766 --> 00:36:31.096 A:middle
performance of that that much.

00:36:31.666 --> 00:36:32.956 A:middle
But if you have a text intensive

00:36:32.956 --> 00:36:34.586 A:middle
app and you're seeing a lot of

00:36:34.586 --> 00:36:36.106 A:middle
time happening in the UILabel

00:36:36.106 --> 00:36:37.886 A:middle
text measurement or you have

00:36:37.886 --> 00:36:38.936 A:middle
text view text measurement or

00:36:39.066 --> 00:36:39.956 A:middle
whatever else you're using, you

00:36:40.386 --> 00:36:42.136 A:middle
might be able to help it along

00:36:42.136 --> 00:36:43.026 A:middle
if you have some additional

00:36:43.026 --> 00:36:43.566 A:middle
information.

00:36:45.116 --> 00:36:46.296 A:middle
If you know the size that the

00:36:46.296 --> 00:36:47.886 A:middle
text needs to be without doing

00:36:47.886 --> 00:36:49.696 A:middle
all that text measurement, you

00:36:49.696 --> 00:36:50.746 A:middle
can return that size and

00:36:50.746 --> 00:36:53.916 A:middle
intrinsic content size, or if

00:36:53.916 --> 00:36:55.286 A:middle
when you're going to be putting

00:36:55.286 --> 00:36:56.726 A:middle
this view on the screen the

00:36:56.726 --> 00:36:57.546 A:middle
constraints are going to be

00:36:57.546 --> 00:36:58.706 A:middle
fully defining the size

00:36:58.776 --> 00:36:59.976 A:middle
regardless of the size of the

00:37:00.046 --> 00:37:00.846 A:middle
text inside of it.

00:37:00.946 --> 00:37:02.306 A:middle
For instance, the constraints

00:37:02.306 --> 00:37:03.156 A:middle
are always going to make it

00:37:03.156 --> 00:37:04.316 A:middle
larger than the amount of text

00:37:04.316 --> 00:37:04.706 A:middle
you have.

00:37:05.546 --> 00:37:06.586 A:middle
Then you can go ahead and return

00:37:06.586 --> 00:37:07.996 A:middle
no intrinsic metric for the

00:37:07.996 --> 00:37:09.716 A:middle
width and height in intrinsic

00:37:09.716 --> 00:37:10.446 A:middle
content size.

00:37:11.146 --> 00:37:12.206 A:middle
And what this will do is tell

00:37:12.206 --> 00:37:13.486 A:middle
the parent, hey I already have

00:37:13.486 --> 00:37:15.206 A:middle
my size, don't bother to do the

00:37:15.276 --> 00:37:15.846 A:middle
text measurement.

00:37:16.826 --> 00:37:18.226 A:middle
So obviously this only works if

00:37:18.226 --> 00:37:19.096 A:middle
you're not trying to detect

00:37:19.096 --> 00:37:21.826 A:middle
measurement yourself, but it can

00:37:21.826 --> 00:37:23.136 A:middle
help some apps improve their

00:37:23.136 --> 00:37:23.646 A:middle
performance.

00:37:23.646 --> 00:37:24.886 A:middle
So I wanted you to know that

00:37:24.886 --> 00:37:26.016 A:middle
this little trick exists.

00:37:26.766 --> 00:37:27.766 A:middle
And we can't talk about

00:37:27.766 --> 00:37:29.116 A:middle
intrinsic content size without

00:37:29.116 --> 00:37:30.566 A:middle
talking about system layout size

00:37:30.566 --> 00:37:33.326 A:middle
fitting size because people

00:37:33.326 --> 00:37:35.666 A:middle
often conflate the two even

00:37:35.666 --> 00:37:36.196 A:middle
though they're kind of

00:37:36.196 --> 00:37:37.846 A:middle
opposites, so that's kind of

00:37:37.846 --> 00:37:39.376 A:middle
unfortunate.

00:37:39.376 --> 00:37:41.456 A:middle
Intrinsic content size is a way

00:37:41.456 --> 00:37:42.446 A:middle
that you communicate size

00:37:42.446 --> 00:37:43.866 A:middle
information to be put into the

00:37:43.866 --> 00:37:44.226 A:middle
engine.

00:37:45.206 --> 00:37:46.796 A:middle
System Layout Size Fitting Size

00:37:47.156 --> 00:37:48.206 A:middle
is a way that you get sizing

00:37:48.206 --> 00:37:49.456 A:middle
information back out of the

00:37:49.456 --> 00:37:49.826 A:middle
engine.

00:37:50.356 --> 00:37:51.276 A:middle
They're actually kind of

00:37:51.816 --> 00:37:52.486 A:middle
opposites.

00:37:52.486 --> 00:37:54.696 A:middle
So this is used in sort of mixed

00:37:54.696 --> 00:37:56.086 A:middle
layouts where there's some

00:37:56.086 --> 00:37:57.136 A:middle
reason that you need frame

00:37:57.136 --> 00:37:58.816 A:middle
information from a view that

00:37:58.816 --> 00:38:00.236 A:middle
manages its subviews using Auto

00:37:58.816 --> 00:38:00.236 A:middle
manages its subviews using Auto

00:38:00.236 --> 00:38:00.576 A:middle
Layout.

00:38:01.876 --> 00:38:03.616 A:middle
Not very frequent usage but is

00:38:03.616 --> 00:38:05.306 A:middle
there and can be used.

00:38:05.696 --> 00:38:07.346 A:middle
I want to tell you how this

00:38:07.346 --> 00:38:09.096 A:middle
method works because it might be

00:38:09.096 --> 00:38:10.066 A:middle
a little more expensive than you

00:38:10.066 --> 00:38:10.306 A:middle
think.

00:38:11.736 --> 00:38:13.046 A:middle
When you call System Layout Size

00:38:13.046 --> 00:38:14.926 A:middle
Fitting Size an engine is

00:38:14.966 --> 00:38:15.386 A:middle
created.

00:38:16.086 --> 00:38:17.006 A:middle
Constraints are added to this

00:38:17.006 --> 00:38:18.886 A:middle
engine, the layout is solved,

00:38:19.536 --> 00:38:21.206 A:middle
and then the size of the top

00:38:21.206 --> 00:38:23.546 A:middle
views frame is returned, and

00:38:23.546 --> 00:38:24.666 A:middle
then the engine gets discarded.

00:38:25.706 --> 00:38:26.646 A:middle
So each time you call this

00:38:26.646 --> 00:38:27.916 A:middle
method an engine is being

00:38:27.916 --> 00:38:28.946 A:middle
created and discarded.

00:38:29.856 --> 00:38:31.386 A:middle
While this is fine for small

00:38:31.386 --> 00:38:33.006 A:middle
uses, if you're doing it a lot

00:38:33.286 --> 00:38:34.306 A:middle
you can see how it might start

00:38:34.306 --> 00:38:35.486 A:middle
to build up over time.

00:38:35.706 --> 00:38:37.336 A:middle
So be cautious when calling

00:38:37.336 --> 00:38:38.616 A:middle
System Layout Size Fitting Size.

00:38:39.636 --> 00:38:41.486 A:middle
One of the uses that we

00:38:41.486 --> 00:38:42.956 A:middle
sometimes see people do is

00:38:42.996 --> 00:38:44.646 A:middle
forwarding that call from their

00:38:44.646 --> 00:38:45.886 A:middle
self-sizing collection or table

00:38:45.886 --> 00:38:47.636 A:middle
view cell to a content view.

00:38:47.896 --> 00:38:49.186 A:middle
And when you do that you're

00:38:49.186 --> 00:38:50.326 A:middle
actually overriding some

00:38:50.326 --> 00:38:51.886 A:middle
optimizations we've made to make

00:38:51.886 --> 00:38:53.026 A:middle
that scrolling, scrolling in

00:38:53.026 --> 00:38:54.716 A:middle
that view faster and you're

00:38:54.716 --> 00:38:55.706 A:middle
adding extra engines.

00:38:56.026 --> 00:38:57.086 A:middle
So if you're currently doing

00:38:57.086 --> 00:38:58.106 A:middle
that and your scrolling is no

00:38:58.106 --> 00:38:59.946 A:middle
good, maybe look into that.

00:39:01.026 --> 00:39:02.266 A:middle
All right, now we come to my

00:39:02.266 --> 00:39:03.126 A:middle
very favorite topic in the

00:39:03.126 --> 00:39:03.366 A:middle
world.

00:39:03.836 --> 00:39:05.216 A:middle
Unsatisfiable Constraints.

00:39:06.226 --> 00:39:09.526 A:middle
OK, so what are unsatisfiable

00:39:09.526 --> 00:39:10.146 A:middle
constraints?

00:39:10.226 --> 00:39:11.116 A:middle
If you haven't run into this

00:39:11.116 --> 00:39:13.216 A:middle
before, this is what happens

00:39:13.216 --> 00:39:14.856 A:middle
when you do something like, hey

00:39:15.396 --> 00:39:16.806 A:middle
this view should be 50 points

00:39:16.806 --> 00:39:18.486 A:middle
wide, also it should be 200

00:39:18.486 --> 00:39:18.936 A:middle
points wide.

00:39:19.836 --> 00:39:21.356 A:middle
Well, that's not really going to

00:39:21.356 --> 00:39:21.606 A:middle
work.

00:39:21.976 --> 00:39:23.686 A:middle
These are not actually quantum

00:39:23.686 --> 00:39:24.116 A:middle
phones.

00:39:25.276 --> 00:39:26.436 A:middle
You know, I can't speak to the

00:39:26.436 --> 00:39:30.696 A:middle
future but so the engine has to

00:39:30.696 --> 00:39:31.876 A:middle
kind of calculate the fact that

00:39:31.876 --> 00:39:33.906 A:middle
there's no layout available and

00:39:33.906 --> 00:39:35.566 A:middle
break a constraint in order to

00:39:35.956 --> 00:39:37.386 A:middle
generate some sort of layout for

00:39:37.386 --> 00:39:37.556 A:middle
you.

00:39:38.536 --> 00:39:39.626 A:middle
When it breaks that constraint

00:39:40.246 --> 00:39:42.026 A:middle
it sends a very detailed log to

00:39:42.386 --> 00:39:43.496 A:middle
your debugger, possibly you've

00:39:43.496 --> 00:39:46.026 A:middle
seen it, that says, hey

00:39:46.026 --> 00:39:47.316 A:middle
unsatisfiable constraints.

00:39:47.636 --> 00:39:48.476 A:middle
Here's the constraint that I

00:39:48.476 --> 00:39:49.876 A:middle
broke and here's all the other

00:39:49.876 --> 00:39:51.476 A:middle
ones that affected, that caused

00:39:51.476 --> 00:39:52.186 A:middle
me to have to break it.

00:39:53.146 --> 00:39:54.836 A:middle
So this can sometimes affect

00:39:55.366 --> 00:39:56.856 A:middle
performance directly and it can

00:39:56.856 --> 00:39:57.986 A:middle
also mask other issues.

00:39:57.986 --> 00:39:59.186 A:middle
So it's a good idea to get them

00:39:59.186 --> 00:39:59.596 A:middle
debugged.

00:40:00.206 --> 00:40:01.346 A:middle
And Mysteries of Auto Layout,

00:40:01.346 --> 00:40:02.756 A:middle
Part 2, had some good debugging

00:40:02.756 --> 00:40:04.566 A:middle
information so you might be

00:40:04.566 --> 00:40:05.706 A:middle
interested in checking that out

00:40:05.936 --> 00:40:06.786 A:middle
if you have been having trouble

00:40:06.786 --> 00:40:07.676 A:middle
with your unsatisfiable

00:40:07.676 --> 00:40:08.236 A:middle
constraints.

00:40:09.806 --> 00:40:11.556 A:middle
OK, guys you've graduated.

00:40:11.556 --> 00:40:12.346 A:middle
Congratulations.

00:40:12.346 --> 00:40:13.946 A:middle
You are all Auto Layout experts

00:40:14.746 --> 00:40:16.626 A:middle
and, you know, I hope that you

00:40:16.626 --> 00:40:17.856 A:middle
really enjoyed learning about

00:40:17.856 --> 00:40:19.236 A:middle
the internals of how it works.

00:40:19.866 --> 00:40:21.736 A:middle
Now you know better how to think

00:40:21.736 --> 00:40:23.056 A:middle
before you update constraints

00:40:23.256 --> 00:40:24.416 A:middle
and understand the process they

00:40:24.416 --> 00:40:25.826 A:middle
go through, you've got some

00:40:25.826 --> 00:40:27.916 A:middle
tuning information with size and

00:40:27.916 --> 00:40:29.846 A:middle
priority and inequality, and you

00:40:29.846 --> 00:40:32.056 A:middle
have faster layouts in iOS 12 so

00:40:32.056 --> 00:40:32.726 A:middle
that's awesome.

00:40:33.416 --> 00:40:34.426 A:middle
We're going to be in the Labs

00:40:34.496 --> 00:40:35.886 A:middle
tomorrow if anybody has

00:40:35.926 --> 00:40:36.386 A:middle
questions.

00:40:37.006 --> 00:40:38.406 A:middle
And we've got the link here for

00:40:38.406 --> 00:40:39.696 A:middle
information in related sessions.

00:40:40.286 --> 00:40:40.976 A:middle
Enjoy the rest of your week.

00:40:41.516 --> 00:40:45.500 A:middle
[ Applause ]
