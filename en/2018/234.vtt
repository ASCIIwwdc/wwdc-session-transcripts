WEBVTT

00:00:07.516 --> 00:00:15.500 A:middle
[ Music ]

00:00:21.516 --> 00:00:24.546 A:middle
[ Applause ]

00:00:25.046 --> 00:00:27.986 A:middle
&gt;&gt; Good afternoon, everyone.

00:00:29.536 --> 00:00:30.756 A:middle
Good af-- alright.

00:00:31.116 --> 00:00:32.896 A:middle
I hope you've been enjoying WWDC

00:00:32.936 --> 00:00:33.356 A:middle
so far.

00:00:33.356 --> 00:00:34.636 A:middle
I know it's been an exciting

00:00:34.636 --> 00:00:36.336 A:middle
week filled with announcements,

00:00:36.336 --> 00:00:38.136 A:middle
features, updates, developer

00:00:38.136 --> 00:00:38.496 A:middle
tools.

00:00:39.196 --> 00:00:41.706 A:middle
My name is Shloka Kini, and I

00:00:41.706 --> 00:00:43.256 A:middle
work in developer publications,

00:00:43.256 --> 00:00:46.066 A:middle
which means-- to borrow a phrase

00:00:46.066 --> 00:00:48.246 A:middle
from Cardi B., I don't just code

00:00:48.246 --> 00:00:48.976 A:middle
now, I write docs too.

00:00:49.516 --> 00:00:51.886 A:middle
[ Laughter ]

00:00:52.386 --> 00:00:53.896 A:middle
Specifically, the docs that'll

00:00:53.896 --> 00:00:55.606 A:middle
help you to write amazing

00:00:55.606 --> 00:00:56.286 A:middle
applications.

00:00:57.476 --> 00:00:58.956 A:middle
Today, I'm privileged to call

00:00:58.956 --> 00:01:00.606 A:middle
out some great features in

00:00:58.956 --> 00:01:00.606 A:middle
out some great features in

00:01:00.606 --> 00:01:01.596 A:middle
Safari and WebKit.

00:01:01.756 --> 00:01:03.486 A:middle
So, if you develop websites, and

00:01:03.486 --> 00:01:05.385 A:middle
want to make use of the latest

00:01:05.385 --> 00:01:06.926 A:middle
web technologies, and the latest

00:01:06.926 --> 00:01:08.836 A:middle
versions of Safari, this talk is

00:01:08.836 --> 00:01:09.336 A:middle
for you.

00:01:09.816 --> 00:01:10.706 A:middle
And, if you're a native app

00:01:10.866 --> 00:01:12.426 A:middle
developer that uses web views,

00:01:12.496 --> 00:01:14.876 A:middle
or extensions developers, this

00:01:14.876 --> 00:01:15.856 A:middle
talk is for you, too.

00:01:16.376 --> 00:01:17.486 A:middle
And, even if you're not in any

00:01:17.486 --> 00:01:18.476 A:middle
of these categories, you should

00:01:18.476 --> 00:01:20.136 A:middle
still stick around, because the

00:01:20.136 --> 00:01:21.726 A:middle
latest version of Safari has

00:01:21.726 --> 00:01:23.036 A:middle
some great features that will

00:01:23.036 --> 00:01:23.906 A:middle
improve your browsing

00:01:23.906 --> 00:01:24.466 A:middle
experience.

00:01:25.226 --> 00:01:28.076 A:middle
Now, there've been a lot-- a

00:01:28.076 --> 00:01:29.936 A:middle
lot-- of new improvements since

00:01:29.936 --> 00:01:31.256 A:middle
we last had a What's New talk.

00:01:31.256 --> 00:01:32.626 A:middle
But, today I'm going to

00:01:32.626 --> 00:01:34.046 A:middle
highlight a few that can really

00:01:34.046 --> 00:01:35.936 A:middle
help you get secure, performant

00:01:36.956 --> 00:01:38.156 A:middle
apps, and use the latest web

00:01:38.156 --> 00:01:39.236 A:middle
technologies for a rich

00:01:39.236 --> 00:01:39.986 A:middle
experience.

00:01:40.266 --> 00:01:41.316 A:middle
And, many of them you can get

00:01:41.316 --> 00:01:41.766 A:middle
for free.

00:01:42.476 --> 00:01:43.986 A:middle
So, let's kick things off with

00:01:43.986 --> 00:01:44.616 A:middle
security.

00:01:44.926 --> 00:01:45.956 A:middle
And, a few announcements.

00:01:49.166 --> 00:01:49.496 A:middle
WKWebView.

00:01:49.496 --> 00:01:50.156 A:middle
Now, I know what you're

00:01:50.156 --> 00:01:50.856 A:middle
thinking.

00:01:50.956 --> 00:01:53.096 A:middle
WKWebView has been around since

00:01:53.096 --> 00:01:57.956 A:middle
2014, so it's not technically

00:01:57.956 --> 00:01:58.086 A:middle
new.

00:01:58.786 --> 00:02:00.316 A:middle
However, it's worth mentioning

00:01:58.786 --> 00:02:00.316 A:middle
However, it's worth mentioning

00:02:00.316 --> 00:02:02.026 A:middle
again because we are now

00:02:02.026 --> 00:02:03.636 A:middle
officially deprecating

00:02:03.636 --> 00:02:03.976 A:middle
UIWebView.

00:02:04.516 --> 00:02:08.996 A:middle
[ Applause ]

00:02:09.496 --> 00:02:10.806 A:middle
So, if you're starting a new

00:02:10.806 --> 00:02:12.486 A:middle
app, or a new project, and would

00:02:12.486 --> 00:02:13.996 A:middle
like to display web content

00:02:13.996 --> 00:02:16.346 A:middle
that's not easily put into a

00:02:16.346 --> 00:02:18.426 A:middle
native view, use the WKWebView.

00:02:18.916 --> 00:02:20.196 A:middle
And, even if you've used

00:02:20.196 --> 00:02:21.806 A:middle
UIWebView in the past, switching

00:02:21.806 --> 00:02:22.936 A:middle
might be easy for you.

00:02:23.516 --> 00:02:24.856 A:middle
It can definitely save you time

00:02:24.856 --> 00:02:25.916 A:middle
in development, if you're

00:02:25.916 --> 00:02:27.596 A:middle
developing apps for both macOS

00:02:27.596 --> 00:02:30.426 A:middle
and iOS, because WKWebView works

00:02:30.586 --> 00:02:31.796 A:middle
on both platforms.

00:02:32.216 --> 00:02:34.396 A:middle
Unlike UIWebView for iOS, and

00:02:34.476 --> 00:02:35.336 A:middle
WebView for macOS.

00:02:35.336 --> 00:02:37.396 A:middle
So, you can share a lot of code

00:02:37.396 --> 00:02:38.526 A:middle
between the two versions.

00:02:39.926 --> 00:02:41.946 A:middle
WKWebView also runs in a

00:02:41.946 --> 00:02:43.436 A:middle
completely separate process from

00:02:43.436 --> 00:02:44.646 A:middle
the rest of your app.

00:02:44.766 --> 00:02:46.936 A:middle
So, unlike UIWebView, even if

00:02:46.936 --> 00:02:48.746 A:middle
your web process is compromised,

00:02:49.086 --> 00:02:50.816 A:middle
it won't compromise your app.

00:02:50.816 --> 00:02:52.386 A:middle
If your web view has complex

00:02:52.456 --> 00:02:54.576 A:middle
content, you can't accidentally

00:02:54.576 --> 00:02:55.766 A:middle
cause your app to stall.

00:02:56.296 --> 00:02:58.626 A:middle
And, even if WKWebView crashes,

00:02:59.726 --> 00:03:01.326 A:middle
it's confined to the web view,

00:02:59.726 --> 00:03:01.326 A:middle
it's confined to the web view,

00:03:01.796 --> 00:03:03.596 A:middle
not the app.

00:03:03.596 --> 00:03:05.816 A:middle
WKWebView can provide security

00:03:05.816 --> 00:03:07.536 A:middle
benefits while keeping your apps

00:03:07.586 --> 00:03:08.936 A:middle
performant and reliable.

00:03:09.466 --> 00:03:10.696 A:middle
So, whether it's hard or easy,

00:03:10.696 --> 00:03:12.546 A:middle
the benefits you get using

00:03:12.546 --> 00:03:14.766 A:middle
WKWebView are worth the switch.

00:03:15.316 --> 00:03:18.556 A:middle
The next announcement involves

00:03:18.756 --> 00:03:20.946 A:middle
extensions, but extending

00:03:20.946 --> 00:03:24.476 A:middle
Safari-- I mean, it's evolved a

00:03:24.576 --> 00:03:25.716 A:middle
lot over the years.

00:03:26.446 --> 00:03:27.736 A:middle
So, let me start with a quick

00:03:27.736 --> 00:03:30.806 A:middle
recap of the history of Safari

00:03:30.806 --> 00:03:31.336 A:middle
extensions.

00:03:32.116 --> 00:03:34.066 A:middle
Now, in 2010, before we had a

00:03:34.246 --> 00:03:35.496 A:middle
platform concept of app

00:03:35.646 --> 00:03:38.116 A:middle
extensibility, we had legacy

00:03:38.246 --> 00:03:39.486 A:middle
Safari extensions.

00:03:40.106 --> 00:03:42.096 A:middle
Now, these were the Safari EXTZ

00:03:42.096 --> 00:03:43.876 A:middle
files you could build in Safari

00:03:43.876 --> 00:03:44.816 A:middle
Extensions Builder.

00:03:45.266 --> 00:03:46.216 A:middle
They could be distributed

00:03:46.216 --> 00:03:47.466 A:middle
through the Safari Extensions

00:03:47.466 --> 00:03:49.116 A:middle
Gallery, or in some unusual

00:03:49.116 --> 00:03:51.036 A:middle
cases, by developers directly.

00:03:51.986 --> 00:03:53.476 A:middle
These legacy extensions were

00:03:53.476 --> 00:03:55.216 A:middle
incredibly powerful, because

00:03:55.256 --> 00:03:56.666 A:middle
they had access to all your

00:03:56.666 --> 00:03:59.056 A:middle
browsing data, which made them

00:03:59.056 --> 00:04:00.896 A:middle
popular, especially for fraud

00:03:59.056 --> 00:04:00.896 A:middle
popular, especially for fraud

00:04:00.896 --> 00:04:01.406 A:middle
and malware.

00:04:02.236 --> 00:04:03.556 A:middle
We needed to create a safeguard,

00:04:03.556 --> 00:04:04.876 A:middle
so that's why we didn't just

00:04:04.876 --> 00:04:06.546 A:middle
leave it at these Legacy Safari

00:04:06.546 --> 00:04:07.136 A:middle
Extensions.

00:04:07.136 --> 00:04:09.046 A:middle
So, the next milestone in our

00:04:09.046 --> 00:04:12.036 A:middle
story came in 2014, when we

00:04:12.036 --> 00:04:13.976 A:middle
introduced app extensibility for

00:04:13.976 --> 00:04:15.536 A:middle
macOS and iOS.

00:04:15.756 --> 00:04:18.875 A:middle
App extensions, though, are a

00:04:18.875 --> 00:04:22.106 A:middle
way to extend apps, not Safari.

00:04:22.336 --> 00:04:24.126 A:middle
However, this move greatly

00:04:24.126 --> 00:04:25.436 A:middle
changed how we thought about

00:04:25.436 --> 00:04:26.996 A:middle
extensions in Apple platforms.

00:04:27.486 --> 00:04:29.096 A:middle
Here, you could clearly extend

00:04:29.096 --> 00:04:30.306 A:middle
the system while users are

00:04:30.346 --> 00:04:32.356 A:middle
interacting with other apps.

00:04:32.356 --> 00:04:33.616 A:middle
And, like apps, they could be

00:04:33.616 --> 00:04:34.496 A:middle
built in Xcode.

00:04:35.236 --> 00:04:36.196 A:middle
Because of this better

00:04:36.196 --> 00:04:37.936 A:middle
extensions model, we wanted to

00:04:37.936 --> 00:04:39.226 A:middle
apply some of these concepts

00:04:39.516 --> 00:04:41.656 A:middle
back to those legacy Safari

00:04:41.656 --> 00:04:43.836 A:middle
extensions, and at the time, the

00:04:43.836 --> 00:04:45.116 A:middle
most popular ones were

00:04:45.176 --> 00:04:45.986 A:middle
adblockers.

00:04:46.596 --> 00:04:48.506 A:middle
So, we introduced content

00:04:48.506 --> 00:04:50.306 A:middle
blockers in 2015.

00:04:51.046 --> 00:04:52.506 A:middle
Content blockers were a type of

00:04:52.506 --> 00:04:54.446 A:middle
app extension built in Xcode,

00:04:54.556 --> 00:04:56.236 A:middle
that worked on both macOS and

00:04:56.236 --> 00:04:56.466 A:middle
iOS.

00:04:57.106 --> 00:04:58.386 A:middle
They have a special architecture

00:04:58.386 --> 00:04:59.086 A:middle
that makes them fast.

00:04:59.786 --> 00:05:01.646 A:middle
So, any content blocker is

00:04:59.786 --> 00:05:01.646 A:middle
So, any content blocker is

00:05:01.646 --> 00:05:03.176 A:middle
faster at blocking than any

00:05:03.176 --> 00:05:04.606 A:middle
legacy Safari extension.

00:05:05.376 --> 00:05:06.456 A:middle
They don't have the power to

00:05:06.556 --> 00:05:08.236 A:middle
slow down browsing, and they're

00:05:08.286 --> 00:05:09.906 A:middle
private, because the extensions

00:05:09.906 --> 00:05:11.666 A:middle
never see what web pages your

00:05:11.666 --> 00:05:12.386 A:middle
users visit.

00:05:13.296 --> 00:05:14.876 A:middle
And, by this point, the app

00:05:14.876 --> 00:05:16.516 A:middle
extension model offered so many

00:05:16.516 --> 00:05:17.976 A:middle
performance benefits we thought,

00:05:18.316 --> 00:05:19.536 A:middle
maybe we can bring all these

00:05:19.536 --> 00:05:20.996 A:middle
concepts back to the legacy

00:05:20.996 --> 00:05:22.686 A:middle
Safari extensions, so we can get

00:05:22.686 --> 00:05:23.946 A:middle
the best of both worlds.

00:05:24.896 --> 00:05:26.416 A:middle
An extension that extends

00:05:26.416 --> 00:05:28.956 A:middle
Safari's functionality, but also

00:05:28.956 --> 00:05:30.866 A:middle
extends your app to talk to

00:05:30.866 --> 00:05:31.276 A:middle
Safari.

00:05:31.276 --> 00:05:34.666 A:middle
So, in 2016, the modern Safari

00:05:34.666 --> 00:05:36.076 A:middle
app extensions for macOS were

00:05:36.076 --> 00:05:37.016 A:middle
introduced.

00:05:37.186 --> 00:05:39.066 A:middle
A way to extend Safari that

00:05:39.066 --> 00:05:40.296 A:middle
could be built in Xcode.

00:05:40.726 --> 00:05:42.236 A:middle
And, unlike previous extensions,

00:05:42.456 --> 00:05:43.366 A:middle
you get them through the App

00:05:43.606 --> 00:05:44.896 A:middle
Store, which means they can be

00:05:44.896 --> 00:05:46.396 A:middle
free, or you can charge for

00:05:46.396 --> 00:05:46.646 A:middle
them.

00:05:46.816 --> 00:05:48.406 A:middle
Either way, you don't have to do

00:05:48.406 --> 00:05:49.076 A:middle
your own billing.

00:05:50.446 --> 00:05:52.226 A:middle
So, compared to those legacy

00:05:52.226 --> 00:05:54.486 A:middle
extensions in 2010, content

00:05:54.486 --> 00:05:55.666 A:middle
blockers and Safari app

00:05:55.666 --> 00:05:57.146 A:middle
extensions have great benefits.

00:05:57.556 --> 00:05:58.806 A:middle
So, the best thing for you to

00:05:58.806 --> 00:06:00.116 A:middle
do, is if you have a legacy

00:05:58.806 --> 00:06:00.116 A:middle
do, is if you have a legacy

00:06:00.116 --> 00:06:02.356 A:middle
Safari extension, switch over to

00:06:02.356 --> 00:06:03.736 A:middle
a Safari app extension.

00:06:03.806 --> 00:06:05.086 A:middle
And, if it happens to be an ad

00:06:05.086 --> 00:06:07.086 A:middle
blocker, use content blockers.

00:06:07.866 --> 00:06:08.996 A:middle
And now that we've done all this

00:06:08.996 --> 00:06:11.136 A:middle
work, what can we do about the

00:06:11.136 --> 00:06:13.396 A:middle
use of legacy Safari extensions

00:06:13.396 --> 00:06:14.266 A:middle
for fraud?

00:06:14.936 --> 00:06:17.566 A:middle
Starting with Safari 12, we're

00:06:17.566 --> 00:06:19.556 A:middle
officially blocking support for

00:06:19.556 --> 00:06:21.376 A:middle
legacy extensions distributed

00:06:21.376 --> 00:06:23.196 A:middle
outside of the Safari Extensions

00:06:23.196 --> 00:06:23.666 A:middle
Gallery.

00:06:24.636 --> 00:06:26.126 A:middle
Legacy extensions will still

00:06:26.126 --> 00:06:28.896 A:middle
work in Safari 12 as long as

00:06:28.956 --> 00:06:29.796 A:middle
they're in the Gallery.

00:06:31.066 --> 00:06:32.316 A:middle
The only exception are those

00:06:32.316 --> 00:06:33.986 A:middle
extensions using the deprecated

00:06:34.036 --> 00:06:36.016 A:middle
Can Load API, which we turn off

00:06:36.016 --> 00:06:36.666 A:middle
by default.

00:06:37.436 --> 00:06:38.566 A:middle
We'll continue to accept

00:06:38.786 --> 00:06:40.466 A:middle
submissions to the Gallery until

00:06:40.466 --> 00:06:41.706 A:middle
the end of 2018.

00:06:42.426 --> 00:06:44.106 A:middle
However, we will be coming up

00:06:44.136 --> 00:06:45.386 A:middle
with more updates in the

00:06:45.386 --> 00:06:46.406 A:middle
following year, and will

00:06:46.406 --> 00:06:48.386 A:middle
eventually transition entirely

00:06:48.716 --> 00:06:50.166 A:middle
to Safari app extensions.

00:06:50.526 --> 00:06:52.066 A:middle
So, the best thing for you to do

00:06:52.246 --> 00:06:53.166 A:middle
is learn how to develop

00:06:53.166 --> 00:06:54.626 A:middle
extensions in these two models.

00:06:54.936 --> 00:06:56.106 A:middle
And, to learn how to do that,

00:06:56.376 --> 00:06:58.576 A:middle
check out the docs, courtesy of

00:06:58.576 --> 00:06:59.586 A:middle
yours truly and Developer

00:06:59.586 --> 00:06:59.976 A:middle
Publications.

00:07:00.516 --> 00:07:07.076 A:middle
[ Applause ]

00:07:07.576 --> 00:07:09.076 A:middle
Now that we've covered the two

00:07:09.076 --> 00:07:11.316 A:middle
biggest announcements for native

00:07:11.316 --> 00:07:12.866 A:middle
developers using WebViews, and

00:07:12.866 --> 00:07:14.376 A:middle
extensions developers, the

00:07:14.376 --> 00:07:15.656 A:middle
remainder of these features are

00:07:15.716 --> 00:07:17.336 A:middle
primarily going to be about web

00:07:17.336 --> 00:07:17.906 A:middle
development.

00:07:18.346 --> 00:07:20.016 A:middle
So, let's start with subresource

00:07:20.136 --> 00:07:20.756 A:middle
integrity.

00:07:21.626 --> 00:07:23.286 A:middle
Now, as a developer, you may

00:07:23.356 --> 00:07:25.396 A:middle
serve your content over an HTTPS

00:07:25.396 --> 00:07:26.596 A:middle
connection to your user.

00:07:26.596 --> 00:07:28.546 A:middle
And, that resulting content may

00:07:28.676 --> 00:07:31.056 A:middle
also include content distributed

00:07:31.056 --> 00:07:33.356 A:middle
over a third-party server, like

00:07:33.356 --> 00:07:34.696 A:middle
a content delivery network.

00:07:35.576 --> 00:07:36.876 A:middle
Now, both connections may be

00:07:36.876 --> 00:07:39.316 A:middle
secure, both may use HTTPS,

00:07:39.806 --> 00:07:40.906 A:middle
which means you maintain the

00:07:41.126 --> 00:07:43.156 A:middle
confidentiality, authentication,

00:07:43.156 --> 00:07:44.616 A:middle
and integrity of the data

00:07:44.616 --> 00:07:45.216 A:middle
transferred.

00:07:45.826 --> 00:07:48.326 A:middle
But, what happens if that third

00:07:48.326 --> 00:07:50.686 A:middle
party itself is compromised?

00:07:51.066 --> 00:07:51.726 A:middle
It could happen.

00:07:52.296 --> 00:07:54.526 A:middle
And, in this case, while HTTPS

00:07:54.526 --> 00:07:56.256 A:middle
secures the connection, it

00:07:56.256 --> 00:07:57.446 A:middle
doesn't secure against a

00:07:57.446 --> 00:07:58.816 A:middle
compromised server.

00:07:59.436 --> 00:08:01.356 A:middle
It can modify the scripts, and

00:07:59.436 --> 00:08:01.356 A:middle
It can modify the scripts, and

00:08:01.356 --> 00:08:03.086 A:middle
styles you serve to users if

00:08:03.086 --> 00:08:04.296 A:middle
that third-party server is

00:08:04.296 --> 00:08:05.026 A:middle
compromised.

00:08:06.156 --> 00:08:08.076 A:middle
Subresource integrity ensures

00:08:08.076 --> 00:08:09.516 A:middle
that you don't serve compromised

00:08:09.516 --> 00:08:10.936 A:middle
scripts to your users.

00:08:10.936 --> 00:08:12.076 A:middle
So, how does it work?

00:08:12.396 --> 00:08:13.566 A:middle
Well, with hashing.

00:08:14.256 --> 00:08:15.626 A:middle
First, you add the integrity

00:08:15.626 --> 00:08:17.196 A:middle
property for a script or link

00:08:17.196 --> 00:08:18.306 A:middle
element in your markup.

00:08:18.826 --> 00:08:20.316 A:middle
The value for this property is a

00:08:20.476 --> 00:08:21.786 A:middle
hash that you create using a

00:08:21.786 --> 00:08:22.986 A:middle
secure hash algorithm.

00:08:23.306 --> 00:08:24.996 A:middle
When a user fetches the files,

00:08:25.286 --> 00:08:26.886 A:middle
then another hash is calculated.

00:08:27.116 --> 00:08:28.456 A:middle
The two are compared, and if

00:08:28.456 --> 00:08:30.096 A:middle
they don't match, your script

00:08:30.096 --> 00:08:31.106 A:middle
will fail to execute.

00:08:31.846 --> 00:08:33.826 A:middle
This process ensures that

00:08:33.826 --> 00:08:35.535 A:middle
scripts won't execute if they're

00:08:35.535 --> 00:08:36.076 A:middle
compromised.

00:08:36.456 --> 00:08:38.616 A:middle
Unless they match what you

00:08:38.616 --> 00:08:41.056 A:middle
intended, your scripts will not

00:08:41.056 --> 00:08:41.476 A:middle
execute.

00:08:42.376 --> 00:08:43.726 A:middle
And, to make sure you don't lose

00:08:43.756 --> 00:08:45.306 A:middle
functionality, you can also

00:08:45.306 --> 00:08:47.316 A:middle
provide a fallback to reload a

00:08:47.316 --> 00:08:49.026 A:middle
resource from your server, in

00:08:49.026 --> 00:08:50.676 A:middle
case the third-party script

00:08:50.936 --> 00:08:51.896 A:middle
fails to execute.

00:08:52.446 --> 00:08:55.516 A:middle
Now, keeping compromised

00:08:55.516 --> 00:08:57.636 A:middle
resources from executing keeps

00:08:57.816 --> 00:08:58.706 A:middle
users secure.

00:08:59.086 --> 00:09:00.336 A:middle
And, intelligent tracking

00:08:59.086 --> 00:09:00.336 A:middle
And, intelligent tracking

00:09:00.336 --> 00:09:01.816 A:middle
prevention can keep the browsing

00:09:01.816 --> 00:09:02.786 A:middle
experience private.

00:09:03.296 --> 00:09:04.376 A:middle
Now, I'm sure you heard about

00:09:04.376 --> 00:09:05.826 A:middle
intelligent tracking prevention

00:09:05.946 --> 00:09:06.626 A:middle
in the Keynote.

00:09:06.676 --> 00:09:08.386 A:middle
It's a Safari feature that

00:09:08.386 --> 00:09:10.326 A:middle
reduces cross-site tracking by

00:09:10.326 --> 00:09:12.126 A:middle
limiting cookies and website

00:09:12.126 --> 00:09:13.416 A:middle
data for domains with tracking

00:09:13.416 --> 00:09:13.836 A:middle
abilities.

00:09:14.416 --> 00:09:15.636 A:middle
And, in previous versions,

00:09:15.906 --> 00:09:17.316 A:middle
cookies were kept according to

00:09:17.366 --> 00:09:17.966 A:middle
two rules.

00:09:18.396 --> 00:09:19.996 A:middle
One, cookies could be used in

00:09:19.996 --> 00:09:22.276 A:middle
third-party context for 24 hours

00:09:22.586 --> 00:09:24.306 A:middle
after user interaction in a

00:09:24.306 --> 00:09:25.446 A:middle
first-party context.

00:09:25.916 --> 00:09:28.166 A:middle
And two, for 30 days of Safari

00:09:28.166 --> 00:09:30.336 A:middle
use, including that initial 24

00:09:30.336 --> 00:09:31.806 A:middle
hours, those cookies would be

00:09:31.836 --> 00:09:33.856 A:middle
kept in isolated storage before

00:09:33.856 --> 00:09:34.556 A:middle
being purged.

00:09:34.966 --> 00:09:37.336 A:middle
But, now we're tightening the

00:09:37.336 --> 00:09:37.936 A:middle
belt a little.

00:09:38.806 --> 00:09:40.856 A:middle
And, we're removing the 24-hour

00:09:40.856 --> 00:09:42.516 A:middle
general cookie access window for

00:09:42.516 --> 00:09:43.536 A:middle
domains with cross-site

00:09:43.536 --> 00:09:44.036 A:middle
tracking.

00:09:45.316 --> 00:09:47.806 A:middle
But, by default, all cookies are

00:09:47.806 --> 00:09:49.786 A:middle
kept in isolated storage, and as

00:09:49.946 --> 00:09:51.596 A:middle
developers, I know authenticated

00:09:51.596 --> 00:09:53.786 A:middle
embeds are already important to

00:09:54.006 --> 00:09:55.546 A:middle
many of your workflows and

00:09:55.546 --> 00:09:57.036 A:middle
interactions with web content.

00:09:57.686 --> 00:09:58.666 A:middle
So, how do you allow

00:09:59.036 --> 00:09:59.976 A:middle
authenticated embeds?

00:10:01.656 --> 00:10:04.156 A:middle
Using the Storage Access API.

00:10:04.916 --> 00:10:08.056 A:middle
With the Storage Access API,

00:10:08.056 --> 00:10:10.116 A:middle
every time a domain with

00:10:10.206 --> 00:10:11.446 A:middle
cross-site tracking would like

00:10:11.496 --> 00:10:13.006 A:middle
to access cookie in a

00:10:13.006 --> 00:10:14.826 A:middle
third-party context, you'll need

00:10:14.826 --> 00:10:16.866 A:middle
to request storage access.

00:10:17.436 --> 00:10:19.016 A:middle
If the user has not granted

00:10:19.016 --> 00:10:20.766 A:middle
access previously, a prompt

00:10:20.766 --> 00:10:22.616 A:middle
appears, asking the user whether

00:10:22.616 --> 00:10:25.256 A:middle
to permit cookie access or not

00:10:25.686 --> 00:10:26.596 A:middle
under this website.

00:10:27.486 --> 00:10:29.036 A:middle
By enabling users to provide

00:10:29.106 --> 00:10:31.026 A:middle
explicit consent for cookie

00:10:31.026 --> 00:10:33.306 A:middle
access, we're empowering them to

00:10:33.366 --> 00:10:35.096 A:middle
take control of their cookies,

00:10:35.136 --> 00:10:36.406 A:middle
and what websites can track,

00:10:36.886 --> 00:10:38.026 A:middle
keeping their browsing

00:10:38.026 --> 00:10:41.046 A:middle
experience more private if they

00:10:41.046 --> 00:10:41.356 A:middle
choose.

00:10:42.136 --> 00:10:45.386 A:middle
Now, next, we'll move on to

00:10:45.386 --> 00:10:47.166 A:middle
authentication with automatic

00:10:47.246 --> 00:10:48.106 A:middle
strong passwords.

00:10:48.106 --> 00:10:49.366 A:middle
Now, I'm sure you saw this in

00:10:49.366 --> 00:10:50.556 A:middle
the State of the Union and

00:10:50.586 --> 00:10:51.636 A:middle
session earlier this week.

00:10:51.906 --> 00:10:53.436 A:middle
Automatic strong passwords is a

00:10:53.436 --> 00:10:55.296 A:middle
great way to guarantee that

00:10:55.296 --> 00:10:56.836 A:middle
users will always select and

00:10:56.836 --> 00:10:58.526 A:middle
save a password that's strong

00:10:58.756 --> 00:10:59.896 A:middle
when signing up for a new

00:10:59.896 --> 00:11:00.356 A:middle
account.

00:10:59.896 --> 00:11:00.356 A:middle
account.

00:11:00.996 --> 00:11:02.066 A:middle
And, this is good for everyone.

00:11:02.066 --> 00:11:03.926 A:middle
I mean, I like to think of

00:11:03.926 --> 00:11:05.416 A:middle
myself as someone who chooses

00:11:05.416 --> 00:11:06.866 A:middle
strong passwords, but give it a

00:11:06.866 --> 00:11:08.716 A:middle
little bit of time, and I'll

00:11:08.716 --> 00:11:09.956 A:middle
realize that password wasn't as

00:11:09.956 --> 00:11:10.746 A:middle
strong as I thought.

00:11:11.256 --> 00:11:12.376 A:middle
And, I probably used it in a

00:11:12.376 --> 00:11:13.066 A:middle
couple places.

00:11:14.276 --> 00:11:15.666 A:middle
For most developers, you won't

00:11:15.666 --> 00:11:16.886 A:middle
need to do anything to get this

00:11:16.886 --> 00:11:18.436 A:middle
feature, because heuristics will

00:11:18.436 --> 00:11:20.156 A:middle
determine if you're on a sign up

00:11:20.156 --> 00:11:21.056 A:middle
or login page.

00:11:21.526 --> 00:11:23.186 A:middle
But, to guarantee this works,

00:11:23.566 --> 00:11:26.376 A:middle
regardless of login flow, add

00:11:26.376 --> 00:11:28.086 A:middle
the AutoComplete attribute to

00:11:28.086 --> 00:11:29.446 A:middle
the appropriate input fields.

00:11:30.226 --> 00:11:32.516 A:middle
Now, the strong passwords we

00:11:32.516 --> 00:11:34.466 A:middle
choose are by default 20

00:11:34.466 --> 00:11:35.926 A:middle
characters in length, including

00:11:36.276 --> 00:11:38.086 A:middle
upper case, lower case letters,

00:11:38.566 --> 00:11:39.426 A:middle
digits and hyphens.

00:11:40.306 --> 00:11:41.436 A:middle
Now, while this was designed to

00:11:41.436 --> 00:11:42.466 A:middle
be compatible with most

00:11:42.466 --> 00:11:43.846 A:middle
services, we acknowledge that

00:11:44.196 --> 00:11:45.986 A:middle
sometimes your passwords need to

00:11:45.986 --> 00:11:47.916 A:middle
have specific requirements to be

00:11:47.916 --> 00:11:49.116 A:middle
compatible with the back-end

00:11:49.116 --> 00:11:49.566 A:middle
system.

00:11:50.136 --> 00:11:51.516 A:middle
For this reason, there is a

00:11:51.586 --> 00:11:53.486 A:middle
passwordRules attribute that you

00:11:53.486 --> 00:11:55.236 A:middle
can add to your text elements to

00:11:55.236 --> 00:11:56.686 A:middle
specify those requirements.

00:11:57.176 --> 00:11:58.396 A:middle
And, on the developers site,

00:11:58.486 --> 00:11:59.816 A:middle
there's a password validation

00:11:59.816 --> 00:12:01.156 A:middle
tool, to help you test

00:11:59.816 --> 00:12:01.156 A:middle
tool, to help you test

00:12:01.246 --> 00:12:02.766 A:middle
compatibility with automatic

00:12:02.766 --> 00:12:04.686 A:middle
strong passwords, and develop

00:12:04.856 --> 00:12:06.646 A:middle
your own password rules.

00:12:08.396 --> 00:12:09.776 A:middle
Another feature mentioned in the

00:12:09.776 --> 00:12:11.736 A:middle
State of the Union, security

00:12:11.786 --> 00:12:13.316 A:middle
code AutoFill.

00:12:13.346 --> 00:12:14.656 A:middle
Another feature most of you will

00:12:14.656 --> 00:12:15.336 A:middle
get for free.

00:12:15.766 --> 00:12:17.136 A:middle
This is one I'm going to be

00:12:17.136 --> 00:12:18.936 A:middle
making good use for, because I

00:12:18.936 --> 00:12:20.256 A:middle
find it tedious to switch

00:12:20.286 --> 00:12:22.536 A:middle
between my app and the website,

00:12:22.536 --> 00:12:24.076 A:middle
and the messages, and then find

00:12:24.076 --> 00:12:25.636 A:middle
out those numbers for the code,

00:12:25.636 --> 00:12:27.016 A:middle
and input it and try to remember

00:12:27.016 --> 00:12:27.126 A:middle
it.

00:12:27.456 --> 00:12:29.096 A:middle
So, having Safari figure out

00:12:29.466 --> 00:12:30.916 A:middle
when I have to input a security

00:12:30.916 --> 00:12:32.246 A:middle
code, and then suggesting it in

00:12:32.246 --> 00:12:33.106 A:middle
the quick type bar?

00:12:33.376 --> 00:12:35.556 A:middle
Makes this much more convenient.

00:12:36.346 --> 00:12:38.206 A:middle
And, just like before, you get

00:12:38.256 --> 00:12:40.206 A:middle
this feature for free, because

00:12:40.356 --> 00:12:41.666 A:middle
it uses heuristics, but to

00:12:41.666 --> 00:12:43.246 A:middle
ensure that these heuristics

00:12:43.246 --> 00:12:44.786 A:middle
work, and you get that quick

00:12:44.846 --> 00:12:47.596 A:middle
type suggestion, mark your input

00:12:47.596 --> 00:12:49.236 A:middle
fields with the one-time code

00:12:49.236 --> 00:12:50.896 A:middle
value in the AutoComplete

00:12:51.026 --> 00:12:51.596 A:middle
attribute.

00:12:52.266 --> 00:12:53.806 A:middle
For more details, I encourage

00:12:53.806 --> 00:12:55.426 A:middle
you to check out the Automatic

00:12:55.476 --> 00:12:56.936 A:middle
Strong Passwords and Security

00:12:56.936 --> 00:12:58.956 A:middle
Code AutoFill session online.

00:12:59.526 --> 00:13:01.946 A:middle
So, that's security.

00:12:59.526 --> 00:13:01.946 A:middle
So, that's security.

00:13:02.666 --> 00:13:04.556 A:middle
Switch over to WKWebView, more

00:13:04.556 --> 00:13:05.966 A:middle
over to content blockers in

00:13:05.966 --> 00:13:07.346 A:middle
Safari app extensions,

00:13:07.716 --> 00:13:09.476 A:middle
subresource integrity is a

00:13:09.476 --> 00:13:10.886 A:middle
failsafe to ensure you don't

00:13:10.886 --> 00:13:12.406 A:middle
serve compromised scripts to

00:13:12.406 --> 00:13:14.566 A:middle
users, and intelligent tracking

00:13:14.566 --> 00:13:16.146 A:middle
prevention improves privacy with

00:13:16.146 --> 00:13:17.406 A:middle
the Storage Access API.

00:13:17.506 --> 00:13:19.126 A:middle
And, with automatic strong

00:13:19.126 --> 00:13:20.536 A:middle
passwords, and security code

00:13:20.536 --> 00:13:22.266 A:middle
AutoFill, you get features that

00:13:22.266 --> 00:13:24.446 A:middle
are secure and convenient for

00:13:24.446 --> 00:13:25.056 A:middle
your users.

00:13:25.186 --> 00:13:30.176 A:middle
Whew. You all still with me so

00:13:30.516 --> 00:13:30.806 A:middle
far?

00:13:30.806 --> 00:13:32.596 A:middle
OK, moving right along, let's

00:13:32.666 --> 00:13:34.146 A:middle
talk about performance features,

00:13:34.176 --> 00:13:36.086 A:middle
starting with font collections.

00:13:36.826 --> 00:13:38.346 A:middle
Now, for those of you who may

00:13:38.346 --> 00:13:39.376 A:middle
not have caught it at the top of

00:13:39.376 --> 00:13:41.256 A:middle
this talk, my name is Shloka

00:13:41.716 --> 00:13:41.856 A:middle
Kini.

00:13:41.856 --> 00:13:44.376 A:middle
And that ain't no Anglo-Saxon

00:13:44.846 --> 00:13:44.976 A:middle
name.

00:13:46.276 --> 00:13:48.026 A:middle
And so, here's my first and last

00:13:48.026 --> 00:13:49.856 A:middle
names, using the Devanagari

00:13:49.856 --> 00:13:51.486 A:middle
script in the Hindi language.

00:13:51.926 --> 00:13:53.616 A:middle
Multiple fonts, different

00:13:53.616 --> 00:13:55.366 A:middle
weights and styles, but the same

00:13:55.366 --> 00:13:55.976 A:middle
character set.

00:13:56.776 --> 00:13:58.476 A:middle
New this year, we support font

00:13:58.476 --> 00:14:00.566 A:middle
collections, WOFF 2 and TrueType

00:13:58.476 --> 00:14:00.566 A:middle
collections, WOFF 2 and TrueType

00:14:00.566 --> 00:14:01.046 A:middle
collections.

00:14:01.656 --> 00:14:03.496 A:middle
Bundling related fonts together

00:14:03.496 --> 00:14:05.076 A:middle
inside a single collection file

00:14:05.316 --> 00:14:07.076 A:middle
can eliminate duplicated tables

00:14:07.076 --> 00:14:08.796 A:middle
for character maps.

00:14:08.796 --> 00:14:10.746 A:middle
For example, one of our built-in

00:14:10.746 --> 00:14:13.626 A:middle
fonts, PingFang has an 84%

00:14:13.626 --> 00:14:15.286 A:middle
reduction of file size from

00:14:15.286 --> 00:14:16.046 A:middle
using a collection.

00:14:16.846 --> 00:14:17.826 A:middle
Font collections can

00:14:17.826 --> 00:14:19.736 A:middle
substantially reduce the size of

00:14:19.736 --> 00:14:21.136 A:middle
your font files, because the

00:14:21.136 --> 00:14:23.296 A:middle
fonts share a table for the same

00:14:23.296 --> 00:14:23.956 A:middle
character set.

00:14:24.536 --> 00:14:27.226 A:middle
Now, this next feature,

00:14:27.226 --> 00:14:29.776 A:middle
font-display, requires no change

00:14:29.956 --> 00:14:30.826 A:middle
for most developers.

00:14:31.126 --> 00:14:32.826 A:middle
Essentially if you have web

00:14:32.826 --> 00:14:34.746 A:middle
content that uses custom fonts,

00:14:35.146 --> 00:14:36.576 A:middle
if they don't display for your

00:14:36.576 --> 00:14:38.496 A:middle
user for whatever reason, by

00:14:38.496 --> 00:14:40.116 A:middle
default we leave a blank

00:14:40.276 --> 00:14:42.076 A:middle
placeholder for the text for up

00:14:42.156 --> 00:14:44.386 A:middle
to three seconds, before your

00:14:44.386 --> 00:14:46.206 A:middle
font displays, to maintain the

00:14:46.206 --> 00:14:47.866 A:middle
position of all the content on

00:14:47.866 --> 00:14:48.376 A:middle
the screen.

00:14:48.826 --> 00:14:51.166 A:middle
But, if this default behavior

00:14:51.166 --> 00:14:52.686 A:middle
isn't quite right for you, and

00:14:52.686 --> 00:14:54.006 A:middle
you want to have more control

00:14:54.006 --> 00:14:55.616 A:middle
over what happens instead of

00:14:55.616 --> 00:14:57.446 A:middle
those three seconds, you can use

00:14:57.446 --> 00:14:59.136 A:middle
the font-display descriptor.

00:14:59.806 --> 00:15:01.066 A:middle
Using different values, you can

00:14:59.806 --> 00:15:01.066 A:middle
Using different values, you can

00:15:01.066 --> 00:15:02.396 A:middle
specify another font as a

00:15:02.396 --> 00:15:04.286 A:middle
fallback, or check if the

00:15:04.286 --> 00:15:06.386 A:middle
browser has that font in the

00:15:06.386 --> 00:15:06.916 A:middle
cache.

00:15:09.316 --> 00:15:11.116 A:middle
Now, one cool trick you can use

00:15:11.116 --> 00:15:12.446 A:middle
to improve the performance of

00:15:12.446 --> 00:15:15.366 A:middle
animated images is using video.

00:15:15.366 --> 00:15:18.386 A:middle
Now, I love the colored dust

00:15:18.386 --> 00:15:20.726 A:middle
explosion background on my Mac.

00:15:20.726 --> 00:15:23.136 A:middle
It's really great, but it's

00:15:23.216 --> 00:15:23.716 A:middle
static.

00:15:25.366 --> 00:15:27.156 A:middle
I mean I want this thing to bam,

00:15:27.156 --> 00:15:27.746 A:middle
pop!

00:15:28.526 --> 00:15:29.796 A:middle
I mean, I want motion.

00:15:30.116 --> 00:15:31.066 A:middle
I want a GIF.

00:15:31.876 --> 00:15:33.306 A:middle
But, animated GIFs take much

00:15:33.306 --> 00:15:34.806 A:middle
longer to load, they use more

00:15:34.806 --> 00:15:36.626 A:middle
battery power, and give lower

00:15:36.666 --> 00:15:37.956 A:middle
performance than a video file

00:15:37.956 --> 00:15:41.976 A:middle
showing the exact same thing.

00:15:42.176 --> 00:15:44.936 A:middle
Now, in Safari, MP4 video files

00:15:44.936 --> 00:15:46.316 A:middle
are supported in image elements,

00:15:46.316 --> 00:15:48.176 A:middle
making use of Apple's built-in

00:15:48.176 --> 00:15:49.606 A:middle
support for hardware video

00:15:49.606 --> 00:15:50.176 A:middle
decoding.

00:15:50.906 --> 00:15:52.666 A:middle
My content loads faster, uses

00:15:52.666 --> 00:15:53.856 A:middle
less battery, gets better

00:15:53.856 --> 00:15:56.056 A:middle
performance, but I can also use

00:15:56.056 --> 00:15:58.886 A:middle
MP4s in the CSS background image

00:15:58.946 --> 00:15:59.386 A:middle
property.

00:16:00.556 --> 00:16:01.446 A:middle
Now, if you adopt this

00:16:01.446 --> 00:16:03.706 A:middle
technique, in the simplest way,

00:16:04.516 --> 00:16:05.876 A:middle
you could come up with a version

00:16:05.876 --> 00:16:07.556 A:middle
that isn't compatible with older

00:16:07.556 --> 00:16:08.086 A:middle
browsers.

00:16:08.726 --> 00:16:10.086 A:middle
Older browsers don't support

00:16:10.086 --> 00:16:11.286 A:middle
MP4s and image elements.

00:16:11.646 --> 00:16:13.916 A:middle
Luckily, using existing

00:16:13.916 --> 00:16:16.216 A:middle
technology, you can specify a

00:16:16.376 --> 00:16:18.536 A:middle
fallback image to display if the

00:16:18.536 --> 00:16:19.466 A:middle
MP4 doesn't work.

00:16:19.986 --> 00:16:22.636 A:middle
Now, listen up, because now

00:16:22.716 --> 00:16:25.876 A:middle
we're going to move on to event

00:16:26.276 --> 00:16:26.926 A:middle
listeners.

00:16:27.306 --> 00:16:29.606 A:middle
Yes? No. Another feature that

00:16:29.606 --> 00:16:31.476 A:middle
has some great defaults, and

00:16:31.476 --> 00:16:33.016 A:middle
some customizability in special

00:16:33.016 --> 00:16:33.466 A:middle
cases.

00:16:34.556 --> 00:16:36.286 A:middle
When any user tries to navigate

00:16:36.286 --> 00:16:37.536 A:middle
a web page with a touch screen,

00:16:37.696 --> 00:16:39.096 A:middle
they're going to need to scroll.

00:16:39.096 --> 00:16:40.976 A:middle
And, for every touch to scroll,

00:16:41.206 --> 00:16:42.896 A:middle
a touch event listener can fire,

00:16:43.596 --> 00:16:45.506 A:middle
which can interrupt scrolling

00:16:45.506 --> 00:16:47.726 A:middle
and cause it to jump a little.

00:16:48.576 --> 00:16:49.476 A:middle
Take a look at these two

00:16:49.476 --> 00:16:49.966 A:middle
examples.

00:16:50.726 --> 00:16:52.896 A:middle
Now, the one on the left is

00:16:52.946 --> 00:16:55.546 A:middle
interrupted much more than the

00:16:55.546 --> 00:16:56.156 A:middle
one on the right.

00:16:56.536 --> 00:16:57.606 A:middle
I mean, it's barely moving.

00:16:58.536 --> 00:17:00.966 A:middle
So, what's the one on the right

00:16:58.536 --> 00:17:00.966 A:middle
So, what's the one on the right

00:17:01.306 --> 00:17:02.016 A:middle
doing right?

00:17:02.816 --> 00:17:03.946 A:middle
It's using passive event

00:17:03.946 --> 00:17:04.366 A:middle
listeners.

00:17:04.965 --> 00:17:06.675 A:middle
By default, we enable passive

00:17:06.675 --> 00:17:08.366 A:middle
event listeners on the document,

00:17:08.366 --> 00:17:10.306 A:middle
window, and body elements, so

00:17:10.306 --> 00:17:11.675 A:middle
any touch events on these

00:17:11.675 --> 00:17:13.356 A:middle
elements indicate to the browser

00:17:13.826 --> 00:17:15.806 A:middle
to continue scrolling, and not

00:17:15.866 --> 00:17:17.836 A:middle
be interrupted waiting for the

00:17:17.836 --> 00:17:19.146 A:middle
event listeners to finish.

00:17:19.806 --> 00:17:21.445 A:middle
If there are additional elements

00:17:21.445 --> 00:17:22.726 A:middle
with event listeners that you

00:17:22.726 --> 00:17:24.546 A:middle
want to make passive, you can

00:17:24.546 --> 00:17:25.935 A:middle
set the passive property to

00:17:25.935 --> 00:17:27.526 A:middle
"true" for those event

00:17:27.526 --> 00:17:27.935 A:middle
listeners.

00:17:28.816 --> 00:17:30.816 A:middle
Essentially, without preventing

00:17:30.886 --> 00:17:32.576 A:middle
default event handling, this

00:17:32.576 --> 00:17:34.546 A:middle
flag tells the browser not to

00:17:34.546 --> 00:17:36.306 A:middle
wait for event listeners to

00:17:36.306 --> 00:17:37.936 A:middle
finish, and lets your users

00:17:38.026 --> 00:17:40.226 A:middle
continue scrolling smoothly.

00:17:40.696 --> 00:17:44.356 A:middle
Next, we move on to asynchronous

00:17:44.356 --> 00:17:46.546 A:middle
calls, with async image

00:17:46.546 --> 00:17:47.056 A:middle
decoding.

00:17:47.786 --> 00:17:49.236 A:middle
Now, typically, images are

00:17:49.236 --> 00:17:50.456 A:middle
decoded synchronously.

00:17:50.656 --> 00:17:51.976 A:middle
So, the main thread is blocked.

00:17:52.506 --> 00:17:54.656 A:middle
All the images are decoded, and

00:17:54.656 --> 00:17:55.346 A:middle
then they display.

00:17:56.136 --> 00:17:57.796 A:middle
By blocking the main thread,

00:17:57.796 --> 00:17:59.486 A:middle
this blocks user interactions.

00:17:59.906 --> 00:18:01.356 A:middle
But, with asynchronous decoding,

00:17:59.906 --> 00:18:01.356 A:middle
But, with asynchronous decoding,

00:18:01.356 --> 00:18:02.546 A:middle
the operations happen in

00:18:02.546 --> 00:18:04.476 A:middle
parallel, and on a separate

00:18:04.536 --> 00:18:05.626 A:middle
thread, which means the

00:18:05.666 --> 00:18:07.726 A:middle
interactions aren't blocked.

00:18:08.236 --> 00:18:09.856 A:middle
And now, new this year, async

00:18:09.946 --> 00:18:12.276 A:middle
image decoding happens by

00:18:12.276 --> 00:18:14.226 A:middle
default on the first page load,

00:18:15.136 --> 00:18:16.906 A:middle
which can cover most cases for

00:18:16.906 --> 00:18:17.476 A:middle
web content.

00:18:17.796 --> 00:18:20.286 A:middle
However we know that some of you

00:18:20.286 --> 00:18:21.576 A:middle
may have special cases.

00:18:21.656 --> 00:18:24.426 A:middle
Say, you have a tiled map on

00:18:24.426 --> 00:18:26.216 A:middle
your webpage that loads after

00:18:26.216 --> 00:18:27.356 A:middle
the initial page load.

00:18:27.586 --> 00:18:28.986 A:middle
And, if it has lots of images,

00:18:28.986 --> 00:18:31.706 A:middle
some of the tiles may be delayed

00:18:32.096 --> 00:18:32.796 A:middle
in their display.

00:18:33.356 --> 00:18:35.716 A:middle
Or, maybe you have a carousel of

00:18:35.716 --> 00:18:37.016 A:middle
images in your app that you want

00:18:37.016 --> 00:18:38.516 A:middle
to fade into each other, but

00:18:38.516 --> 00:18:40.086 A:middle
when you try to advance the

00:18:40.186 --> 00:18:41.726 A:middle
slides, if the images are

00:18:41.726 --> 00:18:43.296 A:middle
decoded synchronously, they

00:18:43.296 --> 00:18:44.886 A:middle
might not be ready for display.

00:18:45.436 --> 00:18:49.336 A:middle
And, they abruptly switch.

00:18:50.816 --> 00:18:53.216 A:middle
But, on the right, asynchronous

00:18:53.216 --> 00:18:54.776 A:middle
decoding gives you a smoother

00:18:54.886 --> 00:18:55.246 A:middle
fade.

00:18:55.296 --> 00:18:58.656 A:middle
Now, if you want to fall into

00:18:58.776 --> 00:18:59.916 A:middle
one of these special dynamic

00:18:59.916 --> 00:19:01.176 A:middle
cases, you have two options.

00:18:59.916 --> 00:19:01.176 A:middle
cases, you have two options.

00:19:01.456 --> 00:19:03.436 A:middle
One, you can add the decoding

00:19:03.486 --> 00:19:05.176 A:middle
async attribute to your images

00:19:05.176 --> 00:19:06.136 A:middle
elements in markup.

00:19:06.756 --> 00:19:09.536 A:middle
Or, you can use the JavaScript

00:19:09.536 --> 00:19:11.996 A:middle
API's HTMLImageElements.decode

00:19:11.996 --> 00:19:13.856 A:middle
method, which returns a promise,

00:19:14.106 --> 00:19:15.726 A:middle
making sure that you know when

00:19:15.726 --> 00:19:17.756 A:middle
an image can be added to the dom

00:19:17.836 --> 00:19:19.546 A:middle
without causing a decoding delay

00:19:19.866 --> 00:19:20.796 A:middle
on the next frame.

00:19:21.306 --> 00:19:24.216 A:middle
And, continuing with

00:19:24.216 --> 00:19:26.336 A:middle
asynchronous calls is support

00:19:26.336 --> 00:19:27.416 A:middle
for the Beacon API.

00:19:28.266 --> 00:19:29.566 A:middle
We know, as developers, you want

00:19:29.566 --> 00:19:31.466 A:middle
to send data on an unload event.

00:19:31.956 --> 00:19:33.936 A:middle
Perhaps to track outgoing links.

00:19:34.416 --> 00:19:35.896 A:middle
And normally, asynchronous

00:19:35.896 --> 00:19:37.766 A:middle
requests on unload are ignored,

00:19:37.906 --> 00:19:38.776 A:middle
so you're stuck using a

00:19:38.776 --> 00:19:40.266 A:middle
synchronous request, which can

00:19:40.266 --> 00:19:41.816 A:middle
stall the next page load.

00:19:42.756 --> 00:19:44.206 A:middle
However, we now support the

00:19:44.206 --> 00:19:45.066 A:middle
Beacon API.

00:19:45.706 --> 00:19:47.086 A:middle
So, as long as Safari is

00:19:47.086 --> 00:19:48.816 A:middle
running, you can send your data

00:19:48.816 --> 00:19:50.866 A:middle
to the server and forget about

00:19:50.866 --> 00:19:52.666 A:middle
it, with the guarantee that it

00:19:52.666 --> 00:19:53.466 A:middle
will be delivered.

00:19:53.966 --> 00:19:57.036 A:middle
But, you've heard me talk

00:19:57.036 --> 00:19:57.446 A:middle
enough.

00:19:57.926 --> 00:19:59.096 A:middle
I mean, I'm sure you want to see

00:19:59.096 --> 00:20:00.036 A:middle
some of these security and

00:19:59.096 --> 00:20:00.036 A:middle
some of these security and

00:20:00.036 --> 00:20:01.316 A:middle
performance features in action.

00:20:01.316 --> 00:20:03.056 A:middle
So, I'd like to call Jason onto

00:20:03.056 --> 00:20:04.826 A:middle
the stage to show you how they

00:20:04.826 --> 00:20:05.216 A:middle
all work.

00:20:05.436 --> 00:20:05.826 A:middle
Jason?

00:20:06.516 --> 00:20:10.876 A:middle
[ Applause ]

00:20:11.376 --> 00:20:12.176 A:middle
&gt;&gt; Hi, everyone.

00:20:12.316 --> 00:20:13.986 A:middle
My name is Jason Sandmeyer, and

00:20:13.986 --> 00:20:15.626 A:middle
I'm a developer on Apple.com.

00:20:16.436 --> 00:20:18.046 A:middle
In my free time, I enjoy doing

00:20:18.046 --> 00:20:20.286 A:middle
arts and crafts, like building

00:20:20.286 --> 00:20:22.156 A:middle
birdhouses, and I recently

00:20:22.156 --> 00:20:23.636 A:middle
started this blog to share some

00:20:23.636 --> 00:20:25.116 A:middle
of my projects and inspire

00:20:25.116 --> 00:20:25.526 A:middle
others.

00:20:25.816 --> 00:20:27.676 A:middle
I spent a lot of time picking

00:20:27.676 --> 00:20:29.146 A:middle
just the right fonts, the right

00:20:29.146 --> 00:20:29.746 A:middle
colors.

00:20:30.296 --> 00:20:31.246 A:middle
I'm pretty proud of it.

00:20:31.996 --> 00:20:33.236 A:middle
But, you know what, I don't just

00:20:33.266 --> 00:20:34.696 A:middle
pride myself on good design, I

00:20:34.696 --> 00:20:36.576 A:middle
also pride myself on providing a

00:20:36.576 --> 00:20:38.326 A:middle
good, secure, and performant

00:20:38.326 --> 00:20:39.526 A:middle
experience for my users.

00:20:40.056 --> 00:20:41.506 A:middle
So, I'm really excited about all

00:20:41.506 --> 00:20:42.756 A:middle
these new performance and

00:20:42.756 --> 00:20:44.186 A:middle
security features in WebKit and

00:20:44.186 --> 00:20:46.066 A:middle
Safari, and I really want to

00:20:46.066 --> 00:20:47.646 A:middle
take advantage of them on my own

00:20:48.346 --> 00:20:48.476 A:middle
site.

00:20:48.646 --> 00:20:49.816 A:middle
I'd love to show you how easy

00:20:49.816 --> 00:20:50.316 A:middle
that can be.

00:20:52.056 --> 00:20:53.546 A:middle
So, I have my site loaded on my

00:20:53.546 --> 00:20:54.416 A:middle
MacBook Pro here.

00:20:56.716 --> 00:20:58.366 A:middle
And-- whoa.

00:20:58.366 --> 00:20:58.586 A:middle
OK.

00:20:58.586 --> 00:21:01.006 A:middle
&gt;&gt; Dude! Jason, what did you do?

00:20:58.586 --> 00:21:01.006 A:middle
&gt;&gt; Dude! Jason, what did you do?

00:21:01.566 --> 00:21:03.716 A:middle
&gt;&gt; Yes, this isn't the elegant

00:21:03.716 --> 00:21:05.226 A:middle
blog I was just bragging about,

00:21:05.226 --> 00:21:06.096 A:middle
is it?

00:21:07.506 --> 00:21:08.526 A:middle
Let's see-- that's the right

00:21:08.526 --> 00:21:08.986 A:middle
URL.

00:21:10.156 --> 00:21:11.806 A:middle
You know, I think I know what

00:21:11.806 --> 00:21:12.406 A:middle
happened here.

00:21:12.996 --> 00:21:15.586 A:middle
When I first started this site,

00:21:15.586 --> 00:21:19.436 A:middle
my friends, they warned me that

00:21:19.436 --> 00:21:20.866 A:middle
the lifestyle blogging industry

00:21:20.866 --> 00:21:23.516 A:middle
can be pretty cutthroat.

00:21:24.856 --> 00:21:27.176 A:middle
Clearly, this is sabotage.

00:21:27.906 --> 00:21:29.436 A:middle
Someone's replaced my style

00:21:29.436 --> 00:21:30.826 A:middle
sheet on my content delivery

00:21:30.826 --> 00:21:31.266 A:middle
network.

00:21:32.016 --> 00:21:33.736 A:middle
But, luckily, I have a backup,

00:21:33.796 --> 00:21:34.396 A:middle
fortunately.

00:21:34.986 --> 00:21:36.536 A:middle
And, we can use subresource

00:21:36.536 --> 00:21:37.936 A:middle
integrity to add a little bit of

00:21:37.936 --> 00:21:39.596 A:middle
an extra layer of security, and

00:21:39.596 --> 00:21:40.706 A:middle
ensure this doesn't happen

00:21:40.706 --> 00:21:40.976 A:middle
again.

00:21:46.286 --> 00:21:49.106 A:middle
So, I'll start by adding the new

00:21:49.106 --> 00:21:51.856 A:middle
integrity attribute to my link

00:21:51.856 --> 00:21:52.246 A:middle
tag.

00:21:52.246 --> 00:21:53.896 A:middle
I should also mention this works

00:21:53.896 --> 00:21:55.356 A:middle
on scripts, but we're going to

00:21:55.356 --> 00:21:57.046 A:middle
make some changes later, so

00:21:57.426 --> 00:21:58.756 A:middle
we'll add that later on.

00:21:59.286 --> 00:22:03.516 A:middle
So, the value of this attribute

00:21:59.286 --> 00:22:03.516 A:middle
So, the value of this attribute

00:22:03.956 --> 00:22:06.266 A:middle
is the hashing algorithm that

00:22:06.266 --> 00:22:07.406 A:middle
was used to generate the

00:22:07.406 --> 00:22:09.316 A:middle
checksum for the file that I

00:22:09.316 --> 00:22:12.586 A:middle
expect my users to see.

00:22:12.826 --> 00:22:14.196 A:middle
I've already prepared a hash

00:22:14.316 --> 00:22:15.566 A:middle
with SHA256.

00:22:16.896 --> 00:22:20.156 A:middle
Next, a hyphen, and then a

00:22:20.156 --> 00:22:22.336 A:middle
base64 representation of the

00:22:22.336 --> 00:22:22.786 A:middle
hash.

00:22:24.006 --> 00:22:26.296 A:middle
Now, let's save this, go back to

00:22:26.296 --> 00:22:28.256 A:middle
our page, reload.

00:22:29.436 --> 00:22:30.866 A:middle
And, we'll see there's no

00:22:30.866 --> 00:22:31.326 A:middle
styles.

00:22:31.876 --> 00:22:32.916 A:middle
Because the hash for the

00:22:32.916 --> 00:22:34.666 A:middle
downloaded file doesn't match

00:22:34.666 --> 00:22:36.026 A:middle
the hash in the HTML.

00:22:36.606 --> 00:22:38.396 A:middle
So, Safari has blocked it from

00:22:38.396 --> 00:22:38.986 A:middle
being loaded.

00:22:41.916 --> 00:22:43.376 A:middle
Now, let's connect to my CDN.

00:22:43.376 --> 00:22:46.256 A:middle
And, here's my backup on my

00:22:46.256 --> 00:22:46.726 A:middle
desktop.

00:22:47.246 --> 00:22:50.786 A:middle
Let's drag in my backup to the

00:22:50.886 --> 00:22:53.456 A:middle
CDN, replace the compromised

00:22:53.456 --> 00:22:53.876 A:middle
file.

00:22:54.806 --> 00:22:57.036 A:middle
And now, when we reload, that

00:22:57.356 --> 00:22:57.976 A:middle
looks a lot better.

00:22:58.516 --> 00:23:01.936 A:middle
[ Applause ]

00:22:58.516 --> 00:23:01.936 A:middle
[ Applause ]

00:23:02.436 --> 00:23:05.416 A:middle
Thanks. So, with subresource

00:23:05.416 --> 00:23:06.566 A:middle
integrity, I'll be more

00:23:06.566 --> 00:23:08.146 A:middle
confident that my visitors will

00:23:08.146 --> 00:23:09.926 A:middle
see the styles and scripts that

00:23:09.926 --> 00:23:12.686 A:middle
I expect them to get.

00:23:12.886 --> 00:23:13.926 A:middle
Now, let's switch gears a little

00:23:13.926 --> 00:23:15.006 A:middle
bit and talk about some

00:23:15.006 --> 00:23:16.166 A:middle
performance improvements we can

00:23:16.166 --> 00:23:16.426 A:middle
make.

00:23:16.426 --> 00:23:19.556 A:middle
I found it insightful to know

00:23:19.556 --> 00:23:20.806 A:middle
which links are being clicked on

00:23:20.806 --> 00:23:22.446 A:middle
my site, and which ones aren't.

00:23:22.716 --> 00:23:23.586 A:middle
It helps me make more informed

00:23:23.586 --> 00:23:23.976 A:middle
design decisions.

00:23:29.346 --> 00:23:30.956 A:middle
So, I have this click handler

00:23:30.956 --> 00:23:32.106 A:middle
that reports which links are

00:23:32.106 --> 00:23:33.666 A:middle
being clicked to a server that I

00:23:33.666 --> 00:23:35.176 A:middle
control that aggregates that

00:23:35.176 --> 00:23:35.856 A:middle
data so I can take a look at it

00:23:35.856 --> 00:23:35.976 A:middle
later.

00:23:40.736 --> 00:23:43.106 A:middle
But, notice this delay when I

00:23:43.106 --> 00:23:44.686 A:middle
click on this Woodworking link

00:23:44.846 --> 00:23:45.976 A:middle
that goes to a page that

00:23:45.976 --> 00:23:46.756 A:middle
showcases other

00:23:46.756 --> 00:23:48.616 A:middle
woodworking-related sites on my

00:23:48.616 --> 00:23:49.066 A:middle
page.

00:23:50.086 --> 00:23:51.126 A:middle
I'm going to click the link now.

00:23:52.816 --> 00:23:55.136 A:middle
Took about a half a second to a

00:23:55.136 --> 00:23:59.036 A:middle
second, and this is happening

00:23:59.036 --> 00:24:00.706 A:middle
because I'm making a synchronous

00:23:59.036 --> 00:24:00.706 A:middle
because I'm making a synchronous

00:24:00.706 --> 00:24:02.416 A:middle
request in the click handler,

00:24:02.666 --> 00:24:04.206 A:middle
which blocks Safari from

00:24:04.206 --> 00:24:05.706 A:middle
navigating to the next page.

00:24:06.446 --> 00:24:08.026 A:middle
Making a synchronous request

00:24:08.026 --> 00:24:09.306 A:middle
ensures the browser doesn't

00:24:09.306 --> 00:24:10.766 A:middle
cancel the request when

00:24:10.766 --> 00:24:12.226 A:middle
navigating to the next page.

00:24:13.636 --> 00:24:14.636 A:middle
But, this is waiting for my

00:24:14.636 --> 00:24:16.066 A:middle
server to respond, which can

00:24:16.066 --> 00:24:16.766 A:middle
take a while.

00:24:16.906 --> 00:24:18.046 A:middle
And, the thing is, I don't

00:24:18.046 --> 00:24:19.256 A:middle
really care about the response,

00:24:19.256 --> 00:24:20.286 A:middle
I just want to make sure that

00:24:20.286 --> 00:24:21.636 A:middle
that data hits my server.

00:24:22.536 --> 00:24:24.406 A:middle
So, the Beacon API is actually a

00:24:24.406 --> 00:24:25.826 A:middle
perfect replacement for this.

00:24:26.376 --> 00:24:29.776 A:middle
I'm going to start by checking

00:24:30.416 --> 00:24:32.266 A:middle
that the Beacon API is available

00:24:32.266 --> 00:24:33.746 A:middle
in the browser by looking for

00:24:33.746 --> 00:24:35.396 A:middle
the sendBeacon method on the

00:24:35.396 --> 00:24:36.386 A:middle
navigator object.

00:24:37.366 --> 00:24:38.656 A:middle
If it's not available, I'll

00:24:38.656 --> 00:24:39.996 A:middle
continue doing what I was doing

00:24:39.996 --> 00:24:40.346 A:middle
before.

00:24:41.526 --> 00:24:43.626 A:middle
Then, we can just use it.

00:24:46.496 --> 00:24:49.106 A:middle
Passing in the endpoint I want

00:24:49.756 --> 00:24:53.666 A:middle
to hit, along with the data.

00:24:53.666 --> 00:24:54.356 A:middle
Let's save that.

00:24:55.196 --> 00:24:57.726 A:middle
We'll go back, reload to get the

00:24:57.726 --> 00:24:58.236 A:middle
new script.

00:24:59.336 --> 00:25:00.676 A:middle
And now, when I click this link

00:24:59.336 --> 00:25:00.676 A:middle
And now, when I click this link

00:25:00.676 --> 00:25:02.256 A:middle
you'll see it's nearly instant.

00:25:02.296 --> 00:25:03.216 A:middle
I'm going to click the link

00:25:03.216 --> 00:25:03.696 A:middle
right now.

00:25:04.486 --> 00:25:05.056 A:middle
And, there we go.

00:25:06.046 --> 00:25:08.746 A:middle
So, compared to the XML/http

00:25:08.746 --> 00:25:10.576 A:middle
request this is even less code,

00:25:10.576 --> 00:25:11.796 A:middle
and it's just as reliable.

00:25:12.126 --> 00:25:13.696 A:middle
And now, it'll be much faster

00:25:13.696 --> 00:25:14.826 A:middle
for my users to navigate around

00:25:14.826 --> 00:25:14.976 A:middle
my site.

00:25:15.516 --> 00:25:17.736 A:middle
[ Applause ]

00:25:18.236 --> 00:25:22.956 A:middle
Thanks. So, next I want to take

00:25:22.956 --> 00:25:24.036 A:middle
a look at a problem that I've

00:25:24.036 --> 00:25:25.446 A:middle
noticed is more apparent on my

00:25:25.446 --> 00:25:25.956 A:middle
iPad here.

00:25:33.136 --> 00:25:34.666 A:middle
So, I've organized each step for

00:25:34.666 --> 00:25:36.016 A:middle
building this birdhouse as a

00:25:36.016 --> 00:25:37.386 A:middle
slide in this crossfading

00:25:37.386 --> 00:25:37.926 A:middle
carousel.

00:25:39.776 --> 00:25:41.596 A:middle
Tapping the right-facing arrow

00:25:41.596 --> 00:25:42.916 A:middle
advances this to the next slide.

00:25:44.356 --> 00:25:45.856 A:middle
But, you may have noticed that

00:25:45.856 --> 00:25:48.066 A:middle
brief moment of a blank white

00:25:48.176 --> 00:25:49.826 A:middle
space where the image should be.

00:25:50.286 --> 00:25:51.446 A:middle
Let me go through a few more

00:25:51.446 --> 00:25:51.846 A:middle
slides.

00:25:56.066 --> 00:25:57.316 A:middle
Let's take a look at some of the

00:25:57.316 --> 00:25:58.636 A:middle
code for this carousel, and see

00:25:58.636 --> 00:25:59.356 A:middle
what's going on.

00:25:59.356 --> 00:26:00.326 A:middle
I think this can be a lot

00:25:59.356 --> 00:26:00.326 A:middle
I think this can be a lot

00:26:00.326 --> 00:26:00.776 A:middle
smoother.

00:26:06.066 --> 00:26:07.796 A:middle
So, here's my carousel class.

00:26:08.516 --> 00:26:10.036 A:middle
I want to focus on this method

00:26:10.036 --> 00:26:11.336 A:middle
here, setCurrentSlide.

00:26:11.896 --> 00:26:13.086 A:middle
This is the method that's called

00:26:13.086 --> 00:26:14.256 A:middle
when the button is clicked to

00:26:14.256 --> 00:26:15.656 A:middle
transition to the slide at the

00:26:15.656 --> 00:26:16.476 A:middle
given index.

00:26:18.816 --> 00:26:20.376 A:middle
Because each slide isn't

00:26:20.376 --> 00:26:21.896 A:middle
immediately visible on page

00:26:21.896 --> 00:26:24.056 A:middle
load, my carousel only loads the

00:26:24.056 --> 00:26:25.826 A:middle
next slide's image when the user

00:26:25.826 --> 00:26:26.826 A:middle
taps the button to advance to

00:26:26.826 --> 00:26:26.976 A:middle
it.

00:26:31.176 --> 00:26:33.036 A:middle
The problem that we're seeing is

00:26:33.086 --> 00:26:35.266 A:middle
that the transition is happening

00:26:35.866 --> 00:26:36.506 A:middle
immediately.

00:26:37.716 --> 00:26:39.026 A:middle
It's not waiting for the image

00:26:39.026 --> 00:26:39.446 A:middle
to load.

00:26:39.956 --> 00:26:41.356 A:middle
And, after the image has loaded,

00:26:41.356 --> 00:26:42.746 A:middle
it still needs to be decoded

00:26:42.746 --> 00:26:43.676 A:middle
before it's ready to be

00:26:43.676 --> 00:26:44.816 A:middle
displayed on the screen.

00:26:45.876 --> 00:26:47.486 A:middle
So, what I really want to do is

00:26:47.486 --> 00:26:49.036 A:middle
wait until the image has been

00:26:49.036 --> 00:26:51.316 A:middle
loaded and decoded, and I'm sure

00:26:51.316 --> 00:26:52.466 A:middle
that we can show the image.

00:26:53.156 --> 00:26:54.996 A:middle
And, I can use the new decode

00:26:54.996 --> 00:26:57.486 A:middle
method on the HTML image element

00:26:58.936 --> 00:27:01.276 A:middle
to make this a lot better.

00:26:58.936 --> 00:27:01.276 A:middle
to make this a lot better.

00:27:02.506 --> 00:27:04.056 A:middle
So, I have my image-- a

00:27:04.056 --> 00:27:04.886 A:middle
reference to my image element

00:27:04.886 --> 00:27:04.976 A:middle
here.

00:27:09.046 --> 00:27:10.406 A:middle
The decode method will

00:27:10.616 --> 00:27:12.326 A:middle
asynchronously decode the image,

00:27:12.566 --> 00:27:14.206 A:middle
and return a promise that

00:27:14.206 --> 00:27:16.316 A:middle
resolves when the image has been

00:27:16.316 --> 00:27:19.646 A:middle
loaded and decoded.

00:27:19.746 --> 00:27:21.716 A:middle
So, I'll just pass my transition

00:27:21.756 --> 00:27:23.236 A:middle
function in as the callback for

00:27:23.236 --> 00:27:23.696 A:middle
the promise.

00:27:24.326 --> 00:27:26.676 A:middle
Now, let's switch back to the

00:27:26.746 --> 00:27:26.946 A:middle
iPad.

00:27:33.256 --> 00:27:35.536 A:middle
And, we'll refresh to get the

00:27:35.536 --> 00:27:36.036 A:middle
new script.

00:27:37.076 --> 00:27:38.236 A:middle
And now, when I advance, you'll

00:27:38.236 --> 00:27:39.386 A:middle
see this is much smoother.

00:27:40.006 --> 00:27:41.566 A:middle
No flashing.

00:27:41.566 --> 00:27:42.296 A:middle
It's really great.

00:27:43.516 --> 00:27:45.626 A:middle
[ Applause ]

00:27:46.126 --> 00:27:46.936 A:middle
Thank you.

00:27:51.126 --> 00:27:54.886 A:middle
Now, let's switch back to the

00:27:55.056 --> 00:27:55.146 A:middle
Mac.

00:27:55.146 --> 00:27:56.616 A:middle
Now, finally, at the bottom of

00:27:56.616 --> 00:27:58.626 A:middle
my page, I have this animated

00:27:58.626 --> 00:28:00.756 A:middle
GIF of a bird furnishing its new

00:27:58.626 --> 00:28:00.756 A:middle
GIF of a bird furnishing its new

00:28:00.756 --> 00:28:01.196 A:middle
birdhouse.

00:28:01.966 --> 00:28:05.156 A:middle
This image is-- this video's

00:28:05.156 --> 00:28:09.266 A:middle
pretty large-- well, it's a GIF.

00:28:09.406 --> 00:28:10.946 A:middle
Seven-- it's roughly a little

00:28:10.946 --> 00:28:12.236 A:middle
over 7 megabytes.

00:28:12.596 --> 00:28:13.926 A:middle
And, honestly the quality isn't

00:28:13.926 --> 00:28:14.366 A:middle
that great.

00:28:15.116 --> 00:28:15.876 A:middle
But, I happen to have the

00:28:15.876 --> 00:28:18.676 A:middle
original H264-encoded MP4, and

00:28:19.226 --> 00:28:20.846 A:middle
now I can just use that directly

00:28:20.846 --> 00:28:21.626 A:middle
on my page.

00:28:22.066 --> 00:28:24.086 A:middle
So, let's go back to my HTML,

00:28:24.926 --> 00:28:25.986 A:middle
and find that image.

00:28:26.786 --> 00:28:28.556 A:middle
Here it is.

00:28:28.766 --> 00:28:30.056 A:middle
So, I can just change the

00:28:30.056 --> 00:28:31.846 A:middle
extension to point to the MP4

00:28:31.846 --> 00:28:32.236 A:middle
file.

00:28:33.646 --> 00:28:37.486 A:middle
Reload. And, now I'm using the

00:28:37.486 --> 00:28:38.286 A:middle
actual video.

00:28:38.286 --> 00:28:39.916 A:middle
The quality's a lot better, and

00:28:39.916 --> 00:28:41.366 A:middle
this is only about a megabyte.

00:28:41.906 --> 00:28:43.386 A:middle
Plus, it's a little bit longer

00:28:43.476 --> 00:28:44.606 A:middle
than the animated GIF.

00:28:45.076 --> 00:28:49.096 A:middle
And, as Shloka mentioned, this

00:28:49.096 --> 00:28:50.876 A:middle
can also be used in the source

00:28:50.876 --> 00:28:52.766 A:middle
attribute to provide a fallback

00:28:52.766 --> 00:28:53.686 A:middle
image for browsers that don't

00:28:53.686 --> 00:28:53.966 A:middle
support this.

00:29:00.076 --> 00:29:02.086 A:middle
So, that's just four of the many

00:29:02.086 --> 00:29:03.276 A:middle
new security performance

00:29:03.276 --> 00:29:04.836 A:middle
features in Safari and WebKit.

00:29:05.276 --> 00:29:07.626 A:middle
I hope you'll take advantage of

00:29:07.626 --> 00:29:08.766 A:middle
them on your own site, and I

00:29:08.766 --> 00:29:09.906 A:middle
think your users will thank you

00:29:09.906 --> 00:29:10.866 A:middle
for it.

00:29:10.866 --> 00:29:11.936 A:middle
Now, I'd like to welcome Shloka

00:29:11.936 --> 00:29:13.256 A:middle
back up on the stage to tell you

00:29:13.256 --> 00:29:14.506 A:middle
about even more new and exciting

00:29:14.506 --> 00:29:14.666 A:middle
features.

00:29:14.666 --> 00:29:14.976 A:middle
Thank you.

00:29:15.516 --> 00:29:21.500 A:middle
[ Applause ]

00:29:25.186 --> 00:29:26.066 A:middle
&gt;&gt; Thank you, Jason.

00:29:26.656 --> 00:29:30.036 A:middle
And, I had no idea it was that

00:29:30.036 --> 00:29:31.246 A:middle
brutal in the blogosphere.

00:29:33.346 --> 00:29:34.336 A:middle
You stay safe out there.

00:29:37.086 --> 00:29:38.496 A:middle
And, thank you so much for that

00:29:38.496 --> 00:29:39.106 A:middle
great demo.

00:29:39.726 --> 00:29:41.686 A:middle
To recap performance, using font

00:29:41.686 --> 00:29:43.566 A:middle
collections can reduce font file

00:29:43.566 --> 00:29:44.086 A:middle
sizes.

00:29:44.376 --> 00:29:46.276 A:middle
The font-display property lets

00:29:46.276 --> 00:29:47.876 A:middle
you have more control over what

00:29:47.876 --> 00:29:49.356 A:middle
happens with custom fonts.

00:29:50.066 --> 00:29:51.776 A:middle
Using videos in image elements

00:29:51.826 --> 00:29:53.026 A:middle
can help with performance

00:29:53.026 --> 00:29:53.766 A:middle
instead of GIFs.

00:29:54.446 --> 00:29:55.876 A:middle
Passive event listeners can

00:29:55.876 --> 00:29:57.606 A:middle
improve scrolling, and using

00:29:57.606 --> 00:29:59.316 A:middle
asynchronous calls, both with

00:29:59.316 --> 00:30:01.326 A:middle
the Beacon API, and with image

00:29:59.316 --> 00:30:01.326 A:middle
the Beacon API, and with image

00:30:01.326 --> 00:30:03.166 A:middle
decoding keeps the main thread

00:30:03.346 --> 00:30:03.976 A:middle
from stalling.

00:30:04.496 --> 00:30:07.876 A:middle
Last, we move onto rich

00:30:07.876 --> 00:30:08.486 A:middle
experience.

00:30:08.486 --> 00:30:10.486 A:middle
Some cool new features that can

00:30:10.486 --> 00:30:11.896 A:middle
really improve your users

00:30:11.896 --> 00:30:12.506 A:middle
experience.

00:30:13.146 --> 00:30:15.316 A:middle
Starting with drag and drop.

00:30:15.846 --> 00:30:17.556 A:middle
Now, first, some general

00:30:17.556 --> 00:30:18.816 A:middle
improvements to drag and drop,

00:30:19.126 --> 00:30:21.546 A:middle
thanks to some API updates, now

00:30:21.546 --> 00:30:23.306 A:middle
you can drag and drop entire

00:30:23.306 --> 00:30:25.066 A:middle
directories of files to upload

00:30:25.066 --> 00:30:25.916 A:middle
them to the server.

00:30:26.446 --> 00:30:28.216 A:middle
No compression or zipping

00:30:28.296 --> 00:30:28.856 A:middle
required.

00:30:29.746 --> 00:30:31.156 A:middle
And, we support reading and

00:30:31.156 --> 00:30:33.336 A:middle
writing MIME types for rich

00:30:33.336 --> 00:30:36.476 A:middle
HTML, plain text, and URLs to

00:30:36.476 --> 00:30:37.476 A:middle
the system pasteboard.

00:30:38.646 --> 00:30:40.646 A:middle
And, specifically for iOS, we've

00:30:40.646 --> 00:30:41.916 A:middle
made some new updates to the

00:30:41.916 --> 00:30:43.966 A:middle
data transfer API, so now you

00:30:43.996 --> 00:30:45.996 A:middle
can customize drag and drop with

00:30:45.996 --> 00:30:48.076 A:middle
the getData and setData methods.

00:30:48.246 --> 00:30:50.926 A:middle
So, for example, if I wanted to

00:30:50.926 --> 00:30:53.036 A:middle
drag groceries into my online

00:30:53.036 --> 00:30:54.906 A:middle
grocery shopping cart, I can

00:30:54.906 --> 00:30:56.596 A:middle
customize the drag and drop

00:30:56.636 --> 00:30:57.146 A:middle
behavior.

00:30:57.726 --> 00:30:59.586 A:middle
So, dragging an image element

00:30:59.806 --> 00:31:01.226 A:middle
will drop the name of that

00:30:59.806 --> 00:31:01.226 A:middle
will drop the name of that

00:31:01.226 --> 00:31:03.506 A:middle
element and its price into my

00:31:03.506 --> 00:31:03.846 A:middle
cart.

00:31:04.676 --> 00:31:05.916 A:middle
Now, you can specify what

00:31:05.916 --> 00:31:07.236 A:middle
happens with drag and drop

00:31:07.266 --> 00:31:08.696 A:middle
behavior, which lets you

00:31:08.696 --> 00:31:10.316 A:middle
implement richer user

00:31:10.446 --> 00:31:11.186 A:middle
interactions.

00:31:11.766 --> 00:31:14.706 A:middle
Next, we move into the API

00:31:14.706 --> 00:31:16.146 A:middle
section of this talk, starting

00:31:16.146 --> 00:31:17.896 A:middle
with the Payment Request API and

00:31:18.246 --> 00:31:18.936 A:middle
Apple Pay.

00:31:19.616 --> 00:31:20.916 A:middle
So, let's talk about Apple Pay.

00:31:21.316 --> 00:31:22.646 A:middle
Apple Pay's not just a way to

00:31:22.646 --> 00:31:22.926 A:middle
pay.

00:31:22.926 --> 00:31:24.516 A:middle
It's a way to rethink electronic

00:31:24.566 --> 00:31:25.666 A:middle
payments entirely.

00:31:26.046 --> 00:31:28.036 A:middle
With Apple Pay, vendors won't

00:31:28.036 --> 00:31:29.466 A:middle
directly receive credit card

00:31:29.466 --> 00:31:31.376 A:middle
information of your customers,

00:31:31.376 --> 00:31:32.576 A:middle
which keeps them more secure.

00:31:33.466 --> 00:31:34.676 A:middle
Now, we know that many of you

00:31:34.676 --> 00:31:36.336 A:middle
have been requesting a way to

00:31:36.336 --> 00:31:37.616 A:middle
support Apple Pay using a

00:31:37.686 --> 00:31:38.326 A:middle
standard API.

00:31:39.096 --> 00:31:40.516 A:middle
And, I'm pleased to tell you, we

00:31:40.516 --> 00:31:42.246 A:middle
listened, and with collaborative

00:31:42.246 --> 00:31:44.456 A:middle
efforts, Apple Pay now works

00:31:44.456 --> 00:31:46.596 A:middle
with the W3C Payment Request

00:31:46.746 --> 00:31:46.936 A:middle
API.

00:31:50.516 --> 00:31:53.866 A:middle
[ Applause ]

00:31:54.366 --> 00:31:56.116 A:middle
So, while you have the option to

00:31:56.116 --> 00:31:58.906 A:middle
use this API, remember that to

00:31:58.906 --> 00:32:00.416 A:middle
get the benefits of Apple Pay

00:31:58.906 --> 00:32:00.416 A:middle
get the benefits of Apple Pay

00:32:00.416 --> 00:32:02.036 A:middle
for you and your customers, you

00:32:02.036 --> 00:32:03.446 A:middle
will need to make a few changes.

00:32:03.756 --> 00:32:05.806 A:middle
For example, adding an Apple Pay

00:32:05.806 --> 00:32:07.376 A:middle
button to your interface, rather

00:32:07.376 --> 00:32:08.836 A:middle
than adding Apple Pay as an

00:32:08.836 --> 00:32:10.376 A:middle
extra option in existing

00:32:10.376 --> 00:32:11.016 A:middle
checkout flow.

00:32:11.826 --> 00:32:13.186 A:middle
And, at the moment there are a

00:32:13.326 --> 00:32:15.856 A:middle
few features incorporated in the

00:32:15.856 --> 00:32:18.266 A:middle
Payment Request API, like

00:32:19.176 --> 00:32:20.706 A:middle
granular error-handling,

00:32:20.706 --> 00:32:22.356 A:middle
handling cobranded cards, and

00:32:22.356 --> 00:32:23.136 A:middle
phonetic names.

00:32:23.226 --> 00:32:25.006 A:middle
Features that only appear in

00:32:25.116 --> 00:32:25.676 A:middle
Apple Pay JS.

00:32:25.676 --> 00:32:28.176 A:middle
So, if you need those specific

00:32:28.346 --> 00:32:30.776 A:middle
features for Apple Pay, use

00:32:30.776 --> 00:32:32.496 A:middle
Apple Pay JS.

00:32:33.416 --> 00:32:35.586 A:middle
The next API we're supporting is

00:32:35.666 --> 00:32:37.166 A:middle
the Service Worker API.

00:32:39.716 --> 00:32:42.036 A:middle
And, if your user's network

00:32:42.036 --> 00:32:43.536 A:middle
connection isn't ideal, maybe--

00:32:43.846 --> 00:32:45.306 A:middle
I don't know, they have poor

00:32:45.306 --> 00:32:47.016 A:middle
connectivity, or they're

00:32:47.016 --> 00:32:48.636 A:middle
completely offline, you want to

00:32:48.636 --> 00:32:49.866 A:middle
make sure that you handle that

00:32:49.866 --> 00:32:50.956 A:middle
situation gracefully.

00:32:51.106 --> 00:32:52.326 A:middle
And Service Workers can do that.

00:32:52.946 --> 00:32:54.576 A:middle
A Service Worker is registered

00:32:54.576 --> 00:32:56.506 A:middle
by a unique origin, and it can

00:32:56.506 --> 00:32:58.336 A:middle
cache offline interactions, and

00:32:58.436 --> 00:33:00.336 A:middle
intercept requests made by

00:32:58.436 --> 00:33:00.336 A:middle
intercept requests made by

00:33:00.336 --> 00:33:02.066 A:middle
scripts associated with that

00:33:02.066 --> 00:33:02.556 A:middle
origin.

00:33:03.016 --> 00:33:04.866 A:middle
Now, every page in your domain

00:33:05.096 --> 00:33:06.586 A:middle
can share the same Service

00:33:06.586 --> 00:33:07.356 A:middle
Worker instance.

00:33:08.116 --> 00:33:09.556 A:middle
So, you can have multiple tabs

00:33:09.666 --> 00:33:11.826 A:middle
open at the same time, and all

00:33:11.826 --> 00:33:12.976 A:middle
those requests will be

00:33:13.036 --> 00:33:15.386 A:middle
intercepted by the same script.

00:33:16.436 --> 00:33:17.966 A:middle
So, you can keep a persistent

00:33:17.966 --> 00:33:19.136 A:middle
store of resources.

00:33:20.166 --> 00:33:22.136 A:middle
Service Workers makes your web

00:33:22.416 --> 00:33:25.566 A:middle
page, whether its a web app, or

00:33:25.566 --> 00:33:27.036 A:middle
whether you're using SF Safari

00:33:27.036 --> 00:33:29.066 A:middle
viewController, more resilient

00:33:29.226 --> 00:33:30.656 A:middle
to variants in network

00:33:30.716 --> 00:33:31.366 A:middle
connectivity.

00:33:31.876 --> 00:33:35.286 A:middle
And, the last of the APIs is the

00:33:35.286 --> 00:33:37.146 A:middle
Fullscreen API for iPad.

00:33:38.526 --> 00:33:39.706 A:middle
Now, you can customize

00:33:39.796 --> 00:33:40.976 A:middle
fullscreen controls for the

00:33:40.976 --> 00:33:41.616 A:middle
iPad.

00:33:41.986 --> 00:33:44.296 A:middle
Any arbitrary element in Safari.

00:33:44.746 --> 00:33:45.996 A:middle
And, clicking on that elements

00:33:45.996 --> 00:33:47.546 A:middle
will bring up a complete

00:33:48.066 --> 00:33:48.976 A:middle
fullscreen experience.

00:33:51.516 --> 00:33:56.146 A:middle
[ Applause ]

00:33:56.646 --> 00:33:58.276 A:middle
Now, for videos we auto-detect

00:33:58.336 --> 00:33:59.866 A:middle
the content, and a Cancel button

00:33:59.866 --> 00:34:00.286 A:middle
appears.

00:33:59.866 --> 00:34:00.286 A:middle
appears.

00:34:00.526 --> 00:34:02.586 A:middle
And, after a short delay, if the

00:34:02.586 --> 00:34:04.646 A:middle
content is playing, the button

00:34:04.646 --> 00:34:05.266 A:middle
will disappear.

00:34:07.536 --> 00:34:08.976 A:middle
Now, if you're presenting

00:34:08.976 --> 00:34:10.505 A:middle
content that ends up being

00:34:10.505 --> 00:34:12.126 A:middle
blocked by this Cancel button,

00:34:12.356 --> 00:34:14.186 A:middle
you can use the CSS Environment

00:34:14.186 --> 00:34:16.646 A:middle
Variable fullscreen-inset-top to

00:34:16.646 --> 00:34:17.045 A:middle
avoid it.

00:34:18.056 --> 00:34:20.485 A:middle
You can also have your content

00:34:20.545 --> 00:34:21.985 A:middle
hide at the same time as the

00:34:21.985 --> 00:34:23.545 A:middle
button, by using the

00:34:23.666 --> 00:34:25.286 A:middle
fullscreen-auto-hide-delay

00:34:25.436 --> 00:34:26.416 A:middle
environment variable.

00:34:26.906 --> 00:34:31.386 A:middle
Last, a couple of cool callouts,

00:34:31.626 --> 00:34:33.525 A:middle
starting with AR.

00:34:34.255 --> 00:34:35.755 A:middle
Oh, you've heard so much about

00:34:35.755 --> 00:34:37.126 A:middle
AR at this conference so far.

00:34:37.356 --> 00:34:39.335 A:middle
And now, you can add AR models

00:34:39.335 --> 00:34:40.846 A:middle
to your UI with image

00:34:40.846 --> 00:34:41.366 A:middle
thumbnails.

00:34:41.366 --> 00:34:42.866 A:middle
So, your websites can take

00:34:42.866 --> 00:34:45.036 A:middle
advantage of the brand-new AR

00:34:45.096 --> 00:34:45.505 A:middle
Quick Look.

00:34:45.536 --> 00:34:47.246 A:middle
And, the code's fairly short.

00:34:47.556 --> 00:34:48.806 A:middle
You start with an anchor tag,

00:34:49.065 --> 00:34:50.876 A:middle
set the del attribute to "AR"

00:34:51.235 --> 00:34:53.106 A:middle
and set the HREF link to your

00:34:53.306 --> 00:34:55.065 A:middle
USDZ file, then you file format

00:34:55.065 --> 00:34:55.886 A:middle
for AR models.

00:34:56.426 --> 00:34:58.076 A:middle
You add a single child, either

00:34:58.076 --> 00:34:59.426 A:middle
an image or a picture element

00:34:59.666 --> 00:35:01.006 A:middle
containing an image of the

00:34:59.666 --> 00:35:01.006 A:middle
containing an image of the

00:35:01.006 --> 00:35:01.376 A:middle
model.

00:35:01.756 --> 00:35:03.456 A:middle
So, the resulting image looks

00:35:03.456 --> 00:35:04.076 A:middle
like this.

00:35:04.816 --> 00:35:06.596 A:middle
In the top corner of the image,

00:35:06.646 --> 00:35:09.046 A:middle
a small icon appears, indicating

00:35:09.126 --> 00:35:11.336 A:middle
an AR model is available if you

00:35:11.336 --> 00:35:12.296 A:middle
click on the image.

00:35:12.806 --> 00:35:14.706 A:middle
It's a great way to add more

00:35:14.706 --> 00:35:16.736 A:middle
depth to the content in your

00:35:16.736 --> 00:35:17.196 A:middle
websites.

00:35:18.796 --> 00:35:20.516 A:middle
And, for more details on Quick

00:35:20.516 --> 00:35:21.676 A:middle
Look, you can check out the

00:35:21.676 --> 00:35:23.886 A:middle
session online for Integrating

00:35:24.046 --> 00:35:25.776 A:middle
Apps and Content with AR Quick

00:35:26.476 --> 00:35:26.566 A:middle
Look.

00:35:27.816 --> 00:35:29.756 A:middle
And, last, watchOS.

00:35:30.696 --> 00:35:32.506 A:middle
You can already view websites on

00:35:32.506 --> 00:35:35.746 A:middle
the MacBook, and the iPad, and

00:35:36.786 --> 00:35:38.686 A:middle
an even smaller screen with the

00:35:38.686 --> 00:35:40.076 A:middle
iPhone, a screen that can fit in

00:35:40.076 --> 00:35:40.636 A:middle
your pocket.

00:35:41.316 --> 00:35:42.956 A:middle
But, now we're going to downsize

00:35:42.956 --> 00:35:45.866 A:middle
one more time.

00:35:46.086 --> 00:35:48.076 A:middle
We've brought you websites on

00:35:48.076 --> 00:35:48.916 A:middle
watchOS.

00:35:49.516 --> 00:35:53.816 A:middle
[ Applause ]

00:35:54.316 --> 00:35:55.856 A:middle
Now, I'm personally really

00:35:55.856 --> 00:35:57.366 A:middle
excited about this one, because

00:35:57.366 --> 00:35:59.676 A:middle
I receive recipes from my mom

00:35:59.936 --> 00:36:00.636 A:middle
all the time.

00:35:59.936 --> 00:36:00.636 A:middle
all the time.

00:36:00.776 --> 00:36:02.716 A:middle
I cannot cook, and I see them in

00:36:02.716 --> 00:36:04.736 A:middle
Messages and emails and now,

00:36:04.736 --> 00:36:06.596 A:middle
when I get that recipe I can see

00:36:06.596 --> 00:36:08.116 A:middle
it right there on my wrist while

00:36:08.116 --> 00:36:09.056 A:middle
I'm following along.

00:36:10.116 --> 00:36:11.256 A:middle
Now, if you use responsive

00:36:11.256 --> 00:36:12.606 A:middle
design, great.

00:36:12.856 --> 00:36:14.136 A:middle
We do all the work for you and

00:36:14.136 --> 00:36:15.126 A:middle
your websites are going to look

00:36:15.156 --> 00:36:16.426 A:middle
great on watchOS.

00:36:16.866 --> 00:36:17.716 A:middle
But, if you would like to

00:36:17.816 --> 00:36:19.326 A:middle
further optimize your webpages

00:36:19.326 --> 00:36:21.086 A:middle
for Apple Watch, there's a video

00:36:21.086 --> 00:36:22.926 A:middle
for Designing Web Content for

00:36:22.926 --> 00:36:24.546 A:middle
watchOS in the WWDC app.

00:36:24.546 --> 00:36:26.056 A:middle
Excuse me.

00:36:26.566 --> 00:36:28.306 A:middle
Designing, yes.

00:36:29.596 --> 00:36:32.476 A:middle
And now, I bet Jason's birdhouse

00:36:32.526 --> 00:36:35.056 A:middle
blog could really up the ante

00:36:35.056 --> 00:36:36.316 A:middle
with some of these great new

00:36:36.316 --> 00:36:37.486 A:middle
rich experience features.

00:36:37.986 --> 00:36:39.416 A:middle
So, I'd like to call Jason back

00:36:39.416 --> 00:36:40.716 A:middle
on the stage to show us how some

00:36:40.716 --> 00:36:41.586 A:middle
of them can be used.

00:36:41.796 --> 00:36:41.976 A:middle
Jason?

00:36:42.516 --> 00:36:46.106 A:middle
[ Applause ]

00:36:46.606 --> 00:36:47.136 A:middle
&gt;&gt; Thanks again.

00:36:48.046 --> 00:36:49.256 A:middle
So, I've been thinking about

00:36:49.256 --> 00:36:50.816 A:middle
ways to make it more fun for my

00:36:50.816 --> 00:36:51.996 A:middle
readers to get started with

00:36:51.996 --> 00:36:53.066 A:middle
their birdhouse project.

00:36:53.466 --> 00:36:56.836 A:middle
Let's switch back to the iPad.

00:37:01.536 --> 00:37:03.246 A:middle
So, I have this list of all the

00:37:03.246 --> 00:37:04.866 A:middle
supplies that my readers will

00:37:04.866 --> 00:37:05.866 A:middle
need to get started.

00:37:06.856 --> 00:37:07.456 A:middle
And, I thought it'd be

00:37:07.456 --> 00:37:10.906 A:middle
convenient if I could actually

00:37:10.906 --> 00:37:13.226 A:middle
provide them with a way to add

00:37:13.226 --> 00:37:14.156 A:middle
to their shopping list, the

00:37:14.156 --> 00:37:15.406 A:middle
things they might need, and

00:37:15.406 --> 00:37:16.726 A:middle
maybe even purchase some of

00:37:16.726 --> 00:37:18.136 A:middle
these directly from my site.

00:37:18.926 --> 00:37:20.006 A:middle
Plus, I figured I can make a

00:37:20.006 --> 00:37:22.266 A:middle
little extra cash in the

00:37:23.136 --> 00:37:23.326 A:middle
process.

00:37:23.456 --> 00:37:26.456 A:middle
So, I have the ability to drag

00:37:26.456 --> 00:37:28.256 A:middle
and drop the supplies from the

00:37:28.256 --> 00:37:29.976 A:middle
left onto this shopping list.

00:37:43.496 --> 00:37:45.286 A:middle
And, this works great now on my

00:37:45.286 --> 00:37:45.976 A:middle
iPad as well.

00:37:46.076 --> 00:37:48.686 A:middle
So, let's take a look at some of

00:37:48.686 --> 00:37:49.766 A:middle
the code that's used to achieve

00:37:49.876 --> 00:37:49.976 A:middle
this.

00:37:57.046 --> 00:37:57.916 A:middle
Doesn't actually take a lot of

00:37:57.916 --> 00:37:58.856 A:middle
code to do this.

00:37:59.766 --> 00:38:02.126 A:middle
So, for each supply, I add a

00:37:59.766 --> 00:38:02.126 A:middle
So, for each supply, I add a

00:38:02.126 --> 00:38:04.366 A:middle
dragStart eventListener, which

00:38:04.366 --> 00:38:07.576 A:middle
stores the element's text, using

00:38:07.576 --> 00:38:09.556 A:middle
the Data Transfer API.

00:38:10.816 --> 00:38:12.896 A:middle
Then, in my drop zone, which is

00:38:12.896 --> 00:38:15.186 A:middle
my shopping list area, I have a

00:38:15.186 --> 00:38:17.066 A:middle
drop event listener, that

00:38:17.066 --> 00:38:18.886 A:middle
retrieves the previously stored

00:38:20.156 --> 00:38:22.286 A:middle
text from the Data Transfer API.

00:38:22.286 --> 00:38:24.046 A:middle
And, appends that to the

00:38:24.046 --> 00:38:24.976 A:middle
shopping list element.

00:38:29.166 --> 00:38:30.526 A:middle
Note that you do also need to

00:38:30.526 --> 00:38:32.146 A:middle
add a dragOver eventListener,

00:38:32.636 --> 00:38:34.886 A:middle
and for the area where you want

00:38:34.886 --> 00:38:36.596 A:middle
the element to be dropped, to

00:38:36.596 --> 00:38:39.226 A:middle
prevent the default event, and

00:38:39.226 --> 00:38:41.316 A:middle
indicate that a drop is allowed

00:38:41.316 --> 00:38:42.536 A:middle
on that element.

00:38:43.086 --> 00:38:45.716 A:middle
So, with very little code, I was

00:38:45.716 --> 00:38:47.236 A:middle
able to create this fun shopping

00:38:47.236 --> 00:38:48.986 A:middle
UI that works great on my Mac,

00:38:49.306 --> 00:38:50.786 A:middle
and now on my iPad as well.

00:38:51.076 --> 00:38:54.726 A:middle
So, now that I can place

00:38:54.726 --> 00:38:56.546 A:middle
supplies in my shopping list, I

00:38:56.546 --> 00:38:57.726 A:middle
need a way for my users to

00:38:57.726 --> 00:38:58.756 A:middle
actually make a purchase.

00:38:59.406 --> 00:39:02.726 A:middle
Let's take a look at how we can

00:38:59.406 --> 00:39:02.726 A:middle
Let's take a look at how we can

00:39:02.726 --> 00:39:03.886 A:middle
provide a great Apple Pay

00:39:03.886 --> 00:39:05.256 A:middle
experience with the Payment

00:39:05.256 --> 00:39:06.796 A:middle
Request API.

00:39:08.836 --> 00:39:10.156 A:middle
So, I've already added the

00:39:10.156 --> 00:39:12.726 A:middle
necessary HTML and CSS to my

00:39:12.726 --> 00:39:14.036 A:middle
site to display an Apple Pay

00:39:14.036 --> 00:39:15.996 A:middle
button, but I've hidden it by

00:39:15.996 --> 00:39:16.396 A:middle
default.

00:39:16.976 --> 00:39:17.976 A:middle
You should only show the Apple

00:39:17.976 --> 00:39:20.626 A:middle
Pay button if the user's device

00:39:20.626 --> 00:39:23.126 A:middle
is capable of using Apple Pay.

00:39:24.176 --> 00:39:27.966 A:middle
so, let's check for that, using

00:39:27.966 --> 00:39:28.033 A:middle
the

00:39:28.366 --> 00:39:30.256 A:middle
ApplePaySession.canMakePayments

00:39:30.256 --> 00:39:30.616 A:middle
method.

00:39:30.776 --> 00:39:33.556 A:middle
If Apple Pay is available, we

00:39:33.556 --> 00:39:33.976 A:middle
can show the button.

00:39:38.326 --> 00:39:41.036 A:middle
Let's add an eventListener to

00:39:42.816 --> 00:39:43.396 A:middle
the button.

00:39:43.396 --> 00:39:44.666 A:middle
Now, inside this function is

00:39:44.666 --> 00:39:45.606 A:middle
where we'll create a new

00:39:45.606 --> 00:39:47.736 A:middle
paymentRequest instance to

00:39:47.736 --> 00:39:48.976 A:middle
initiate the transaction.

00:39:54.436 --> 00:39:55.866 A:middle
If paymentRequest isn't

00:39:55.866 --> 00:39:57.146 A:middle
available, we should consider

00:39:57.146 --> 00:39:57.976 A:middle
using Apple Pay JS instead.

00:40:02.256 --> 00:40:03.616 A:middle
Here's the constructor for the

00:40:03.616 --> 00:40:04.596 A:middle
Payment Request API.

00:40:05.456 --> 00:40:07.406 A:middle
It accepts three arguments.

00:40:07.596 --> 00:40:10.466 A:middle
We'll start by adding the

00:40:10.466 --> 00:40:13.036 A:middle
paymentMethod data object.

00:40:16.636 --> 00:40:18.456 A:middle
This contains the Apple Pay

00:40:18.456 --> 00:40:20.826 A:middle
paymentMethod identifier, along

00:40:20.826 --> 00:40:22.256 A:middle
with some options specific to

00:40:22.256 --> 00:40:26.496 A:middle
Apple Pay.

00:40:26.696 --> 00:40:29.396 A:middle
Following that, are the payment

00:40:29.396 --> 00:40:29.956 A:middle
details.

00:40:30.406 --> 00:40:31.976 A:middle
This is where we specify details

00:40:31.976 --> 00:40:33.716 A:middle
about the transaction, such as

00:40:33.716 --> 00:40:35.366 A:middle
my website's name, the total

00:40:35.366 --> 00:40:37.086 A:middle
amount, and each line time.

00:40:37.636 --> 00:40:40.546 A:middle
I kept things simple, and

00:40:40.546 --> 00:40:41.556 A:middle
decided that I'm just going to

00:40:41.556 --> 00:40:43.396 A:middle
charge $5 for everything on this

00:40:43.396 --> 00:40:43.696 A:middle
list.

00:40:48.076 --> 00:40:50.346 A:middle
Finally, the options argument

00:40:50.776 --> 00:40:52.466 A:middle
specifies what information I

00:40:52.466 --> 00:40:54.006 A:middle
need to collect from my user to

00:40:54.006 --> 00:40:55.206 A:middle
complete the transaction.

00:40:55.746 --> 00:40:58.626 A:middle
Let's switch back to the iPad

00:40:58.626 --> 00:41:01.606 A:middle
and add some supplies to my

00:40:58.626 --> 00:41:01.606 A:middle
and add some supplies to my

00:41:01.606 --> 00:41:01.916 A:middle
list.

00:41:11.186 --> 00:41:12.676 A:middle
So, now that we've passed all

00:41:12.676 --> 00:41:13.936 A:middle
the information in, we actually

00:41:13.936 --> 00:41:16.006 A:middle
need to call another method to

00:41:16.006 --> 00:41:17.016 A:middle
show the sheet.

00:41:17.286 --> 00:41:20.716 A:middle
And, that's the show method on

00:41:20.716 --> 00:41:21.606 A:middle
the paymentRequest.

00:41:22.106 --> 00:41:23.086 A:middle
And, this method returns a

00:41:23.086 --> 00:41:24.766 A:middle
promise that resolves with a

00:41:24.986 --> 00:41:26.506 A:middle
payment response when the user

00:41:26.506 --> 00:41:28.036 A:middle
authorizes the transaction.

00:41:28.036 --> 00:41:29.546 A:middle
So, [inaudible] with Face ID or

00:41:29.546 --> 00:41:30.206 A:middle
Touch ID.

00:41:30.906 --> 00:41:32.066 A:middle
In here, is where you would

00:41:32.066 --> 00:41:33.446 A:middle
process the transaction.

00:41:33.946 --> 00:41:37.456 A:middle
And then, finally, you'll call

00:41:37.456 --> 00:41:39.846 A:middle
complete with a value of success

00:41:39.846 --> 00:41:41.626 A:middle
or failure, depending on the

00:41:41.626 --> 00:41:42.796 A:middle
state of the transaction.

00:41:42.796 --> 00:41:45.436 A:middle
Alright, now let's check that

00:41:45.436 --> 00:41:45.966 A:middle
out on the iPad.

00:41:50.276 --> 00:41:50.976 A:middle
There we go.

00:41:51.516 --> 00:41:56.046 A:middle
[ Applause ]

00:41:56.546 --> 00:41:58.156 A:middle
So, there are a few additional

00:41:58.156 --> 00:41:59.626 A:middle
steps you'll need to take, like

00:41:59.626 --> 00:42:01.026 A:middle
obtaining a payment session from

00:41:59.626 --> 00:42:01.026 A:middle
obtaining a payment session from

00:42:01.026 --> 00:42:02.076 A:middle
the Apple Pay server.

00:42:02.346 --> 00:42:04.396 A:middle
To learn more about that, please

00:42:04.426 --> 00:42:06.476 A:middle
see the sessions page on the

00:42:06.476 --> 00:42:08.056 A:middle
Apple developer website for

00:42:08.056 --> 00:42:09.046 A:middle
links to those additional

00:42:09.046 --> 00:42:09.626 A:middle
resources.

00:42:11.076 --> 00:42:14.256 A:middle
Now, finally, I realize I

00:42:14.256 --> 00:42:15.446 A:middle
haven't given a glimpse of my

00:42:15.446 --> 00:42:18.716 A:middle
readers-- what they're actually

00:42:18.946 --> 00:42:19.536 A:middle
building.

00:42:20.326 --> 00:42:21.956 A:middle
So, I want to add an image near

00:42:21.956 --> 00:42:23.826 A:middle
the top of my page of the final

00:42:23.826 --> 00:42:24.296 A:middle
product.

00:42:25.626 --> 00:42:27.266 A:middle
But, why stop at a static image?

00:42:27.266 --> 00:42:28.236 A:middle
Wouldn't it be great if you

00:42:28.236 --> 00:42:29.626 A:middle
could actually see the birdhouse

00:42:29.986 --> 00:42:31.206 A:middle
in your own environment, get a

00:42:31.206 --> 00:42:32.206 A:middle
sense of its size?

00:42:33.106 --> 00:42:34.486 A:middle
So, with the new AR Quick Look

00:42:34.486 --> 00:42:36.066 A:middle
feature in iOS 12, we can do

00:42:36.066 --> 00:42:36.736 A:middle
this with just a few lines of

00:42:36.736 --> 00:42:36.976 A:middle
code.

00:42:42.296 --> 00:42:43.886 A:middle
So, we'll go into my HTML.

00:42:43.886 --> 00:42:45.916 A:middle
And, I think this is a good

00:42:45.916 --> 00:42:46.606 A:middle
place of it.

00:42:47.586 --> 00:42:49.256 A:middle
So, all I'm doing here is adding

00:42:49.256 --> 00:42:49.736 A:middle
an image.

00:42:50.166 --> 00:42:52.536 A:middle
And, linking to a USDZ file,

00:42:52.866 --> 00:42:53.666 A:middle
that is the model of my

00:42:53.666 --> 00:42:56.226 A:middle
birdhouse, with a rel attribute

00:42:56.336 --> 00:42:56.936 A:middle
of AR.

00:42:57.206 --> 00:43:02.066 A:middle
Switch back to the iPad, and

00:42:57.206 --> 00:43:02.066 A:middle
Switch back to the iPad, and

00:43:03.076 --> 00:43:04.726 A:middle
there's our finished product.

00:43:04.766 --> 00:43:06.656 A:middle
That looks pretty nice, but now

00:43:06.656 --> 00:43:08.166 A:middle
my users can also tap on this

00:43:08.166 --> 00:43:09.936 A:middle
Quick Look, AR Quick Look icon

00:43:09.936 --> 00:43:10.926 A:middle
in the corner here.

00:43:11.296 --> 00:43:15.136 A:middle
We can see the model, move it

00:43:15.136 --> 00:43:18.726 A:middle
around, and I can also place it

00:43:18.726 --> 00:43:20.586 A:middle
in the real world, and actually

00:43:20.586 --> 00:43:22.296 A:middle
get a sense of what I'm going to

00:43:22.756 --> 00:43:22.886 A:middle
build.

00:43:23.516 --> 00:43:29.836 A:middle
[ Applause ]

00:43:30.336 --> 00:43:33.576 A:middle
So, it's actually really easy to

00:43:34.356 --> 00:43:34.806 A:middle
do this.

00:43:35.196 --> 00:43:36.416 A:middle
Please check out that session if

00:43:36.416 --> 00:43:37.226 A:middle
you have the chance.

00:43:37.386 --> 00:43:38.796 A:middle
I'd like to bring Shloka back up

00:43:38.796 --> 00:43:39.776 A:middle
on stage to wrap things up.

00:43:39.776 --> 00:43:39.956 A:middle
Thank you.

00:43:40.516 --> 00:43:46.916 A:middle
[ Applause ]

00:43:47.416 --> 00:43:49.076 A:middle
&gt;&gt; Thank you so much, Jason.

00:43:49.076 --> 00:43:51.716 A:middle
And, the AR model looks really,

00:43:51.716 --> 00:43:52.416 A:middle
really cool.

00:43:52.656 --> 00:43:54.536 A:middle
And, I think its inspired me to

00:43:55.626 --> 00:43:57.896 A:middle
try to build a birdhouse.

00:43:58.886 --> 00:44:00.186 A:middle
Not making any promises.

00:43:58.886 --> 00:44:00.186 A:middle
Not making any promises.

00:44:02.026 --> 00:44:03.686 A:middle
So, you can add custom drag and

00:44:03.686 --> 00:44:04.466 A:middle
drop features.

00:44:04.756 --> 00:44:07.096 A:middle
And custom fullscreen controls

00:44:07.476 --> 00:44:08.226 A:middle
for the iPad.

00:44:08.896 --> 00:44:10.296 A:middle
You can use the Payment Request

00:44:10.296 --> 00:44:12.106 A:middle
API to support Apple Pay, and

00:44:12.106 --> 00:44:13.576 A:middle
the Service Worker API to

00:44:13.576 --> 00:44:15.226 A:middle
support offline experiences.

00:44:15.746 --> 00:44:17.656 A:middle
Or, you can add AR models to

00:44:17.656 --> 00:44:18.826 A:middle
your content to give it depth.

00:44:19.296 --> 00:44:20.836 A:middle
And now your websites can be

00:44:20.836 --> 00:44:22.406 A:middle
viewed in Apple Watch.

00:44:22.956 --> 00:44:25.646 A:middle
I've called out several sessions

00:44:25.696 --> 00:44:27.146 A:middle
that you can reference for

00:44:27.146 --> 00:44:28.976 A:middle
individual features, but if you

00:44:28.976 --> 00:44:30.786 A:middle
have any questions right after

00:44:30.786 --> 00:44:32.886 A:middle
this talk, stop by the Safari,

00:44:32.886 --> 00:44:34.466 A:middle
WebKit, and Password AutoFill

00:44:34.466 --> 00:44:34.746 A:middle
Lab.

00:44:35.186 --> 00:44:36.476 A:middle
And, check out the link to this

00:44:36.476 --> 00:44:38.066 A:middle
session for, of course,

00:44:38.236 --> 00:44:40.656 A:middle
documentation resources and

00:44:40.656 --> 00:44:41.746 A:middle
related sessions.

00:44:42.076 --> 00:44:45.576 A:middle
Now, there are a lot, a lot of

00:44:45.576 --> 00:44:47.336 A:middle
features when it comes to Web,

00:44:47.756 --> 00:44:48.946 A:middle
and I hope that this quick

00:44:48.946 --> 00:44:51.246 A:middle
overview gives you a taste of

00:44:51.246 --> 00:44:53.656 A:middle
how Apple constantly improves

00:44:53.656 --> 00:44:56.066 A:middle
Safari and WebKit support.

00:44:56.066 --> 00:44:58.646 A:middle
So, web developers, native

00:44:58.646 --> 00:45:00.046 A:middle
developers, and extensions

00:44:58.646 --> 00:45:00.046 A:middle
developers, and extensions

00:45:00.046 --> 00:45:01.966 A:middle
developers can always offer the

00:45:01.966 --> 00:45:04.496 A:middle
best experiences possible for

00:45:04.496 --> 00:45:05.076 A:middle
their users.

00:45:06.446 --> 00:45:07.356 A:middle
Thank you for so much for

00:45:07.356 --> 00:45:08.826 A:middle
enjoying us for this-- for

00:45:08.826 --> 00:45:10.356 A:middle
joining us for this session.

00:45:10.706 --> 00:45:12.526 A:middle
Hope you enjoyed it.

00:45:12.526 --> 00:45:13.496 A:middle
And, enjoy the rest of your

00:45:13.556 --> 00:45:13.976 A:middle
afternoon at WWDC.

00:45:14.516 --> 00:45:18.500 A:middle
[ Applause ]
