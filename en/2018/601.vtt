WEBVTT

00:00:07.516 --> 00:00:14.500 A:middle
[ Music ]

00:00:21.516 --> 00:00:26.236 A:middle
[ Applause ]

00:00:26.736 --> 00:00:29.216 A:middle
&gt;&gt; Good morning and welcome to

00:00:29.216 --> 00:00:31.026 A:middle
the session, Live Screen

00:00:31.026 --> 00:00:32.176 A:middle
Broadcast with ReplayKit.

00:00:32.926 --> 00:00:34.676 A:middle
My name is Alexander and I'm

00:00:34.676 --> 00:00:36.376 A:middle
very excited to be here and talk

00:00:36.376 --> 00:00:38.046 A:middle
to you about ReplayKit concepts

00:00:38.356 --> 00:00:39.786 A:middle
and new features that we bring

00:00:39.786 --> 00:00:40.906 A:middle
to ReplayKit this year.

00:00:41.456 --> 00:00:43.976 A:middle
We've got lots to discuss so

00:00:44.216 --> 00:00:47.276 A:middle
let's get started.

00:00:47.386 --> 00:00:49.396 A:middle
ReplayKit is a framework that

00:00:49.396 --> 00:00:51.086 A:middle
allows you capture application

00:00:51.086 --> 00:00:53.136 A:middle
screen audio and microphone

00:00:53.136 --> 00:00:55.666 A:middle
content in real time or record

00:00:55.666 --> 00:00:57.406 A:middle
to a video file that the users

00:00:57.436 --> 00:00:59.836 A:middle
can later edit or share.


00:01:00.416 --> 00:01:03.756 A:middle
And ReplayKit also supports live

00:01:03.756 --> 00:01:04.866 A:middle
broadcast.

00:01:05.465 --> 00:01:06.786 A:middle
For application generating

00:01:06.786 --> 00:01:10.106 A:middle
content like games, ReplayKit

00:01:10.226 --> 00:01:12.296 A:middle
provides tools that allow them

00:01:12.296 --> 00:01:14.026 A:middle
to stream audio and visual

00:01:14.026 --> 00:01:16.066 A:middle
content using [inaudible] and

00:01:16.066 --> 00:01:17.116 A:middle
broadcast services.

00:01:17.616 --> 00:01:19.616 A:middle
And for the broadcast

00:01:19.616 --> 00:01:21.886 A:middle
applications ReplayKit provides

00:01:21.886 --> 00:01:23.566 A:middle
ability to receive that content

00:01:23.566 --> 00:01:25.516 A:middle
captured from other applications

00:01:25.706 --> 00:01:30.446 A:middle
or entire iOS and encode and

00:01:30.446 --> 00:01:31.246 A:middle
stream to the servers directly

00:01:31.246 --> 00:01:31.926 A:middle
from the same device.

00:01:36.586 --> 00:01:38.196 A:middle
ReplayKit delivers its content

00:01:38.696 --> 00:01:40.466 A:middle
in high quality with lowest

00:01:40.466 --> 00:01:42.566 A:middle
latency and very low performance

00:01:42.566 --> 00:01:44.196 A:middle
overhead and better usage.

00:01:44.866 --> 00:01:46.656 A:middle
It also safeguards the user's

00:01:46.656 --> 00:01:49.706 A:middle
privacy by asking for approval

00:01:49.706 --> 00:01:51.526 A:middle
before any recording or

00:01:51.526 --> 00:01:53.376 A:middle
broadcast begins, and also

00:01:53.826 --> 00:01:55.776 A:middle
showing a prominent indicator

00:01:55.886 --> 00:01:56.796 A:middle
whenever content is being

00:01:56.796 --> 00:01:56.976 A:middle
captured.


00:02:02.286 --> 00:02:03.436 A:middle
In this session today I'm going

00:02:03.436 --> 00:02:05.726 A:middle
to talk about the live broadcast

00:02:05.726 --> 00:02:07.246 A:middle
functionality of ReplayKit and

00:02:07.576 --> 00:02:08.826 A:middle
we're going to start with

00:02:08.886 --> 00:02:10.666 A:middle
overview and talk about

00:02:10.726 --> 00:02:12.546 A:middle
[inaudible] broadcast and iOS

00:02:12.546 --> 00:02:14.936 A:middle
system broadcast, and then we

00:02:14.936 --> 00:02:16.666 A:middle
are going to talk about the new

00:02:16.666 --> 00:02:18.826 A:middle
API called System Broadcast

00:02:18.826 --> 00:02:19.216 A:middle
Picker.

00:02:19.746 --> 00:02:22.136 A:middle
Now, this is an API that allows

00:02:22.136 --> 00:02:23.856 A:middle
you to initiate the broadcast

00:02:24.116 --> 00:02:25.496 A:middle
directly from your broadcast

00:02:25.496 --> 00:02:26.246 A:middle
application.

00:02:28.356 --> 00:02:29.576 A:middle
After that we're going to

00:02:29.776 --> 00:02:31.526 A:middle
discuss how you can actually

00:02:31.526 --> 00:02:32.936 A:middle
implement the broadcast

00:02:32.936 --> 00:02:34.456 A:middle
extensions and how that would

00:02:34.456 --> 00:02:36.906 A:middle
work for you with the new API

00:02:39.016 --> 00:02:39.126 A:middle
that [inaudible].

00:02:39.336 --> 00:02:40.796 A:middle
Also, we're going to talk about

00:02:40.796 --> 00:02:43.606 A:middle
the protecting of the content of

00:02:43.606 --> 00:02:44.666 A:middle
your applications from being

00:02:44.666 --> 00:02:44.976 A:middle
captured.

00:02:48.316 --> 00:02:50.336 A:middle
So let's start with overview of

00:02:50.336 --> 00:02:51.156 A:middle
the live broadcast.

00:02:53.916 --> 00:02:56.816 A:middle
As I said, ReplayKit allows you

00:02:56.816 --> 00:02:58.556 A:middle
to broadcast your app screen,

00:02:58.556 --> 00:03:00.216 A:middle
audio and audio content to


00:02:58.556 --> 00:03:00.216 A:middle
audio and audio content to

00:03:00.216 --> 00:03:01.806 A:middle
search a third-party broadcast

00:03:01.806 --> 00:03:04.116 A:middle
service directly from your iOS

00:03:04.116 --> 00:03:05.376 A:middle
or [inaudible], and on iOS you

00:03:06.066 --> 00:03:11.026 A:middle
can also provide voice or video

00:03:11.026 --> 00:03:13.906 A:middle
commentary using microphone or

00:03:13.906 --> 00:03:14.376 A:middle
camera.

00:03:15.196 --> 00:03:16.606 A:middle
And all this content is

00:03:16.606 --> 00:03:17.766 A:middle
absolutely secure and only

00:03:17.766 --> 00:03:18.666 A:middle
accessible to the servers that

00:03:18.666 --> 00:03:18.976 A:middle
you're using.

00:03:23.276 --> 00:03:24.456 A:middle
So when you're streaming your

00:03:24.456 --> 00:03:25.666 A:middle
game play to Mobcrush or

00:03:25.666 --> 00:03:27.966 A:middle
YouTube, share your screen in

00:03:27.966 --> 00:03:29.016 A:middle
WebEx video call.

00:03:29.856 --> 00:03:31.226 A:middle
Use TeamViewer to work as

00:03:31.226 --> 00:03:33.786 A:middle
customer support, or maybe

00:03:33.786 --> 00:03:35.216 A:middle
stream your drawing app on a

00:03:35.216 --> 00:03:35.796 A:middle
Facebook.

00:03:36.456 --> 00:03:37.666 A:middle
All of that is powered with

00:03:37.816 --> 00:03:38.976 A:middle
ReplayKit technology.

00:03:41.836 --> 00:03:43.926 A:middle
Originally, with the ReplayKit

00:03:43.926 --> 00:03:45.776 A:middle
live broadcast the user would be

00:03:45.776 --> 00:03:47.756 A:middle
in the app and would use the app

00:03:48.076 --> 00:03:49.556 A:middle
to start and stop the broadcast.

00:03:50.516 --> 00:03:52.336 A:middle
An app would do that by directly

00:03:52.336 --> 00:03:53.966 A:middle
communicating to a ReplayKit API

00:03:54.826 --> 00:03:56.526 A:middle
and ReplayKit itself would

00:03:56.526 --> 00:03:58.716 A:middle
involve the broadcast extensions

00:03:58.906 --> 00:04:00.336 A:middle
and begin providing it with


00:03:58.906 --> 00:04:00.336 A:middle
and begin providing it with

00:04:00.476 --> 00:04:02.256 A:middle
visuals and audio content from

00:04:02.256 --> 00:04:04.216 A:middle
that application, and the

00:04:04.216 --> 00:04:06.216 A:middle
extension would encode the media

00:04:06.216 --> 00:04:07.766 A:middle
and stream to the servers and

00:04:08.016 --> 00:04:10.106 A:middle
this is what we call In-App

00:04:10.106 --> 00:04:10.766 A:middle
Broadcast.

00:04:11.256 --> 00:04:16.276 A:middle
And what was new with ReplayKit

00:04:16.386 --> 00:04:19.906 A:middle
2 is that instead we have entire

00:04:19.906 --> 00:04:20.966 A:middle
system in a pack being

00:04:20.966 --> 00:04:21.625 A:middle
broadcasted.

00:04:22.136 --> 00:04:24.736 A:middle
And how this works is the user

00:04:24.736 --> 00:04:26.256 A:middle
would initiate that broadcast

00:04:26.776 --> 00:04:28.266 A:middle
from within the Control Center.

00:04:28.726 --> 00:04:30.266 A:middle
So this is where they start and

00:04:30.266 --> 00:04:31.196 A:middle
stop the broadcast.

00:04:31.196 --> 00:04:35.176 A:middle
And that begins a system wide

00:04:35.706 --> 00:04:37.546 A:middle
ReplayKit 2 broadcast session

00:04:37.546 --> 00:04:39.356 A:middle
and, thus, audio and video

00:04:39.356 --> 00:04:40.556 A:middle
samples, again, go to the

00:04:40.556 --> 00:04:42.156 A:middle
extension and upload it to the

00:04:42.156 --> 00:04:42.596 A:middle
servers.

00:04:43.416 --> 00:04:45.076 A:middle
And conceptually this is the

00:04:45.076 --> 00:04:46.186 A:middle
difference between the two.

00:04:46.656 --> 00:04:49.416 A:middle
And just to talk about the

00:04:50.706 --> 00:04:51.636 A:middle
In-App Broadcast in the

00:04:51.636 --> 00:04:52.126 A:middle
beginning.

00:04:52.756 --> 00:04:55.206 A:middle
In the In-App Broadcast this is

00:04:55.206 --> 00:04:56.786 A:middle
your app or your game that is

00:04:56.786 --> 00:04:59.006 A:middle
providing the content that is

00:04:59.006 --> 00:05:01.436 A:middle
captured live as you play in a


00:04:59.006 --> 00:05:01.436 A:middle
captured live as you play in a

00:05:03.316 --> 00:05:05.096 A:middle
game and your game is calling

00:05:05.096 --> 00:05:07.726 A:middle
the ReplayKit API to start and

00:05:07.726 --> 00:05:08.636 A:middle
stop the broadcast.

00:05:09.836 --> 00:05:12.076 A:middle
And it also presents as

00:05:12.076 --> 00:05:13.766 A:middle
broadcast activity controller so

00:05:13.766 --> 00:05:16.096 A:middle
that the user would pick the

00:05:16.096 --> 00:05:16.566 A:middle
service.

00:05:17.016 --> 00:05:20.836 A:middle
And in line with that, the

00:05:21.076 --> 00:05:22.696 A:middle
broadcast application is

00:05:22.696 --> 00:05:24.456 A:middle
providing you the broadcast

00:05:24.456 --> 00:05:26.826 A:middle
extension which ReplayKit is

00:05:26.826 --> 00:05:29.196 A:middle
working on behalf of that game

00:05:29.816 --> 00:05:31.696 A:middle
to sign users into the service

00:05:31.996 --> 00:05:33.816 A:middle
and upload the broadcast content

00:05:34.786 --> 00:05:36.576 A:middle
live to their servers.

00:05:37.516 --> 00:05:38.956 A:middle
That was our original way of

00:05:39.036 --> 00:05:40.656 A:middle
using ReplayKit Live Broadcast

00:05:41.456 --> 00:05:43.516 A:middle
and we covered this before.

00:05:43.516 --> 00:05:44.756 A:middle
And in case your application

00:05:44.756 --> 00:05:45.756 A:middle
does need this fine [inaudible]

00:05:45.756 --> 00:05:47.196 A:middle
control for starting and

00:05:47.196 --> 00:05:49.626 A:middle
stopping the broadcast, for more

00:05:49.626 --> 00:05:51.056 A:middle
information please find the

00:05:51.056 --> 00:05:53.236 A:middle
session called Go Live with

00:05:53.236 --> 00:05:56.576 A:middle
ReplayKit from a couple of years

00:05:56.576 --> 00:05:56.866 A:middle
ago.

00:05:58.796 --> 00:06:00.416 A:middle
But really, what today's session


00:05:58.796 --> 00:06:00.416 A:middle
But really, what today's session

00:06:00.416 --> 00:06:02.786 A:middle
is about is what we call iOS

00:06:02.856 --> 00:06:03.726 A:middle
system broadcast.

00:06:04.066 --> 00:06:05.276 A:middle
Now, this is, again, the

00:06:05.276 --> 00:06:07.126 A:middle
broadcast of all your onscreen

00:06:07.126 --> 00:06:09.726 A:middle
activity and all your sounds,

00:06:10.486 --> 00:06:11.766 A:middle
and instead of being initiated

00:06:11.766 --> 00:06:13.426 A:middle
from within your application and

00:06:13.836 --> 00:06:15.246 A:middle
starting and stopping when the

00:06:15.246 --> 00:06:19.326 A:middle
app is paused, for example, this

00:06:19.326 --> 00:06:21.596 A:middle
session is started and stopped

00:06:21.596 --> 00:06:23.386 A:middle
within Control Center, and this

00:06:23.386 --> 00:06:25.056 A:middle
is systemwide and it runs

00:06:25.056 --> 00:06:27.076 A:middle
continuously as the user moves

00:06:27.076 --> 00:06:28.476 A:middle
from the home screen to the app

00:06:29.196 --> 00:06:30.696 A:middle
or as they move from one app to

00:06:30.696 --> 00:06:31.076 A:middle
another.

00:06:31.766 --> 00:06:33.916 A:middle
And all of this is built into

00:06:34.186 --> 00:06:36.196 A:middle
iOS 11 and above and this is

00:06:36.196 --> 00:06:37.966 A:middle
what was introduced last year as

00:06:37.966 --> 00:06:38.826 A:middle
ReplayKit 2.

00:06:40.856 --> 00:06:42.376 A:middle
So here's some game and you're

00:06:42.376 --> 00:06:44.466 A:middle
playing a game and you want to

00:06:44.826 --> 00:06:46.466 A:middle
start the live stream and

00:06:46.466 --> 00:06:47.576 A:middle
initiate the broadcast.

00:06:49.036 --> 00:06:50.646 A:middle
So you pull down the Control

00:06:50.696 --> 00:06:52.196 A:middle
Center and say you touch into

00:06:52.196 --> 00:06:54.696 A:middle
that screen recording button and

00:06:55.306 --> 00:06:57.606 A:middle
that will bring up the picture

00:06:57.816 --> 00:06:59.866 A:middle
for you to record your game

00:06:59.866 --> 00:07:02.776 A:middle
play, or if you tap on one of


00:06:59.866 --> 00:07:02.776 A:middle
play, or if you tap on one of

00:07:02.846 --> 00:07:04.296 A:middle
the [inaudible] of broadcast

00:07:04.296 --> 00:07:05.996 A:middle
providers, it will stream out to

00:07:05.996 --> 00:07:06.766 A:middle
their service.

00:07:08.436 --> 00:07:10.026 A:middle
So once you have done that,

00:07:10.056 --> 00:07:12.606 A:middle
you're back to your game and now

00:07:12.606 --> 00:07:13.366 A:middle
you're streaming to that

00:07:13.366 --> 00:07:13.956 A:middle
service.

00:07:14.346 --> 00:07:16.146 A:middle
The broadcast extension receives

00:07:16.466 --> 00:07:17.896 A:middle
the media samples captured from

00:07:17.896 --> 00:07:20.076 A:middle
the screen and uploads the video

00:07:20.076 --> 00:07:21.756 A:middle
stream to its back end and the

00:07:21.756 --> 00:07:23.726 A:middle
viewers they have in their web

00:07:23.766 --> 00:07:25.936 A:middle
browsers, or however they want

00:07:25.936 --> 00:07:29.616 A:middle
to use that stream, are watching

00:07:29.616 --> 00:07:30.946 A:middle
your broadcast on their own

00:07:30.946 --> 00:07:31.976 A:middle
devices around the world.

00:07:36.296 --> 00:07:38.836 A:middle
This is how you start the iOS

00:07:39.026 --> 00:07:39.936 A:middle
system broadcast.

00:07:40.296 --> 00:07:41.906 A:middle
And now, what's interesting

00:07:41.966 --> 00:07:43.586 A:middle
about this kind of broadcast

00:07:43.586 --> 00:07:45.416 A:middle
again, is that, as I said, it

00:07:45.416 --> 00:07:46.666 A:middle
continues regardless of you

00:07:47.046 --> 00:07:49.466 A:middle
moving from one app to another.

00:07:50.106 --> 00:07:52.446 A:middle
So I'm broadcasting from my home

00:07:52.446 --> 00:07:54.326 A:middle
screen here and then my home

00:07:54.326 --> 00:07:55.426 A:middle
screen is what is being

00:07:55.426 --> 00:07:55.996 A:middle
broadcasted.

00:07:56.486 --> 00:07:59.096 A:middle
And then if I'm launching a

00:07:59.096 --> 00:08:01.516 A:middle
different app, that app is going


00:07:59.096 --> 00:08:01.516 A:middle
different app, that app is going

00:08:01.926 --> 00:08:03.796 A:middle
to be broadcasted now, and

00:08:03.796 --> 00:08:05.306 A:middle
that's really the core thing

00:08:05.346 --> 00:08:05.716 A:middle
now.

00:08:05.806 --> 00:08:07.406 A:middle
So the broadcast itself is a

00:08:07.406 --> 00:08:09.076 A:middle
systemwide experience and you

00:08:09.076 --> 00:08:10.506 A:middle
can go back to the Control

00:08:10.506 --> 00:08:13.466 A:middle
Center and stop it or you can

00:08:13.466 --> 00:08:15.046 A:middle
tap on the status bar at the top

00:08:15.046 --> 00:08:15.826 A:middle
and it will bring up the

00:08:15.826 --> 00:08:17.376 A:middle
controls to stop the broadcast.

00:08:17.836 --> 00:08:21.216 A:middle
And another thing is that if

00:08:21.216 --> 00:08:23.216 A:middle
next I ran as a landscape,

00:08:23.596 --> 00:08:24.736 A:middle
there's also a way to support

00:08:24.736 --> 00:08:30.036 A:middle
that and you can move between

00:08:30.036 --> 00:08:31.936 A:middle
landscape and portrait as you go

00:08:31.936 --> 00:08:32.976 A:middle
from one app to another.

00:08:38.226 --> 00:08:40.385 A:middle
So this was an iOS system

00:08:40.385 --> 00:08:42.116 A:middle
broadcast we enabled last year

00:08:42.206 --> 00:08:43.765 A:middle
and the feedback and adoption

00:08:43.765 --> 00:08:46.296 A:middle
we've seen since then was

00:08:46.296 --> 00:08:46.736 A:middle
amazing.

00:08:47.186 --> 00:08:49.166 A:middle
And our live broadcast API today

00:08:49.166 --> 00:08:51.166 A:middle
is used in many apps in

00:08:51.166 --> 00:08:54.096 A:middle
categories like communication,

00:08:54.346 --> 00:08:57.106 A:middle
streaming, house, help desk,

00:08:57.106 --> 00:08:58.896 A:middle
education and social.

00:08:59.426 --> 00:09:02.956 A:middle
But at the same time we had a


00:08:59.426 --> 00:09:02.956 A:middle
But at the same time we had a

00:09:02.956 --> 00:09:05.616 A:middle
lot of feedback that people are

00:09:05.676 --> 00:09:07.226 A:middle
having hard time finding this

00:09:07.266 --> 00:09:08.866 A:middle
broadcast UI in the Control

00:09:08.866 --> 00:09:11.686 A:middle
Center so we wanted to make it

00:09:11.686 --> 00:09:14.296 A:middle
easy for you to edit right into

00:09:14.296 --> 00:09:15.536 A:middle
your app.

00:09:15.856 --> 00:09:17.746 A:middle
And this year our goal was to

00:09:17.746 --> 00:09:19.466 A:middle
allow you integrate iOS system

00:09:19.466 --> 00:09:21.406 A:middle
broadcast into your application,

00:09:21.576 --> 00:09:23.156 A:middle
and we are very excited to

00:09:23.156 --> 00:09:24.856 A:middle
announce System Broadcast

00:09:24.856 --> 00:09:24.976 A:middle
Picker.

00:09:29.046 --> 00:09:30.636 A:middle
So let me go back to my diagram.

00:09:30.916 --> 00:09:36.056 A:middle
So what we added now is sort of

00:09:36.056 --> 00:09:38.826 A:middle
a hybrid approach to last two

00:09:38.826 --> 00:09:39.546 A:middle
[inaudible] styles.

00:09:40.036 --> 00:09:43.996 A:middle
And in this hybrid approach we

00:09:43.996 --> 00:09:46.056 A:middle
edit up the ability for your

00:09:46.056 --> 00:09:48.166 A:middle
application to also be initiator

00:09:48.436 --> 00:09:49.626 A:middle
of iOS system broadcast.

00:09:50.676 --> 00:09:52.406 A:middle
So your app now can do the same

00:09:52.406 --> 00:09:54.146 A:middle
thing as what Control Center is

00:09:54.146 --> 00:09:57.196 A:middle
doing; start the broadcast and

00:09:57.196 --> 00:09:59.416 A:middle
then allow it to continue as you

00:09:59.416 --> 00:10:01.636 A:middle
move from one app to another and


00:09:59.416 --> 00:10:01.636 A:middle
move from one app to another and

00:10:02.016 --> 00:10:03.346 A:middle
then move to the home screen,

00:10:03.516 --> 00:10:03.896 A:middle
and so on.

00:10:03.896 --> 00:10:06.226 A:middle
So as the user starts a

00:10:06.226 --> 00:10:08.136 A:middle
broadcast from your application,

00:10:08.796 --> 00:10:10.116 A:middle
he can later go to the Control

00:10:10.116 --> 00:10:12.976 A:middle
Center and stop it from there or

00:10:13.276 --> 00:10:14.706 A:middle
vice versa; he could start from

00:10:14.706 --> 00:10:16.456 A:middle
the Control Center and then go

00:10:16.456 --> 00:10:17.666 A:middle
to your app and tap the button

00:10:17.666 --> 00:10:17.976 A:middle
that stops.

00:10:22.346 --> 00:10:24.456 A:middle
So again, the System Broadcast

00:10:24.456 --> 00:10:27.906 A:middle
Picker allows users to start the

00:10:27.906 --> 00:10:29.966 A:middle
iOS system broadcast without

00:10:29.966 --> 00:10:31.886 A:middle
leaving your application, and

00:10:32.056 --> 00:10:34.206 A:middle
this is just a simple button in

00:10:34.206 --> 00:10:36.116 A:middle
the view that we provide and

00:10:36.596 --> 00:10:38.476 A:middle
this is a new feature we are

00:10:38.476 --> 00:10:41.476 A:middle
enabling in iOS 12.

00:10:41.536 --> 00:10:44.766 A:middle
Here is example of that.

00:10:44.766 --> 00:10:46.586 A:middle
Here I have the sample app, Fox

00:10:46.586 --> 00:10:49.666 A:middle
2 and I edit app with button at

00:10:50.216 --> 00:10:51.686 A:middle
the top.

00:10:51.846 --> 00:10:53.446 A:middle
So if I hit this Broadcast

00:10:53.446 --> 00:10:55.316 A:middle
Picker button, that's going to

00:10:55.316 --> 00:10:56.986 A:middle
bring up the same UI as you

00:10:56.986 --> 00:10:59.926 A:middle
would have seen if you would go

00:10:59.926 --> 00:11:01.176 A:middle
to the Control Center.


00:10:59.926 --> 00:11:01.176 A:middle
to the Control Center.

00:11:01.246 --> 00:11:04.886 A:middle
So I pick out the broadcast

00:11:04.886 --> 00:11:07.366 A:middle
provider and start my broadcast.

00:11:08.186 --> 00:11:10.366 A:middle
Now I'm back in the app and now

00:11:10.366 --> 00:11:11.616 A:middle
I'm just broadcasting to that

00:11:11.616 --> 00:11:14.386 A:middle
provider and people around the

00:11:14.386 --> 00:11:17.606 A:middle
world can watch my live stream.

00:11:20.376 --> 00:11:22.326 A:middle
So how is this done?

00:11:23.746 --> 00:11:25.706 A:middle
Okay. There is a new class

00:11:25.746 --> 00:11:26.166 A:middle
called

00:11:26.556 --> 00:11:29.316 A:middle
RPSystemBroadcastPickerView and

00:11:29.466 --> 00:11:31.726 A:middle
it's just a subclass of UI View

00:11:31.956 --> 00:11:34.026 A:middle
and you can add it to your

00:11:34.026 --> 00:11:35.796 A:middle
application using the interface

00:11:35.796 --> 00:11:39.576 A:middle
builder as a view with a custom

00:11:40.486 --> 00:11:41.816 A:middle
class, or you can do it

00:11:41.816 --> 00:11:44.156 A:middle
programmatically and all you

00:11:44.156 --> 00:11:45.856 A:middle
need to do is just run it in

00:11:45.906 --> 00:11:46.576 A:middle
instance of

00:11:46.816 --> 00:11:49.096 A:middle
RPSystemBroadcastPickerView and

00:11:49.096 --> 00:11:50.796 A:middle
add it to your view hierarchy.

00:11:51.336 --> 00:11:56.556 A:middle
So this is a more simple way to

00:11:56.556 --> 00:11:59.976 A:middle
use the broadcast picker, but I

00:11:59.976 --> 00:12:01.436 A:middle
know that many of you in this


00:11:59.976 --> 00:12:01.436 A:middle
know that many of you in this

00:12:01.436 --> 00:12:04.206 A:middle
room broadcast service

00:12:04.206 --> 00:12:04.866 A:middle
developers.

00:12:05.756 --> 00:12:07.276 A:middle
And finally, with this new API

00:12:07.426 --> 00:12:09.696 A:middle
your users can start the

00:12:09.696 --> 00:12:11.616 A:middle
broadcast directly from your

00:12:11.616 --> 00:12:13.746 A:middle
application and there's no more

00:12:13.746 --> 00:12:14.816 A:middle
need to include all those

00:12:14.816 --> 00:12:16.316 A:middle
tutorials, how you can enable

00:12:16.316 --> 00:12:17.256 A:middle
the screen recording and

00:12:17.256 --> 00:12:18.886 A:middle
settings and how to find your

00:12:18.886 --> 00:12:19.816 A:middle
service and that [inaudible] in

00:12:19.816 --> 00:12:20.756 A:middle
the Control Center.

00:12:21.866 --> 00:12:24.306 A:middle
But, however, you would probably

00:12:24.566 --> 00:12:26.436 A:middle
like the Picker to show the

00:12:26.436 --> 00:12:28.786 A:middle
broadcast extension for just

00:12:28.786 --> 00:12:33.916 A:middle
your service, and ReplayKit

00:12:33.916 --> 00:12:35.956 A:middle
provides API that lets you do

00:12:35.956 --> 00:12:37.596 A:middle
exactly that.

00:12:38.116 --> 00:12:40.856 A:middle
And it is just a property of

00:12:40.856 --> 00:12:43.946 A:middle
that view and what you need to

00:12:43.946 --> 00:12:45.426 A:middle
do is just get the bundle

00:12:45.426 --> 00:12:47.866 A:middle
identifier from your broadcast

00:12:47.866 --> 00:12:49.836 A:middle
extension and assign to the

00:12:50.046 --> 00:12:51.966 A:middle
property of the view called

00:12:52.246 --> 00:12:53.306 A:middle
preferredExtension.

00:12:55.976 --> 00:12:58.596 A:middle
Here's a code example of how you

00:12:58.596 --> 00:12:59.256 A:middle
could do this.

00:12:59.616 --> 00:13:02.926 A:middle
You would probably like to set


00:12:59.616 --> 00:13:02.926 A:middle
You would probably like to set

00:13:02.926 --> 00:13:03.906 A:middle
the property right after

00:13:03.906 --> 00:13:05.756 A:middle
correcting the view, and the

00:13:05.756 --> 00:13:06.906 A:middle
only difference from that

00:13:06.906 --> 00:13:08.606 A:middle
example would be that you need

00:13:08.606 --> 00:13:11.116 A:middle
to replace the string called

00:13:11.116 --> 00:13:12.686 A:middle
com.your-app.broadcast.

00:13:12.686 --> 00:13:13.316 A:middle
extension.

00:13:13.636 --> 00:13:14.836 A:middle
It's a bundle idea of your

00:13:14.836 --> 00:13:15.356 A:middle
extension.

00:13:15.926 --> 00:13:20.536 A:middle
So here's a diagram, and I just

00:13:20.536 --> 00:13:23.676 A:middle
want to emphasize the point

00:13:23.676 --> 00:13:24.986 A:middle
about the picker view that you

00:13:24.986 --> 00:13:26.286 A:middle
create in your app.

00:13:26.446 --> 00:13:28.766 A:middle
So that view is just a shortcut

00:13:28.766 --> 00:13:30.716 A:middle
that brings up a system UI of

00:13:30.716 --> 00:13:32.546 A:middle
the broadcast picker, the same

00:13:32.546 --> 00:13:34.586 A:middle
UI that you can access using the

00:13:34.586 --> 00:13:35.446 A:middle
Control Center.

00:13:36.756 --> 00:13:39.256 A:middle
And the picker itself belongs to

00:13:39.256 --> 00:13:41.156 A:middle
the system and your application

00:13:41.446 --> 00:13:43.096 A:middle
does not own any part of the

00:13:44.186 --> 00:13:46.786 A:middle
broadcast state and also cannot

00:13:47.236 --> 00:13:49.036 A:middle
start or stop the system

00:13:49.036 --> 00:13:49.976 A:middle
broadcast programmatically.

00:13:54.376 --> 00:13:56.136 A:middle
So this is what you need to do

00:13:56.326 --> 00:13:58.326 A:middle
to add the iOS system broadcast

00:13:58.326 --> 00:13:59.296 A:middle
to your app.

00:13:59.436 --> 00:14:01.136 A:middle
There's a new API and it is


00:13:59.436 --> 00:14:01.136 A:middle
There's a new API and it is

00:14:01.256 --> 00:14:03.406 A:middle
fairly simple and you could

00:14:03.406 --> 00:14:04.616 A:middle
really be done adopting it

00:14:05.016 --> 00:14:06.146 A:middle
before leaving this session.

00:14:06.636 --> 00:14:09.696 A:middle
And next we are going to walk

00:14:09.696 --> 00:14:11.096 A:middle
through the process for the

00:14:11.096 --> 00:14:12.636 A:middle
broadcast extension developers

00:14:13.196 --> 00:14:15.266 A:middle
and discuss how you can actually

00:14:15.266 --> 00:14:16.586 A:middle
implement the broadcast

00:14:16.586 --> 00:14:18.786 A:middle
extension and how things would

00:14:18.786 --> 00:14:20.496 A:middle
work for you if your app

00:14:20.496 --> 00:14:22.696 A:middle
provides both the extension and

00:14:22.696 --> 00:14:23.576 A:middle
the broadcast picker.

00:14:25.576 --> 00:14:26.966 A:middle
So let me come back to that

00:14:26.966 --> 00:14:27.536 A:middle
diagram.

00:14:27.536 --> 00:14:28.796 A:middle
We are sort of moving to the

00:14:28.976 --> 00:14:31.306 A:middle
broadcast extension site now and

00:14:31.836 --> 00:14:32.966 A:middle
we want to show you the path

00:14:32.966 --> 00:14:33.976 A:middle
assuming the system broadcast.

00:14:39.766 --> 00:14:41.006 A:middle
Let's start with talking about

00:14:41.006 --> 00:14:42.966 A:middle
the broadcast application and

00:14:43.516 --> 00:14:45.656 A:middle
the broadcast extension and what

00:14:45.656 --> 00:14:48.726 A:middle
each of them needs to do during

00:14:48.726 --> 00:14:50.796 A:middle
the system broadcast session.

00:14:52.916 --> 00:14:54.796 A:middle
So you install the broadcast

00:14:54.796 --> 00:14:56.376 A:middle
extension along with the

00:14:56.796 --> 00:14:58.496 A:middle
application that contains it.

00:14:58.666 --> 00:15:00.246 A:middle
So if you install Facebook, you


00:14:58.666 --> 00:15:00.246 A:middle
So if you install Facebook, you

00:15:00.246 --> 00:15:02.076 A:middle
also install Facebook broadcast

00:15:02.486 --> 00:15:02.986 A:middle
extension.

00:15:04.216 --> 00:15:08.306 A:middle
And broadcast extension and the

00:15:08.306 --> 00:15:10.466 A:middle
application are separate

00:15:10.466 --> 00:15:12.226 A:middle
binaries and each runs in its

00:15:12.226 --> 00:15:16.266 A:middle
own process and those processes

00:15:16.676 --> 00:15:18.926 A:middle
are invoked directly by the user

00:15:19.186 --> 00:15:20.626 A:middle
and independently from each

00:15:20.626 --> 00:15:20.916 A:middle
other.

00:15:21.996 --> 00:15:23.706 A:middle
And typically you would use

00:15:23.706 --> 00:15:25.556 A:middle
application to allow user sign

00:15:25.556 --> 00:15:27.566 A:middle
in or sign up for your service.

00:15:28.636 --> 00:15:31.636 A:middle
And now for the apps that will

00:15:31.636 --> 00:15:33.476 A:middle
adopt the broadcast picker API,

00:15:33.636 --> 00:15:37.416 A:middle
you can also let user to type in

00:15:37.416 --> 00:15:38.966 A:middle
some message before posting this

00:15:38.966 --> 00:15:40.726 A:middle
particular broadcast to his

00:15:40.726 --> 00:15:41.146 A:middle
Facebook.

00:15:41.626 --> 00:15:46.106 A:middle
And the broadcast extension,

00:15:47.266 --> 00:15:49.426 A:middle
that's all the actual work when

00:15:49.466 --> 00:15:51.226 A:middle
everything required to start the

00:15:51.226 --> 00:15:53.376 A:middle
broadcast is already available.

00:15:55.376 --> 00:15:57.336 A:middle
So again, the extension does the

00:15:57.336 --> 00:15:59.836 A:middle
work of taking samples edited by

00:15:59.836 --> 00:16:03.156 A:middle
ReplayKit, the raw samples of


00:15:59.836 --> 00:16:03.156 A:middle
ReplayKit, the raw samples of

00:16:03.156 --> 00:16:05.646 A:middle
the audio from the app, video of

00:16:05.646 --> 00:16:07.666 A:middle
the screen and perhaps audio

00:16:07.846 --> 00:16:09.416 A:middle
from the microphone and encoding

00:16:09.416 --> 00:16:11.516 A:middle
starts and uploading to your

00:16:11.516 --> 00:16:12.676 A:middle
service using whatever

00:16:12.676 --> 00:16:14.046 A:middle
technology you prefer to use.

00:16:17.016 --> 00:16:18.506 A:middle
To help you get started

00:16:18.816 --> 00:16:20.196 A:middle
developing the new broadcast

00:16:20.196 --> 00:16:22.826 A:middle
services we provide the Xcode

00:16:22.866 --> 00:16:26.036 A:middle
template and just add the

00:16:26.036 --> 00:16:27.856 A:middle
extension to your project using

00:16:27.856 --> 00:16:29.406 A:middle
the template and you'll be ready

00:16:29.406 --> 00:16:30.096 A:middle
to begin.

00:16:30.866 --> 00:16:32.316 A:middle
So now let's look how you can

00:16:32.496 --> 00:16:35.386 A:middle
code all of this.

00:16:35.566 --> 00:16:37.296 A:middle
So when you create an extension

00:16:37.536 --> 00:16:39.236 A:middle
in your project using Xcode

00:16:39.236 --> 00:16:40.386 A:middle
template, you'll get a

00:16:40.386 --> 00:16:41.876 A:middle
SampleHandler class like this

00:16:42.406 --> 00:16:45.756 A:middle
and this is where you add your

00:16:45.756 --> 00:16:47.556 A:middle
code to handle different events

00:16:47.556 --> 00:16:49.026 A:middle
during the broadcast.

00:16:49.676 --> 00:16:51.226 A:middle
And also, you would implement

00:16:51.226 --> 00:16:52.406 A:middle
this function that handles

00:16:52.796 --> 00:16:53.746 A:middle
incoming audio and video

00:16:53.746 --> 00:16:53.976 A:middle
samples.

00:16:58.176 --> 00:17:00.136 A:middle
This is how the life cycle of


00:16:58.176 --> 00:17:00.136 A:middle
This is how the life cycle of

00:17:00.136 --> 00:17:01.286 A:middle
the broadcast usually looks

00:17:01.286 --> 00:17:01.526 A:middle
like.

00:17:03.056 --> 00:17:05.685 A:middle
So we have states called setup,

00:17:05.806 --> 00:17:09.496 A:middle
initialized, started, processing

00:17:09.616 --> 00:17:10.156 A:middle
and stopped.

00:17:10.286 --> 00:17:14.606 A:middle
Over on the left there's this

00:17:14.646 --> 00:17:16.096 A:middle
green square which corresponds

00:17:16.096 --> 00:17:18.476 A:middle
to the state when your broadcast

00:17:18.476 --> 00:17:20.986 A:middle
extension is not running yet and

00:17:20.986 --> 00:17:23.415 A:middle
at this point your app could,

00:17:23.415 --> 00:17:24.646 A:middle
for example, get the login

00:17:24.646 --> 00:17:26.526 A:middle
credentials from the user and

00:17:26.526 --> 00:17:28.616 A:middle
use a shared keychain to process

00:17:28.616 --> 00:17:31.126 A:middle
credentials to the extension.

00:17:31.816 --> 00:17:34.226 A:middle
Or again, here you could let the

00:17:34.226 --> 00:17:35.906 A:middle
user to type in that message for

00:17:35.906 --> 00:17:39.326 A:middle
the Facebook part and pass it to

00:17:39.376 --> 00:17:41.526 A:middle
the extension like one way or

00:17:41.526 --> 00:17:41.856 A:middle
another.

00:17:42.536 --> 00:17:45.356 A:middle
So once the user initiates a

00:17:45.356 --> 00:17:47.386 A:middle
broadcast, using the Control

00:17:47.386 --> 00:17:49.656 A:middle
Center or your application that

00:17:49.656 --> 00:17:51.066 A:middle
adopted the broadcast picker,

00:17:52.526 --> 00:17:55.136 A:middle
ReplayKit launches an extension

00:17:55.136 --> 00:17:57.206 A:middle
process and creates an instance

00:17:57.206 --> 00:17:58.756 A:middle
of your SampleHandler class.

00:17:59.826 --> 00:18:02.626 A:middle
And at that point you can


00:17:59.826 --> 00:18:02.626 A:middle
And at that point you can

00:18:02.626 --> 00:18:04.896 A:middle
override the default initializer

00:18:04.896 --> 00:18:07.086 A:middle
of SampleHandler and do

00:18:07.086 --> 00:18:08.446 A:middle
something essential for your

00:18:08.446 --> 00:18:09.776 A:middle
broadcast and not directly

00:18:09.776 --> 00:18:11.216 A:middle
related to handling the media

00:18:11.216 --> 00:18:11.626 A:middle
samples.

00:18:12.216 --> 00:18:14.856 A:middle
So, for example, you could get

00:18:15.626 --> 00:18:17.106 A:middle
login credentials from this

00:18:17.106 --> 00:18:19.096 A:middle
keychain and establish a

00:18:19.096 --> 00:18:20.526 A:middle
broadcast session with your

00:18:20.526 --> 00:18:21.006 A:middle
servers.

00:18:23.576 --> 00:18:25.316 A:middle
So once the process is launched

00:18:25.346 --> 00:18:26.556 A:middle
and the instance of your

00:18:26.556 --> 00:18:28.846 A:middle
SampleHandler already exists,

00:18:30.456 --> 00:18:32.786 A:middle
the extension is notified that

00:18:32.856 --> 00:18:34.436 A:middle
ReplayKit will begin providing

00:18:34.436 --> 00:18:37.056 A:middle
it with audio and video samples

00:18:37.466 --> 00:18:38.566 A:middle
using the function called

00:18:38.626 --> 00:18:41.846 A:middle
broadcastStarted, and in this

00:18:41.846 --> 00:18:44.046 A:middle
function you'd probably like to

00:18:44.046 --> 00:18:46.646 A:middle
create your media engine or do

00:18:46.686 --> 00:18:48.866 A:middle
anything else that you need to

00:18:48.866 --> 00:18:50.336 A:middle
start receiving the samples in

00:18:50.336 --> 00:18:52.336 A:middle
real time and encoding them and

00:18:52.336 --> 00:18:53.376 A:middle
uploading to your servers.

00:18:56.056 --> 00:18:57.806 A:middle
So once a broadcast is running

00:18:57.806 --> 00:19:02.066 A:middle
now ReplayKit will provide raw


00:18:57.806 --> 00:19:02.066 A:middle
now ReplayKit will provide raw

00:19:02.066 --> 00:19:04.346 A:middle
audio and video samples and your

00:19:04.346 --> 00:19:06.046 A:middle
extension needs to encode it and

00:19:06.046 --> 00:19:08.146 A:middle
upload it to your video service

00:19:08.396 --> 00:19:09.966 A:middle
using whatever technology you

00:19:09.966 --> 00:19:10.736 A:middle
prefer to use.

00:19:11.096 --> 00:19:13.686 A:middle
ReplayKit provides your

00:19:13.686 --> 00:19:15.406 A:middle
extension three types of the

00:19:15.406 --> 00:19:19.456 A:middle
samples; samples with video

00:19:19.456 --> 00:19:20.576 A:middle
captured from the screen,

00:19:21.236 --> 00:19:22.596 A:middle
samples with audio tapped from

00:19:22.596 --> 00:19:25.586 A:middle
the application and samples with

00:19:25.586 --> 00:19:27.236 A:middle
audio captured from the

00:19:27.236 --> 00:19:29.226 A:middle
microphone, and your extension

00:19:29.376 --> 00:19:31.076 A:middle
will encode all of this and

00:19:31.126 --> 00:19:33.206 A:middle
upload to the service.

00:19:35.236 --> 00:19:37.016 A:middle
And all of those are going to

00:19:37.016 --> 00:19:38.976 A:middle
the extension and are handled by

00:19:38.976 --> 00:19:39.786 A:middle
the function called

00:19:40.576 --> 00:19:42.336 A:middle
processSampleBuffer.

00:19:42.986 --> 00:19:45.546 A:middle
This function receives a single

00:19:45.616 --> 00:19:47.716 A:middle
CMSampleBuffer, as you see, and

00:19:47.716 --> 00:19:48.646 A:middle
the type of the buffer.

00:19:49.696 --> 00:19:51.286 A:middle
And what it needs to do is to

00:19:51.286 --> 00:19:52.576 A:middle
encode and upload the media

00:19:52.576 --> 00:19:54.556 A:middle
samples, and in this code

00:19:54.556 --> 00:19:56.096 A:middle
example we show you how you can

00:19:56.096 --> 00:19:58.026 A:middle
encode the video using the Video

00:19:58.026 --> 00:19:58.646 A:middle
Toolbox.

00:19:59.736 --> 00:20:02.066 A:middle
So we recommend using the Video


00:19:59.736 --> 00:20:02.066 A:middle
So we recommend using the Video

00:20:02.066 --> 00:20:04.356 A:middle
Toolbox as it provides hardware

00:20:04.356 --> 00:20:05.716 A:middle
accelerated encoding

00:20:05.716 --> 00:20:08.296 A:middle
capabilities, and that is

00:20:08.296 --> 00:20:10.146 A:middle
especially important for our use

00:20:10.146 --> 00:20:12.696 A:middle
case because extensions have

00:20:12.756 --> 00:20:13.946 A:middle
much lower memory limits

00:20:13.946 --> 00:20:14.976 A:middle
compared to their applications.

00:20:19.186 --> 00:20:22.086 A:middle
So once you're encoding and

00:20:22.086 --> 00:20:23.826 A:middle
streaming the video to the

00:20:23.826 --> 00:20:26.056 A:middle
broadcast servers the viewers

00:20:26.056 --> 00:20:28.266 A:middle
around the world can or could

00:20:28.266 --> 00:20:30.846 A:middle
watch your broadcast live, but

00:20:31.516 --> 00:20:32.796 A:middle
they need some way to find your

00:20:32.796 --> 00:20:33.336 A:middle
broadcast.

00:20:34.676 --> 00:20:36.766 A:middle
And say if a person likes

00:20:37.146 --> 00:20:38.746 A:middle
playing and watching Angry

00:20:38.746 --> 00:20:40.626 A:middle
Birds, there should be someplace

00:20:40.626 --> 00:20:42.326 A:middle
on your website or in your app

00:20:42.776 --> 00:20:44.656 A:middle
where he can find all the live

00:20:44.656 --> 00:20:47.756 A:middle
broadcasts with that game.

00:20:47.926 --> 00:20:50.626 A:middle
And in order to implement this

00:20:50.976 --> 00:20:52.186 A:middle
you need to add to your video

00:20:52.186 --> 00:20:54.096 A:middle
stream some information about

00:20:54.096 --> 00:20:55.576 A:middle
the game that is being

00:20:55.576 --> 00:20:58.806 A:middle
broadcasted now, and for that

00:20:59.256 --> 00:21:01.206 A:middle
ReplayKit provides API function


00:20:59.256 --> 00:21:01.206 A:middle
ReplayKit provides API function

00:21:01.206 --> 00:21:03.386 A:middle
called broadcastAnnotatedWith

00:21:03.386 --> 00:21:05.616 A:middle
ApplicationInfo, and as soon as

00:21:05.616 --> 00:21:08.866 A:middle
a player starts his game Angry

00:21:08.866 --> 00:21:10.256 A:middle
Birds sends this example,

00:21:10.926 --> 00:21:12.266 A:middle
ReplayKit notifies your

00:21:12.266 --> 00:21:14.516 A:middle
extension that that has happened

00:21:14.846 --> 00:21:16.286 A:middle
and provides a dictionary with

00:21:16.286 --> 00:21:17.676 A:middle
details about the app that was

00:21:17.676 --> 00:21:17.996 A:middle
started.

00:21:18.416 --> 00:21:23.556 A:middle
And as an example, you can use

00:21:23.556 --> 00:21:25.306 A:middle
the key defined by ReplayKit

00:21:25.356 --> 00:21:28.366 A:middle
called RPApplicationInfoBundle

00:21:28.366 --> 00:21:31.146 A:middle
IdentifierKey and get the bundle

00:21:31.146 --> 00:21:32.936 A:middle
ID of that game and pass it as a

00:21:32.936 --> 00:21:34.476 A:middle
metadata to your stream.

00:21:39.976 --> 00:21:41.316 A:middle
When the user stops the

00:21:41.316 --> 00:21:43.156 A:middle
broadcast, one way or another,

00:21:44.296 --> 00:21:45.616 A:middle
ReplayKit is using function

00:21:45.616 --> 00:21:47.936 A:middle
called broadcastFinished to

00:21:47.936 --> 00:21:49.296 A:middle
communicate to your extension

00:21:49.296 --> 00:21:50.736 A:middle
that broadcast session is over

00:21:50.736 --> 00:21:51.676 A:middle
and there will be no more

00:21:51.676 --> 00:21:53.756 A:middle
samples delivered to the

00:21:53.756 --> 00:21:54.486 A:middle
SampleHandler.

00:21:54.486 --> 00:21:57.086 A:middle
And in this function you would

00:21:57.086 --> 00:21:59.016 A:middle
probably like to finish

00:21:59.016 --> 00:22:00.986 A:middle
uploading your buffered video


00:21:59.016 --> 00:22:00.986 A:middle
uploading your buffered video

00:22:00.986 --> 00:22:02.876 A:middle
and [inaudible] your media

00:22:02.946 --> 00:22:04.616 A:middle
engine or anything else that you

00:22:04.616 --> 00:22:04.976 A:middle
need to release.

00:22:10.176 --> 00:22:13.386 A:middle
So this is how the broadcast

00:22:13.386 --> 00:22:15.546 A:middle
life cycle usually goes.

00:22:15.676 --> 00:22:17.296 A:middle
And there's one more point that

00:22:17.296 --> 00:22:18.556 A:middle
I would like to mention here.

00:22:18.646 --> 00:22:23.886 A:middle
As we discussed, everything

00:22:23.886 --> 00:22:25.606 A:middle
required to set up the broadcast

00:22:26.236 --> 00:22:28.396 A:middle
should happen in the application

00:22:29.296 --> 00:22:31.256 A:middle
and you would get the login

00:22:31.256 --> 00:22:33.806 A:middle
credentials using the app or you

00:22:33.806 --> 00:22:35.046 A:middle
could get the name for the

00:22:35.046 --> 00:22:36.666 A:middle
broadcast in the application,

00:22:37.156 --> 00:22:40.166 A:middle
and we have a state for this,

00:22:40.166 --> 00:22:41.676 A:middle
this green square on the left

00:22:41.676 --> 00:22:41.946 A:middle
side.

00:22:42.986 --> 00:22:44.896 A:middle
However, this could be the case

00:22:44.896 --> 00:22:46.966 A:middle
that when the broadcast has

00:22:46.966 --> 00:22:48.836 A:middle
started, your extension is

00:22:48.836 --> 00:22:50.426 A:middle
missing something to proceed as

00:22:50.426 --> 00:22:51.086 A:middle
a broadcast.

00:22:51.126 --> 00:22:53.656 A:middle
For example, the login process

00:22:53.686 --> 00:22:55.816 A:middle
could have failed or something

00:22:55.856 --> 00:22:57.346 A:middle
else is needed, and I want to

00:22:57.346 --> 00:23:00.066 A:middle
show you how you can handle this


00:22:57.346 --> 00:23:00.066 A:middle
show you how you can handle this

00:23:01.976 --> 00:23:02.106 A:middle
case.

00:23:02.286 --> 00:23:04.026 A:middle
ReplayKit provides an API that

00:23:04.126 --> 00:23:06.096 A:middle
allows extension to communicate

00:23:06.096 --> 00:23:08.416 A:middle
to the user that broadcast

00:23:08.416 --> 00:23:10.496 A:middle
cannot be started and provide a

00:23:10.496 --> 00:23:12.006 A:middle
particular action required to

00:23:12.006 --> 00:23:12.816 A:middle
fix the problem.

00:23:13.316 --> 00:23:16.186 A:middle
And the way it works, the

00:23:16.186 --> 00:23:19.116 A:middle
extension calls some API

00:23:19.116 --> 00:23:20.886 A:middle
function and ReplayKit will

00:23:20.886 --> 00:23:22.866 A:middle
terminate the session and

00:23:22.906 --> 00:23:26.006 A:middle
present the user the alert that

00:23:26.816 --> 00:23:29.406 A:middle
will include the failure reason

00:23:29.636 --> 00:23:31.486 A:middle
provided by the extension, and

00:23:31.486 --> 00:23:33.226 A:middle
in this example this error

00:23:33.226 --> 00:23:34.956 A:middle
message is from Mobcrush and it

00:23:34.956 --> 00:23:37.116 A:middle
says that user is not logged in.

00:23:37.116 --> 00:23:41.316 A:middle
So next is the user tabs at

00:23:41.316 --> 00:23:43.266 A:middle
bottom go to the application,

00:23:44.096 --> 00:23:45.976 A:middle
ReplayKit is launching your

00:23:45.976 --> 00:23:47.596 A:middle
application and what you need to

00:23:47.596 --> 00:23:49.576 A:middle
do there is handle this case in

00:23:49.576 --> 00:23:51.446 A:middle
some way, present the UI by user

00:23:51.446 --> 00:23:53.166 A:middle
will sign in or sign up, and the

00:23:53.166 --> 00:23:54.706 A:middle
next time the broadcast will

00:23:54.706 --> 00:23:55.246 A:middle
just work.

00:23:57.236 --> 00:23:59.566 A:middle
So we have this code sample for

00:23:59.686 --> 00:24:01.736 A:middle
the broadcastStarted before, and


00:23:59.686 --> 00:24:01.736 A:middle
the broadcastStarted before, and

00:24:01.846 --> 00:24:03.466 A:middle
here I want to show you how do

00:24:03.466 --> 00:24:04.836 A:middle
you handle this case when user

00:24:04.836 --> 00:24:05.726 A:middle
is not logged in.

00:24:06.326 --> 00:24:07.946 A:middle
So there's a function called

00:24:08.316 --> 00:24:11.416 A:middle
finishBroadcastWithError, and

00:24:11.416 --> 00:24:13.246 A:middle
what you need to do is provide

00:24:14.146 --> 00:24:15.746 A:middle
the user info dictionary with a

00:24:15.746 --> 00:24:18.966 A:middle
failure reason and ReplayKit is

00:24:18.966 --> 00:24:20.916 A:middle
going to use that string and

00:24:20.916 --> 00:24:22.346 A:middle
allow that is shown after the

00:24:22.346 --> 00:24:22.976 A:middle
session is stopped.

00:24:29.686 --> 00:24:34.246 A:middle
Okay. This is how you develop

00:24:34.246 --> 00:24:36.906 A:middle
the broadcast extension, and as

00:24:36.906 --> 00:24:39.076 A:middle
you see, the process is pretty

00:24:39.076 --> 00:24:39.726 A:middle
straightforward.

00:24:40.296 --> 00:24:42.736 A:middle
The application handles the

00:24:42.736 --> 00:24:44.786 A:middle
broadcast setup and then

00:24:44.786 --> 00:24:45.616 A:middle
communicates that info to the

00:24:45.616 --> 00:24:45.976 A:middle
extension.

00:24:50.366 --> 00:24:52.396 A:middle
And after that the session

00:24:52.396 --> 00:24:53.756 A:middle
starts and you receive and

00:24:53.756 --> 00:24:56.086 A:middle
encode the media samples.

00:24:56.876 --> 00:24:58.226 A:middle
And also, you can get

00:24:58.226 --> 00:24:59.696 A:middle
information about application on

00:24:59.696 --> 00:25:00.906 A:middle
the screen so the viewers could


00:24:59.696 --> 00:25:00.906 A:middle
the screen so the viewers could

00:25:01.276 --> 00:25:03.726 A:middle
find your broadcast.

00:25:05.016 --> 00:25:06.896 A:middle
And so just one more point I

00:25:06.896 --> 00:25:08.476 A:middle
would like to discuss today.

00:25:10.136 --> 00:25:12.726 A:middle
This is protecting content of

00:25:12.726 --> 00:25:13.546 A:middle
your applications.

00:25:14.816 --> 00:25:17.116 A:middle
So your app may display some

00:25:17.286 --> 00:25:18.736 A:middle
content that you don't want to

00:25:18.736 --> 00:25:21.526 A:middle
be captured in screen recording

00:25:21.646 --> 00:25:23.076 A:middle
or live broadcasts.

00:25:24.186 --> 00:25:26.436 A:middle
That applies to both audio and

00:25:26.436 --> 00:25:28.296 A:middle
visual content.

00:25:29.716 --> 00:25:31.616 A:middle
There's an API that you can use

00:25:31.616 --> 00:25:33.796 A:middle
to tell if your content is being

00:25:33.796 --> 00:25:35.926 A:middle
captured and that API is

00:25:35.926 --> 00:25:38.926 A:middle
provided UIKit framework and I'm

00:25:38.926 --> 00:25:40.476 A:middle
talking about the property of

00:25:40.506 --> 00:25:42.706 A:middle
UIScreen called Captured.

00:25:43.096 --> 00:25:45.496 A:middle
So you can register to receive

00:25:45.496 --> 00:25:47.416 A:middle
notifications whenever the value

00:25:47.416 --> 00:25:50.056 A:middle
of this property is changed and

00:25:50.226 --> 00:25:52.166 A:middle
stop your audio playback or hide

00:25:52.166 --> 00:25:54.796 A:middle
the visual content when

00:25:54.796 --> 00:25:55.606 A:middle
recording starts.

00:25:56.796 --> 00:25:58.726 A:middle
There's also a special case that

00:25:58.726 --> 00:26:00.556 A:middle
you need to take care of, which


00:25:58.726 --> 00:26:00.556 A:middle
you need to take care of, which

00:26:00.556 --> 00:26:03.886 A:middle
is Airplay Screen Mirroring, and

00:26:04.226 --> 00:26:05.386 A:middle
I would like to show you how you

00:26:05.386 --> 00:26:07.236 A:middle
could do this using this code

00:26:07.236 --> 00:26:08.956 A:middle
example for the notification

00:26:08.956 --> 00:26:09.496 A:middle
handler.

00:26:10.246 --> 00:26:12.796 A:middle
And basically, in the case of a

00:26:12.796 --> 00:26:14.526 A:middle
screen mirroring there's always

00:26:14.566 --> 00:26:16.496 A:middle
more than one screen and this

00:26:16.496 --> 00:26:18.316 A:middle
array called Screens is going to

00:26:18.316 --> 00:26:20.506 A:middle
have more than one element, and

00:26:20.786 --> 00:26:22.776 A:middle
even though that isCaptured is

00:26:22.776 --> 00:26:24.686 A:middle
going to return yes during the

00:26:24.686 --> 00:26:26.906 A:middle
screen mirroring session, we

00:26:26.906 --> 00:26:28.506 A:middle
have this extra check that will

00:26:28.506 --> 00:26:30.386 A:middle
allow your playback to continue.

00:26:30.896 --> 00:26:36.116 A:middle
So this is the Live Screen

00:26:36.556 --> 00:26:37.826 A:middle
Broadcast and how it really

00:26:37.826 --> 00:26:38.316 A:middle
works.

00:26:38.316 --> 00:26:41.266 A:middle
And to summarize, ReplayKit

00:26:41.266 --> 00:26:42.966 A:middle
provides high level API that

00:26:42.966 --> 00:26:44.696 A:middle
allows your broadcast content of

00:26:44.696 --> 00:26:47.736 A:middle
just one app or all your

00:26:47.736 --> 00:26:48.716 A:middle
onscreen activity.

00:26:50.116 --> 00:26:53.416 A:middle
In iOS 12 we provide you an API

00:26:53.936 --> 00:26:55.466 A:middle
or a way to initiate the system

00:26:55.466 --> 00:26:57.126 A:middle
broadcast directly from your

00:26:57.126 --> 00:26:58.306 A:middle
broadcast application.

00:26:59.756 --> 00:27:01.756 A:middle
And what you actually need to


00:26:59.756 --> 00:27:01.756 A:middle
And what you actually need to

00:27:01.756 --> 00:27:03.876 A:middle
code is a broadcast extension

00:27:04.166 --> 00:27:06.206 A:middle
that does all the actual work of

00:27:06.206 --> 00:27:08.906 A:middle
encoding the video.

00:27:09.026 --> 00:27:11.126 A:middle
And also, we just discussed the

00:27:11.126 --> 00:27:12.696 A:middle
way to protect the content of

00:27:12.696 --> 00:27:12.936 A:middle
your apps.

00:27:17.336 --> 00:27:19.146 A:middle
You can find more information on

00:27:19.146 --> 00:27:21.606 A:middle
the website of our talk and we

00:27:21.606 --> 00:27:22.966 A:middle
also will be having the

00:27:22.966 --> 00:27:25.156 A:middle
ReplayKit labs later today at

00:27:25.156 --> 00:27:26.716 A:middle
3:00 p.m. in the Technology Lab

00:27:26.806 --> 00:27:28.716 A:middle
5, so if you have any questions

00:27:28.766 --> 00:27:30.396 A:middle
or comments, please come.

00:27:30.396 --> 00:27:31.586 A:middle
We'd love to hear from you.

00:27:33.596 --> 00:27:35.436 A:middle
So thank you so much for being

00:27:35.436 --> 00:27:36.806 A:middle
here with us today.

00:27:36.936 --> 00:27:38.116 A:middle
We are really excited of

00:27:38.116 --> 00:27:40.036 A:middle
bringing you the new approach

00:27:40.636 --> 00:27:42.376 A:middle
for live stream broadcast in iOS

00:27:42.376 --> 00:27:44.356 A:middle
and looking forward to see test

00:27:44.356 --> 00:27:46.026 A:middle
applications adopting it.

00:27:46.616 --> 00:27:49.096 A:middle
So please go ahead, create your

00:27:49.156 --> 00:27:51.186 A:middle
first broadcast extension using

00:27:51.186 --> 00:27:53.356 A:middle
the Xcode template, or open your

00:27:53.356 --> 00:27:56.026 A:middle
existing project and add the

00:27:56.276 --> 00:27:58.426 A:middle
broadcast picker to your app and

00:27:58.426 --> 00:27:59.866 A:middle
enable live stream broadcast


00:28:00.106 --> 00:28:02.256 A:middle
from iOS to your platform today.

00:28:02.256 --> 00:28:02.976 A:middle
Thank you.

00:28:03.508 --> 00:28:05.508 A:middle
[ Applause ]
